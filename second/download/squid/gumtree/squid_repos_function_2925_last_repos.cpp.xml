<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2925_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">purgeDoPurgeHead<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><name pos:line="2" pos:column="38">StoreEntry<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">newEntry<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">newEntry<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&amp;&amp;<pos:position pos:line="4" pos:column="28"/></operator> <operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><call><name><name pos:line="4" pos:column="22">newEntry<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">isNull<pos:position pos:line="4" pos:column="38"/></name></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41"> <block pos:line="4" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">88<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">4<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"HEAD "<pos:position pos:line="5" pos:column="30"/></literal> <operator pos:line="5" pos:column="31">&lt;&lt;<pos:position pos:line="5" pos:column="39"/></operator> <call><name><name pos:line="5" pos:column="34">newEntry<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">url<pos:position pos:line="5" pos:column="47"/></name></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_HTCP<pos:position pos:line="6" pos:column="13"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">neighborsHtcpClear<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">newEntry<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="44">http<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">request<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="59">HttpRequestMethod<pos:position pos:line="7" pos:column="76"/></name><argument_list pos:line="7" pos:column="76">(<argument><expr><name><name pos:line="7" pos:column="77">Http<pos:position pos:line="7" pos:column="81"/></name><operator pos:line="7" pos:column="81">::<pos:position pos:line="7" pos:column="83"/></operator><name pos:line="7" pos:column="83">METHOD_HEAD<pos:position pos:line="7" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="95"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="97">HTCP_CLR_PURGE<pos:position pos:line="7" pos:column="111"/></name></expr></argument>)<pos:position pos:line="7" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="113"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">newEntry<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">release<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">purgeStatus<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name><name pos:line="10" pos:column="23">Http<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">::<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">scOkay<pos:position pos:line="10" pos:column="35"/></name></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* And for Vary, release the base URI if none of the headers was included in the request */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name><name pos:line="14" pos:column="10">http<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">request<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">vary_headers<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">isEmpty<pos:position pos:line="14" pos:column="45"/></name></name><argument_list pos:line="14" pos:column="45">()<pos:position pos:line="14" pos:column="47"/></argument_list></call>
            <operator pos:line="15" pos:column="13">&amp;&amp;<pos:position pos:line="15" pos:column="23"/></operator> <call><name><name pos:line="15" pos:column="16">http<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">request<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">vary_headers<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">.<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">find<pos:position pos:line="15" pos:column="48"/></name></name><argument_list pos:line="15" pos:column="48">(<argument><expr><literal type="char" pos:line="15" pos:column="49">'='<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call> <operator pos:line="15" pos:column="54">!=<pos:position pos:line="15" pos:column="56"/></operator> <name><name pos:line="15" pos:column="57">SBuf<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">::<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="63">npos<pos:position pos:line="15" pos:column="67"/></name></name></expr>)<pos:position pos:line="15" pos:column="68"/></condition><then pos:line="15" pos:column="68"> <block pos:line="15" pos:column="69">{
        <comment type="line" pos:line="16" pos:column="9">// XXX: performance regression, c_str() reallocates</comment>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">SBuf<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">tmp<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><call><name><name pos:line="17" pos:column="18">http<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">request<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">effectiveRequestUri<pos:position pos:line="17" pos:column="52"/></name></name><argument_list pos:line="17" pos:column="52">()<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">StoreEntry<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">entry<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><call><name pos:line="18" pos:column="29">storeGetPublic<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><call><name><name pos:line="18" pos:column="44">tmp<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">c_str<pos:position pos:line="18" pos:column="53"/></name></name><argument_list pos:line="18" pos:column="53">()<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="57">Http<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">::<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">METHOD_GET<pos:position pos:line="18" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="75"/></decl_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">entry<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">88<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">4<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"Vary GET "<pos:position pos:line="21" pos:column="38"/></literal> <operator pos:line="21" pos:column="39">&lt;&lt;<pos:position pos:line="21" pos:column="47"/></operator> <call><name><name pos:line="21" pos:column="42">entry<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">url<pos:position pos:line="21" pos:column="52"/></name></name><argument_list pos:line="21" pos:column="52">()<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">USE_HTCP<pos:position pos:line="22" pos:column="13"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">neighborsHtcpClear<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">entry<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="45">http<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">request<pos:position pos:line="23" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="60">HttpRequestMethod<pos:position pos:line="23" pos:column="77"/></name><argument_list pos:line="23" pos:column="77">(<argument><expr><name><name pos:line="23" pos:column="78">Http<pos:position pos:line="23" pos:column="82"/></name><operator pos:line="23" pos:column="82">::<pos:position pos:line="23" pos:column="84"/></operator><name pos:line="23" pos:column="84">METHOD_GET<pos:position pos:line="23" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="95"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="97">HTCP_CLR_PURGE<pos:position pos:line="23" pos:column="111"/></name></expr></argument>)<pos:position pos:line="23" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="113"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">entry<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">release<pos:position pos:line="25" pos:column="27"/></name></name><argument_list pos:line="25" pos:column="27">()<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">purgeStatus<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">Http<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">::<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">scOkay<pos:position pos:line="26" pos:column="39"/></name></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="29" pos:column="9">entry<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">storeGetPublic<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><call><name><name pos:line="29" pos:column="32">tmp<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">.<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">c_str<pos:position pos:line="29" pos:column="41"/></name></name><argument_list pos:line="29" pos:column="41">()<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="45">Http<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">::<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">METHOD_HEAD<pos:position pos:line="29" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">entry<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">88<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="24">4<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"Vary HEAD "<pos:position pos:line="32" pos:column="39"/></literal> <operator pos:line="32" pos:column="40">&lt;&lt;<pos:position pos:line="32" pos:column="48"/></operator> <call><name><name pos:line="32" pos:column="43">entry<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">url<pos:position pos:line="32" pos:column="53"/></name></name><argument_list pos:line="32" pos:column="53">()<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">USE_HTCP<pos:position pos:line="33" pos:column="13"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">neighborsHtcpClear<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">entry<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">NULL<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">http<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">request<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="60">HttpRequestMethod<pos:position pos:line="34" pos:column="77"/></name><argument_list pos:line="34" pos:column="77">(<argument><expr><name><name pos:line="34" pos:column="78">Http<pos:position pos:line="34" pos:column="82"/></name><operator pos:line="34" pos:column="82">::<pos:position pos:line="34" pos:column="84"/></operator><name pos:line="34" pos:column="84">METHOD_HEAD<pos:position pos:line="34" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="96"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="98">HTCP_CLR_PURGE<pos:position pos:line="34" pos:column="112"/></name></expr></argument>)<pos:position pos:line="34" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="114"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">entry<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">release<pos:position pos:line="36" pos:column="27"/></name></name><argument_list pos:line="36" pos:column="27">()<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">purgeStatus<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name><name pos:line="37" pos:column="27">Http<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">::<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">scOkay<pos:position pos:line="37" pos:column="39"/></name></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/*
     * Make a new entry to hold the reply to be written
     * to the client.
     */</comment>
    <comment type="block" pos:line="45" pos:column="5">/* FIXME: This doesn't need to go through the store. Simply
     * push down the client chain
     */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">createStoreEntry<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name><name pos:line="48" pos:column="22">http<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">request<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">method<pos:position pos:line="48" pos:column="43"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="45">RequestFlags<pos:position pos:line="48" pos:column="57"/></name><argument_list pos:line="48" pos:column="57">()<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">triggerInitialStoreRead<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">()<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="52" pos:column="5">HttpReply<pos:position pos:line="52" pos:column="14"/></name> <modifier pos:line="52" pos:column="15">*<pos:position pos:line="52" pos:column="16"/></modifier></type><name pos:line="52" pos:column="16">rep<pos:position pos:line="52" pos:column="19"/></name> <init pos:line="52" pos:column="20">= <expr><operator pos:line="52" pos:column="22">new<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">HttpReply<pos:position pos:line="52" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="53" pos:column="5">rep<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">setHeaders<pos:position pos:line="53" pos:column="20"/></name></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">purgeStatus<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">NULL<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">NULL<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="46">0<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="49">0<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="52">-<pos:position pos:line="53" pos:column="53"/></operator><literal type="number" pos:line="53" pos:column="53">1<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="54" pos:column="5">http<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">storeEntry<pos:position pos:line="54" pos:column="21"/></name></name><argument_list pos:line="54" pos:column="21">()<pos:position pos:line="54" pos:column="23"/></argument_list></call><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><call><name pos:line="54" pos:column="25">replaceHttpReply<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">rep<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">http<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">storeEntry<pos:position pos:line="55" pos:column="21"/></name></name><argument_list pos:line="55" pos:column="21">()<pos:position pos:line="55" pos:column="23"/></argument_list></call><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><call><name pos:line="55" pos:column="25">complete<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">()<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6231_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Eui<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Eui64<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">decode<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">asc<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">eui64_aton<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">asc<pos:position pos:line="4" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator>struct <name pos:line="4" pos:column="33">eui64<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">eui<pos:position pos:line="4" pos:column="44"/></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call> <operator pos:line="4" pos:column="46">!=<pos:position pos:line="4" pos:column="48"/></operator> <literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51"> <block pos:line="4" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">28<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">4<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"id="<pos:position pos:line="5" pos:column="28"/></literal> <operator pos:line="5" pos:column="29">&lt;&lt;<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">void<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">this<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">&lt;&lt;<pos:position pos:line="5" pos:column="52"/></operator> <literal type="string" pos:line="5" pos:column="47">" decode fail on "<pos:position pos:line="5" pos:column="65"/></literal> <operator pos:line="5" pos:column="66">&lt;&lt;<pos:position pos:line="5" pos:column="74"/></operator> <name pos:line="5" pos:column="69">asc<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="74"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">28<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">4<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"id="<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="25">&lt;&lt;<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">void<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">this<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">&lt;&lt;<pos:position pos:line="9" pos:column="48"/></operator> <literal type="string" pos:line="9" pos:column="43">" ATON decoded "<pos:position pos:line="9" pos:column="59"/></literal> <operator pos:line="9" pos:column="60">&lt;&lt;<pos:position pos:line="9" pos:column="68"/></operator> <name pos:line="9" pos:column="63">asc<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><literal type="boolean" pos:line="10" pos:column="12">true<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

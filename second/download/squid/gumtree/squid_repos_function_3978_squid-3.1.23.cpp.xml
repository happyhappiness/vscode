<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3978_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">disableRetries<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">()<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">5<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">typeName<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">&lt;&lt;<pos:position pos:line="3" pos:column="35"/></operator> <operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><ternary><condition><expr><name pos:line="3" pos:column="31">isRetriable<pos:position pos:line="3" pos:column="42"/></name></expr> ?<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <expr><literal type="string" pos:line="3" pos:column="45">" from now on"<pos:position pos:line="3" pos:column="59"/></literal></expr> <pos:position pos:line="3" pos:column="60"/></then><else pos:line="3" pos:column="60">: <expr><literal type="string" pos:line="3" pos:column="62">" still"<pos:position pos:line="3" pos:column="70"/></literal></expr></else></ternary><operator pos:line="3" pos:column="70">)<pos:position pos:line="3" pos:column="71"/></operator> <operator pos:line="3" pos:column="72">&lt;&lt;<pos:position pos:line="3" pos:column="80"/></operator>
           <literal type="string" pos:line="4" pos:column="12">" cannot be retried "<pos:position pos:line="4" pos:column="33"/></literal> <operator pos:line="4" pos:column="34">&lt;&lt;<pos:position pos:line="4" pos:column="42"/></operator> <call><name pos:line="4" pos:column="37">status<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">()<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">isRetriable<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="boolean" pos:line="5" pos:column="19">false<pos:position pos:line="5" pos:column="24"/></literal></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

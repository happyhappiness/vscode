<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7962_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">recvfrom<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">s<pos:position pos:line="2" pos:column="15"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">b<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">size_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">l<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">f<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">sockaddr<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type> <name pos:line="2" pos:column="62">fr<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">socklen_t<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type> <name pos:line="2" pos:column="78">fl<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ssize_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">result<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ifl<pos:position pos:line="5" pos:column="12"/></name><init pos:line="5" pos:column="12">=<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">fl<pos:position pos:line="5" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">result<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <call><name><operator pos:line="6" pos:column="19">::<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">recvfrom<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">(<argument><expr><call><name pos:line="6" pos:column="30">_get_osfhandle<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">s<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="49">(<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">char<pos:position pos:line="6" pos:column="54"/></name> <operator pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></operator><operator pos:line="6" pos:column="56">)<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">b<pos:position pos:line="6" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">l<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">f<pos:position pos:line="6" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="66">fr<pos:position pos:line="6" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="70">&amp;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="71">ifl<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call><operator pos:line="6" pos:column="75">)<pos:position pos:line="6" pos:column="76"/></operator> <operator pos:line="6" pos:column="77">==<pos:position pos:line="6" pos:column="79"/></operator> <name pos:line="6" pos:column="80">SOCKET_ERROR<pos:position pos:line="6" pos:column="92"/></name></expr>)<pos:position pos:line="6" pos:column="93"/></condition><then pos:line="6" pos:column="93"> <block pos:line="6" pos:column="94">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">errno<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">WSAGetLastError<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">result<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></return></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

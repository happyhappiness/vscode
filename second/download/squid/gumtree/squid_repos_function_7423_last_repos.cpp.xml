<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7423_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">CreateSession<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name><name pos:line="2" pos:column="21">Security<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">ContextPointer<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">ctx<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name><name pos:line="2" pos:column="58">Comm<pos:position pos:line="2" pos:column="62"/></name><operator pos:line="2" pos:column="62">::<pos:position pos:line="2" pos:column="64"/></operator><name pos:line="2" pos:column="64">ConnectionPointer<pos:position pos:line="2" pos:column="81"/></name></name> <modifier pos:line="2" pos:column="82">&amp;<pos:position pos:line="2" pos:column="87"/></modifier></type><name pos:line="2" pos:column="83">conn<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="89">Security<pos:position pos:line="2" pos:column="97"/></name><operator pos:line="2" pos:column="97">::<pos:position pos:line="2" pos:column="99"/></operator><name pos:line="2" pos:column="99">Io<pos:position pos:line="2" pos:column="101"/></name><operator pos:line="2" pos:column="101">::<pos:position pos:line="2" pos:column="103"/></operator><name pos:line="2" pos:column="103">Type<pos:position pos:line="2" pos:column="107"/></name></name></type> <name pos:line="2" pos:column="108">type<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="114">const<pos:position pos:line="2" pos:column="119"/></specifier> <name pos:line="2" pos:column="120">char<pos:position pos:line="2" pos:column="124"/></name> <modifier pos:line="2" pos:column="125">*<pos:position pos:line="2" pos:column="126"/></modifier></type><name pos:line="2" pos:column="126">squidCtx<pos:position pos:line="2" pos:column="134"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="135"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Comm<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">IsConnOpen<pos:position pos:line="4" pos:column="26"/></name></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">conn<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">83<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">DBG_IMPORTANT<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="35">"Gone connection"<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">USE_OPENSSL<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">||<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">USE_GNUTLS<pos:position pos:line="9" pos:column="30"/></name></expr></cpp:if>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">errAction<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="string" pos:line="11" pos:column="29">"with no TLS/SSL library"<pos:position pos:line="11" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">errCode<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">USE_OPENSSL<pos:position pos:line="13" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">Security<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">::<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">SessionPointer<pos:position pos:line="14" pos:column="29"/></name></name></type> <name pos:line="14" pos:column="30">session<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><call><name><name pos:line="14" pos:column="38">Security<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">::<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">NewSessionObject<pos:position pos:line="14" pos:column="64"/></name></name><argument_list pos:line="14" pos:column="64">(<argument><expr><name pos:line="14" pos:column="65">ctx<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></decl>;<pos:position pos:line="14" pos:column="71"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">session<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <block pos:line="15" pos:column="19">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">errCode<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">ERR_get_error<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">()<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">errAction<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="string" pos:line="17" pos:column="21">"failed to allocate handle"<pos:position pos:line="17" pos:column="48"/></literal></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:elif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">elif<pos:position pos:line="19" pos:column="6"/></cpp:directive> <expr><name pos:line="19" pos:column="7">USE_GNUTLS<pos:position pos:line="19" pos:column="17"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">gnutls_session_t<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">tmp<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">errCode<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">gnutls_init<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">tmp<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="21" pos:column="33">static_cast<argument_list type="generic" pos:line="21" pos:column="44">&lt;<argument><expr><name pos:line="21" pos:column="45">unsigned<pos:position pos:line="21" pos:column="53"/></name> <name pos:line="21" pos:column="54">int<pos:position pos:line="21" pos:column="57"/></name></expr></argument>&gt;<pos:position pos:line="21" pos:column="61"/></argument_list><argument_list pos:line="21" pos:column="58">(<argument><expr><name pos:line="21" pos:column="59">type<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></cast> <operator pos:line="21" pos:column="65">|<pos:position pos:line="21" pos:column="66"/></operator> <name pos:line="21" pos:column="67">GNUTLS_NONBLOCK<pos:position pos:line="21" pos:column="82"/></name></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">Security<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">::<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">SessionPointer<pos:position pos:line="22" pos:column="29"/></name></name></type> <name pos:line="22" pos:column="30">session<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">tmp<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><lambda><capture pos:line="22" pos:column="43">[]<pos:position pos:line="22" pos:column="45"/></capture><parameter_list pos:line="22" pos:column="45">(<parameter><decl><type><name pos:line="22" pos:column="46">gnutls_session_t<pos:position pos:line="22" pos:column="62"/></name></type> <name pos:line="22" pos:column="63">p<pos:position pos:line="22" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="22" pos:column="65"/></parameter_list> <block pos:line="22" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">83<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">5<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"gnutls_deinit session="<pos:position pos:line="23" pos:column="47"/></literal> <operator pos:line="23" pos:column="48">&lt;&lt;<pos:position pos:line="23" pos:column="56"/></operator> <operator pos:line="23" pos:column="51">(<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">void<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></operator><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="58">p<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">gnutls_deinit<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">p<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></lambda></expr></argument>)<pos:position pos:line="25" pos:column="7"/></argument_list></decl>;<pos:position pos:line="25" pos:column="8"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">83<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">5<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"gnutls_init "<pos:position pos:line="26" pos:column="33"/></literal> <operator pos:line="26" pos:column="34">&lt;&lt;<pos:position pos:line="26" pos:column="42"/></operator> <operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><ternary><condition><expr><name pos:line="26" pos:column="38">type<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">==<pos:position pos:line="26" pos:column="45"/></operator> <name><name pos:line="26" pos:column="46">Security<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">::<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">Io<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">::<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="60">BIO_TO_SERVER<pos:position pos:line="26" pos:column="73"/></name></name></expr> ?<pos:position pos:line="26" pos:column="75"/></condition><then pos:line="26" pos:column="75"> <expr><literal type="string" pos:line="26" pos:column="76">"client"<pos:position pos:line="26" pos:column="84"/></literal></expr> <pos:position pos:line="26" pos:column="85"/></then><else pos:line="26" pos:column="85">: <expr><literal type="string" pos:line="26" pos:column="87">"server"<pos:position pos:line="26" pos:column="95"/></literal></expr></else></ternary> <operator pos:line="26" pos:column="96">)<pos:position pos:line="26" pos:column="97"/></operator><operator pos:line="26" pos:column="97">&lt;&lt;<pos:position pos:line="26" pos:column="105"/></operator> <literal type="string" pos:line="26" pos:column="100">" session="<pos:position pos:line="26" pos:column="111"/></literal> <operator pos:line="26" pos:column="112">&lt;&lt;<pos:position pos:line="26" pos:column="120"/></operator> <operator pos:line="26" pos:column="115">(<pos:position pos:line="26" pos:column="116"/></operator><name pos:line="26" pos:column="116">void<pos:position pos:line="26" pos:column="120"/></name><operator pos:line="26" pos:column="120">*<pos:position pos:line="26" pos:column="121"/></operator><operator pos:line="26" pos:column="121">)<pos:position pos:line="26" pos:column="122"/></operator><call><name><name pos:line="26" pos:column="122">session<pos:position pos:line="26" pos:column="129"/></name><operator pos:line="26" pos:column="129">.<pos:position pos:line="26" pos:column="130"/></operator><name pos:line="26" pos:column="130">get<pos:position pos:line="26" pos:column="133"/></name></name><argument_list pos:line="26" pos:column="133">()<pos:position pos:line="26" pos:column="135"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="137"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">errCode<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">!=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">GNUTLS_E_SUCCESS<pos:position pos:line="27" pos:column="36"/></name></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
        <expr_stmt><expr><call><name><name pos:line="28" pos:column="9">session<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">reset<pos:position pos:line="28" pos:column="22"/></name></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">errAction<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="string" pos:line="29" pos:column="21">"failed to initialize session"<pos:position pos:line="29" pos:column="51"/></literal></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">session<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block pos:line="33" pos:column="18">{
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">int<pos:position pos:line="34" pos:column="18"/></name></type> <name pos:line="34" pos:column="19">fd<pos:position pos:line="34" pos:column="21"/></name> <init pos:line="34" pos:column="22">= <expr><name><name pos:line="34" pos:column="24">conn<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">fd<pos:position pos:line="34" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="33"/></decl_stmt>

<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><name pos:line="36" pos:column="5">USE_OPENSSL<pos:position pos:line="36" pos:column="16"/></name></expr></cpp:if>
        <comment type="line" pos:line="37" pos:column="9">// without BIO, we would call SSL_set_fd(ssl.get(), fd) instead</comment>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<decl><type><name pos:line="38" pos:column="13">BIO<pos:position pos:line="38" pos:column="16"/></name> <modifier pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></modifier></type><name pos:line="38" pos:column="18">bio<pos:position pos:line="38" pos:column="21"/></name> <init pos:line="38" pos:column="22">= <expr><call><name><name pos:line="38" pos:column="24">Ssl<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">::<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">Bio<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">::<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">Create<pos:position pos:line="38" pos:column="40"/></name></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">fd<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">type<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr></init></decl>)<pos:position pos:line="38" pos:column="51"/></condition><then pos:line="38" pos:column="51"> <block pos:line="38" pos:column="52">{
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Ssl<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">::<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">Bio<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">::<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">Link<pos:position pos:line="39" pos:column="27"/></name></name><argument_list pos:line="39" pos:column="27">(<argument><expr><call><name><name pos:line="39" pos:column="28">session<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">.<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="36">get<pos:position pos:line="39" pos:column="39"/></name></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">bio<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt> <comment type="line" pos:line="39" pos:column="49">// cannot fail</comment>
<cpp:elif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">elif<pos:position pos:line="40" pos:column="6"/></cpp:directive> <expr><name pos:line="40" pos:column="7">USE_GNUTLS<pos:position pos:line="40" pos:column="17"/></name></expr></cpp:elif>
        <expr_stmt><expr><name pos:line="41" pos:column="9">errCode<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">gnutls_credentials_set<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><call><name><name pos:line="41" pos:column="42">session<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">.<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="50">get<pos:position pos:line="41" pos:column="53"/></name></name><argument_list pos:line="41" pos:column="53">()<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="57">GNUTLS_CRD_CERTIFICATE<pos:position pos:line="41" pos:column="79"/></name></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="81">ctx<pos:position pos:line="41" pos:column="84"/></name><operator pos:line="41" pos:column="84">.<pos:position pos:line="41" pos:column="85"/></operator><name pos:line="41" pos:column="85">get<pos:position pos:line="41" pos:column="88"/></name></name><argument_list pos:line="41" pos:column="88">()<pos:position pos:line="41" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="92"/></expr_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">errCode<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">GNUTLS_E_SUCCESS<pos:position pos:line="42" pos:column="40"/></name></expr>)<pos:position pos:line="42" pos:column="41"/></condition><then pos:line="42" pos:column="41"> <block pos:line="42" pos:column="42">{

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">auto<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">peer<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <call><name><name pos:line="44" pos:column="30">conn<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">getPeer<pos:position pos:line="44" pos:column="43"/></name></name><argument_list pos:line="44" pos:column="43">()<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="45" pos:column="17">peer<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">secure<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">updateSessionOptions<pos:position pos:line="45" pos:column="50"/></name></name><argument_list pos:line="45" pos:column="50">(<argument><expr><name pos:line="45" pos:column="51">session<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt></block></then>
            <else pos:line="46" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="47" pos:column="17">Security<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">::<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">ProxyOutgoingConfig<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">.<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="47">updateSessionOptions<pos:position pos:line="47" pos:column="67"/></name></name><argument_list pos:line="47" pos:column="67">(<argument><expr><name pos:line="47" pos:column="68">session<pos:position pos:line="47" pos:column="75"/></name></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="77"/></expr_stmt></block></else></if>

            <comment type="line" pos:line="49" pos:column="13">// NP: GnuTLS does not yet support the BIO operations</comment>
            <comment type="line" pos:line="50" pos:column="13">//     this does the equivalent of SSL_set_fd() for now.</comment>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">gnutls_transport_set_int<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><call><name><name pos:line="51" pos:column="38">session<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">.<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">get<pos:position pos:line="51" pos:column="49"/></name></name><argument_list pos:line="51" pos:column="49">()<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">fd<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">gnutls_handshake_set_timeout<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><call><name><name pos:line="52" pos:column="42">session<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">.<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">get<pos:position pos:line="52" pos:column="53"/></name></name><argument_list pos:line="52" pos:column="53">()<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">GNUTLS_DEFAULT_HANDSHAKE_TIMEOUT<pos:position pos:line="52" pos:column="89"/></name></expr></argument>)<pos:position pos:line="52" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="91"/></expr_stmt>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

            <expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">83<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="24">5<pos:position pos:line="55" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="27">"link FD "<pos:position pos:line="55" pos:column="37"/></literal> <operator pos:line="55" pos:column="38">&lt;&lt;<pos:position pos:line="55" pos:column="46"/></operator> <name pos:line="55" pos:column="41">fd<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">&lt;&lt;<pos:position pos:line="55" pos:column="52"/></operator> <literal type="string" pos:line="55" pos:column="47">" to TLS session="<pos:position pos:line="55" pos:column="65"/></literal> <operator pos:line="55" pos:column="66">&lt;&lt;<pos:position pos:line="55" pos:column="74"/></operator> <operator pos:line="55" pos:column="69">(<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="70">void<pos:position pos:line="55" pos:column="74"/></name><operator pos:line="55" pos:column="74">*<pos:position pos:line="55" pos:column="75"/></operator><operator pos:line="55" pos:column="75">)<pos:position pos:line="55" pos:column="76"/></operator><call><name><name pos:line="55" pos:column="76">session<pos:position pos:line="55" pos:column="83"/></name><operator pos:line="55" pos:column="83">.<pos:position pos:line="55" pos:column="84"/></operator><name pos:line="55" pos:column="84">get<pos:position pos:line="55" pos:column="87"/></name></name><argument_list pos:line="55" pos:column="87">()<pos:position pos:line="55" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">fd_table<pos:position pos:line="56" pos:column="21"/></name><index pos:line="56" pos:column="21">[<expr><name pos:line="56" pos:column="22">fd<pos:position pos:line="56" pos:column="24"/></name></expr>]<pos:position pos:line="56" pos:column="25"/></index></name><operator pos:line="56" pos:column="25">.<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">ssl<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">session<pos:position pos:line="56" pos:column="39"/></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">fd_table<pos:position pos:line="57" pos:column="21"/></name><index pos:line="57" pos:column="21">[<expr><name pos:line="57" pos:column="22">fd<pos:position pos:line="57" pos:column="24"/></name></expr>]<pos:position pos:line="57" pos:column="25"/></index></name><operator pos:line="57" pos:column="25">.<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">read_method<pos:position pos:line="57" pos:column="37"/></name> <operator pos:line="57" pos:column="38">=<pos:position pos:line="57" pos:column="39"/></operator> <operator pos:line="57" pos:column="40">&amp;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="41">tls_read_method<pos:position pos:line="57" pos:column="56"/></name></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">fd_table<pos:position pos:line="58" pos:column="21"/></name><index pos:line="58" pos:column="21">[<expr><name pos:line="58" pos:column="22">fd<pos:position pos:line="58" pos:column="24"/></name></expr>]<pos:position pos:line="58" pos:column="25"/></index></name><operator pos:line="58" pos:column="25">.<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">write_method<pos:position pos:line="58" pos:column="38"/></name> <operator pos:line="58" pos:column="39">=<pos:position pos:line="58" pos:column="40"/></operator> <operator pos:line="58" pos:column="41">&amp;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="42">tls_write_method<pos:position pos:line="58" pos:column="58"/></name></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">fd_note<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">fd<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="25">squidCtx<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><literal type="boolean" pos:line="60" pos:column="20">true<pos:position pos:line="60" pos:column="24"/></literal></expr>;<pos:position pos:line="60" pos:column="25"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

<cpp:if pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">if<pos:position pos:line="63" pos:column="4"/></cpp:directive> <expr><name pos:line="63" pos:column="5">USE_OPENSSL<pos:position pos:line="63" pos:column="16"/></name></expr></cpp:if>
        <expr_stmt><expr><name pos:line="64" pos:column="9">errCode<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <call><name pos:line="64" pos:column="19">ERR_get_error<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">()<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">errAction<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <literal type="string" pos:line="65" pos:column="21">"failed to initialize I/O"<pos:position pos:line="65" pos:column="47"/></literal></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
<cpp:elif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">elif<pos:position pos:line="66" pos:column="6"/></cpp:directive> <expr><name pos:line="66" pos:column="7">USE_GNUTLS<pos:position pos:line="66" pos:column="17"/></name></expr></cpp:elif>
        <expr_stmt><expr><name pos:line="67" pos:column="9">errAction<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <literal type="string" pos:line="67" pos:column="21">"failed to assign credentials"<pos:position pos:line="67" pos:column="51"/></literal></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">debugs<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><literal type="number" pos:line="71" pos:column="12">83<pos:position pos:line="71" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="16">DBG_IMPORTANT<pos:position pos:line="71" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="31">"ERROR: "<pos:position pos:line="71" pos:column="40"/></literal> <operator pos:line="71" pos:column="41">&lt;&lt;<pos:position pos:line="71" pos:column="49"/></operator> <name pos:line="71" pos:column="44">squidCtx<pos:position pos:line="71" pos:column="52"/></name> <operator pos:line="71" pos:column="53">&lt;&lt;<pos:position pos:line="71" pos:column="61"/></operator> <literal type="char" pos:line="71" pos:column="56">' '<pos:position pos:line="71" pos:column="59"/></literal> <operator pos:line="71" pos:column="60">&lt;&lt;<pos:position pos:line="71" pos:column="68"/></operator> <name pos:line="71" pos:column="63">errAction<pos:position pos:line="71" pos:column="72"/></name> <operator pos:line="71" pos:column="73">&lt;&lt;<pos:position pos:line="71" pos:column="81"/></operator>
           <literal type="string" pos:line="72" pos:column="12">": "<pos:position pos:line="72" pos:column="16"/></literal> <operator pos:line="72" pos:column="17">&lt;&lt;<pos:position pos:line="72" pos:column="25"/></operator> <operator pos:line="72" pos:column="20">(<pos:position pos:line="72" pos:column="21"/></operator><ternary><condition><expr><name pos:line="72" pos:column="21">errCode<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">!=<pos:position pos:line="72" pos:column="31"/></operator> <literal type="number" pos:line="72" pos:column="32">0<pos:position pos:line="72" pos:column="33"/></literal></expr> ?<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <expr><call><name><name pos:line="72" pos:column="36">Security<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">::<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="46">ErrorString<pos:position pos:line="72" pos:column="57"/></name></name><argument_list pos:line="72" pos:column="57">(<argument><expr><name pos:line="72" pos:column="58">errCode<pos:position pos:line="72" pos:column="65"/></name></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr> <pos:position pos:line="72" pos:column="67"/></then><else pos:line="72" pos:column="67">: <expr><literal type="string" pos:line="72" pos:column="69">""<pos:position pos:line="72" pos:column="71"/></literal></expr></else></ternary><operator pos:line="72" pos:column="71">)<pos:position pos:line="72" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="74" pos:column="5">return <expr><literal type="boolean" pos:line="74" pos:column="12">false<pos:position pos:line="74" pos:column="17"/></literal></expr>;<pos:position pos:line="74" pos:column="18"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></then></if>

<function><type><name pos:line="77" pos:column="1">bool<pos:position pos:line="77" pos:column="5"/></name></type>
<name><name pos:line="78" pos:column="1">Security<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">::<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">CreateClientSession<pos:position pos:line="78" pos:column="30"/></name></name><parameter_list pos:line="78" pos:column="30">(<parameter><decl><type><specifier pos:line="78" pos:column="31">const<pos:position pos:line="78" pos:column="36"/></specifier> <name><name pos:line="78" pos:column="37">Security<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">::<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="47">ContextPointer<pos:position pos:line="78" pos:column="61"/></name></name> <modifier pos:line="78" pos:column="62">&amp;<pos:position pos:line="78" pos:column="67"/></modifier></type><name pos:line="78" pos:column="63">ctx<pos:position pos:line="78" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="78" pos:column="68">const<pos:position pos:line="78" pos:column="73"/></specifier> <name><name pos:line="78" pos:column="74">Comm<pos:position pos:line="78" pos:column="78"/></name><operator pos:line="78" pos:column="78">::<pos:position pos:line="78" pos:column="80"/></operator><name pos:line="78" pos:column="80">ConnectionPointer<pos:position pos:line="78" pos:column="97"/></name></name> <modifier pos:line="78" pos:column="98">&amp;<pos:position pos:line="78" pos:column="103"/></modifier></type><name pos:line="78" pos:column="99">c<pos:position pos:line="78" pos:column="100"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="78" pos:column="102">const<pos:position pos:line="78" pos:column="107"/></specifier> <name pos:line="78" pos:column="108">char<pos:position pos:line="78" pos:column="112"/></name> <modifier pos:line="78" pos:column="113">*<pos:position pos:line="78" pos:column="114"/></modifier></type><name pos:line="78" pos:column="114">squidCtx<pos:position pos:line="78" pos:column="122"/></name></decl></parameter>)<pos:position pos:line="78" pos:column="123"/></parameter_list>
<block pos:line="79" pos:column="1">{
    <return pos:line="80" pos:column="5">return <expr><call><name pos:line="80" pos:column="12">CreateSession<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><name pos:line="80" pos:column="26">ctx<pos:position pos:line="80" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="31">c<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="34">Security<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">::<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="44">Io<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">::<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="48">BIO_TO_SERVER<pos:position pos:line="80" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="63">squidCtx<pos:position pos:line="80" pos:column="71"/></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function>

<function><type><name pos:line="83" pos:column="1">bool<pos:position pos:line="83" pos:column="5"/></name></type>
<name><name pos:line="84" pos:column="1">Security<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">::<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="11">CreateServerSession<pos:position pos:line="84" pos:column="30"/></name></name><parameter_list pos:line="84" pos:column="30">(<parameter><decl><type><specifier pos:line="84" pos:column="31">const<pos:position pos:line="84" pos:column="36"/></specifier> <name><name pos:line="84" pos:column="37">Security<pos:position pos:line="84" pos:column="45"/></name><operator pos:line="84" pos:column="45">::<pos:position pos:line="84" pos:column="47"/></operator><name pos:line="84" pos:column="47">ContextPointer<pos:position pos:line="84" pos:column="61"/></name></name> <modifier pos:line="84" pos:column="62">&amp;<pos:position pos:line="84" pos:column="67"/></modifier></type><name pos:line="84" pos:column="63">ctx<pos:position pos:line="84" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="84" pos:column="68">const<pos:position pos:line="84" pos:column="73"/></specifier> <name><name pos:line="84" pos:column="74">Comm<pos:position pos:line="84" pos:column="78"/></name><operator pos:line="84" pos:column="78">::<pos:position pos:line="84" pos:column="80"/></operator><name pos:line="84" pos:column="80">ConnectionPointer<pos:position pos:line="84" pos:column="97"/></name></name> <modifier pos:line="84" pos:column="98">&amp;<pos:position pos:line="84" pos:column="103"/></modifier></type><name pos:line="84" pos:column="99">c<pos:position pos:line="84" pos:column="100"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="84" pos:column="102">const<pos:position pos:line="84" pos:column="107"/></specifier> <name pos:line="84" pos:column="108">char<pos:position pos:line="84" pos:column="112"/></name> <modifier pos:line="84" pos:column="113">*<pos:position pos:line="84" pos:column="114"/></modifier></type><name pos:line="84" pos:column="114">squidCtx<pos:position pos:line="84" pos:column="122"/></name></decl></parameter>)<pos:position pos:line="84" pos:column="123"/></parameter_list>
<block pos:line="85" pos:column="1">{
    <return pos:line="86" pos:column="5">return <expr><call><name pos:line="86" pos:column="12">CreateSession<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">ctx<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="31">c<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="34">Security<pos:position pos:line="86" pos:column="42"/></name><operator pos:line="86" pos:column="42">::<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="44">Io<pos:position pos:line="86" pos:column="46"/></name><operator pos:line="86" pos:column="46">::<pos:position pos:line="86" pos:column="48"/></operator><name pos:line="86" pos:column="48">BIO_TO_CLIENT<pos:position pos:line="86" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="63">squidCtx<pos:position pos:line="86" pos:column="71"/></name></expr></argument>)<pos:position pos:line="86" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="73"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function>

<function><type><name pos:line="89" pos:column="1">void<pos:position pos:line="89" pos:column="5"/></name></type>
<name><name pos:line="90" pos:column="1">Security<pos:position pos:line="90" pos:column="9"/></name><operator pos:line="90" pos:column="9">::<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">SessionSendGoodbye<pos:position pos:line="90" pos:column="29"/></name></name><parameter_list pos:line="90" pos:column="29">(<parameter><decl><type><specifier pos:line="90" pos:column="30">const<pos:position pos:line="90" pos:column="35"/></specifier> <name><name pos:line="90" pos:column="36">Security<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">::<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="46">SessionPointer<pos:position pos:line="90" pos:column="60"/></name></name> <modifier pos:line="90" pos:column="61">&amp;<pos:position pos:line="90" pos:column="66"/></modifier></type><name pos:line="90" pos:column="62">s<pos:position pos:line="90" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="90" pos:column="64"/></parameter_list>
<block pos:line="91" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">debugs<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">(<argument><expr><literal type="number" pos:line="92" pos:column="12">83<pos:position pos:line="92" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="16">5<pos:position pos:line="92" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="19">"session="<pos:position pos:line="92" pos:column="29"/></literal> <operator pos:line="92" pos:column="30">&lt;&lt;<pos:position pos:line="92" pos:column="38"/></operator> <operator pos:line="92" pos:column="33">(<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="34">void<pos:position pos:line="92" pos:column="38"/></name><operator pos:line="92" pos:column="38">*<pos:position pos:line="92" pos:column="39"/></operator><operator pos:line="92" pos:column="39">)<pos:position pos:line="92" pos:column="40"/></operator><call><name><name pos:line="92" pos:column="40">s<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">.<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="42">get<pos:position pos:line="92" pos:column="45"/></name></name><argument_list pos:line="92" pos:column="45">()<pos:position pos:line="92" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="49"/></expr_stmt>
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">s<pos:position pos:line="93" pos:column="10"/></name></expr>)<pos:position pos:line="93" pos:column="11"/></condition><then pos:line="93" pos:column="11"> <block pos:line="93" pos:column="12">{
<cpp:if pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">if<pos:position pos:line="94" pos:column="4"/></cpp:directive> <expr><name pos:line="94" pos:column="5">USE_OPENSSL<pos:position pos:line="94" pos:column="16"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">SSL_shutdown<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><call><name><name pos:line="95" pos:column="22">s<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">.<pos:position pos:line="95" pos:column="24"/></operator><name pos:line="95" pos:column="24">get<pos:position pos:line="95" pos:column="27"/></name></name><argument_list pos:line="95" pos:column="27">()<pos:position pos:line="95" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
<cpp:elif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">elif<pos:position pos:line="96" pos:column="6"/></cpp:directive> <expr><name pos:line="96" pos:column="7">USE_GNUTLS<pos:position pos:line="96" pos:column="17"/></name></expr></cpp:elif>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">gnutls_bye<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><call><name><name pos:line="97" pos:column="20">s<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">.<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">get<pos:position pos:line="97" pos:column="25"/></name></name><argument_list pos:line="97" pos:column="25">()<pos:position pos:line="97" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="97" pos:column="29">GNUTLS_SHUT_RDWR<pos:position pos:line="97" pos:column="45"/></name></expr></argument>)<pos:position pos:line="97" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
}<pos:position pos:line="100" pos:column="2"/></block></function>

<function><type><name pos:line="102" pos:column="1">bool<pos:position pos:line="102" pos:column="5"/></name></type>
<name><name pos:line="103" pos:column="1">Security<pos:position pos:line="103" pos:column="9"/></name><operator pos:line="103" pos:column="9">::<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="11">SessionIsResumed<pos:position pos:line="103" pos:column="27"/></name></name><parameter_list pos:line="103" pos:column="27">(<parameter><decl><type><specifier pos:line="103" pos:column="28">const<pos:position pos:line="103" pos:column="33"/></specifier> <name><name pos:line="103" pos:column="34">Security<pos:position pos:line="103" pos:column="42"/></name><operator pos:line="103" pos:column="42">::<pos:position pos:line="103" pos:column="44"/></operator><name pos:line="103" pos:column="44">SessionPointer<pos:position pos:line="103" pos:column="58"/></name></name> <modifier pos:line="103" pos:column="59">&amp;<pos:position pos:line="103" pos:column="64"/></modifier></type><name pos:line="103" pos:column="60">s<pos:position pos:line="103" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="103" pos:column="62"/></parameter_list>
<block pos:line="104" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="105" pos:column="5">bool<pos:position pos:line="105" pos:column="9"/></name></type> <name pos:line="105" pos:column="10">result<pos:position pos:line="105" pos:column="16"/></name> <init pos:line="105" pos:column="17">= <expr><literal type="boolean" pos:line="105" pos:column="19">false<pos:position pos:line="105" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="105" pos:column="25"/></decl_stmt>
<cpp:if pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">if<pos:position pos:line="106" pos:column="4"/></cpp:directive> <expr><name pos:line="106" pos:column="5">USE_OPENSSL<pos:position pos:line="106" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="107" pos:column="5">result<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">SSL_session_reused<pos:position pos:line="107" pos:column="32"/></name><argument_list pos:line="107" pos:column="32">(<argument><expr><call><name><name pos:line="107" pos:column="33">s<pos:position pos:line="107" pos:column="34"/></name><operator pos:line="107" pos:column="34">.<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="35">get<pos:position pos:line="107" pos:column="38"/></name></name><argument_list pos:line="107" pos:column="38">()<pos:position pos:line="107" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="41"/></argument_list></call> <operator pos:line="107" pos:column="42">==<pos:position pos:line="107" pos:column="44"/></operator> <literal type="number" pos:line="107" pos:column="45">1<pos:position pos:line="107" pos:column="46"/></literal></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>
<cpp:elif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">elif<pos:position pos:line="108" pos:column="6"/></cpp:directive> <expr><name pos:line="108" pos:column="7">USE_GNUTLS<pos:position pos:line="108" pos:column="17"/></name></expr></cpp:elif>
    <expr_stmt><expr><name pos:line="109" pos:column="5">result<pos:position pos:line="109" pos:column="11"/></name> <operator pos:line="109" pos:column="12">=<pos:position pos:line="109" pos:column="13"/></operator> <call><name pos:line="109" pos:column="14">gnutls_session_is_resumed<pos:position pos:line="109" pos:column="39"/></name><argument_list pos:line="109" pos:column="39">(<argument><expr><call><name><name pos:line="109" pos:column="40">s<pos:position pos:line="109" pos:column="41"/></name><operator pos:line="109" pos:column="41">.<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="42">get<pos:position pos:line="109" pos:column="45"/></name></name><argument_list pos:line="109" pos:column="45">()<pos:position pos:line="109" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="48"/></argument_list></call> <operator pos:line="109" pos:column="49">!=<pos:position pos:line="109" pos:column="51"/></operator> <literal type="number" pos:line="109" pos:column="52">0<pos:position pos:line="109" pos:column="53"/></literal></expr>;<pos:position pos:line="109" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif<pos:position pos:line="110" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">debugs<pos:position pos:line="111" pos:column="11"/></name><argument_list pos:line="111" pos:column="11">(<argument><expr><literal type="number" pos:line="111" pos:column="12">83<pos:position pos:line="111" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="16">7<pos:position pos:line="111" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="19">"session="<pos:position pos:line="111" pos:column="29"/></literal> <operator pos:line="111" pos:column="30">&lt;&lt;<pos:position pos:line="111" pos:column="38"/></operator> <operator pos:line="111" pos:column="33">(<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="34">void<pos:position pos:line="111" pos:column="38"/></name><operator pos:line="111" pos:column="38">*<pos:position pos:line="111" pos:column="39"/></operator><operator pos:line="111" pos:column="39">)<pos:position pos:line="111" pos:column="40"/></operator><call><name><name pos:line="111" pos:column="40">s<pos:position pos:line="111" pos:column="41"/></name><operator pos:line="111" pos:column="41">.<pos:position pos:line="111" pos:column="42"/></operator><name pos:line="111" pos:column="42">get<pos:position pos:line="111" pos:column="45"/></name></name><argument_list pos:line="111" pos:column="45">()<pos:position pos:line="111" pos:column="47"/></argument_list></call> <operator pos:line="111" pos:column="48">&lt;&lt;<pos:position pos:line="111" pos:column="56"/></operator> <literal type="string" pos:line="111" pos:column="51">", query? answer: "<pos:position pos:line="111" pos:column="70"/></literal> <operator pos:line="111" pos:column="71">&lt;&lt;<pos:position pos:line="111" pos:column="79"/></operator> <operator pos:line="111" pos:column="74">(<pos:position pos:line="111" pos:column="75"/></operator><ternary><condition><expr><name pos:line="111" pos:column="75">result<pos:position pos:line="111" pos:column="81"/></name></expr> ?<pos:position pos:line="111" pos:column="83"/></condition><then pos:line="111" pos:column="83"> <expr><literal type="char" pos:line="111" pos:column="84">'T'<pos:position pos:line="111" pos:column="87"/></literal></expr> <pos:position pos:line="111" pos:column="88"/></then><else pos:line="111" pos:column="88">: <expr><literal type="char" pos:line="111" pos:column="90">'F'<pos:position pos:line="111" pos:column="93"/></literal></expr></else></ternary><operator pos:line="111" pos:column="93">)<pos:position pos:line="111" pos:column="94"/></operator></expr></argument> )<pos:position pos:line="111" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="97"/></expr_stmt>
    <return pos:line="112" pos:column="5">return <expr><name pos:line="112" pos:column="12">result<pos:position pos:line="112" pos:column="18"/></name></expr>;<pos:position pos:line="112" pos:column="19"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function>

<function><type><name pos:line="115" pos:column="1">void<pos:position pos:line="115" pos:column="5"/></name></type>
<name><name pos:line="116" pos:column="1">Security<pos:position pos:line="116" pos:column="9"/></name><operator pos:line="116" pos:column="9">::<pos:position pos:line="116" pos:column="11"/></operator><name pos:line="116" pos:column="11">MaybeGetSessionResumeData<pos:position pos:line="116" pos:column="36"/></name></name><parameter_list pos:line="116" pos:column="36">(<parameter><decl><type><specifier pos:line="116" pos:column="37">const<pos:position pos:line="116" pos:column="42"/></specifier> <name><name pos:line="116" pos:column="43">Security<pos:position pos:line="116" pos:column="51"/></name><operator pos:line="116" pos:column="51">::<pos:position pos:line="116" pos:column="53"/></operator><name pos:line="116" pos:column="53">SessionPointer<pos:position pos:line="116" pos:column="67"/></name></name> <modifier pos:line="116" pos:column="68">&amp;<pos:position pos:line="116" pos:column="73"/></modifier></type><name pos:line="116" pos:column="69">s<pos:position pos:line="116" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="116" pos:column="72">Security<pos:position pos:line="116" pos:column="80"/></name><operator pos:line="116" pos:column="80">::<pos:position pos:line="116" pos:column="82"/></operator><name pos:line="116" pos:column="82">SessionStatePointer<pos:position pos:line="116" pos:column="101"/></name></name> <modifier pos:line="116" pos:column="102">&amp;<pos:position pos:line="116" pos:column="107"/></modifier></type><name pos:line="116" pos:column="103">data<pos:position pos:line="116" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="116" pos:column="108"/></parameter_list>
<block pos:line="117" pos:column="1">{
    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><operator pos:line="118" pos:column="9">!<pos:position pos:line="118" pos:column="10"/></operator><call><name pos:line="118" pos:column="10">SessionIsResumed<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><name pos:line="118" pos:column="27">s<pos:position pos:line="118" pos:column="28"/></name></expr></argument>)<pos:position pos:line="118" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="30"/></condition><then pos:line="118" pos:column="30"> <block pos:line="118" pos:column="31">{
<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><name pos:line="119" pos:column="5">USE_OPENSSL<pos:position pos:line="119" pos:column="16"/></name></expr></cpp:if>
        <comment type="line" pos:line="120" pos:column="9">// nil is valid for SSL_get1_session(), it cannot fail.</comment>
        <expr_stmt><expr><call><name><name pos:line="121" pos:column="9">data<pos:position pos:line="121" pos:column="13"/></name><operator pos:line="121" pos:column="13">.<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="14">reset<pos:position pos:line="121" pos:column="19"/></name></name><argument_list pos:line="121" pos:column="19">(<argument><expr><call><name pos:line="121" pos:column="20">SSL_get1_session<pos:position pos:line="121" pos:column="36"/></name><argument_list pos:line="121" pos:column="36">(<argument><expr><call><name><name pos:line="121" pos:column="37">s<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">.<pos:position pos:line="121" pos:column="39"/></operator><name pos:line="121" pos:column="39">get<pos:position pos:line="121" pos:column="42"/></name></name><argument_list pos:line="121" pos:column="42">()<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="47"/></expr_stmt>
<cpp:elif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">elif<pos:position pos:line="122" pos:column="6"/></cpp:directive> <expr><name pos:line="122" pos:column="7">USE_GNUTLS<pos:position pos:line="122" pos:column="17"/></name></expr></cpp:elif>
        <decl_stmt><decl><type><name pos:line="123" pos:column="9">gnutls_datum_t<pos:position pos:line="123" pos:column="23"/></name> <modifier pos:line="123" pos:column="24">*<pos:position pos:line="123" pos:column="25"/></modifier></type><name pos:line="123" pos:column="25">tmp<pos:position pos:line="123" pos:column="28"/></name> <init pos:line="123" pos:column="29">= <expr><literal type="null" pos:line="123" pos:column="31">nullptr<pos:position pos:line="123" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="123" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="124" pos:column="9">const<pos:position pos:line="124" pos:column="14"/></specifier> <specifier pos:line="124" pos:column="15">auto<pos:position pos:line="124" pos:column="19"/></specifier></type> <name pos:line="124" pos:column="20">x<pos:position pos:line="124" pos:column="21"/></name> <init pos:line="124" pos:column="22">= <expr><call><name pos:line="124" pos:column="24">gnutls_session_get_data2<pos:position pos:line="124" pos:column="48"/></name><argument_list pos:line="124" pos:column="48">(<argument><expr><call><name><name pos:line="124" pos:column="49">s<pos:position pos:line="124" pos:column="50"/></name><operator pos:line="124" pos:column="50">.<pos:position pos:line="124" pos:column="51"/></operator><name pos:line="124" pos:column="51">get<pos:position pos:line="124" pos:column="54"/></name></name><argument_list pos:line="124" pos:column="54">()<pos:position pos:line="124" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="124" pos:column="58">tmp<pos:position pos:line="124" pos:column="61"/></name></expr></argument>)<pos:position pos:line="124" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="124" pos:column="63"/></decl_stmt>
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">x<pos:position pos:line="125" pos:column="14"/></name> <operator pos:line="125" pos:column="15">!=<pos:position pos:line="125" pos:column="17"/></operator> <name pos:line="125" pos:column="18">GNUTLS_E_SUCCESS<pos:position pos:line="125" pos:column="34"/></name></expr>)<pos:position pos:line="125" pos:column="35"/></condition><then pos:line="125" pos:column="35"> <block pos:line="125" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="126" pos:column="13">debugs<pos:position pos:line="126" pos:column="19"/></name><argument_list pos:line="126" pos:column="19">(<argument><expr><literal type="number" pos:line="126" pos:column="20">83<pos:position pos:line="126" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="24">3<pos:position pos:line="126" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="27">"session="<pos:position pos:line="126" pos:column="37"/></literal> <operator pos:line="126" pos:column="38">&lt;&lt;<pos:position pos:line="126" pos:column="46"/></operator> <operator pos:line="126" pos:column="41">(<pos:position pos:line="126" pos:column="42"/></operator><name pos:line="126" pos:column="42">void<pos:position pos:line="126" pos:column="46"/></name><operator pos:line="126" pos:column="46">*<pos:position pos:line="126" pos:column="47"/></operator><operator pos:line="126" pos:column="47">)<pos:position pos:line="126" pos:column="48"/></operator><call><name><name pos:line="126" pos:column="48">s<pos:position pos:line="126" pos:column="49"/></name><operator pos:line="126" pos:column="49">.<pos:position pos:line="126" pos:column="50"/></operator><name pos:line="126" pos:column="50">get<pos:position pos:line="126" pos:column="53"/></name></name><argument_list pos:line="126" pos:column="53">()<pos:position pos:line="126" pos:column="55"/></argument_list></call> <operator pos:line="126" pos:column="56">&lt;&lt;<pos:position pos:line="126" pos:column="64"/></operator> <literal type="string" pos:line="126" pos:column="59">" error: "<pos:position pos:line="126" pos:column="69"/></literal> <operator pos:line="126" pos:column="70">&lt;&lt;<pos:position pos:line="126" pos:column="78"/></operator> <call><name><name pos:line="126" pos:column="73">Security<pos:position pos:line="126" pos:column="81"/></name><operator pos:line="126" pos:column="81">::<pos:position pos:line="126" pos:column="83"/></operator><name pos:line="126" pos:column="83">ErrorString<pos:position pos:line="126" pos:column="94"/></name></name><argument_list pos:line="126" pos:column="94">(<argument><expr><name pos:line="126" pos:column="95">x<pos:position pos:line="126" pos:column="96"/></name></expr></argument>)<pos:position pos:line="126" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="99"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="128" pos:column="9">data<pos:position pos:line="128" pos:column="13"/></name><operator pos:line="128" pos:column="13">.<pos:position pos:line="128" pos:column="14"/></operator><name pos:line="128" pos:column="14">reset<pos:position pos:line="128" pos:column="19"/></name></name><argument_list pos:line="128" pos:column="19">(<argument><expr><name pos:line="128" pos:column="20">tmp<pos:position pos:line="128" pos:column="23"/></name></expr></argument>)<pos:position pos:line="128" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">debugs<pos:position pos:line="130" pos:column="15"/></name><argument_list pos:line="130" pos:column="15">(<argument><expr><literal type="number" pos:line="130" pos:column="16">83<pos:position pos:line="130" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="20">5<pos:position pos:line="130" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="23">"session="<pos:position pos:line="130" pos:column="33"/></literal> <operator pos:line="130" pos:column="34">&lt;&lt;<pos:position pos:line="130" pos:column="42"/></operator> <operator pos:line="130" pos:column="37">(<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="38">void<pos:position pos:line="130" pos:column="42"/></name><operator pos:line="130" pos:column="42">*<pos:position pos:line="130" pos:column="43"/></operator><operator pos:line="130" pos:column="43">)<pos:position pos:line="130" pos:column="44"/></operator><call><name><name pos:line="130" pos:column="44">s<pos:position pos:line="130" pos:column="45"/></name><operator pos:line="130" pos:column="45">.<pos:position pos:line="130" pos:column="46"/></operator><name pos:line="130" pos:column="46">get<pos:position pos:line="130" pos:column="49"/></name></name><argument_list pos:line="130" pos:column="49">()<pos:position pos:line="130" pos:column="51"/></argument_list></call> <operator pos:line="130" pos:column="52">&lt;&lt;<pos:position pos:line="130" pos:column="60"/></operator> <literal type="string" pos:line="130" pos:column="55">" data="<pos:position pos:line="130" pos:column="63"/></literal> <operator pos:line="130" pos:column="64">&lt;&lt;<pos:position pos:line="130" pos:column="72"/></operator> <operator pos:line="130" pos:column="67">(<pos:position pos:line="130" pos:column="68"/></operator><name pos:line="130" pos:column="68">void<pos:position pos:line="130" pos:column="72"/></name><operator pos:line="130" pos:column="72">*<pos:position pos:line="130" pos:column="73"/></operator><operator pos:line="130" pos:column="73">)<pos:position pos:line="130" pos:column="74"/></operator><call><name><name pos:line="130" pos:column="74">data<pos:position pos:line="130" pos:column="78"/></name><operator pos:line="130" pos:column="78">.<pos:position pos:line="130" pos:column="79"/></operator><name pos:line="130" pos:column="79">get<pos:position pos:line="130" pos:column="82"/></name></name><argument_list pos:line="130" pos:column="82">()<pos:position pos:line="130" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="86"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then> <else pos:line="131" pos:column="7">else <block pos:line="131" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">debugs<pos:position pos:line="132" pos:column="15"/></name><argument_list pos:line="132" pos:column="15">(<argument><expr><literal type="number" pos:line="132" pos:column="16">83<pos:position pos:line="132" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="20">5<pos:position pos:line="132" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="23">"session="<pos:position pos:line="132" pos:column="33"/></literal> <operator pos:line="132" pos:column="34">&lt;&lt;<pos:position pos:line="132" pos:column="42"/></operator> <operator pos:line="132" pos:column="37">(<pos:position pos:line="132" pos:column="38"/></operator><name pos:line="132" pos:column="38">void<pos:position pos:line="132" pos:column="42"/></name><operator pos:line="132" pos:column="42">*<pos:position pos:line="132" pos:column="43"/></operator><operator pos:line="132" pos:column="43">)<pos:position pos:line="132" pos:column="44"/></operator><call><name><name pos:line="132" pos:column="44">s<pos:position pos:line="132" pos:column="45"/></name><operator pos:line="132" pos:column="45">.<pos:position pos:line="132" pos:column="46"/></operator><name pos:line="132" pos:column="46">get<pos:position pos:line="132" pos:column="49"/></name></name><argument_list pos:line="132" pos:column="49">()<pos:position pos:line="132" pos:column="51"/></argument_list></call> <operator pos:line="132" pos:column="52">&lt;&lt;<pos:position pos:line="132" pos:column="60"/></operator> <literal type="string" pos:line="132" pos:column="55">" data="<pos:position pos:line="132" pos:column="63"/></literal> <operator pos:line="132" pos:column="64">&lt;&lt;<pos:position pos:line="132" pos:column="72"/></operator> <operator pos:line="132" pos:column="67">(<pos:position pos:line="132" pos:column="68"/></operator><name pos:line="132" pos:column="68">void<pos:position pos:line="132" pos:column="72"/></name><operator pos:line="132" pos:column="72">*<pos:position pos:line="132" pos:column="73"/></operator><operator pos:line="132" pos:column="73">)<pos:position pos:line="132" pos:column="74"/></operator><call><name><name pos:line="132" pos:column="74">data<pos:position pos:line="132" pos:column="78"/></name><operator pos:line="132" pos:column="78">.<pos:position pos:line="132" pos:column="79"/></operator><name pos:line="132" pos:column="79">get<pos:position pos:line="132" pos:column="82"/></name></name><argument_list pos:line="132" pos:column="82">()<pos:position pos:line="132" pos:column="84"/></argument_list></call> <operator pos:line="132" pos:column="85">&lt;&lt;<pos:position pos:line="132" pos:column="93"/></operator> <literal type="string" pos:line="132" pos:column="88">", do nothing."<pos:position pos:line="132" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="105"/></expr_stmt>
    }<pos:position pos:line="133" pos:column="6"/></block></else></if>
}<pos:position pos:line="134" pos:column="2"/></block></function>

<function><type><name pos:line="136" pos:column="1">void<pos:position pos:line="136" pos:column="5"/></name></type>
<name><name pos:line="137" pos:column="1">Security<pos:position pos:line="137" pos:column="9"/></name><operator pos:line="137" pos:column="9">::<pos:position pos:line="137" pos:column="11"/></operator><name pos:line="137" pos:column="11">SetSessionResumeData<pos:position pos:line="137" pos:column="31"/></name></name><parameter_list pos:line="137" pos:column="31">(<parameter><decl><type><specifier pos:line="137" pos:column="32">const<pos:position pos:line="137" pos:column="37"/></specifier> <name><name pos:line="137" pos:column="38">Security<pos:position pos:line="137" pos:column="46"/></name><operator pos:line="137" pos:column="46">::<pos:position pos:line="137" pos:column="48"/></operator><name pos:line="137" pos:column="48">SessionPointer<pos:position pos:line="137" pos:column="62"/></name></name> <modifier pos:line="137" pos:column="63">&amp;<pos:position pos:line="137" pos:column="68"/></modifier></type><name pos:line="137" pos:column="64">s<pos:position pos:line="137" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="137" pos:column="67">const<pos:position pos:line="137" pos:column="72"/></specifier> <name><name pos:line="137" pos:column="73">Security<pos:position pos:line="137" pos:column="81"/></name><operator pos:line="137" pos:column="81">::<pos:position pos:line="137" pos:column="83"/></operator><name pos:line="137" pos:column="83">SessionStatePointer<pos:position pos:line="137" pos:column="102"/></name></name> <modifier pos:line="137" pos:column="103">&amp;<pos:position pos:line="137" pos:column="108"/></modifier></type><name pos:line="137" pos:column="104">data<pos:position pos:line="137" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="137" pos:column="109"/></parameter_list>
<block pos:line="138" pos:column="1">{
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name pos:line="139" pos:column="9">data<pos:position pos:line="139" pos:column="13"/></name></expr>)<pos:position pos:line="139" pos:column="14"/></condition><then pos:line="139" pos:column="14"> <block pos:line="139" pos:column="15">{
<cpp:if pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">if<pos:position pos:line="140" pos:column="4"/></cpp:directive> <expr><name pos:line="140" pos:column="5">USE_OPENSSL<pos:position pos:line="140" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><operator pos:line="141" pos:column="13">!<pos:position pos:line="141" pos:column="14"/></operator><call><name pos:line="141" pos:column="14">SSL_set_session<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">(<argument><expr><call><name><name pos:line="141" pos:column="30">s<pos:position pos:line="141" pos:column="31"/></name><operator pos:line="141" pos:column="31">.<pos:position pos:line="141" pos:column="32"/></operator><name pos:line="141" pos:column="32">get<pos:position pos:line="141" pos:column="35"/></name></name><argument_list pos:line="141" pos:column="35">()<pos:position pos:line="141" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="141" pos:column="39">data<pos:position pos:line="141" pos:column="43"/></name><operator pos:line="141" pos:column="43">.<pos:position pos:line="141" pos:column="44"/></operator><name pos:line="141" pos:column="44">get<pos:position pos:line="141" pos:column="47"/></name></name><argument_list pos:line="141" pos:column="47">()<pos:position pos:line="141" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="141" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="51"/></condition><then pos:line="141" pos:column="51"> <block pos:line="141" pos:column="52">{
            <decl_stmt><decl><type><specifier pos:line="142" pos:column="13">const<pos:position pos:line="142" pos:column="18"/></specifier> <specifier pos:line="142" pos:column="19">auto<pos:position pos:line="142" pos:column="23"/></specifier></type> <name pos:line="142" pos:column="24">ssl_error<pos:position pos:line="142" pos:column="33"/></name> <init pos:line="142" pos:column="34">= <expr><call><name pos:line="142" pos:column="36">ERR_get_error<pos:position pos:line="142" pos:column="49"/></name><argument_list pos:line="142" pos:column="49">()<pos:position pos:line="142" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="142" pos:column="52"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">debugs<pos:position pos:line="143" pos:column="19"/></name><argument_list pos:line="143" pos:column="19">(<argument><expr><literal type="number" pos:line="143" pos:column="20">83<pos:position pos:line="143" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="24">3<pos:position pos:line="143" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="27">"session="<pos:position pos:line="143" pos:column="37"/></literal> <operator pos:line="143" pos:column="38">&lt;&lt;<pos:position pos:line="143" pos:column="46"/></operator> <operator pos:line="143" pos:column="41">(<pos:position pos:line="143" pos:column="42"/></operator><name pos:line="143" pos:column="42">void<pos:position pos:line="143" pos:column="46"/></name><operator pos:line="143" pos:column="46">*<pos:position pos:line="143" pos:column="47"/></operator><operator pos:line="143" pos:column="47">)<pos:position pos:line="143" pos:column="48"/></operator><call><name><name pos:line="143" pos:column="48">s<pos:position pos:line="143" pos:column="49"/></name><operator pos:line="143" pos:column="49">.<pos:position pos:line="143" pos:column="50"/></operator><name pos:line="143" pos:column="50">get<pos:position pos:line="143" pos:column="53"/></name></name><argument_list pos:line="143" pos:column="53">()<pos:position pos:line="143" pos:column="55"/></argument_list></call> <operator pos:line="143" pos:column="56">&lt;&lt;<pos:position pos:line="143" pos:column="64"/></operator> <literal type="string" pos:line="143" pos:column="59">" data="<pos:position pos:line="143" pos:column="67"/></literal> <operator pos:line="143" pos:column="68">&lt;&lt;<pos:position pos:line="143" pos:column="76"/></operator> <operator pos:line="143" pos:column="71">(<pos:position pos:line="143" pos:column="72"/></operator><name pos:line="143" pos:column="72">void<pos:position pos:line="143" pos:column="76"/></name><operator pos:line="143" pos:column="76">*<pos:position pos:line="143" pos:column="77"/></operator><operator pos:line="143" pos:column="77">)<pos:position pos:line="143" pos:column="78"/></operator><call><name><name pos:line="143" pos:column="78">data<pos:position pos:line="143" pos:column="82"/></name><operator pos:line="143" pos:column="82">.<pos:position pos:line="143" pos:column="83"/></operator><name pos:line="143" pos:column="83">get<pos:position pos:line="143" pos:column="86"/></name></name><argument_list pos:line="143" pos:column="86">()<pos:position pos:line="143" pos:column="88"/></argument_list></call> <operator pos:line="143" pos:column="89">&lt;&lt;<pos:position pos:line="143" pos:column="97"/></operator>
                   <literal type="string" pos:line="144" pos:column="20">" resume error: "<pos:position pos:line="144" pos:column="37"/></literal> <operator pos:line="144" pos:column="38">&lt;&lt;<pos:position pos:line="144" pos:column="46"/></operator> <call><name><name pos:line="144" pos:column="41">Security<pos:position pos:line="144" pos:column="49"/></name><operator pos:line="144" pos:column="49">::<pos:position pos:line="144" pos:column="51"/></operator><name pos:line="144" pos:column="51">ErrorString<pos:position pos:line="144" pos:column="62"/></name></name><argument_list pos:line="144" pos:column="62">(<argument><expr><name pos:line="144" pos:column="63">ssl_error<pos:position pos:line="144" pos:column="72"/></name></expr></argument>)<pos:position pos:line="144" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if>
<cpp:elif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">elif<pos:position pos:line="146" pos:column="6"/></cpp:directive> <expr><name pos:line="146" pos:column="7">USE_GNUTLS<pos:position pos:line="146" pos:column="17"/></name></expr></cpp:elif>
        <decl_stmt><decl><type><specifier pos:line="147" pos:column="9">const<pos:position pos:line="147" pos:column="14"/></specifier> <specifier pos:line="147" pos:column="15">auto<pos:position pos:line="147" pos:column="19"/></specifier></type> <name pos:line="147" pos:column="20">x<pos:position pos:line="147" pos:column="21"/></name> <init pos:line="147" pos:column="22">= <expr><call><name pos:line="147" pos:column="24">gnutls_session_set_data<pos:position pos:line="147" pos:column="47"/></name><argument_list pos:line="147" pos:column="47">(<argument><expr><call><name><name pos:line="147" pos:column="48">s<pos:position pos:line="147" pos:column="49"/></name><operator pos:line="147" pos:column="49">.<pos:position pos:line="147" pos:column="50"/></operator><name pos:line="147" pos:column="50">get<pos:position pos:line="147" pos:column="53"/></name></name><argument_list pos:line="147" pos:column="53">()<pos:position pos:line="147" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="57">data<pos:position pos:line="147" pos:column="61"/></name><operator pos:line="147" pos:column="61">-&gt;<pos:position pos:line="147" pos:column="66"/></operator><name pos:line="147" pos:column="63">data<pos:position pos:line="147" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="69">data<pos:position pos:line="147" pos:column="73"/></name><operator pos:line="147" pos:column="73">-&gt;<pos:position pos:line="147" pos:column="78"/></operator><name pos:line="147" pos:column="75">size<pos:position pos:line="147" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="147" pos:column="81"/></decl_stmt>
        <if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name pos:line="148" pos:column="13">x<pos:position pos:line="148" pos:column="14"/></name> <operator pos:line="148" pos:column="15">!=<pos:position pos:line="148" pos:column="17"/></operator> <name pos:line="148" pos:column="18">GNUTLS_E_SUCCESS<pos:position pos:line="148" pos:column="34"/></name></expr>)<pos:position pos:line="148" pos:column="35"/></condition><then pos:line="148" pos:column="35"> <block pos:line="148" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">debugs<pos:position pos:line="149" pos:column="19"/></name><argument_list pos:line="149" pos:column="19">(<argument><expr><literal type="number" pos:line="149" pos:column="20">83<pos:position pos:line="149" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="24">3<pos:position pos:line="149" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="27">"session="<pos:position pos:line="149" pos:column="37"/></literal> <operator pos:line="149" pos:column="38">&lt;&lt;<pos:position pos:line="149" pos:column="46"/></operator> <operator pos:line="149" pos:column="41">(<pos:position pos:line="149" pos:column="42"/></operator><name pos:line="149" pos:column="42">void<pos:position pos:line="149" pos:column="46"/></name><operator pos:line="149" pos:column="46">*<pos:position pos:line="149" pos:column="47"/></operator><operator pos:line="149" pos:column="47">)<pos:position pos:line="149" pos:column="48"/></operator><call><name><name pos:line="149" pos:column="48">s<pos:position pos:line="149" pos:column="49"/></name><operator pos:line="149" pos:column="49">.<pos:position pos:line="149" pos:column="50"/></operator><name pos:line="149" pos:column="50">get<pos:position pos:line="149" pos:column="53"/></name></name><argument_list pos:line="149" pos:column="53">()<pos:position pos:line="149" pos:column="55"/></argument_list></call> <operator pos:line="149" pos:column="56">&lt;&lt;<pos:position pos:line="149" pos:column="64"/></operator> <literal type="string" pos:line="149" pos:column="59">" data="<pos:position pos:line="149" pos:column="67"/></literal> <operator pos:line="149" pos:column="68">&lt;&lt;<pos:position pos:line="149" pos:column="76"/></operator> <operator pos:line="149" pos:column="71">(<pos:position pos:line="149" pos:column="72"/></operator><name pos:line="149" pos:column="72">void<pos:position pos:line="149" pos:column="76"/></name><operator pos:line="149" pos:column="76">*<pos:position pos:line="149" pos:column="77"/></operator><operator pos:line="149" pos:column="77">)<pos:position pos:line="149" pos:column="78"/></operator><call><name><name pos:line="149" pos:column="78">data<pos:position pos:line="149" pos:column="82"/></name><operator pos:line="149" pos:column="82">.<pos:position pos:line="149" pos:column="83"/></operator><name pos:line="149" pos:column="83">get<pos:position pos:line="149" pos:column="86"/></name></name><argument_list pos:line="149" pos:column="86">()<pos:position pos:line="149" pos:column="88"/></argument_list></call> <operator pos:line="149" pos:column="89">&lt;&lt;<pos:position pos:line="149" pos:column="97"/></operator>
                   <literal type="string" pos:line="150" pos:column="20">" resume error: "<pos:position pos:line="150" pos:column="37"/></literal> <operator pos:line="150" pos:column="38">&lt;&lt;<pos:position pos:line="150" pos:column="46"/></operator> <call><name><name pos:line="150" pos:column="41">Security<pos:position pos:line="150" pos:column="49"/></name><operator pos:line="150" pos:column="49">::<pos:position pos:line="150" pos:column="51"/></operator><name pos:line="150" pos:column="51">ErrorString<pos:position pos:line="150" pos:column="62"/></name></name><argument_list pos:line="150" pos:column="62">(<argument><expr><name pos:line="150" pos:column="63">x<pos:position pos:line="150" pos:column="64"/></name></expr></argument>)<pos:position pos:line="150" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="151" pos:column="10"/></block></then></if>
<cpp:else pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">else<pos:position pos:line="152" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="line" pos:line="153" pos:column="9">// critical because, how did it get here?</comment>
        <expr_stmt><expr><call><name pos:line="154" pos:column="9">debugs<pos:position pos:line="154" pos:column="15"/></name><argument_list pos:line="154" pos:column="15">(<argument><expr><literal type="number" pos:line="154" pos:column="16">83<pos:position pos:line="154" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="20">DBG_CRITICAL<pos:position pos:line="154" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="34">"no TLS library. session="<pos:position pos:line="154" pos:column="60"/></literal> <operator pos:line="154" pos:column="61">&lt;&lt;<pos:position pos:line="154" pos:column="69"/></operator> <operator pos:line="154" pos:column="64">(<pos:position pos:line="154" pos:column="65"/></operator><name pos:line="154" pos:column="65">void<pos:position pos:line="154" pos:column="69"/></name><operator pos:line="154" pos:column="69">*<pos:position pos:line="154" pos:column="70"/></operator><operator pos:line="154" pos:column="70">)<pos:position pos:line="154" pos:column="71"/></operator><call><name><name pos:line="154" pos:column="71">s<pos:position pos:line="154" pos:column="72"/></name><operator pos:line="154" pos:column="72">.<pos:position pos:line="154" pos:column="73"/></operator><name pos:line="154" pos:column="73">get<pos:position pos:line="154" pos:column="76"/></name></name><argument_list pos:line="154" pos:column="76">()<pos:position pos:line="154" pos:column="78"/></argument_list></call> <operator pos:line="154" pos:column="79">&lt;&lt;<pos:position pos:line="154" pos:column="87"/></operator> <literal type="string" pos:line="154" pos:column="82">" data="<pos:position pos:line="154" pos:column="90"/></literal> <operator pos:line="154" pos:column="91">&lt;&lt;<pos:position pos:line="154" pos:column="99"/></operator> <operator pos:line="154" pos:column="94">(<pos:position pos:line="154" pos:column="95"/></operator><name pos:line="154" pos:column="95">void<pos:position pos:line="154" pos:column="99"/></name><operator pos:line="154" pos:column="99">*<pos:position pos:line="154" pos:column="100"/></operator><operator pos:line="154" pos:column="100">)<pos:position pos:line="154" pos:column="101"/></operator><call><name><name pos:line="154" pos:column="101">data<pos:position pos:line="154" pos:column="105"/></name><operator pos:line="154" pos:column="105">.<pos:position pos:line="154" pos:column="106"/></operator><name pos:line="154" pos:column="106">get<pos:position pos:line="154" pos:column="109"/></name></name><argument_list pos:line="154" pos:column="109">()<pos:position pos:line="154" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="154" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="113"/></expr_stmt>
<cpp:endif pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">endif<pos:position pos:line="155" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="156" pos:column="9">debugs<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">(<argument><expr><literal type="number" pos:line="156" pos:column="16">83<pos:position pos:line="156" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="20">5<pos:position pos:line="156" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="23">"session="<pos:position pos:line="156" pos:column="33"/></literal> <operator pos:line="156" pos:column="34">&lt;&lt;<pos:position pos:line="156" pos:column="42"/></operator> <operator pos:line="156" pos:column="37">(<pos:position pos:line="156" pos:column="38"/></operator><name pos:line="156" pos:column="38">void<pos:position pos:line="156" pos:column="42"/></name><operator pos:line="156" pos:column="42">*<pos:position pos:line="156" pos:column="43"/></operator><operator pos:line="156" pos:column="43">)<pos:position pos:line="156" pos:column="44"/></operator><call><name><name pos:line="156" pos:column="44">s<pos:position pos:line="156" pos:column="45"/></name><operator pos:line="156" pos:column="45">.<pos:position pos:line="156" pos:column="46"/></operator><name pos:line="156" pos:column="46">get<pos:position pos:line="156" pos:column="49"/></name></name><argument_list pos:line="156" pos:column="49">()<pos:position pos:line="156" pos:column="51"/></argument_list></call> <operator pos:line="156" pos:column="52">&lt;&lt;<pos:position pos:line="156" pos:column="60"/></operator> <literal type="string" pos:line="156" pos:column="55">" data="<pos:position pos:line="156" pos:column="63"/></literal> <operator pos:line="156" pos:column="64">&lt;&lt;<pos:position pos:line="156" pos:column="72"/></operator> <operator pos:line="156" pos:column="67">(<pos:position pos:line="156" pos:column="68"/></operator><name pos:line="156" pos:column="68">void<pos:position pos:line="156" pos:column="72"/></name><operator pos:line="156" pos:column="72">*<pos:position pos:line="156" pos:column="73"/></operator><operator pos:line="156" pos:column="73">)<pos:position pos:line="156" pos:column="74"/></operator><call><name><name pos:line="156" pos:column="74">data<pos:position pos:line="156" pos:column="78"/></name><operator pos:line="156" pos:column="78">.<pos:position pos:line="156" pos:column="79"/></operator><name pos:line="156" pos:column="79">get<pos:position pos:line="156" pos:column="82"/></name></name><argument_list pos:line="156" pos:column="82">()<pos:position pos:line="156" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="86"/></expr_stmt>
    }<pos:position pos:line="157" pos:column="6"/></block></then> <else pos:line="157" pos:column="7">else <block pos:line="157" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">debugs<pos:position pos:line="158" pos:column="15"/></name><argument_list pos:line="158" pos:column="15">(<argument><expr><literal type="number" pos:line="158" pos:column="16">83<pos:position pos:line="158" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="20">5<pos:position pos:line="158" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="23">"session="<pos:position pos:line="158" pos:column="33"/></literal> <operator pos:line="158" pos:column="34">&lt;&lt;<pos:position pos:line="158" pos:column="42"/></operator> <operator pos:line="158" pos:column="37">(<pos:position pos:line="158" pos:column="38"/></operator><name pos:line="158" pos:column="38">void<pos:position pos:line="158" pos:column="42"/></name><operator pos:line="158" pos:column="42">*<pos:position pos:line="158" pos:column="43"/></operator><operator pos:line="158" pos:column="43">)<pos:position pos:line="158" pos:column="44"/></operator><call><name><name pos:line="158" pos:column="44">s<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">.<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="46">get<pos:position pos:line="158" pos:column="49"/></name></name><argument_list pos:line="158" pos:column="49">()<pos:position pos:line="158" pos:column="51"/></argument_list></call> <operator pos:line="158" pos:column="52">&lt;&lt;<pos:position pos:line="158" pos:column="60"/></operator> <literal type="string" pos:line="158" pos:column="55">" no resume data"<pos:position pos:line="158" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></else></if>
}<pos:position pos:line="160" pos:column="2"/></block></function>

<function><specifier pos:line="162" pos:column="1">static<pos:position pos:line="162" pos:column="7"/></specifier> <type><name pos:line="162" pos:column="8">bool<pos:position pos:line="162" pos:column="12"/></name></type>
<name pos:line="163" pos:column="1">isTlsServer<pos:position pos:line="163" pos:column="12"/></name><parameter_list pos:line="163" pos:column="12">()<pos:position pos:line="163" pos:column="14"/></parameter_list>
<block pos:line="164" pos:column="1">{
    <for pos:line="165" pos:column="5">for <control pos:line="165" pos:column="9">(<init><decl><type><name><name pos:line="165" pos:column="10">AnyP<pos:position pos:line="165" pos:column="14"/></name><operator pos:line="165" pos:column="14">::<pos:position pos:line="165" pos:column="16"/></operator><name pos:line="165" pos:column="16">PortCfgPointer<pos:position pos:line="165" pos:column="30"/></name></name></type> <name pos:line="165" pos:column="31">s<pos:position pos:line="165" pos:column="32"/></name> <init pos:line="165" pos:column="33">= <expr><name pos:line="165" pos:column="35">HttpPortList<pos:position pos:line="165" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="165" pos:column="48"/></init> <condition><expr><name pos:line="165" pos:column="49">s<pos:position pos:line="165" pos:column="50"/></name> <operator pos:line="165" pos:column="51">!=<pos:position pos:line="165" pos:column="53"/></operator> <literal type="null" pos:line="165" pos:column="54">nullptr<pos:position pos:line="165" pos:column="61"/></literal></expr>;<pos:position pos:line="165" pos:column="62"/></condition> <incr><expr><name pos:line="165" pos:column="63">s<pos:position pos:line="165" pos:column="64"/></name> <operator pos:line="165" pos:column="65">=<pos:position pos:line="165" pos:column="66"/></operator> <name><name pos:line="165" pos:column="67">s<pos:position pos:line="165" pos:column="68"/></name><operator pos:line="165" pos:column="68">-&gt;<pos:position pos:line="165" pos:column="73"/></operator><name pos:line="165" pos:column="70">next<pos:position pos:line="165" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="165" pos:column="75"/></control> <block pos:line="165" pos:column="76">{
        <if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name><name pos:line="166" pos:column="13">s<pos:position pos:line="166" pos:column="14"/></name><operator pos:line="166" pos:column="14">-&gt;<pos:position pos:line="166" pos:column="19"/></operator><name pos:line="166" pos:column="16">secure<pos:position pos:line="166" pos:column="22"/></name><operator pos:line="166" pos:column="22">.<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="23">encryptTransport<pos:position pos:line="166" pos:column="39"/></name></name></expr>)<pos:position pos:line="166" pos:column="40"/></condition><then pos:line="166" pos:column="40">
            <block type="pseudo"><return pos:line="167" pos:column="13">return <expr><literal type="boolean" pos:line="167" pos:column="20">true<pos:position pos:line="167" pos:column="24"/></literal></expr>;<pos:position pos:line="167" pos:column="25"/></return></block></then></if>
        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name><name pos:line="168" pos:column="13">s<pos:position pos:line="168" pos:column="14"/></name><operator pos:line="168" pos:column="14">-&gt;<pos:position pos:line="168" pos:column="19"/></operator><name pos:line="168" pos:column="16">flags<pos:position pos:line="168" pos:column="21"/></name><operator pos:line="168" pos:column="21">.<pos:position pos:line="168" pos:column="22"/></operator><name pos:line="168" pos:column="22">tunnelSslBumping<pos:position pos:line="168" pos:column="38"/></name></name></expr>)<pos:position pos:line="168" pos:column="39"/></condition><then pos:line="168" pos:column="39">
            <block type="pseudo"><return pos:line="169" pos:column="13">return <expr><literal type="boolean" pos:line="169" pos:column="20">true<pos:position pos:line="169" pos:column="24"/></literal></expr>;<pos:position pos:line="169" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="170" pos:column="6"/></block></for>

    <return pos:line="172" pos:column="5">return <expr><literal type="boolean" pos:line="172" pos:column="12">false<pos:position pos:line="172" pos:column="17"/></literal></expr>;<pos:position pos:line="172" pos:column="18"/></return>
}<pos:position pos:line="173" pos:column="2"/></block></function>

<cpp:if pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">if<pos:position pos:line="175" pos:column="4"/></cpp:directive> <expr><name pos:line="175" pos:column="5">USE_OPENSSL<pos:position pos:line="175" pos:column="16"/></name></expr></cpp:if>
<function><specifier pos:line="176" pos:column="1">static<pos:position pos:line="176" pos:column="7"/></specifier> <type><name pos:line="176" pos:column="8">int<pos:position pos:line="176" pos:column="11"/></name></type>
<name pos:line="177" pos:column="1">store_session_cb<pos:position pos:line="177" pos:column="17"/></name><parameter_list pos:line="177" pos:column="17">(<parameter><decl><type><name pos:line="177" pos:column="18">SSL<pos:position pos:line="177" pos:column="21"/></name> <modifier pos:line="177" pos:column="22">*<pos:position pos:line="177" pos:column="23"/></modifier></type><name pos:line="177" pos:column="23">ssl<pos:position pos:line="177" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="177" pos:column="28">SSL_SESSION<pos:position pos:line="177" pos:column="39"/></name> <modifier pos:line="177" pos:column="40">*<pos:position pos:line="177" pos:column="41"/></modifier></type><name pos:line="177" pos:column="41">session<pos:position pos:line="177" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="177" pos:column="49"/></parameter_list>
<block pos:line="178" pos:column="1">{
    <if pos:line="179" pos:column="5">if <condition pos:line="179" pos:column="8">(<expr><operator pos:line="179" pos:column="9">!<pos:position pos:line="179" pos:column="10"/></operator><name pos:line="179" pos:column="10">SessionCache<pos:position pos:line="179" pos:column="22"/></name></expr>)<pos:position pos:line="179" pos:column="23"/></condition><then pos:line="179" pos:column="23">
        <block type="pseudo"><return pos:line="180" pos:column="9">return <expr><literal type="number" pos:line="180" pos:column="16">0<pos:position pos:line="180" pos:column="17"/></literal></expr>;<pos:position pos:line="180" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="182" pos:column="5">debugs<pos:position pos:line="182" pos:column="11"/></name><argument_list pos:line="182" pos:column="11">(<argument><expr><literal type="number" pos:line="182" pos:column="12">83<pos:position pos:line="182" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="16">5<pos:position pos:line="182" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="19">"Request to store SSL_SESSION"<pos:position pos:line="182" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="184" pos:column="5">SSL_SESSION_set_timeout<pos:position pos:line="184" pos:column="28"/></name><argument_list pos:line="184" pos:column="28">(<argument><expr><name pos:line="184" pos:column="29">session<pos:position pos:line="184" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="38">Config<pos:position pos:line="184" pos:column="44"/></name><operator pos:line="184" pos:column="44">.<pos:position pos:line="184" pos:column="45"/></operator><name pos:line="184" pos:column="45">SSL<pos:position pos:line="184" pos:column="48"/></name><operator pos:line="184" pos:column="48">.<pos:position pos:line="184" pos:column="49"/></operator><name pos:line="184" pos:column="49">session_ttl<pos:position pos:line="184" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="62"/></expr_stmt>

<cpp:if pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">if<pos:position pos:line="186" pos:column="4"/></cpp:directive> <expr><name pos:line="186" pos:column="5">HAVE_LIBSSL_SSL_SESSION_GET_ID<pos:position pos:line="186" pos:column="35"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="187" pos:column="5">unsigned<pos:position pos:line="187" pos:column="13"/></name> <name pos:line="187" pos:column="14">int<pos:position pos:line="187" pos:column="17"/></name></type> <name pos:line="187" pos:column="18">idlen<pos:position pos:line="187" pos:column="23"/></name></decl>;<pos:position pos:line="187" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="188" pos:column="5">const<pos:position pos:line="188" pos:column="10"/></specifier> <name pos:line="188" pos:column="11">unsigned<pos:position pos:line="188" pos:column="19"/></name> <name pos:line="188" pos:column="20">char<pos:position pos:line="188" pos:column="24"/></name> <modifier pos:line="188" pos:column="25">*<pos:position pos:line="188" pos:column="26"/></modifier></type><name pos:line="188" pos:column="26">id<pos:position pos:line="188" pos:column="28"/></name> <init pos:line="188" pos:column="29">= <expr><call><name pos:line="188" pos:column="31">SSL_SESSION_get_id<pos:position pos:line="188" pos:column="49"/></name><argument_list pos:line="188" pos:column="49">(<argument><expr><name pos:line="188" pos:column="50">session<pos:position pos:line="188" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="188" pos:column="59">&amp;<pos:position pos:line="188" pos:column="64"/></operator><name pos:line="188" pos:column="60">idlen<pos:position pos:line="188" pos:column="65"/></name></expr></argument>)<pos:position pos:line="188" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="188" pos:column="67"/></decl_stmt>
<cpp:else pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">else<pos:position pos:line="189" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="190" pos:column="5">unsigned<pos:position pos:line="190" pos:column="13"/></name> <name pos:line="190" pos:column="14">char<pos:position pos:line="190" pos:column="18"/></name> <modifier pos:line="190" pos:column="19">*<pos:position pos:line="190" pos:column="20"/></modifier></type><name pos:line="190" pos:column="20">id<pos:position pos:line="190" pos:column="22"/></name> <init pos:line="190" pos:column="23">= <expr><name><name pos:line="190" pos:column="25">session<pos:position pos:line="190" pos:column="32"/></name><operator pos:line="190" pos:column="32">-&gt;<pos:position pos:line="190" pos:column="37"/></operator><name pos:line="190" pos:column="34">session_id<pos:position pos:line="190" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="190" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="191" pos:column="5">unsigned<pos:position pos:line="191" pos:column="13"/></name> <name pos:line="191" pos:column="14">int<pos:position pos:line="191" pos:column="17"/></name></type> <name pos:line="191" pos:column="18">idlen<pos:position pos:line="191" pos:column="23"/></name> <init pos:line="191" pos:column="24">= <expr><name><name pos:line="191" pos:column="26">session<pos:position pos:line="191" pos:column="33"/></name><operator pos:line="191" pos:column="33">-&gt;<pos:position pos:line="191" pos:column="38"/></operator><name pos:line="191" pos:column="35">session_id_length<pos:position pos:line="191" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="191" pos:column="53"/></decl_stmt>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif<pos:position pos:line="192" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="line" pos:line="193" pos:column="5">// XXX: the other calls [to openForReading()] do not copy the sessionId to a char buffer, does this really have to?</comment>
    <decl_stmt><decl><type><name pos:line="194" pos:column="5">unsigned<pos:position pos:line="194" pos:column="13"/></name> <name pos:line="194" pos:column="14">char<pos:position pos:line="194" pos:column="18"/></name></type> <name><name pos:line="194" pos:column="19">key<pos:position pos:line="194" pos:column="22"/></name><index pos:line="194" pos:column="22">[<expr><name pos:line="194" pos:column="23">MEMMAP_SLOT_KEY_SIZE<pos:position pos:line="194" pos:column="43"/></name></expr>]<pos:position pos:line="194" pos:column="44"/></index></name></decl>;<pos:position pos:line="194" pos:column="45"/></decl_stmt>
    <comment type="line" pos:line="195" pos:column="5">// Session ids are of size 32bytes. They should always fit to a</comment>
    <comment type="line" pos:line="196" pos:column="5">// MemMap::Slot::key</comment>
    <expr_stmt><expr><call><name pos:line="197" pos:column="5">assert<pos:position pos:line="197" pos:column="11"/></name><argument_list pos:line="197" pos:column="11">(<argument><expr><name pos:line="197" pos:column="12">idlen<pos:position pos:line="197" pos:column="17"/></name> <operator pos:line="197" pos:column="18">&lt;=<pos:position pos:line="197" pos:column="23"/></operator> <name pos:line="197" pos:column="21">MEMMAP_SLOT_KEY_SIZE<pos:position pos:line="197" pos:column="41"/></name></expr></argument>)<pos:position pos:line="197" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="198" pos:column="5">memset<pos:position pos:line="198" pos:column="11"/></name><argument_list pos:line="198" pos:column="11">(<argument><expr><name pos:line="198" pos:column="12">key<pos:position pos:line="198" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="17">0<pos:position pos:line="198" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="198" pos:column="20">sizeof<argument_list pos:line="198" pos:column="26">(<argument><expr><name pos:line="198" pos:column="27">key<pos:position pos:line="198" pos:column="30"/></name></expr></argument>)<pos:position pos:line="198" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="198" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">memcpy<pos:position pos:line="199" pos:column="11"/></name><argument_list pos:line="199" pos:column="11">(<argument><expr><name pos:line="199" pos:column="12">key<pos:position pos:line="199" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="17">id<pos:position pos:line="199" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="21">idlen<pos:position pos:line="199" pos:column="26"/></name></expr></argument>)<pos:position pos:line="199" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="28"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="200" pos:column="5">int<pos:position pos:line="200" pos:column="8"/></name></type> <name pos:line="200" pos:column="9">pos<pos:position pos:line="200" pos:column="12"/></name></decl>;<pos:position pos:line="200" pos:column="13"/></decl_stmt>
    <if pos:line="201" pos:column="5">if <condition pos:line="201" pos:column="8">(<decl><type><name pos:line="201" pos:column="9">auto<pos:position pos:line="201" pos:column="13"/></name></type> <name pos:line="201" pos:column="14">slotW<pos:position pos:line="201" pos:column="19"/></name> <init pos:line="201" pos:column="20">= <expr><call><name><name pos:line="201" pos:column="22">SessionCache<pos:position pos:line="201" pos:column="34"/></name><operator pos:line="201" pos:column="34">-&gt;<pos:position pos:line="201" pos:column="39"/></operator><name pos:line="201" pos:column="36">openForWriting<pos:position pos:line="201" pos:column="50"/></name></name><argument_list pos:line="201" pos:column="50">(<argument><expr><cast type="static" pos:line="201" pos:column="51">static_cast<argument_list type="generic" pos:line="201" pos:column="62">&lt;<argument><expr><specifier pos:line="201" pos:column="63">const<pos:position pos:line="201" pos:column="68"/></specifier> <name pos:line="201" pos:column="69">cache_key<pos:position pos:line="201" pos:column="78"/></name><operator pos:line="201" pos:column="78">*<pos:position pos:line="201" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="201" pos:column="83"/></argument_list><argument_list pos:line="201" pos:column="80">(<argument><expr><name pos:line="201" pos:column="81">key<pos:position pos:line="201" pos:column="84"/></name></expr></argument>)<pos:position pos:line="201" pos:column="85"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="201" pos:column="87">pos<pos:position pos:line="201" pos:column="90"/></name></expr></argument>)<pos:position pos:line="201" pos:column="91"/></argument_list></call></expr></init></decl>)<pos:position pos:line="201" pos:column="92"/></condition><then pos:line="201" pos:column="92"> <block pos:line="201" pos:column="93">{
        <decl_stmt><decl><type><name pos:line="202" pos:column="9">int<pos:position pos:line="202" pos:column="12"/></name></type> <name pos:line="202" pos:column="13">lenRequired<pos:position pos:line="202" pos:column="24"/></name> <init pos:line="202" pos:column="25">= <expr><call><name pos:line="202" pos:column="27">i2d_SSL_SESSION<pos:position pos:line="202" pos:column="42"/></name><argument_list pos:line="202" pos:column="42">(<argument><expr><name pos:line="202" pos:column="43">session<pos:position pos:line="202" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="202" pos:column="52">nullptr<pos:position pos:line="202" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="202" pos:column="61"/></decl_stmt>
        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name pos:line="203" pos:column="13">lenRequired<pos:position pos:line="203" pos:column="24"/></name> <operator pos:line="203" pos:column="25">&lt;<pos:position pos:line="203" pos:column="29"/></operator>  <name pos:line="203" pos:column="28">MEMMAP_SLOT_DATA_SIZE<pos:position pos:line="203" pos:column="49"/></name></expr>)<pos:position pos:line="203" pos:column="50"/></condition><then pos:line="203" pos:column="50"> <block pos:line="203" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="204" pos:column="13">unsigned<pos:position pos:line="204" pos:column="21"/></name> <name pos:line="204" pos:column="22">char<pos:position pos:line="204" pos:column="26"/></name> <modifier pos:line="204" pos:column="27">*<pos:position pos:line="204" pos:column="28"/></modifier></type><name pos:line="204" pos:column="28">p<pos:position pos:line="204" pos:column="29"/></name> <init pos:line="204" pos:column="30">= <expr><cast type="static" pos:line="204" pos:column="32">static_cast<argument_list type="generic" pos:line="204" pos:column="43">&lt;<argument><expr><name pos:line="204" pos:column="44">unsigned<pos:position pos:line="204" pos:column="52"/></name> <name pos:line="204" pos:column="53">char<pos:position pos:line="204" pos:column="57"/></name> <operator pos:line="204" pos:column="58">*<pos:position pos:line="204" pos:column="59"/></operator></expr></argument>&gt;<pos:position pos:line="204" pos:column="63"/></argument_list><argument_list pos:line="204" pos:column="60">(<argument><expr><name><name pos:line="204" pos:column="61">slotW<pos:position pos:line="204" pos:column="66"/></name><operator pos:line="204" pos:column="66">-&gt;<pos:position pos:line="204" pos:column="71"/></operator><name pos:line="204" pos:column="68">p<pos:position pos:line="204" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="70"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="204" pos:column="71"/></decl_stmt>
            <expr_stmt><expr><name pos:line="205" pos:column="13">lenRequired<pos:position pos:line="205" pos:column="24"/></name> <operator pos:line="205" pos:column="25">=<pos:position pos:line="205" pos:column="26"/></operator> <call><name pos:line="205" pos:column="27">i2d_SSL_SESSION<pos:position pos:line="205" pos:column="42"/></name><argument_list pos:line="205" pos:column="42">(<argument><expr><name pos:line="205" pos:column="43">session<pos:position pos:line="205" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="205" pos:column="52">&amp;<pos:position pos:line="205" pos:column="57"/></operator><name pos:line="205" pos:column="53">p<pos:position pos:line="205" pos:column="54"/></name></expr></argument>)<pos:position pos:line="205" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="206" pos:column="13">slotW<pos:position pos:line="206" pos:column="18"/></name><operator pos:line="206" pos:column="18">-&gt;<pos:position pos:line="206" pos:column="23"/></operator><name pos:line="206" pos:column="20">set<pos:position pos:line="206" pos:column="23"/></name></name><argument_list pos:line="206" pos:column="23">(<argument><expr><name pos:line="206" pos:column="24">key<pos:position pos:line="206" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="206" pos:column="29">nullptr<pos:position pos:line="206" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="38">lenRequired<pos:position pos:line="206" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="51">squid_curtime<pos:position pos:line="206" pos:column="64"/></name> <operator pos:line="206" pos:column="65">+<pos:position pos:line="206" pos:column="66"/></operator> <name><name pos:line="206" pos:column="67">Config<pos:position pos:line="206" pos:column="73"/></name><operator pos:line="206" pos:column="73">.<pos:position pos:line="206" pos:column="74"/></operator><name pos:line="206" pos:column="74">SSL<pos:position pos:line="206" pos:column="77"/></name><operator pos:line="206" pos:column="77">.<pos:position pos:line="206" pos:column="78"/></operator><name pos:line="206" pos:column="78">session_ttl<pos:position pos:line="206" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="91"/></expr_stmt>
        }<pos:position pos:line="207" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="208" pos:column="9">SessionCache<pos:position pos:line="208" pos:column="21"/></name><operator pos:line="208" pos:column="21">-&gt;<pos:position pos:line="208" pos:column="26"/></operator><name pos:line="208" pos:column="23">closeForWriting<pos:position pos:line="208" pos:column="38"/></name></name><argument_list pos:line="208" pos:column="38">(<argument><expr><name pos:line="208" pos:column="39">pos<pos:position pos:line="208" pos:column="42"/></name></expr></argument>)<pos:position pos:line="208" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">debugs<pos:position pos:line="209" pos:column="15"/></name><argument_list pos:line="209" pos:column="15">(<argument><expr><literal type="number" pos:line="209" pos:column="16">83<pos:position pos:line="209" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="209" pos:column="20">5<pos:position pos:line="209" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="23">"wrote an SSL_SESSION entry of size "<pos:position pos:line="209" pos:column="60"/></literal> <operator pos:line="209" pos:column="61">&lt;&lt;<pos:position pos:line="209" pos:column="69"/></operator> <name pos:line="209" pos:column="64">lenRequired<pos:position pos:line="209" pos:column="75"/></name> <operator pos:line="209" pos:column="76">&lt;&lt;<pos:position pos:line="209" pos:column="84"/></operator> <literal type="string" pos:line="209" pos:column="79">" at pos "<pos:position pos:line="209" pos:column="89"/></literal> <operator pos:line="209" pos:column="90">&lt;&lt;<pos:position pos:line="209" pos:column="98"/></operator> <name pos:line="209" pos:column="93">pos<pos:position pos:line="209" pos:column="96"/></name></expr></argument>)<pos:position pos:line="209" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>
    <return pos:line="211" pos:column="5">return <expr><literal type="number" pos:line="211" pos:column="12">0<pos:position pos:line="211" pos:column="13"/></literal></expr>;<pos:position pos:line="211" pos:column="14"/></return>
}<pos:position pos:line="212" pos:column="2"/></block></function>

<function><specifier pos:line="214" pos:column="1">static<pos:position pos:line="214" pos:column="7"/></specifier> <type><name pos:line="214" pos:column="8">void<pos:position pos:line="214" pos:column="12"/></name></type>
<name pos:line="215" pos:column="1">remove_session_cb<pos:position pos:line="215" pos:column="18"/></name><parameter_list pos:line="215" pos:column="18">(<parameter><decl><type><name pos:line="215" pos:column="19">SSL_CTX<pos:position pos:line="215" pos:column="26"/></name> <modifier pos:line="215" pos:column="27">*<pos:position pos:line="215" pos:column="28"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="215" pos:column="30">SSL_SESSION<pos:position pos:line="215" pos:column="41"/></name> <modifier pos:line="215" pos:column="42">*<pos:position pos:line="215" pos:column="43"/></modifier></type><name pos:line="215" pos:column="43">sessionID<pos:position pos:line="215" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="215" pos:column="53"/></parameter_list>
<block pos:line="216" pos:column="1">{
    <if pos:line="217" pos:column="5">if <condition pos:line="217" pos:column="8">(<expr><operator pos:line="217" pos:column="9">!<pos:position pos:line="217" pos:column="10"/></operator><name pos:line="217" pos:column="10">SessionCache<pos:position pos:line="217" pos:column="22"/></name></expr>)<pos:position pos:line="217" pos:column="23"/></condition><then pos:line="217" pos:column="23">
        <block type="pseudo"><return pos:line="218" pos:column="9">return;<pos:position pos:line="218" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="220" pos:column="5">debugs<pos:position pos:line="220" pos:column="11"/></name><argument_list pos:line="220" pos:column="11">(<argument><expr><literal type="number" pos:line="220" pos:column="12">83<pos:position pos:line="220" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="16">5<pos:position pos:line="220" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="19">"Request to remove corrupted or not valid SSL_SESSION"<pos:position pos:line="220" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="75"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="221" pos:column="5">int<pos:position pos:line="221" pos:column="8"/></name></type> <name pos:line="221" pos:column="9">pos<pos:position pos:line="221" pos:column="12"/></name></decl>;<pos:position pos:line="221" pos:column="13"/></decl_stmt>
    <if pos:line="222" pos:column="5">if <condition pos:line="222" pos:column="8">(<expr><call><name><name pos:line="222" pos:column="9">SessionCache<pos:position pos:line="222" pos:column="21"/></name><operator pos:line="222" pos:column="21">-&gt;<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="23">openForReading<pos:position pos:line="222" pos:column="37"/></name></name><argument_list pos:line="222" pos:column="37">(<argument><expr><cast type="reinterpret" pos:line="222" pos:column="38">reinterpret_cast<argument_list type="generic" pos:line="222" pos:column="54">&lt;<argument><expr><specifier pos:line="222" pos:column="55">const<pos:position pos:line="222" pos:column="60"/></specifier> <name pos:line="222" pos:column="61">cache_key<pos:position pos:line="222" pos:column="70"/></name><operator pos:line="222" pos:column="70">*<pos:position pos:line="222" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="222" pos:column="75"/></argument_list><argument_list pos:line="222" pos:column="72">(<argument><expr><name pos:line="222" pos:column="73">sessionID<pos:position pos:line="222" pos:column="82"/></name></expr></argument>)<pos:position pos:line="222" pos:column="83"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="222" pos:column="85">pos<pos:position pos:line="222" pos:column="88"/></name></expr></argument>)<pos:position pos:line="222" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="222" pos:column="90"/></condition><then pos:line="222" pos:column="90"> <block pos:line="222" pos:column="91">{
        <expr_stmt><expr><call><name><name pos:line="223" pos:column="9">SessionCache<pos:position pos:line="223" pos:column="21"/></name><operator pos:line="223" pos:column="21">-&gt;<pos:position pos:line="223" pos:column="26"/></operator><name pos:line="223" pos:column="23">closeForReading<pos:position pos:line="223" pos:column="38"/></name></name><argument_list pos:line="223" pos:column="38">(<argument><expr><name pos:line="223" pos:column="39">pos<pos:position pos:line="223" pos:column="42"/></name></expr></argument>)<pos:position pos:line="223" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="44"/></expr_stmt>
        <comment type="line" pos:line="224" pos:column="9">// TODO:</comment>
        <comment type="line" pos:line="225" pos:column="9">// What if we are not able to remove the session?</comment>
        <comment type="line" pos:line="226" pos:column="9">// Maybe schedule a job to remove it later?</comment>
        <comment type="line" pos:line="227" pos:column="9">// For now we just have an invalid entry in cache until will be expired</comment>
        <comment type="line" pos:line="228" pos:column="9">// The OpenSSL library will reject it when we try to use it</comment>
        <expr_stmt><expr><call><name><name pos:line="229" pos:column="9">SessionCache<pos:position pos:line="229" pos:column="21"/></name><operator pos:line="229" pos:column="21">-&gt;<pos:position pos:line="229" pos:column="26"/></operator><name pos:line="229" pos:column="23">free<pos:position pos:line="229" pos:column="27"/></name></name><argument_list pos:line="229" pos:column="27">(<argument><expr><name pos:line="229" pos:column="28">pos<pos:position pos:line="229" pos:column="31"/></name></expr></argument>)<pos:position pos:line="229" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="230" pos:column="6"/></block></then></if>
}<pos:position pos:line="231" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="233" pos:column="1">static<pos:position pos:line="233" pos:column="7"/></specifier> <type><name pos:line="233" pos:column="8">SSL_SESSION<pos:position pos:line="233" pos:column="19"/></name> <modifier pos:line="233" pos:column="20">*<pos:position pos:line="233" pos:column="21"/></modifier></type>
<cpp:if pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">if<pos:position pos:line="234" pos:column="4"/></cpp:directive> <expr><name pos:line="234" pos:column="5">SQUID_USE_CONST_SSL_SESSION_CBID<pos:position pos:line="234" pos:column="37"/></name></expr></cpp:if>
<name pos:line="235" pos:column="1">get_session_cb<pos:position pos:line="235" pos:column="15"/></name><argument_list pos:line="235" pos:column="15">(<argument><expr><name pos:line="235" pos:column="16">SSL<pos:position pos:line="235" pos:column="19"/></name> <operator pos:line="235" pos:column="20">*<pos:position pos:line="235" pos:column="21"/></operator></expr></argument>, <argument><expr><specifier pos:line="235" pos:column="23">const<pos:position pos:line="235" pos:column="28"/></specifier> <name pos:line="235" pos:column="29">unsigned<pos:position pos:line="235" pos:column="37"/></name> <name pos:line="235" pos:column="38">char<pos:position pos:line="235" pos:column="42"/></name> <operator pos:line="235" pos:column="43">*<pos:position pos:line="235" pos:column="44"/></operator><name pos:line="235" pos:column="44">sessionID<pos:position pos:line="235" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="55">int<pos:position pos:line="235" pos:column="58"/></name> <name pos:line="235" pos:column="59">len<pos:position pos:line="235" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="64">int<pos:position pos:line="235" pos:column="67"/></name> <operator pos:line="235" pos:column="68">*<pos:position pos:line="235" pos:column="69"/></operator><name pos:line="235" pos:column="69">copy<pos:position pos:line="235" pos:column="73"/></name></expr></argument>)<pos:position pos:line="235" pos:column="74"/></argument_list>
<cpp:else pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">else<pos:position pos:line="236" pos:column="6"/></cpp:directive></cpp:else>
<name pos:line="237" pos:column="1">get_session_cb<pos:position pos:line="237" pos:column="15"/></name><argument_list pos:line="237" pos:column="15">(<argument><expr><name pos:line="237" pos:column="16">SSL<pos:position pos:line="237" pos:column="19"/></name> <operator pos:line="237" pos:column="20">*<pos:position pos:line="237" pos:column="21"/></operator></expr></argument>, <argument><expr><name pos:line="237" pos:column="23">unsigned<pos:position pos:line="237" pos:column="31"/></name> <name pos:line="237" pos:column="32">char<pos:position pos:line="237" pos:column="36"/></name> <operator pos:line="237" pos:column="37">*<pos:position pos:line="237" pos:column="38"/></operator><name pos:line="237" pos:column="38">sessionID<pos:position pos:line="237" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="49">int<pos:position pos:line="237" pos:column="52"/></name> <name pos:line="237" pos:column="53">len<pos:position pos:line="237" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="58">int<pos:position pos:line="237" pos:column="61"/></name> <operator pos:line="237" pos:column="62">*<pos:position pos:line="237" pos:column="63"/></operator><name pos:line="237" pos:column="63">copy<pos:position pos:line="237" pos:column="67"/></name></expr></argument>)<pos:position pos:line="237" pos:column="68"/></argument_list>
<cpp:endif pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">endif<pos:position pos:line="238" pos:column="7"/></cpp:directive></cpp:endif>
<argument_list pos:line="239" pos:column="1">{
    if <argument><expr><operator pos:line="240" pos:column="8">(<pos:position pos:line="240" pos:column="9"/></operator><operator pos:line="240" pos:column="9">!<pos:position pos:line="240" pos:column="10"/></operator><name pos:line="240" pos:column="10">SessionCache<pos:position pos:line="240" pos:column="22"/></name><operator pos:line="240" pos:column="22">)<pos:position pos:line="240" pos:column="23"/></operator></expr></argument>
        <return pos:line="241" pos:column="9">return <expr><literal type="null" pos:line="241" pos:column="16">nullptr<pos:position pos:line="241" pos:column="23"/></literal></expr>;<pos:position pos:line="241" pos:column="24"/></return></argument_list></decl></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="243" pos:column="5">const<pos:position pos:line="243" pos:column="10"/></specifier> <name pos:line="243" pos:column="11">unsigned<pos:position pos:line="243" pos:column="19"/></name> <name pos:line="243" pos:column="20">int<pos:position pos:line="243" pos:column="23"/></name> <modifier pos:line="243" pos:column="24">*<pos:position pos:line="243" pos:column="25"/></modifier></type><name pos:line="243" pos:column="25">p<pos:position pos:line="243" pos:column="26"/></name> <init pos:line="243" pos:column="27">= <expr><cast type="reinterpret" pos:line="243" pos:column="29">reinterpret_cast<argument_list type="generic" pos:line="243" pos:column="45">&lt;<argument><expr><specifier pos:line="243" pos:column="46">const<pos:position pos:line="243" pos:column="51"/></specifier> <name pos:line="243" pos:column="52">unsigned<pos:position pos:line="243" pos:column="60"/></name> <name pos:line="243" pos:column="61">int<pos:position pos:line="243" pos:column="64"/></name> <operator pos:line="243" pos:column="65">*<pos:position pos:line="243" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="243" pos:column="70"/></argument_list><argument_list pos:line="243" pos:column="67">(<argument><expr><name pos:line="243" pos:column="68">sessionID<pos:position pos:line="243" pos:column="77"/></name></expr></argument>)<pos:position pos:line="243" pos:column="78"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="243" pos:column="79"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="244" pos:column="5">debugs<pos:position pos:line="244" pos:column="11"/></name><argument_list pos:line="244" pos:column="11">(<argument><expr><literal type="number" pos:line="244" pos:column="12">83<pos:position pos:line="244" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="244" pos:column="16">5<pos:position pos:line="244" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="19">"Request to search for SSL_SESSION of len: "<pos:position pos:line="244" pos:column="63"/></literal> <operator pos:line="244" pos:column="64">&lt;&lt;<pos:position pos:line="244" pos:column="72"/></operator>
           <name pos:line="245" pos:column="12">len<pos:position pos:line="245" pos:column="15"/></name> <operator pos:line="245" pos:column="16">&lt;&lt;<pos:position pos:line="245" pos:column="24"/></operator> <name><name pos:line="245" pos:column="19">p<pos:position pos:line="245" pos:column="20"/></name><index pos:line="245" pos:column="20">[<expr><literal type="number" pos:line="245" pos:column="21">0<pos:position pos:line="245" pos:column="22"/></literal></expr>]<pos:position pos:line="245" pos:column="23"/></index></name> <operator pos:line="245" pos:column="24">&lt;&lt;<pos:position pos:line="245" pos:column="32"/></operator> <literal type="string" pos:line="245" pos:column="27">":"<pos:position pos:line="245" pos:column="30"/></literal> <operator pos:line="245" pos:column="31">&lt;&lt;<pos:position pos:line="245" pos:column="39"/></operator> <name><name pos:line="245" pos:column="34">p<pos:position pos:line="245" pos:column="35"/></name><index pos:line="245" pos:column="35">[<expr><literal type="number" pos:line="245" pos:column="36">1<pos:position pos:line="245" pos:column="37"/></literal></expr>]<pos:position pos:line="245" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="245" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="247" pos:column="5">SSL_SESSION<pos:position pos:line="247" pos:column="16"/></name> <modifier pos:line="247" pos:column="17">*<pos:position pos:line="247" pos:column="18"/></modifier></type><name pos:line="247" pos:column="18">session<pos:position pos:line="247" pos:column="25"/></name> <init pos:line="247" pos:column="26">= <expr><literal type="null" pos:line="247" pos:column="28">nullptr<pos:position pos:line="247" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="247" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="248" pos:column="5">int<pos:position pos:line="248" pos:column="8"/></name></type> <name pos:line="248" pos:column="9">pos<pos:position pos:line="248" pos:column="12"/></name></decl>;<pos:position pos:line="248" pos:column="13"/></decl_stmt>
    <if pos:line="249" pos:column="5">if <condition pos:line="249" pos:column="8">(<decl><type><specifier pos:line="249" pos:column="9">const<pos:position pos:line="249" pos:column="14"/></specifier> <specifier pos:line="249" pos:column="15">auto<pos:position pos:line="249" pos:column="19"/></specifier></type> <name pos:line="249" pos:column="20">slot<pos:position pos:line="249" pos:column="24"/></name> <init pos:line="249" pos:column="25">= <expr><call><name><name pos:line="249" pos:column="27">SessionCache<pos:position pos:line="249" pos:column="39"/></name><operator pos:line="249" pos:column="39">-&gt;<pos:position pos:line="249" pos:column="44"/></operator><name pos:line="249" pos:column="41">openForReading<pos:position pos:line="249" pos:column="55"/></name></name><argument_list pos:line="249" pos:column="55">(<argument><expr><cast type="static" pos:line="249" pos:column="56">static_cast<argument_list type="generic" pos:line="249" pos:column="67">&lt;<argument><expr><specifier pos:line="249" pos:column="68">const<pos:position pos:line="249" pos:column="73"/></specifier> <name pos:line="249" pos:column="74">cache_key<pos:position pos:line="249" pos:column="83"/></name><operator pos:line="249" pos:column="83">*<pos:position pos:line="249" pos:column="84"/></operator></expr></argument>&gt;<pos:position pos:line="249" pos:column="88"/></argument_list><argument_list pos:line="249" pos:column="85">(<argument><expr><name pos:line="249" pos:column="86">sessionID<pos:position pos:line="249" pos:column="95"/></name></expr></argument>)<pos:position pos:line="249" pos:column="96"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="249" pos:column="98">pos<pos:position pos:line="249" pos:column="101"/></name></expr></argument>)<pos:position pos:line="249" pos:column="102"/></argument_list></call></expr></init></decl>)<pos:position pos:line="249" pos:column="103"/></condition><then pos:line="249" pos:column="103"> <block pos:line="249" pos:column="104">{
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name><name pos:line="250" pos:column="13">slot<pos:position pos:line="250" pos:column="17"/></name><operator pos:line="250" pos:column="17">-&gt;<pos:position pos:line="250" pos:column="22"/></operator><name pos:line="250" pos:column="19">expire<pos:position pos:line="250" pos:column="25"/></name></name> <operator pos:line="250" pos:column="26">&gt;<pos:position pos:line="250" pos:column="30"/></operator> <name pos:line="250" pos:column="28">squid_curtime<pos:position pos:line="250" pos:column="41"/></name></expr>)<pos:position pos:line="250" pos:column="42"/></condition><then pos:line="250" pos:column="42"> <block pos:line="250" pos:column="43">{
            <decl_stmt><decl><type><specifier pos:line="251" pos:column="13">const<pos:position pos:line="251" pos:column="18"/></specifier> <name pos:line="251" pos:column="19">unsigned<pos:position pos:line="251" pos:column="27"/></name> <name pos:line="251" pos:column="28">char<pos:position pos:line="251" pos:column="32"/></name> <modifier pos:line="251" pos:column="33">*<pos:position pos:line="251" pos:column="34"/></modifier></type><name pos:line="251" pos:column="34">ptr<pos:position pos:line="251" pos:column="37"/></name> <init pos:line="251" pos:column="38">= <expr><name><name pos:line="251" pos:column="40">slot<pos:position pos:line="251" pos:column="44"/></name><operator pos:line="251" pos:column="44">-&gt;<pos:position pos:line="251" pos:column="49"/></operator><name pos:line="251" pos:column="46">p<pos:position pos:line="251" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="251" pos:column="48"/></decl_stmt>
            <expr_stmt><expr><name pos:line="252" pos:column="13">session<pos:position pos:line="252" pos:column="20"/></name> <operator pos:line="252" pos:column="21">=<pos:position pos:line="252" pos:column="22"/></operator> <call><name pos:line="252" pos:column="23">d2i_SSL_SESSION<pos:position pos:line="252" pos:column="38"/></name><argument_list pos:line="252" pos:column="38">(<argument><expr><literal type="null" pos:line="252" pos:column="39">nullptr<pos:position pos:line="252" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="252" pos:column="48">&amp;<pos:position pos:line="252" pos:column="53"/></operator><name pos:line="252" pos:column="49">ptr<pos:position pos:line="252" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="252" pos:column="54">slot<pos:position pos:line="252" pos:column="58"/></name><operator pos:line="252" pos:column="58">-&gt;<pos:position pos:line="252" pos:column="63"/></operator><name pos:line="252" pos:column="60">pSize<pos:position pos:line="252" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="252" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="253" pos:column="13">debugs<pos:position pos:line="253" pos:column="19"/></name><argument_list pos:line="253" pos:column="19">(<argument><expr><literal type="number" pos:line="253" pos:column="20">83<pos:position pos:line="253" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="24">5<pos:position pos:line="253" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="27">"SSL_SESSION retrieved from cache at pos "<pos:position pos:line="253" pos:column="69"/></literal> <operator pos:line="253" pos:column="70">&lt;&lt;<pos:position pos:line="253" pos:column="78"/></operator> <name pos:line="253" pos:column="73">pos<pos:position pos:line="253" pos:column="76"/></name></expr></argument>)<pos:position pos:line="253" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="254" pos:column="10"/></block></then> <else pos:line="254" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="255" pos:column="13">debugs<pos:position pos:line="255" pos:column="19"/></name><argument_list pos:line="255" pos:column="19">(<argument><expr><literal type="number" pos:line="255" pos:column="20">83<pos:position pos:line="255" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="255" pos:column="24">5<pos:position pos:line="255" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="27">"SSL_SESSION in cache expired"<pos:position pos:line="255" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="59"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name><name pos:line="256" pos:column="9">SessionCache<pos:position pos:line="256" pos:column="21"/></name><operator pos:line="256" pos:column="21">-&gt;<pos:position pos:line="256" pos:column="26"/></operator><name pos:line="256" pos:column="23">closeForReading<pos:position pos:line="256" pos:column="38"/></name></name><argument_list pos:line="256" pos:column="38">(<argument><expr><name pos:line="256" pos:column="39">pos<pos:position pos:line="256" pos:column="42"/></name></expr></argument>)<pos:position pos:line="256" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="257" pos:column="6"/></block></then></if>

    <if pos:line="259" pos:column="5">if <condition pos:line="259" pos:column="8">(<expr><operator pos:line="259" pos:column="9">!<pos:position pos:line="259" pos:column="10"/></operator><name pos:line="259" pos:column="10">session<pos:position pos:line="259" pos:column="17"/></name></expr>)<pos:position pos:line="259" pos:column="18"/></condition><then pos:line="259" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="260" pos:column="9">debugs<pos:position pos:line="260" pos:column="15"/></name><argument_list pos:line="260" pos:column="15">(<argument><expr><literal type="number" pos:line="260" pos:column="16">83<pos:position pos:line="260" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="260" pos:column="20">5<pos:position pos:line="260" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="23">"Failed to retrieve SSL_SESSION from cache\n"<pos:position pos:line="260" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="70"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="262" pos:column="5">// With the parameter copy the callback can require the SSL engine</comment>
    <comment type="line" pos:line="263" pos:column="5">// to increment the reference count of the SSL_SESSION object, Normally</comment>
    <comment type="line" pos:line="264" pos:column="5">// the reference count is not incremented and therefore the session must</comment>
    <comment type="line" pos:line="265" pos:column="5">// not be explicitly freed with SSL_SESSION_free(3).</comment>
    <expr_stmt><expr><operator pos:line="266" pos:column="5">*<pos:position pos:line="266" pos:column="6"/></operator><name pos:line="266" pos:column="6">copy<pos:position pos:line="266" pos:column="10"/></name> <operator pos:line="266" pos:column="11">=<pos:position pos:line="266" pos:column="12"/></operator> <literal type="number" pos:line="266" pos:column="13">0<pos:position pos:line="266" pos:column="14"/></literal></expr>;<pos:position pos:line="266" pos:column="15"/></expr_stmt>
    <return pos:line="267" pos:column="5">return <expr><name pos:line="267" pos:column="12">session<pos:position pos:line="267" pos:column="19"/></name></expr>;<pos:position pos:line="267" pos:column="20"/></return>
}<pos:position pos:line="268" pos:column="2"/></block></function></unit>

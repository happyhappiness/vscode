<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1201_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_access_log<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StoreEntry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">entry<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">name<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">CustomLog<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="67">logs<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CustomLog<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">log<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">log<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">logs<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></init> <condition><expr><name pos:line="6" pos:column="22">log<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></condition> <incr><expr><name pos:line="6" pos:column="27">log<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <name><name pos:line="6" pos:column="33">log<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">next<pos:position pos:line="6" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="43"/></control> <block pos:line="6" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"%s "<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">name<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>

        <switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">log<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">type<pos:position pos:line="9" pos:column="26"/></name></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition> <block pos:line="9" pos:column="28">{

        <case pos:line="11" pos:column="9">case <expr><name><name pos:line="11" pos:column="14">Log<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">::<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">Format<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">::<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">CLF_CUSTOM<pos:position pos:line="11" pos:column="37"/></name></name></expr>:<pos:position pos:line="11" pos:column="38"/></case>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">storeAppendPrintf<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">entry<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"%s %s"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="47">log<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">filename<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="62">log<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">logFormat<pos:position pos:line="12" pos:column="76"/></name><operator pos:line="12" pos:column="76">-&gt;<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="78">name<pos:position pos:line="12" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>

        <case pos:line="15" pos:column="9">case <expr><name><name pos:line="15" pos:column="14">Log<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">::<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">Format<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">::<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">CLF_NONE<pos:position pos:line="15" pos:column="35"/></name></name></expr>:<pos:position pos:line="15" pos:column="36"/></case>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">storeAppendPrintf<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">entry<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">"none"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>

        <case pos:line="19" pos:column="9">case <expr><name><name pos:line="19" pos:column="14">Log<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">::<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">Format<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">::<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">CLF_SQUID<pos:position pos:line="19" pos:column="36"/></name></name></expr>:<pos:position pos:line="19" pos:column="37"/></case>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">storeAppendPrintf<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">entry<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="38">"%s squid"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="50">log<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">-&gt;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="55">filename<pos:position pos:line="20" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>

        <case pos:line="23" pos:column="9">case <expr><name><name pos:line="23" pos:column="14">Log<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">::<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">Format<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">::<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">CLF_COMBINED<pos:position pos:line="23" pos:column="39"/></name></name></expr>:<pos:position pos:line="23" pos:column="40"/></case>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">storeAppendPrintf<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">entry<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"%s combined"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="53">log<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">-&gt;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="58">filename<pos:position pos:line="24" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>

        <case pos:line="27" pos:column="9">case <expr><name><name pos:line="27" pos:column="14">Log<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">::<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">Format<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">::<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">CLF_COMMON<pos:position pos:line="27" pos:column="37"/></name></name></expr>:<pos:position pos:line="27" pos:column="38"/></case>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">storeAppendPrintf<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">entry<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="38">"%s common"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="51">log<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">filename<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>

<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">ICAP_CLIENT<pos:position pos:line="31" pos:column="16"/></name></expr></cpp:if>
        <case pos:line="32" pos:column="9">case <expr><name><name pos:line="32" pos:column="14">Log<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">::<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">Format<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">::<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">CLF_ICAP_SQUID<pos:position pos:line="32" pos:column="41"/></name></name></expr>:<pos:position pos:line="32" pos:column="42"/></case>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">storeAppendPrintf<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">entry<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="38">"%s icap_squid"<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="55">log<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">-&gt;<pos:position pos:line="33" pos:column="63"/></operator><name pos:line="33" pos:column="60">filename<pos:position pos:line="33" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
            <break pos:line="34" pos:column="13">break;<pos:position pos:line="34" pos:column="19"/></break>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="36" pos:column="9">case <expr><name><name pos:line="36" pos:column="14">Log<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">::<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">Format<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">::<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">CLF_USERAGENT<pos:position pos:line="36" pos:column="40"/></name></name></expr>:<pos:position pos:line="36" pos:column="41"/></case>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">storeAppendPrintf<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">entry<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="38">"%s useragent"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">log<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">filename<pos:position pos:line="37" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>

        <case pos:line="40" pos:column="9">case <expr><name><name pos:line="40" pos:column="14">Log<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">::<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">Format<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">::<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">CLF_REFERER<pos:position pos:line="40" pos:column="38"/></name></name></expr>:<pos:position pos:line="40" pos:column="39"/></case>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">storeAppendPrintf<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">entry<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="38">"%s referrer"<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="53">log<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">filename<pos:position pos:line="41" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>

        <case pos:line="44" pos:column="9">case <expr><name><name pos:line="44" pos:column="14">Log<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">::<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">Format<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">::<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">CLF_UNKNOWN<pos:position pos:line="44" pos:column="38"/></name></name></expr>:<pos:position pos:line="44" pos:column="39"/></case>
            <break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break>
        }<pos:position pos:line="46" pos:column="10"/></block></switch>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">log<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">aclList<pos:position pos:line="48" pos:column="25"/></name></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="13">dump_acl_list<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">entry<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="34">log<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">aclList<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="51" pos:column="9">storeAppendPrintf<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">entry<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="34">"\n"<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

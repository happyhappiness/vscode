<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2967_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">maybeCacheable<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Intercepted request with Host: header which cannot be trusted.</comment>
    <comment type="line" pos:line="5" pos:column="5">// Because it failed verification, or someone bypassed the security tests</comment>
    <comment type="line" pos:line="6" pos:column="5">// we cannot cache the reponse for sharing between clients.</comment>
    <comment type="line" pos:line="7" pos:column="5">// TODO: update cache to store for particular clients only (going to same Host: and destination IP)</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">flags<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">hostVerified<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><name><name pos:line="8" pos:column="33">flags<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">intercepted<pos:position pos:line="8" pos:column="50"/></name></name> <operator pos:line="8" pos:column="51">||<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="54">flags<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">interceptTproxy<pos:position pos:line="8" pos:column="75"/></name></name><operator pos:line="8" pos:column="75">)<pos:position pos:line="8" pos:column="76"/></operator></expr>)<pos:position pos:line="8" pos:column="77"/></condition><then pos:line="8" pos:column="77">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">protocol<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition> <block pos:line="11" pos:column="23">{
    <case pos:line="12" pos:column="5">case <expr><name><name pos:line="12" pos:column="10">AnyP<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">::<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">PROTO_HTTP<pos:position pos:line="12" pos:column="26"/></name></name></expr>:<pos:position pos:line="12" pos:column="27"/></case>
    <case pos:line="13" pos:column="5">case <expr><name><name pos:line="13" pos:column="10">AnyP<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">::<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">PROTO_HTTPS<pos:position pos:line="13" pos:column="27"/></name></name></expr>:<pos:position pos:line="13" pos:column="28"/></case>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name><name pos:line="14" pos:column="14">method<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">respMaybeCacheable<pos:position pos:line="14" pos:column="39"/></name></name><argument_list pos:line="14" pos:column="39">()<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><literal type="boolean" pos:line="15" pos:column="20">false<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

        <comment type="line" pos:line="17" pos:column="9">// XXX: this would seem the correct place to detect request cache-controls</comment>
        <comment type="line" pos:line="18" pos:column="9">//      no-store, private and related which block cacheability</comment>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

    <case pos:line="21" pos:column="5">case <expr><name><name pos:line="21" pos:column="10">AnyP<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">::<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">PROTO_GOPHER<pos:position pos:line="21" pos:column="28"/></name></name></expr>:<pos:position pos:line="21" pos:column="29"/></case>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">gopherCachable<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">this<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
            <block type="pseudo"><return pos:line="23" pos:column="13">return <expr><literal type="boolean" pos:line="23" pos:column="20">false<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>

    <case pos:line="26" pos:column="5">case <expr><name><name pos:line="26" pos:column="10">AnyP<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">::<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">PROTO_CACHE_OBJECT<pos:position pos:line="26" pos:column="34"/></name></name></expr>:<pos:position pos:line="26" pos:column="35"/></case>
        <return pos:line="27" pos:column="9">return <expr><literal type="boolean" pos:line="27" pos:column="16">false<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></return>

        <comment type="line" pos:line="29" pos:column="9">//case AnyP::PROTO_FTP:</comment>
    <default pos:line="30" pos:column="5">default:<pos:position pos:line="30" pos:column="13"/></default>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
    }<pos:position pos:line="32" pos:column="6"/></block></switch>

    <return pos:line="34" pos:column="5">return <expr><literal type="boolean" pos:line="34" pos:column="12">true<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2266_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">handleRequestBodyProducerAborted<pos:position pos:line="2" pos:column="50"/></name></name><parameter_list pos:line="2" pos:column="50">()<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">requestSender<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">!=<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">9<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="18">3<pos:position pos:line="5" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="21">HERE<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;&lt;<pos:position pos:line="5" pos:column="34"/></operator> <literal type="string" pos:line="5" pos:column="29">"fyi: request body aborted while we were sending"<pos:position pos:line="5" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">fwd<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">dontRetry<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="boolean" pos:line="7" pos:column="20">true<pos:position pos:line="7" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt> <comment type="line" pos:line="7" pos:column="27">// the problem is not with the server</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">stopConsumingFrom<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">requestBodySource<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt> <comment type="line" pos:line="8" pos:column="43">// requestSender, if any, will notice</comment>

    <comment type="line" pos:line="10" pos:column="5">// kids extend this</comment>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

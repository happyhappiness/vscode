<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2450_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">negotiateSSL<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">long<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">ssl_lib_error<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">SSL_ERROR_NONE<pos:position pos:line="4" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name><name pos:line="5" pos:column="16">fd_table<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[<expr><name pos:line="5" pos:column="25">fd<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ssl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">ret<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">SSL_connect<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">ssl<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">&lt;=<pos:position pos:line="8" pos:column="39"/></operator> <literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ssl_error<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><call><name pos:line="9" pos:column="25">SSL_get_error<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">ssl<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">ret<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">EPROTO<pos:position pos:line="10" pos:column="14"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">sysErrNo<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name pos:line="11" pos:column="24">EPROTO<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">sysErrNo<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name pos:line="13" pos:column="24">EACCES<pos:position pos:line="13" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">ssl_error<pos:position pos:line="16" pos:column="26"/></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition> <block pos:line="16" pos:column="28">{

        <case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">SSL_ERROR_WANT_READ<pos:position pos:line="18" pos:column="33"/></name></expr>:<pos:position pos:line="18" pos:column="34"/></case>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">Comm<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">::<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">SetSelect<pos:position pos:line="19" pos:column="28"/></name></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">fd<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">COMM_SELECT_READ<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">fwdNegotiateSSLWrapper<pos:position pos:line="19" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="75">this<pos:position pos:line="19" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="81">0<pos:position pos:line="19" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="84"/></expr_stmt>
            <return pos:line="20" pos:column="13">return;<pos:position pos:line="20" pos:column="20"/></return>

        <case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">SSL_ERROR_WANT_WRITE<pos:position pos:line="22" pos:column="34"/></name></expr>:<pos:position pos:line="22" pos:column="35"/></case>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">Comm<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">::<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">SetSelect<pos:position pos:line="23" pos:column="28"/></name></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">fd<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">COMM_SELECT_WRITE<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">fwdNegotiateSSLWrapper<pos:position pos:line="23" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="76">this<pos:position pos:line="23" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="82">0<pos:position pos:line="23" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="85"/></expr_stmt>
            <return pos:line="24" pos:column="13">return;<pos:position pos:line="24" pos:column="20"/></return>

        <case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">SSL_ERROR_SSL<pos:position pos:line="26" pos:column="27"/></name></expr>:<pos:position pos:line="26" pos:column="28"/></case>
        <case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">SSL_ERROR_SYSCALL<pos:position pos:line="27" pos:column="31"/></name></expr>:<pos:position pos:line="27" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="28" pos:column="13">ssl_lib_error<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">ERR_get_error<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">()<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">81<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">DBG_IMPORTANT<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"fwdNegotiateSSL: Error negotiating SSL connection on FD "<pos:position pos:line="29" pos:column="97"/></literal> <operator pos:line="29" pos:column="98">&lt;&lt;<pos:position pos:line="29" pos:column="106"/></operator> <name pos:line="29" pos:column="101">fd<pos:position pos:line="29" pos:column="103"/></name> <operator pos:line="29" pos:column="104">&lt;&lt;<pos:position pos:line="29" pos:column="112"/></operator>
                   <literal type="string" pos:line="30" pos:column="20">": "<pos:position pos:line="30" pos:column="24"/></literal> <operator pos:line="30" pos:column="25">&lt;&lt;<pos:position pos:line="30" pos:column="33"/></operator> <call><name pos:line="30" pos:column="28">ERR_error_string<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">ssl_lib_error<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">NULL<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call> <operator pos:line="30" pos:column="66">&lt;&lt;<pos:position pos:line="30" pos:column="74"/></operator> <literal type="string" pos:line="30" pos:column="69">" ("<pos:position pos:line="30" pos:column="73"/></literal> <operator pos:line="30" pos:column="74">&lt;&lt;<pos:position pos:line="30" pos:column="82"/></operator> <name pos:line="30" pos:column="77">ssl_error<pos:position pos:line="30" pos:column="86"/></name> <operator pos:line="30" pos:column="87">&lt;&lt;<pos:position pos:line="30" pos:column="95"/></operator>
                   <literal type="string" pos:line="31" pos:column="20">"/"<pos:position pos:line="31" pos:column="23"/></literal> <operator pos:line="31" pos:column="24">&lt;&lt;<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="27">ret<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">&lt;&lt;<pos:position pos:line="31" pos:column="39"/></operator> <literal type="string" pos:line="31" pos:column="34">"/"<pos:position pos:line="31" pos:column="37"/></literal> <operator pos:line="31" pos:column="38">&lt;&lt;<pos:position pos:line="31" pos:column="46"/></operator> <name pos:line="31" pos:column="41">errno<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">&lt;&lt;<pos:position pos:line="31" pos:column="55"/></operator> <literal type="string" pos:line="31" pos:column="50">")"<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>

            <comment type="line" pos:line="33" pos:column="13">// store/report errno when ssl_error is SSL_ERROR_SYSCALL, ssl_lib_error is 0, and ret is -1</comment>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">ssl_error<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">==<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">SSL_ERROR_SYSCALL<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">&amp;&amp;<pos:position pos:line="34" pos:column="58"/></operator> <name pos:line="34" pos:column="51">ret<pos:position pos:line="34" pos:column="54"/></name> <operator pos:line="34" pos:column="55">==<pos:position pos:line="34" pos:column="57"/></operator> <operator pos:line="34" pos:column="58">-<pos:position pos:line="34" pos:column="59"/></operator><literal type="number" pos:line="34" pos:column="59">1<pos:position pos:line="34" pos:column="60"/></literal> <operator pos:line="34" pos:column="61">&amp;&amp;<pos:position pos:line="34" pos:column="71"/></operator> <name pos:line="34" pos:column="64">ssl_lib_error<pos:position pos:line="34" pos:column="77"/></name> <operator pos:line="34" pos:column="78">==<pos:position pos:line="34" pos:column="80"/></operator> <literal type="number" pos:line="34" pos:column="81">0<pos:position pos:line="34" pos:column="82"/></literal></expr>)<pos:position pos:line="34" pos:column="83"/></condition><then pos:line="34" pos:column="83">
                <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">sysErrNo<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">errno<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then></if>

            <comment type="line" pos:line="37" pos:column="13">// falling through to complete error handling</comment>

        <default pos:line="39" pos:column="9">default:<pos:position pos:line="39" pos:column="17"/></default>
            <comment type="line" pos:line="40" pos:column="13">// TODO: move into a method before merge</comment>
            <decl_stmt><decl><type><name><name pos:line="41" pos:column="13">Ssl<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">::<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">ErrorDetail<pos:position pos:line="41" pos:column="29"/></name></name> <modifier pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></modifier></type><name pos:line="41" pos:column="31">errDetails<pos:position pos:line="41" pos:column="41"/></name></decl>;<pos:position pos:line="41" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="42" pos:column="13">Ssl<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">::<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">ErrorDetail<pos:position pos:line="42" pos:column="29"/></name></name> <modifier pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></modifier></type><name pos:line="42" pos:column="31">errFromFailure<pos:position pos:line="42" pos:column="45"/></name> <init pos:line="42" pos:column="46">= <expr><operator pos:line="42" pos:column="48">(<pos:position pos:line="42" pos:column="49"/></operator><name><name pos:line="42" pos:column="49">Ssl<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">::<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">ErrorDetail<pos:position pos:line="42" pos:column="65"/></name></name> <operator pos:line="42" pos:column="66">*<pos:position pos:line="42" pos:column="67"/></operator><operator pos:line="42" pos:column="67">)<pos:position pos:line="42" pos:column="68"/></operator><call><name pos:line="42" pos:column="68">SSL_get_ex_data<pos:position pos:line="42" pos:column="83"/></name><argument_list pos:line="42" pos:column="83">(<argument><expr><name pos:line="42" pos:column="84">ssl<pos:position pos:line="42" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="89">ssl_ex_index_ssl_error_detail<pos:position pos:line="42" pos:column="118"/></name></expr></argument>)<pos:position pos:line="42" pos:column="119"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="120"/></decl_stmt>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">errFromFailure<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">!=<pos:position pos:line="43" pos:column="34"/></operator> <name pos:line="43" pos:column="35">NULL<pos:position pos:line="43" pos:column="39"/></name></expr>)<pos:position pos:line="43" pos:column="40"/></condition><then pos:line="43" pos:column="40"> <block pos:line="43" pos:column="41">{
                <comment type="line" pos:line="44" pos:column="17">// The errFromFailure is attached to the ssl object</comment>
                <comment type="line" pos:line="45" pos:column="17">// and will be released when ssl object destroyed.</comment>
                <comment type="line" pos:line="46" pos:column="17">// Copy errFromFailure to a new Ssl::ErrorDetail object.</comment>
                <expr_stmt><expr><name pos:line="47" pos:column="17">errDetails<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <operator pos:line="47" pos:column="30">new<pos:position pos:line="47" pos:column="33"/></operator> <call><name><name pos:line="47" pos:column="34">Ssl<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">::<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">ErrorDetail<pos:position pos:line="47" pos:column="50"/></name></name><argument_list pos:line="47" pos:column="50">(<argument><expr><operator pos:line="47" pos:column="51">*<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">errFromFailure<pos:position pos:line="47" pos:column="66"/></name></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then> <else pos:line="48" pos:column="15">else <block pos:line="48" pos:column="20">{
                <comment type="line" pos:line="49" pos:column="17">// server_cert can be NULL here</comment>
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">X509<pos:position pos:line="50" pos:column="21"/></name> <modifier pos:line="50" pos:column="22">*<pos:position pos:line="50" pos:column="23"/></modifier></type><name pos:line="50" pos:column="23">server_cert<pos:position pos:line="50" pos:column="34"/></name> <init pos:line="50" pos:column="35">= <expr><call><name pos:line="50" pos:column="37">SSL_get_peer_certificate<pos:position pos:line="50" pos:column="61"/></name><argument_list pos:line="50" pos:column="61">(<argument><expr><name pos:line="50" pos:column="62">ssl<pos:position pos:line="50" pos:column="65"/></name></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="67"/></decl_stmt>
                <expr_stmt><expr><name pos:line="51" pos:column="17">errDetails<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <operator pos:line="51" pos:column="30">new<pos:position pos:line="51" pos:column="33"/></operator> <call><name><name pos:line="51" pos:column="34">Ssl<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">::<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">ErrorDetail<pos:position pos:line="51" pos:column="50"/></name></name><argument_list pos:line="51" pos:column="50">(<argument><expr><name pos:line="51" pos:column="51">SQUID_ERR_SSL_HANDSHAKE<pos:position pos:line="51" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="76">server_cert<pos:position pos:line="51" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="89">NULL<pos:position pos:line="51" pos:column="93"/></name></expr></argument>)<pos:position pos:line="51" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="95"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">X509_free<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">server_cert<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></else></if>

            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><name pos:line="55" pos:column="17">ssl_lib_error<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">!=<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">SSL_ERROR_NONE<pos:position pos:line="55" pos:column="48"/></name></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="56" pos:column="17">errDetails<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">setLibError<pos:position pos:line="56" pos:column="40"/></name></name><argument_list pos:line="56" pos:column="40">(<argument><expr><name pos:line="56" pos:column="41">ssl_lib_error<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt></block></then></if>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><call><name><name pos:line="58" pos:column="17">request<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">clientConnectionManager<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">.<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="50">valid<pos:position pos:line="58" pos:column="55"/></name></name><argument_list pos:line="58" pos:column="55">()<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58"> <block pos:line="58" pos:column="59">{
                <comment type="line" pos:line="59" pos:column="17">// remember the server certificate from the ErrorDetail object</comment>
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<decl><type><name><name pos:line="60" pos:column="21">Ssl<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">::<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">ServerBump<pos:position pos:line="60" pos:column="36"/></name></name> <modifier pos:line="60" pos:column="37">*<pos:position pos:line="60" pos:column="38"/></modifier></type><name pos:line="60" pos:column="38">serverBump<pos:position pos:line="60" pos:column="48"/></name> <init pos:line="60" pos:column="49">= <expr><call><name><name pos:line="60" pos:column="51">request<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">-&gt;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="60">clientConnectionManager<pos:position pos:line="60" pos:column="83"/></name><operator pos:line="60" pos:column="83">-&gt;<pos:position pos:line="60" pos:column="88"/></operator><name pos:line="60" pos:column="85">serverBump<pos:position pos:line="60" pos:column="95"/></name></name><argument_list pos:line="60" pos:column="95">()<pos:position pos:line="60" pos:column="97"/></argument_list></call></expr></init></decl>)<pos:position pos:line="60" pos:column="98"/></condition><then pos:line="60" pos:column="98"> <block pos:line="60" pos:column="99">{
                    <expr_stmt><expr><call><name><name pos:line="61" pos:column="21">serverBump<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">-&gt;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="33">serverCert<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">.<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="44">resetAndLock<pos:position pos:line="61" pos:column="56"/></name></name><argument_list pos:line="61" pos:column="56">(<argument><expr><call><name><name pos:line="61" pos:column="57">errDetails<pos:position pos:line="61" pos:column="67"/></name><operator pos:line="61" pos:column="67">-&gt;<pos:position pos:line="61" pos:column="72"/></operator><name pos:line="61" pos:column="69">peerCert<pos:position pos:line="61" pos:column="77"/></name></name><argument_list pos:line="61" pos:column="77">()<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="81"/></expr_stmt>

                    <comment type="line" pos:line="63" pos:column="21">// remember validation errors, if any</comment>
                    <if pos:line="64" pos:column="21">if <condition pos:line="64" pos:column="24">(<decl><type><name><name pos:line="64" pos:column="25">Ssl<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">::<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="30">Errors<pos:position pos:line="64" pos:column="36"/></name></name> <modifier pos:line="64" pos:column="37">*<pos:position pos:line="64" pos:column="38"/></modifier></type><name pos:line="64" pos:column="38">errs<pos:position pos:line="64" pos:column="42"/></name> <init pos:line="64" pos:column="43">= <expr><cast type="static" pos:line="64" pos:column="45">static_cast<argument_list type="generic" pos:line="64" pos:column="56">&lt;<argument><expr><name><name pos:line="64" pos:column="57">Ssl<pos:position pos:line="64" pos:column="60"/></name><operator pos:line="64" pos:column="60">::<pos:position pos:line="64" pos:column="62"/></operator><name pos:line="64" pos:column="62">Errors<pos:position pos:line="64" pos:column="68"/></name></name><operator pos:line="64" pos:column="68">*<pos:position pos:line="64" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="64" pos:column="73"/></argument_list><argument_list pos:line="64" pos:column="70">(<argument><expr><call><name pos:line="64" pos:column="71">SSL_get_ex_data<pos:position pos:line="64" pos:column="86"/></name><argument_list pos:line="64" pos:column="86">(<argument><expr><name pos:line="64" pos:column="87">ssl<pos:position pos:line="64" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="92">ssl_ex_index_ssl_errors<pos:position pos:line="64" pos:column="115"/></name></expr></argument>)<pos:position pos:line="64" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="117"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="64" pos:column="118"/></condition><then pos:line="64" pos:column="118">
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">serverBump<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">-&gt;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="37">sslErrors<pos:position pos:line="65" pos:column="46"/></name></name> <operator pos:line="65" pos:column="47">=<pos:position pos:line="65" pos:column="48"/></operator> <call><name pos:line="65" pos:column="49">cbdataReference<pos:position pos:line="65" pos:column="64"/></name><argument_list pos:line="65" pos:column="64">(<argument><expr><name pos:line="65" pos:column="65">errs<pos:position pos:line="65" pos:column="69"/></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt></block></then></if>
                }<pos:position pos:line="66" pos:column="18"/></block></then></if>
            }<pos:position pos:line="67" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="69" pos:column="13">// For intercepted connections, set the host name to the server</comment>
            <comment type="line" pos:line="70" pos:column="13">// certificate CN. Otherwise, we just hope that CONNECT is using</comment>
            <comment type="line" pos:line="71" pos:column="13">// a user-entered address (a host name or a user-entered IP).</comment>
            <decl_stmt><decl><type><specifier pos:line="72" pos:column="13">const<pos:position pos:line="72" pos:column="18"/></specifier> <name pos:line="72" pos:column="19">bool<pos:position pos:line="72" pos:column="23"/></name></type> <name pos:line="72" pos:column="24">isConnectRequest<pos:position pos:line="72" pos:column="40"/></name> <init pos:line="72" pos:column="41">= <expr><call><name><name pos:line="72" pos:column="43">request<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">-&gt;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="52">clientConnectionManager<pos:position pos:line="72" pos:column="75"/></name><operator pos:line="72" pos:column="75">.<pos:position pos:line="72" pos:column="76"/></operator><name pos:line="72" pos:column="76">valid<pos:position pos:line="72" pos:column="81"/></name></name><argument_list pos:line="72" pos:column="81">()<pos:position pos:line="72" pos:column="83"/></argument_list></call> <operator pos:line="72" pos:column="84">&amp;&amp;<pos:position pos:line="72" pos:column="94"/></operator>
                                          <operator pos:line="73" pos:column="43">!<pos:position pos:line="73" pos:column="44"/></operator><name><name pos:line="73" pos:column="44">request<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">-&gt;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="53">clientConnectionManager<pos:position pos:line="73" pos:column="76"/></name><operator pos:line="73" pos:column="76">-&gt;<pos:position pos:line="73" pos:column="81"/></operator><name pos:line="73" pos:column="78">port<pos:position pos:line="73" pos:column="82"/></name><operator pos:line="73" pos:column="82">-&gt;<pos:position pos:line="73" pos:column="87"/></operator><name pos:line="73" pos:column="84">spoof_client_ip<pos:position pos:line="73" pos:column="99"/></name></name> <operator pos:line="73" pos:column="100">&amp;&amp;<pos:position pos:line="73" pos:column="110"/></operator>
                                          <operator pos:line="74" pos:column="43">!<pos:position pos:line="74" pos:column="44"/></operator><name><name pos:line="74" pos:column="44">request<pos:position pos:line="74" pos:column="51"/></name><operator pos:line="74" pos:column="51">-&gt;<pos:position pos:line="74" pos:column="56"/></operator><name pos:line="74" pos:column="53">clientConnectionManager<pos:position pos:line="74" pos:column="76"/></name><operator pos:line="74" pos:column="76">-&gt;<pos:position pos:line="74" pos:column="81"/></operator><name pos:line="74" pos:column="78">port<pos:position pos:line="74" pos:column="82"/></name><operator pos:line="74" pos:column="82">-&gt;<pos:position pos:line="74" pos:column="87"/></operator><name pos:line="74" pos:column="84">intercepted<pos:position pos:line="74" pos:column="95"/></name></name></expr></init></decl>;<pos:position pos:line="74" pos:column="96"/></decl_stmt>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name><name pos:line="75" pos:column="17">request<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">flags<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">.<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="32">sslPeek<pos:position pos:line="75" pos:column="39"/></name></name> <operator pos:line="75" pos:column="40">&amp;&amp;<pos:position pos:line="75" pos:column="50"/></operator> <operator pos:line="75" pos:column="43">!<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="44">isConnectRequest<pos:position pos:line="75" pos:column="60"/></name></expr>)<pos:position pos:line="75" pos:column="61"/></condition><then pos:line="75" pos:column="61"> <block pos:line="75" pos:column="62">{
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<decl><type><name pos:line="76" pos:column="21">X509<pos:position pos:line="76" pos:column="25"/></name> <modifier pos:line="76" pos:column="26">*<pos:position pos:line="76" pos:column="27"/></modifier></type><name pos:line="76" pos:column="27">srvX509<pos:position pos:line="76" pos:column="34"/></name> <init pos:line="76" pos:column="35">= <expr><call><name><name pos:line="76" pos:column="37">errDetails<pos:position pos:line="76" pos:column="47"/></name><operator pos:line="76" pos:column="47">-&gt;<pos:position pos:line="76" pos:column="52"/></operator><name pos:line="76" pos:column="49">peerCert<pos:position pos:line="76" pos:column="57"/></name></name><argument_list pos:line="76" pos:column="57">()<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr></init></decl>)<pos:position pos:line="76" pos:column="60"/></condition><then pos:line="76" pos:column="60"> <block pos:line="76" pos:column="61">{
                    <if pos:line="77" pos:column="21">if <condition pos:line="77" pos:column="24">(<decl><type><specifier pos:line="77" pos:column="25">const<pos:position pos:line="77" pos:column="30"/></specifier> <name pos:line="77" pos:column="31">char<pos:position pos:line="77" pos:column="35"/></name> <modifier pos:line="77" pos:column="36">*<pos:position pos:line="77" pos:column="37"/></modifier></type><name pos:line="77" pos:column="37">name<pos:position pos:line="77" pos:column="41"/></name> <init pos:line="77" pos:column="42">= <expr><call><name><name pos:line="77" pos:column="44">Ssl<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">::<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="49">CommonHostName<pos:position pos:line="77" pos:column="63"/></name></name><argument_list pos:line="77" pos:column="63">(<argument><expr><name pos:line="77" pos:column="64">srvX509<pos:position pos:line="77" pos:column="71"/></name></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr></init></decl>)<pos:position pos:line="77" pos:column="73"/></condition><then pos:line="77" pos:column="73"> <block pos:line="77" pos:column="74">{
                        <expr_stmt><expr><call><name><name pos:line="78" pos:column="25">request<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">-&gt;<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="34">SetHost<pos:position pos:line="78" pos:column="41"/></name></name><argument_list pos:line="78" pos:column="41">(<argument><expr><name pos:line="78" pos:column="42">name<pos:position pos:line="78" pos:column="46"/></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="79" pos:column="25">debugs<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><literal type="number" pos:line="79" pos:column="32">83<pos:position pos:line="79" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="36">3<pos:position pos:line="79" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">HERE<pos:position pos:line="79" pos:column="43"/></name> <operator pos:line="79" pos:column="44">&lt;&lt;<pos:position pos:line="79" pos:column="52"/></operator> <literal type="string" pos:line="79" pos:column="47">"reset request host: "<pos:position pos:line="79" pos:column="69"/></literal> <operator pos:line="79" pos:column="70">&lt;&lt;<pos:position pos:line="79" pos:column="78"/></operator> <name pos:line="79" pos:column="73">name<pos:position pos:line="79" pos:column="77"/></name></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt>
                    }<pos:position pos:line="80" pos:column="22"/></block></then></if>
                }<pos:position pos:line="81" pos:column="18"/></block></then></if>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>

            <decl_stmt><decl><type><name pos:line="84" pos:column="13">ErrorState<pos:position pos:line="84" pos:column="23"/></name> <modifier pos:line="84" pos:column="24">*<pos:position pos:line="84" pos:column="25"/></modifier><specifier pos:line="84" pos:column="25">const<pos:position pos:line="84" pos:column="30"/></specifier></type> <name pos:line="84" pos:column="31">anErr<pos:position pos:line="84" pos:column="36"/></name> <init pos:line="84" pos:column="37">= <expr><call><name pos:line="84" pos:column="39">makeConnectingError<pos:position pos:line="84" pos:column="58"/></name><argument_list pos:line="84" pos:column="58">(<argument><expr><name pos:line="84" pos:column="59">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="84" pos:column="82"/></name></expr></argument>)<pos:position pos:line="84" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="84"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">anErr<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">-&gt;<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="20">xerrno<pos:position pos:line="85" pos:column="26"/></name></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <name pos:line="85" pos:column="29">sysErrNo<pos:position pos:line="85" pos:column="37"/></name></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">anErr<pos:position pos:line="86" pos:column="18"/></name><operator pos:line="86" pos:column="18">-&gt;<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="20">detail<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <name pos:line="86" pos:column="29">errDetails<pos:position pos:line="86" pos:column="39"/></name></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">fail<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">anErr<pos:position pos:line="87" pos:column="23"/></name></expr></argument>)<pos:position pos:line="87" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>

            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><call><name pos:line="89" pos:column="17">serverConnection<pos:position pos:line="89" pos:column="33"/></name><argument_list pos:line="89" pos:column="33">()<pos:position pos:line="89" pos:column="35"/></argument_list></call><operator pos:line="89" pos:column="35">-&gt;<pos:position pos:line="89" pos:column="40"/></operator><call><name pos:line="89" pos:column="37">getPeer<pos:position pos:line="89" pos:column="44"/></name><argument_list pos:line="89" pos:column="44">()<pos:position pos:line="89" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="47"/></condition><then pos:line="89" pos:column="47"> <block pos:line="89" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">peerConnectFailed<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><call><name pos:line="90" pos:column="35">serverConnection<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">()<pos:position pos:line="90" pos:column="53"/></argument_list></call><operator pos:line="90" pos:column="53">-&gt;<pos:position pos:line="90" pos:column="58"/></operator><call><name pos:line="90" pos:column="55">getPeer<pos:position pos:line="90" pos:column="62"/></name><argument_list pos:line="90" pos:column="62">()<pos:position pos:line="90" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">serverConn<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">-&gt;<pos:position pos:line="93" pos:column="28"/></operator><name pos:line="93" pos:column="25">close<pos:position pos:line="93" pos:column="30"/></name></name><argument_list pos:line="93" pos:column="30">()<pos:position pos:line="93" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
            <return pos:line="94" pos:column="13">return;<pos:position pos:line="94" pos:column="20"/></return>
        }<pos:position pos:line="95" pos:column="10"/></block></switch>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call><name><name pos:line="98" pos:column="9">request<pos:position pos:line="98" pos:column="16"/></name><operator pos:line="98" pos:column="16">-&gt;<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="18">clientConnectionManager<pos:position pos:line="98" pos:column="41"/></name><operator pos:line="98" pos:column="41">.<pos:position pos:line="98" pos:column="42"/></operator><name pos:line="98" pos:column="42">valid<pos:position pos:line="98" pos:column="47"/></name></name><argument_list pos:line="98" pos:column="47">()<pos:position pos:line="98" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="50"/></condition><then pos:line="98" pos:column="50"> <block pos:line="98" pos:column="51">{
        <comment type="line" pos:line="99" pos:column="9">// remember the server certificate from the ErrorDetail object</comment>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<decl><type><name><name pos:line="100" pos:column="13">Ssl<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">::<pos:position pos:line="100" pos:column="18"/></operator><name pos:line="100" pos:column="18">ServerBump<pos:position pos:line="100" pos:column="28"/></name></name> <modifier pos:line="100" pos:column="29">*<pos:position pos:line="100" pos:column="30"/></modifier></type><name pos:line="100" pos:column="30">serverBump<pos:position pos:line="100" pos:column="40"/></name> <init pos:line="100" pos:column="41">= <expr><call><name><name pos:line="100" pos:column="43">request<pos:position pos:line="100" pos:column="50"/></name><operator pos:line="100" pos:column="50">-&gt;<pos:position pos:line="100" pos:column="55"/></operator><name pos:line="100" pos:column="52">clientConnectionManager<pos:position pos:line="100" pos:column="75"/></name><operator pos:line="100" pos:column="75">-&gt;<pos:position pos:line="100" pos:column="80"/></operator><name pos:line="100" pos:column="77">serverBump<pos:position pos:line="100" pos:column="87"/></name></name><argument_list pos:line="100" pos:column="87">()<pos:position pos:line="100" pos:column="89"/></argument_list></call></expr></init></decl>)<pos:position pos:line="100" pos:column="90"/></condition><then pos:line="100" pos:column="90"> <block pos:line="100" pos:column="91">{
            <expr_stmt><expr><call><name><name pos:line="101" pos:column="13">serverBump<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">-&gt;<pos:position pos:line="101" pos:column="28"/></operator><name pos:line="101" pos:column="25">serverCert<pos:position pos:line="101" pos:column="35"/></name><operator pos:line="101" pos:column="35">.<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="36">reset<pos:position pos:line="101" pos:column="41"/></name></name><argument_list pos:line="101" pos:column="41">(<argument><expr><call><name pos:line="101" pos:column="42">SSL_get_peer_certificate<pos:position pos:line="101" pos:column="66"/></name><argument_list pos:line="101" pos:column="66">(<argument><expr><name pos:line="101" pos:column="67">ssl<pos:position pos:line="101" pos:column="70"/></name></expr></argument>)<pos:position pos:line="101" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="73"/></expr_stmt>

            <comment type="line" pos:line="103" pos:column="13">// remember validation errors, if any</comment>
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<decl><type><name><name pos:line="104" pos:column="17">Ssl<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">::<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">Errors<pos:position pos:line="104" pos:column="28"/></name></name> <modifier pos:line="104" pos:column="29">*<pos:position pos:line="104" pos:column="30"/></modifier></type><name pos:line="104" pos:column="30">errs<pos:position pos:line="104" pos:column="34"/></name> <init pos:line="104" pos:column="35">= <expr><cast type="static" pos:line="104" pos:column="37">static_cast<argument_list type="generic" pos:line="104" pos:column="48">&lt;<argument><expr><name><name pos:line="104" pos:column="49">Ssl<pos:position pos:line="104" pos:column="52"/></name><operator pos:line="104" pos:column="52">::<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="54">Errors<pos:position pos:line="104" pos:column="60"/></name></name> <operator pos:line="104" pos:column="61">*<pos:position pos:line="104" pos:column="62"/></operator></expr></argument>&gt;<pos:position pos:line="104" pos:column="66"/></argument_list><argument_list pos:line="104" pos:column="63">(<argument><expr><call><name pos:line="104" pos:column="64">SSL_get_ex_data<pos:position pos:line="104" pos:column="79"/></name><argument_list pos:line="104" pos:column="79">(<argument><expr><name pos:line="104" pos:column="80">ssl<pos:position pos:line="104" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="85">ssl_ex_index_ssl_errors<pos:position pos:line="104" pos:column="108"/></name></expr></argument>)<pos:position pos:line="104" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="110"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="104" pos:column="111"/></condition><then pos:line="104" pos:column="111">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="105" pos:column="17">serverBump<pos:position pos:line="105" pos:column="27"/></name><operator pos:line="105" pos:column="27">-&gt;<pos:position pos:line="105" pos:column="32"/></operator><name pos:line="105" pos:column="29">sslErrors<pos:position pos:line="105" pos:column="38"/></name></name> <operator pos:line="105" pos:column="39">=<pos:position pos:line="105" pos:column="40"/></operator> <call><name pos:line="105" pos:column="41">cbdataReference<pos:position pos:line="105" pos:column="56"/></name><argument_list pos:line="105" pos:column="56">(<argument><expr><name pos:line="105" pos:column="57">errs<pos:position pos:line="105" pos:column="61"/></name></expr></argument>)<pos:position pos:line="105" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt></block></then></if>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><call><name pos:line="109" pos:column="9">serverConnection<pos:position pos:line="109" pos:column="25"/></name><argument_list pos:line="109" pos:column="25">()<pos:position pos:line="109" pos:column="27"/></argument_list></call><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><call><name pos:line="109" pos:column="29">getPeer<pos:position pos:line="109" pos:column="36"/></name><argument_list pos:line="109" pos:column="36">()<pos:position pos:line="109" pos:column="38"/></argument_list></call> <operator pos:line="109" pos:column="39">&amp;&amp;<pos:position pos:line="109" pos:column="49"/></operator> <operator pos:line="109" pos:column="42">!<pos:position pos:line="109" pos:column="43"/></operator><call><name pos:line="109" pos:column="43">SSL_session_reused<pos:position pos:line="109" pos:column="61"/></name><argument_list pos:line="109" pos:column="61">(<argument><expr><name pos:line="109" pos:column="62">ssl<pos:position pos:line="109" pos:column="65"/></name></expr></argument>)<pos:position pos:line="109" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="67"/></condition><then pos:line="109" pos:column="67"> <block pos:line="109" pos:column="68">{
        <if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><call><name pos:line="110" pos:column="13">serverConnection<pos:position pos:line="110" pos:column="29"/></name><argument_list pos:line="110" pos:column="29">()<pos:position pos:line="110" pos:column="31"/></argument_list></call><operator pos:line="110" pos:column="31">-&gt;<pos:position pos:line="110" pos:column="36"/></operator><call><name pos:line="110" pos:column="33">getPeer<pos:position pos:line="110" pos:column="40"/></name><argument_list pos:line="110" pos:column="40">()<pos:position pos:line="110" pos:column="42"/></argument_list></call><operator pos:line="110" pos:column="42">-&gt;<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="44">sslSession<pos:position pos:line="110" pos:column="54"/></name></expr>)<pos:position pos:line="110" pos:column="55"/></condition><then pos:line="110" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="13">SSL_SESSION_free<pos:position pos:line="111" pos:column="29"/></name><argument_list pos:line="111" pos:column="29">(<argument><expr><call><name pos:line="111" pos:column="30">serverConnection<pos:position pos:line="111" pos:column="46"/></name><argument_list pos:line="111" pos:column="46">()<pos:position pos:line="111" pos:column="48"/></argument_list></call><operator pos:line="111" pos:column="48">-&gt;<pos:position pos:line="111" pos:column="53"/></operator><call><name pos:line="111" pos:column="50">getPeer<pos:position pos:line="111" pos:column="57"/></name><argument_list pos:line="111" pos:column="57">()<pos:position pos:line="111" pos:column="59"/></argument_list></call><operator pos:line="111" pos:column="59">-&gt;<pos:position pos:line="111" pos:column="64"/></operator><name pos:line="111" pos:column="61">sslSession<pos:position pos:line="111" pos:column="71"/></name></expr></argument>)<pos:position pos:line="111" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="73"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="113" pos:column="9">serverConnection<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">()<pos:position pos:line="113" pos:column="27"/></argument_list></call><operator pos:line="113" pos:column="27">-&gt;<pos:position pos:line="113" pos:column="32"/></operator><call><name pos:line="113" pos:column="29">getPeer<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">()<pos:position pos:line="113" pos:column="38"/></argument_list></call><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">sslSession<pos:position pos:line="113" pos:column="50"/></name> <operator pos:line="113" pos:column="51">=<pos:position pos:line="113" pos:column="52"/></operator> <call><name pos:line="113" pos:column="53">SSL_get1_session<pos:position pos:line="113" pos:column="69"/></name><argument_list pos:line="113" pos:column="69">(<argument><expr><name pos:line="113" pos:column="70">ssl<pos:position pos:line="113" pos:column="73"/></name></expr></argument>)<pos:position pos:line="113" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="116" pos:column="5">dispatch<pos:position pos:line="116" pos:column="13"/></name><argument_list pos:line="116" pos:column="13">()<pos:position pos:line="116" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="16"/></expr_stmt>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

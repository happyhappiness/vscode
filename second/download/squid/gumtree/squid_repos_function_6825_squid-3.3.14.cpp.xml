<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6825_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">RFCNB_Get_Error<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">buffer<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">buf_len<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">RFCNB_saved_errno<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <block pos:line="5" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">snprintf<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">buffer<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="26">(<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">buf_len<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">-<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="37">1<pos:position pos:line="6" pos:column="38"/></literal><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="41">"%s"<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="47">RFCNB_Error_Strings<pos:position pos:line="6" pos:column="66"/></name><index pos:line="6" pos:column="66">[<expr><name pos:line="6" pos:column="67">RFCNB_errno<pos:position pos:line="6" pos:column="78"/></name></expr>]<pos:position pos:line="6" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else <block pos:line="7" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">snprintf<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">buffer<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">buf_len<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">-<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="37">1<pos:position pos:line="8" pos:column="38"/></literal><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="41">"%s\n\terrno:%s"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="59">RFCNB_Error_Strings<pos:position pos:line="8" pos:column="78"/></name><index pos:line="8" pos:column="78">[<expr><name pos:line="8" pos:column="79">RFCNB_errno<pos:position pos:line="8" pos:column="90"/></name></expr>]<pos:position pos:line="8" pos:column="91"/></index></name></expr></argument>,
                 <argument><expr><call><name pos:line="9" pos:column="18">strerror<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">RFCNB_saved_errno<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

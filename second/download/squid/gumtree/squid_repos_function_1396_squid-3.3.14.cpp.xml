<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1396_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">icpUdpSend<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">fd<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>,
           <parameter><decl><type><specifier pos:line="3" pos:column="12">const<pos:position pos:line="3" pos:column="17"/></specifier> <name><name pos:line="3" pos:column="18">Ip<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">::<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">Address<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">&amp;<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="31">to<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="4" pos:column="12">icp_common_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type> <name pos:line="4" pos:column="27">msg<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="5" pos:column="12">log_type<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">logcode<pos:position pos:line="5" pos:column="28"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">delay<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="22"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">icpUdpData<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">queue<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">x<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">len<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">int<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">ntohs<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">msg<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">length<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">12<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">5<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"icpUdpSend: FD "<pos:position pos:line="12" pos:column="36"/></literal> <operator pos:line="12" pos:column="37">&lt;&lt;<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="40">fd<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">&lt;&lt;<pos:position pos:line="12" pos:column="51"/></operator> <literal type="string" pos:line="12" pos:column="46">" sending "<pos:position pos:line="12" pos:column="57"/></literal> <operator pos:line="12" pos:column="58">&lt;&lt;<pos:position pos:line="12" pos:column="66"/></operator>
           <name><name pos:line="13" pos:column="12">icp_opcode_str<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><name><name pos:line="13" pos:column="27">msg<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">opcode<pos:position pos:line="13" pos:column="38"/></name></name></expr>]<pos:position pos:line="13" pos:column="39"/></index></name> <operator pos:line="13" pos:column="40">&lt;&lt;<pos:position pos:line="13" pos:column="48"/></operator> <literal type="string" pos:line="13" pos:column="43">", "<pos:position pos:line="13" pos:column="47"/></literal> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="51">len<pos:position pos:line="13" pos:column="54"/></name> <operator pos:line="13" pos:column="55">&lt;&lt;<pos:position pos:line="13" pos:column="63"/></operator> <literal type="string" pos:line="13" pos:column="58">" bytes to "<pos:position pos:line="13" pos:column="70"/></literal> <operator pos:line="13" pos:column="71">&lt;&lt;<pos:position pos:line="13" pos:column="79"/></operator> <name pos:line="13" pos:column="74">to<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">x<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">comm_udp_sendto<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">fd<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">to<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">msg<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">len<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">x<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&gt;=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16"> <block pos:line="17" pos:column="17">{
        <comment type="block" pos:line="18" pos:column="9">/* successfully written */</comment>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">icpLogIcp<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">to<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">logcode<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">len<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="37">(<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">char<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></operator><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator> <operator pos:line="19" pos:column="46">(<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">msg<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">+<pos:position pos:line="19" pos:column="52"/></operator> <literal type="number" pos:line="19" pos:column="53">1<pos:position pos:line="19" pos:column="54"/></literal><operator pos:line="19" pos:column="54">)<pos:position pos:line="19" pos:column="55"/></operator></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">delay<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">icpCount<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">msg<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">SENT<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">size_t<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">len<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">delay<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">safe_free<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">msg<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <elseif pos:line="22" pos:column="7">else <if pos:line="22" pos:column="12">if <condition pos:line="22" pos:column="15">(<expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">delay<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
        <comment type="block" pos:line="23" pos:column="9">/* send failed, but queue it */</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">queue<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">icpUdpData<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></operator><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator> <call><name pos:line="24" pos:column="32">xcalloc<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><literal type="number" pos:line="24" pos:column="40">1<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="43">sizeof<argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">icpUdpData<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">queue<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">address<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">to<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">queue<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">msg<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">msg<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">queue<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">len<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">int<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">ntohs<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name><name pos:line="27" pos:column="34">msg<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">length<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">queue<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">queue_time<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">current_time<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">queue<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">logcode<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">logcode<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">IcpQueueHead<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">NULL<pos:position pos:line="31" pos:column="33"/></name></expr>)<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34"> <block pos:line="31" pos:column="35">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">IcpQueueHead<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">queue<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">IcpQueueTail<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">queue<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name pos:line="34" pos:column="20">IcpQueueTail<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">==<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="36">IcpQueueHead<pos:position pos:line="34" pos:column="48"/></name></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49"> <block pos:line="34" pos:column="50">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">IcpQueueTail<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">queue<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">IcpQueueHead<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">-&gt;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="27">next<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">queue<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif> <else pos:line="37" pos:column="11">else <block pos:line="37" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">IcpQueueTail<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">next<pos:position pos:line="38" pos:column="31"/></name></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">queue<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">IcpQueueTail<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">queue<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="42" pos:column="9">Comm<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">::<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">SetSelect<pos:position pos:line="42" pos:column="24"/></name></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">fd<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="29">COMM_SELECT_WRITE<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">icpUdpSendQueue<pos:position pos:line="42" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="65">NULL<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="71">0<pos:position pos:line="42" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="43" pos:column="9">++<pos:position pos:line="43" pos:column="11"/></operator><name><name pos:line="43" pos:column="11">statCounter<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">icp<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">.<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">replies_queued<pos:position pos:line="43" pos:column="41"/></name></name></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif> <else pos:line="44" pos:column="7">else <block pos:line="44" pos:column="12">{
        <comment type="block" pos:line="45" pos:column="9">/* don't queue it */</comment>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">++<pos:position pos:line="46" pos:column="11"/></operator><name><name pos:line="46" pos:column="11">statCounter<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">.<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">icp<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">.<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">replies_dropped<pos:position pos:line="46" pos:column="42"/></name></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">x<pos:position pos:line="49" pos:column="13"/></name></expr>;<pos:position pos:line="49" pos:column="14"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

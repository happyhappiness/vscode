<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_721.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">make_pub_auth<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">cachemgr_request<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">req<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">safe_free<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name><name pos:line="5" pos:column="15">req<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">pub_auth<pos:position pos:line="5" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
    <macro><name pos:line="6" pos:column="5">debug<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><literal type="number" pos:line="6" pos:column="11">3<pos:position pos:line="6" pos:column="12"/></literal></argument>)<pos:position pos:line="6" pos:column="13"/></argument_list></macro> <expr_stmt><expr><call><name pos:line="6" pos:column="14">fprintf<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">stderr<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"cmgr: encoding for pub...\n"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">req<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">passwd<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">||<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">!<pos:position pos:line="8" pos:column="26"/></operator><call><name pos:line="8" pos:column="26">strlen<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">req<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">passwd<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* host | time | user | passwd */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">buf<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="19">sizeof<argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">buf<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"%s|%d|%s|%s"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="13" pos:column="14">req<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">hostname<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>,
             <argument><expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">int<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">now<pos:position pos:line="14" pos:column="23"/></name></expr></argument>,
             <argument><expr><ternary><condition><expr><name><name pos:line="15" pos:column="14">req<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">user_name<pos:position pos:line="15" pos:column="28"/></name></name></expr> ?<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <expr><name><name pos:line="15" pos:column="31">req<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">user_name<pos:position pos:line="15" pos:column="45"/></name></name></expr> <pos:position pos:line="15" pos:column="46"/></then><else pos:line="15" pos:column="46">: <expr><literal type="string" pos:line="15" pos:column="48">""<pos:position pos:line="15" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
             <argument><expr><name><name pos:line="16" pos:column="14">req<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">passwd<pos:position pos:line="16" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

    <macro><name pos:line="18" pos:column="5">debug<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><literal type="number" pos:line="18" pos:column="11">3<pos:position pos:line="18" pos:column="12"/></literal></argument>)<pos:position pos:line="18" pos:column="13"/></argument_list></macro> <expr_stmt><expr><call><name pos:line="18" pos:column="14">fprintf<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">stderr<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">"cmgr: pre-encoded for pub: %s\n"<pos:position pos:line="18" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">buf<pos:position pos:line="18" pos:column="68"/></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>

    <macro><name pos:line="20" pos:column="5">debug<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><literal type="number" pos:line="20" pos:column="11">3<pos:position pos:line="20" pos:column="12"/></literal></argument>)<pos:position pos:line="20" pos:column="13"/></argument_list></macro> <expr_stmt><expr><call><name pos:line="20" pos:column="14">fprintf<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">stderr<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"cmgr: encoded: '%s'\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="55">base64_encode<pos:position pos:line="20" pos:column="68"/></name><argument_list pos:line="20" pos:column="68">(<argument><expr><name pos:line="20" pos:column="69">buf<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">req<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">pub_auth<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">xstrdup<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">base64_encode<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">buf<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3467_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">sendClientOldEntry<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Get the old request back */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">restoreState<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">()<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* here the data to send is in the next nodes buffers already */</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">EBIT_TEST<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><call><name><name pos:line="7" pos:column="23">http<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">storeEntry<pos:position pos:line="7" pos:column="39"/></name></name><argument_list pos:line="7" pos:column="39">()<pos:position pos:line="7" pos:column="41"/></argument_list></call><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">flags<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">ENTRY_ABORTED<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* sendMoreData tracks the offset as well.
     * Force it back to zero */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">reqofs<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">StoreIOBuffer<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">tempresult<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">reqsize<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">reqofs<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="48">next<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">()<pos:position pos:line="11" pos:column="54"/></argument_list></call><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name><name pos:line="11" pos:column="56">readBuffer<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">data<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></decl>;<pos:position pos:line="11" pos:column="73"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sendMoreData<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">tempresult<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

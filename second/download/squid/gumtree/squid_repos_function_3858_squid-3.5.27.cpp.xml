<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3858_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">ProbeTransport<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// check for usable IPv6 sockets</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">s<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><call><name pos:line="5" pos:column="13">socket<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">PF_INET6<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">SOCK_STREAM<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">&lt;<pos:position pos:line="6" pos:column="15"/></operator> <literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block pos:line="6" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="19">2<pos:position pos:line="7" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="22">"IPv6 not supported on this machine. Auto-Disabled."<pos:position pos:line="7" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">EnableIpv6<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">IPV6_OFF<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="12" pos:column="5">// Test for v4-mapping capability</comment>
    <comment type="line" pos:line="13" pos:column="5">// (AKA. the operating system supports RFC 3493 section 5.3)</comment>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><call><name pos:line="14" pos:column="5">defined<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">IPV6_V6ONLY<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">tos<pos:position pos:line="15" pos:column="12"/></name> <init pos:line="15" pos:column="13">= <expr><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">setsockopt<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">s<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">IPPROTO_IPV6<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">IPV6_V6ONLY<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">(<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">char<pos:position pos:line="16" pos:column="55"/></name> <operator pos:line="16" pos:column="56">*<pos:position pos:line="16" pos:column="57"/></operator><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator> <operator pos:line="16" pos:column="59">&amp;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="60">tos<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="65">sizeof<argument_list pos:line="16" pos:column="71">(<argument><expr><name pos:line="16" pos:column="72">int<pos:position pos:line="16" pos:column="75"/></name></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call> <operator pos:line="16" pos:column="78">==<pos:position pos:line="16" pos:column="80"/></operator> <literal type="number" pos:line="16" pos:column="81">0<pos:position pos:line="16" pos:column="82"/></literal></expr>)<pos:position pos:line="16" pos:column="83"/></condition><then pos:line="16" pos:column="83"> <block pos:line="16" pos:column="84">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="19">2<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="22">"Detected IPv6 hybrid or v4-mapping stack..."<pos:position pos:line="17" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">EnableIpv6<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">|=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">IPV6_SPECIAL_V4MAPPING<pos:position pos:line="18" pos:column="45"/></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">3<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="19">2<pos:position pos:line="20" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="22">"Detected split IPv4 and IPv6 stacks ..."<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">EnableIpv6<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">|=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="21" pos:column="46"/></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="line" pos:line="24" pos:column="5">// compliance here means they at least supply the option for compilers building code</comment>
    <comment type="line" pos:line="25" pos:column="5">// even if possibly to return hard-coded -1 on use.</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">3<pos:position pos:line="26" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="15">2<pos:position pos:line="26" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="18">"Missing RFC 3493 compliance - attempting split IPv4 and IPv6 stacks ..."<pos:position pos:line="26" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">EnableIpv6<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">|=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="line" pos:line="29" pos:column="5">// TODO: attempt to use the socket to connect somewhere ?</comment>
    <comment type="line" pos:line="30" pos:column="5">//  needs to be safe to contact and with guaranteed working IPv6 at the other end.</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">close<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">s<pos:position pos:line="31" pos:column="12"/></name></expr></argument>)<pos:position pos:line="31" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">USE_IPV6<pos:position pos:line="33" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">3<pos:position pos:line="34" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="15">2<pos:position pos:line="34" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="18">"IPv6 transport "<pos:position pos:line="34" pos:column="35"/></literal> <operator pos:line="34" pos:column="36">&lt;&lt;<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="39">(<pos:position pos:line="34" pos:column="40"/></operator><ternary><condition><expr><name pos:line="34" pos:column="40">EnableIpv6<pos:position pos:line="34" pos:column="50"/></name></expr>?<pos:position pos:line="34" pos:column="51"/></condition><then><expr><literal type="string" pos:line="34" pos:column="51">"Enabled"<pos:position pos:line="34" pos:column="60"/></literal></expr></then><else pos:line="34" pos:column="60">:<expr><literal type="string" pos:line="34" pos:column="61">"Disabled"<pos:position pos:line="34" pos:column="71"/></literal></expr></else></ternary><operator pos:line="34" pos:column="71">)<pos:position pos:line="34" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">debugs<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">3<pos:position pos:line="36" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="15">2<pos:position pos:line="36" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="18">"IPv6 transport "<pos:position pos:line="36" pos:column="35"/></literal> <operator pos:line="36" pos:column="36">&lt;&lt;<pos:position pos:line="36" pos:column="44"/></operator> <operator pos:line="36" pos:column="39">(<pos:position pos:line="36" pos:column="40"/></operator><ternary><condition><expr><name pos:line="36" pos:column="40">EnableIpv6<pos:position pos:line="36" pos:column="50"/></name></expr>?<pos:position pos:line="36" pos:column="51"/></condition><then><expr><literal type="string" pos:line="36" pos:column="51">"Available"<pos:position pos:line="36" pos:column="62"/></literal></expr></then><else pos:line="36" pos:column="62">:<expr><literal type="string" pos:line="36" pos:column="63">"Disabled"<pos:position pos:line="36" pos:column="73"/></literal></expr></else></ternary><operator pos:line="36" pos:column="73">)<pos:position pos:line="36" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">EnableIpv6<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">!=<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">IPV6_OFF<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">debugs<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="number" pos:line="38" pos:column="16">3<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="19">DBG_CRITICAL<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"WARNING: BCP 177 violation. IPv6 transport forced OFF by build parameters."<pos:position pos:line="38" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="111"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">EnableIpv6<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">IPV6_OFF<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3746_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRange<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">canonize<pos:position pos:line="2" pos:column="23"/></name></name> <parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">int64_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">newClen<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">clen<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">=<pos:position pos:line="4" pos:column="11"/></operator> <name pos:line="4" pos:column="12">newClen<pos:position pos:line="4" pos:column="19"/></name></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">64<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"HttpHdrRange::canonize: started with "<pos:position pos:line="5" pos:column="58"/></literal> <operator pos:line="5" pos:column="59">&lt;&lt;<pos:position pos:line="5" pos:column="67"/></operator> <call><name><name pos:line="5" pos:column="62">specs<pos:position pos:line="5" pos:column="67"/></name><operator pos:line="5" pos:column="67">.<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">size<pos:position pos:line="5" pos:column="72"/></name></name><argument_list pos:line="5" pos:column="72">()<pos:position pos:line="5" pos:column="74"/></argument_list></call> <operator pos:line="5" pos:column="75">&lt;&lt;<pos:position pos:line="5" pos:column="83"/></operator>
           <literal type="string" pos:line="6" pos:column="12">" specs, clen: "<pos:position pos:line="6" pos:column="28"/></literal> <operator pos:line="6" pos:column="29">&lt;&lt;<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="32">clen<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">std<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">vector<pos:position pos:line="7" pos:column="16"/></name><argument_list type="generic" pos:line="7" pos:column="16">&lt;<argument><expr><name pos:line="7" pos:column="17">HttpHdrRangeSpec<pos:position pos:line="7" pos:column="33"/></name><modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></expr></argument>&gt;<pos:position pos:line="7" pos:column="38"/></argument_list></name></name></type> <name pos:line="7" pos:column="36">goods<pos:position pos:line="7" pos:column="41"/></name></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">getCanonizedSpecs<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">goods<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">merge<pos:position pos:line="9" pos:column="10"/></name> <argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">goods<pos:position pos:line="9" pos:column="17"/></name></expr></argument>)<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">64<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">3<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"HttpHdrRange::canonize: finished with "<pos:position pos:line="10" pos:column="59"/></literal> <operator pos:line="10" pos:column="60">&lt;&lt;<pos:position pos:line="10" pos:column="68"/></operator> <call><name><name pos:line="10" pos:column="63">specs<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">.<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="69">size<pos:position pos:line="10" pos:column="73"/></name></name><argument_list pos:line="10" pos:column="73">()<pos:position pos:line="10" pos:column="75"/></argument_list></call> <operator pos:line="10" pos:column="76">&lt;&lt;<pos:position pos:line="10" pos:column="84"/></operator>
           <literal type="string" pos:line="11" pos:column="12">" specs"<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><call><name><name pos:line="12" pos:column="12">specs<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">size<pos:position pos:line="12" pos:column="22"/></name></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call> <operator pos:line="12" pos:column="25">&gt;<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></return> <comment type="line" pos:line="12" pos:column="30">// fixme, should return bool</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

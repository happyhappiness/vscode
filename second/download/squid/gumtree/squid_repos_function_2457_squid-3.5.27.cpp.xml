<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2457_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsDoSendQueryVC<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">nsvc<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">vc<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">vc<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">busy<pos:position pos:line="4" pos:column="17"/></name></name></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">vc<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">queue<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">contentSize<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call> <operator pos:line="7" pos:column="34">==<pos:position pos:line="7" pos:column="36"/></operator> <literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// if retrying after a TC UDP response, our close handler cb may be pending</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">fd_table<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name><name pos:line="11" pos:column="18">vc<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">conn<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">fd<pos:position pos:line="11" pos:column="30"/></name></name></expr>]<pos:position pos:line="11" pos:column="31"/></index></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><call><name pos:line="11" pos:column="32">closing<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">()<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">MemBuf<pos:position pos:line="14" pos:column="11"/></name> <modifier pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></modifier></type><name pos:line="14" pos:column="13">mb<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><name><name pos:line="14" pos:column="18">vc<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">queue<pos:position pos:line="14" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">vc<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">queue<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <operator pos:line="16" pos:column="17">new<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">MemBuf<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">vc<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">busy<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>

    <comment type="line" pos:line="20" pos:column="5">// Comm needs seconds but idnsCheckQueue() will check the exact timeout</comment>
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">int<pos:position pos:line="21" pos:column="14"/></name></type> <name pos:line="21" pos:column="15">timeout<pos:position pos:line="21" pos:column="22"/></name> <init pos:line="21" pos:column="23">= <expr><operator pos:line="21" pos:column="25">(<pos:position pos:line="21" pos:column="26"/></operator><ternary><condition><expr><name><name pos:line="21" pos:column="26">Config<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">Timeout<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">idns_query<pos:position pos:line="21" pos:column="51"/></name></name> <operator pos:line="21" pos:column="52">%<pos:position pos:line="21" pos:column="53"/></operator> <literal type="number" pos:line="21" pos:column="54">1000<pos:position pos:line="21" pos:column="58"/></literal></expr> ?<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
                         <expr><name><name pos:line="22" pos:column="26">Config<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">Timeout<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">idns_query<pos:position pos:line="22" pos:column="51"/></name></name> <operator pos:line="22" pos:column="52">+<pos:position pos:line="22" pos:column="53"/></operator> <literal type="number" pos:line="22" pos:column="54">1000<pos:position pos:line="22" pos:column="58"/></literal></expr> <pos:position pos:line="22" pos:column="59"/></then><else pos:line="22" pos:column="59">: <expr><name><name pos:line="22" pos:column="61">Config<pos:position pos:line="22" pos:column="67"/></name><operator pos:line="22" pos:column="67">.<pos:position pos:line="22" pos:column="68"/></operator><name pos:line="22" pos:column="68">Timeout<pos:position pos:line="22" pos:column="75"/></name><operator pos:line="22" pos:column="75">.<pos:position pos:line="22" pos:column="76"/></operator><name pos:line="22" pos:column="76">idns_query<pos:position pos:line="22" pos:column="86"/></name></name></expr></else></ternary><operator pos:line="22" pos:column="86">)<pos:position pos:line="22" pos:column="87"/></operator> <operator pos:line="22" pos:column="88">/<pos:position pos:line="22" pos:column="89"/></operator> <literal type="number" pos:line="22" pos:column="90">1000<pos:position pos:line="22" pos:column="94"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="95"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="23" pos:column="5">AsyncCall<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">::<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">Pointer<pos:position pos:line="23" pos:column="23"/></name></name></type> <name pos:line="23" pos:column="24">nil<pos:position pos:line="23" pos:column="27"/></name></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">commSetConnTimeout<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">vc<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">conn<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">timeout<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">nil<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="27" pos:column="5">AsyncCall<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">::<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">Pointer<pos:position pos:line="27" pos:column="23"/></name></name></type> <name pos:line="27" pos:column="24">call<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><call><name pos:line="27" pos:column="31">commCbCall<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><literal type="number" pos:line="27" pos:column="42">78<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="46">5<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="49">"idnsSentQueryVC"<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="28" pos:column="42">CommIoCbPtrFun<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><operator pos:line="28" pos:column="57">&amp;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="58">idnsSentQueryVC<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="75">vc<pos:position pos:line="28" pos:column="77"/></name></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">Comm<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">::<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">Write<pos:position pos:line="29" pos:column="16"/></name></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name><name pos:line="29" pos:column="17">vc<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">conn<pos:position pos:line="29" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">mb<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">call<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="31" pos:column="5">delete<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">mb<pos:position pos:line="31" pos:column="14"/></name></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

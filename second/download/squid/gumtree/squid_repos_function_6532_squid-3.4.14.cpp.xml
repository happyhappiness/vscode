<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6532_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreToCommWriter<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">NoteStoreCopied<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name pos:line="2" pos:column="41">void<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">data<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">StoreIOBuffer<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">ioBuf<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">data<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">!=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <comment type="line" pos:line="5" pos:column="5">// make sync Store call async to get async call protections and features</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreToCommWriter<pos:position pos:line="6" pos:column="22"/></name><modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type> <name pos:line="6" pos:column="24">writer<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><cast type="static" pos:line="6" pos:column="33">static_cast<argument_list type="generic" pos:line="6" pos:column="44">&lt;<argument><expr><name pos:line="6" pos:column="45">StoreToCommWriter<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">*<pos:position pos:line="6" pos:column="63"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="67"/></argument_list><argument_list pos:line="6" pos:column="64">(<argument><expr><name pos:line="6" pos:column="65">data<pos:position pos:line="6" pos:column="69"/></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="71"/></decl_stmt>
    <typedef pos:line="7" pos:column="5">typedef <type><name><name pos:line="7" pos:column="13">UnaryMemFunT<pos:position pos:line="7" pos:column="25"/></name><argument_list type="generic" pos:line="7" pos:column="25">&lt;<argument><expr><name pos:line="7" pos:column="26">StoreToCommWriter<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">StoreIOBuffer<pos:position pos:line="7" pos:column="58"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="62"/></argument_list></name></type> <name pos:line="7" pos:column="60">MyDialer<pos:position pos:line="7" pos:column="68"/></name>;<pos:position pos:line="7" pos:column="69"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">AsyncCall<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">Pointer<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">call<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">=
        <expr><call><name pos:line="9" pos:column="9">asyncCall<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="number" pos:line="9" pos:column="19">16<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">5<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"Mgr::StoreToCommWriter::noteStoreCopied"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="10" pos:column="19">MyDialer<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">writer<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="37">StoreToCommWriter<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">::<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">noteStoreCopied<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="73">ioBuf<pos:position pos:line="10" pos:column="78"/></name></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="81"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ScheduleCallHere<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">call<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1218_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">carpCachemgr<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">StoreEntry<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">sentry<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">sumfetches<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">sentry<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"%24s %10s %10s %10s %10s\n"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="7" pos:column="23">"Hostname"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="8" pos:column="23">"Hash"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="9" pos:column="23">"Multiplier"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="10" pos:column="23">"Factor"<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="11" pos:column="23">"Actual"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">p<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name><name pos:line="13" pos:column="14">Config<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">peers<pos:position pos:line="13" pos:column="26"/></name></name></expr>;<pos:position pos:line="13" pos:column="27"/></init> <condition><expr><name pos:line="13" pos:column="28">p<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></condition> <incr><expr><name pos:line="13" pos:column="31">p<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name><name pos:line="13" pos:column="35">p<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">next<pos:position pos:line="13" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="43"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">sumfetches<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">+=<pos:position pos:line="14" pos:column="22"/></operator> <name><name pos:line="14" pos:column="23">p<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">stats<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">fetches<pos:position pos:line="14" pos:column="39"/></name></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt></block></for>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">p<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">Config<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">peers<pos:position pos:line="16" pos:column="26"/></name></name></expr>;<pos:position pos:line="16" pos:column="27"/></init> <condition><expr><name pos:line="16" pos:column="28">p<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></condition> <incr><expr><name pos:line="16" pos:column="31">p<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <name><name pos:line="16" pos:column="35">p<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">next<pos:position pos:line="16" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="43"/></control> <block pos:line="16" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">storeAppendPrintf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">sentry<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"%24s %10x %10f %10f %10f\n"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="18" pos:column="27">p<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">name<pos:position pos:line="18" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">p<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">carp<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">.<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">hash<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="19" pos:column="27">p<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">carp<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">load_multiplier<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="20" pos:column="27">p<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">carp<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">.<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">load_factor<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="27">sumfetches<pos:position pos:line="21" pos:column="37"/></name></expr> ?<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <expr><operator pos:line="21" pos:column="40">(<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">double<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator> <name><name pos:line="21" pos:column="49">p<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">stats<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">.<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">fetches<pos:position pos:line="21" pos:column="65"/></name></name> <operator pos:line="21" pos:column="66">/<pos:position pos:line="21" pos:column="67"/></operator> <name pos:line="21" pos:column="68">sumfetches<pos:position pos:line="21" pos:column="78"/></name></expr> <pos:position pos:line="21" pos:column="79"/></then><else pos:line="21" pos:column="79">: <expr><operator pos:line="21" pos:column="81">-<pos:position pos:line="21" pos:column="82"/></operator><literal type="number" pos:line="21" pos:column="82">1.0<pos:position pos:line="21" pos:column="85"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="87"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

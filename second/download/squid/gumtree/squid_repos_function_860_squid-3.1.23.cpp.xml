<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_860_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">comm_set_tos<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">int<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">fd<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">tos<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">IP_TOS<pos:position pos:line="4" pos:column="14"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">x<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><call><name pos:line="5" pos:column="13">setsockopt<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">fd<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">IPPROTO_IP<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">IP_TOS<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="48">(<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">char<pos:position pos:line="5" pos:column="53"/></name> <operator pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></operator><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator> <operator pos:line="5" pos:column="57">&amp;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="58">tos<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="63">sizeof<argument_list pos:line="5" pos:column="69">(<argument><expr><name pos:line="5" pos:column="70">int<pos:position pos:line="5" pos:column="73"/></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">x<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">&lt;<pos:position pos:line="6" pos:column="15"/></operator> <literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">50<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"comm_set_tos: setsockopt(IP_TOS) on FD "<pos:position pos:line="7" pos:column="64"/></literal> <operator pos:line="7" pos:column="65">&lt;&lt;<pos:position pos:line="7" pos:column="73"/></operator> <name pos:line="7" pos:column="68">fd<pos:position pos:line="7" pos:column="70"/></name> <operator pos:line="7" pos:column="71">&lt;&lt;<pos:position pos:line="7" pos:column="79"/></operator> <literal type="string" pos:line="7" pos:column="74">": "<pos:position pos:line="7" pos:column="78"/></literal> <operator pos:line="7" pos:column="79">&lt;&lt;<pos:position pos:line="7" pos:column="87"/></operator> <call><name pos:line="7" pos:column="82">xstrerror<pos:position pos:line="7" pos:column="91"/></name><argument_list pos:line="7" pos:column="91">()<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="95"/></expr_stmt></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">x<pos:position pos:line="8" pos:column="13"/></name></expr>;<pos:position pos:line="8" pos:column="14"/></return>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">50<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"WARNING: setsockopt(IP_TOS) not supported on this platform"<pos:position pos:line="10" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

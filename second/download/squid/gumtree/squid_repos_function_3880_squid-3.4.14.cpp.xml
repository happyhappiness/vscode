<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3880_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">ServiceConfig<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">grokBool<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">bool<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">var<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">name<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="66">const<pos:position pos:line="2" pos:column="71"/></specifier> <name pos:line="2" pos:column="72">char<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type><name pos:line="2" pos:column="78">value<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="84"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">strcmp<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">value<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="24">"0"<pos:position pos:line="4" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call> <operator pos:line="4" pos:column="29">||<pos:position pos:line="4" pos:column="31"/></operator> <operator pos:line="4" pos:column="32">!<pos:position pos:line="4" pos:column="33"/></operator><call><name pos:line="4" pos:column="33">strcmp<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name pos:line="4" pos:column="40">value<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="47">"off"<pos:position pos:line="4" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="54"/></condition><then pos:line="4" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">var<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <literal type="boolean" pos:line="5" pos:column="15">false<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt></block></then>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">strcmp<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">value<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="29">"1"<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">||<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">!<pos:position pos:line="6" pos:column="38"/></operator><call><name pos:line="6" pos:column="38">strcmp<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">value<pos:position pos:line="6" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="52">"on"<pos:position pos:line="6" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="58"/></condition><then pos:line="6" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">var<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="boolean" pos:line="7" pos:column="15">true<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt></block></then></if></elseif>
    <else pos:line="8" pos:column="5">else <block pos:line="8" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="19">DBG_CRITICAL<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">HERE<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">&lt;&lt;<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="41">cfg_filename<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">&lt;&lt;<pos:position pos:line="9" pos:column="62"/></operator> <literal type="char" pos:line="9" pos:column="57">':'<pos:position pos:line="9" pos:column="60"/></literal> <operator pos:line="9" pos:column="61">&lt;&lt;<pos:position pos:line="9" pos:column="69"/></operator> <name pos:line="9" pos:column="64">config_lineno<pos:position pos:line="9" pos:column="77"/></name> <operator pos:line="9" pos:column="78">&lt;&lt;<pos:position pos:line="9" pos:column="86"/></operator> <literal type="string" pos:line="9" pos:column="81">": "<pos:position pos:line="9" pos:column="85"/></literal> <operator pos:line="9" pos:column="86">&lt;&lt;<pos:position pos:line="9" pos:column="94"/></operator>
               <literal type="string" pos:line="10" pos:column="16">"wrong value for boolean "<pos:position pos:line="10" pos:column="42"/></literal> <operator pos:line="10" pos:column="43">&lt;&lt;<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="46">name<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">&lt;&lt;<pos:position pos:line="10" pos:column="59"/></operator> <literal type="string" pos:line="10" pos:column="54">"; "<pos:position pos:line="10" pos:column="58"/></literal> <operator pos:line="10" pos:column="59">&lt;&lt;<pos:position pos:line="10" pos:column="67"/></operator>
               <literal type="string" pos:line="11" pos:column="16">"'0', '1', 'on', or 'off' expected but got: "<pos:position pos:line="11" pos:column="61"/></literal> <operator pos:line="11" pos:column="62">&lt;&lt;<pos:position pos:line="11" pos:column="70"/></operator> <name pos:line="11" pos:column="65">value<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><literal type="boolean" pos:line="12" pos:column="16">false<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>

    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">true<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6393_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">netdbEntry<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">netdbAdd<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name><name pos:line="2" pos:column="10">Ip<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Address<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="23">addr<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">netdbEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">n<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">memInUse<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">MEM_NETDBENTRY<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">&gt;<pos:position pos:line="6" pos:column="38"/></operator> <name><name pos:line="6" pos:column="36">Config<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">Netdb<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">.<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">high<pos:position pos:line="6" pos:column="53"/></name></name></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">netdbPurgeLRU<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">netdbLookupAddr<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">addr<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">n<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">netdbEntry<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator><call><name pos:line="10" pos:column="27">memAllocate<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">MEM_NETDBENTRY<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">netdbHashInsert<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">n<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">addr<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">n<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

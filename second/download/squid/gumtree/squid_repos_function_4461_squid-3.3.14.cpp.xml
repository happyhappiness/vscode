<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4461_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">aclDumpUserListWalkee<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="38">node_data<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">void<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">outlist<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* outlist is really a wordlist ** */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">wordlistAdd<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">wordlist<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">outlist<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">(<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">char<pos:position pos:line="5" pos:column="44"/></name> <specifier pos:line="5" pos:column="45">const<pos:position pos:line="5" pos:column="50"/></specifier> <operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">node_data<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

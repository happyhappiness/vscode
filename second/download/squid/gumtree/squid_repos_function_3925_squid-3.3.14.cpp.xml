<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3925_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">libecap<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name><name pos:line="1" pos:column="10">shared_ptr<pos:position pos:line="1" pos:column="20"/></name><argument_list type="generic" pos:line="1" pos:column="20">&lt;<argument><expr><name><name pos:line="1" pos:column="21">libecap<pos:position pos:line="1" pos:column="28"/></name><operator pos:line="1" pos:column="28">::<pos:position pos:line="1" pos:column="30"/></operator><name pos:line="1" pos:column="30">Message<pos:position pos:line="1" pos:column="37"/></name></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="41"/></argument_list></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">MessageRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">clone<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">()<pos:position pos:line="2" pos:column="38"/></parameter_list> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpMsg<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">hdr<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name><name pos:line="4" pos:column="20">theMessage<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">header<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">clone<pos:position pos:line="4" pos:column="44"/></name></name><argument_list pos:line="4" pos:column="44">()<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">hdr<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">body_pipe<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt> <comment type="line" pos:line="5" pos:column="28">// if any; TODO: remove pipe cloning from ::clone?</comment>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">libecap<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">shared_ptr<pos:position pos:line="6" pos:column="24"/></name><argument_list type="generic" pos:line="6" pos:column="24">&lt;<argument><expr><name><name pos:line="6" pos:column="25">libecap<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">::<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">Message<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="45"/></argument_list></name></name></type> <name pos:line="6" pos:column="43">res<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><operator pos:line="6" pos:column="47">new<pos:position pos:line="6" pos:column="50"/></operator> <call><name pos:line="6" pos:column="51">MessageRep<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">hdr<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>

    <comment type="line" pos:line="8" pos:column="5">// restore indication of a body if needed, but not the pipe</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">theMessage<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">header<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">body_pipe<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">!=<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">NULL<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">res<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">addBody<pos:position pos:line="10" pos:column="21"/></name></name><argument_list pos:line="10" pos:column="21">()<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt></block></then></if>

    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">res<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

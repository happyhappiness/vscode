<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4113_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLHasComponentData<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">parseComponent<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">token<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">RequestStr<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">cmp<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">token<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="5" pos:column="9">componentMethods<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><name pos:line="5" pos:column="26">coRequest<pos:position pos:line="5" pos:column="35"/></name></expr>]<pos:position pos:line="5" pos:column="36"/></index></name> <operator pos:line="5" pos:column="37">=<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name><name pos:line="5" pos:column="40">ACLChecklist<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">::<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">hasRequest<pos:position pos:line="5" pos:column="64"/></name></name></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt></block></then>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><call><name><name pos:line="6" pos:column="14">ResponseStr<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">.<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">cmp<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">token<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="9">componentMethods<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">coResponse<pos:position pos:line="7" pos:column="36"/></name></expr>]<pos:position pos:line="7" pos:column="37"/></index></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name><name pos:line="7" pos:column="41">ACLChecklist<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">::<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">hasReply<pos:position pos:line="7" pos:column="63"/></name></name></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><call><name><name pos:line="8" pos:column="14">AleStr<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">cmp<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">token<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call> <operator pos:line="8" pos:column="32">==<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="9">componentMethods<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name pos:line="9" pos:column="26">coAle<pos:position pos:line="9" pos:column="31"/></name></expr>]<pos:position pos:line="9" pos:column="32"/></index></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator><name><name pos:line="9" pos:column="36">ACLChecklist<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">::<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">hasAle<pos:position pos:line="9" pos:column="56"/></name></name></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <else pos:line="10" pos:column="5">else <block pos:line="10" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">28<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_CRITICAL<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"FATAL: unsupported component '"<pos:position pos:line="11" pos:column="66"/></literal> <operator pos:line="11" pos:column="67">&lt;&lt;<pos:position pos:line="11" pos:column="75"/></operator> <name pos:line="11" pos:column="70">token<pos:position pos:line="11" pos:column="75"/></name> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator> <literal type="string" pos:line="11" pos:column="79">"' for 'has' acl"<pos:position pos:line="11" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="98"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">self_destruct<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_974_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">double<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">GetPercentage<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">bool<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">limit<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name><name pos:line="4" pos:column="19">ConfigParser<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">::<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">NextToken<pos:position pos:line="4" pos:column="42"/></name></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">token<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block pos:line="6" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">DBG_CRITICAL<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"FATAL: A percentage value is missing."<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">self_destruct<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">//if there is a % in the end of the digits, we remove it and go on.</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name><modifier pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></modifier></type> <name pos:line="12" pos:column="11">end<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><operator pos:line="12" pos:column="17">&amp;<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="18">token<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><call><name pos:line="12" pos:column="24">strlen<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">token<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">end<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <literal type="char" pos:line="13" pos:column="17">'%'<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">end<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><call><name pos:line="17" pos:column="13">xatoi<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">token<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">p<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">&lt;<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal> <operator pos:line="19" pos:column="15">||<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">limit<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="28">p<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">&gt;<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="32">100<pos:position pos:line="19" pos:column="35"/></literal><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">3<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="19">DBG_CRITICAL<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="33">"FATAL: The value '"<pos:position pos:line="20" pos:column="53"/></literal> <operator pos:line="20" pos:column="54">&lt;&lt;<pos:position pos:line="20" pos:column="62"/></operator> <name pos:line="20" pos:column="57">token<pos:position pos:line="20" pos:column="62"/></name> <operator pos:line="20" pos:column="63">&lt;&lt;<pos:position pos:line="20" pos:column="71"/></operator> <literal type="string" pos:line="20" pos:column="66">"' is out of range. A percentage should be within [0, 100]."<pos:position pos:line="20" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="128"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">self_destruct<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <return pos:line="24" pos:column="5">return <expr><cast type="static" pos:line="24" pos:column="12">static_cast<argument_list type="generic" pos:line="24" pos:column="23">&lt;<argument><expr><name pos:line="24" pos:column="24">double<pos:position pos:line="24" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="24" pos:column="34"/></argument_list><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">p<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></cast> <operator pos:line="24" pos:column="35">/<pos:position pos:line="24" pos:column="36"/></operator> <literal type="number" pos:line="24" pos:column="37">100.0<pos:position pos:line="24" pos:column="42"/></literal></expr>;<pos:position pos:line="24" pos:column="43"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

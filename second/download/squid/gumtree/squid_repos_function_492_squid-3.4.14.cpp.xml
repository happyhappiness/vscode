<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_492_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ldapconnect<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rc<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* On Windows ldap_start_tls_s is available starting from Windows XP,
     * so we need to bind at run-time with the function entry point
     */</comment>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="9" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">use_tls<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17"> <block pos:line="10" pos:column="18">{

        <decl_stmt><decl><type><name pos:line="12" pos:column="9">HMODULE<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">WLDAP32Handle<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><name pos:line="14" pos:column="9">WLDAP32Handle<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <call><name pos:line="14" pos:column="25">GetModuleHandle<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><literal type="string" pos:line="14" pos:column="41">"wldap32"<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">Win32_ldap_start_tls_s<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">=<pos:position pos:line="15" pos:column="38"/></operator> <operator pos:line="15" pos:column="39">(<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">PFldap_start_tls_s<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">)<pos:position pos:line="15" pos:column="59"/></operator> <call><name pos:line="15" pos:column="60">GetProcAddress<pos:position pos:line="15" pos:column="74"/></name><argument_list pos:line="15" pos:column="74">(<argument><expr><name pos:line="15" pos:column="75">WLDAP32Handle<pos:position pos:line="15" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="90">LDAP_START_TLS_S<pos:position pos:line="15" pos:column="106"/></name></expr></argument>)<pos:position pos:line="15" pos:column="107"/></argument_list></call><operator pos:line="15" pos:column="107">)<pos:position pos:line="15" pos:column="108"/></operator> <operator pos:line="15" pos:column="109">==<pos:position pos:line="15" pos:column="111"/></operator> <name pos:line="15" pos:column="112">NULL<pos:position pos:line="15" pos:column="116"/></name></expr>)<pos:position pos:line="15" pos:column="117"/></condition><then pos:line="15" pos:column="117"> <block pos:line="15" pos:column="118">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">fprintf<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">stderr<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">PROGRAM_NAME<pos:position pos:line="16" pos:column="41"/></name> <literal type="string" pos:line="16" pos:column="42">": ERROR: TLS (-Z) not supported on this platform.\n"<pos:position pos:line="16" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">exit<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">ld<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">==<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20"> <block pos:line="22" pos:column="21">{
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">HAS_URI_SUPPORT<pos:position pos:line="23" pos:column="20"/></name></expr></cpp:if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">strstr<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">ldapServer<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"://"<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call> <operator pos:line="24" pos:column="39">!=<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="42">NULL<pos:position pos:line="24" pos:column="46"/></name></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">rc<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">ldap_initialize<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><operator pos:line="25" pos:column="34">&amp;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="35">ld<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">ldapServer<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">rc<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">!=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">LDAP_SUCCESS<pos:position pos:line="26" pos:column="35"/></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">fprintf<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">stderr<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"\nUnable to connect to LDAPURI:%s\n"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">ldapServer<pos:position pos:line="27" pos:column="82"/></name></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></then> <elseif pos:line="29" pos:column="11">else
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">NETSCAPE_SSL<pos:position pos:line="31" pos:column="17"/></name></expr></cpp:if>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">sslpath<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">sslinit<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="33">(<pos:position pos:line="33" pos:column="34"/></operator><call><name pos:line="33" pos:column="34">ldapssl_client_init<pos:position pos:line="33" pos:column="53"/></name><argument_list pos:line="33" pos:column="53">(<argument><expr><name pos:line="33" pos:column="54">sslpath<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">NULL<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call> <operator pos:line="33" pos:column="69">!=<pos:position pos:line="33" pos:column="71"/></operator> <name pos:line="33" pos:column="72">LDAP_SUCCESS<pos:position pos:line="33" pos:column="84"/></name><operator pos:line="33" pos:column="84">)<pos:position pos:line="33" pos:column="85"/></operator></expr>)<pos:position pos:line="33" pos:column="86"/></condition><then pos:line="33" pos:column="86"> <block pos:line="33" pos:column="87">{
                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">fprintf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">stderr<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="37">"\nUnable to initialise SSL with cert path %s\n"<pos:position pos:line="34" pos:column="85"/></literal></expr></argument>,
                            <argument><expr><name pos:line="35" pos:column="29">sslpath<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="36" pos:column="21">exit<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then> <else pos:line="37" pos:column="19">else <block pos:line="37" pos:column="24">{
                    <expr_stmt><expr><operator pos:line="38" pos:column="21">++<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">sslinit<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="39" pos:column="18"/></block></else></if>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">ld<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <call><name pos:line="40" pos:column="27">ldapssl_init<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name pos:line="40" pos:column="40">ldapServer<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">port<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="58">1<pos:position pos:line="40" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call><operator pos:line="40" pos:column="60">)<pos:position pos:line="40" pos:column="61"/></operator> <operator pos:line="40" pos:column="62">==<pos:position pos:line="40" pos:column="64"/></operator> <name pos:line="40" pos:column="65">NULL<pos:position pos:line="40" pos:column="69"/></name></expr>)<pos:position pos:line="40" pos:column="70"/></condition><then pos:line="40" pos:column="70"> <block pos:line="40" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="41" pos:column="21">fprintf<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">stderr<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"\nUnable to connect to SSL LDAP server: %s port:%d\n"<pos:position pos:line="41" pos:column="91"/></literal></expr></argument>,
                            <argument><expr><name pos:line="42" pos:column="29">ldapServer<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">port<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="43" pos:column="21">exit<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if></elseif> <elseif pos:line="45" pos:column="15">else
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
                <if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">ld<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <call><name pos:line="47" pos:column="27">ldap_init<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">ldapServer<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">port<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call><operator pos:line="47" pos:column="54">)<pos:position pos:line="47" pos:column="55"/></operator> <operator pos:line="47" pos:column="56">==<pos:position pos:line="47" pos:column="58"/></operator> <name pos:line="47" pos:column="59">NULL<pos:position pos:line="47" pos:column="63"/></name></expr>)<pos:position pos:line="47" pos:column="64"/></condition><then pos:line="47" pos:column="64"> <block pos:line="47" pos:column="65">{
                    <expr_stmt><expr><call><name pos:line="48" pos:column="21">fprintf<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">stderr<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="37">"\nUnable to connect to LDAP server:%s port:%d\n"<pos:position pos:line="48" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="88">ldapServer<pos:position pos:line="48" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="100">port<pos:position pos:line="48" pos:column="104"/></name></expr></argument>)<pos:position pos:line="48" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="106"/></expr_stmt>
                }<pos:position pos:line="49" pos:column="18"/></block></then></if></elseif></if>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">connect_timeout<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="13">squid_ldap_set_connect_timeout<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">connect_timeout<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">LDAP_VERSION3<pos:position pos:line="53" pos:column="21"/></name></cpp:ifdef>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">version<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">==<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="24">-<pos:position pos:line="54" pos:column="25"/></operator><literal type="number" pos:line="54" pos:column="25">1<pos:position pos:line="54" pos:column="26"/></literal></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27"> <block pos:line="54" pos:column="28">{
            <expr_stmt><expr><name pos:line="55" pos:column="13">version<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">LDAP_VERSION2<pos:position pos:line="55" pos:column="36"/></name></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">ldap_set_option<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">ld<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="60">&amp;<pos:position pos:line="57" pos:column="65"/></operator><name pos:line="57" pos:column="61">version<pos:position pos:line="57" pos:column="68"/></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call>
                <operator pos:line="58" pos:column="17">!=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">LDAP_SUCCESS<pos:position pos:line="58" pos:column="32"/></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33"> <block pos:line="58" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">fprintf<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">stderr<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="29">"Could not set LDAP_OPT_PROTOCOL_VERSION %d\n"<pos:position pos:line="59" pos:column="75"/></literal></expr></argument>,
                    <argument><expr><name pos:line="60" pos:column="21">version<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">ldap_unbind<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">ld<pos:position pos:line="61" pos:column="27"/></name></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">ld<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">NULL<pos:position pos:line="62" pos:column="22"/></name></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">use_tls<pos:position pos:line="64" pos:column="20"/></name></expr>)<pos:position pos:line="64" pos:column="21"/></condition><then pos:line="64" pos:column="21"> <block pos:line="64" pos:column="22">{
<cpp:ifdef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifdef<pos:position pos:line="65" pos:column="7"/></cpp:directive> <name pos:line="65" pos:column="8">LDAP_OPT_X_TLS<pos:position pos:line="65" pos:column="22"/></name></cpp:ifdef>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">version<pos:position pos:line="66" pos:column="24"/></name> <operator pos:line="66" pos:column="25">!=<pos:position pos:line="66" pos:column="27"/></operator> <name pos:line="66" pos:column="28">LDAP_VERSION3<pos:position pos:line="66" pos:column="41"/></name></expr>)<pos:position pos:line="66" pos:column="42"/></condition><then pos:line="66" pos:column="42"> <block pos:line="66" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">fprintf<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">stderr<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="33">"TLS requires LDAP version 3\n"<pos:position pos:line="67" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">exit<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><literal type="number" pos:line="68" pos:column="22">1<pos:position pos:line="68" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then> <elseif pos:line="69" pos:column="15">else <if pos:line="69" pos:column="20">if <condition pos:line="69" pos:column="23">(<expr><call><name pos:line="69" pos:column="24">ldap_start_tls_s<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">ld<pos:position pos:line="69" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="45">NULL<pos:position pos:line="69" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="51">NULL<pos:position pos:line="69" pos:column="55"/></name></expr></argument>)<pos:position pos:line="69" pos:column="56"/></argument_list></call> <operator pos:line="69" pos:column="57">!=<pos:position pos:line="69" pos:column="59"/></operator> <name pos:line="69" pos:column="60">LDAP_SUCCESS<pos:position pos:line="69" pos:column="72"/></name></expr>)<pos:position pos:line="69" pos:column="73"/></condition><then pos:line="69" pos:column="73"> <block pos:line="69" pos:column="74">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">fprintf<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">stderr<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="33">"Could not Activate TLS connection\n"<pos:position pos:line="70" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">exit<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><literal type="number" pos:line="71" pos:column="22">1<pos:position pos:line="71" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then></if></elseif></if>
<cpp:else pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">else<pos:position pos:line="73" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">fprintf<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">stderr<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="29">"TLS not supported with your LDAP library\n"<pos:position pos:line="74" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ldap_unbind<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">ld<pos:position pos:line="75" pos:column="27"/></name></expr></argument>)<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="76" pos:column="13">ld<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <name pos:line="76" pos:column="18">NULL<pos:position pos:line="76" pos:column="22"/></name></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">squid_ldap_set_timelimit<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name pos:line="80" pos:column="34">timelimit<pos:position pos:line="80" pos:column="43"/></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">squid_ldap_set_referrals<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><operator pos:line="81" pos:column="34">!<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="35">noreferrals<pos:position pos:line="81" pos:column="46"/></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">squid_ldap_set_aliasderef<pos:position pos:line="82" pos:column="34"/></name><argument_list pos:line="82" pos:column="34">(<argument><expr><name pos:line="82" pos:column="35">aliasderef<pos:position pos:line="82" pos:column="45"/></name></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">binddn<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">&amp;&amp;<pos:position pos:line="83" pos:column="30"/></operator> <name pos:line="83" pos:column="23">bindpasswd<pos:position pos:line="83" pos:column="33"/></name> <operator pos:line="83" pos:column="34">&amp;&amp;<pos:position pos:line="83" pos:column="44"/></operator> <operator pos:line="83" pos:column="37">*<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="38">binddn<pos:position pos:line="83" pos:column="44"/></name> <operator pos:line="83" pos:column="45">&amp;&amp;<pos:position pos:line="83" pos:column="55"/></operator> <operator pos:line="83" pos:column="48">*<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="49">bindpasswd<pos:position pos:line="83" pos:column="59"/></name></expr>)<pos:position pos:line="83" pos:column="60"/></condition><then pos:line="83" pos:column="60"> <block pos:line="83" pos:column="61">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">rc<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">ldap_simple_bind_s<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name pos:line="84" pos:column="37">ld<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="41">binddn<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">bindpasswd<pos:position pos:line="84" pos:column="59"/></name></expr></argument>)<pos:position pos:line="84" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="61"/></expr_stmt>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><name pos:line="85" pos:column="17">rc<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">!=<pos:position pos:line="85" pos:column="22"/></operator> <name pos:line="85" pos:column="23">LDAP_SUCCESS<pos:position pos:line="85" pos:column="35"/></name></expr>)<pos:position pos:line="85" pos:column="36"/></condition><then pos:line="85" pos:column="36"> <block pos:line="85" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">fprintf<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">stderr<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="33">PROGRAM_NAME<pos:position pos:line="86" pos:column="45"/></name> <literal type="string" pos:line="86" pos:column="46">" WARNING, could not bind to binddn '%s'\n"<pos:position pos:line="86" pos:column="89"/></literal></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="91">ldap_err2string<pos:position pos:line="86" pos:column="106"/></name><argument_list pos:line="86" pos:column="106">(<argument><expr><name pos:line="86" pos:column="107">rc<pos:position pos:line="86" pos:column="109"/></name></expr></argument>)<pos:position pos:line="86" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="112"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">ldap_unbind<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><name pos:line="87" pos:column="29">ld<pos:position pos:line="87" pos:column="31"/></name></expr></argument>)<pos:position pos:line="87" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="88" pos:column="17">ld<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">NULL<pos:position pos:line="88" pos:column="26"/></name></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">debug<pos:position pos:line="91" pos:column="14"/></name><argument_list pos:line="91" pos:column="14">(<argument><expr><literal type="string" pos:line="91" pos:column="15">"Connected OK\n"<pos:position pos:line="91" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

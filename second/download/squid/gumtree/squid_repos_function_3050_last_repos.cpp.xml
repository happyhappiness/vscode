<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3050_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientNegotiateSSL<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">void<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">data<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">conn<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">ConnStateData<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">data<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ret<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">ret<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">Squid_SSL_accept<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">conn<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">clientNegotiateSSL<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call><operator pos:line="6" pos:column="58">)<pos:position pos:line="6" pos:column="59"/></operator> <operator pos:line="6" pos:column="60">&lt;=<pos:position pos:line="6" pos:column="65"/></operator> <literal type="number" pos:line="6" pos:column="63">0<pos:position pos:line="6" pos:column="64"/></literal></expr>)<pos:position pos:line="6" pos:column="65"/></condition><then pos:line="6" pos:column="65"> <block pos:line="6" pos:column="66">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21"> <comment type="line" pos:line="7" pos:column="22">// An error</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="13">conn<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">clientConnection<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">close<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt></block></then></if>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">Security<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">::<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">SessionPointer<pos:position pos:line="12" pos:column="29"/></name></name></type> <name pos:line="12" pos:column="30">session<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name><name pos:line="12" pos:column="38">fd_table<pos:position pos:line="12" pos:column="46"/></name><index pos:line="12" pos:column="46">[<expr><name pos:line="12" pos:column="47">fd<pos:position pos:line="12" pos:column="49"/></name></expr>]<pos:position pos:line="12" pos:column="50"/></index></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">ssl<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name><name pos:line="13" pos:column="9">Security<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">::<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">SessionIsResumed<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">session<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">83<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">2<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"Session "<pos:position pos:line="14" pos:column="33"/></literal> <operator pos:line="14" pos:column="34">&lt;&lt;<pos:position pos:line="14" pos:column="42"/></operator> <call><name pos:line="14" pos:column="37">SSL_get_session<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><call><name><name pos:line="14" pos:column="53">session<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">get<pos:position pos:line="14" pos:column="64"/></name></name><argument_list pos:line="14" pos:column="64">()<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call> <operator pos:line="14" pos:column="68">&lt;&lt;<pos:position pos:line="14" pos:column="76"/></operator>
               <literal type="string" pos:line="15" pos:column="16">" reused on FD "<pos:position pos:line="15" pos:column="32"/></literal> <operator pos:line="15" pos:column="33">&lt;&lt;<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="36">fd<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">&lt;&lt;<pos:position pos:line="15" pos:column="47"/></operator> <literal type="string" pos:line="15" pos:column="42">" ("<pos:position pos:line="15" pos:column="46"/></literal> <operator pos:line="15" pos:column="47">&lt;&lt;<pos:position pos:line="15" pos:column="55"/></operator> <name><name pos:line="15" pos:column="50">fd_table<pos:position pos:line="15" pos:column="58"/></name><index pos:line="15" pos:column="58">[<expr><name pos:line="15" pos:column="59">fd<pos:position pos:line="15" pos:column="61"/></name></expr>]<pos:position pos:line="15" pos:column="62"/></index></name><operator pos:line="15" pos:column="62">.<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="63">ipaddr<pos:position pos:line="15" pos:column="69"/></name> <operator pos:line="15" pos:column="70">&lt;&lt;<pos:position pos:line="15" pos:column="78"/></operator>
               <literal type="string" pos:line="16" pos:column="16">":"<pos:position pos:line="16" pos:column="19"/></literal> <operator pos:line="16" pos:column="20">&lt;&lt;<pos:position pos:line="16" pos:column="28"/></operator> <operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">int<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator><name><name pos:line="16" pos:column="28">fd_table<pos:position pos:line="16" pos:column="36"/></name><index pos:line="16" pos:column="36">[<expr><name pos:line="16" pos:column="37">fd<pos:position pos:line="16" pos:column="39"/></name></expr>]<pos:position pos:line="16" pos:column="40"/></index></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">remote_port<pos:position pos:line="16" pos:column="52"/></name> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <literal type="string" pos:line="16" pos:column="56">")"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name><name pos:line="18" pos:column="13">Debug<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">::<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">Enabled<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="number" pos:line="18" pos:column="28">83<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="32">4<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
            <comment type="block" pos:line="19" pos:column="13">/* Write out the SSL session details.. actually the call below, but
             * OpenSSL headers do strange typecasts confusing GCC.. */</comment>
            <comment type="block" pos:line="21" pos:column="13">/* PEM_write_SSL_SESSION(debug_log, SSL_get_session(ssl)); */</comment>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><call><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">OPENSSL_VERSION_NUMBER<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator> <name pos:line="22" pos:column="40">OPENSSL_VERSION_NUMBER<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">&gt;=<pos:position pos:line="22" pos:column="68"/></operator> <literal type="number" pos:line="22" pos:column="66">0x00908000L<pos:position pos:line="22" pos:column="77"/></literal></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">PEM_ASN1_write<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><cast type="reinterpret" pos:line="23" pos:column="28">reinterpret_cast<argument_list type="generic" pos:line="23" pos:column="44">&lt;<argument><expr><name pos:line="23" pos:column="45">i2d_of_void<pos:position pos:line="23" pos:column="56"/></name> <operator pos:line="23" pos:column="57">*<pos:position pos:line="23" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="23" pos:column="62"/></argument_list><argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">i2d_SSL_SESSION<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></cast></expr></argument>,
                           <argument><expr><name pos:line="24" pos:column="28">PEM_STRING_SSL_SESSION<pos:position pos:line="24" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">debug_log<pos:position pos:line="24" pos:column="61"/></name></expr></argument>,
                           <argument><expr><cast type="reinterpret" pos:line="25" pos:column="28">reinterpret_cast<argument_list type="generic" pos:line="25" pos:column="44">&lt;<argument><expr><name pos:line="25" pos:column="45">char<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">*<pos:position pos:line="25" pos:column="51"/></operator></expr></argument>&gt;<pos:position pos:line="25" pos:column="55"/></argument_list><argument_list pos:line="25" pos:column="52">(<argument><expr><call><name pos:line="25" pos:column="53">SSL_get_session<pos:position pos:line="25" pos:column="68"/></name><argument_list pos:line="25" pos:column="68">(<argument><expr><call><name><name pos:line="25" pos:column="69">session<pos:position pos:line="25" pos:column="76"/></name><operator pos:line="25" pos:column="76">.<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="77">get<pos:position pos:line="25" pos:column="80"/></name></name><argument_list pos:line="25" pos:column="80">()<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></cast></expr></argument>,
                           <argument><expr><literal type="null" pos:line="26" pos:column="28">nullptr<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="26" pos:column="37">nullptr<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="26" pos:column="49">nullptr<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="26" pos:column="58">nullptr<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>

<cpp:elif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">elif<pos:position pos:line="28" pos:column="6"/></cpp:directive> <expr><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">ALLOW_ALWAYS_SSL_SESSION_DETAIL<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">==<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="43">1<pos:position pos:line="28" pos:column="44"/></literal><operator pos:line="28" pos:column="44">)<pos:position pos:line="28" pos:column="45"/></operator></expr></cpp:elif>

            <comment type="block" pos:line="30" pos:column="13">/* When using gcc 3.3.x and OpenSSL 0.9.7x sometimes a compile error can occur here.
            * This is caused by an unpredicatble gcc behaviour on a cast of the first argument
            * of PEM_ASN1_write(). For this reason this code section is disabled. To enable it,
            * define ALLOW_ALWAYS_SSL_SESSION_DETAIL=1.
            * Because there are two possible usable cast, if you get an error here, try the other
            * commented line. */</comment>

            <expr_stmt><expr><call><name pos:line="37" pos:column="13">PEM_ASN1_write<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><operator pos:line="37" pos:column="28">(<pos:position pos:line="37" pos:column="29"/></operator><call><call><name pos:line="37" pos:column="29">int<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><operator pos:line="37" pos:column="33">*<pos:position pos:line="37" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call><argument_list pos:line="37" pos:column="35">()<pos:position pos:line="37" pos:column="37"/></argument_list></call><operator pos:line="37" pos:column="37">)<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">i2d_SSL_SESSION<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">PEM_STRING_SSL_SESSION<pos:position pos:line="37" pos:column="77"/></name></expr></argument>,
                           <argument><expr><name pos:line="38" pos:column="28">debug_log<pos:position pos:line="38" pos:column="37"/></name></expr></argument>,
                           <argument><expr><cast type="reinterpret" pos:line="39" pos:column="28">reinterpret_cast<argument_list type="generic" pos:line="39" pos:column="44">&lt;<argument><expr><name pos:line="39" pos:column="45">char<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">*<pos:position pos:line="39" pos:column="51"/></operator></expr></argument>&gt;<pos:position pos:line="39" pos:column="55"/></argument_list><argument_list pos:line="39" pos:column="52">(<argument><expr><call><name pos:line="39" pos:column="53">SSL_get_session<pos:position pos:line="39" pos:column="68"/></name><argument_list pos:line="39" pos:column="68">(<argument><expr><call><name><name pos:line="39" pos:column="69">session<pos:position pos:line="39" pos:column="76"/></name><operator pos:line="39" pos:column="76">.<pos:position pos:line="39" pos:column="77"/></operator><name pos:line="39" pos:column="77">get<pos:position pos:line="39" pos:column="80"/></name></name><argument_list pos:line="39" pos:column="80">()<pos:position pos:line="39" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="84"/></argument_list></cast></expr></argument>,
                           <argument><expr><literal type="null" pos:line="40" pos:column="28">nullptr<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="40" pos:column="37">nullptr<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="40" pos:column="49">nullptr<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="40" pos:column="58">nullptr<pos:position pos:line="40" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt>
            <comment type="block" pos:line="41" pos:column="13">/* PEM_ASN1_write((int(*)(...))i2d_SSL_SESSION, PEM_STRING_SSL_SESSION,
                           debug_log,
                           reinterpret_cast&lt;char *&gt;(SSL_get_session(session.get())),
                           nullptr, nullptr, 0, nullptr, nullptr);
             */</comment>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">debugs<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="number" pos:line="47" pos:column="20">83<pos:position pos:line="47" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="24">4<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="27">"With "<pos:position pos:line="47" pos:column="34"/></literal> <name pos:line="47" pos:column="35">OPENSSL_VERSION_TEXT<pos:position pos:line="47" pos:column="55"/></name> <literal type="string" pos:line="47" pos:column="56">", session details are available only defining ALLOW_ALWAYS_SSL_SESSION_DETAIL=1 in the source."<pos:position pos:line="47" pos:column="152"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="154"/></expr_stmt>

<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="50" pos:column="13">/* Note: This does not automatically fflush the log file.. */</comment>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">debugs<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="number" pos:line="53" pos:column="16">83<pos:position pos:line="53" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="20">2<pos:position pos:line="53" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="23">"New session "<pos:position pos:line="53" pos:column="37"/></literal> <operator pos:line="53" pos:column="38">&lt;&lt;<pos:position pos:line="53" pos:column="46"/></operator> <call><name pos:line="53" pos:column="41">SSL_get_session<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><call><name><name pos:line="53" pos:column="57">session<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">.<pos:position pos:line="53" pos:column="65"/></operator><name pos:line="53" pos:column="65">get<pos:position pos:line="53" pos:column="68"/></name></name><argument_list pos:line="53" pos:column="68">()<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call> <operator pos:line="53" pos:column="72">&lt;&lt;<pos:position pos:line="53" pos:column="80"/></operator>
               <literal type="string" pos:line="54" pos:column="16">" on FD "<pos:position pos:line="54" pos:column="25"/></literal> <operator pos:line="54" pos:column="26">&lt;&lt;<pos:position pos:line="54" pos:column="34"/></operator> <name pos:line="54" pos:column="29">fd<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">&lt;&lt;<pos:position pos:line="54" pos:column="40"/></operator> <literal type="string" pos:line="54" pos:column="35">" ("<pos:position pos:line="54" pos:column="39"/></literal> <operator pos:line="54" pos:column="40">&lt;&lt;<pos:position pos:line="54" pos:column="48"/></operator> <name><name pos:line="54" pos:column="43">fd_table<pos:position pos:line="54" pos:column="51"/></name><index pos:line="54" pos:column="51">[<expr><name pos:line="54" pos:column="52">fd<pos:position pos:line="54" pos:column="54"/></name></expr>]<pos:position pos:line="54" pos:column="55"/></index></name><operator pos:line="54" pos:column="55">.<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="56">ipaddr<pos:position pos:line="54" pos:column="62"/></name> <operator pos:line="54" pos:column="63">&lt;&lt;<pos:position pos:line="54" pos:column="71"/></operator> <literal type="string" pos:line="54" pos:column="66">":"<pos:position pos:line="54" pos:column="69"/></literal> <operator pos:line="54" pos:column="70">&lt;&lt;<pos:position pos:line="54" pos:column="78"/></operator>
               <name><name pos:line="55" pos:column="16">fd_table<pos:position pos:line="55" pos:column="24"/></name><index pos:line="55" pos:column="24">[<expr><name pos:line="55" pos:column="25">fd<pos:position pos:line="55" pos:column="27"/></name></expr>]<pos:position pos:line="55" pos:column="28"/></index></name><operator pos:line="55" pos:column="28">.<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">remote_port<pos:position pos:line="55" pos:column="40"/></name> <operator pos:line="55" pos:column="41">&lt;&lt;<pos:position pos:line="55" pos:column="49"/></operator> <literal type="string" pos:line="55" pos:column="44">")"<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="58" pos:column="5">// Connection established. Retrieve TLS connection parameters for logging.</comment>
    <expr_stmt><expr><call><name><name pos:line="59" pos:column="5">conn<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">clientConnection<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">tlsNegotiations<pos:position pos:line="59" pos:column="44"/></name></name><argument_list pos:line="59" pos:column="44">()<pos:position pos:line="59" pos:column="46"/></argument_list></call><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><call><name pos:line="59" pos:column="48">retrieveNegotiatedInfo<pos:position pos:line="59" pos:column="70"/></name><argument_list pos:line="59" pos:column="70">(<argument><expr><name pos:line="59" pos:column="71">session<pos:position pos:line="59" pos:column="78"/></name></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="61" pos:column="5">X509<pos:position pos:line="61" pos:column="9"/></name> <modifier pos:line="61" pos:column="10">*<pos:position pos:line="61" pos:column="11"/></modifier></type><name pos:line="61" pos:column="11">client_cert<pos:position pos:line="61" pos:column="22"/></name> <init pos:line="61" pos:column="23">= <expr><call><name pos:line="61" pos:column="25">SSL_get_peer_certificate<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><call><name><name pos:line="61" pos:column="50">session<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">.<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="58">get<pos:position pos:line="61" pos:column="61"/></name></name><argument_list pos:line="61" pos:column="61">()<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="65"/></decl_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">client_cert<pos:position pos:line="63" pos:column="20"/></name></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21"> <block pos:line="63" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">83<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="20">3<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="23">"FD "<pos:position pos:line="64" pos:column="28"/></literal> <operator pos:line="64" pos:column="29">&lt;&lt;<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="32">fd<pos:position pos:line="64" pos:column="34"/></name> <operator pos:line="64" pos:column="35">&lt;&lt;<pos:position pos:line="64" pos:column="43"/></operator> <literal type="string" pos:line="64" pos:column="38">" client certificate: subject: "<pos:position pos:line="64" pos:column="70"/></literal> <operator pos:line="64" pos:column="71">&lt;&lt;<pos:position pos:line="64" pos:column="79"/></operator>
               <call><name pos:line="65" pos:column="16">X509_NAME_oneline<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><call><name pos:line="65" pos:column="34">X509_get_subject_name<pos:position pos:line="65" pos:column="55"/></name><argument_list pos:line="65" pos:column="55">(<argument><expr><name pos:line="65" pos:column="56">client_cert<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="70">0<pos:position pos:line="65" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="73">0<pos:position pos:line="65" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">debugs<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">83<pos:position pos:line="67" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="20">3<pos:position pos:line="67" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="23">"FD "<pos:position pos:line="67" pos:column="28"/></literal> <operator pos:line="67" pos:column="29">&lt;&lt;<pos:position pos:line="67" pos:column="37"/></operator> <name pos:line="67" pos:column="32">fd<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">&lt;&lt;<pos:position pos:line="67" pos:column="43"/></operator> <literal type="string" pos:line="67" pos:column="38">" client certificate: issuer: "<pos:position pos:line="67" pos:column="69"/></literal> <operator pos:line="67" pos:column="70">&lt;&lt;<pos:position pos:line="67" pos:column="78"/></operator>
               <call><name pos:line="68" pos:column="16">X509_NAME_oneline<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><call><name pos:line="68" pos:column="34">X509_get_issuer_name<pos:position pos:line="68" pos:column="54"/></name><argument_list pos:line="68" pos:column="54">(<argument><expr><name pos:line="68" pos:column="55">client_cert<pos:position pos:line="68" pos:column="66"/></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="69">0<pos:position pos:line="68" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="72">0<pos:position pos:line="68" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="70" pos:column="9">X509_free<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">client_cert<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then> <else pos:line="71" pos:column="7">else <block pos:line="71" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">debugs<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><literal type="number" pos:line="72" pos:column="16">83<pos:position pos:line="72" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="20">5<pos:position pos:line="72" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="23">"FD "<pos:position pos:line="72" pos:column="28"/></literal> <operator pos:line="72" pos:column="29">&lt;&lt;<pos:position pos:line="72" pos:column="37"/></operator> <name pos:line="72" pos:column="32">fd<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">&lt;&lt;<pos:position pos:line="72" pos:column="43"/></operator> <literal type="string" pos:line="72" pos:column="38">" has no certificate."<pos:position pos:line="72" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="75" pos:column="5">conn<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">readSomeData<pos:position pos:line="75" pos:column="23"/></name></name><argument_list pos:line="75" pos:column="23">()<pos:position pos:line="75" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

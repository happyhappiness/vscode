<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_104_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Valid_Local_Groups<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">UserName<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">Groups<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">result<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">Domain_Separator<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">WCHAR<pos:position pos:line="6" pos:column="10"/></name></type> <name><name pos:line="6" pos:column="11">wszUserName<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">UNLEN<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">+<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="31">1<pos:position pos:line="6" pos:column="32"/></literal></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>	<comment type="line" pos:line="6" pos:column="41">// Unicode user name</comment>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">LPLOCALGROUP_USERS_INFO_0<pos:position pos:line="8" pos:column="30"/></name></type> <name pos:line="8" pos:column="31">pBuf<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">LPLOCALGROUP_USERS_INFO_0<pos:position pos:line="9" pos:column="30"/></name></type> <name pos:line="9" pos:column="31">pTmpBuf<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">DWORD<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">dwLevel<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">DWORD<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">dwFlags<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">LG_INCLUDE_INDIRECT<pos:position pos:line="11" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">DWORD<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">dwPrefMaxLen<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><operator pos:line="12" pos:column="26">-<pos:position pos:line="12" pos:column="27"/></operator><literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">DWORD<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">dwEntriesRead<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">DWORD<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">dwTotalEntries<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">NET_API_STATUS<pos:position pos:line="15" pos:column="19"/></name></type> <name pos:line="15" pos:column="20">nStatus<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">DWORD<pos:position pos:line="16" pos:column="10"/></name></type> <name pos:line="16" pos:column="11">i<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">DWORD<pos:position pos:line="17" pos:column="10"/></name></type> <name pos:line="17" pos:column="11">dwTotalCount<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">Domain_Separator<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="29">strchr<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">UserName<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="46">'/'<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="52">!=<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">NULL<pos:position pos:line="19" pos:column="59"/></name></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">Domain_Separator<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="char" pos:line="20" pos:column="29">'\\'<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debug<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"Valid_Local_Groups: checking group membership of '%s'.\n"<pos:position pos:line="22" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="71">UserName<pos:position pos:line="22" pos:column="79"/></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Convert ANSI User Name and Group to Unicode */</comment>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">MultiByteToWideChar<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">CP_ACP<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">UserName<pos:position pos:line="26" pos:column="44"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="27" pos:column="25">strlen<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">UserName<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call> <operator pos:line="27" pos:column="42">+<pos:position pos:line="27" pos:column="43"/></operator> <literal type="number" pos:line="27" pos:column="44">1<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">wszUserName<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="60">sizeof<argument_list pos:line="27" pos:column="66">(<argument><expr><name pos:line="27" pos:column="67">wszUserName<pos:position pos:line="27" pos:column="78"/></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></sizeof> <operator pos:line="27" pos:column="80">/<pos:position pos:line="27" pos:column="81"/></operator> <sizeof pos:line="27" pos:column="82">sizeof<argument_list pos:line="27" pos:column="88">(<argument><expr><name><name pos:line="27" pos:column="89">wszUserName<pos:position pos:line="27" pos:column="100"/></name><index pos:line="27" pos:column="100">[<expr><literal type="number" pos:line="27" pos:column="101">0<pos:position pos:line="27" pos:column="102"/></literal></expr>]<pos:position pos:line="27" pos:column="103"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="104"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="106"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/*
     * Call the NetUserGetLocalGroups function
     * specifying information level 0.
     *
     * The LG_INCLUDE_INDIRECT flag specifies that the
     * function should also return the names of the local
     * groups in which the user is indirectly a member.
     */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">nStatus<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">NetUserGetLocalGroups<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(
                  <argument><expr><name pos:line="38" pos:column="19">NULL<pos:position pos:line="38" pos:column="23"/></name></expr></argument>,
                  <argument><expr><name pos:line="39" pos:column="19">wszUserName<pos:position pos:line="39" pos:column="30"/></name></expr></argument>,
                  <argument><expr><name pos:line="40" pos:column="19">dwLevel<pos:position pos:line="40" pos:column="26"/></name></expr></argument>,
                  <argument><expr><name pos:line="41" pos:column="19">dwFlags<pos:position pos:line="41" pos:column="26"/></name></expr></argument>,
                  <argument><expr><operator pos:line="42" pos:column="19">(<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">LPBYTE<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">*<pos:position pos:line="42" pos:column="28"/></operator><operator pos:line="42" pos:column="28">)<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="32">pBuf<pos:position pos:line="42" pos:column="36"/></name></expr></argument>,
                  <argument><expr><name pos:line="43" pos:column="19">dwPrefMaxLen<pos:position pos:line="43" pos:column="31"/></name></expr></argument>,
                  <argument><expr><operator pos:line="44" pos:column="19">&amp;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="20">dwEntriesRead<pos:position pos:line="44" pos:column="33"/></name></expr></argument>,
                  <argument><expr><operator pos:line="45" pos:column="19">&amp;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="20">dwTotalEntries<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="46" pos:column="5">/*
     * If the call succeeds,
     */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">nStatus<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">==<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">NERR_Success<pos:position pos:line="49" pos:column="32"/></name></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33"> <block pos:line="49" pos:column="34">{
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">pTmpBuf<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">pBuf<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">)<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">!=<pos:position pos:line="50" pos:column="32"/></operator> <name pos:line="50" pos:column="33">NULL<pos:position pos:line="50" pos:column="37"/></name></expr>)<pos:position pos:line="50" pos:column="38"/></condition><then pos:line="50" pos:column="38"> <block pos:line="50" pos:column="39">{
            <for pos:line="51" pos:column="13">for <control pos:line="51" pos:column="17">(<init><expr><name pos:line="51" pos:column="18">i<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <literal type="number" pos:line="51" pos:column="22">0<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></init> <condition><expr><name pos:line="51" pos:column="25">i<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&lt;<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="29">dwEntriesRead<pos:position pos:line="51" pos:column="42"/></name></expr>;<pos:position pos:line="51" pos:column="43"/></condition> <incr><expr><name pos:line="51" pos:column="44">i<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">++<pos:position pos:line="51" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="48"/></control> <block pos:line="51" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">assert<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">pTmpBuf<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">!=<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="35">NULL<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">pTmpBuf<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">==<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">NULL<pos:position pos:line="53" pos:column="36"/></name></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37"> <block pos:line="53" pos:column="38">{
                    <expr_stmt><expr><name pos:line="54" pos:column="21">result<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">=<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="30">0<pos:position pos:line="54" pos:column="31"/></literal></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
                    <break pos:line="55" pos:column="21">break;<pos:position pos:line="55" pos:column="27"/></break>
                }<pos:position pos:line="56" pos:column="18"/></block></then></if>
                <if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">wcstrcmparray<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name><name pos:line="57" pos:column="35">pTmpBuf<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">lgrui0_name<pos:position pos:line="57" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="57">Groups<pos:position pos:line="57" pos:column="63"/></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call> <operator pos:line="57" pos:column="65">==<pos:position pos:line="57" pos:column="67"/></operator> <literal type="number" pos:line="57" pos:column="68">0<pos:position pos:line="57" pos:column="69"/></literal></expr>)<pos:position pos:line="57" pos:column="70"/></condition><then pos:line="57" pos:column="70"> <block pos:line="57" pos:column="71">{
                    <expr_stmt><expr><name pos:line="58" pos:column="21">result<pos:position pos:line="58" pos:column="27"/></name> <operator pos:line="58" pos:column="28">=<pos:position pos:line="58" pos:column="29"/></operator> <literal type="number" pos:line="58" pos:column="30">1<pos:position pos:line="58" pos:column="31"/></literal></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
                    <break pos:line="59" pos:column="21">break;<pos:position pos:line="59" pos:column="27"/></break>
                }<pos:position pos:line="60" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="61" pos:column="17">pTmpBuf<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">++<pos:position pos:line="61" pos:column="26"/></operator></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="62" pos:column="17">dwTotalCount<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">++<pos:position pos:line="62" pos:column="31"/></operator></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></for>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then> <else pos:line="65" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="9">result<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <literal type="number" pos:line="66" pos:column="18">0<pos:position pos:line="66" pos:column="19"/></literal></expr>;<pos:position pos:line="66" pos:column="20"/></expr_stmt></block></else></if>
    <comment type="block" pos:line="67" pos:column="5">/*
     * Free the allocated memory.
     */</comment>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">pBuf<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">!=<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">NULL<pos:position pos:line="70" pos:column="21"/></name></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="9">NetApiBufferFree<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">(<argument><expr><name pos:line="71" pos:column="26">pBuf<pos:position pos:line="71" pos:column="30"/></name></expr></argument>)<pos:position pos:line="71" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt></block></then></if>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">result<pos:position pos:line="72" pos:column="18"/></name></expr>;<pos:position pos:line="72" pos:column="19"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2132_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">mem_hdr<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">copyAvailable<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">mem_node<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">aNode<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int64_t<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">location<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">size_t<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">amount<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">char<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">target<pos:position pos:line="2" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="87"/></parameter_list> <specifier pos:line="2" pos:column="88">const<pos:position pos:line="2" pos:column="93"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">aNode<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">-&gt;<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="16">nodeBuffer<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">offset<pos:position pos:line="4" pos:column="33"/></name></name> <operator pos:line="4" pos:column="34">&gt;<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="36">location<pos:position pos:line="4" pos:column="44"/></name></expr>)<pos:position pos:line="4" pos:column="45"/></condition><then pos:line="4" pos:column="45">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><name><name pos:line="7" pos:column="13">aNode<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">nodeBuffer<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">offset<pos:position pos:line="7" pos:column="37"/></name></name> <operator pos:line="7" pos:column="38">&lt;=<pos:position pos:line="7" pos:column="43"/></operator> <name pos:line="7" pos:column="41">location<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><call><name><name pos:line="9" pos:column="13">aNode<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">end<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call> <operator pos:line="9" pos:column="26">&gt;<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="28">location<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">copyOffset<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name pos:line="11" pos:column="25">location<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">-<pos:position pos:line="11" pos:column="35"/></operator> <name><name pos:line="11" pos:column="36">aNode<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">nodeBuffer<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">offset<pos:position pos:line="11" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="61"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">copyLen<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><call><name pos:line="13" pos:column="22">min<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">amount<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="34">aNode<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">nodeBuffer<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">.<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">length<pos:position pos:line="13" pos:column="58"/></name></name> <operator pos:line="13" pos:column="59">-<pos:position pos:line="13" pos:column="60"/></operator> <name pos:line="13" pos:column="61">copyOffset<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="73"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memcpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">target<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="20">aNode<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">nodeBuffer<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">data<pos:position pos:line="15" pos:column="42"/></name></name> <operator pos:line="15" pos:column="43">+<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">copyOffset<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">copyLen<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>

    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">copyLen<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

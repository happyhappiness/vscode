<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1517_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SwapDir<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">parseOptions<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">isaReconfig<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">old_read_only<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">flags<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">read_only<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">name<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">value<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ConfigOption<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">newOption<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><call><name pos:line="7" pos:column="31">getOptionTree<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">()<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">name<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">strtok<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">w_space<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator> <operator pos:line="9" pos:column="43">!=<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition> <block pos:line="9" pos:column="52">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">value<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">strchr<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">name<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="30">'='<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">value<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
            <expr_stmt><expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">value<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="char" pos:line="13" pos:column="22">'\0'<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="13" pos:column="33">/* cut on = */</comment>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">value<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="18">2<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"SwapDir::parseOptions: parsing store option '"<pos:position pos:line="17" pos:column="68"/></literal> <operator pos:line="17" pos:column="69">&lt;&lt;<pos:position pos:line="17" pos:column="77"/></operator> <name pos:line="17" pos:column="72">name<pos:position pos:line="17" pos:column="76"/></name> <operator pos:line="17" pos:column="77">&lt;&lt;<pos:position pos:line="17" pos:column="85"/></operator> <literal type="string" pos:line="17" pos:column="80">"'='"<pos:position pos:line="17" pos:column="85"/></literal> <operator pos:line="17" pos:column="86">&lt;&lt;<pos:position pos:line="17" pos:column="94"/></operator> <operator pos:line="17" pos:column="89">(<pos:position pos:line="17" pos:column="90"/></operator><ternary><condition><expr><name pos:line="17" pos:column="90">value<pos:position pos:line="17" pos:column="95"/></name></expr> ?<pos:position pos:line="17" pos:column="97"/></condition><then pos:line="17" pos:column="97"> <expr><name pos:line="17" pos:column="98">value<pos:position pos:line="17" pos:column="103"/></name></expr> <pos:position pos:line="17" pos:column="104"/></then><else pos:line="17" pos:column="104">: <expr><literal type="string" pos:line="17" pos:column="106">""<pos:position pos:line="17" pos:column="108"/></literal></expr></else></ternary><operator pos:line="17" pos:column="108">)<pos:position pos:line="17" pos:column="109"/></operator> <operator pos:line="17" pos:column="110">&lt;&lt;<pos:position pos:line="17" pos:column="118"/></operator> <literal type="string" pos:line="17" pos:column="113">"'"<pos:position pos:line="17" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="118"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">newOption<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23">
            <block type="pseudo"><if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">!<pos:position pos:line="20" pos:column="18"/></operator><call><name><name pos:line="20" pos:column="18">newOption<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">parse<pos:position pos:line="20" pos:column="34"/></name></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">name<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">value<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">isaReconfig<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">self_destruct<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then></if></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="24" pos:column="5">delete<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">newOption<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/*
     * Handle notifications about reconfigured single-options with no value
     * where the removal of the option cannot be easily detected in the
     * parsing...
     */</comment>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">isaReconfig<pos:position pos:line="32" pos:column="20"/></name></expr>)<pos:position pos:line="32" pos:column="21"/></condition><then pos:line="32" pos:column="21"> <block pos:line="32" pos:column="22">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">old_read_only<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">!=<pos:position pos:line="33" pos:column="29"/></operator> <name><name pos:line="33" pos:column="30">flags<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">read_only<pos:position pos:line="33" pos:column="45"/></name></name></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">3<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">DBG_IMPORTANT<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">"Cache dir '"<pos:position pos:line="34" pos:column="51"/></literal> <operator pos:line="34" pos:column="52">&lt;&lt;<pos:position pos:line="34" pos:column="60"/></operator> <name pos:line="34" pos:column="55">path<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">&lt;&lt;<pos:position pos:line="34" pos:column="68"/></operator> <literal type="string" pos:line="34" pos:column="63">"' now "<pos:position pos:line="34" pos:column="71"/></literal> <operator pos:line="34" pos:column="72">&lt;&lt;<pos:position pos:line="34" pos:column="80"/></operator> <operator pos:line="34" pos:column="75">(<pos:position pos:line="34" pos:column="76"/></operator><ternary><condition><expr><name><name pos:line="34" pos:column="76">flags<pos:position pos:line="34" pos:column="81"/></name><operator pos:line="34" pos:column="81">.<pos:position pos:line="34" pos:column="82"/></operator><name pos:line="34" pos:column="82">read_only<pos:position pos:line="34" pos:column="91"/></name></name></expr> ?<pos:position pos:line="34" pos:column="93"/></condition><then pos:line="34" pos:column="93"> <expr><literal type="string" pos:line="34" pos:column="94">"No-Store"<pos:position pos:line="34" pos:column="104"/></literal></expr> <pos:position pos:line="34" pos:column="105"/></then><else pos:line="34" pos:column="105">: <expr><literal type="string" pos:line="34" pos:column="107">"Read-Write"<pos:position pos:line="34" pos:column="119"/></literal></expr></else></ternary><operator pos:line="34" pos:column="119">)<pos:position pos:line="34" pos:column="120"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="122"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7416_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">heap_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">heap_extractmin<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">heap<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">hp<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">heap_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">data<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">hp<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">last<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">&lt;=<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">mutex_lock<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">hp<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">lock<pos:position pos:line="9" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">data<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">hp<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">nodes<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">data<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">heap_delete<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">hp<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="21">hp<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">nodes<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr>]<pos:position pos:line="12" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>  <comment type="block" pos:line="12" pos:column="37">/* Delete the root */</comment>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutex_unlock<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name><name pos:line="14" pos:column="18">hp<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">lock<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">data<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

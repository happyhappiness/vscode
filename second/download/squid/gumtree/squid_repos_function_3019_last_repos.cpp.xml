<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3019_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Http<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Stream<pos:position pos:line="1" pos:column="13"/></name></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name pos:line="2" pos:column="1">parseHttpRequest<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">ConnStateData<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">csd<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name><name pos:line="2" pos:column="44">Http1<pos:position pos:line="2" pos:column="49"/></name><operator pos:line="2" pos:column="49">::<pos:position pos:line="2" pos:column="51"/></operator><name pos:line="2" pos:column="51">RequestParserPointer<pos:position pos:line="2" pos:column="71"/></name></name> <modifier pos:line="2" pos:column="72">&amp;<pos:position pos:line="2" pos:column="77"/></modifier></type><name pos:line="2" pos:column="73">hp<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Attempt to parse the first line; this will define where the method, url, version and header begin */</comment>
    <block pos:line="5" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">bool<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">parsedOk<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><call><name><name pos:line="6" pos:column="31">hp<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">parse<pos:position pos:line="6" pos:column="40"/></name></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name><name pos:line="6" pos:column="41">csd<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">inBuf<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>

        <comment type="line" pos:line="8" pos:column="9">// sync the buffers after parsing.</comment>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">csd<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">inBuf<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <call><name><name pos:line="9" pos:column="22">hp<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">remaining<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">()<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">hp<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">needsMoreData<pos:position pos:line="11" pos:column="30"/></name></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">33<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">5<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"Incomplete request, waiting for end of request line"<pos:position pos:line="12" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">csd<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">mayTunnelUnsupportedProto<pos:position pos:line="16" pos:column="43"/></name></name><argument_list pos:line="16" pos:column="43">()<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">csd<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">preservedClientData<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <call><name><name pos:line="17" pos:column="40">hp<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">parsed<pos:position pos:line="17" pos:column="50"/></name></name><argument_list pos:line="17" pos:column="50">()<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">csd<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">preservedClientData<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">append<pos:position pos:line="18" pos:column="44"/></name></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name><name pos:line="18" pos:column="45">csd<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">inBuf<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">parsedOk<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
            <decl_stmt><decl><type><specifier pos:line="22" pos:column="13">const<pos:position pos:line="22" pos:column="18"/></specifier> <name pos:line="22" pos:column="19">bool<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">tooBig<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">=
                <expr><name><name pos:line="23" pos:column="17">hp<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">parseStatusCode<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">==<pos:position pos:line="23" pos:column="39"/></operator> <name><name pos:line="23" pos:column="40">Http<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">::<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">scRequestHeaderFieldsTooLarge<pos:position pos:line="23" pos:column="75"/></name></name> <operator pos:line="23" pos:column="76">||<pos:position pos:line="23" pos:column="78"/></operator>
                <name><name pos:line="24" pos:column="17">hp<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">parseStatusCode<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <name><name pos:line="24" pos:column="40">Http<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">::<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">scUriTooLong<pos:position pos:line="24" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="59"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">auto<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">result<pos:position pos:line="25" pos:column="24"/></name> <init pos:line="25" pos:column="25">= <expr><call><name><name pos:line="25" pos:column="27">csd<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">abortRequestParsing<pos:position pos:line="25" pos:column="51"/></name></name><argument_list pos:line="25" pos:column="51">(
                              <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="31">tooBig<pos:position pos:line="26" pos:column="37"/></name></expr> ?<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <expr><literal type="string" pos:line="26" pos:column="40">"error:request-too-large"<pos:position pos:line="26" pos:column="65"/></literal></expr> <pos:position pos:line="26" pos:column="66"/></then><else pos:line="26" pos:column="66">: <expr><literal type="string" pos:line="26" pos:column="68">"error:invalid-request"<pos:position pos:line="26" pos:column="91"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="93"/></decl_stmt>
            <comment type="line" pos:line="27" pos:column="13">// assume that remaining leftovers belong to this bad request</comment>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">!<pos:position pos:line="28" pos:column="18"/></operator><call><name><name pos:line="28" pos:column="18">csd<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">inBuf<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">isEmpty<pos:position pos:line="28" pos:column="36"/></name></name><argument_list pos:line="28" pos:column="36">()<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="29" pos:column="17">csd<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">consumeInput<pos:position pos:line="29" pos:column="34"/></name></name><argument_list pos:line="29" pos:column="34">(<argument><expr><call><name><name pos:line="29" pos:column="35">csd<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">inBuf<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">.<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">length<pos:position pos:line="29" pos:column="52"/></name></name><argument_list pos:line="29" pos:column="52">()<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt></block></then></if>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">result<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block>

    <comment type="block" pos:line="34" pos:column="5">/* We know the whole request is in parser now */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">11<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">2<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"HTTP Client "<pos:position pos:line="35" pos:column="33"/></literal> <operator pos:line="35" pos:column="34">&lt;&lt;<pos:position pos:line="35" pos:column="42"/></operator> <name><name pos:line="35" pos:column="37">csd<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">clientConnection<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">debugs<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">11<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="16">2<pos:position pos:line="36" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"HTTP Client REQUEST:\n---------\n"<pos:position pos:line="36" pos:column="54"/></literal> <operator pos:line="36" pos:column="55">&lt;&lt;<pos:position pos:line="36" pos:column="63"/></operator>
           <call><name><name pos:line="37" pos:column="12">hp<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">method<pos:position pos:line="37" pos:column="22"/></name></name><argument_list pos:line="37" pos:column="22">()<pos:position pos:line="37" pos:column="24"/></argument_list></call> <operator pos:line="37" pos:column="25">&lt;&lt;<pos:position pos:line="37" pos:column="33"/></operator> <literal type="string" pos:line="37" pos:column="28">" "<pos:position pos:line="37" pos:column="31"/></literal> <operator pos:line="37" pos:column="32">&lt;&lt;<pos:position pos:line="37" pos:column="40"/></operator> <call><name><name pos:line="37" pos:column="35">hp<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">requestUri<pos:position pos:line="37" pos:column="49"/></name></name><argument_list pos:line="37" pos:column="49">()<pos:position pos:line="37" pos:column="51"/></argument_list></call> <operator pos:line="37" pos:column="52">&lt;&lt;<pos:position pos:line="37" pos:column="60"/></operator> <literal type="string" pos:line="37" pos:column="55">" "<pos:position pos:line="37" pos:column="58"/></literal> <operator pos:line="37" pos:column="59">&lt;&lt;<pos:position pos:line="37" pos:column="67"/></operator> <call><name><name pos:line="37" pos:column="62">hp<pos:position pos:line="37" pos:column="64"/></name><operator pos:line="37" pos:column="64">-&gt;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="66">messageProtocol<pos:position pos:line="37" pos:column="81"/></name></name><argument_list pos:line="37" pos:column="81">()<pos:position pos:line="37" pos:column="83"/></argument_list></call> <operator pos:line="37" pos:column="84">&lt;&lt;<pos:position pos:line="37" pos:column="92"/></operator> <literal type="string" pos:line="37" pos:column="87">"\n"<pos:position pos:line="37" pos:column="91"/></literal> <operator pos:line="37" pos:column="92">&lt;&lt;<pos:position pos:line="37" pos:column="100"/></operator>
           <call><name><name pos:line="38" pos:column="12">hp<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">mimeHeader<pos:position pos:line="38" pos:column="26"/></name></name><argument_list pos:line="38" pos:column="26">()<pos:position pos:line="38" pos:column="28"/></argument_list></call> <operator pos:line="38" pos:column="29">&lt;&lt;<pos:position pos:line="38" pos:column="37"/></operator>
           <literal type="string" pos:line="39" pos:column="12">"\n----------"<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* deny CONNECT via accelerated ports */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name><name pos:line="42" pos:column="9">hp<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">method<pos:position pos:line="42" pos:column="19"/></name></name><argument_list pos:line="42" pos:column="19">()<pos:position pos:line="42" pos:column="21"/></argument_list></call> <operator pos:line="42" pos:column="22">==<pos:position pos:line="42" pos:column="24"/></operator> <name><name pos:line="42" pos:column="25">Http<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">::<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">METHOD_CONNECT<pos:position pos:line="42" pos:column="45"/></name></name> <operator pos:line="42" pos:column="46">&amp;&amp;<pos:position pos:line="42" pos:column="56"/></operator> <name><name pos:line="42" pos:column="49">csd<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">port<pos:position pos:line="42" pos:column="58"/></name></name> <operator pos:line="42" pos:column="59">!=<pos:position pos:line="42" pos:column="61"/></operator> <name pos:line="42" pos:column="62">NULL<pos:position pos:line="42" pos:column="66"/></name> <operator pos:line="42" pos:column="67">&amp;&amp;<pos:position pos:line="42" pos:column="77"/></operator> <name><name pos:line="42" pos:column="70">csd<pos:position pos:line="42" pos:column="73"/></name><operator pos:line="42" pos:column="73">-&gt;<pos:position pos:line="42" pos:column="78"/></operator><name pos:line="42" pos:column="75">port<pos:position pos:line="42" pos:column="79"/></name><operator pos:line="42" pos:column="79">-&gt;<pos:position pos:line="42" pos:column="84"/></operator><name pos:line="42" pos:column="81">flags<pos:position pos:line="42" pos:column="86"/></name><operator pos:line="42" pos:column="86">.<pos:position pos:line="42" pos:column="87"/></operator><name pos:line="42" pos:column="87">accelSurrogate<pos:position pos:line="42" pos:column="101"/></name></name></expr>)<pos:position pos:line="42" pos:column="102"/></condition><then pos:line="42" pos:column="102"> <block pos:line="42" pos:column="103">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">33<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">DBG_IMPORTANT<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="35">"WARNING: CONNECT method received on "<pos:position pos:line="43" pos:column="73"/></literal> <operator pos:line="43" pos:column="74">&lt;&lt;<pos:position pos:line="43" pos:column="82"/></operator> <name><name pos:line="43" pos:column="77">csd<pos:position pos:line="43" pos:column="80"/></name><operator pos:line="43" pos:column="80">-&gt;<pos:position pos:line="43" pos:column="85"/></operator><name pos:line="43" pos:column="82">transferProtocol<pos:position pos:line="43" pos:column="98"/></name></name> <operator pos:line="43" pos:column="99">&lt;&lt;<pos:position pos:line="43" pos:column="107"/></operator> <literal type="string" pos:line="43" pos:column="102">" Accelerator port "<pos:position pos:line="43" pos:column="122"/></literal> <operator pos:line="43" pos:column="123">&lt;&lt;<pos:position pos:line="43" pos:column="131"/></operator> <call><name><name pos:line="43" pos:column="126">csd<pos:position pos:line="43" pos:column="129"/></name><operator pos:line="43" pos:column="129">-&gt;<pos:position pos:line="43" pos:column="134"/></operator><name pos:line="43" pos:column="131">port<pos:position pos:line="43" pos:column="135"/></name><operator pos:line="43" pos:column="135">-&gt;<pos:position pos:line="43" pos:column="140"/></operator><name pos:line="43" pos:column="137">s<pos:position pos:line="43" pos:column="138"/></name><operator pos:line="43" pos:column="138">.<pos:position pos:line="43" pos:column="139"/></operator><name pos:line="43" pos:column="139">port<pos:position pos:line="43" pos:column="143"/></name></name><argument_list pos:line="43" pos:column="143">()<pos:position pos:line="43" pos:column="145"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="147"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">33<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">DBG_IMPORTANT<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="35">"WARNING: for request: "<pos:position pos:line="44" pos:column="59"/></literal> <operator pos:line="44" pos:column="60">&lt;&lt;<pos:position pos:line="44" pos:column="68"/></operator> <call><name><name pos:line="44" pos:column="63">hp<pos:position pos:line="44" pos:column="65"/></name><operator pos:line="44" pos:column="65">-&gt;<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="67">method<pos:position pos:line="44" pos:column="73"/></name></name><argument_list pos:line="44" pos:column="73">()<pos:position pos:line="44" pos:column="75"/></argument_list></call> <operator pos:line="44" pos:column="76">&lt;&lt;<pos:position pos:line="44" pos:column="84"/></operator> <literal type="string" pos:line="44" pos:column="79">" "<pos:position pos:line="44" pos:column="82"/></literal> <operator pos:line="44" pos:column="83">&lt;&lt;<pos:position pos:line="44" pos:column="91"/></operator> <call><name><name pos:line="44" pos:column="86">hp<pos:position pos:line="44" pos:column="88"/></name><operator pos:line="44" pos:column="88">-&gt;<pos:position pos:line="44" pos:column="93"/></operator><name pos:line="44" pos:column="90">requestUri<pos:position pos:line="44" pos:column="100"/></name></name><argument_list pos:line="44" pos:column="100">()<pos:position pos:line="44" pos:column="102"/></argument_list></call> <operator pos:line="44" pos:column="103">&lt;&lt;<pos:position pos:line="44" pos:column="111"/></operator> <literal type="string" pos:line="44" pos:column="106">" "<pos:position pos:line="44" pos:column="109"/></literal> <operator pos:line="44" pos:column="110">&lt;&lt;<pos:position pos:line="44" pos:column="118"/></operator> <call><name><name pos:line="44" pos:column="113">hp<pos:position pos:line="44" pos:column="115"/></name><operator pos:line="44" pos:column="115">-&gt;<pos:position pos:line="44" pos:column="120"/></operator><name pos:line="44" pos:column="117">messageProtocol<pos:position pos:line="44" pos:column="132"/></name></name><argument_list pos:line="44" pos:column="132">()<pos:position pos:line="44" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="136"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">hp<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">parseStatusCode<pos:position pos:line="45" pos:column="28"/></name></name> <operator pos:line="45" pos:column="29">=<pos:position pos:line="45" pos:column="30"/></operator> <name><name pos:line="45" pos:column="31">Http<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">::<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">scMethodNotAllowed<pos:position pos:line="45" pos:column="55"/></name></name></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><call><name><name pos:line="46" pos:column="16">csd<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">abortRequestParsing<pos:position pos:line="46" pos:column="40"/></name></name><argument_list pos:line="46" pos:column="40">(<argument><expr><literal type="string" pos:line="46" pos:column="41">"error:method-not-allowed"<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* RFC 7540 section 11.6 registers the method PRI as HTTP/2 specific
     * Deny "PRI" method if used in HTTP/1.x or 0.9 versions.
     * If seen it signals a broken client or proxy has corrupted the traffic.
     */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><call><name><name pos:line="53" pos:column="9">hp<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">method<pos:position pos:line="53" pos:column="19"/></name></name><argument_list pos:line="53" pos:column="19">()<pos:position pos:line="53" pos:column="21"/></argument_list></call> <operator pos:line="53" pos:column="22">==<pos:position pos:line="53" pos:column="24"/></operator> <name><name pos:line="53" pos:column="25">Http<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">::<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">METHOD_PRI<pos:position pos:line="53" pos:column="41"/></name></name> <operator pos:line="53" pos:column="42">&amp;&amp;<pos:position pos:line="53" pos:column="52"/></operator> <call><name><name pos:line="53" pos:column="45">hp<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">messageProtocol<pos:position pos:line="53" pos:column="64"/></name></name><argument_list pos:line="53" pos:column="64">()<pos:position pos:line="53" pos:column="66"/></argument_list></call> <operator pos:line="53" pos:column="67">&lt;<pos:position pos:line="53" pos:column="71"/></operator> <call><name><name pos:line="53" pos:column="69">Http<pos:position pos:line="53" pos:column="73"/></name><operator pos:line="53" pos:column="73">::<pos:position pos:line="53" pos:column="75"/></operator><name pos:line="53" pos:column="75">ProtocolVersion<pos:position pos:line="53" pos:column="90"/></name></name><argument_list pos:line="53" pos:column="90">(<argument><expr><literal type="number" pos:line="53" pos:column="91">2<pos:position pos:line="53" pos:column="92"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="53" pos:column="93">0<pos:position pos:line="53" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="95"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="96"/></condition><then pos:line="53" pos:column="96"> <block pos:line="53" pos:column="97">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">33<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="20">DBG_IMPORTANT<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="35">"WARNING: PRI method received on "<pos:position pos:line="54" pos:column="69"/></literal> <operator pos:line="54" pos:column="70">&lt;&lt;<pos:position pos:line="54" pos:column="78"/></operator> <name><name pos:line="54" pos:column="73">csd<pos:position pos:line="54" pos:column="76"/></name><operator pos:line="54" pos:column="76">-&gt;<pos:position pos:line="54" pos:column="81"/></operator><name pos:line="54" pos:column="78">transferProtocol<pos:position pos:line="54" pos:column="94"/></name></name> <operator pos:line="54" pos:column="95">&lt;&lt;<pos:position pos:line="54" pos:column="103"/></operator> <literal type="string" pos:line="54" pos:column="98">" port "<pos:position pos:line="54" pos:column="106"/></literal> <operator pos:line="54" pos:column="107">&lt;&lt;<pos:position pos:line="54" pos:column="115"/></operator> <call><name><name pos:line="54" pos:column="110">csd<pos:position pos:line="54" pos:column="113"/></name><operator pos:line="54" pos:column="113">-&gt;<pos:position pos:line="54" pos:column="118"/></operator><name pos:line="54" pos:column="115">port<pos:position pos:line="54" pos:column="119"/></name><operator pos:line="54" pos:column="119">-&gt;<pos:position pos:line="54" pos:column="124"/></operator><name pos:line="54" pos:column="121">s<pos:position pos:line="54" pos:column="122"/></name><operator pos:line="54" pos:column="122">.<pos:position pos:line="54" pos:column="123"/></operator><name pos:line="54" pos:column="123">port<pos:position pos:line="54" pos:column="127"/></name></name><argument_list pos:line="54" pos:column="127">()<pos:position pos:line="54" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="131"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">debugs<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="number" pos:line="55" pos:column="16">33<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="20">DBG_IMPORTANT<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="35">"WARNING: for request: "<pos:position pos:line="55" pos:column="59"/></literal> <operator pos:line="55" pos:column="60">&lt;&lt;<pos:position pos:line="55" pos:column="68"/></operator> <call><name><name pos:line="55" pos:column="63">hp<pos:position pos:line="55" pos:column="65"/></name><operator pos:line="55" pos:column="65">-&gt;<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="67">method<pos:position pos:line="55" pos:column="73"/></name></name><argument_list pos:line="55" pos:column="73">()<pos:position pos:line="55" pos:column="75"/></argument_list></call> <operator pos:line="55" pos:column="76">&lt;&lt;<pos:position pos:line="55" pos:column="84"/></operator> <literal type="string" pos:line="55" pos:column="79">" "<pos:position pos:line="55" pos:column="82"/></literal> <operator pos:line="55" pos:column="83">&lt;&lt;<pos:position pos:line="55" pos:column="91"/></operator> <call><name><name pos:line="55" pos:column="86">hp<pos:position pos:line="55" pos:column="88"/></name><operator pos:line="55" pos:column="88">-&gt;<pos:position pos:line="55" pos:column="93"/></operator><name pos:line="55" pos:column="90">requestUri<pos:position pos:line="55" pos:column="100"/></name></name><argument_list pos:line="55" pos:column="100">()<pos:position pos:line="55" pos:column="102"/></argument_list></call> <operator pos:line="55" pos:column="103">&lt;&lt;<pos:position pos:line="55" pos:column="111"/></operator> <literal type="string" pos:line="55" pos:column="106">" "<pos:position pos:line="55" pos:column="109"/></literal> <operator pos:line="55" pos:column="110">&lt;&lt;<pos:position pos:line="55" pos:column="118"/></operator> <call><name><name pos:line="55" pos:column="113">hp<pos:position pos:line="55" pos:column="115"/></name><operator pos:line="55" pos:column="115">-&gt;<pos:position pos:line="55" pos:column="120"/></operator><name pos:line="55" pos:column="117">messageProtocol<pos:position pos:line="55" pos:column="132"/></name></name><argument_list pos:line="55" pos:column="132">()<pos:position pos:line="55" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="136"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">hp<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">-&gt;<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="13">parseStatusCode<pos:position pos:line="56" pos:column="28"/></name></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <name><name pos:line="56" pos:column="31">Http<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">::<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="37">scMethodNotAllowed<pos:position pos:line="56" pos:column="55"/></name></name></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
        <return pos:line="57" pos:column="9">return <expr><call><name><name pos:line="57" pos:column="16">csd<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">abortRequestParsing<pos:position pos:line="57" pos:column="40"/></name></name><argument_list pos:line="57" pos:column="40">(<argument><expr><literal type="string" pos:line="57" pos:column="41">"error:method-not-allowed"<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><call><name><name pos:line="60" pos:column="9">hp<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">method<pos:position pos:line="60" pos:column="19"/></name></name><argument_list pos:line="60" pos:column="19">()<pos:position pos:line="60" pos:column="21"/></argument_list></call> <operator pos:line="60" pos:column="22">==<pos:position pos:line="60" pos:column="24"/></operator> <name><name pos:line="60" pos:column="25">Http<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">::<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">METHOD_NONE<pos:position pos:line="60" pos:column="42"/></name></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">debugs<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="number" pos:line="61" pos:column="16">33<pos:position pos:line="61" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="20">DBG_IMPORTANT<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="35">"WARNING: Unsupported method: "<pos:position pos:line="61" pos:column="66"/></literal> <operator pos:line="61" pos:column="67">&lt;&lt;<pos:position pos:line="61" pos:column="75"/></operator> <call><name><name pos:line="61" pos:column="70">hp<pos:position pos:line="61" pos:column="72"/></name><operator pos:line="61" pos:column="72">-&gt;<pos:position pos:line="61" pos:column="77"/></operator><name pos:line="61" pos:column="74">method<pos:position pos:line="61" pos:column="80"/></name></name><argument_list pos:line="61" pos:column="80">()<pos:position pos:line="61" pos:column="82"/></argument_list></call> <operator pos:line="61" pos:column="83">&lt;&lt;<pos:position pos:line="61" pos:column="91"/></operator> <literal type="string" pos:line="61" pos:column="86">" "<pos:position pos:line="61" pos:column="89"/></literal> <operator pos:line="61" pos:column="90">&lt;&lt;<pos:position pos:line="61" pos:column="98"/></operator> <call><name><name pos:line="61" pos:column="93">hp<pos:position pos:line="61" pos:column="95"/></name><operator pos:line="61" pos:column="95">-&gt;<pos:position pos:line="61" pos:column="100"/></operator><name pos:line="61" pos:column="97">requestUri<pos:position pos:line="61" pos:column="107"/></name></name><argument_list pos:line="61" pos:column="107">()<pos:position pos:line="61" pos:column="109"/></argument_list></call> <operator pos:line="61" pos:column="110">&lt;&lt;<pos:position pos:line="61" pos:column="118"/></operator> <literal type="string" pos:line="61" pos:column="113">" "<pos:position pos:line="61" pos:column="116"/></literal> <operator pos:line="61" pos:column="117">&lt;&lt;<pos:position pos:line="61" pos:column="125"/></operator> <call><name><name pos:line="61" pos:column="120">hp<pos:position pos:line="61" pos:column="122"/></name><operator pos:line="61" pos:column="122">-&gt;<pos:position pos:line="61" pos:column="127"/></operator><name pos:line="61" pos:column="124">messageProtocol<pos:position pos:line="61" pos:column="139"/></name></name><argument_list pos:line="61" pos:column="139">()<pos:position pos:line="61" pos:column="141"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="143"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">hp<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">parseStatusCode<pos:position pos:line="62" pos:column="28"/></name></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <name><name pos:line="62" pos:column="31">Http<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">::<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">scMethodNotAllowed<pos:position pos:line="62" pos:column="55"/></name></name></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><call><name><name pos:line="63" pos:column="16">csd<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">abortRequestParsing<pos:position pos:line="63" pos:column="40"/></name></name><argument_list pos:line="63" pos:column="40">(<argument><expr><literal type="string" pos:line="63" pos:column="41">"error:unsupported-request-method"<pos:position pos:line="63" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="77"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="66" pos:column="5">// Process headers after request line</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">debugs<pos:position pos:line="67" pos:column="11"/></name><argument_list pos:line="67" pos:column="11">(<argument><expr><literal type="number" pos:line="67" pos:column="12">33<pos:position pos:line="67" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="16">3<pos:position pos:line="67" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="19">"complete request received. "<pos:position pos:line="67" pos:column="48"/></literal> <operator pos:line="67" pos:column="49">&lt;&lt;<pos:position pos:line="67" pos:column="57"/></operator>
           <literal type="string" pos:line="68" pos:column="12">"prefix_sz = "<pos:position pos:line="68" pos:column="26"/></literal> <operator pos:line="68" pos:column="27">&lt;&lt;<pos:position pos:line="68" pos:column="35"/></operator> <call><name><name pos:line="68" pos:column="30">hp<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">messageHeaderSize<pos:position pos:line="68" pos:column="51"/></name></name><argument_list pos:line="68" pos:column="51">()<pos:position pos:line="68" pos:column="53"/></argument_list></call> <operator pos:line="68" pos:column="54">&lt;&lt;<pos:position pos:line="68" pos:column="62"/></operator>
           <literal type="string" pos:line="69" pos:column="12">", request-line-size="<pos:position pos:line="69" pos:column="34"/></literal> <operator pos:line="69" pos:column="35">&lt;&lt;<pos:position pos:line="69" pos:column="43"/></operator> <call><name><name pos:line="69" pos:column="38">hp<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">-&gt;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="42">firstLineSize<pos:position pos:line="69" pos:column="55"/></name></name><argument_list pos:line="69" pos:column="55">()<pos:position pos:line="69" pos:column="57"/></argument_list></call> <operator pos:line="69" pos:column="58">&lt;&lt;<pos:position pos:line="69" pos:column="66"/></operator>
           <literal type="string" pos:line="70" pos:column="12">", mime-header-size="<pos:position pos:line="70" pos:column="33"/></literal> <operator pos:line="70" pos:column="34">&lt;&lt;<pos:position pos:line="70" pos:column="42"/></operator> <call><name><name pos:line="70" pos:column="37">hp<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">headerBlockSize<pos:position pos:line="70" pos:column="56"/></name></name><argument_list pos:line="70" pos:column="56">()<pos:position pos:line="70" pos:column="58"/></argument_list></call> <operator pos:line="70" pos:column="59">&lt;&lt;<pos:position pos:line="70" pos:column="67"/></operator>
           <literal type="string" pos:line="71" pos:column="12">", mime header block:\n"<pos:position pos:line="71" pos:column="36"/></literal> <operator pos:line="71" pos:column="37">&lt;&lt;<pos:position pos:line="71" pos:column="45"/></operator> <call><name><name pos:line="71" pos:column="40">hp<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">mimeHeader<pos:position pos:line="71" pos:column="54"/></name></name><argument_list pos:line="71" pos:column="54">()<pos:position pos:line="71" pos:column="56"/></argument_list></call> <operator pos:line="71" pos:column="57">&lt;&lt;<pos:position pos:line="71" pos:column="65"/></operator> <literal type="string" pos:line="71" pos:column="60">"\n----------"<pos:position pos:line="71" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="73" pos:column="5">/* Ok, all headers are received */</comment>
    <decl_stmt><decl><type><name pos:line="74" pos:column="5">ClientHttpRequest<pos:position pos:line="74" pos:column="22"/></name> <modifier pos:line="74" pos:column="23">*<pos:position pos:line="74" pos:column="24"/></modifier></type><name pos:line="74" pos:column="24">http<pos:position pos:line="74" pos:column="28"/></name> <init pos:line="74" pos:column="29">= <expr><operator pos:line="74" pos:column="31">new<pos:position pos:line="74" pos:column="34"/></operator> <call><name pos:line="74" pos:column="35">ClientHttpRequest<pos:position pos:line="74" pos:column="52"/></name><argument_list pos:line="74" pos:column="52">(<argument><expr><name pos:line="74" pos:column="53">csd<pos:position pos:line="74" pos:column="56"/></name></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="58"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">http<pos:position pos:line="76" pos:column="9"/></name><operator pos:line="76" pos:column="9">-&gt;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="11">req_sz<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <call><name><name pos:line="76" pos:column="20">hp<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">messageHeaderSize<pos:position pos:line="76" pos:column="41"/></name></name><argument_list pos:line="76" pos:column="41">()<pos:position pos:line="76" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="77" pos:column="5">Http<pos:position pos:line="77" pos:column="9"/></name><operator pos:line="77" pos:column="9">::<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">Stream<pos:position pos:line="77" pos:column="17"/></name></name> <modifier pos:line="77" pos:column="18">*<pos:position pos:line="77" pos:column="19"/></modifier></type><name pos:line="77" pos:column="19">result<pos:position pos:line="77" pos:column="25"/></name> <init pos:line="77" pos:column="26">= <expr><operator pos:line="77" pos:column="28">new<pos:position pos:line="77" pos:column="31"/></operator> <call><name><name pos:line="77" pos:column="32">Http<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">::<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="38">Stream<pos:position pos:line="77" pos:column="44"/></name></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name><name pos:line="77" pos:column="45">csd<pos:position pos:line="77" pos:column="48"/></name><operator pos:line="77" pos:column="48">-&gt;<pos:position pos:line="77" pos:column="53"/></operator><name pos:line="77" pos:column="50">clientConnection<pos:position pos:line="77" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="68">http<pos:position pos:line="77" pos:column="72"/></name></expr></argument>)<pos:position pos:line="77" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="77" pos:column="74"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="79" pos:column="5">StoreIOBuffer<pos:position pos:line="79" pos:column="18"/></name></type> <name pos:line="79" pos:column="19">tempBuffer<pos:position pos:line="79" pos:column="29"/></name></decl>;<pos:position pos:line="79" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">tempBuffer<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">.<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">data<pos:position pos:line="80" pos:column="20"/></name></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <name><name pos:line="80" pos:column="23">result<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">-&gt;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="31">reqbuf<pos:position pos:line="80" pos:column="37"/></name></name></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">tempBuffer<pos:position pos:line="81" pos:column="15"/></name><operator pos:line="81" pos:column="15">.<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">length<pos:position pos:line="81" pos:column="22"/></name></name> <operator pos:line="81" pos:column="23">=<pos:position pos:line="81" pos:column="24"/></operator> <name pos:line="81" pos:column="25">HTTP_REQBUF_SZ<pos:position pos:line="81" pos:column="39"/></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="83" pos:column="5">ClientStreamData<pos:position pos:line="83" pos:column="21"/></name></type> <name pos:line="83" pos:column="22">newServer<pos:position pos:line="83" pos:column="31"/></name> <init pos:line="83" pos:column="32">= <expr><operator pos:line="83" pos:column="34">new<pos:position pos:line="83" pos:column="37"/></operator> <call><name pos:line="83" pos:column="38">clientReplyContext<pos:position pos:line="83" pos:column="56"/></name><argument_list pos:line="83" pos:column="56">(<argument><expr><name pos:line="83" pos:column="57">http<pos:position pos:line="83" pos:column="61"/></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="84" pos:column="5">ClientStreamData<pos:position pos:line="84" pos:column="21"/></name></type> <name pos:line="84" pos:column="22">newClient<pos:position pos:line="84" pos:column="31"/></name> <init pos:line="84" pos:column="32">= <expr><name pos:line="84" pos:column="34">result<pos:position pos:line="84" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="84" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">clientStreamInit<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><operator pos:line="85" pos:column="22">&amp;<pos:position pos:line="85" pos:column="27"/></operator><name><name pos:line="85" pos:column="23">http<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">client_stream<pos:position pos:line="85" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="44">clientGetMoreData<pos:position pos:line="85" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="63">clientReplyDetach<pos:position pos:line="85" pos:column="80"/></name></expr></argument>,
                     <argument><expr><name pos:line="86" pos:column="22">clientReplyStatus<pos:position pos:line="86" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="41">newServer<pos:position pos:line="86" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">clientSocketRecipient<pos:position pos:line="86" pos:column="73"/></name></expr></argument>,
                     <argument><expr><name pos:line="87" pos:column="22">clientSocketDetach<pos:position pos:line="87" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="42">newClient<pos:position pos:line="87" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="53">tempBuffer<pos:position pos:line="87" pos:column="63"/></name></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="89" pos:column="5">/* set url */</comment>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">debugs<pos:position pos:line="90" pos:column="11"/></name><argument_list pos:line="90" pos:column="11">(<argument><expr><literal type="number" pos:line="90" pos:column="12">33<pos:position pos:line="90" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="90" pos:column="15">5<pos:position pos:line="90" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="18">"Prepare absolute URL from "<pos:position pos:line="90" pos:column="46"/></literal> <operator pos:line="90" pos:column="47">&lt;&lt;<pos:position pos:line="90" pos:column="55"/></operator>
           <operator pos:line="91" pos:column="12">(<pos:position pos:line="91" pos:column="13"/></operator><ternary><condition><expr><call><name><name pos:line="91" pos:column="13">csd<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">transparent<pos:position pos:line="91" pos:column="29"/></name></name><argument_list pos:line="91" pos:column="29">()<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>?<pos:position pos:line="91" pos:column="32"/></condition><then><expr><literal type="string" pos:line="91" pos:column="32">"intercept"<pos:position pos:line="91" pos:column="43"/></literal></expr></then><else pos:line="91" pos:column="43">:<expr><operator pos:line="91" pos:column="44">(<pos:position pos:line="91" pos:column="45"/></operator><ternary><condition><expr><name><name pos:line="91" pos:column="45">csd<pos:position pos:line="91" pos:column="48"/></name><operator pos:line="91" pos:column="48">-&gt;<pos:position pos:line="91" pos:column="53"/></operator><name pos:line="91" pos:column="50">port<pos:position pos:line="91" pos:column="54"/></name><operator pos:line="91" pos:column="54">-&gt;<pos:position pos:line="91" pos:column="59"/></operator><name pos:line="91" pos:column="56">flags<pos:position pos:line="91" pos:column="61"/></name><operator pos:line="91" pos:column="61">.<pos:position pos:line="91" pos:column="62"/></operator><name pos:line="91" pos:column="62">accelSurrogate<pos:position pos:line="91" pos:column="76"/></name></name></expr> ?<pos:position pos:line="91" pos:column="78"/></condition><then pos:line="91" pos:column="78"> <expr><literal type="string" pos:line="91" pos:column="79">"accel"<pos:position pos:line="91" pos:column="86"/></literal></expr></then><else pos:line="91" pos:column="86">:<expr><literal type="string" pos:line="91" pos:column="87">""<pos:position pos:line="91" pos:column="89"/></literal></expr></else></ternary><operator pos:line="91" pos:column="89">)<pos:position pos:line="91" pos:column="90"/></operator></expr></else></ternary><operator pos:line="91" pos:column="90">)<pos:position pos:line="91" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="91" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="93"/></expr_stmt>
    <comment type="block" pos:line="92" pos:column="5">/* Rewrite the URL in transparent or accelerator mode */</comment>
    <comment type="block" pos:line="93" pos:column="5">/* NP: there are several cases to traverse here:
     *  - standard mode (forward proxy)
     *  - transparent mode (TPROXY)
     *  - transparent mode with failures
     *  - intercept mode (NAT)
     *  - intercept mode with failures
     *  - accelerator mode (reverse proxy)
     *  - internal relative-URL
     *  - mixed combos of the above with internal URL
     *  - remote interception with PROXY protocol
     *  - remote reverse-proxy with PROXY protocol
     */</comment>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name><name pos:line="105" pos:column="9">csd<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">-&gt;<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="14">transparent<pos:position pos:line="105" pos:column="25"/></name></name><argument_list pos:line="105" pos:column="25">()<pos:position pos:line="105" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="28"/></condition><then pos:line="105" pos:column="28"> <block pos:line="105" pos:column="29">{
        <comment type="block" pos:line="106" pos:column="9">/* intercept or transparent mode, properly working with no failures */</comment>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">prepareTransparentURL<pos:position pos:line="107" pos:column="30"/></name><argument_list pos:line="107" pos:column="30">(<argument><expr><name pos:line="107" pos:column="31">csd<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="36">http<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">hp<pos:position pos:line="107" pos:column="44"/></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="46"/></expr_stmt>

    }<pos:position pos:line="109" pos:column="6"/></block></then> <elseif pos:line="109" pos:column="7">else <if pos:line="109" pos:column="12">if <condition pos:line="109" pos:column="15">(<expr><call><name pos:line="109" pos:column="16">internalCheck<pos:position pos:line="109" pos:column="29"/></name><argument_list pos:line="109" pos:column="29">(<argument><expr><call><name><name pos:line="109" pos:column="30">hp<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">-&gt;<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="34">requestUri<pos:position pos:line="109" pos:column="44"/></name></name><argument_list pos:line="109" pos:column="44">()<pos:position pos:line="109" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="48"/></condition><then pos:line="109" pos:column="48"> <block pos:line="109" pos:column="49">{ <comment type="line" pos:line="109" pos:column="51">// NP: only matches relative-URI</comment>
        <comment type="block" pos:line="110" pos:column="9">/* internal URL mode */</comment>
        <comment type="block" pos:line="111" pos:column="9">/* prepend our name &amp; port */</comment>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">http<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">-&gt;<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="15">uri<pos:position pos:line="112" pos:column="18"/></name></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <call><name pos:line="112" pos:column="21">xstrdup<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><call><name pos:line="112" pos:column="29">internalLocalUri<pos:position pos:line="112" pos:column="45"/></name><argument_list pos:line="112" pos:column="45">(<argument><expr><name pos:line="112" pos:column="46">NULL<pos:position pos:line="112" pos:column="50"/></name></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="52">hp<pos:position pos:line="112" pos:column="54"/></name><operator pos:line="112" pos:column="54">-&gt;<pos:position pos:line="112" pos:column="59"/></operator><name pos:line="112" pos:column="56">requestUri<pos:position pos:line="112" pos:column="66"/></name></name><argument_list pos:line="112" pos:column="66">()<pos:position pos:line="112" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="71"/></expr_stmt>
        <comment type="line" pos:line="113" pos:column="9">// We just re-wrote the URL. Must replace the Host: header.</comment>
        <comment type="line" pos:line="114" pos:column="9">//  But have not parsed there yet!! flag for local-only handling.</comment>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">http<pos:position pos:line="115" pos:column="13"/></name><operator pos:line="115" pos:column="13">-&gt;<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="15">flags<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">.<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">internal<pos:position pos:line="115" pos:column="29"/></name></name> <operator pos:line="115" pos:column="30">=<pos:position pos:line="115" pos:column="31"/></operator> <literal type="boolean" pos:line="115" pos:column="32">true<pos:position pos:line="115" pos:column="36"/></literal></expr>;<pos:position pos:line="115" pos:column="37"/></expr_stmt>

    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif> <elseif pos:line="117" pos:column="7">else <if pos:line="117" pos:column="12">if <condition pos:line="117" pos:column="15">(<expr><name><name pos:line="117" pos:column="16">csd<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">port<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">-&gt;<pos:position pos:line="117" pos:column="30"/></operator><name pos:line="117" pos:column="27">flags<pos:position pos:line="117" pos:column="32"/></name><operator pos:line="117" pos:column="32">.<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="33">accelSurrogate<pos:position pos:line="117" pos:column="47"/></name></name> <operator pos:line="117" pos:column="48">||<pos:position pos:line="117" pos:column="50"/></operator> <call><name><name pos:line="117" pos:column="51">csd<pos:position pos:line="117" pos:column="54"/></name><operator pos:line="117" pos:column="54">-&gt;<pos:position pos:line="117" pos:column="59"/></operator><name pos:line="117" pos:column="56">switchedToHttps<pos:position pos:line="117" pos:column="71"/></name></name><argument_list pos:line="117" pos:column="71">()<pos:position pos:line="117" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="74"/></condition><then pos:line="117" pos:column="74"> <block pos:line="117" pos:column="75">{
        <comment type="block" pos:line="118" pos:column="9">/* accelerator mode */</comment>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">prepareAcceleratedURL<pos:position pos:line="119" pos:column="30"/></name><argument_list pos:line="119" pos:column="30">(<argument><expr><name pos:line="119" pos:column="31">csd<pos:position pos:line="119" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="36">http<pos:position pos:line="119" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">hp<pos:position pos:line="119" pos:column="44"/></name></expr></argument>)<pos:position pos:line="119" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><operator pos:line="122" pos:column="9">!<pos:position pos:line="122" pos:column="10"/></operator><name><name pos:line="122" pos:column="10">http<pos:position pos:line="122" pos:column="14"/></name><operator pos:line="122" pos:column="14">-&gt;<pos:position pos:line="122" pos:column="19"/></operator><name pos:line="122" pos:column="16">uri<pos:position pos:line="122" pos:column="19"/></name></name></expr>)<pos:position pos:line="122" pos:column="20"/></condition><then pos:line="122" pos:column="20"> <block pos:line="122" pos:column="21">{
        <comment type="block" pos:line="123" pos:column="9">/* No special rewrites have been applied above, use the
         * requested url. may be rewritten later, so make extra room */</comment>
        <decl_stmt><decl><type><name pos:line="125" pos:column="9">int<pos:position pos:line="125" pos:column="12"/></name></type> <name pos:line="125" pos:column="13">url_sz<pos:position pos:line="125" pos:column="19"/></name> <init pos:line="125" pos:column="20">= <expr><call><name><name pos:line="125" pos:column="22">hp<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">-&gt;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="26">requestUri<pos:position pos:line="125" pos:column="36"/></name></name><argument_list pos:line="125" pos:column="36">()<pos:position pos:line="125" pos:column="38"/></argument_list></call><operator pos:line="125" pos:column="38">.<pos:position pos:line="125" pos:column="39"/></operator><call><name pos:line="125" pos:column="39">length<pos:position pos:line="125" pos:column="45"/></name><argument_list pos:line="125" pos:column="45">()<pos:position pos:line="125" pos:column="47"/></argument_list></call> <operator pos:line="125" pos:column="48">+<pos:position pos:line="125" pos:column="49"/></operator> <name><name pos:line="125" pos:column="50">Config<pos:position pos:line="125" pos:column="56"/></name><operator pos:line="125" pos:column="56">.<pos:position pos:line="125" pos:column="57"/></operator><name pos:line="125" pos:column="57">appendDomainLen<pos:position pos:line="125" pos:column="72"/></name></name> <operator pos:line="125" pos:column="73">+<pos:position pos:line="125" pos:column="74"/></operator> <literal type="number" pos:line="125" pos:column="75">5<pos:position pos:line="125" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="125" pos:column="77"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="126" pos:column="9">http<pos:position pos:line="126" pos:column="13"/></name><operator pos:line="126" pos:column="13">-&gt;<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="15">uri<pos:position pos:line="126" pos:column="18"/></name></name> <operator pos:line="126" pos:column="19">=<pos:position pos:line="126" pos:column="20"/></operator> <operator pos:line="126" pos:column="21">(<pos:position pos:line="126" pos:column="22"/></operator><name pos:line="126" pos:column="22">char<pos:position pos:line="126" pos:column="26"/></name> <operator pos:line="126" pos:column="27">*<pos:position pos:line="126" pos:column="28"/></operator><operator pos:line="126" pos:column="28">)<pos:position pos:line="126" pos:column="29"/></operator><call><name pos:line="126" pos:column="29">xcalloc<pos:position pos:line="126" pos:column="36"/></name><argument_list pos:line="126" pos:column="36">(<argument><expr><name pos:line="126" pos:column="37">url_sz<pos:position pos:line="126" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="45">1<pos:position pos:line="126" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">SBufToCstring<pos:position pos:line="127" pos:column="22"/></name><argument_list pos:line="127" pos:column="22">(<argument><expr><name><name pos:line="127" pos:column="23">http<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">-&gt;<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="29">uri<pos:position pos:line="127" pos:column="32"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="127" pos:column="34">hp<pos:position pos:line="127" pos:column="36"/></name><operator pos:line="127" pos:column="36">-&gt;<pos:position pos:line="127" pos:column="41"/></operator><name pos:line="127" pos:column="38">requestUri<pos:position pos:line="127" pos:column="48"/></name></name><argument_list pos:line="127" pos:column="48">()<pos:position pos:line="127" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="130" pos:column="5">result<pos:position pos:line="130" pos:column="11"/></name><operator pos:line="130" pos:column="11">-&gt;<pos:position pos:line="130" pos:column="16"/></operator><name pos:line="130" pos:column="13">flags<pos:position pos:line="130" pos:column="18"/></name><operator pos:line="130" pos:column="18">.<pos:position pos:line="130" pos:column="19"/></operator><name pos:line="130" pos:column="19">parsed_ok<pos:position pos:line="130" pos:column="28"/></name></name> <operator pos:line="130" pos:column="29">=<pos:position pos:line="130" pos:column="30"/></operator> <literal type="number" pos:line="130" pos:column="31">1<pos:position pos:line="130" pos:column="32"/></literal></expr>;<pos:position pos:line="130" pos:column="33"/></expr_stmt>
    <return pos:line="131" pos:column="5">return <expr><name pos:line="131" pos:column="12">result<pos:position pos:line="131" pos:column="18"/></name></expr>;<pos:position pos:line="131" pos:column="19"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

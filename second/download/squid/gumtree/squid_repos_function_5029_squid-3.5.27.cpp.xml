<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5029_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">wroteReply<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">CommIoCbParams<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">io<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">io<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">flag<pos:position pos:line="4" pos:column="16"/></name></name> <operator pos:line="4" pos:column="17">==<pos:position pos:line="4" pos:column="19"/></operator> <name><name pos:line="4" pos:column="20">Comm<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">ERR_CLOSING<pos:position pos:line="4" pos:column="37"/></name></name></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">io<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">flag<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">Comm<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">::<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">OK<pos:position pos:line="7" pos:column="28"/></name></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">33<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">3<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"FTP reply writing failed: "<pos:position pos:line="8" pos:column="51"/></literal> <operator pos:line="8" pos:column="52">&lt;&lt;<pos:position pos:line="8" pos:column="60"/></operator> <call><name pos:line="8" pos:column="55">xstrerr<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name><name pos:line="8" pos:column="63">io<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">.<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="66">xerrno<pos:position pos:line="8" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">io<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">conn<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">close<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">ClientSocketContext<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">::<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">Pointer<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">context<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><call><name pos:line="13" pos:column="44">getCurrentContext<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">()<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">context<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">http<pos:position pos:line="14" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">context<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">http<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">out<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">size<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">+=<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">io<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">.<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">size<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">context<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">http<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">out<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">headers_sz<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">+=<pos:position pos:line="16" pos:column="37"/></operator> <name><name pos:line="16" pos:column="38">io<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">size<pos:position pos:line="16" pos:column="45"/></name></name></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">master<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">serverState<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">fssError<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">33<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">5<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"closing on FTP server error"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">io<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">conn<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">close<pos:position pos:line="20" pos:column="23"/></name></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">clientStream_status_t<pos:position pos:line="24" pos:column="32"/></name></type> <name pos:line="24" pos:column="33">socketState<pos:position pos:line="24" pos:column="44"/></name> <init pos:line="24" pos:column="45">= <expr><call><name><name pos:line="24" pos:column="47">context<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">socketState<pos:position pos:line="24" pos:column="67"/></name></name><argument_list pos:line="24" pos:column="67">()<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">33<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="16">5<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="19">"FTP client stream state "<pos:position pos:line="25" pos:column="45"/></literal> <operator pos:line="25" pos:column="46">&lt;&lt;<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="49">socketState<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
    <switch pos:line="26" pos:column="5">switch <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">socketState<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition> <block pos:line="26" pos:column="26">{
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="27" pos:column="35"/></name></expr>:<pos:position pos:line="27" pos:column="36"/></case>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">STREAM_FAILED<pos:position pos:line="28" pos:column="23"/></name></expr>:<pos:position pos:line="28" pos:column="24"/></case>
        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">io<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">conn<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">close<pos:position pos:line="29" pos:column="23"/></name></name><argument_list pos:line="29" pos:column="23">()<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>

    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">STREAM_NONE<pos:position pos:line="32" pos:column="21"/></name></expr>:<pos:position pos:line="32" pos:column="22"/></case>
    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">STREAM_COMPLETE<pos:position pos:line="33" pos:column="25"/></name></expr>:<pos:position pos:line="33" pos:column="26"/></case>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">flags<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">readMore<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="boolean" pos:line="34" pos:column="26">true<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">changeState<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">fssConnected<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"Ftp::Server::wroteReply"<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">in<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">bodyParser<pos:position pos:line="36" pos:column="26"/></name></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">finishDechunkingRequest<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><literal type="boolean" pos:line="37" pos:column="37">false<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="38" pos:column="9">context<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">keepaliveNextRequest<pos:position pos:line="38" pos:column="38"/></name></name><argument_list pos:line="38" pos:column="38">()<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></switch>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

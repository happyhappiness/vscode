<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2842_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_wccp2_service_info<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">v<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>, <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="15">end<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">service_id<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name><name pos:line="7" pos:column="9">portlist<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">WCCP2_NUMPORTS<pos:position pos:line="7" pos:column="32"/></name></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">protocol<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><operator pos:line="8" pos:column="20">-<pos:position pos:line="8" pos:column="21"/></operator><literal type="number" pos:line="8" pos:column="21">1<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>		<comment type="block" pos:line="8" pos:column="33">/* IPPROTO_TCP | IPPROTO_UDP */</comment>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">wccp2_service_list_t<pos:position pos:line="10" pos:column="32"/></name></name> <modifier pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></modifier></type><name pos:line="10" pos:column="34">srv<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">priority<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><operator pos:line="11" pos:column="20">-<pos:position pos:line="11" pos:column="21"/></operator><literal type="number" pos:line="11" pos:column="21">1<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">wccp2_connected<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">80<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">1<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"WCCPv2: Somehow reparsing the configuration without having shut down WCCP! Try reloading squid again."<pos:position pos:line="14" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="128"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">80<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">5<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"parse_wccp2_service_info: called"<pos:position pos:line="18" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memset<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">portlist<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="25">sizeof<argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">portlist<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    <comment type="block" pos:line="20" pos:column="5">/* First argument: id */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">service_id<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">GetInteger<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">()<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">service_id<pos:position pos:line="23" pos:column="19"/></name> <argument_list type="generic" pos:line="23" pos:column="20">&lt; <argument><expr><literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal> <operator pos:line="23" pos:column="24">||<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">service_id<pos:position pos:line="23" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="23" pos:column="42"/></argument_list></name> <literal type="number" pos:line="23" pos:column="40">255<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">80<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"parse_wccp2_service_info: invalid service id "<pos:position pos:line="24" pos:column="70"/></literal> <operator pos:line="24" pos:column="71">&lt;&lt;<pos:position pos:line="24" pos:column="79"/></operator> <name pos:line="24" pos:column="74">service_id<pos:position pos:line="24" pos:column="84"/></name> <operator pos:line="24" pos:column="85">&lt;&lt;<pos:position pos:line="24" pos:column="93"/></operator> <literal type="string" pos:line="24" pos:column="88">" (must be between 0 .. 255)"<pos:position pos:line="24" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="119"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">self_destruct<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">()<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* Next: find the (hopefully!) existing service */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">srv<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">wccp2_get_service_by_id<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">WCCP2_SERVICE_DYNAMIC<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">service_id<pos:position pos:line="29" pos:column="68"/></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">srv<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fatalf<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"parse_wccp2_service_info: unknown dynamic service id %d: you need to define it using wccp2_service (and make sure you wish to configure it as a dynamic service.)\n"<pos:position pos:line="32" pos:column="181"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="183">service_id<pos:position pos:line="32" pos:column="193"/></name></expr></argument>)<pos:position pos:line="32" pos:column="194"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="195"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* Next: loop until we don't have any more tokens */</comment>
    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">(<expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">t<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">strtok<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">w_space<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call><operator pos:line="36" pos:column="38">)<pos:position pos:line="36" pos:column="39"/></operator> <operator pos:line="36" pos:column="40">!=<pos:position pos:line="36" pos:column="42"/></operator> <name pos:line="36" pos:column="43">NULL<pos:position pos:line="36" pos:column="47"/></name></expr>)<pos:position pos:line="36" pos:column="48"/></condition> <block pos:line="36" pos:column="49">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">strncmp<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">t<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="24">"flags="<pos:position pos:line="37" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="34">6<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call> <operator pos:line="37" pos:column="37">==<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="40">0<pos:position pos:line="37" pos:column="41"/></literal></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42"> <block pos:line="37" pos:column="43">{
            <comment type="block" pos:line="38" pos:column="13">/* XXX eww, string pointer math */</comment>
            <expr_stmt><expr><name pos:line="39" pos:column="13">flags<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">parse_wccp2_service_flags<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">t<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">+<pos:position pos:line="39" pos:column="50"/></operator> <literal type="number" pos:line="39" pos:column="51">6<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then> <elseif pos:line="40" pos:column="11">else <if pos:line="40" pos:column="16">if <condition pos:line="40" pos:column="19">(<expr><call><name pos:line="40" pos:column="20">strncmp<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">t<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="31">"ports="<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">6<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call> <operator pos:line="40" pos:column="44">==<pos:position pos:line="40" pos:column="46"/></operator> <literal type="number" pos:line="40" pos:column="47">0<pos:position pos:line="40" pos:column="48"/></literal></expr>)<pos:position pos:line="40" pos:column="49"/></condition><then pos:line="40" pos:column="49"> <block pos:line="40" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">parse_wccp2_service_ports<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">t<pos:position pos:line="41" pos:column="40"/></name> <operator pos:line="41" pos:column="41">+<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">6<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">portlist<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="42" pos:column="13">flags<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">|=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">WCCP2_SERVICE_PORTS_DEFINED<pos:position pos:line="42" pos:column="49"/></name></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif> <elseif pos:line="43" pos:column="11">else <if pos:line="43" pos:column="16">if <condition pos:line="43" pos:column="19">(<expr><call><name pos:line="43" pos:column="20">strncmp<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">t<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">"protocol=tcp"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="47">12<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call> <operator pos:line="43" pos:column="51">==<pos:position pos:line="43" pos:column="53"/></operator> <literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56"> <block pos:line="43" pos:column="57">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">protocol<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">IPPROTO_TCP<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif> <elseif pos:line="45" pos:column="11">else <if pos:line="45" pos:column="16">if <condition pos:line="45" pos:column="19">(<expr><call><name pos:line="45" pos:column="20">strncmp<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">t<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="31">"protocol=udp"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="47">12<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call> <operator pos:line="45" pos:column="51">==<pos:position pos:line="45" pos:column="53"/></operator> <literal type="number" pos:line="45" pos:column="54">0<pos:position pos:line="45" pos:column="55"/></literal></expr>)<pos:position pos:line="45" pos:column="56"/></condition><then pos:line="45" pos:column="56"> <block pos:line="45" pos:column="57">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">protocol<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">IPPROTO_UDP<pos:position pos:line="46" pos:column="35"/></name></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif> <elseif pos:line="47" pos:column="11">else <if pos:line="47" pos:column="16">if <condition pos:line="47" pos:column="19">(<expr><call><name pos:line="47" pos:column="20">strncmp<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">t<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="31">"protocol="<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="44">9<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call> <operator pos:line="47" pos:column="47">==<pos:position pos:line="47" pos:column="49"/></operator> <literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52"> <block pos:line="47" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">fatalf<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="string" pos:line="48" pos:column="20">"parse_wccp2_service_info: id %d: unknown protocol (%s) - must be tcp or udp!\n"<pos:position pos:line="48" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="102">service_id<pos:position pos:line="48" pos:column="112"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="114">t<pos:position pos:line="48" pos:column="115"/></name></expr></argument>)<pos:position pos:line="48" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="117"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><call><name pos:line="49" pos:column="20">strncmp<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">t<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"priority="<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="44">9<pos:position pos:line="49" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call> <operator pos:line="49" pos:column="47">==<pos:position pos:line="49" pos:column="49"/></operator> <literal type="number" pos:line="49" pos:column="50">0<pos:position pos:line="49" pos:column="51"/></literal></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52"> <block pos:line="49" pos:column="53">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">priority<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <call><name pos:line="50" pos:column="24">strtol<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">t<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">+<pos:position pos:line="50" pos:column="34"/></operator> <literal type="number" pos:line="50" pos:column="35">9<pos:position pos:line="50" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="38">&amp;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="39">end<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="44">0<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>

            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name><name pos:line="52" pos:column="17">priority<pos:position pos:line="52" pos:column="25"/></name> <argument_list type="generic" pos:line="52" pos:column="26">&lt; <argument><expr><literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal> <operator pos:line="52" pos:column="30">||<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">priority<pos:position pos:line="52" pos:column="41"/></name></expr></argument> &gt;<pos:position pos:line="52" pos:column="46"/></argument_list></name> <literal type="number" pos:line="52" pos:column="44">255<pos:position pos:line="52" pos:column="47"/></literal></expr>)<pos:position pos:line="52" pos:column="48"/></condition><then pos:line="52" pos:column="48"> <block pos:line="52" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">fatalf<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><literal type="string" pos:line="53" pos:column="24">"parse_wccp2_service_info: id %d: %s out of range (0..255)!\n"<pos:position pos:line="53" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="88">service_id<pos:position pos:line="53" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="100">t<pos:position pos:line="53" pos:column="101"/></name></expr></argument>)<pos:position pos:line="53" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="103"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif> <else pos:line="55" pos:column="11">else <block pos:line="55" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">fatalf<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="string" pos:line="56" pos:column="20">"parse_wccp2_service_info: id %d: unknown option '%s'\n"<pos:position pos:line="56" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="78">service_id<pos:position pos:line="56" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="90">t<pos:position pos:line="56" pos:column="91"/></name></expr></argument>)<pos:position pos:line="56" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="93"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <comment type="block" pos:line="60" pos:column="5">/* Check everything is set */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">priority<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">==<pos:position pos:line="61" pos:column="20"/></operator> <operator pos:line="61" pos:column="21">-<pos:position pos:line="61" pos:column="22"/></operator><literal type="number" pos:line="61" pos:column="22">1<pos:position pos:line="61" pos:column="23"/></literal></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">fatalf<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">"parse_wccp2_service_info: service %d: no priority defined (valid: 0..255)!\n"<pos:position pos:line="62" pos:column="94"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="96">service_id<pos:position pos:line="62" pos:column="106"/></name></expr></argument>)<pos:position pos:line="62" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="108"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">protocol<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">==<pos:position pos:line="65" pos:column="20"/></operator> <operator pos:line="65" pos:column="21">-<pos:position pos:line="65" pos:column="22"/></operator><literal type="number" pos:line="65" pos:column="22">1<pos:position pos:line="65" pos:column="23"/></literal></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <block pos:line="65" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">fatalf<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="string" pos:line="66" pos:column="16">"parse_wccp2_service_info: service %d: no protocol defined (valid: tcp or udp)!\n"<pos:position pos:line="66" pos:column="98"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="100">service_id<pos:position pos:line="66" pos:column="110"/></name></expr></argument>)<pos:position pos:line="66" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="112"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">!<pos:position pos:line="69" pos:column="10"/></operator><operator pos:line="69" pos:column="10">(<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">flags<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">&amp;<pos:position pos:line="69" pos:column="22"/></operator> <name pos:line="69" pos:column="19">WCCP2_SERVICE_PORTS_DEFINED<pos:position pos:line="69" pos:column="46"/></name><operator pos:line="69" pos:column="46">)<pos:position pos:line="69" pos:column="47"/></operator></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48"> <block pos:line="69" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">fatalf<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="string" pos:line="70" pos:column="16">"parse_wccp2_service_info: service %d: no ports defined!\n"<pos:position pos:line="70" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="77">service_id<pos:position pos:line="70" pos:column="87"/></name></expr></argument>)<pos:position pos:line="70" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* rightio! now we can update */</comment>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">wccp2_update_service<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">srv<pos:position pos:line="74" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="31">WCCP2_SERVICE_DYNAMIC<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="54">service_id<pos:position pos:line="74" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="66">priority<pos:position pos:line="74" pos:column="74"/></name></expr></argument>,
                         <argument><expr><name pos:line="75" pos:column="26">protocol<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="36">flags<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">portlist<pos:position pos:line="75" pos:column="51"/></name></expr></argument>)<pos:position pos:line="75" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="77" pos:column="5">/* Done! */</comment>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

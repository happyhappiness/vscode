<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4973_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">DirClean<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">swap_index<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DIR<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">dir_pointer<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">p1<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">MAXPATHLEN<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">+<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">1<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">LOCAL_ARRAY<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">p2<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">MAXPATHLEN<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">+<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="40">1<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name><name pos:line="9" pos:column="9">files<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">20<pos:position pos:line="9" pos:column="17"/></literal></expr>]<pos:position pos:line="9" pos:column="18"/></index></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">swapfileno<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">fn<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>         <comment type="block" pos:line="11" pos:column="21">/* same as swapfileno, but with dirn bits set */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">n<pos:position pos:line="12" pos:column="10"/></name> <init pos:line="12" pos:column="11">= <expr><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">k<pos:position pos:line="13" pos:column="10"/></name> <init pos:line="13" pos:column="11">= <expr><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">N0<pos:position pos:line="14" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="13">N1<pos:position pos:line="14" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="17">N2<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">D0<pos:position pos:line="15" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="13">D1<pos:position pos:line="15" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="17">D2<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">UFSSwapDir<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">SD<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">N0<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <name pos:line="17" pos:column="10">NumberOfUFSDirs<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">D0<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">UFSDirToGlobalDirMapping<pos:position pos:line="18" pos:column="34"/></name><index pos:line="18" pos:column="34">[<expr><name pos:line="18" pos:column="35">swap_index<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">%<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">N0<pos:position pos:line="18" pos:column="50"/></name></expr>]<pos:position pos:line="18" pos:column="51"/></index></name></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">SD<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <cast type="dynamic" pos:line="19" pos:column="10">dynamic_cast<argument_list type="generic" pos:line="19" pos:column="22">&lt;<argument><expr><name pos:line="19" pos:column="23">UFSSwapDir<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="19" pos:column="39"/></argument_list><argument_list pos:line="19" pos:column="36">(<argument><expr><call><name pos:line="19" pos:column="37">INDEXSD<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">D0<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></cast></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">SD<pos:position pos:line="20" pos:column="15"/></name></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">N1<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <name><name pos:line="21" pos:column="10">SD<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">l1<pos:position pos:line="21" pos:column="16"/></name></name></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">D1<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">swap_index<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">/<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">N0<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">%<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">N1<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">N2<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <name><name pos:line="23" pos:column="10">SD<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">l2<pos:position pos:line="23" pos:column="16"/></name></name></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">D2<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <operator pos:line="24" pos:column="10">(<pos:position pos:line="24" pos:column="11"/></operator><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">swap_index<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">/<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">N0<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator> <operator pos:line="24" pos:column="29">/<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">N1<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">)<pos:position pos:line="24" pos:column="34"/></operator> <operator pos:line="24" pos:column="35">%<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">N2<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">snprintf<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">p1<pos:position pos:line="25" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="18">MAXPATHLEN<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"%s/%02X/%02X"<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="26" pos:column="14">SD<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">path<pos:position pos:line="26" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">D1<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">D2<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">36<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="16">3<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">HERE<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;&lt;<pos:position pos:line="27" pos:column="32"/></operator> <literal type="string" pos:line="27" pos:column="27">"Cleaning directory "<pos:position pos:line="27" pos:column="48"/></literal> <operator pos:line="27" pos:column="49">&lt;&lt;<pos:position pos:line="27" pos:column="57"/></operator> <name pos:line="27" pos:column="52">p1<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">dir_pointer<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">opendir<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">p1<pos:position pos:line="28" pos:column="29"/></name></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">dir_pointer<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">==<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block pos:line="30" pos:column="30">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">errno<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">ENOENT<pos:position pos:line="31" pos:column="28"/></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <block pos:line="31" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">36<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">DBG_CRITICAL<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">HERE<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">&lt;&lt;<pos:position pos:line="32" pos:column="51"/></operator> <literal type="string" pos:line="32" pos:column="46">"WARNING: Creating "<pos:position pos:line="32" pos:column="66"/></literal> <operator pos:line="32" pos:column="67">&lt;&lt;<pos:position pos:line="32" pos:column="75"/></operator> <name pos:line="32" pos:column="70">p1<pos:position pos:line="32" pos:column="72"/></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><call><name pos:line="33" pos:column="17">mkdir<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">p1<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="27">0777<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call> <operator pos:line="33" pos:column="33">==<pos:position pos:line="33" pos:column="35"/></operator> <literal type="number" pos:line="33" pos:column="36">0<pos:position pos:line="33" pos:column="37"/></literal></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
                <block type="pseudo"><return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="37" pos:column="9">debugs<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="number" pos:line="37" pos:column="16">50<pos:position pos:line="37" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="20">DBG_CRITICAL<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">HERE<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">&lt;&lt;<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="42">p1<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">&lt;&lt;<pos:position pos:line="37" pos:column="53"/></operator> <literal type="string" pos:line="37" pos:column="48">": "<pos:position pos:line="37" pos:column="52"/></literal> <operator pos:line="37" pos:column="53">&lt;&lt;<pos:position pos:line="37" pos:column="61"/></operator> <call><name pos:line="37" pos:column="56">xstrerror<pos:position pos:line="37" pos:column="65"/></name><argument_list pos:line="37" pos:column="65">()<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">safeunlink<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">p1<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="42" pos:column="5">dirent_t<pos:position pos:line="42" pos:column="13"/></name> <modifier pos:line="42" pos:column="14">*<pos:position pos:line="42" pos:column="15"/></modifier></type><name pos:line="42" pos:column="15">de<pos:position pos:line="42" pos:column="17"/></name></decl>;<pos:position pos:line="42" pos:column="18"/></decl_stmt>
    <while pos:line="43" pos:column="5">while <condition pos:line="43" pos:column="11">(<expr><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">de<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">readdir<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">dir_pointer<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call><operator pos:line="43" pos:column="38">)<pos:position pos:line="43" pos:column="39"/></operator> <operator pos:line="43" pos:column="40">!=<pos:position pos:line="43" pos:column="42"/></operator> <name pos:line="43" pos:column="43">NULL<pos:position pos:line="43" pos:column="47"/></name> <operator pos:line="43" pos:column="48">&amp;&amp;<pos:position pos:line="43" pos:column="58"/></operator> <name pos:line="43" pos:column="51">k<pos:position pos:line="43" pos:column="52"/></name> <operator pos:line="43" pos:column="53">&lt;<pos:position pos:line="43" pos:column="57"/></operator> <literal type="number" pos:line="43" pos:column="55">20<pos:position pos:line="43" pos:column="57"/></literal></expr>)<pos:position pos:line="43" pos:column="58"/></condition> <block pos:line="43" pos:column="59">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">sscanf<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name><name pos:line="44" pos:column="20">de<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">d_name<pos:position pos:line="44" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"%X"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="38">&amp;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="39">swapfileno<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call> <operator pos:line="44" pos:column="51">!=<pos:position pos:line="44" pos:column="53"/></operator> <literal type="number" pos:line="44" pos:column="54">1<pos:position pos:line="44" pos:column="55"/></literal></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56">
            <block type="pseudo"><continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="47" pos:column="9">fn<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <name pos:line="47" pos:column="14">swapfileno<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="47" pos:column="29">/* XXX should remove this cruft ! */</comment>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name><name pos:line="49" pos:column="13">SD<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">validFileno<pos:position pos:line="49" pos:column="28"/></name></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">fn<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="33">1<pos:position pos:line="49" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
            <block type="pseudo"><if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><call><name><name pos:line="50" pos:column="17">SD<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">mapBitTest<pos:position pos:line="50" pos:column="31"/></name></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">fn<pos:position pos:line="50" pos:column="34"/></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36">
                <block type="pseudo"><if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name><name pos:line="51" pos:column="21">UFSSwapDir<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">::<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">FilenoBelongsHere<pos:position pos:line="51" pos:column="50"/></name></name><argument_list pos:line="51" pos:column="50">(<argument><expr><name pos:line="51" pos:column="51">fn<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">D0<pos:position pos:line="51" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="59">D1<pos:position pos:line="51" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="63">D2<pos:position pos:line="51" pos:column="65"/></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="67"/></condition><then pos:line="51" pos:column="67">
                    <block type="pseudo"><continue pos:line="52" pos:column="21">continue;<pos:position pos:line="52" pos:column="30"/></continue></block></then></if></block></then></if></block></then></if>

        <expr_stmt><expr><name><name pos:line="54" pos:column="9">files<pos:position pos:line="54" pos:column="14"/></name><index pos:line="54" pos:column="14">[<expr><name pos:line="54" pos:column="15">k<pos:position pos:line="54" pos:column="16"/></name></expr>]<pos:position pos:line="54" pos:column="17"/></index></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <name pos:line="54" pos:column="20">swapfileno<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="55" pos:column="9">++<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">k<pos:position pos:line="55" pos:column="12"/></name></expr>;<pos:position pos:line="55" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">closedir<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">dir_pointer<pos:position pos:line="58" pos:column="25"/></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">k<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">==<pos:position pos:line="60" pos:column="13"/></operator> <literal type="number" pos:line="60" pos:column="14">0<pos:position pos:line="60" pos:column="15"/></literal></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16">
        <block type="pseudo"><return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">qsort<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><name pos:line="63" pos:column="11">files<pos:position pos:line="63" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="18">k<pos:position pos:line="63" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="21">sizeof<argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">int<pos:position pos:line="63" pos:column="31"/></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">rev_int_sort<pos:position pos:line="63" pos:column="46"/></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">k<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">&gt;<pos:position pos:line="65" pos:column="15"/></operator> <literal type="number" pos:line="65" pos:column="13">10<pos:position pos:line="65" pos:column="15"/></literal></expr>)<pos:position pos:line="65" pos:column="16"/></condition><then pos:line="65" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="9">k<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">=<pos:position pos:line="66" pos:column="12"/></operator> <literal type="number" pos:line="66" pos:column="13">10<pos:position pos:line="66" pos:column="15"/></literal></expr>;<pos:position pos:line="66" pos:column="16"/></expr_stmt></block></then></if>

    <for pos:line="68" pos:column="5">for <control pos:line="68" pos:column="9">(<init><expr><name pos:line="68" pos:column="10">n<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <literal type="number" pos:line="68" pos:column="14">0<pos:position pos:line="68" pos:column="15"/></literal></expr>;<pos:position pos:line="68" pos:column="16"/></init> <condition><expr><name pos:line="68" pos:column="17">n<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">&lt;<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="21">k<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></condition> <incr><expr><operator pos:line="68" pos:column="24">++<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">n<pos:position pos:line="68" pos:column="27"/></name></expr></incr>)<pos:position pos:line="68" pos:column="28"/></control> <block pos:line="68" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">36<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="20">3<pos:position pos:line="69" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="23">HERE<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">&lt;&lt;<pos:position pos:line="69" pos:column="36"/></operator> <literal type="string" pos:line="69" pos:column="31">"Cleaning file "<pos:position pos:line="69" pos:column="47"/></literal><operator pos:line="69" pos:column="47">&lt;&lt;<pos:position pos:line="69" pos:column="55"/></operator> <call><name><name pos:line="69" pos:column="50">std<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">::<pos:position pos:line="69" pos:column="55"/></operator><name pos:line="69" pos:column="55">setfill<pos:position pos:line="69" pos:column="62"/></name></name><argument_list pos:line="69" pos:column="62">(<argument><expr><literal type="char" pos:line="69" pos:column="63">'0'<pos:position pos:line="69" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call> <operator pos:line="69" pos:column="68">&lt;&lt;<pos:position pos:line="69" pos:column="76"/></operator> <name><name pos:line="69" pos:column="71">std<pos:position pos:line="69" pos:column="74"/></name><operator pos:line="69" pos:column="74">::<pos:position pos:line="69" pos:column="76"/></operator><name pos:line="69" pos:column="76">hex<pos:position pos:line="69" pos:column="79"/></name></name> <operator pos:line="69" pos:column="80">&lt;&lt;<pos:position pos:line="69" pos:column="88"/></operator> <name><name pos:line="69" pos:column="83">std<pos:position pos:line="69" pos:column="86"/></name><operator pos:line="69" pos:column="86">::<pos:position pos:line="69" pos:column="88"/></operator><name pos:line="69" pos:column="88">uppercase<pos:position pos:line="69" pos:column="97"/></name></name> <operator pos:line="69" pos:column="98">&lt;&lt;<pos:position pos:line="69" pos:column="106"/></operator> <call><name><name pos:line="69" pos:column="101">std<pos:position pos:line="69" pos:column="104"/></name><operator pos:line="69" pos:column="104">::<pos:position pos:line="69" pos:column="106"/></operator><name pos:line="69" pos:column="106">setw<pos:position pos:line="69" pos:column="110"/></name></name><argument_list pos:line="69" pos:column="110">(<argument><expr><literal type="number" pos:line="69" pos:column="111">8<pos:position pos:line="69" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="113"/></argument_list></call> <operator pos:line="69" pos:column="114">&lt;&lt;<pos:position pos:line="69" pos:column="122"/></operator> <name><name pos:line="69" pos:column="117">files<pos:position pos:line="69" pos:column="122"/></name><index pos:line="69" pos:column="122">[<expr><name pos:line="69" pos:column="123">n<pos:position pos:line="69" pos:column="124"/></name></expr>]<pos:position pos:line="69" pos:column="125"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="127"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">snprintf<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">p2<pos:position pos:line="70" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="22">MAXPATHLEN<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">+<pos:position pos:line="70" pos:column="34"/></operator> <literal type="number" pos:line="70" pos:column="35">1<pos:position pos:line="70" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="38">"%s/%08X"<pos:position pos:line="70" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="49">p1<pos:position pos:line="70" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="53">files<pos:position pos:line="70" pos:column="58"/></name><index pos:line="70" pos:column="58">[<expr><name pos:line="70" pos:column="59">n<pos:position pos:line="70" pos:column="60"/></name></expr>]<pos:position pos:line="70" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">safeunlink<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">p2<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="24">0<pos:position pos:line="71" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="72" pos:column="9">++<pos:position pos:line="72" pos:column="11"/></operator><name><name pos:line="72" pos:column="11">statCounter<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">.<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="23">swap<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">.<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">files_cleaned<pos:position pos:line="72" pos:column="41"/></name></name></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">debugs<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><literal type="number" pos:line="75" pos:column="12">36<pos:position pos:line="75" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="16">3<pos:position pos:line="75" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="19">HERE<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">&lt;&lt;<pos:position pos:line="75" pos:column="32"/></operator> <literal type="string" pos:line="75" pos:column="27">"Cleaned "<pos:position pos:line="75" pos:column="37"/></literal> <operator pos:line="75" pos:column="38">&lt;&lt;<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="41">k<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">&lt;&lt;<pos:position pos:line="75" pos:column="51"/></operator> <literal type="string" pos:line="75" pos:column="46">" unused files from "<pos:position pos:line="75" pos:column="67"/></literal> <operator pos:line="75" pos:column="68">&lt;&lt;<pos:position pos:line="75" pos:column="76"/></operator> <name pos:line="75" pos:column="71">p1<pos:position pos:line="75" pos:column="73"/></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">k<pos:position pos:line="76" pos:column="13"/></name></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6339_squid-3.3.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Ipc<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">StoreMap<pos:position pos:line="1" pos:column="20"/></name><operator pos:line="1" pos:column="20">::<pos:position pos:line="1" pos:column="22"/></operator><name pos:line="1" pos:column="22">Slot<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreMap<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">peekAtReader<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">sfileno<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">fileno<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">valid<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">fileno<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">Slot<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">&amp;<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">shared<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">slots<pos:position pos:line="5" pos:column="34"/></name><index pos:line="5" pos:column="34">[<expr><name pos:line="5" pos:column="35">fileno<pos:position pos:line="5" pos:column="41"/></name></expr>]<pos:position pos:line="5" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">s<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">state<pos:position pos:line="6" pos:column="20"/></name></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
    <case pos:line="7" pos:column="5">case <expr><name><name pos:line="7" pos:column="10">Slot<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">::<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">Readable<pos:position pos:line="7" pos:column="24"/></name></name></expr>:<pos:position pos:line="7" pos:column="25"/></case>
        <return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">&amp;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return> <comment type="line" pos:line="8" pos:column="20">// immediate access by lock holder so no locking</comment>
    <case pos:line="9" pos:column="5">case <expr><name><name pos:line="9" pos:column="10">Slot<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">Writeable<pos:position pos:line="9" pos:column="25"/></name></name></expr>:<pos:position pos:line="9" pos:column="26"/></case>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return> <comment type="line" pos:line="10" pos:column="22">// cannot read the slot when it is being written</comment>
    <case pos:line="11" pos:column="5">case <expr><name><name pos:line="11" pos:column="10">Slot<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">Empty<pos:position pos:line="11" pos:column="21"/></name></name></expr>:<pos:position pos:line="11" pos:column="22"/></case>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="boolean" pos:line="12" pos:column="16">false<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt> <comment type="line" pos:line="12" pos:column="24">// must be locked for reading or writing</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="boolean" pos:line="14" pos:column="12">false<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt> <comment type="line" pos:line="14" pos:column="20">// not reachable</comment>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">NULL<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

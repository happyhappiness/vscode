<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3618_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">closeConnection<pos:position pos:line="1" pos:column="48"/></name></name><parameter_list pos:line="1" pos:column="48">()<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">haveConnection<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">()<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{

        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">closer<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">comm_remove_close_handler<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">connection<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">fd<pos:position pos:line="6" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">closer<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name pos:line="7" pos:column="13">closer<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">cancelRead<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">()<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt> <comment type="line" pos:line="10" pos:column="23">// may not work</comment>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">reuseConnection<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="32">!<pos:position pos:line="12" pos:column="33"/></operator><call><name pos:line="12" pos:column="33">doneWithIo<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">()<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
            <comment type="line" pos:line="13" pos:column="13">//status() adds leading spaces.</comment>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">93<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="23">5<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="26">HERE<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&lt;&lt;<pos:position pos:line="14" pos:column="39"/></operator> <literal type="string" pos:line="14" pos:column="34">"not reusing pconn due to pending I/O"<pos:position pos:line="14" pos:column="72"/></literal> <operator pos:line="14" pos:column="73">&lt;&lt;<pos:position pos:line="14" pos:column="81"/></operator> <call><name pos:line="14" pos:column="76">status<pos:position pos:line="14" pos:column="82"/></name><argument_list pos:line="14" pos:column="82">()<pos:position pos:line="14" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">reuseConnection<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="boolean" pos:line="15" pos:column="31">false<pos:position pos:line="15" pos:column="36"/></literal></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">reuseConnection<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="13">disableRetries<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">()<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">bool<pos:position pos:line="21" pos:column="19"/></name></type> <name pos:line="21" pos:column="20">reset<pos:position pos:line="21" pos:column="25"/></name> <init pos:line="21" pos:column="26">= <expr><operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">reuseConnection<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">&amp;&amp;<pos:position pos:line="21" pos:column="55"/></operator>
                           <operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name><name pos:line="22" pos:column="29">al<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">icap<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">.<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">outcome<pos:position pos:line="22" pos:column="44"/></name></name> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <name pos:line="22" pos:column="48">xoGone<pos:position pos:line="22" pos:column="54"/></name> <operator pos:line="22" pos:column="55">||<pos:position pos:line="22" pos:column="57"/></operator> <name><name pos:line="22" pos:column="58">al<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">.<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">icap<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">.<pos:position pos:line="22" pos:column="66"/></operator><name pos:line="22" pos:column="66">outcome<pos:position pos:line="22" pos:column="73"/></name></name> <operator pos:line="22" pos:column="74">==<pos:position pos:line="22" pos:column="76"/></operator> <name pos:line="22" pos:column="77">xoError<pos:position pos:line="22" pos:column="84"/></name><operator pos:line="22" pos:column="84">)<pos:position pos:line="22" pos:column="85"/></operator></expr></init></decl>;<pos:position pos:line="22" pos:column="86"/></decl_stmt>

        <decl_stmt><decl><type><name><name pos:line="24" pos:column="9">Adaptation<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">::<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">Icap<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">::<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">ServiceRep<pos:position pos:line="24" pos:column="37"/></name></name> <modifier pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></modifier></type><name pos:line="24" pos:column="39">s<pos:position pos:line="24" pos:column="40"/></name> <init pos:line="24" pos:column="41">= <expr><call><name pos:line="24" pos:column="43">service<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">()<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">s<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">putConnection<pos:position pos:line="25" pos:column="24"/></name></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">connection<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">reuseConnection<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">reset<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="61">status<pos:position pos:line="25" pos:column="67"/></name><argument_list pos:line="25" pos:column="67">()<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><name pos:line="27" pos:column="9">writer<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">NULL<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">reader<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">NULL<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">connector<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">connection<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">NULL<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7107_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">UdsSender<pos:position pos:line="1" pos:column="20"/></name><operator pos:line="1" pos:column="20">::<pos:position pos:line="1" pos:column="22"/></operator><name pos:line="1" pos:column="22">write<pos:position pos:line="1" pos:column="27"/></name></name><parameter_list pos:line="1" pos:column="27">()<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">54<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">5<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt>
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">CommCbMemFunT<pos:position pos:line="4" pos:column="26"/></name><argument_list type="generic" pos:line="4" pos:column="26">&lt;<argument><expr><name pos:line="4" pos:column="27">UdsSender<pos:position pos:line="4" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="38">CommIoCbParams<pos:position pos:line="4" pos:column="52"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="56"/></argument_list></name></type> <name pos:line="4" pos:column="54">Dialer<pos:position pos:line="4" pos:column="60"/></name>;<pos:position pos:line="4" pos:column="61"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">AsyncCall<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">::<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">Pointer<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">writeHandler<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><call><name pos:line="5" pos:column="39">JobCallback<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><literal type="number" pos:line="5" pos:column="51">54<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="55">5<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="6" pos:column="39">Dialer<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">this<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="53">UdsSender<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">::<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="64">wrote<pos:position pos:line="6" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="71"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">Comm<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">::<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">Write<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">(<argument><expr><call><name pos:line="7" pos:column="17">conn<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="25">message<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">raw<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="40">message<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">size<pos:position pos:line="7" pos:column="52"/></name></name><argument_list pos:line="7" pos:column="52">()<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="56">writeHandler<pos:position pos:line="7" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="70">NULL<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">writing<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="boolean" pos:line="8" pos:column="15">true<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

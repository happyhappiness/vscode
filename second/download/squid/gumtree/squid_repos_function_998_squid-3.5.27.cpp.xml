<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_998_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">dlink_node<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">dlinkNodeNew<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">()<pos:position pos:line="2" pos:column="15"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">dlink_node_pool<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">==<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">dlink_node_pool<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">memPoolCreate<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><literal type="string" pos:line="5" pos:column="41">"Dlink list nodes"<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="61">sizeof<argument_list pos:line="5" pos:column="67">(<argument><expr><name pos:line="5" pos:column="68">dlink_node<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="81"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* where should we call delete dlink_node_pool;dlink_node_pool = NULL; */</comment>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">dlink_node<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">)<pos:position pos:line="8" pos:column="26"/></operator><call><name><name pos:line="8" pos:column="26">dlink_node_pool<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">alloc<pos:position pos:line="8" pos:column="48"/></name></name><argument_list pos:line="8" pos:column="48">()<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

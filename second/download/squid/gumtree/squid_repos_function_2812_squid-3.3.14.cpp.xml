<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2812_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">SetHost<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">src<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
        <expr_stmt><expr><call><name><name pos:line="2" pos:column="9">host_addr<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">.<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">SetEmpty<pos:position pos:line="2" pos:column="27"/></name></name><argument_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="3" pos:column="9">host_addr<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">=<pos:position pos:line="3" pos:column="20"/></operator> <name pos:line="3" pos:column="21">src<pos:position pos:line="3" pos:column="24"/></name></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt>
        <if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">( <expr><call><name><name pos:line="4" pos:column="14">host_addr<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">IsAnyAddr<pos:position pos:line="4" pos:column="33"/></name></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr> )<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37"> <block pos:line="4" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="5" pos:column="13">xstrncpy<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">host<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">src<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">SQUIDHOSTNAMELEN<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="6" pos:column="13">host_is_numeric<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">=<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="8" pos:column="13">host_addr<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">ToHostname<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">host<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">SQUIDHOSTNAMELEN<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">23<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="24">3<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="27">"HttpRequest::SetHost() given IP: "<pos:position pos:line="9" pos:column="62"/></literal> <operator pos:line="9" pos:column="63">&lt;&lt;<pos:position pos:line="9" pos:column="71"/></operator> <name pos:line="9" pos:column="66">host_addr<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">host_is_numeric<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="31">1<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">safe_free<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">canonical<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt> <comment type="line" pos:line="12" pos:column="31">// force its re-build</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></function></unit>

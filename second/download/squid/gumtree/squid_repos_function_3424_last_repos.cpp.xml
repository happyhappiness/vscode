<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3424_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">ServiceRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">handleFinalizeFailure<pos:position pos:line="2" pos:column="52"/></name></name><parameter_list pos:line="2" pos:column="52">(<parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">error<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">bool<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">salvage<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">cfg<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">bypass<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">level<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><ternary><condition><expr><name pos:line="5" pos:column="23">salvage<pos:position pos:line="5" pos:column="30"/></name></expr> ?<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <expr><name pos:line="5" pos:column="33">DBG_IMPORTANT<pos:position pos:line="5" pos:column="46"/></name></expr> <pos:position pos:line="5" pos:column="47"/></then><else pos:line="5" pos:column="47">:<expr><name pos:line="5" pos:column="48">DBG_CRITICAL<pos:position pos:line="5" pos:column="60"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">kind<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><ternary><condition><expr><name pos:line="6" pos:column="24">salvage<pos:position pos:line="6" pos:column="31"/></name></expr> ?<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33"> <expr><literal type="string" pos:line="6" pos:column="34">"optional"<pos:position pos:line="6" pos:column="44"/></literal></expr> <pos:position pos:line="6" pos:column="45"/></then><else pos:line="6" pos:column="45">: <expr><literal type="string" pos:line="6" pos:column="47">"essential"<pos:position pos:line="6" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="16">level<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"ERROR: failed to start "<pos:position pos:line="7" pos:column="48"/></literal> <operator pos:line="7" pos:column="49">&lt;&lt;<pos:position pos:line="7" pos:column="57"/></operator> <name pos:line="7" pos:column="52">kind<pos:position pos:line="7" pos:column="56"/></name> <operator pos:line="7" pos:column="57">&lt;&lt;<pos:position pos:line="7" pos:column="65"/></operator> <literal type="string" pos:line="7" pos:column="60">" eCAP service: "<pos:position pos:line="7" pos:column="77"/></literal> <operator pos:line="7" pos:column="78">&lt;&lt;<pos:position pos:line="7" pos:column="86"/></operator>
           <call><name pos:line="8" pos:column="12">cfg<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">()<pos:position pos:line="8" pos:column="17"/></argument_list></call><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">uri<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">&lt;&lt;<pos:position pos:line="8" pos:column="30"/></operator> <literal type="string" pos:line="8" pos:column="25">":\n"<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="34">error<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">salvage<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="11" pos:column="23">// we cannot handle the problem; the caller may escalate</comment>

    <comment type="line" pos:line="13" pos:column="5">// make up() false, preventing new adaptation requests and enabling bypass</comment>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">theService<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">reset<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">()<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">93<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="16">level<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"WARNING: "<pos:position pos:line="15" pos:column="34"/></literal> <operator pos:line="15" pos:column="35">&lt;&lt;<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="38">kind<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">&lt;&lt;<pos:position pos:line="15" pos:column="51"/></operator> <literal type="string" pos:line="15" pos:column="46">" eCAP service is "<pos:position pos:line="15" pos:column="65"/></literal> <operator pos:line="15" pos:column="66">&lt;&lt;<pos:position pos:line="15" pos:column="74"/></operator>
           <literal type="string" pos:line="16" pos:column="12">"down after initialization failure: "<pos:position pos:line="16" pos:column="49"/></literal> <operator pos:line="16" pos:column="50">&lt;&lt;<pos:position pos:line="16" pos:column="58"/></operator> <call><name pos:line="16" pos:column="53">cfg<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">()<pos:position pos:line="16" pos:column="58"/></argument_list></call><operator pos:line="16" pos:column="58">.<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">uri<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>

    <return pos:line="18" pos:column="5">return <expr><literal type="boolean" pos:line="18" pos:column="12">true<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></return> <comment type="line" pos:line="18" pos:column="18">// tell the caller to ignore the problem because we handled it</comment>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

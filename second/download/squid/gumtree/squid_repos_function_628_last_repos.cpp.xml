<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_628_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DeferredReadManager<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">delayRead<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">DeferredRead<pos:position pos:line="2" pos:column="44"/></name> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="52">aRead<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">5<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"Adding deferred read on "<pos:position pos:line="4" pos:column="44"/></literal> <operator pos:line="4" pos:column="45">&lt;&lt;<pos:position pos:line="4" pos:column="53"/></operator> <name><name pos:line="4" pos:column="48">aRead<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">.<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">theRead<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">.<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="62">conn<pos:position pos:line="4" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">CbDataList<pos:position pos:line="5" pos:column="15"/></name><argument_list type="generic" pos:line="5" pos:column="15">&lt;<argument><expr><name pos:line="5" pos:column="16">DeferredRead<pos:position pos:line="5" pos:column="28"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="32"/></argument_list></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">temp<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name><name pos:line="5" pos:column="38">deferredReads<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">.<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">push_back<pos:position pos:line="5" pos:column="61"/></name></name><argument_list pos:line="5" pos:column="61">(<argument><expr><name pos:line="5" pos:column="62">aRead<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// We have to use a global function as a closer and point to temp</comment>
    <comment type="line" pos:line="8" pos:column="5">// instead of "this" because DeferredReadManager is not a job and</comment>
    <comment type="line" pos:line="9" pos:column="5">// is not even cbdata protected</comment>
    <comment type="line" pos:line="10" pos:column="5">// XXX: and yet we use cbdata protection functions on it??</comment>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">AsyncCall<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">Pointer<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">closer<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><call><name pos:line="11" pos:column="33">commCbCall<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><literal type="number" pos:line="11" pos:column="44">5<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="46">4<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>,
                                           <argument><expr><literal type="string" pos:line="12" pos:column="44">"DeferredReadManager::CloseHandler"<pos:position pos:line="12" pos:column="79"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="13" pos:column="44">CommCloseCbPtrFun<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><operator pos:line="13" pos:column="62">&amp;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="63">CloseHandler<pos:position pos:line="13" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="77">temp<pos:position pos:line="13" pos:column="81"/></name></expr></argument>)<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="84"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">comm_add_close_handler<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name><name pos:line="14" pos:column="28">aRead<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">theRead<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">.<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">conn<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">fd<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">closer<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">temp<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">element<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">closer<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">closer<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt> <comment type="line" pos:line="15" pos:column="36">// remeber so that we can cancel</comment>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

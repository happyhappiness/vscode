<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6128_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIExpatParser<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">parse<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">dataToParse<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">size_t<pos:position pos:line="2" pos:column="54"/></name> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier></type> <name pos:line="2" pos:column="61">lengthOfData<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">bool<pos:position pos:line="2" pos:column="79"/></name> <specifier pos:line="2" pos:column="80">const<pos:position pos:line="2" pos:column="85"/></specifier></type> <name pos:line="2" pos:column="86">endOfStream<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">XML_Parse<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><call><name pos:line="4" pos:column="22">myParser<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">()<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">dataToParse<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">lengthOfData<pos:position pos:line="4" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="61">endOfStream<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="74"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

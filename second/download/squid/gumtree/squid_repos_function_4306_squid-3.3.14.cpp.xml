<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4306_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Helper<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">sslSubmit<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">CrtdMessage<pos:position pos:line="1" pos:column="40"/></name> <specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <modifier pos:line="1" pos:column="47">&amp;<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="49">message<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">HLPCB<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type> <name pos:line="1" pos:column="66">callback<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">void<pos:position pos:line="1" pos:column="80"/></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type> <name pos:line="1" pos:column="83">data<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">time_t<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">first_warn<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">ssl_crtd<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">ssl_crtd<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">stats<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">queue_size<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">&gt;=<pos:position pos:line="6" pos:column="41"/></operator> <call pos:line="6" pos:column="39">(<name pos:line="6" pos:column="40">int<pos:position pos:line="6" pos:column="43"/></name>)<argument_list pos:line="6" pos:column="44">(<argument><expr><name><name pos:line="6" pos:column="45">ssl_crtd<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">childs<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">.<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="62">n_running<pos:position pos:line="6" pos:column="71"/></name></name> <operator pos:line="6" pos:column="72">*<pos:position pos:line="6" pos:column="73"/></operator> <literal type="number" pos:line="6" pos:column="74">2<pos:position pos:line="6" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="77"/></condition><then pos:line="6" pos:column="77"> <block pos:line="6" pos:column="78">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">first_warn<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="13">first_warn<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">squid_curtime<pos:position pos:line="8" pos:column="39"/></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></then></if>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">squid_curtime<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">-<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">first_warn<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">&gt;<pos:position pos:line="9" pos:column="44"/></operator> <literal type="number" pos:line="9" pos:column="42">3<pos:position pos:line="9" pos:column="43"/></literal> <operator pos:line="9" pos:column="44">*<pos:position pos:line="9" pos:column="45"/></operator> <literal type="number" pos:line="9" pos:column="46">60<pos:position pos:line="9" pos:column="48"/></literal></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="13">fatal<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="string" pos:line="10" pos:column="19">"SSL servers not responding for 3 minutes"<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">34<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">HERE<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">&lt;&lt;<pos:position pos:line="11" pos:column="48"/></operator> <literal type="string" pos:line="11" pos:column="43">"Queue overload, rejecting"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">callback<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">data<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">char<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></operator><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator><literal type="string" pos:line="12" pos:column="32">"error 45 Temporary network problem, please retry later"<pos:position pos:line="12" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="90"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">first_warn<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">std<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">::<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">string<pos:position pos:line="17" pos:column="16"/></name></name></type> <name pos:line="17" pos:column="17">msg<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><call><name><name pos:line="17" pos:column="23">message<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">compose<pos:position pos:line="17" pos:column="38"/></name></name><argument_list pos:line="17" pos:column="38">()<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">msg<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">+=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="char" pos:line="18" pos:column="12">'\n'<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">helperSubmit<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">ssl_crtd<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="28">msg<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">c_str<pos:position pos:line="19" pos:column="37"/></name></name><argument_list pos:line="19" pos:column="37">()<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">callback<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">data<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1695_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">readDelayed<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">context<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">CommRead<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">state<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><cast type="static" pos:line="4" pos:column="28">static_cast<argument_list type="generic" pos:line="4" pos:column="39">&lt;<argument><expr><name pos:line="4" pos:column="40">HttpStateData<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="58"/></argument_list><argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">context<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">state<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">flags<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">do_next_read<pos:position pos:line="5" pos:column="30"/></name></name> <operator pos:line="5" pos:column="31">=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="boolean" pos:line="5" pos:column="33">true<pos:position pos:line="5" pos:column="37"/></literal></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">state<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">maybeReadVirginBody<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

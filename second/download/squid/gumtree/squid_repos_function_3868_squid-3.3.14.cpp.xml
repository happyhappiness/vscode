<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3868_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Config<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">MetaHeader<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">Pointer<pos:position pos:line="1" pos:column="40"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">addMetaHeader<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">String<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="49">headerName<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">MetaHeaders<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">iterator<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">AMLI<pos:position pos:line="4" pos:column="39"/></name>;<pos:position pos:line="4" pos:column="40"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">AMLI<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name><name pos:line="5" pos:column="19">metaHeaders<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">begin<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></init> <condition><expr><name pos:line="5" pos:column="40">i<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">!=<pos:position pos:line="5" pos:column="44"/></operator> <call><name><name pos:line="5" pos:column="45">metaHeaders<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">.<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">end<pos:position pos:line="5" pos:column="60"/></name></name><argument_list pos:line="5" pos:column="60">()<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></condition> <incr><expr><operator pos:line="5" pos:column="64">++<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="66">i<pos:position pos:line="5" pos:column="67"/></name></expr></incr>)<pos:position pos:line="5" pos:column="68"/></control> <block pos:line="5" pos:column="69">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">name<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">==<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">headerName<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
            <block type="pseudo"><return pos:line="7" pos:column="13">return <expr><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">)<pos:position pos:line="7" pos:column="24"/></operator></expr>;<pos:position pos:line="7" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="8" pos:column="6"/></block></for>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">MetaHeader<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">::<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">Pointer<pos:position pos:line="10" pos:column="24"/></name></name></type> <name pos:line="10" pos:column="25">meta<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><operator pos:line="10" pos:column="32">new<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">MetaHeader<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">headerName<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">metaHeaders<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">push_back<pos:position pos:line="11" pos:column="26"/></name></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">meta<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">meta<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

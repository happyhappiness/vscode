<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_246_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">SMB_Figure_Protocol<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name><name pos:line="2" pos:column="33">dialects<pos:position pos:line="2" pos:column="41"/></name><index pos:line="2" pos:column="41">[]<pos:position pos:line="2" pos:column="43"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">prot_index<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">dialects<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">SMB_Prots<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31"> <block pos:line="6" pos:column="32">{	<comment type="block" pos:line="6" pos:column="41">/* The jobs is easy, just index into table */</comment>

        <return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name><name pos:line="8" pos:column="17">SMB_Types<pos:position pos:line="8" pos:column="26"/></name><index pos:line="8" pos:column="26">[<expr><name pos:line="8" pos:column="27">prot_index<pos:position pos:line="8" pos:column="37"/></name></expr>]<pos:position pos:line="8" pos:column="38"/></index></name><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator></expr>;<pos:position pos:line="8" pos:column="40"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{			<comment type="block" pos:line="9" pos:column="33">/* Search through SMB_Prots looking for a match */</comment>

        <for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name><name pos:line="11" pos:column="21">SMB_Prots<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name> <operator pos:line="11" pos:column="34">!=<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">NULL<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></condition> <incr><expr><name pos:line="11" pos:column="43">i<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control> <block pos:line="11" pos:column="48">{

            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><call><name pos:line="13" pos:column="17">strcmp<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">dialects<pos:position pos:line="13" pos:column="32"/></name><index pos:line="13" pos:column="32">[<expr><name pos:line="13" pos:column="33">prot_index<pos:position pos:line="13" pos:column="43"/></name></expr>]<pos:position pos:line="13" pos:column="44"/></index></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">SMB_Prots<pos:position pos:line="13" pos:column="55"/></name><index pos:line="13" pos:column="55">[<expr><name pos:line="13" pos:column="56">i<pos:position pos:line="13" pos:column="57"/></name></expr>]<pos:position pos:line="13" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call> <operator pos:line="13" pos:column="60">==<pos:position pos:line="13" pos:column="62"/></operator> <literal type="number" pos:line="13" pos:column="63">0<pos:position pos:line="13" pos:column="64"/></literal></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65"> <block pos:line="13" pos:column="66">{	<comment type="block" pos:line="13" pos:column="73">/* A match */</comment>

                <return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name><name pos:line="15" pos:column="25">SMB_Types<pos:position pos:line="15" pos:column="34"/></name><index pos:line="15" pos:column="34">[<expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name></expr>]<pos:position pos:line="15" pos:column="37"/></index></name><operator pos:line="15" pos:column="37">)<pos:position pos:line="15" pos:column="38"/></operator></expr>;<pos:position pos:line="15" pos:column="39"/></return>

            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
        }<pos:position pos:line="18" pos:column="10"/></block></for>

        <comment type="block" pos:line="20" pos:column="9">/* If we got here, then we are in trouble, because the protocol was not */</comment>
        <comment type="block" pos:line="21" pos:column="9">/* One we understand ...                                                */</comment>

        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">SMB_P_Unknown<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator></expr>;<pos:position pos:line="23" pos:column="32"/></return>

    }<pos:position pos:line="25" pos:column="6"/></block></else></if>

}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

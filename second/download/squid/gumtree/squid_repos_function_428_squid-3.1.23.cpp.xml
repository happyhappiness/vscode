<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_428_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">stat<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">sb<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">change_time<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">-<pos:position pos:line="5" pos:column="27"/></operator><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><literal type="number" pos:line="6" pos:column="14">256<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">user<pos:position pos:line="7" pos:column="15"/></name></decl>, <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="18">passwd<pos:position pos:line="7" pos:column="24"/></name></decl>, <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="27">p<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">user_data<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">u<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">setbuf<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">stdout<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">argc<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">stderr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"Usage: ncsa_auth &lt;passwordfile&gt;\n"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">exit<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">stat<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">argv<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>]<pos:position pos:line="14" pos:column="21"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">sb<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">!=<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">stderr<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"cannot stat %s\n"<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="45">argv<pos:position pos:line="15" pos:column="49"/></name><index pos:line="15" pos:column="49">[<expr><literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr>]<pos:position pos:line="15" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">fgets<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">buf<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="23">256<pos:position pos:line="18" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">stdin<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call> <operator pos:line="18" pos:column="35">!=<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">NULL<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition> <block pos:line="18" pos:column="44">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">p<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">strchr<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="30">'\n'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">!=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">NULL<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">p<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="char" pos:line="20" pos:column="18">'\0'<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>		<comment type="block" pos:line="20" pos:column="33">/* strip \n */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">stat<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">argv<pos:position pos:line="21" pos:column="22"/></name><index pos:line="21" pos:column="22">[<expr><literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal></expr>]<pos:position pos:line="21" pos:column="25"/></index></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">sb<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">0<pos:position pos:line="21" pos:column="36"/></literal></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">sb<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">st_mtime<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">change_time<pos:position pos:line="22" pos:column="43"/></name></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <block pos:line="22" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">read_passwd_file<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">argv<pos:position pos:line="23" pos:column="38"/></name><index pos:line="23" pos:column="38">[<expr><literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal></expr>]<pos:position pos:line="23" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name pos:line="24" pos:column="17">change_time<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <name><name pos:line="24" pos:column="31">sb<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">st_mtime<pos:position pos:line="24" pos:column="42"/></name></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">user<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">strtok<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">buf<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">" "<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="39">==<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">NULL<pos:position pos:line="27" pos:column="46"/></name></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47"> <block pos:line="27" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">printf<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="string" pos:line="28" pos:column="20">"ERR\n"<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
            <continue pos:line="29" pos:column="13">continue;<pos:position pos:line="29" pos:column="22"/></continue>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">passwd<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">strtok<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">""<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call><operator pos:line="31" pos:column="39">)<pos:position pos:line="31" pos:column="40"/></operator> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">NULL<pos:position pos:line="31" pos:column="48"/></name></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49"> <block pos:line="31" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">printf<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="string" pos:line="32" pos:column="20">"ERR\n"<pos:position pos:line="32" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">rfc1738_unescape<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">user<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">rfc1738_unescape<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">passwd<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">u<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">user_data<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">)<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">hash_lookup<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">hash<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">user<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">u<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">printf<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="string" pos:line="39" pos:column="20">"ERR No such user\n"<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">HAVE_CRYPT<pos:position pos:line="40" pos:column="15"/></name></expr></cpp:if>
        }<pos:position pos:line="41" pos:column="10"/></block></then> <elseif pos:line="41" pos:column="11">else <if pos:line="41" pos:column="16">if <condition pos:line="41" pos:column="19">(<expr><call><name pos:line="41" pos:column="20">strlen<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">passwd<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call> <operator pos:line="41" pos:column="35">&lt;=<pos:position pos:line="41" pos:column="40"/></operator> <literal type="number" pos:line="41" pos:column="38">8<pos:position pos:line="41" pos:column="39"/></literal> <operator pos:line="41" pos:column="40">&amp;&amp;<pos:position pos:line="41" pos:column="50"/></operator> <call><name pos:line="41" pos:column="43">strcmp<pos:position pos:line="41" pos:column="49"/></name><argument_list pos:line="41" pos:column="49">(<argument><expr><name><name pos:line="41" pos:column="50">u<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">passwd<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="61">(<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="62">char<pos:position pos:line="41" pos:column="66"/></name> <operator pos:line="41" pos:column="67">*<pos:position pos:line="41" pos:column="68"/></operator><operator pos:line="41" pos:column="68">)<pos:position pos:line="41" pos:column="69"/></operator> <call><name pos:line="41" pos:column="70">crypt<pos:position pos:line="41" pos:column="75"/></name><argument_list pos:line="41" pos:column="75">(<argument><expr><name pos:line="41" pos:column="76">passwd<pos:position pos:line="41" pos:column="82"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="84">u<pos:position pos:line="41" pos:column="85"/></name><operator pos:line="41" pos:column="85">-&gt;<pos:position pos:line="41" pos:column="90"/></operator><name pos:line="41" pos:column="87">passwd<pos:position pos:line="41" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="95"/></argument_list></call> <operator pos:line="41" pos:column="96">==<pos:position pos:line="41" pos:column="98"/></operator> <literal type="number" pos:line="41" pos:column="99">0<pos:position pos:line="41" pos:column="100"/></literal></expr>)<pos:position pos:line="41" pos:column="101"/></condition><then pos:line="41" pos:column="101"> <block pos:line="41" pos:column="102">{
            <comment type="line" pos:line="42" pos:column="13">// Bug 3107: crypt() DES functionality silently truncates long passwords.</comment>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">printf<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="string" pos:line="43" pos:column="20">"OK\n"<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <elseif pos:line="44" pos:column="11">else <if pos:line="44" pos:column="16">if <condition pos:line="44" pos:column="19">(<expr><call><name pos:line="44" pos:column="20">strlen<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">passwd<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call> <operator pos:line="44" pos:column="35">&gt;<pos:position pos:line="44" pos:column="39"/></operator> <literal type="number" pos:line="44" pos:column="37">8<pos:position pos:line="44" pos:column="38"/></literal> <operator pos:line="44" pos:column="39">&amp;&amp;<pos:position pos:line="44" pos:column="49"/></operator> <call><name pos:line="44" pos:column="42">strcmp<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name><name pos:line="44" pos:column="49">u<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">passwd<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="60">(<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="61">char<pos:position pos:line="44" pos:column="65"/></name> <operator pos:line="44" pos:column="66">*<pos:position pos:line="44" pos:column="67"/></operator><operator pos:line="44" pos:column="67">)<pos:position pos:line="44" pos:column="68"/></operator> <call><name pos:line="44" pos:column="69">crypt<pos:position pos:line="44" pos:column="74"/></name><argument_list pos:line="44" pos:column="74">(<argument><expr><name pos:line="44" pos:column="75">passwd<pos:position pos:line="44" pos:column="81"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="83">u<pos:position pos:line="44" pos:column="84"/></name><operator pos:line="44" pos:column="84">-&gt;<pos:position pos:line="44" pos:column="89"/></operator><name pos:line="44" pos:column="86">passwd<pos:position pos:line="44" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="94"/></argument_list></call> <operator pos:line="44" pos:column="95">==<pos:position pos:line="44" pos:column="97"/></operator> <literal type="number" pos:line="44" pos:column="98">0<pos:position pos:line="44" pos:column="99"/></literal></expr>)<pos:position pos:line="44" pos:column="100"/></condition><then pos:line="44" pos:column="100"> <block pos:line="44" pos:column="101">{
            <comment type="line" pos:line="45" pos:column="13">// Bug 3107: crypt() DES functionality silently truncates long passwords.</comment>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">fprintf<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">stderr<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="29">"SECURITY ALERT: NCSA DES algorithm truncating user %s password to 8 bytes. Upgrade to MD5."<pos:position pos:line="46" pos:column="121"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="123">user<pos:position pos:line="46" pos:column="127"/></name></expr></argument>)<pos:position pos:line="46" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="129"/></expr_stmt>
            <comment type="line" pos:line="47" pos:column="13">// Highly Unsafe: permit a transition period for admin to update passwords.</comment>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">printf<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="string" pos:line="48" pos:column="20">"OK\n"<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif> <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if <condition pos:line="50" pos:column="19">(<expr><call><name pos:line="50" pos:column="20">strcmp<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name><name pos:line="50" pos:column="27">u<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">passwd<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="38">(<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">char<pos:position pos:line="50" pos:column="43"/></name> <operator pos:line="50" pos:column="44">*<pos:position pos:line="50" pos:column="45"/></operator><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator> <call><name pos:line="50" pos:column="47">crypt_md5<pos:position pos:line="50" pos:column="56"/></name><argument_list pos:line="50" pos:column="56">(<argument><expr><name pos:line="50" pos:column="57">passwd<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="65">u<pos:position pos:line="50" pos:column="66"/></name><operator pos:line="50" pos:column="66">-&gt;<pos:position pos:line="50" pos:column="71"/></operator><name pos:line="50" pos:column="68">passwd<pos:position pos:line="50" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call> <operator pos:line="50" pos:column="77">==<pos:position pos:line="50" pos:column="79"/></operator> <literal type="number" pos:line="50" pos:column="80">0<pos:position pos:line="50" pos:column="81"/></literal></expr>)<pos:position pos:line="50" pos:column="82"/></condition><then pos:line="50" pos:column="82"> <block pos:line="50" pos:column="83">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">printf<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="string" pos:line="51" pos:column="20">"OK\n"<pos:position pos:line="51" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif> <elseif pos:line="52" pos:column="11">else <if pos:line="52" pos:column="16">if <condition pos:line="52" pos:column="19">(<expr><call><name pos:line="52" pos:column="20">strcmp<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name><name pos:line="52" pos:column="27">u<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">passwd<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="38">(<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">char<pos:position pos:line="52" pos:column="43"/></name> <operator pos:line="52" pos:column="44">*<pos:position pos:line="52" pos:column="45"/></operator><operator pos:line="52" pos:column="45">)<pos:position pos:line="52" pos:column="46"/></operator> <call><name pos:line="52" pos:column="47">md5sum<pos:position pos:line="52" pos:column="53"/></name><argument_list pos:line="52" pos:column="53">(<argument><expr><name pos:line="52" pos:column="54">passwd<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call> <operator pos:line="52" pos:column="63">==<pos:position pos:line="52" pos:column="65"/></operator> <literal type="number" pos:line="52" pos:column="66">0<pos:position pos:line="52" pos:column="67"/></literal></expr>)<pos:position pos:line="52" pos:column="68"/></condition><then pos:line="52" pos:column="68"> <block pos:line="52" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">printf<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="string" pos:line="53" pos:column="20">"OK\n"<pos:position pos:line="53" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">printf<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="string" pos:line="55" pos:column="20">"ERR Wrong password\n"<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></else></if>
    }<pos:position pos:line="57" pos:column="6"/></block></while>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">hash<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">!=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">NULL<pos:position pos:line="58" pos:column="21"/></name></expr>)<pos:position pos:line="58" pos:column="22"/></condition><then pos:line="58" pos:column="22"> <block pos:line="58" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">hashFreeItems<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">hash<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">my_free<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">hashFreeMemory<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">hash<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">exit<pos:position pos:line="62" pos:column="9"/></name><argument_list pos:line="62" pos:column="9">(<argument><expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="13"/></expr_stmt>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

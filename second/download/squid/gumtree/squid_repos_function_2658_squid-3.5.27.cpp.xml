<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2658_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">setUmask<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">mode_t<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">mask<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// No way to get the current umask value without setting it.</comment>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><specifier pos:line="5" pos:column="12">const<pos:position pos:line="5" pos:column="17"/></specifier> <name pos:line="5" pos:column="18">mode_t<pos:position pos:line="5" pos:column="24"/></name></type> <name pos:line="5" pos:column="25">orig_umask<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name pos:line="5" pos:column="38">umask<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">mask<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt> <comment type="line" pos:line="5" pos:column="51">// once, to get</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">umask<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">mask<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">|<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">orig_umask<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt> <comment type="line" pos:line="6" pos:column="31">// always, to set</comment>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_251.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">handleAdaptationBlocked<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name><name pos:line="2" pos:column="48">Adaptation<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">Answer<pos:position pos:line="2" pos:column="66"/></name></name> <modifier pos:line="2" pos:column="67">&amp;<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="68">answer<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <name><name pos:line="4" pos:column="26">answer<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">ruleId<pos:position pos:line="4" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">abortOnBadEntry<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><literal type="string" pos:line="6" pos:column="25">"entry went bad while ICAP aborted"<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="62"/></condition><then pos:line="6" pos:column="62">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">entry<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">isEmpty<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <block pos:line="9" pos:column="28">{ <comment type="line" pos:line="9" pos:column="30">// too late to block (should not really happen)</comment>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">request<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="13">request<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">detailError<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">ERR_ICAP_FAILURE<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">ERR_DETAIL_RESPMOD_BLOCK_LATE<pos:position pos:line="11" pos:column="81"/></name></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="83"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">abortTransaction<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="string" pos:line="12" pos:column="26">"late adaptation block"<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">11<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="15">7<pos:position pos:line="16" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="18">HERE<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;&lt;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="string" pos:line="16" pos:column="26">"creating adaptation block response"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">err_type<pos:position pos:line="18" pos:column="13"/></name></type> <name pos:line="18" pos:column="14">page_id<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">=
        <expr><call><name pos:line="19" pos:column="9">aclGetDenyInfoPage<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name><name pos:line="19" pos:column="29">Config<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">denyInfoList<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="50">answer<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">.<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="57">ruleId<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">.<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="64">termedBuf<pos:position pos:line="19" pos:column="73"/></name></name><argument_list pos:line="19" pos:column="73">()<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="77">1<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="80"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">page_id<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">==<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">ERR_NONE<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">page_id<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">ERR_ACCESS_DENIED<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">ErrorState<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">err<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><operator pos:line="23" pos:column="23">new<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">ErrorState<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">page_id<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">HTTP_FORBIDDEN<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">request<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">err<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">xerrno<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">ERR_DETAIL_RESPMOD_BLOCK_EARLY<pos:position pos:line="24" pos:column="49"/></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">fwd<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">fail<pos:position pos:line="25" pos:column="14"/></name></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">err<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">fwd<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">dontRetry<pos:position pos:line="26" pos:column="19"/></name></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="boolean" pos:line="26" pos:column="20">true<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">abortTransaction<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="string" pos:line="28" pos:column="22">"timely adaptation block"<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

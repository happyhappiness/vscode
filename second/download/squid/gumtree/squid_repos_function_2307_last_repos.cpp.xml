<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2307_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">httpHeaderFieldStatDumper<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">StoreEntry<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">sentry<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">double<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">val<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">double<pos:position pos:line="2" pos:column="71"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">int<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">count<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">id<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><cast type="static" pos:line="4" pos:column="20">static_cast<argument_list type="generic" pos:line="4" pos:column="31">&lt;<argument><expr><name pos:line="4" pos:column="32">int<pos:position pos:line="4" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="39"/></argument_list><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">val<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">bool<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">valid_id<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name><name pos:line="5" pos:column="27">Http<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">::<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">any_valid_header<pos:position pos:line="5" pos:column="49"/></name></name><argument_list pos:line="5" pos:column="49">(<argument><expr><cast type="static" pos:line="5" pos:column="50">static_cast<argument_list type="generic" pos:line="5" pos:column="61">&lt;<argument><expr><name><name pos:line="5" pos:column="62">Http<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">::<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">HdrType<pos:position pos:line="5" pos:column="75"/></name></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="79"/></argument_list><argument_list pos:line="5" pos:column="76">(<argument><expr><name pos:line="5" pos:column="77">id<pos:position pos:line="5" pos:column="79"/></name></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></cast></expr></argument>)<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="82"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">name<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><ternary><condition><expr><name pos:line="6" pos:column="24">valid_id<pos:position pos:line="6" pos:column="32"/></name></expr> ?<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <expr><call><name><name pos:line="6" pos:column="35">Http<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">::<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">HeaderLookupTable<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">.<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="59">lookup<pos:position pos:line="6" pos:column="65"/></name></name><argument_list pos:line="6" pos:column="65">(<argument><expr><cast type="static" pos:line="6" pos:column="66">static_cast<argument_list type="generic" pos:line="6" pos:column="77">&lt;<argument><expr><name><name pos:line="6" pos:column="78">Http<pos:position pos:line="6" pos:column="82"/></name><operator pos:line="6" pos:column="82">::<pos:position pos:line="6" pos:column="84"/></operator><name pos:line="6" pos:column="84">HdrType<pos:position pos:line="6" pos:column="91"/></name></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="95"/></argument_list><argument_list pos:line="6" pos:column="92">(<argument><expr><name pos:line="6" pos:column="93">id<pos:position pos:line="6" pos:column="95"/></name></expr></argument>)<pos:position pos:line="6" pos:column="96"/></argument_list></cast></expr></argument>)<pos:position pos:line="6" pos:column="97"/></argument_list></call><operator pos:line="6" pos:column="97">.<pos:position pos:line="6" pos:column="98"/></operator><name pos:line="6" pos:column="98">name<pos:position pos:line="6" pos:column="102"/></name></expr> <pos:position pos:line="6" pos:column="103"/></then><else pos:line="6" pos:column="103">: <expr><literal type="string" pos:line="6" pos:column="105">"INVALID"<pos:position pos:line="6" pos:column="114"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="115"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">visible<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">count<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&gt;<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* for entries with zero count, list only those that belong to current type of message */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">visible<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&amp;&amp;<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="21">valid_id<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&amp;&amp;<pos:position pos:line="10" pos:column="40"/></operator> <name><name pos:line="10" pos:column="33">dump_stat<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">owner_mask<pos:position pos:line="10" pos:column="54"/></name></name></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">visible<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">CBIT_TEST<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><name><name pos:line="11" pos:column="30">dump_stat<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">owner_mask<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">id<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">visible<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">storeAppendPrintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">sentry<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"%2d\t %-20s\t %5d\t %6.2f\n"<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>,
                          <argument><expr><name pos:line="15" pos:column="27">id<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">name<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">count<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="44">xdiv<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">count<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">dump_stat<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">busyDestroyedCount<pos:position pos:line="15" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="88"/></expr_stmt></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

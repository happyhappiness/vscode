<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2057_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreEntry<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">StoreController<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">find<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">cache_key<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">key<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><name pos:line="4" pos:column="9">StoreEntry<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">e<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name><name pos:line="4" pos:column="25">swapDir<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">get<pos:position pos:line="4" pos:column="37"/></name></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">key<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr></init></decl>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
        <comment type="line" pos:line="5" pos:column="9">// TODO: ignore and maybe handleIdleEntry() unlocked intransit entries</comment>
        <comment type="line" pos:line="6" pos:column="9">// because their backing store slot may be gone already.</comment>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">20<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">3<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="string" pos:line="7" pos:column="31">"got in-transit entry: "<pos:position pos:line="7" pos:column="55"/></literal> <operator pos:line="7" pos:column="56">&lt;&lt;<pos:position pos:line="7" pos:column="64"/></operator> <operator pos:line="7" pos:column="59">*<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">e<pos:position pos:line="7" pos:column="61"/></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">e<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">// Must search transients before caches because we must sync those we find.</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">transients<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<decl><type><name pos:line="13" pos:column="13">StoreEntry<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">e<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><call><name><name pos:line="13" pos:column="29">transients<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">get<pos:position pos:line="13" pos:column="44"/></name></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">key<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr></init></decl>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50"> <block pos:line="13" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">20<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="24">3<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="27">"got shared in-transit entry: "<pos:position pos:line="14" pos:column="58"/></literal> <operator pos:line="14" pos:column="59">&lt;&lt;<pos:position pos:line="14" pos:column="67"/></operator> <operator pos:line="14" pos:column="62">*<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">e<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">bool<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">inSync<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><literal type="boolean" pos:line="15" pos:column="27">false<pos:position pos:line="15" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="16" pos:column="13">const<pos:position pos:line="16" pos:column="18"/></specifier> <name pos:line="16" pos:column="19">bool<pos:position pos:line="16" pos:column="23"/></name></type> <name pos:line="16" pos:column="24">found<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">= <expr><call><name pos:line="16" pos:column="32">anchorCollapsed<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">e<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">inSync<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">!<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">found<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">||<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">inSync<pos:position pos:line="17" pos:column="33"/></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
                <block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">e<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">assert<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">!<pos:position pos:line="19" pos:column="21"/></operator><call><name><name pos:line="19" pos:column="21">e<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">locked<pos:position pos:line="19" pos:column="30"/></name></name><argument_list pos:line="19" pos:column="30">()<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt> <comment type="line" pos:line="19" pos:column="35">// ensure release will destroyStoreEntry()</comment>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">e<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">release<pos:position pos:line="20" pos:column="23"/></name></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt> <comment type="line" pos:line="20" pos:column="27">// do not let others into the same trap</comment>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">memStore<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<decl><type><name pos:line="26" pos:column="13">StoreEntry<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">e<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><call><name><name pos:line="26" pos:column="29">memStore<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">get<pos:position pos:line="26" pos:column="42"/></name></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name pos:line="26" pos:column="43">key<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr></init></decl>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48"> <block pos:line="26" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">20<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="24">3<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">HERE<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">&lt;&lt;<pos:position pos:line="27" pos:column="40"/></operator> <literal type="string" pos:line="27" pos:column="35">"got mem-cached entry: "<pos:position pos:line="27" pos:column="59"/></literal> <operator pos:line="27" pos:column="60">&lt;&lt;<pos:position pos:line="27" pos:column="68"/></operator> <operator pos:line="27" pos:column="63">*<pos:position pos:line="27" pos:column="64"/></operator><name pos:line="27" pos:column="64">e<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">e<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="32" pos:column="5">// TODO: this disk iteration is misplaced; move to StoreHashIndex when</comment>
    <comment type="line" pos:line="33" pos:column="5">// the global store_table is no longer used for in-transit objects.</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">int<pos:position pos:line="34" pos:column="18"/></name></type> <name pos:line="34" pos:column="19">cacheDirs<pos:position pos:line="34" pos:column="28"/></name> <init pos:line="34" pos:column="29">= <expr><name><name pos:line="34" pos:column="31">Config<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">cacheSwap<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">n_configured<pos:position pos:line="34" pos:column="60"/></name></name></expr></init></decl>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61"> <block pos:line="34" pos:column="62">{
        <comment type="line" pos:line="35" pos:column="9">// ask each cache_dir until the entry is found; use static starting</comment>
        <comment type="line" pos:line="36" pos:column="9">// point to avoid asking the same subset of disks more often</comment>
        <comment type="line" pos:line="37" pos:column="9">// TODO: coordinate with put() to be able to guess the right disk often</comment>
        <decl_stmt><decl><specifier pos:line="38" pos:column="9">static<pos:position pos:line="38" pos:column="15"/></specifier> <type><name pos:line="38" pos:column="16">int<pos:position pos:line="38" pos:column="19"/></name></type> <name pos:line="38" pos:column="20">idx<pos:position pos:line="38" pos:column="23"/></name> <init pos:line="38" pos:column="24">= <expr><literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="28"/></decl_stmt>
        <for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><decl><type><name pos:line="39" pos:column="14">int<pos:position pos:line="39" pos:column="17"/></name></type> <name pos:line="39" pos:column="18">n<pos:position pos:line="39" pos:column="19"/></name> <init pos:line="39" pos:column="20">= <expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="24"/></init> <condition><expr><name pos:line="39" pos:column="25">n<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="29">cacheDirs<pos:position pos:line="39" pos:column="38"/></name></expr>;<pos:position pos:line="39" pos:column="39"/></condition> <incr><expr><operator pos:line="39" pos:column="40">++<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">n<pos:position pos:line="39" pos:column="43"/></name></expr></incr>)<pos:position pos:line="39" pos:column="44"/></control> <block pos:line="39" pos:column="45">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">idx<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <operator pos:line="40" pos:column="19">(<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">idx<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">+<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator> <operator pos:line="40" pos:column="29">%<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">cacheDirs<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">SwapDir<pos:position pos:line="41" pos:column="20"/></name> <modifier pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></modifier></type><name pos:line="41" pos:column="22">sd<pos:position pos:line="41" pos:column="24"/></name> <init pos:line="41" pos:column="25">= <expr><cast type="dynamic" pos:line="41" pos:column="27">dynamic_cast<argument_list type="generic" pos:line="41" pos:column="39">&lt;<argument><expr><name pos:line="41" pos:column="40">SwapDir<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">*<pos:position pos:line="41" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="41" pos:column="52"/></argument_list><argument_list pos:line="41" pos:column="49">(<argument><expr><call><name pos:line="41" pos:column="50">INDEXSD<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><name pos:line="41" pos:column="58">idx<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="41" pos:column="64"/></decl_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><call><name><name pos:line="42" pos:column="18">sd<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">active<pos:position pos:line="42" pos:column="28"/></name></name><argument_list pos:line="42" pos:column="28">()<pos:position pos:line="42" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31">
                <block type="pseudo"><continue pos:line="43" pos:column="17">continue;<pos:position pos:line="43" pos:column="26"/></continue></block></then></if>

            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<decl><type><name pos:line="45" pos:column="17">StoreEntry<pos:position pos:line="45" pos:column="27"/></name> <modifier pos:line="45" pos:column="28">*<pos:position pos:line="45" pos:column="29"/></modifier></type><name pos:line="45" pos:column="29">e<pos:position pos:line="45" pos:column="30"/></name> <init pos:line="45" pos:column="31">= <expr><call><name><name pos:line="45" pos:column="33">sd<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">get<pos:position pos:line="45" pos:column="40"/></name></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">key<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr></init></decl>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46"> <block pos:line="45" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">debugs<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="number" pos:line="46" pos:column="24">20<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="28">3<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">HERE<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">&lt;&lt;<pos:position pos:line="46" pos:column="44"/></operator> <literal type="string" pos:line="46" pos:column="39">"cache_dir "<pos:position pos:line="46" pos:column="51"/></literal> <operator pos:line="46" pos:column="52">&lt;&lt;<pos:position pos:line="46" pos:column="60"/></operator> <name pos:line="46" pos:column="55">idx<pos:position pos:line="46" pos:column="58"/></name> <operator pos:line="46" pos:column="59">&lt;&lt;<pos:position pos:line="46" pos:column="67"/></operator>
                       <literal type="string" pos:line="47" pos:column="24">" got cached entry: "<pos:position pos:line="47" pos:column="45"/></literal> <operator pos:line="47" pos:column="46">&lt;&lt;<pos:position pos:line="47" pos:column="54"/></operator> <operator pos:line="47" pos:column="49">*<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">e<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
                <return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">e<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></return>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></for>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">debugs<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><literal type="number" pos:line="53" pos:column="12">20<pos:position pos:line="53" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="16">4<pos:position pos:line="53" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="19">HERE<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">&lt;&lt;<pos:position pos:line="53" pos:column="32"/></operator> <literal type="string" pos:line="53" pos:column="27">"none of "<pos:position pos:line="53" pos:column="37"/></literal> <operator pos:line="53" pos:column="38">&lt;&lt;<pos:position pos:line="53" pos:column="46"/></operator> <name><name pos:line="53" pos:column="41">Config<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">.<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">cacheSwap<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">.<pos:position pos:line="53" pos:column="58"/></operator><name pos:line="53" pos:column="58">n_configured<pos:position pos:line="53" pos:column="70"/></name></name> <operator pos:line="53" pos:column="71">&lt;&lt;<pos:position pos:line="53" pos:column="79"/></operator>
           <literal type="string" pos:line="54" pos:column="12">" cache_dirs have "<pos:position pos:line="54" pos:column="31"/></literal> <operator pos:line="54" pos:column="32">&lt;&lt;<pos:position pos:line="54" pos:column="40"/></operator> <call><name pos:line="54" pos:column="35">storeKeyText<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><name pos:line="54" pos:column="48">key<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">NULL<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4166_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">encapsulateHead<pos:position pos:line="1" pos:column="48"/></name></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">MemBuf<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">&amp;<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="57">icapBuf<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">section<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="87">MemBuf<pos:position pos:line="1" pos:column="93"/></name> <modifier pos:line="1" pos:column="94">&amp;<pos:position pos:line="1" pos:column="99"/></modifier></type><name pos:line="1" pos:column="95">httpBuf<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="104">const<pos:position pos:line="1" pos:column="109"/></specifier> <name pos:line="1" pos:column="110">HttpMsg<pos:position pos:line="1" pos:column="117"/></name> <modifier pos:line="1" pos:column="118">*<pos:position pos:line="1" pos:column="119"/></modifier></type><name pos:line="1" pos:column="119">head<pos:position pos:line="1" pos:column="123"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="124"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// update ICAP header</comment>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">icapBuf<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">.<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">Printf<pos:position pos:line="4" pos:column="19"/></name></name><argument_list pos:line="4" pos:column="19">(<argument><expr><literal type="string" pos:line="4" pos:column="20">"%s=%d, "<pos:position pos:line="4" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="31">section<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="40">(<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">int<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator> <call><name><name pos:line="4" pos:column="46">httpBuf<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">.<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">contentSize<pos:position pos:line="4" pos:column="65"/></name></name><argument_list pos:line="4" pos:column="65">()<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// begin cloning</comment>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">HttpMsg<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">::<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">Pointer<pos:position pos:line="7" pos:column="21"/></name></name></type> <name pos:line="7" pos:column="22">headClone<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">HttpRequest<pos:position pos:line="9" pos:column="26"/></name><modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type> <name pos:line="9" pos:column="28">old_request<pos:position pos:line="9" pos:column="39"/></name> <init pos:line="9" pos:column="40">= <expr><cast type="dynamic" pos:line="9" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="54">&lt;<argument><expr><specifier pos:line="9" pos:column="55">const<pos:position pos:line="9" pos:column="60"/></specifier> <name pos:line="9" pos:column="61">HttpRequest<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">*<pos:position pos:line="9" pos:column="73"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="77"/></argument_list><argument_list pos:line="9" pos:column="74">(<argument><expr><name pos:line="9" pos:column="75">head<pos:position pos:line="9" pos:column="79"/></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="9" pos:column="81"/></condition><then pos:line="9" pos:column="81"> <block pos:line="9" pos:column="82">{
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">HttpRequest<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">Pointer<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">new_request<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><operator pos:line="10" pos:column="42">new<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">HttpRequest<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">Must<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name><name pos:line="11" pos:column="14">old_request<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">canonical<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">urlParse<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name><name pos:line="12" pos:column="18">old_request<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">method<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="39">old_request<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">canonical<pos:position pos:line="12" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="63">new_request<pos:position pos:line="12" pos:column="74"/></name><operator pos:line="12" pos:column="74">.<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="75">getRaw<pos:position pos:line="12" pos:column="81"/></name></name><argument_list pos:line="12" pos:column="81">()<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">new_request<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">http_ver<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <name><name pos:line="13" pos:column="33">old_request<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">http_ver<pos:position pos:line="13" pos:column="54"/></name></name></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">headClone<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name><name pos:line="14" pos:column="21">new_request<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">getRaw<pos:position pos:line="14" pos:column="39"/></name></name><argument_list pos:line="14" pos:column="39">()<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<decl><type><specifier pos:line="15" pos:column="16">const<pos:position pos:line="15" pos:column="21"/></specifier> <name pos:line="15" pos:column="22">HttpReply<pos:position pos:line="15" pos:column="31"/></name> <modifier pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></modifier></type><name pos:line="15" pos:column="33">old_reply<pos:position pos:line="15" pos:column="42"/></name> <init pos:line="15" pos:column="43">= <expr><cast type="dynamic" pos:line="15" pos:column="45">dynamic_cast<argument_list type="generic" pos:line="15" pos:column="57">&lt;<argument><expr><specifier pos:line="15" pos:column="58">const<pos:position pos:line="15" pos:column="63"/></specifier> <name pos:line="15" pos:column="64">HttpReply<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">*<pos:position pos:line="15" pos:column="74"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="78"/></argument_list><argument_list pos:line="15" pos:column="75">(<argument><expr><name pos:line="15" pos:column="76">head<pos:position pos:line="15" pos:column="80"/></name></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="15" pos:column="82"/></condition><then pos:line="15" pos:column="82"> <block pos:line="15" pos:column="83">{
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">HttpReply<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">::<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">Pointer<pos:position pos:line="16" pos:column="27"/></name></name></type> <name pos:line="16" pos:column="28">new_reply<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">new<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">HttpReply<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></decl>;<pos:position pos:line="16" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">new_reply<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">sline<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="28">old_reply<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">sline<pos:position pos:line="17" pos:column="44"/></name></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">headClone<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name><name pos:line="18" pos:column="21">new_reply<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">getRaw<pos:position pos:line="18" pos:column="37"/></name></name><argument_list pos:line="18" pos:column="37">()<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">Must<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">headClone<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">headClone<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">inheritProperties<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">head<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">HttpHeaderPos<pos:position pos:line="23" pos:column="18"/></name></type> <name pos:line="23" pos:column="19">pos<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><name pos:line="23" pos:column="25">HttpHeaderInitPos<pos:position pos:line="23" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">HttpHeaderEntry<pos:position pos:line="24" pos:column="20"/></name><modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type> <name pos:line="24" pos:column="22">p_head_entry<pos:position pos:line="24" pos:column="34"/></name> <init pos:line="24" pos:column="35">= <expr><name pos:line="24" pos:column="37">NULL<pos:position pos:line="24" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="42"/></decl_stmt>
    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">!=<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">p_head_entry<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <call><name><name pos:line="25" pos:column="36">head<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">header<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">.<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">getEntry<pos:position pos:line="25" pos:column="57"/></name></name><argument_list pos:line="25" pos:column="57">(<argument><expr><operator pos:line="25" pos:column="58">&amp;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="59">pos<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call><operator pos:line="25" pos:column="63">)<pos:position pos:line="25" pos:column="64"/></operator></expr> )<pos:position pos:line="25" pos:column="66"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="9">headClone<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">header<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">addEntry<pos:position pos:line="26" pos:column="35"/></name></name><argument_list pos:line="26" pos:column="35">(<argument><expr><call><name><name pos:line="26" pos:column="36">p_head_entry<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">clone<pos:position pos:line="26" pos:column="55"/></name></name><argument_list pos:line="26" pos:column="55">()<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></while>

    <comment type="line" pos:line="28" pos:column="5">// end cloning</comment>

    <comment type="line" pos:line="30" pos:column="5">// remove all hop-by-hop headers from the clone</comment>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">headClone<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">header<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">.<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">delById<pos:position pos:line="31" pos:column="30"/></name></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">HDR_PROXY_AUTHENTICATE<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">headClone<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">header<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">removeHopByHopEntries<pos:position pos:line="32" pos:column="44"/></name></name><argument_list pos:line="32" pos:column="44">()<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>

    <comment type="line" pos:line="34" pos:column="5">// pack polished HTTP header</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">packHead<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">httpBuf<pos:position pos:line="35" pos:column="21"/></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="23">headClone<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">getRaw<pos:position pos:line="35" pos:column="39"/></name></name><argument_list pos:line="35" pos:column="39">()<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>

    <comment type="line" pos:line="37" pos:column="5">// headClone unlocks and, hence, deletes the message we packed</comment>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

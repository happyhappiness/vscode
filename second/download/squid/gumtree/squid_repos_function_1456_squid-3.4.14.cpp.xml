<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1456_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeSwapOutStart<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">e<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemObject<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">mem<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">e<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">mem_obj<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">StoreIOState<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">Pointer<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">sio<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">mem<pos:position pos:line="6" pos:column="15"/></name></expr></argument>)<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Build the swap metadata, so the filesystem will know how much
     * metadata there is to store
     */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">20<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"storeSwapOutStart: Begin SwapOut '"<pos:position pos:line="10" pos:column="55"/></literal> <operator pos:line="10" pos:column="56">&lt;&lt;<pos:position pos:line="10" pos:column="64"/></operator> <call><name><name pos:line="10" pos:column="59">e<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">url<pos:position pos:line="10" pos:column="65"/></name></name><argument_list pos:line="10" pos:column="65">()<pos:position pos:line="10" pos:column="67"/></argument_list></call> <operator pos:line="10" pos:column="68">&lt;&lt;<pos:position pos:line="10" pos:column="76"/></operator> <literal type="string" pos:line="10" pos:column="71">"' to dirno "<pos:position pos:line="10" pos:column="84"/></literal> <operator pos:line="10" pos:column="85">&lt;&lt;<pos:position pos:line="10" pos:column="93"/></operator>
           <name><name pos:line="11" pos:column="12">e<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">swap_dirn<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">&lt;&lt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="string" pos:line="11" pos:column="28">", fileno "<pos:position pos:line="11" pos:column="39"/></literal> <operator pos:line="11" pos:column="40">&lt;&lt;<pos:position pos:line="11" pos:column="48"/></operator> <name><name pos:line="11" pos:column="43">std<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">::<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">hex<pos:position pos:line="11" pos:column="51"/></name></name> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator> <call><name><name pos:line="11" pos:column="55">std<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">::<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">setw<pos:position pos:line="11" pos:column="64"/></name></name><argument_list pos:line="11" pos:column="64">(<argument><expr><literal type="number" pos:line="11" pos:column="65">8<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call> <operator pos:line="11" pos:column="68">&lt;&lt;<pos:position pos:line="11" pos:column="76"/></operator> <call><name><name pos:line="11" pos:column="71">std<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">::<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="76">setfill<pos:position pos:line="11" pos:column="83"/></name></name><argument_list pos:line="11" pos:column="83">(<argument><expr><literal type="char" pos:line="11" pos:column="84">'0'<pos:position pos:line="11" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="88"/></argument_list></call> <operator pos:line="11" pos:column="89">&lt;&lt;<pos:position pos:line="11" pos:column="97"/></operator>
           <name><name pos:line="12" pos:column="12">std<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">uppercase<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">&lt;&lt;<pos:position pos:line="12" pos:column="35"/></operator> <name><name pos:line="12" pos:column="30">e<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">swap_filen<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">e<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">swap_status<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">SWAPOUT_WRITING<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* If we start swapping out objects with OutOfBand Metadata,
     * then this code needs changing
     */</comment>

    <comment type="block" pos:line="18" pos:column="5">/* TODO: make some sort of data,size refcounted immutable buffer
     * and stop fooling ourselves with "const char*" buffers.
     */</comment>

    <comment type="line" pos:line="22" pos:column="5">// Create metadata now, possibly in vain: storeCreate needs swap_hdr_sz.</comment>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">buf<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><call><name><name pos:line="23" pos:column="23">e<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">getSerialisedMetaData<pos:position pos:line="23" pos:column="47"/></name></name> <argument_list pos:line="23" pos:column="48">()<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">buf<pos:position pos:line="24" pos:column="15"/></name></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* Create the swap file */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">generic_cbdata<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">c<pos:position pos:line="27" pos:column="22"/></name> <init pos:line="27" pos:column="23">= <expr><operator pos:line="27" pos:column="25">new<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">generic_cbdata<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">e<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">sio<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">storeCreate<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">e<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">storeSwapOutFileNotify<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">storeSwapOutFileClosed<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">c<pos:position pos:line="28" pos:column="75"/></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">sio<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">==<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">e<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">swap_status<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">SWAPOUT_NONE<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">mem<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">swapout<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">decision<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name><name pos:line="32" pos:column="33">MemObject<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">::<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">SwapOut<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">::<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">swImpossible<pos:position pos:line="32" pos:column="65"/></name></name></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">delete<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">c<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">xfree<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><operator pos:line="34" pos:column="15">(<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">char<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">buf<pos:position pos:line="34" pos:column="25"/></name></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">storeLog<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">STORE_LOG_SWAPOUTFAIL<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">e<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
        <return pos:line="36" pos:column="9">return;<pos:position pos:line="36" pos:column="16"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">mem<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">swapout<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">sio<pos:position pos:line="39" pos:column="21"/></name></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">sio<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* Don't lock until after create, or the replacement
     * code might get confused */</comment>

    <expr_stmt><expr><call><name><name pos:line="43" pos:column="5">e<pos:position pos:line="43" pos:column="6"/></name><operator pos:line="43" pos:column="6">-&gt;<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="8">lock<pos:position pos:line="43" pos:column="12"/></name></name><argument_list pos:line="43" pos:column="12">()<pos:position pos:line="43" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>
    <comment type="block" pos:line="44" pos:column="5">/* Pick up the file number if it was assigned immediately */</comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">e<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">-&gt;<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="8">swap_filen<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name><name pos:line="45" pos:column="21">mem<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">swapout<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">.<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">sio<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">swap_filen<pos:position pos:line="45" pos:column="49"/></name></name></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">e<pos:position pos:line="47" pos:column="6"/></name><operator pos:line="47" pos:column="6">-&gt;<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="8">swap_dirn<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name><name pos:line="47" pos:column="20">mem<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">swapout<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">.<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">sio<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">swap_dirn<pos:position pos:line="47" pos:column="47"/></name></name></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* write out the swap metadata */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">storeIOWrite<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">mem<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">swapout<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">.<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">sio<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">buf<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="41">mem<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">swap_hdr_sz<pos:position pos:line="50" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="59">0<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="62">xfree_cppwrapper<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

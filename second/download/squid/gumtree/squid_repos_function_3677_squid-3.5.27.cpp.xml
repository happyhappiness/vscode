<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3677_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clientStartListeningOn<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">AnyP<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">PortCfgPointer<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">port<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name><name pos:line="2" pos:column="58">RefCount<pos:position pos:line="2" pos:column="66"/></name><argument_list type="generic" pos:line="2" pos:column="66">&lt; <argument><expr><name><name pos:line="2" pos:column="68">CommCbFunPtrCallT<pos:position pos:line="2" pos:column="85"/></name><argument_list type="generic" pos:line="2" pos:column="85">&lt;<argument><expr><name pos:line="2" pos:column="86">CommAcceptCbPtrFun<pos:position pos:line="2" pos:column="104"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="108"/></argument_list></name></expr></argument> &gt;<pos:position pos:line="2" pos:column="110"/></argument_list></name> <modifier pos:line="2" pos:column="108">&amp;<pos:position pos:line="2" pos:column="113"/></modifier></type><name pos:line="2" pos:column="109">subCall<pos:position pos:line="2" pos:column="116"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="118">const<pos:position pos:line="2" pos:column="123"/></specifier> <name><name pos:line="2" pos:column="124">Ipc<pos:position pos:line="2" pos:column="127"/></name><operator pos:line="2" pos:column="127">::<pos:position pos:line="2" pos:column="129"/></operator><name pos:line="2" pos:column="129">FdNoteId<pos:position pos:line="2" pos:column="137"/></name></name></type> <name pos:line="2" pos:column="138">fdNote<pos:position pos:line="2" pos:column="144"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="145"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Fill out a Comm::Connection which IPC will open as a listener for us</comment>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">port<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">listenConn<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">new<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="28">Comm<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">::<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">Connection<pos:position pos:line="5" pos:column="44"/></name></name></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">port<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">listenConn<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">local<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">=<pos:position pos:line="6" pos:column="30"/></operator> <name><name pos:line="6" pos:column="31">port<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">s<pos:position pos:line="6" pos:column="38"/></name></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">port<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">listenConn<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">flags<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator>
        <name pos:line="8" pos:column="9">COMM_NONBLOCKING<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">|<pos:position pos:line="8" pos:column="27"/></operator>
        <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="9" pos:column="10">port<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">flags<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">tproxyIntercept<pos:position pos:line="9" pos:column="37"/></name></name></expr> ?<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <expr><name pos:line="9" pos:column="40">COMM_TRANSPARENT<pos:position pos:line="9" pos:column="56"/></name></expr> <pos:position pos:line="9" pos:column="57"/></then><else pos:line="9" pos:column="57">: <expr><literal type="number" pos:line="9" pos:column="59">0<pos:position pos:line="9" pos:column="60"/></literal></expr></else></ternary><operator pos:line="9" pos:column="60">)<pos:position pos:line="9" pos:column="61"/></operator> <operator pos:line="9" pos:column="62">|<pos:position pos:line="9" pos:column="63"/></operator>
        <operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="10" pos:column="10">port<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">flags<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">natIntercept<pos:position pos:line="10" pos:column="34"/></name></name></expr> ?<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <expr><name pos:line="10" pos:column="37">COMM_INTERCEPTION<pos:position pos:line="10" pos:column="54"/></name></expr> <pos:position pos:line="10" pos:column="55"/></then><else pos:line="10" pos:column="55">: <expr><literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr></else></ternary><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>

    <comment type="line" pos:line="12" pos:column="5">// route new connections to subCall</comment>
    <typedef pos:line="13" pos:column="5">typedef <type><name><name pos:line="13" pos:column="13">CommCbFunPtrCallT<pos:position pos:line="13" pos:column="30"/></name><argument_list type="generic" pos:line="13" pos:column="30">&lt;<argument><expr><name pos:line="13" pos:column="31">CommAcceptCbPtrFun<pos:position pos:line="13" pos:column="49"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="53"/></argument_list></name></type> <name pos:line="13" pos:column="51">AcceptCall<pos:position pos:line="13" pos:column="61"/></name>;<pos:position pos:line="13" pos:column="62"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">Subscription<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">::<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">Pointer<pos:position pos:line="14" pos:column="26"/></name></name></type> <name pos:line="14" pos:column="27">sub<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><operator pos:line="14" pos:column="33">new<pos:position pos:line="14" pos:column="36"/></operator> <call><name><name pos:line="14" pos:column="37">CallSubscription<pos:position pos:line="14" pos:column="53"/></name><argument_list type="generic" pos:line="14" pos:column="53">&lt;<argument><expr><name pos:line="14" pos:column="54">AcceptCall<pos:position pos:line="14" pos:column="64"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="68"/></argument_list></name><argument_list pos:line="14" pos:column="65">(<argument><expr><name pos:line="14" pos:column="66">subCall<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">AsyncCall<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">::<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">Pointer<pos:position pos:line="15" pos:column="23"/></name></name></type> <name pos:line="15" pos:column="24">listenCall<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">=
        <expr><call><name pos:line="16" pos:column="9">asyncCall<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="number" pos:line="16" pos:column="19">33<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="23">2<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"clientListenerConnectionOpened"<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="17" pos:column="19">ListeningStartedDialer<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="43">clientListenerConnectionOpened<pos:position pos:line="17" pos:column="73"/></name></expr></argument>,
                                         <argument><expr><name pos:line="18" pos:column="42">port<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">fdNote<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">sub<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">Ipc<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">::<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">StartListening<pos:position pos:line="19" pos:column="24"/></name></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">SOCK_STREAM<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">IPPROTO_TCP<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="51">port<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">listenConn<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="69">fdNote<pos:position pos:line="19" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="77">listenCall<pos:position pos:line="19" pos:column="87"/></name></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="89"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">NHttpSockets<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">&lt;<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="27">MAXTCPLISTENPORTS<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">HttpSockets<pos:position pos:line="22" pos:column="16"/></name><index pos:line="22" pos:column="16">[<expr><name pos:line="22" pos:column="17">NHttpSockets<pos:position pos:line="22" pos:column="29"/></name></expr>]<pos:position pos:line="22" pos:column="30"/></index></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">-<pos:position pos:line="22" pos:column="34"/></operator><literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">++<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">NHttpSockets<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

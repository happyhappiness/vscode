<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3607_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Launcher<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">::<pos:position pos:line="1" pos:column="34"/></operator><name pos:line="1" pos:column="34">canRepeat<pos:position pos:line="1" pos:column="43"/></name></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">Adaptation<pos:position pos:line="1" pos:column="54"/></name><operator pos:line="1" pos:column="54">::<pos:position pos:line="1" pos:column="56"/></operator><name pos:line="1" pos:column="56">Icap<pos:position pos:line="1" pos:column="60"/></name><operator pos:line="1" pos:column="60">::<pos:position pos:line="1" pos:column="62"/></operator><name pos:line="1" pos:column="62">XactAbortInfo<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">&amp;<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="77">info<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list> <specifier pos:line="1" pos:column="83">const<pos:position pos:line="1" pos:column="88"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">9<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">HERE<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&lt;&lt;<pos:position pos:line="3" pos:column="31"/></operator> <name pos:line="3" pos:column="26">shutting_down<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">theLaunches<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&gt;=<pos:position pos:line="4" pos:column="26"/></operator> <name><name pos:line="4" pos:column="24">TheConfig<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">repeat_limit<pos:position pos:line="4" pos:column="46"/></name></name> <operator pos:line="4" pos:column="47">||<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="50">shutting_down<pos:position pos:line="4" pos:column="63"/></name></expr>)<pos:position pos:line="4" pos:column="64"/></condition><then pos:line="4" pos:column="64">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="15">9<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="18">HERE<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <name><name pos:line="7" pos:column="26">info<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">isRepeatable<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt> <comment type="line" pos:line="7" pos:column="46">// TODO: update and use status()</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">info<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">isRepeatable<pos:position pos:line="8" pos:column="27"/></name></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">93<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="15">9<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="18">HERE<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;&lt;<pos:position pos:line="11" pos:column="31"/></operator> <name><name pos:line="11" pos:column="26">info<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">.<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">icapReply<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">info<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">icapReply<pos:position pos:line="12" pos:column="24"/></name></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25"> <comment type="line" pos:line="12" pos:column="26">// did not get to read an ICAP reply; a timeout?</comment>
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">true<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">93<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="15">9<pos:position pos:line="15" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="18">info<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">icapReply<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">sline<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">status<pos:position pos:line="15" pos:column="46"/></name></name><argument_list pos:line="15" pos:column="46">()<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
    <comment type="line" pos:line="16" pos:column="5">// XXX: Http::scNone is not the only sign of parse error</comment>
    <comment type="line" pos:line="17" pos:column="5">// XXX: if there is a specific HTTP error code describing the problem, that may be set</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">info<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">icapReply<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">sline<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">status<pos:position pos:line="18" pos:column="37"/></name></name><argument_list pos:line="18" pos:column="37">()<pos:position pos:line="18" pos:column="39"/></argument_list></call> <operator pos:line="18" pos:column="40">==<pos:position pos:line="18" pos:column="42"/></operator> <name><name pos:line="18" pos:column="43">Http<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">::<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">scNone<pos:position pos:line="18" pos:column="55"/></name></name></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <comment type="line" pos:line="18" pos:column="57">// failed to parse the reply; I/O err</comment>
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">true<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">ACLFilledChecklist<pos:position pos:line="21" pos:column="23"/></name> <modifier pos:line="21" pos:column="24">*<pos:position pos:line="21" pos:column="25"/></modifier></type><name pos:line="21" pos:column="25">cl<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">=
        <expr><operator pos:line="22" pos:column="9">new<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">ACLFilledChecklist<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">TheConfig<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">repeat<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="50">info<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">.<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">icapRequest<pos:position pos:line="22" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="68">dash_str<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">cl<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">reply<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name><name pos:line="23" pos:column="17">info<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">icapReply<pos:position pos:line="23" pos:column="31"/></name></name></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">HTTPMSGLOCK<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name><name pos:line="24" pos:column="17">cl<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">reply<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">bool<pos:position pos:line="26" pos:column="9"/></name></type> <name pos:line="26" pos:column="10">result<pos:position pos:line="26" pos:column="16"/></name> <init pos:line="26" pos:column="17">= <expr><call><name><name pos:line="26" pos:column="19">cl<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">fastCheck<pos:position pos:line="26" pos:column="32"/></name></name><argument_list pos:line="26" pos:column="32">()<pos:position pos:line="26" pos:column="34"/></argument_list></call><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><call><name pos:line="26" pos:column="35">allowed<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">()<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">delete<pos:position pos:line="27" pos:column="11"/></operator> <name pos:line="27" pos:column="12">cl<pos:position pos:line="27" pos:column="14"/></name></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">result<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

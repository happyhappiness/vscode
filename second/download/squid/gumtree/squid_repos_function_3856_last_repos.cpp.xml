<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3856_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">hasAuthorityInfoAccessCaIssuers<pos:position pos:line="2" pos:column="32"/></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">X509<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">cert<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AUTHORITY_INFO_ACCESS<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">info<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">cert<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="null" pos:line="6" pos:column="16">nullptr<pos:position pos:line="6" pos:column="23"/></literal></expr>;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="7" pos:column="5">info<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <cast type="static" pos:line="7" pos:column="12">static_cast<argument_list type="generic" pos:line="7" pos:column="23">&lt;<argument><expr><name pos:line="7" pos:column="24">AUTHORITY_INFO_ACCESS<pos:position pos:line="7" pos:column="45"/></name> <operator pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="51"/></argument_list><argument_list pos:line="7" pos:column="48">(<argument><expr><call><name pos:line="7" pos:column="49">X509_get_ext_d2i<pos:position pos:line="7" pos:column="65"/></name><argument_list pos:line="7" pos:column="65">(<argument><expr><name pos:line="7" pos:column="66">cert<pos:position pos:line="7" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="72">NID_info_access<pos:position pos:line="7" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="89">NULL<pos:position pos:line="7" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="95">NULL<pos:position pos:line="7" pos:column="99"/></name></expr></argument>)<pos:position pos:line="7" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="101"/></argument_list></cast></expr>;<pos:position pos:line="7" pos:column="102"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">info<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="null" pos:line="9" pos:column="16">nullptr<pos:position pos:line="9" pos:column="23"/></literal></expr>;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

    <decl_stmt><decl><specifier pos:line="11" pos:column="5">static<pos:position pos:line="11" pos:column="11"/></specifier> <type><name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name></type> <name><name pos:line="11" pos:column="17">uri<pos:position pos:line="11" pos:column="20"/></name><index pos:line="11" pos:column="20">[<expr><name pos:line="11" pos:column="21">MAX_URL<pos:position pos:line="11" pos:column="28"/></name></expr>]<pos:position pos:line="11" pos:column="29"/></index></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">uri<pos:position pos:line="12" pos:column="8"/></name><index pos:line="12" pos:column="8">[<expr><literal type="number" pos:line="12" pos:column="9">0<pos:position pos:line="12" pos:column="10"/></literal></expr>]<pos:position pos:line="12" pos:column="11"/></index></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="char" pos:line="12" pos:column="14">'\0'<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">int<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="25">sk_ACCESS_DESCRIPTION_num<pos:position pos:line="14" pos:column="50"/></name><argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">info<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></condition> <incr><expr><name pos:line="14" pos:column="58">i<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">++<pos:position pos:line="14" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="62"/></control> <block pos:line="14" pos:column="63">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">ACCESS_DESCRIPTION<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">ad<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><call><name pos:line="15" pos:column="34">sk_ACCESS_DESCRIPTION_value<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name pos:line="15" pos:column="62">info<pos:position pos:line="15" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">i<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="71"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">OBJ_obj2nid<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">ad<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">method<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">==<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">NID_ad_ca_issuers<pos:position pos:line="16" pos:column="57"/></name></expr>)<pos:position pos:line="16" pos:column="58"/></condition><then pos:line="16" pos:column="58"> <block pos:line="16" pos:column="59">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name><name pos:line="17" pos:column="17">ad<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">location<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">type<pos:position pos:line="17" pos:column="35"/></name></name> <operator pos:line="17" pos:column="36">==<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">GEN_URI<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47"> <block pos:line="17" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">xstrncpy<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">uri<pos:position pos:line="18" pos:column="29"/></name></expr></argument>,
                         <argument><expr><cast type="reinterpret" pos:line="19" pos:column="26">reinterpret_cast<argument_list type="generic" pos:line="19" pos:column="42">&lt;<argument><expr><specifier pos:line="19" pos:column="43">const<pos:position pos:line="19" pos:column="48"/></specifier> <name pos:line="19" pos:column="49">char<pos:position pos:line="19" pos:column="53"/></name> <operator pos:line="19" pos:column="54">*<pos:position pos:line="19" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="19" pos:column="59"/></argument_list><argument_list pos:line="19" pos:column="56">(
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">HAVE_LIBCRYPTO_ASN1_STRING_GET0_DATA<pos:position pos:line="20" pos:column="41"/></name></expr></cpp:if>
                             <argument><expr><macro><name pos:line="21" pos:column="30">ASN1_STRING_get0_data<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument pos:line="21" pos:column="52">ad-&gt;location-&gt;d.uniformResourceIdentifier<pos:position pos:line="21" pos:column="93"/></argument>)<pos:position pos:line="21" pos:column="94"/></argument_list></macro>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
                             <call><name pos:line="23" pos:column="30">ASN1_STRING_data<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name><name pos:line="23" pos:column="47">ad<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">location<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">d<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">.<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="63">uniformResourceIdentifier<pos:position pos:line="23" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="89"/></argument_list></call></expr></argument>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
                         )<pos:position pos:line="25" pos:column="27"/></argument_list></cast></expr></argument>,
                         <argument><expr><sizeof pos:line="26" pos:column="26">sizeof<argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">uri<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">AUTHORITY_INFO_ACCESS_free<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">info<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="32" pos:column="12">uri<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>]<pos:position pos:line="32" pos:column="18"/></index></name> <operator pos:line="32" pos:column="19">!=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'\0'<pos:position pos:line="32" pos:column="26"/></literal></expr> ?<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28"> <expr><name pos:line="32" pos:column="29">uri<pos:position pos:line="32" pos:column="32"/></name></expr> <pos:position pos:line="32" pos:column="33"/></then><else pos:line="32" pos:column="33">: <expr><literal type="null" pos:line="32" pos:column="35">nullptr<pos:position pos:line="32" pos:column="42"/></literal></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="43"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

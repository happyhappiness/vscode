<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2228_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelConnectedWriteDone<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">Comm<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">ConnectionPointer<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">conn<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">size_t<pos:position pos:line="2" pos:column="77"/></name></type> <name pos:line="2" pos:column="78">len<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="83">Comm<pos:position pos:line="2" pos:column="87"/></name><operator pos:line="2" pos:column="87">::<pos:position pos:line="2" pos:column="89"/></operator><name pos:line="2" pos:column="89">Flag<pos:position pos:line="2" pos:column="93"/></name></name></type> <name pos:line="2" pos:column="94">flag<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="100">int<pos:position pos:line="2" pos:column="103"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="105">void<pos:position pos:line="2" pos:column="109"/></name> <modifier pos:line="2" pos:column="110">*<pos:position pos:line="2" pos:column="111"/></modifier></type><name pos:line="2" pos:column="111">data<pos:position pos:line="2" pos:column="115"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="116"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">26<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="27">conn<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">&lt;&lt;<pos:position pos:line="5" pos:column="40"/></operator> <literal type="string" pos:line="5" pos:column="35">", flag="<pos:position pos:line="5" pos:column="44"/></literal> <operator pos:line="5" pos:column="45">&lt;&lt;<pos:position pos:line="5" pos:column="53"/></operator> <name pos:line="5" pos:column="48">flag<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">tunnelState<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">client<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">writer<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">flag<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">Comm<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">::<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">OK<pos:position pos:line="8" pos:column="25"/></name></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
        <expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">tunnelState<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">status_ptr<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name><name pos:line="9" pos:column="36">Http<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">::<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">scInternalServerError<pos:position pos:line="9" pos:column="63"/></name></name></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">tunnelErrorComplete<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">conn<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">fd<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">data<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<decl><type><name pos:line="14" pos:column="9">auto<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">http<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><call><name><name pos:line="14" pos:column="21">tunnelState<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">http<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">get<pos:position pos:line="14" pos:column="42"/></name></name><argument_list pos:line="14" pos:column="42">()<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr></init></decl>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">http<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">out<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">headers_sz<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">+=<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">len<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">out<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">.<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">size<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">+=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">len<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">tunnelStartShoveling<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">tunnelState<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4579_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">Ssl<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">ErrorDetail<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">notbefore<pos:position pos:line="1" pos:column="40"/></name></name><parameter_list pos:line="1" pos:column="40">()<pos:position pos:line="1" pos:column="42"/></parameter_list> <specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name><name pos:line="3" pos:column="9">broken_cert<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">.<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">get<pos:position pos:line="3" pos:column="24"/></name></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
        <if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<decl><type><name pos:line="4" pos:column="13">ASN1_UTCTIME<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type> <name pos:line="4" pos:column="28">tm<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><call><name pos:line="4" pos:column="33">X509_get_notBefore<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">(<argument><expr><call><name><name pos:line="4" pos:column="52">broken_cert<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">.<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="64">get<pos:position pos:line="4" pos:column="67"/></name></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr></init></decl>)<pos:position pos:line="4" pos:column="71"/></condition><then pos:line="4" pos:column="71"> <block pos:line="4" pos:column="72">{
            <decl_stmt><decl><specifier pos:line="5" pos:column="13">static<pos:position pos:line="5" pos:column="19"/></specifier> <type><name pos:line="5" pos:column="20">char<pos:position pos:line="5" pos:column="24"/></name></type> <name><name pos:line="5" pos:column="25">tmpBuffer<pos:position pos:line="5" pos:column="34"/></name><index pos:line="5" pos:column="34">[<expr><literal type="number" pos:line="5" pos:column="35">256<pos:position pos:line="5" pos:column="38"/></literal></expr>]<pos:position pos:line="5" pos:column="39"/></index></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt> <comment type="line" pos:line="5" pos:column="41">// A temporary buffer</comment>
            <expr_stmt><expr><call><name><name pos:line="6" pos:column="13">Ssl<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">::<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">asn1timeToString<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">tm<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">tmpBuffer<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="50">sizeof<argument_list pos:line="6" pos:column="56">(<argument><expr><name pos:line="6" pos:column="57">tmpBuffer<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
            <return pos:line="7" pos:column="13">return <expr><name pos:line="7" pos:column="20">tmpBuffer<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></return>
        }<pos:position pos:line="8" pos:column="10"/></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <return pos:line="10" pos:column="5">return <expr><literal type="string" pos:line="10" pos:column="12">"[Not available]"<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

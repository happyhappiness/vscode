<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4839_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">storeCossMemBufUnlock<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name><name pos:line="2" pos:column="36">StoreIOState<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">Pointer<pos:position pos:line="2" pos:column="57"/></name></name></type> <name pos:line="2" pos:column="58">sio<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CossMemBuf<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">storeCossFilenoToMembuf<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name><name pos:line="4" pos:column="45">sio<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">swap_filen<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CossState<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">cstate<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><cast type="dynamic" pos:line="5" pos:column="25">dynamic_cast<argument_list type="generic" pos:line="5" pos:column="37">&lt;<argument><expr><name pos:line="5" pos:column="38">CossState<pos:position pos:line="5" pos:column="47"/></name> <operator pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="53"/></argument_list><argument_list pos:line="5" pos:column="50">(<argument><expr><call><name><name pos:line="5" pos:column="51">sio<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="55">getRaw<pos:position pos:line="5" pos:column="61"/></name></name><argument_list pos:line="5" pos:column="61">()<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">NULL<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">t<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">79<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">3<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"storeCossMemBufUnlock: unlocking "<pos:position pos:line="10" pos:column="54"/></literal> <operator pos:line="10" pos:column="55">&lt;&lt;<pos:position pos:line="10" pos:column="63"/></operator> <name pos:line="10" pos:column="58">t<pos:position pos:line="10" pos:column="59"/></name> <operator pos:line="10" pos:column="60">&lt;&lt;<pos:position pos:line="10" pos:column="68"/></operator> <literal type="string" pos:line="10" pos:column="63">", lockcount "<pos:position pos:line="10" pos:column="77"/></literal> <operator pos:line="10" pos:column="78">&lt;&lt;<pos:position pos:line="10" pos:column="86"/></operator> <name><name pos:line="10" pos:column="81">t<pos:position pos:line="10" pos:column="82"/></name><operator pos:line="10" pos:column="82">-&gt;<pos:position pos:line="10" pos:column="87"/></operator><name pos:line="10" pos:column="84">lockcount<pos:position pos:line="10" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="95"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">--<pos:position pos:line="12" pos:column="7"/></operator> <name><name pos:line="12" pos:column="8">t<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">lockcount<pos:position pos:line="12" pos:column="20"/></name></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">cstate<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">locked_membuf<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">NULL<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">t<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">maybeWrite<pos:position pos:line="16" pos:column="18"/></name></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">this<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6737_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiTry<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">addElement<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">ESIElement<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">Pointer<pos:position pos:line="2" pos:column="39"/></name></name></type> <name pos:line="2" pos:column="40">element<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">86<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"esiTryAdd: Try "<pos:position pos:line="4" pos:column="36"/></literal> <operator pos:line="4" pos:column="37">&lt;&lt;<pos:position pos:line="4" pos:column="45"/></operator> <name pos:line="4" pos:column="40">this<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">&lt;&lt;<pos:position pos:line="4" pos:column="53"/></operator> <literal type="string" pos:line="4" pos:column="48">" adding element "<pos:position pos:line="4" pos:column="66"/></literal> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator>
           <call><name><name pos:line="5" pos:column="12">element<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">getRaw<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><cast type="dynamic" pos:line="7" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="7" pos:column="21">&lt;<argument><expr><name pos:line="7" pos:column="22">esiLiteral<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="37"/></argument_list><argument_list pos:line="7" pos:column="34">(<argument><expr><call><name><name pos:line="7" pos:column="35">element<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">getRaw<pos:position pos:line="7" pos:column="49"/></name></name><argument_list pos:line="7" pos:column="49">()<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></cast></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
        <comment type="block" pos:line="8" pos:column="9">/* Swallow whitespace */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">86<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">5<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"esiTryAdd: Try "<pos:position pos:line="9" pos:column="40"/></literal> <operator pos:line="9" pos:column="41">&lt;&lt;<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="44">this<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">&lt;&lt;<pos:position pos:line="9" pos:column="57"/></operator> <literal type="string" pos:line="9" pos:column="52">" skipping whitespace "<pos:position pos:line="9" pos:column="75"/></literal> <operator pos:line="9" pos:column="76">&lt;&lt;<pos:position pos:line="9" pos:column="84"/></operator> <call><name><name pos:line="9" pos:column="79">element<pos:position pos:line="9" pos:column="86"/></name><operator pos:line="9" pos:column="86">.<pos:position pos:line="9" pos:column="87"/></operator><name pos:line="9" pos:column="87">getRaw<pos:position pos:line="9" pos:column="93"/></name></name><argument_list pos:line="9" pos:column="93">()<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="97"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">true<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><cast type="dynamic" pos:line="13" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="13" pos:column="21">&lt;<argument><expr><name pos:line="13" pos:column="22">esiAttempt<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="37"/></argument_list><argument_list pos:line="13" pos:column="34">(<argument><expr><call><name><name pos:line="13" pos:column="35">element<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">getRaw<pos:position pos:line="13" pos:column="49"/></name></name><argument_list pos:line="13" pos:column="49">()<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></cast></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name><name pos:line="14" pos:column="13">attempt<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">getRaw<pos:position pos:line="14" pos:column="27"/></name></name><argument_list pos:line="14" pos:column="27">()<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">86<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">DBG_IMPORTANT<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"esiTryAdd: Failed for "<pos:position pos:line="15" pos:column="63"/></literal> <operator pos:line="15" pos:column="64">&lt;&lt;<pos:position pos:line="15" pos:column="72"/></operator> <name pos:line="15" pos:column="67">this<pos:position pos:line="15" pos:column="71"/></name> <operator pos:line="15" pos:column="72">&lt;&lt;<pos:position pos:line="15" pos:column="80"/></operator> <literal type="string" pos:line="15" pos:column="75">" - try allready has an attempt node (section 3.4)"<pos:position pos:line="15" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="128"/></expr_stmt>
            <return pos:line="16" pos:column="13">return <expr><literal type="boolean" pos:line="16" pos:column="20">false<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="19" pos:column="9">attempt<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">element<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">true<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><cast type="dynamic" pos:line="23" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="23" pos:column="21">&lt;<argument><expr><name pos:line="23" pos:column="22">esiExcept<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="23" pos:column="36"/></argument_list><argument_list pos:line="23" pos:column="33">(<argument><expr><call><name><name pos:line="23" pos:column="34">element<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">getRaw<pos:position pos:line="23" pos:column="48"/></name></name><argument_list pos:line="23" pos:column="48">()<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></cast></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52"> <block pos:line="23" pos:column="53">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name><name pos:line="24" pos:column="13">except<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">getRaw<pos:position pos:line="24" pos:column="26"/></name></name><argument_list pos:line="24" pos:column="26">()<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">86<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">DBG_IMPORTANT<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"esiTryAdd: Failed for "<pos:position pos:line="25" pos:column="63"/></literal> <operator pos:line="25" pos:column="64">&lt;&lt;<pos:position pos:line="25" pos:column="72"/></operator> <name pos:line="25" pos:column="67">this<pos:position pos:line="25" pos:column="71"/></name> <operator pos:line="25" pos:column="72">&lt;&lt;<pos:position pos:line="25" pos:column="80"/></operator> <literal type="string" pos:line="25" pos:column="75">" - try already has an except node (section 3.4)"<pos:position pos:line="25" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="126"/></expr_stmt>
            <return pos:line="26" pos:column="13">return <expr><literal type="boolean" pos:line="26" pos:column="20">false<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="29" pos:column="9">except<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">element<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><literal type="boolean" pos:line="30" pos:column="16">true<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">debugs<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="number" pos:line="33" pos:column="12">86<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="16">DBG_IMPORTANT<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="31">"esiTryAdd: Failed to add element "<pos:position pos:line="33" pos:column="66"/></literal> <operator pos:line="33" pos:column="67">&lt;&lt;<pos:position pos:line="33" pos:column="75"/></operator> <call><name><name pos:line="33" pos:column="70">element<pos:position pos:line="33" pos:column="77"/></name><operator pos:line="33" pos:column="77">.<pos:position pos:line="33" pos:column="78"/></operator><name pos:line="33" pos:column="78">getRaw<pos:position pos:line="33" pos:column="84"/></name></name><argument_list pos:line="33" pos:column="84">()<pos:position pos:line="33" pos:column="86"/></argument_list></call> <operator pos:line="33" pos:column="87">&lt;&lt;<pos:position pos:line="33" pos:column="95"/></operator> <literal type="string" pos:line="33" pos:column="90">" to try "<pos:position pos:line="33" pos:column="100"/></literal> <operator pos:line="33" pos:column="101">&lt;&lt;<pos:position pos:line="33" pos:column="109"/></operator> <name pos:line="33" pos:column="104">this<pos:position pos:line="33" pos:column="108"/></name> <operator pos:line="33" pos:column="109">&lt;&lt;<pos:position pos:line="33" pos:column="117"/></operator> <literal type="string" pos:line="33" pos:column="112">", incorrect element type (see section 3.4)"<pos:position pos:line="33" pos:column="156"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="158"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><literal type="boolean" pos:line="34" pos:column="12">false<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

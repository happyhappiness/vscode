<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6271_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">openCompleted<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">Ipc<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">StrandSearchResponse<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier></type> <name pos:line="2" pos:column="65">response<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">diskId<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&lt;<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt> <comment type="line" pos:line="4" pos:column="23">// we do not know our disker yet</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">response<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">79<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_IMPORTANT<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"ERROR: "<pos:position pos:line="7" pos:column="44"/></literal> <operator pos:line="7" pos:column="45">&lt;&lt;<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="48">dbName<pos:position pos:line="7" pos:column="54"/></name> <operator pos:line="7" pos:column="55">&lt;&lt;<pos:position pos:line="7" pos:column="63"/></operator> <literal type="string" pos:line="7" pos:column="58">" communication "<pos:position pos:line="7" pos:column="75"/></literal> <operator pos:line="7" pos:column="76">&lt;&lt;<pos:position pos:line="7" pos:column="84"/></operator>
               <literal type="string" pos:line="8" pos:column="16">"channel establishment timeout"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">error_<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="boolean" pos:line="9" pos:column="18">true<pos:position pos:line="9" pos:column="22"/></literal></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else <block pos:line="10" pos:column="12">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">diskId<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name><name pos:line="11" pos:column="18">response<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">strand<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">.<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">kidId<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">diskId<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&gt;=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25"> <block pos:line="12" pos:column="26">{
            <decl_stmt><decl><type><specifier pos:line="13" pos:column="13">const<pos:position pos:line="13" pos:column="18"/></specifier> <name pos:line="13" pos:column="19">bool<pos:position pos:line="13" pos:column="23"/></name></type> <name pos:line="13" pos:column="24">inserted<pos:position pos:line="13" pos:column="32"/></name> <init pos:line="13" pos:column="33">=
                <expr><call><name><name pos:line="14" pos:column="17">IpcIoFiles<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">insert<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">(<argument><expr><call><name><name pos:line="14" pos:column="35">std<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">::<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">make_pair<pos:position pos:line="14" pos:column="49"/></name></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">diskId<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">this<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call><operator pos:line="14" pos:column="64">.<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="65">second<pos:position pos:line="14" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="72"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">Must<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">inserted<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">error_<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="boolean" pos:line="17" pos:column="22">true<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">79<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">DBG_IMPORTANT<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"ERROR: no disker claimed "<pos:position pos:line="18" pos:column="66"/></literal> <operator pos:line="18" pos:column="67">&lt;&lt;<pos:position pos:line="18" pos:column="75"/></operator>
                   <literal type="string" pos:line="19" pos:column="20">"responsibility for "<pos:position pos:line="19" pos:column="41"/></literal> <operator pos:line="19" pos:column="42">&lt;&lt;<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="45">dbName<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">ioRequestor<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">ioCompletedNotification<pos:position pos:line="23" pos:column="41"/></name></name><argument_list pos:line="23" pos:column="41">()<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

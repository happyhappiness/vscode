<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6086_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dereference<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">C<pos:position pos:line="1" pos:column="19"/></name> <specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">newP<pos:position pos:line="1" pos:column="31"/></name> <init pos:line="1" pos:column="32">= <expr><name pos:line="1" pos:column="34">NULL<pos:position pos:line="1" pos:column="38"/></name></expr></init></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <block pos:line="1" pos:column="40">{
        <comment type="block" pos:line="2" pos:column="9">/* Setting p_ first is important:
        * we may be freed ourselves as a result of
        * delete p_;
        */</comment>
        <function_decl><type><name pos:line="6" pos:column="9">C<pos:position pos:line="6" pos:column="10"/></name> <specifier pos:line="6" pos:column="11">const<pos:position pos:line="6" pos:column="16"/></specifier></type> (<modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier><name pos:line="6" pos:column="19">tempP_<pos:position pos:line="6" pos:column="25"/></name>) <parameter_list pos:line="6" pos:column="27">(<parameter><decl><type><name pos:line="6" pos:column="28">p_<pos:position pos:line="6" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="6" pos:column="31"/></parameter_list>;<pos:position pos:line="6" pos:column="32"/></function_decl>
        <expr_stmt><expr><name pos:line="7" pos:column="9">p_<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">newP<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">tempP_<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&amp;&amp;<pos:position pos:line="9" pos:column="30"/></operator> <call><name><name pos:line="9" pos:column="23">tempP_<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">unlock<pos:position pos:line="9" pos:column="37"/></name></name><argument_list pos:line="9" pos:column="37">()<pos:position pos:line="9" pos:column="39"/></argument_list></call> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="13">delete<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">tempP_<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3561_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">packHead<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">MemBuf<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">&amp;<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="50">httpBuf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">HttpMsg<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">head<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">head<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">-&gt;<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="11">packInto<pos:position pos:line="3" pos:column="19"/></name></name><argument_list pos:line="3" pos:column="19">(<argument><expr><operator pos:line="3" pos:column="20">&amp;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="21">httpBuf<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="3" pos:column="30">true<pos:position pos:line="3" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

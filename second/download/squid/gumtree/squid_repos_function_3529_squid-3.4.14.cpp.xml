<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3529_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">lengthToSend<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name><name pos:line="2" pos:column="35">Range<pos:position pos:line="2" pos:column="40"/></name><argument_list type="generic" pos:line="2" pos:column="40">&lt;<argument><expr><name pos:line="2" pos:column="41">int64_t<pos:position pos:line="2" pos:column="48"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="52"/></argument_list></name> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">available<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*the size of available range can always fit in a size_t type*/</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">maximum<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">size_t<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><call><name><name pos:line="5" pos:column="30">available<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">size<pos:position pos:line="5" pos:column="44"/></name></name><argument_list pos:line="5" pos:column="44">()<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">http<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">request<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">range<pos:position pos:line="7" pos:column="30"/></name></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">maximum<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><call><name pos:line="10" pos:column="13">canPackMoreRanges<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">http<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">range_iter<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">debt<pos:position pos:line="12" pos:column="30"/></name></name><argument_list pos:line="12" pos:column="30">()<pos:position pos:line="12" pos:column="32"/></argument_list></call> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="36">-<pos:position pos:line="12" pos:column="37"/></operator><literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">maximum<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><call><name><name pos:line="15" pos:column="13">http<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">range_iter<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">debt<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">&gt;<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* TODO this + the last line could be a range intersection calculation */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">available<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">start<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">&lt;<pos:position pos:line="18" pos:column="29"/></operator> <call><name><name pos:line="18" pos:column="27">http<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">range_iter<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">.<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">currentSpec<pos:position pos:line="18" pos:column="55"/></name></name><argument_list pos:line="18" pos:column="55">()<pos:position pos:line="18" pos:column="57"/></argument_list></call><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">offset<pos:position pos:line="18" pos:column="65"/></name></expr>)<pos:position pos:line="18" pos:column="66"/></condition><then pos:line="18" pos:column="66">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><call><name pos:line="21" pos:column="12">min<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><call><name><name pos:line="21" pos:column="16">http<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">range_iter<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">debt<pos:position pos:line="21" pos:column="37"/></name></name><argument_list pos:line="21" pos:column="37">()<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">(<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">int64_t<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">)<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">maximum<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

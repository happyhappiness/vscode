<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2362_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsParseWIN32SearchList<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">Separator<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HKEY<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">hndKey<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">RegOpenKeyEx<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">HKEY_LOCAL_MACHINE<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">REG_TCPIP_PARA<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="58">0<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">KEY_QUERY_VALUE<pos:position pos:line="8" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="78">&amp;<pos:position pos:line="8" pos:column="83"/></operator><name pos:line="8" pos:column="79">hndKey<pos:position pos:line="8" pos:column="85"/></name></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call> <operator pos:line="8" pos:column="87">==<pos:position pos:line="8" pos:column="89"/></operator> <name pos:line="8" pos:column="90">ERROR_SUCCESS<pos:position pos:line="8" pos:column="103"/></name></expr>)<pos:position pos:line="8" pos:column="104"/></condition><then pos:line="8" pos:column="104"> <block pos:line="8" pos:column="105">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">DWORD<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">Type<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">DWORD<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">Size<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">LONG<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">Result<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">Result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">RegQueryValueEx<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">hndKey<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"Domain"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">NULL<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="58">&amp;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="59">Type<pos:position pos:line="12" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">NULL<pos:position pos:line="12" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="71">&amp;<pos:position pos:line="12" pos:column="76"/></operator><name pos:line="12" pos:column="72">Size<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></expr_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">Result<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">ERROR_SUCCESS<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">&amp;&amp;<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="40">Size<pos:position pos:line="14" pos:column="44"/></name></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">t<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">char<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">xmalloc<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">Size<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">RegQueryValueEx<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">hndKey<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="37">"Domain"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">NULL<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="53">&amp;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="54">Type<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">(<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">LPBYTE<pos:position pos:line="16" pos:column="67"/></name><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator> <name pos:line="16" pos:column="69">t<pos:position pos:line="16" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="72">&amp;<pos:position pos:line="16" pos:column="77"/></operator><name pos:line="16" pos:column="73">Size<pos:position pos:line="16" pos:column="77"/></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">78<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">DBG_IMPORTANT<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">"Adding domain "<pos:position pos:line="17" pos:column="55"/></literal> <operator pos:line="17" pos:column="56">&lt;&lt;<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="59">t<pos:position pos:line="17" pos:column="60"/></name> <operator pos:line="17" pos:column="61">&lt;&lt;<pos:position pos:line="17" pos:column="69"/></operator> <literal type="string" pos:line="17" pos:column="64">" from Registry"<pos:position pos:line="17" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">idnsAddPathComponent<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">t<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">xfree<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">t<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="21" pos:column="9">Result<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">RegQueryValueEx<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">hndKey<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"SearchList"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">NULL<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="62">&amp;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="63">Type<pos:position pos:line="21" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">NULL<pos:position pos:line="21" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="75">&amp;<pos:position pos:line="21" pos:column="80"/></operator><name pos:line="21" pos:column="76">Size<pos:position pos:line="21" pos:column="80"/></name></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="82"/></expr_stmt>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">Result<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">==<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">ERROR_SUCCESS<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&amp;&amp;<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="40">Size<pos:position pos:line="23" pos:column="44"/></name></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">t<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">char<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">*<pos:position pos:line="24" pos:column="24"/></operator><operator pos:line="24" pos:column="24">)<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">xmalloc<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">Size<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">RegQueryValueEx<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">hndKey<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="37">"SearchList"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">NULL<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="57">&amp;<pos:position pos:line="25" pos:column="62"/></operator><name pos:line="25" pos:column="58">Type<pos:position pos:line="25" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="64">(<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="65">LPBYTE<pos:position pos:line="25" pos:column="71"/></name><operator pos:line="25" pos:column="71">)<pos:position pos:line="25" pos:column="72"/></operator> <name pos:line="25" pos:column="73">t<pos:position pos:line="25" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="76">&amp;<pos:position pos:line="25" pos:column="81"/></operator><name pos:line="25" pos:column="77">Size<pos:position pos:line="25" pos:column="81"/></name></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">token<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">strtok<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">t<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">Separator<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

            <while pos:line="28" pos:column="13">while <condition pos:line="28" pos:column="19">(<expr><name pos:line="28" pos:column="20">token<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition> <block pos:line="28" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">idnsAddPathComponent<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">token<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">debugs<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="number" pos:line="30" pos:column="24">78<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">DBG_IMPORTANT<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="43">"Adding domain "<pos:position pos:line="30" pos:column="59"/></literal> <operator pos:line="30" pos:column="60">&lt;&lt;<pos:position pos:line="30" pos:column="68"/></operator> <name pos:line="30" pos:column="63">token<pos:position pos:line="30" pos:column="68"/></name> <operator pos:line="30" pos:column="69">&lt;&lt;<pos:position pos:line="30" pos:column="77"/></operator> <literal type="string" pos:line="30" pos:column="72">" from Registry"<pos:position pos:line="30" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">token<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <call><name pos:line="31" pos:column="25">strtok<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">NULL<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">Separator<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">xfree<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">t<pos:position pos:line="33" pos:column="20"/></name></expr></argument>)<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">RegCloseKey<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">hndKey<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">npc<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">==<pos:position pos:line="38" pos:column="15"/></operator> <literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal> <operator pos:line="38" pos:column="18">&amp;&amp;<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="21">(<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">t<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <operator pos:line="38" pos:column="26">(<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">char<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">*<pos:position pos:line="38" pos:column="33"/></operator><operator pos:line="38" pos:column="33">)<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="35">getMyHostname<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">()<pos:position pos:line="38" pos:column="50"/></argument_list></call><operator pos:line="38" pos:column="50">)<pos:position pos:line="38" pos:column="51"/></operator></expr>)<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52"> <block pos:line="38" pos:column="53">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">t<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">strchr<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">t<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="23">'.'<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">t<pos:position pos:line="40" pos:column="14"/></name></expr>)<pos:position pos:line="40" pos:column="15"/></condition><then pos:line="40" pos:column="15">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="13">idnsAddPathComponent<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">t<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">+<pos:position pos:line="41" pos:column="37"/></operator> <literal type="number" pos:line="41" pos:column="38">1<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

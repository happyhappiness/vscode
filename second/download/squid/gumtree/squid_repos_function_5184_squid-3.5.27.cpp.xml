<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5184_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Rebuild<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">start<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// in SMP mode, only the disker is responsible for populating the map</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">UsingSmp<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">()<pos:position pos:line="5" pos:column="19"/></argument_list></call> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="23">!<pos:position pos:line="5" pos:column="24"/></operator><call><name pos:line="5" pos:column="24">IamDiskProcess<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41"> <block pos:line="5" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">47<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"Non-disker skips rebuilding of cache_dir #"<pos:position pos:line="6" pos:column="67"/></literal> <operator pos:line="6" pos:column="68">&lt;&lt;<pos:position pos:line="6" pos:column="76"/></operator>
               <name><name pos:line="7" pos:column="16">sd<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">index<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">&lt;&lt;<pos:position pos:line="7" pos:column="34"/></operator> <literal type="string" pos:line="7" pos:column="29">" from "<pos:position pos:line="7" pos:column="37"/></literal> <operator pos:line="7" pos:column="38">&lt;&lt;<pos:position pos:line="7" pos:column="46"/></operator> <name><name pos:line="7" pos:column="41">sd<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">filePath<pos:position pos:line="7" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">mustStop<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><literal type="string" pos:line="8" pos:column="18">"non-disker"<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">47<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="16">DBG_IMPORTANT<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"Loading cache_dir #"<pos:position pos:line="12" pos:column="52"/></literal> <operator pos:line="12" pos:column="53">&lt;&lt;<pos:position pos:line="12" pos:column="61"/></operator> <name><name pos:line="12" pos:column="56">sd<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">index<pos:position pos:line="12" pos:column="65"/></name></name> <operator pos:line="12" pos:column="66">&lt;&lt;<pos:position pos:line="12" pos:column="74"/></operator>
           <literal type="string" pos:line="13" pos:column="12">" from "<pos:position pos:line="13" pos:column="20"/></literal> <operator pos:line="13" pos:column="21">&lt;&lt;<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="24">sd<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">filePath<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">fd<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">file_open<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name><name pos:line="15" pos:column="20">sd<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">filePath<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">O_RDONLY<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">|<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">O_BINARY<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">fd<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">&lt;<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">failure<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="string" pos:line="17" pos:column="17">"cannot open db"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">errno<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">hdrBuf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name><name pos:line="19" pos:column="17">SwapDir<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">::<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">HeaderSize<pos:position pos:line="19" pos:column="36"/></name></name></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">read<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">fd<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">hdrBuf<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="26">sizeof<argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">hdrBuf<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">!=<pos:position pos:line="20" pos:column="44"/></operator> <name><name pos:line="20" pos:column="45">SwapDir<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">::<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">HeaderSize<pos:position pos:line="20" pos:column="64"/></name></name></expr>)<pos:position pos:line="20" pos:column="65"/></condition><then pos:line="20" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">failure<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><literal type="string" pos:line="21" pos:column="17">"cannot read db header"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">errno<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="23" pos:column="5">// slot prefix of SM_PAGE_SIZE should fit both core entry header and ours</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><sizeof pos:line="24" pos:column="12">sizeof<argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">DbCellHeader<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></sizeof> <operator pos:line="24" pos:column="33">&lt;<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="35">SM_PAGE_SIZE<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">buf<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">init<pos:position pos:line="25" pos:column="13"/></name></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">SM_PAGE_SIZE<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">SM_PAGE_SIZE<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">dbOffset<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name><name pos:line="27" pos:column="16">SwapDir<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">::<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">HeaderSize<pos:position pos:line="27" pos:column="35"/></name></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">entries<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <operator pos:line="29" pos:column="15">new<pos:position pos:line="29" pos:column="18"/></operator> <name><name pos:line="29" pos:column="19">LoadingEntry<pos:position pos:line="29" pos:column="31"/></name><index pos:line="29" pos:column="31">[<expr><name pos:line="29" pos:column="32">dbSlotLimit<pos:position pos:line="29" pos:column="43"/></name></expr>]<pos:position pos:line="29" pos:column="44"/></index></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">checkpoint<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">()<pos:position pos:line="31" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

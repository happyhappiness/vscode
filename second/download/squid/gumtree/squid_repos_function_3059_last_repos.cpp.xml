<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3059_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">getSslContextDone<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name><name pos:line="2" pos:column="34">Security<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">ContextPointer<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">ctx<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">bool<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">isNew<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Try to add generated ssl context to storage.</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">port<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">generateHostCertificates<pos:position pos:line="5" pos:column="39"/></name></name> <operator pos:line="5" pos:column="40">&amp;&amp;<pos:position pos:line="5" pos:column="50"/></operator> <name pos:line="5" pos:column="43">isNew<pos:position pos:line="5" pos:column="48"/></name></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49"> <block pos:line="5" pos:column="50">{

        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ctx<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&amp;&amp;<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">signAlgorithm<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">==<pos:position pos:line="7" pos:column="37"/></operator> <name><name pos:line="7" pos:column="38">Ssl<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">::<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">algSignTrusted<pos:position pos:line="7" pos:column="57"/></name></name><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59"> <block pos:line="7" pos:column="60">{
            <expr_stmt><expr><call><name><name pos:line="8" pos:column="13">Ssl<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">chainCertificatesToSSLContext<pos:position pos:line="8" pos:column="47"/></name></name><argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">ctx<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="53">*<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">port<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then> <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><name pos:line="9" pos:column="20">signAlgorithm<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <name><name pos:line="9" pos:column="37">Ssl<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">::<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">algSignTrusted<pos:position pos:line="9" pos:column="56"/></name></name></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57"> <block pos:line="9" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">33<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">DBG_IMPORTANT<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"WARNING: can not add signing certificate to SSL context chain because SSL context chain is invalid!"<pos:position pos:line="10" pos:column="140"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="142"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if></elseif></if>
        <comment type="line" pos:line="12" pos:column="9">//else it is self-signed or untrusted do not attrach any certificate</comment>

        <decl_stmt><decl><type><name><name pos:line="14" pos:column="9">Ssl<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">::<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">LocalContextStorage<pos:position pos:line="14" pos:column="33"/></name></name> <modifier pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></modifier></type><name pos:line="14" pos:column="35">ssl_ctx_cache<pos:position pos:line="14" pos:column="48"/></name> <init pos:line="14" pos:column="49">= <expr><call><name><name pos:line="14" pos:column="51">Ssl<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">::<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">TheGlobalContextStorage<pos:position pos:line="14" pos:column="79"/></name><operator pos:line="14" pos:column="79">.<pos:position pos:line="14" pos:column="80"/></operator><name pos:line="14" pos:column="80">getLocalStorage<pos:position pos:line="14" pos:column="95"/></name></name><argument_list pos:line="14" pos:column="95">(<argument><expr><name><name pos:line="14" pos:column="96">port<pos:position pos:line="14" pos:column="100"/></name><operator pos:line="14" pos:column="100">-&gt;<pos:position pos:line="14" pos:column="105"/></operator><name pos:line="14" pos:column="102">s<pos:position pos:line="14" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="104"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="105"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">assert<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><call><name><name pos:line="15" pos:column="16">sslBumpCertKey<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">size<pos:position pos:line="15" pos:column="35"/></name></name><argument_list pos:line="15" pos:column="35">()<pos:position pos:line="15" pos:column="37"/></argument_list></call> <operator pos:line="15" pos:column="38">&gt;<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal> <operator pos:line="15" pos:column="42">&amp;&amp;<pos:position pos:line="15" pos:column="52"/></operator> <name><name pos:line="15" pos:column="45">sslBumpCertKey<pos:position pos:line="15" pos:column="59"/></name><index pos:line="15" pos:column="59">[<expr><literal type="number" pos:line="15" pos:column="60">0<pos:position pos:line="15" pos:column="61"/></literal></expr>]<pos:position pos:line="15" pos:column="62"/></index></name> <operator pos:line="15" pos:column="63">!=<pos:position pos:line="15" pos:column="65"/></operator> <literal type="char" pos:line="15" pos:column="66">'\0'<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">ctx<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">!<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">ssl_ctx_cache<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">||<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">!<pos:position pos:line="17" pos:column="36"/></operator><call><name><name pos:line="17" pos:column="36">ssl_ctx_cache<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">add<pos:position pos:line="17" pos:column="54"/></name></name><argument_list pos:line="17" pos:column="54">(<argument><expr><call><name><name pos:line="17" pos:column="55">sslBumpCertKey<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">.<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="70">termedBuf<pos:position pos:line="17" pos:column="79"/></name></name><argument_list pos:line="17" pos:column="79">()<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="83">new<pos:position pos:line="17" pos:column="86"/></operator> <call><name><name pos:line="17" pos:column="87">Security<pos:position pos:line="17" pos:column="95"/></name><operator pos:line="17" pos:column="95">::<pos:position pos:line="17" pos:column="97"/></operator><name pos:line="17" pos:column="97">ContextPointer<pos:position pos:line="17" pos:column="111"/></name></name><argument_list pos:line="17" pos:column="111">(<argument><expr><name pos:line="17" pos:column="112">ctx<pos:position pos:line="17" pos:column="115"/></name></expr></argument>)<pos:position pos:line="17" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="117"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="118"/></condition><then pos:line="17" pos:column="118"> <block pos:line="17" pos:column="119">{
                <comment type="line" pos:line="18" pos:column="17">// If it is not in storage delete after using. Else storage deleted it.</comment>
                <expr_stmt><expr><name><name pos:line="19" pos:column="17">fd_table<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[<expr><name><name pos:line="19" pos:column="26">clientConnection<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">fd<pos:position pos:line="19" pos:column="46"/></name></name></expr>]<pos:position pos:line="19" pos:column="47"/></index></name><operator pos:line="19" pos:column="47">.<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">dynamicTlsContext<pos:position pos:line="19" pos:column="65"/></name> <operator pos:line="19" pos:column="66">=<pos:position pos:line="19" pos:column="67"/></operator> <name pos:line="19" pos:column="68">ctx<pos:position pos:line="19" pos:column="71"/></name></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else <block pos:line="21" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">33<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">2<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">HERE<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="string" pos:line="22" pos:column="35">"Failed to generate SSL cert for "<pos:position pos:line="22" pos:column="69"/></literal> <operator pos:line="22" pos:column="70">&lt;&lt;<pos:position pos:line="22" pos:column="78"/></operator> <name pos:line="22" pos:column="73">sslConnectHostOrIp<pos:position pos:line="22" pos:column="91"/></name></expr></argument>)<pos:position pos:line="22" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="93"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="26" pos:column="5">// If generated ssl context = NULL, try to use static ssl context.</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">ctx<pos:position pos:line="27" pos:column="13"/></name></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14"> <block pos:line="27" pos:column="15">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">port<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">secure<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">.<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">staticContext<pos:position pos:line="28" pos:column="40"/></name></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <block pos:line="28" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">83<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">DBG_IMPORTANT<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"Closing "<pos:position pos:line="29" pos:column="49"/></literal> <operator pos:line="29" pos:column="50">&lt;&lt;<pos:position pos:line="29" pos:column="58"/></operator> <name><name pos:line="29" pos:column="53">clientConnection<pos:position pos:line="29" pos:column="69"/></name><operator pos:line="29" pos:column="69">-&gt;<pos:position pos:line="29" pos:column="74"/></operator><name pos:line="29" pos:column="71">remote<pos:position pos:line="29" pos:column="77"/></name></name> <operator pos:line="29" pos:column="78">&lt;&lt;<pos:position pos:line="29" pos:column="86"/></operator> <literal type="string" pos:line="29" pos:column="81">" as lacking TLS context"<pos:position pos:line="29" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="108"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">clientConnection<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">close<pos:position pos:line="30" pos:column="36"/></name></name><argument_list pos:line="30" pos:column="36">()<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
            <return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">33<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">5<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="27">"Using static TLS context."<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">ctx<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">port<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">secure<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">staticContext<pos:position pos:line="34" pos:column="45"/></name></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><call><name pos:line="38" pos:column="10">httpsCreate<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">clientConnection<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">ctx<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="45"/></condition><then pos:line="38" pos:column="45">
        <block type="pseudo"><return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="41" pos:column="5">// bumped intercepted conns should already have Config.Timeout.request set</comment>
    <comment type="line" pos:line="42" pos:column="5">// but forwarded connections may only have Config.Timeout.lifetime. [Re]set</comment>
    <comment type="line" pos:line="43" pos:column="5">// to make sure the connection does not get stuck on non-SSL clients.</comment>
    <typedef pos:line="44" pos:column="5">typedef <type><name><name pos:line="44" pos:column="13">CommCbMemFunT<pos:position pos:line="44" pos:column="26"/></name><argument_list type="generic" pos:line="44" pos:column="26">&lt;<argument><expr><name pos:line="44" pos:column="27">ConnStateData<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">CommTimeoutCbParams<pos:position pos:line="44" pos:column="61"/></name></expr></argument>&gt;<pos:position pos:line="44" pos:column="65"/></argument_list></name></type> <name pos:line="44" pos:column="63">TimeoutDialer<pos:position pos:line="44" pos:column="76"/></name>;<pos:position pos:line="44" pos:column="77"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="45" pos:column="5">AsyncCall<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">::<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">Pointer<pos:position pos:line="45" pos:column="23"/></name></name></type> <name pos:line="45" pos:column="24">timeoutCall<pos:position pos:line="45" pos:column="35"/></name> <init pos:line="45" pos:column="36">= <expr><call><name pos:line="45" pos:column="38">JobCallback<pos:position pos:line="45" pos:column="49"/></name><argument_list pos:line="45" pos:column="49">(<argument><expr><literal type="number" pos:line="45" pos:column="50">33<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="54">5<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">TimeoutDialer<pos:position pos:line="45" pos:column="70"/></name></expr></argument>,
                                     <argument><expr><name pos:line="46" pos:column="38">this<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="44">ConnStateData<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">::<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="59">requestTimeout<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">commSetConnTimeout<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">clientConnection<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="42">Config<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">.<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">Timeout<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">.<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="57">request<pos:position pos:line="47" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="66">timeoutCall<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">switchedToHttps_<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <literal type="boolean" pos:line="49" pos:column="24">true<pos:position pos:line="49" pos:column="28"/></literal></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="51" pos:column="5">auto<pos:position pos:line="51" pos:column="9"/></name></type> <name pos:line="51" pos:column="10">ssl<pos:position pos:line="51" pos:column="13"/></name> <init pos:line="51" pos:column="14">= <expr><name><name pos:line="51" pos:column="16">fd_table<pos:position pos:line="51" pos:column="24"/></name><index pos:line="51" pos:column="24">[<expr><name><name pos:line="51" pos:column="25">clientConnection<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">fd<pos:position pos:line="51" pos:column="45"/></name></name></expr>]<pos:position pos:line="51" pos:column="46"/></index></name><operator pos:line="51" pos:column="46">.<pos:position pos:line="51" pos:column="47"/></operator><call><name><name pos:line="51" pos:column="47">ssl<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">.<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="51">get<pos:position pos:line="51" pos:column="54"/></name></name><argument_list pos:line="51" pos:column="54">()<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">BIO<pos:position pos:line="52" pos:column="8"/></name> <modifier pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></modifier></type><name pos:line="52" pos:column="10">b<pos:position pos:line="52" pos:column="11"/></name> <init pos:line="52" pos:column="12">= <expr><call><name pos:line="52" pos:column="14">SSL_get_rbio<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">ssl<pos:position pos:line="52" pos:column="30"/></name></expr></argument>)<pos:position pos:line="52" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="53" pos:column="5">Ssl<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">::<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">ClientBio<pos:position pos:line="53" pos:column="19"/></name></name> <modifier pos:line="53" pos:column="20">*<pos:position pos:line="53" pos:column="21"/></modifier></type><name pos:line="53" pos:column="21">bio<pos:position pos:line="53" pos:column="24"/></name> <init pos:line="53" pos:column="25">= <expr><cast type="static" pos:line="53" pos:column="27">static_cast<argument_list type="generic" pos:line="53" pos:column="38">&lt;<argument><expr><name><name pos:line="53" pos:column="39">Ssl<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">::<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="44">ClientBio<pos:position pos:line="53" pos:column="53"/></name></name> <operator pos:line="53" pos:column="54">*<pos:position pos:line="53" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="53" pos:column="59"/></argument_list><argument_list pos:line="53" pos:column="56">(<argument><expr><call><name pos:line="53" pos:column="57">BIO_get_data<pos:position pos:line="53" pos:column="69"/></name><argument_list pos:line="53" pos:column="69">(<argument><expr><name pos:line="53" pos:column="70">b<pos:position pos:line="53" pos:column="71"/></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="53" pos:column="74"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="54" pos:column="5">bio<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">setReadBufData<pos:position pos:line="54" pos:column="24"/></name></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">inBuf<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">inBuf<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">clear<pos:position pos:line="55" pos:column="16"/></name></name><argument_list pos:line="55" pos:column="16">()<pos:position pos:line="55" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">clientNegotiateSSL<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name><name pos:line="56" pos:column="24">clientConnection<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">fd<pos:position pos:line="56" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">this<pos:position pos:line="56" pos:column="50"/></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

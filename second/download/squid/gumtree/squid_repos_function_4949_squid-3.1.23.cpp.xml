<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4949_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">authDigestUserShutdown<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" format="doxygen" pos:line="4" pos:column="5">/** \todo Future work: the auth framework could flush it's cache */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">AuthUserHashPointer<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">usernamehash<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">AuthUser<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">auth_user<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">hash_first<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">proxy_auth_username_cache<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">usernamehash<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">AuthUserHashPointer<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator> <call><name pos:line="9" pos:column="53">hash_next<pos:position pos:line="9" pos:column="62"/></name><argument_list pos:line="9" pos:column="62">(<argument><expr><name pos:line="9" pos:column="63">proxy_auth_username_cache<pos:position pos:line="9" pos:column="88"/></name></expr></argument>)<pos:position pos:line="9" pos:column="89"/></argument_list></call><operator pos:line="9" pos:column="89">)<pos:position pos:line="9" pos:column="90"/></operator><operator pos:line="9" pos:column="90">)<pos:position pos:line="9" pos:column="91"/></operator></expr>)<pos:position pos:line="9" pos:column="92"/></condition> <block pos:line="9" pos:column="93">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">auth_user<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name><name pos:line="10" pos:column="21">usernamehash<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">user<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">strcmp<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><call><name><name pos:line="12" pos:column="20">auth_user<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">config<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">type<pos:position pos:line="12" pos:column="43"/></name></name><argument_list pos:line="12" pos:column="43">()<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="47">"digest"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call> <operator pos:line="12" pos:column="57">==<pos:position pos:line="12" pos:column="59"/></operator> <literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr>)<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="13">auth_user<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">unlock<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">()<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></while>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

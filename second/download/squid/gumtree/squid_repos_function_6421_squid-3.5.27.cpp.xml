<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6421_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CachePeer<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">netdbClosestParent<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">HttpRequest<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">request<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ICMP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CachePeer<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">netdbEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">n<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">ipcache_addrs<pos:position pos:line="7" pos:column="24"/></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ia<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">net_db_peer<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">h<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">n<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">netdbLookupHost<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><call><name><name pos:line="10" pos:column="25">request<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">GetHost<pos:position pos:line="10" pos:column="41"/></name></name><argument_list pos:line="10" pos:column="41">()<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">NULL<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">n<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
        <comment type="block" pos:line="13" pos:column="9">/* try IP addr */</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">ia<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">ipcache_gethostbyname<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><call><name><name pos:line="14" pos:column="36">request<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">GetHost<pos:position pos:line="14" pos:column="52"/></name></name><argument_list pos:line="14" pos:column="52">()<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="56">0<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">!=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">ia<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="13">n<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">netdbLookupAddr<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">ia<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">in_addrs<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name><name pos:line="17" pos:column="46">ia<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">cur<pos:position pos:line="17" pos:column="53"/></name></name></expr>]<pos:position pos:line="17" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">NULL<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">n<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><literal type="number" pos:line="23" pos:column="9">0<pos:position pos:line="23" pos:column="10"/></literal> <operator pos:line="23" pos:column="11">==<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">n<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">n_peers<pos:position pos:line="23" pos:column="24"/></name></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
        <block type="pseudo"><return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">n<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">last_use_time<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">squid_curtime<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/*
     * Find the parent with the least RTT to the origin server.
     * Make sure we don't return a parent who is farther away than
     * we are.  Note, the n-&gt;peers list is pre-sorted by RTT.
     */</comment>
    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><expr><name pos:line="33" pos:column="10">i<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></init> <condition><expr><name pos:line="33" pos:column="17">i<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&lt;<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="21">n<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">n_peers<pos:position pos:line="33" pos:column="31"/></name></name></expr>;<pos:position pos:line="33" pos:column="32"/></condition> <incr><expr><operator pos:line="33" pos:column="33">++<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">i<pos:position pos:line="33" pos:column="36"/></name></expr></incr>)<pos:position pos:line="33" pos:column="37"/></control> <block pos:line="33" pos:column="38">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">h<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <operator pos:line="34" pos:column="13">&amp;<pos:position pos:line="34" pos:column="18"/></operator><name><name pos:line="34" pos:column="14">n<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">peers<pos:position pos:line="34" pos:column="22"/></name><index pos:line="34" pos:column="22">[<expr><name pos:line="34" pos:column="23">i<pos:position pos:line="34" pos:column="24"/></name></expr>]<pos:position pos:line="34" pos:column="25"/></index></name></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">n<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">rtt<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">&gt;<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24">
            <block type="pseudo"><if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">n<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">rtt<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">&lt;<pos:position pos:line="37" pos:column="28"/></operator> <name><name pos:line="37" pos:column="26">h<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">rtt<pos:position pos:line="37" pos:column="32"/></name></name></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
                <block type="pseudo"><break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break></block></then></if></block></then></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">p<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">peerFindByName<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">h<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">peername<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">NULL<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">p<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23">      <comment type="block" pos:line="42" pos:column="29">/* not found */</comment>
            <block type="pseudo"><continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue></block></then></if>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">neighborType<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">p<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">request<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call> <operator pos:line="45" pos:column="38">!=<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">PEER_PARENT<pos:position pos:line="45" pos:column="52"/></name></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53">
            <block type="pseudo"><continue pos:line="46" pos:column="13">continue;<pos:position pos:line="46" pos:column="22"/></continue></block></then></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">peerHTTPOkay<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">p<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">request<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39">  <comment type="block" pos:line="48" pos:column="41">/* not allowed */</comment>
            <block type="pseudo"><continue pos:line="49" pos:column="13">continue;<pos:position pos:line="49" pos:column="22"/></continue></block></then></if>

        <return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">p<pos:position pos:line="51" pos:column="17"/></name></expr>;<pos:position pos:line="51" pos:column="18"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></for>

<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">NULL<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

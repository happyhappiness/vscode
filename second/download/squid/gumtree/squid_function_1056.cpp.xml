<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1056.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">ReadWriteLockStats<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">dump<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">StoreEntry<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">e<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="24">e<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"Available locks: %9d\n"<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="53">count<pos:position pos:line="4" pos:column="58"/></name></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="60"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">count<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">storeAppendPrintf<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">e<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="27">"Reading: %9d %6.2f%%\n"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>,
                      <argument><expr><name pos:line="10" pos:column="23">readable<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><literal type="number" pos:line="10" pos:column="34">100.0<pos:position pos:line="10" pos:column="39"/></literal> <operator pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="42">readable<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">/<pos:position pos:line="10" pos:column="52"/></operator> <name pos:line="10" pos:column="53">count<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">storeAppendPrintf<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">e<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"Writing: %9d %6.2f%%\n"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>,
                      <argument><expr><name pos:line="12" pos:column="23">writeable<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><literal type="number" pos:line="12" pos:column="35">100.0<pos:position pos:line="12" pos:column="40"/></literal> <operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="43">writeable<pos:position pos:line="12" pos:column="52"/></name> <operator pos:line="12" pos:column="53">/<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="55">count<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">)<pos:position pos:line="12" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeAppendPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">e<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"Idle:    %9d %6.2f%%\n"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>,
                      <argument><expr><name pos:line="14" pos:column="23">idle<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><literal type="number" pos:line="14" pos:column="30">100.0<pos:position pos:line="14" pos:column="35"/></literal> <operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">idle<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">/<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">count<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">readers<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">||<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">writers<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">int<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">locked<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><name pos:line="17" pos:column="28">readers<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">+<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">writers<pos:position pos:line="17" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">storeAppendPrintf<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="28">e<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"Readers:         %9d %6.2f%%\n"<pos:position pos:line="18" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><name pos:line="19" pos:column="27">readers<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="36">(<pos:position pos:line="19" pos:column="37"/></operator><literal type="number" pos:line="19" pos:column="37">100.0<pos:position pos:line="19" pos:column="42"/></literal> <operator pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">readers<pos:position pos:line="19" pos:column="52"/></name> <operator pos:line="19" pos:column="53">/<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">locked<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">)<pos:position pos:line="19" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">storeAppendPrintf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">e<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"Writers:         %9d %6.2f%%\n"<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><name pos:line="21" pos:column="27">writers<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="36">(<pos:position pos:line="21" pos:column="37"/></operator><literal type="number" pos:line="21" pos:column="37">100.0<pos:position pos:line="21" pos:column="42"/></literal> <operator pos:line="21" pos:column="43">*<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">writers<pos:position pos:line="21" pos:column="52"/></name> <operator pos:line="21" pos:column="53">/<pos:position pos:line="21" pos:column="54"/></operator> <name pos:line="21" pos:column="55">locked<pos:position pos:line="21" pos:column="61"/></name><operator pos:line="21" pos:column="61">)<pos:position pos:line="21" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

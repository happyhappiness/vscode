<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5044_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">DiskThreadsDiskFile<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">doClose<pos:position pos:line="1" pos:column="34"/></name></name><parameter_list pos:line="1" pos:column="34">()<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">fd<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">&gt;<pos:position pos:line="3" pos:column="16"/></operator> <operator pos:line="3" pos:column="14">-<pos:position pos:line="3" pos:column="15"/></operator><literal type="number" pos:line="3" pos:column="15">1<pos:position pos:line="3" pos:column="16"/></literal></expr>)<pos:position pos:line="3" pos:column="17"/></condition><then pos:line="3" pos:column="17"> <block pos:line="3" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="4" pos:column="9">statCounter<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">syscalls<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">.<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">disk<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">closes<pos:position pos:line="4" pos:column="41"/></name></name><operator pos:line="4" pos:column="41">++<pos:position pos:line="4" pos:column="43"/></operator></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">ASYNC_CLOSE<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>

        <expr_stmt><expr><call><name pos:line="7" pos:column="9">aioClose<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">fd<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">fd_close<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">fd<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">aioCancel<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">fd<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">file_close<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">fd<pos:position pos:line="12" pos:column="22"/></name></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="15" pos:column="9">store_open_disk_fd<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">--<pos:position pos:line="15" pos:column="29"/></operator></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">fd<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

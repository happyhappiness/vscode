<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_448_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">noteAdaptationAnswer<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name><name pos:line="2" pos:column="47">Adaptation<pos:position pos:line="2" pos:column="57"/></name><operator pos:line="2" pos:column="57">::<pos:position pos:line="2" pos:column="59"/></operator><name pos:line="2" pos:column="59">Answer<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">&amp;<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="67">answer<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">cbdataReferenceValid<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">this<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>     <comment type="line" pos:line="4" pos:column="45">// indicates bug</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">clearAdaptation<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">virginHeadSource<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">adaptedBodySource<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">answer<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">kind<pos:position pos:line="8" pos:column="24"/></name></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition> <block pos:line="8" pos:column="26">{
    <case pos:line="9" pos:column="5">case <expr><name><name pos:line="9" pos:column="10">Adaptation<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">::<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">Answer<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">::<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">akForward<pos:position pos:line="9" pos:column="39"/></name></name></expr>:<pos:position pos:line="9" pos:column="40"/></case>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">handleAdaptedHeader<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><cast type="const" pos:line="10" pos:column="29">const_cast<argument_list type="generic" pos:line="10" pos:column="39">&lt;<argument><expr><name pos:line="10" pos:column="40">HttpMsg<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="52"/></argument_list><argument_list pos:line="10" pos:column="49">(<argument><expr><call><name><name pos:line="10" pos:column="50">answer<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">message<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">.<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">getRaw<pos:position pos:line="10" pos:column="71"/></name></name><argument_list pos:line="10" pos:column="71">()<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></cast></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>

    <case pos:line="13" pos:column="5">case <expr><name><name pos:line="13" pos:column="10">Adaptation<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">::<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">Answer<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">::<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">akBlock<pos:position pos:line="13" pos:column="37"/></name></name></expr>:<pos:position pos:line="13" pos:column="38"/></case>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">handleAdaptationBlock<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">answer<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>

    <case pos:line="17" pos:column="5">case <expr><name><name pos:line="17" pos:column="10">Adaptation<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">::<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">Answer<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">::<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">akError<pos:position pos:line="17" pos:column="37"/></name></name></expr>:<pos:position pos:line="17" pos:column="38"/></case>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">handleAdaptationFailure<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">ERR_DETAIL_CLT_REQMOD_ABORT<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="62">!<pos:position pos:line="18" pos:column="63"/></operator><name><name pos:line="18" pos:column="63">answer<pos:position pos:line="18" pos:column="69"/></name><operator pos:line="18" pos:column="69">.<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="70">final<pos:position pos:line="18" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>
    }<pos:position pos:line="20" pos:column="6"/></block></switch>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

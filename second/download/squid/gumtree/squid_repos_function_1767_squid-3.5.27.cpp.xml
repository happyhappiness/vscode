<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1767_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statAvgTick<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">notused<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StatCounters<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">t<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name><name pos:line="4" pos:column="24">CountHist<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StatCounters<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">p<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name><name pos:line="5" pos:column="24">CountHist<pos:position pos:line="5" pos:column="33"/></name><index pos:line="5" pos:column="33">[<expr><literal type="number" pos:line="5" pos:column="34">1<pos:position pos:line="5" pos:column="35"/></literal></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StatCounters<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">c<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">statCounter<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">rusage<pos:position pos:line="8" pos:column="18"/></name></name></type> <name pos:line="8" pos:column="19">rusage<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">eventAdd<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"statAvgTick"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">statAvgTick<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">NULL<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="48">(<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">double<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">)<pos:position pos:line="9" pos:column="56"/></operator> <name pos:line="9" pos:column="57">COUNT_INTERVAL<pos:position pos:line="9" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="73">1<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">squid_getrusage<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">rusage<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">c<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">page_faults<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">rusage_pagefaults<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">rusage<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">c<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">cputime<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">rusage_cputime<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><operator pos:line="12" pos:column="33">&amp;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="34">rusage<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">c<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">timestamp<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">current_time<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* even if NCountHist is small, we already Init()ed the tail */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">statCountersClean<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">CountHist<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">+<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="35">N_COUNT_HIST<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">-<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memmove<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">p<pos:position pos:line="16" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="16">t<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">N_COUNT_HIST<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">-<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator> <sizeof pos:line="16" pos:column="40">sizeof<argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">StatCounters<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">statCountersCopy<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">t<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="25">c<pos:position pos:line="17" pos:column="26"/></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">++<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">NCountHist<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">NCountHist<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">%<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">COUNT_INTERVAL<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator> <operator pos:line="20" pos:column="39">==<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
        <comment type="block" pos:line="21" pos:column="9">/* we have an hours worth of readings.  store previous hour */</comment>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">StatCounters<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name pos:line="22" pos:column="23">t2<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name><name pos:line="22" pos:column="29">CountHourHist<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><literal type="number" pos:line="22" pos:column="43">0<pos:position pos:line="22" pos:column="44"/></literal></expr>]<pos:position pos:line="22" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">StatCounters<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name pos:line="23" pos:column="23">p2<pos:position pos:line="23" pos:column="25"/></name> <init pos:line="23" pos:column="26">= <expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="29">CountHourHist<pos:position pos:line="23" pos:column="42"/></name><index pos:line="23" pos:column="42">[<expr><literal type="number" pos:line="23" pos:column="43">1<pos:position pos:line="23" pos:column="44"/></literal></expr>]<pos:position pos:line="23" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">StatCounters<pos:position pos:line="24" pos:column="21"/></name> <modifier pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></modifier></type><name pos:line="24" pos:column="23">c2<pos:position pos:line="24" pos:column="25"/></name> <init pos:line="24" pos:column="26">= <expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name><name pos:line="24" pos:column="29">CountHist<pos:position pos:line="24" pos:column="38"/></name><index pos:line="24" pos:column="38">[<expr><name pos:line="24" pos:column="39">N_COUNT_HIST<pos:position pos:line="24" pos:column="51"/></name> <operator pos:line="24" pos:column="52">-<pos:position pos:line="24" pos:column="53"/></operator> <literal type="number" pos:line="24" pos:column="54">1<pos:position pos:line="24" pos:column="55"/></literal></expr>]<pos:position pos:line="24" pos:column="56"/></index></name></expr></init></decl>;<pos:position pos:line="24" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">statCountersClean<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">CountHourHist<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">+<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">N_COUNT_HOUR_HIST<pos:position pos:line="25" pos:column="60"/></name> <operator pos:line="25" pos:column="61">-<pos:position pos:line="25" pos:column="62"/></operator> <literal type="number" pos:line="25" pos:column="63">1<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memmove<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">p2<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="21">t2<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">N_COUNT_HOUR_HIST<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">-<pos:position pos:line="26" pos:column="45"/></operator> <literal type="number" pos:line="26" pos:column="46">1<pos:position pos:line="26" pos:column="47"/></literal><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="49">*<pos:position pos:line="26" pos:column="50"/></operator> <sizeof pos:line="26" pos:column="51">sizeof<argument_list pos:line="26" pos:column="57">(<argument><expr><name pos:line="26" pos:column="58">StatCounters<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">statCountersCopy<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">t2<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">c2<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="28" pos:column="9">++<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">NCountHourHist<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">Config<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">warnings<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">high_rptm<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">&gt;<pos:position pos:line="31" pos:column="39"/></operator> <literal type="number" pos:line="31" pos:column="37">0<pos:position pos:line="31" pos:column="38"/></literal></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <block pos:line="31" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">int<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">i<pos:position pos:line="32" pos:column="14"/></name> <init pos:line="32" pos:column="15">= <expr><operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">int<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">)<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">statPctileSvc<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="number" pos:line="32" pos:column="37">0.5<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="42">20<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">PCTILE_HTTP<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="59"/></decl_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">Config<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">.<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">warnings<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">high_rptm<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">&lt;<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">18<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">DBG_CRITICAL<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">"WARNING: Median response time is "<pos:position pos:line="35" pos:column="73"/></literal> <operator pos:line="35" pos:column="74">&lt;&lt;<pos:position pos:line="35" pos:column="82"/></operator> <name pos:line="35" pos:column="77">i<pos:position pos:line="35" pos:column="78"/></name> <operator pos:line="35" pos:column="79">&lt;&lt;<pos:position pos:line="35" pos:column="87"/></operator> <literal type="string" pos:line="35" pos:column="82">" milliseconds"<pos:position pos:line="35" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="99"/></expr_stmt></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">Config<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">warnings<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">high_pf<pos:position pos:line="38" pos:column="32"/></name></name></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33"> <block pos:line="38" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">int<pos:position pos:line="39" pos:column="12"/></name></type> <name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name> <init pos:line="39" pos:column="15">= <expr><operator pos:line="39" pos:column="17">(<pos:position pos:line="39" pos:column="18"/></operator><name><name pos:line="39" pos:column="18">CountHist<pos:position pos:line="39" pos:column="27"/></name><index pos:line="39" pos:column="27">[<expr><literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>]<pos:position pos:line="39" pos:column="30"/></index></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">page_faults<pos:position pos:line="39" pos:column="42"/></name> <operator pos:line="39" pos:column="43">-<pos:position pos:line="39" pos:column="44"/></operator> <name><name pos:line="39" pos:column="45">CountHist<pos:position pos:line="39" pos:column="54"/></name><index pos:line="39" pos:column="54">[<expr><literal type="number" pos:line="39" pos:column="55">1<pos:position pos:line="39" pos:column="56"/></literal></expr>]<pos:position pos:line="39" pos:column="57"/></index></name><operator pos:line="39" pos:column="57">.<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="58">page_faults<pos:position pos:line="39" pos:column="69"/></name><operator pos:line="39" pos:column="69">)<pos:position pos:line="39" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="39" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">double<pos:position pos:line="40" pos:column="15"/></name></type> <name pos:line="40" pos:column="16">dt<pos:position pos:line="40" pos:column="18"/></name> <init pos:line="40" pos:column="19">= <expr><call><name pos:line="40" pos:column="21">tvSubDsec<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">CountHist<pos:position pos:line="40" pos:column="40"/></name><index pos:line="40" pos:column="40">[<expr><literal type="number" pos:line="40" pos:column="41">0<pos:position pos:line="40" pos:column="42"/></literal></expr>]<pos:position pos:line="40" pos:column="43"/></index></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">timestamp<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="55">CountHist<pos:position pos:line="40" pos:column="64"/></name><index pos:line="40" pos:column="64">[<expr><literal type="number" pos:line="40" pos:column="65">1<pos:position pos:line="40" pos:column="66"/></literal></expr>]<pos:position pos:line="40" pos:column="67"/></index></name><operator pos:line="40" pos:column="67">.<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="68">timestamp<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="79"/></decl_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">i<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">&gt;<pos:position pos:line="42" pos:column="19"/></operator> <literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal> <operator pos:line="42" pos:column="19">&amp;&amp;<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="22">dt<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">&gt;<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="27">0.0<pos:position pos:line="42" pos:column="30"/></literal></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">i<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">/=<pos:position pos:line="43" pos:column="17"/></operator> <operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">int<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">)<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">dt<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>

            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name><name pos:line="45" pos:column="17">Config<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">warnings<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">high_pf<pos:position pos:line="45" pos:column="40"/></name></name> <operator pos:line="45" pos:column="41">&lt;<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="43">i<pos:position pos:line="45" pos:column="44"/></name></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">debugs<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="number" pos:line="46" pos:column="24">18<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">DBG_CRITICAL<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="42">"WARNING: Page faults occuring at "<pos:position pos:line="46" pos:column="77"/></literal> <operator pos:line="46" pos:column="78">&lt;&lt;<pos:position pos:line="46" pos:column="86"/></operator> <name pos:line="46" pos:column="81">i<pos:position pos:line="46" pos:column="82"/></name> <operator pos:line="46" pos:column="83">&lt;&lt;<pos:position pos:line="46" pos:column="91"/></operator> <literal type="string" pos:line="46" pos:column="86">"/sec"<pos:position pos:line="46" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="94"/></expr_stmt></block></then></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">Config<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">warnings<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">.<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">high_memory<pos:position pos:line="50" pos:column="36"/></name></name></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37"> <block pos:line="50" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">size_t<pos:position pos:line="51" pos:column="15"/></name></type> <name pos:line="51" pos:column="16">i<pos:position pos:line="51" pos:column="17"/></name> <init pos:line="51" pos:column="18">= <expr><literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="51" pos:column="22"/></decl_stmt>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">HAVE_MSTATS<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">&amp;&amp;<pos:position pos:line="52" pos:column="27"/></operator> <name pos:line="52" pos:column="20">HAVE_GNUMALLOC_H<pos:position pos:line="52" pos:column="36"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name><name pos:line="53" pos:column="9">struct<pos:position pos:line="53" pos:column="15"/></name> <name pos:line="53" pos:column="16">mstats<pos:position pos:line="53" pos:column="22"/></name></name></type> <name pos:line="53" pos:column="23">ms<pos:position pos:line="53" pos:column="25"/></name> <init pos:line="53" pos:column="26">= <expr><call><name pos:line="53" pos:column="28">mstats<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">()<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="37"/></decl_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">i<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <name><name pos:line="54" pos:column="13">ms<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">bytes_total<pos:position pos:line="54" pos:column="27"/></name></name></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">Config<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">warnings<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">high_memory<pos:position pos:line="56" pos:column="40"/></name></name> <operator pos:line="56" pos:column="41">&lt;<pos:position pos:line="56" pos:column="45"/></operator> <name pos:line="56" pos:column="43">i<pos:position pos:line="56" pos:column="44"/></name></expr>)<pos:position pos:line="56" pos:column="45"/></condition><then pos:line="56" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">18<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="24">DBG_CRITICAL<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"WARNING: Memory usage at "<pos:position pos:line="57" pos:column="65"/></literal> <operator pos:line="57" pos:column="66">&lt;&lt;<pos:position pos:line="57" pos:column="74"/></operator> <operator pos:line="57" pos:column="69">(<pos:position pos:line="57" pos:column="70"/></operator><call pos:line="57" pos:column="70">(<name pos:line="57" pos:column="71">unsigned<pos:position pos:line="57" pos:column="79"/></name> <name pos:line="57" pos:column="80">long<pos:position pos:line="57" pos:column="84"/></name> <name pos:line="57" pos:column="85">int<pos:position pos:line="57" pos:column="88"/></name>)<argument_list pos:line="57" pos:column="89">(<argument><expr><name pos:line="57" pos:column="90">i<pos:position pos:line="57" pos:column="91"/></name> <operator pos:line="57" pos:column="92">&gt;&gt;<pos:position pos:line="57" pos:column="97"/></operator> <literal type="number" pos:line="57" pos:column="95">20<pos:position pos:line="57" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="98"/></argument_list></call><operator pos:line="57" pos:column="98">)<pos:position pos:line="57" pos:column="99"/></operator> <operator pos:line="57" pos:column="100">&lt;&lt;<pos:position pos:line="57" pos:column="108"/></operator> <literal type="string" pos:line="57" pos:column="103">" MB"<pos:position pos:line="57" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="110"/></expr_stmt></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3375_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">snmp_pdu<pos:position pos:line="1" pos:column="16"/></name></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">snmpAgentResponse<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">snmp_pdu<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">PDU<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{

    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">snmp_pdu<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">Answer<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">49<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"snmpAgentResponse: Called."<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">Answer<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">snmp_pdu_create<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">SNMP_PDU_RESPONSE<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call><operator pos:line="8" pos:column="53">)<pos:position pos:line="8" pos:column="54"/></operator></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55"> <block pos:line="8" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">Answer<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">reqid<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="25">PDU<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">reqid<pos:position pos:line="9" pos:column="35"/></name></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">Answer<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">errindex<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">PDU<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">command<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">SNMP_PDU_GET<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator> <name><name pos:line="12" pos:column="45">PDU<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">command<pos:position pos:line="12" pos:column="57"/></name></name> <operator pos:line="12" pos:column="58">==<pos:position pos:line="12" pos:column="60"/></operator> <name pos:line="12" pos:column="61">SNMP_PDU_GETNEXT<pos:position pos:line="12" pos:column="77"/></name></expr>)<pos:position pos:line="12" pos:column="78"/></condition><then pos:line="12" pos:column="78"> <block pos:line="12" pos:column="79">{
            <comment type="block" pos:line="13" pos:column="13">/* Indirect way */</comment>
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">int<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">get_next<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="29">PDU<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">command<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">==<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">SNMP_PDU_GETNEXT<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">)<pos:position pos:line="14" pos:column="62"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">variable_list<pos:position pos:line="15" pos:column="26"/></name> <modifier pos:line="15" pos:column="27">*<pos:position pos:line="15" pos:column="28"/></modifier></type><name pos:line="15" pos:column="28">VarPtr_<pos:position pos:line="15" pos:column="35"/></name></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">variable_list<pos:position pos:line="16" pos:column="26"/></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier><modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">RespVars<pos:position pos:line="16" pos:column="37"/></name> <init pos:line="16" pos:column="38">= <expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><name><name pos:line="16" pos:column="42">Answer<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">variables<pos:position pos:line="16" pos:column="59"/></name></name><operator pos:line="16" pos:column="59">)<pos:position pos:line="16" pos:column="60"/></operator></expr></init></decl>;<pos:position pos:line="16" pos:column="61"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">oid_ParseFn<pos:position pos:line="17" pos:column="24"/></name> <modifier pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></modifier></type><name pos:line="17" pos:column="26">ParseFn<pos:position pos:line="17" pos:column="33"/></name></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">int<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">index<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
            <comment type="block" pos:line="19" pos:column="13">/* Loop through all variables */</comment>

            <for pos:line="21" pos:column="13">for <control pos:line="21" pos:column="17">(<init><expr><name pos:line="21" pos:column="18">VarPtr_<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">PDU<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">variables<pos:position pos:line="21" pos:column="42"/></name></name></expr>;<pos:position pos:line="21" pos:column="43"/></init> <condition><expr><name pos:line="21" pos:column="44">VarPtr_<pos:position pos:line="21" pos:column="51"/></name></expr>;<pos:position pos:line="21" pos:column="52"/></condition> <incr><expr><name pos:line="21" pos:column="53">VarPtr_<pos:position pos:line="21" pos:column="60"/></name> <operator pos:line="21" pos:column="61">=<pos:position pos:line="21" pos:column="62"/></operator> <name><name pos:line="21" pos:column="63">VarPtr_<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">-&gt;<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="72">next_variable<pos:position pos:line="21" pos:column="85"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="86"/></control> <block pos:line="21" pos:column="87">{
                <decl_stmt><decl><type><name pos:line="22" pos:column="17">variable_list<pos:position pos:line="22" pos:column="30"/></name> <modifier pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></modifier></type><name pos:line="22" pos:column="32">VarPtr<pos:position pos:line="22" pos:column="38"/></name> <init pos:line="22" pos:column="39">= <expr><name pos:line="22" pos:column="41">VarPtr_<pos:position pos:line="22" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="49"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="23" pos:column="17">variable_list<pos:position pos:line="23" pos:column="30"/></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">VarNew<pos:position pos:line="23" pos:column="38"/></name> <init pos:line="23" pos:column="39">= <expr><name pos:line="23" pos:column="41">NULL<pos:position pos:line="23" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="24" pos:column="17">oid<pos:position pos:line="24" pos:column="20"/></name> <modifier pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></modifier></type><name pos:line="24" pos:column="22">NextOidName<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><name pos:line="24" pos:column="36">NULL<pos:position pos:line="24" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="25" pos:column="17">snint<pos:position pos:line="25" pos:column="22"/></name></type> <name pos:line="25" pos:column="23">NextOidNameLen<pos:position pos:line="25" pos:column="37"/></name> <init pos:line="25" pos:column="38">= <expr><literal type="number" pos:line="25" pos:column="40">0<pos:position pos:line="25" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="42"/></decl_stmt>

                <expr_stmt><expr><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">index<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>

                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">get_next<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="21">ParseFn<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">snmpTreeNext<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name><name pos:line="30" pos:column="44">VarPtr<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">name<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="58">VarPtr<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">-&gt;<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="66">name_length<pos:position pos:line="30" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="79">&amp;<pos:position pos:line="30" pos:column="84"/></operator><name pos:line="30" pos:column="80">NextOidName<pos:position pos:line="30" pos:column="91"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="93">&amp;<pos:position pos:line="30" pos:column="98"/></operator><name pos:line="30" pos:column="94">NextOidNameLen<pos:position pos:line="30" pos:column="108"/></name></expr></argument>)<pos:position pos:line="30" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="110"/></expr_stmt></block></then>
                <else pos:line="31" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="21">ParseFn<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <call><name pos:line="32" pos:column="31">snmpTreeGet<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><name><name pos:line="32" pos:column="43">VarPtr<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">name<pos:position pos:line="32" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="57">VarPtr<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">name_length<pos:position pos:line="32" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt></block></else></if>

                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">ParseFn<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">NULL<pos:position pos:line="34" pos:column="36"/></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
                    <expr_stmt><expr><name><name pos:line="35" pos:column="21">Answer<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">errstat<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">SNMP_ERR_NOSUCHNAME<pos:position pos:line="35" pos:column="58"/></name></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="36" pos:column="21">debugs<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="number" pos:line="36" pos:column="28">49<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="32">5<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="35">"snmpAgentResponse: No such oid. "<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then> <else pos:line="37" pos:column="19">else <block pos:line="37" pos:column="24">{
                    <if pos:line="38" pos:column="21">if <condition pos:line="38" pos:column="24">(<expr><name pos:line="38" pos:column="25">get_next<pos:position pos:line="38" pos:column="33"/></name></expr>)<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34"> <block pos:line="38" pos:column="35">{
                        <expr_stmt><expr><name pos:line="39" pos:column="25">VarPtr<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <call><name pos:line="39" pos:column="34">snmp_var_new<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">NextOidName<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="60">NextOidNameLen<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="40" pos:column="25">xfree<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">NextOidName<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="41" pos:column="22"/></block></then></if>

                    <decl_stmt><decl><type><name pos:line="43" pos:column="21">int<pos:position pos:line="43" pos:column="24"/></name> <modifier pos:line="43" pos:column="25">*<pos:position pos:line="43" pos:column="26"/></modifier></type> <name pos:line="43" pos:column="27">errstatTmp<pos:position pos:line="43" pos:column="37"/></name> <init pos:line="43" pos:column="38">=  <expr><operator pos:line="43" pos:column="41">&amp;<pos:position pos:line="43" pos:column="46"/></operator><operator pos:line="43" pos:column="42">(<pos:position pos:line="43" pos:column="43"/></operator><name><name pos:line="43" pos:column="43">Answer<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">errstat<pos:position pos:line="43" pos:column="58"/></name></name><operator pos:line="43" pos:column="58">)<pos:position pos:line="43" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="43" pos:column="60"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="45" pos:column="21">VarNew<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <call pos:line="45" pos:column="30">(<modifier pos:line="45" pos:column="31">*<pos:position pos:line="45" pos:column="32"/></modifier><name pos:line="45" pos:column="32">ParseFn<pos:position pos:line="45" pos:column="39"/></name>) <argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">VarPtr<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="50">(<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">snint<pos:position pos:line="45" pos:column="56"/></name> <operator pos:line="45" pos:column="57">*<pos:position pos:line="45" pos:column="58"/></operator><operator pos:line="45" pos:column="58">)<pos:position pos:line="45" pos:column="59"/></operator> <name pos:line="45" pos:column="60">errstatTmp<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>

                    <if pos:line="47" pos:column="21">if <condition pos:line="47" pos:column="24">(<expr><name pos:line="47" pos:column="25">get_next<pos:position pos:line="47" pos:column="33"/></name></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">snmp_var_free<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">VarPtr<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt></block></then></if>
                }<pos:position pos:line="49" pos:column="18"/></block></else></if>

                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name><name pos:line="51" pos:column="22">Answer<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">errstat<pos:position pos:line="51" pos:column="37"/></name></name> <operator pos:line="51" pos:column="38">!=<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="41">SNMP_ERR_NOERROR<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator> <operator pos:line="51" pos:column="59">||<pos:position pos:line="51" pos:column="61"/></operator> <operator pos:line="51" pos:column="62">(<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="63">VarNew<pos:position pos:line="51" pos:column="69"/></name> <operator pos:line="51" pos:column="70">==<pos:position pos:line="51" pos:column="72"/></operator> <name pos:line="51" pos:column="73">NULL<pos:position pos:line="51" pos:column="77"/></name><operator pos:line="51" pos:column="77">)<pos:position pos:line="51" pos:column="78"/></operator></expr>)<pos:position pos:line="51" pos:column="79"/></condition><then pos:line="51" pos:column="79"> <block pos:line="51" pos:column="80">{
                    <expr_stmt><expr><name><name pos:line="52" pos:column="21">Answer<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">errindex<pos:position pos:line="52" pos:column="37"/></name></name> <operator pos:line="52" pos:column="38">=<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">index<pos:position pos:line="52" pos:column="45"/></name></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="53" pos:column="21">debugs<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="number" pos:line="53" pos:column="28">49<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="32">5<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="35">"snmpAgentResponse: error."<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="64"/></expr_stmt>

                    <if pos:line="55" pos:column="21">if <condition pos:line="55" pos:column="24">(<expr><name pos:line="55" pos:column="25">VarNew<pos:position pos:line="55" pos:column="31"/></name></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">snmp_var_free<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name pos:line="56" pos:column="39">VarNew<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt></block></then></if>

                    <while pos:line="58" pos:column="21">while <condition pos:line="58" pos:column="27">(<expr><operator pos:line="58" pos:column="28">(<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="29">VarPtr<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <name><name pos:line="58" pos:column="38">Answer<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">-&gt;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="46">variables<pos:position pos:line="58" pos:column="55"/></name></name><operator pos:line="58" pos:column="55">)<pos:position pos:line="58" pos:column="56"/></operator> <operator pos:line="58" pos:column="57">!=<pos:position pos:line="58" pos:column="59"/></operator> <name pos:line="58" pos:column="60">NULL<pos:position pos:line="58" pos:column="64"/></name></expr>)<pos:position pos:line="58" pos:column="65"/></condition> <block pos:line="58" pos:column="66">{
                        <expr_stmt><expr><name><name pos:line="59" pos:column="25">Answer<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">-&gt;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="33">variables<pos:position pos:line="59" pos:column="42"/></name></name> <operator pos:line="59" pos:column="43">=<pos:position pos:line="59" pos:column="44"/></operator> <name><name pos:line="59" pos:column="45">VarPtr<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">next_variable<pos:position pos:line="59" pos:column="66"/></name></name></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="60" pos:column="25">snmp_var_free<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">VarPtr<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="61" pos:column="22"/></block></while>

                    <comment type="block" pos:line="63" pos:column="21">/* Steal the original PDU list of variables for the error response */</comment>
                    <expr_stmt><expr><name><name pos:line="64" pos:column="21">Answer<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">-&gt;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="29">variables<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <name><name pos:line="64" pos:column="41">PDU<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">variables<pos:position pos:line="64" pos:column="55"/></name></name></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>

                    <expr_stmt><expr><name><name pos:line="66" pos:column="21">PDU<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">variables<pos:position pos:line="66" pos:column="35"/></name></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <name pos:line="66" pos:column="38">NULL<pos:position pos:line="66" pos:column="42"/></name></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt>

                    <return pos:line="68" pos:column="21">return <expr><operator pos:line="68" pos:column="28">(<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="29">Answer<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">)<pos:position pos:line="68" pos:column="36"/></operator></expr>;<pos:position pos:line="68" pos:column="37"/></return>
                }<pos:position pos:line="69" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="71" pos:column="17">/* No error.  Insert this var at the end, and move on to the next.
                 */</comment>
                <expr_stmt><expr><operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="18">RespVars<pos:position pos:line="73" pos:column="26"/></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="29">VarNew<pos:position pos:line="73" pos:column="35"/></name></expr>;<pos:position pos:line="73" pos:column="36"/></expr_stmt>

                <expr_stmt><expr><name pos:line="75" pos:column="17">RespVars<pos:position pos:line="75" pos:column="25"/></name> <operator pos:line="75" pos:column="26">=<pos:position pos:line="75" pos:column="27"/></operator> <operator pos:line="75" pos:column="28">&amp;<pos:position pos:line="75" pos:column="33"/></operator><operator pos:line="75" pos:column="29">(<pos:position pos:line="75" pos:column="30"/></operator><name><name pos:line="75" pos:column="30">VarNew<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">-&gt;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="38">next_variable<pos:position pos:line="75" pos:column="51"/></name></name><operator pos:line="75" pos:column="51">)<pos:position pos:line="75" pos:column="52"/></operator></expr>;<pos:position pos:line="75" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></for>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <return pos:line="80" pos:column="5">return <expr><operator pos:line="80" pos:column="12">(<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="13">Answer<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">)<pos:position pos:line="80" pos:column="20"/></operator></expr>;<pos:position pos:line="80" pos:column="21"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

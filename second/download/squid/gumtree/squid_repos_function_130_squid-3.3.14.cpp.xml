<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_130_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><call><name><name pos:line="4" pos:column="13">BaseVirtual<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">Calls<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">news<pos:position pos:line="4" pos:column="36"/></name></name><argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call> <operator pos:line="4" pos:column="39">==<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="42">0<pos:position pos:line="4" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><call><name><name pos:line="5" pos:column="13">BaseVirtual<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">::<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">Calls<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">deletes<pos:position pos:line="5" pos:column="39"/></name></name><argument_list pos:line="5" pos:column="39">()<pos:position pos:line="5" pos:column="41"/></argument_list></call> <operator pos:line="5" pos:column="42">==<pos:position pos:line="5" pos:column="44"/></operator> <literal type="number" pos:line="5" pos:column="45">0<pos:position pos:line="5" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><call><name><name pos:line="6" pos:column="13">ChildVirtual<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">::<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">Calls<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">news<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call> <operator pos:line="6" pos:column="40">==<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><call><name><name pos:line="7" pos:column="13">ChildVirtual<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">::<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">Calls<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">deletes<pos:position pos:line="7" pos:column="40"/></name></name><argument_list pos:line="7" pos:column="40">()<pos:position pos:line="7" pos:column="42"/></argument_list></call> <operator pos:line="7" pos:column="43">==<pos:position pos:line="7" pos:column="45"/></operator> <literal type="number" pos:line="7" pos:column="46">0<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">BaseVirtual<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">aBase<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><operator pos:line="8" pos:column="26">new<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">ChildVirtual<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><call><name><name pos:line="9" pos:column="13">BaseVirtual<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">Calls<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">news<pos:position pos:line="9" pos:column="36"/></name></name><argument_list pos:line="9" pos:column="36">()<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">0<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><call><name><name pos:line="10" pos:column="13">BaseVirtual<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">::<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">Calls<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">.<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">deletes<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><call><name><name pos:line="11" pos:column="13">ChildVirtual<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">::<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">Calls<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">news<pos:position pos:line="11" pos:column="37"/></name></name><argument_list pos:line="11" pos:column="37">()<pos:position pos:line="11" pos:column="39"/></argument_list></call> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <literal type="number" pos:line="11" pos:column="43">1<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><call><name><name pos:line="12" pos:column="13">ChildVirtual<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">::<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">Calls<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">deletes<pos:position pos:line="12" pos:column="40"/></name></name><argument_list pos:line="12" pos:column="40">()<pos:position pos:line="12" pos:column="42"/></argument_list></call> <operator pos:line="12" pos:column="43">==<pos:position pos:line="12" pos:column="45"/></operator> <literal type="number" pos:line="12" pos:column="46">0<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">BaseVirtual<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">DeleteABase<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">aBase<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><call><name><name pos:line="14" pos:column="13">BaseVirtual<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">::<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">Calls<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">news<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">()<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">==<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><call><name><name pos:line="15" pos:column="13">BaseVirtual<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">::<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">Calls<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">deletes<pos:position pos:line="15" pos:column="39"/></name></name><argument_list pos:line="15" pos:column="39">()<pos:position pos:line="15" pos:column="41"/></argument_list></call> <operator pos:line="15" pos:column="42">==<pos:position pos:line="15" pos:column="44"/></operator> <literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><call><name><name pos:line="16" pos:column="13">ChildVirtual<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">::<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">Calls<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">news<pos:position pos:line="16" pos:column="37"/></name></name><argument_list pos:line="16" pos:column="37">()<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">==<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">1<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><call><name><name pos:line="17" pos:column="13">ChildVirtual<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">::<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">Calls<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">.<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">deletes<pos:position pos:line="17" pos:column="40"/></name></name><argument_list pos:line="17" pos:column="40">()<pos:position pos:line="17" pos:column="42"/></argument_list></call> <operator pos:line="17" pos:column="43">==<pos:position pos:line="17" pos:column="45"/></operator> <literal type="number" pos:line="17" pos:column="46">1<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
    <comment type="line" pos:line="18" pos:column="5">// deleting NULL works.</comment>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">BaseVirtual<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">::<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">DeleteABase<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">NULL<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><call><name><name pos:line="20" pos:column="13">BaseVirtual<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">::<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">Calls<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">.<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">news<pos:position pos:line="20" pos:column="36"/></name></name><argument_list pos:line="20" pos:column="36">()<pos:position pos:line="20" pos:column="38"/></argument_list></call> <operator pos:line="20" pos:column="39">==<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><call><name><name pos:line="21" pos:column="13">BaseVirtual<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">::<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">Calls<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">.<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">deletes<pos:position pos:line="21" pos:column="39"/></name></name><argument_list pos:line="21" pos:column="39">()<pos:position pos:line="21" pos:column="41"/></argument_list></call> <operator pos:line="21" pos:column="42">==<pos:position pos:line="21" pos:column="44"/></operator> <literal type="number" pos:line="21" pos:column="45">0<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><call><name><name pos:line="22" pos:column="13">ChildVirtual<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">::<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">Calls<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">news<pos:position pos:line="22" pos:column="37"/></name></name><argument_list pos:line="22" pos:column="37">()<pos:position pos:line="22" pos:column="39"/></argument_list></call> <operator pos:line="22" pos:column="40">==<pos:position pos:line="22" pos:column="42"/></operator> <literal type="number" pos:line="22" pos:column="43">1<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><call><name><name pos:line="23" pos:column="13">ChildVirtual<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">::<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">Calls<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">deletes<pos:position pos:line="23" pos:column="40"/></name></name><argument_list pos:line="23" pos:column="40">()<pos:position pos:line="23" pos:column="42"/></argument_list></call> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <literal type="number" pos:line="23" pos:column="46">1<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_802_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">clean<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// we used to assert that the pipe is NULL, but now the message only</comment>
    <comment type="line" pos:line="5" pos:column="5">// points to a pipe that is owned and initiated by another object.</comment>
    <expr_stmt><expr><name pos:line="6" pos:column="5">body_pipe<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">body<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">.<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">clear<pos:position pos:line="8" pos:column="15"/></name></name><argument_list pos:line="8" pos:column="15">()<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">hdrCacheClean<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">()<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">header<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">clean<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">sline<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">clean<pos:position pos:line="11" pos:column="16"/></name></name><argument_list pos:line="11" pos:column="16">()<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">bodySizeMax<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <operator pos:line="12" pos:column="19">-<pos:position pos:line="12" pos:column="20"/></operator><literal type="number" pos:line="12" pos:column="20">2<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt> <comment type="line" pos:line="12" pos:column="23">// hack: make calculatedBodySizeMax() false</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

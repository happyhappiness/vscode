<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6980_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">init_syntax_once<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">c<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">done<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">done<pos:position pos:line="7" pos:column="13"/></name></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memset<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">re_syntax_table<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="32">sizeof <name pos:line="10" pos:column="39">re_syntax_table<pos:position pos:line="10" pos:column="54"/></name></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">c<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="char" pos:line="12" pos:column="14">'a'<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">c<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&lt;=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="24">'z'<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></condition> <incr><expr><name pos:line="12" pos:column="29">c<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">++<pos:position pos:line="12" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="9">re_syntax_table<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">c<pos:position pos:line="13" pos:column="26"/></name></expr>]<pos:position pos:line="13" pos:column="27"/></index></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">Sword<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></for>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">c<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="char" pos:line="15" pos:column="14">'A'<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></init> <condition><expr><name pos:line="15" pos:column="19">c<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="char" pos:line="15" pos:column="24">'Z'<pos:position pos:line="15" pos:column="27"/></literal></expr>;<pos:position pos:line="15" pos:column="28"/></condition> <incr><expr><name pos:line="15" pos:column="29">c<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">++<pos:position pos:line="15" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="9">re_syntax_table<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><name pos:line="16" pos:column="25">c<pos:position pos:line="16" pos:column="26"/></name></expr>]<pos:position pos:line="16" pos:column="27"/></index></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">Sword<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></for>

    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">c<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="char" pos:line="18" pos:column="14">'0'<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></init> <condition><expr><name pos:line="18" pos:column="19">c<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&lt;=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="char" pos:line="18" pos:column="24">'9'<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></condition> <incr><expr><name pos:line="18" pos:column="29">c<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">++<pos:position pos:line="18" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="9">re_syntax_table<pos:position pos:line="19" pos:column="24"/></name><index pos:line="19" pos:column="24">[<expr><name pos:line="19" pos:column="25">c<pos:position pos:line="19" pos:column="26"/></name></expr>]<pos:position pos:line="19" pos:column="27"/></index></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">Sword<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">re_syntax_table<pos:position pos:line="21" pos:column="20"/></name><index pos:line="21" pos:column="20">[<expr><literal type="char" pos:line="21" pos:column="21">'_'<pos:position pos:line="21" pos:column="24"/></literal></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">Sword<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">done<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <literal type="number" pos:line="23" pos:column="12">1<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_539_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transients<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">completeWriting<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">StoreEntry<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">e<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">e<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">.<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">mem_obj<pos:position pos:line="4" pos:column="18"/></name></name> <operator pos:line="4" pos:column="19">&amp;&amp;<pos:position pos:line="4" pos:column="29"/></operator> <name><name pos:line="4" pos:column="22">e<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">mem_obj<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">xitTable<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">index<pos:position pos:line="4" pos:column="47"/></name></name> <operator pos:line="4" pos:column="48">&gt;=<pos:position pos:line="4" pos:column="53"/></operator> <literal type="number" pos:line="4" pos:column="51">0<pos:position pos:line="4" pos:column="52"/></literal></expr>)<pos:position pos:line="4" pos:column="53"/></condition><then pos:line="4" pos:column="53"> <block pos:line="4" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name><name pos:line="5" pos:column="16">e<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">mem_obj<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">xitTable<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">.<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">io<pos:position pos:line="5" pos:column="38"/></name></name> <operator pos:line="5" pos:column="39">==<pos:position pos:line="5" pos:column="41"/></operator> <name><name pos:line="5" pos:column="42">MemObject<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">::<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">ioWriting<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
        <comment type="line" pos:line="6" pos:column="9">// there will be no more updates from us after this, so we must prevent</comment>
        <comment type="line" pos:line="7" pos:column="9">// future readers from joining</comment>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">map<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">freeEntry<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name><name pos:line="8" pos:column="24">e<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">mem_obj<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">xitTable<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">index<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt> <comment type="line" pos:line="8" pos:column="52">// just marks the locked entry</comment>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">map<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">closeForWriting<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">e<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">mem_obj<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">xitTable<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">index<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">e<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">mem_obj<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">xitTable<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">index<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="37">-<pos:position pos:line="10" pos:column="38"/></operator><literal type="number" pos:line="10" pos:column="38">1<pos:position pos:line="10" pos:column="39"/></literal></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">e<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">mem_obj<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">xitTable<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">io<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">MemObject<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">::<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">ioDone<pos:position pos:line="11" pos:column="51"/></name></name></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

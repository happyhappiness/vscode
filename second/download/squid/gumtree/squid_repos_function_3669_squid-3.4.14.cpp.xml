<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3669_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRange<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">merge<pos:position pos:line="2" pos:column="20"/></name></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Vector<pos:position pos:line="2" pos:column="28"/></name><argument_list type="generic" pos:line="2" pos:column="28">&lt;<argument><expr><name pos:line="2" pos:column="29">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></expr></argument>&gt;<pos:position pos:line="2" pos:column="51"/></argument_list></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">basis<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* reset old array */</comment>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">specs<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">clean<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* merge specs:
     * take one spec from "goods" and merge it with specs from
     * "specs" (if any) until there is no overlap */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">iterator<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><call><name><name pos:line="9" pos:column="18">basis<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">begin<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <call><name><name pos:line="11" pos:column="17">basis<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">.<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">end<pos:position pos:line="11" pos:column="26"/></name></name><argument_list pos:line="11" pos:column="26">()<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="29"/></condition> <block pos:line="11" pos:column="30">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">specs<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">size<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <call><name><operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">i<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">mergeWith<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">(<argument><expr><call><name><name pos:line="12" pos:column="45">specs<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">back<pos:position pos:line="12" pos:column="55"/></name></name><argument_list pos:line="12" pos:column="55">()<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59"> <block pos:line="12" pos:column="60">{
            <comment type="block" pos:line="13" pos:column="13">/* merged with current so get rid of the prev one */</comment>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">delete<pos:position pos:line="14" pos:column="19"/></operator> <call><name><name pos:line="14" pos:column="20">specs<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">pop_back<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
            <continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue>	<comment type="block" pos:line="15" pos:column="25">/* re-iterate */</comment>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">specs<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">push_back<pos:position pos:line="18" pos:column="24"/></name></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">i<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">i<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>			<comment type="block" pos:line="19" pos:column="33">/* progress */</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">64<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"HttpHdrRange::merge: had "<pos:position pos:line="22" pos:column="46"/></literal> <operator pos:line="22" pos:column="47">&lt;&lt;<pos:position pos:line="22" pos:column="55"/></operator> <call><name><name pos:line="22" pos:column="50">basis<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">.<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="56">size<pos:position pos:line="22" pos:column="60"/></name></name><argument_list pos:line="22" pos:column="60">()<pos:position pos:line="22" pos:column="62"/></argument_list></call> <operator pos:line="22" pos:column="63">&lt;&lt;<pos:position pos:line="22" pos:column="71"/></operator>
           <literal type="string" pos:line="23" pos:column="12">" specs, merged "<pos:position pos:line="23" pos:column="29"/></literal> <operator pos:line="23" pos:column="30">&lt;&lt;<pos:position pos:line="23" pos:column="38"/></operator> <call><name><name pos:line="23" pos:column="33">basis<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">.<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">size<pos:position pos:line="23" pos:column="43"/></name></name><argument_list pos:line="23" pos:column="43">()<pos:position pos:line="23" pos:column="45"/></argument_list></call> <operator pos:line="23" pos:column="46">-<pos:position pos:line="23" pos:column="47"/></operator> <call><name><name pos:line="23" pos:column="48">specs<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">size<pos:position pos:line="23" pos:column="58"/></name></name><argument_list pos:line="23" pos:column="58">()<pos:position pos:line="23" pos:column="60"/></argument_list></call> <operator pos:line="23" pos:column="61">&lt;&lt;<pos:position pos:line="23" pos:column="69"/></operator> <literal type="string" pos:line="23" pos:column="64">" specs"<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7836_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">SMB_TreeDisconnect<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">SMB_Tree_Handle<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">Tree_Handle<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">BOOL<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">discard<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>

<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">RFCNB_Pkt<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">pkt<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">pkt_len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">pkt_len<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">SMB_tdis_len<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">pkt<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator>struct <name pos:line="9" pos:column="19">RFCNB_Pkt<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator><call><name pos:line="9" pos:column="31">RFCNB_Alloc_Pkt<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">pkt_len<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">pkt<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{

        <expr_stmt><expr><name pos:line="13" pos:column="9">SMBlib_errno<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">SMBlibE_NoSpace<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
        <return pos:line="14" pos:column="9">return<expr><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">SMBlibE_BAD<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return> <comment type="block" pos:line="14" pos:column="30">/* Should handle the error */</comment>

    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Now plug in the values ... */</comment>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><call><name pos:line="20" pos:column="12">SMB_Hdr<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">pkt<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">SMB_tdis_len<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">SIVAL<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><call><name pos:line="21" pos:column="11">SMB_Hdr<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">pkt<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">SMB_hdr_idf_offset<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">SMB_DEF_IDF<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>  <comment type="block" pos:line="21" pos:column="60">/* Plunk in IDF */</comment>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><operator pos:line="22" pos:column="6">(<pos:position pos:line="22" pos:column="7"/></operator><call><name pos:line="22" pos:column="7">SMB_Hdr<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">pkt<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call> <operator pos:line="22" pos:column="20">+<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">SMB_hdr_com_offset<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator> <operator pos:line="22" pos:column="42">=<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">SMBtdis<pos:position pos:line="22" pos:column="51"/></name></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">SSVAL<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><call><name pos:line="23" pos:column="11">SMB_Hdr<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">pkt<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="25">SMB_hdr_pid_offset<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="45">Tree_Handle<pos:position pos:line="23" pos:column="56"/></name> <operator pos:line="23" pos:column="57">-&gt;<pos:position pos:line="23" pos:column="62"/></operator> <name pos:line="23" pos:column="60">con<pos:position pos:line="23" pos:column="63"/></name> <operator pos:line="23" pos:column="64">-&gt;<pos:position pos:line="23" pos:column="69"/></operator> <name pos:line="23" pos:column="67">pid<pos:position pos:line="23" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">SSVAL<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><call><name pos:line="24" pos:column="11">SMB_Hdr<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">pkt<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">SMB_hdr_mid_offset<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="45">Tree_Handle<pos:position pos:line="24" pos:column="56"/></name> <operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="60">con<pos:position pos:line="24" pos:column="63"/></name> <operator pos:line="24" pos:column="64">-&gt;<pos:position pos:line="24" pos:column="69"/></operator> <name pos:line="24" pos:column="67">mid<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">SSVAL<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><call><name pos:line="25" pos:column="11">SMB_Hdr<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">pkt<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="25">SMB_hdr_uid_offset<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">Tree_Handle<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">-&gt;<pos:position pos:line="25" pos:column="62"/></operator> <name pos:line="25" pos:column="60">con<pos:position pos:line="25" pos:column="63"/></name> <operator pos:line="25" pos:column="64">-&gt;<pos:position pos:line="25" pos:column="69"/></operator> <name pos:line="25" pos:column="67">uid<pos:position pos:line="25" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">*<pos:position pos:line="26" pos:column="6"/></operator><operator pos:line="26" pos:column="6">(<pos:position pos:line="26" pos:column="7"/></operator><call><name pos:line="26" pos:column="7">SMB_Hdr<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">pkt<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list></call> <operator pos:line="26" pos:column="20">+<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">SMB_hdr_wct_offset<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">SSVAL<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><call><name pos:line="28" pos:column="11">SMB_Hdr<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">pkt<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="25">SMB_hdr_tid_offset<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="45">Tree_Handle<pos:position pos:line="28" pos:column="56"/></name> <operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator> <name pos:line="28" pos:column="60">tid<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">SSVAL<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><call><name pos:line="29" pos:column="11">SMB_Hdr<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">pkt<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">SMB_tcon_bcc_offset<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="46">0<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* Now send the packet and sit back ... */</comment>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">RFCNB_Send<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name><name pos:line="33" pos:column="20">Tree_Handle<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="35">con<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator> <name pos:line="33" pos:column="42">Trans_Connect<pos:position pos:line="33" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">pkt<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">pkt_len<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call> <operator pos:line="33" pos:column="71">&lt;<pos:position pos:line="33" pos:column="75"/></operator> <literal type="number" pos:line="33" pos:column="73">0<pos:position pos:line="33" pos:column="74"/></literal></expr>)<pos:position pos:line="33" pos:column="75"/></condition><then pos:line="33" pos:column="75"> <block pos:line="33" pos:column="76">{

<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">DEBUG<pos:position pos:line="35" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">fprintf<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">stderr<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="25">"Error sending TDis request\n"<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">pkt<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">SMBlib_errno<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="24">-<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">SMBlibE_SendFailed<pos:position pos:line="40" pos:column="43"/></name></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
        <return pos:line="41" pos:column="9">return<expr><operator pos:line="41" pos:column="15">(<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">SMBlibE_BAD<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">)<pos:position pos:line="41" pos:column="28"/></operator></expr>;<pos:position pos:line="41" pos:column="29"/></return>

    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* Now get the response ... */</comment>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">RFCNB_Recv<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name><name pos:line="47" pos:column="20">Tree_Handle<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="35">con<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator> <name pos:line="47" pos:column="42">Trans_Connect<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="57">pkt<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">pkt_len<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call> <operator pos:line="47" pos:column="71">&lt;<pos:position pos:line="47" pos:column="75"/></operator> <literal type="number" pos:line="47" pos:column="73">0<pos:position pos:line="47" pos:column="74"/></literal></expr>)<pos:position pos:line="47" pos:column="75"/></condition><then pos:line="47" pos:column="75"> <block pos:line="47" pos:column="76">{

<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">DEBUG<pos:position pos:line="49" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">"Error receiving response to TCon\n"<pos:position pos:line="50" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">pkt<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">SMBlib_errno<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="24">-<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">SMBlibE_RecvFailed<pos:position pos:line="54" pos:column="43"/></name></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
        <return pos:line="55" pos:column="9">return<expr><operator pos:line="55" pos:column="15">(<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">SMBlibE_BAD<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">)<pos:position pos:line="55" pos:column="28"/></operator></expr>;<pos:position pos:line="55" pos:column="29"/></return>

    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Check out the response type ... */</comment>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><call><name pos:line="61" pos:column="9">CVAL<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><call><name pos:line="61" pos:column="14">SMB_Hdr<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">pkt<pos:position pos:line="61" pos:column="25"/></name></expr></argument>)<pos:position pos:line="61" pos:column="26"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="28">SMB_hdr_rcls_offset<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call> <operator pos:line="61" pos:column="49">!=<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="52">SMBC_SUCCESS<pos:position pos:line="61" pos:column="64"/></name></expr>)<pos:position pos:line="61" pos:column="65"/></condition><then pos:line="61" pos:column="65"> <block pos:line="61" pos:column="66">{  <comment type="block" pos:line="61" pos:column="69">/* Process error */</comment>

<cpp:ifdef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifdef<pos:position pos:line="63" pos:column="7"/></cpp:directive> <name pos:line="63" pos:column="8">DEBUG<pos:position pos:line="63" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">fprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">stderr<pos:position pos:line="64" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="25">"SMB_TDis failed with errorclass = %i, Error Code = %i\n"<pos:position pos:line="64" pos:column="82"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="65" pos:column="17">CVAL<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><call><name pos:line="65" pos:column="22">SMB_Hdr<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">pkt<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="36">SMB_hdr_rcls_offset<pos:position pos:line="65" pos:column="55"/></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="66" pos:column="17">SVAL<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><call><name pos:line="66" pos:column="22">SMB_Hdr<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">pkt<pos:position pos:line="66" pos:column="33"/></name></expr></argument>)<pos:position pos:line="66" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="36">SMB_hdr_err_offset<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="69" pos:column="9">SMBlib_SMB_Error<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <call><name pos:line="69" pos:column="28">IVAL<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><call><name pos:line="69" pos:column="33">SMB_Hdr<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">pkt<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="47">SMB_hdr_rcls_offset<pos:position pos:line="69" pos:column="66"/></name></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">pkt<pos:position pos:line="70" pos:column="27"/></name></expr></argument>)<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="71" pos:column="9">SMBlib_errno<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="24">SMBlibE_Remote<pos:position pos:line="71" pos:column="38"/></name></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>
        <return pos:line="72" pos:column="9">return<expr><operator pos:line="72" pos:column="15">(<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">SMBlibE_BAD<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">)<pos:position pos:line="72" pos:column="28"/></operator></expr>;<pos:position pos:line="72" pos:column="29"/></return>

    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">Tree_Handle<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator> <name pos:line="76" pos:column="20">tid<pos:position pos:line="76" pos:column="23"/></name></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <literal type="number" pos:line="76" pos:column="26">0xFFFF<pos:position pos:line="76" pos:column="32"/></literal></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>        <comment type="block" pos:line="76" pos:column="41">/* Invalid TID */</comment>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">Tree_Handle<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="20">mbs<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <literal type="number" pos:line="77" pos:column="26">0<pos:position pos:line="77" pos:column="27"/></literal></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>             <comment type="block" pos:line="77" pos:column="41">/* Invalid     */</comment>

<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">DEBUG<pos:position pos:line="79" pos:column="13"/></name></cpp:ifdef>

    <expr_stmt><expr><call><name pos:line="81" pos:column="5">fprintf<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">stderr<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="21">"Tree disconnect successful ...\n"<pos:position pos:line="81" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt>

<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="85" pos:column="5">/* What about the tree handle ? */</comment>

    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name pos:line="87" pos:column="9">discard<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">==<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">TRUE<pos:position pos:line="87" pos:column="24"/></name></expr>)<pos:position pos:line="87" pos:column="25"/></condition><then pos:line="87" pos:column="25"> <block pos:line="87" pos:column="26">{ <comment type="block" pos:line="87" pos:column="28">/* Unlink it and free it ... */</comment>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name><name pos:line="89" pos:column="13">Tree_Handle<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">-&gt;<pos:position pos:line="89" pos:column="30"/></operator> <name pos:line="89" pos:column="28">next<pos:position pos:line="89" pos:column="32"/></name></name> <operator pos:line="89" pos:column="33">==<pos:position pos:line="89" pos:column="35"/></operator> <name pos:line="89" pos:column="36">NULL<pos:position pos:line="89" pos:column="40"/></name></expr>)<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="13">Tree_Handle<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">-&gt;<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="28">con<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator> <name pos:line="90" pos:column="35">first_tree<pos:position pos:line="90" pos:column="45"/></name></name> <operator pos:line="90" pos:column="46">=<pos:position pos:line="90" pos:column="47"/></operator> <name><name pos:line="90" pos:column="48">Tree_Handle<pos:position pos:line="90" pos:column="59"/></name> <operator pos:line="90" pos:column="60">-&gt;<pos:position pos:line="90" pos:column="65"/></operator> <name pos:line="90" pos:column="63">prev<pos:position pos:line="90" pos:column="67"/></name></name></expr>;<pos:position pos:line="90" pos:column="68"/></expr_stmt></block></then>
        <else pos:line="91" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="92" pos:column="13">Tree_Handle<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">-&gt;<pos:position pos:line="92" pos:column="30"/></operator> <name pos:line="92" pos:column="28">next<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">-&gt;<pos:position pos:line="92" pos:column="38"/></operator> <name pos:line="92" pos:column="36">prev<pos:position pos:line="92" pos:column="40"/></name></name> <operator pos:line="92" pos:column="41">=<pos:position pos:line="92" pos:column="42"/></operator> <name><name pos:line="92" pos:column="43">Tree_Handle<pos:position pos:line="92" pos:column="54"/></name> <operator pos:line="92" pos:column="55">-&gt;<pos:position pos:line="92" pos:column="60"/></operator> <name pos:line="92" pos:column="58">prev<pos:position pos:line="92" pos:column="62"/></name></name></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt></block></else></if>

        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">Tree_Handle<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">-&gt;<pos:position pos:line="94" pos:column="30"/></operator> <name pos:line="94" pos:column="28">prev<pos:position pos:line="94" pos:column="32"/></name></name> <operator pos:line="94" pos:column="33">==<pos:position pos:line="94" pos:column="35"/></operator> <name pos:line="94" pos:column="36">NULL<pos:position pos:line="94" pos:column="40"/></name></expr>)<pos:position pos:line="94" pos:column="41"/></condition><then pos:line="94" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="13">Tree_Handle<pos:position pos:line="95" pos:column="24"/></name> <operator pos:line="95" pos:column="25">-&gt;<pos:position pos:line="95" pos:column="30"/></operator> <name pos:line="95" pos:column="28">con<pos:position pos:line="95" pos:column="31"/></name> <operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator> <name pos:line="95" pos:column="35">last_tree<pos:position pos:line="95" pos:column="44"/></name></name> <operator pos:line="95" pos:column="45">=<pos:position pos:line="95" pos:column="46"/></operator> <name><name pos:line="95" pos:column="47">Tree_Handle<pos:position pos:line="95" pos:column="58"/></name> <operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator> <name pos:line="95" pos:column="62">next<pos:position pos:line="95" pos:column="66"/></name></name></expr>;<pos:position pos:line="95" pos:column="67"/></expr_stmt></block></then>
        <else pos:line="96" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="13">Tree_Handle<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">-&gt;<pos:position pos:line="97" pos:column="30"/></operator> <name pos:line="97" pos:column="28">prev<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">-&gt;<pos:position pos:line="97" pos:column="38"/></operator> <name pos:line="97" pos:column="36">next<pos:position pos:line="97" pos:column="40"/></name></name> <operator pos:line="97" pos:column="41">=<pos:position pos:line="97" pos:column="42"/></operator> <name><name pos:line="97" pos:column="43">Tree_Handle<pos:position pos:line="97" pos:column="54"/></name> <operator pos:line="97" pos:column="55">-&gt;<pos:position pos:line="97" pos:column="60"/></operator> <name pos:line="97" pos:column="58">next<pos:position pos:line="97" pos:column="62"/></name></name></expr>;<pos:position pos:line="97" pos:column="63"/></expr_stmt></block></else></if>

    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="101" pos:column="5">RFCNB_Free_Pkt<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><name pos:line="101" pos:column="20">pkt<pos:position pos:line="101" pos:column="23"/></name></expr></argument>)<pos:position pos:line="101" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="25"/></expr_stmt>
    <return pos:line="102" pos:column="5">return<expr><operator pos:line="102" pos:column="11">(<pos:position pos:line="102" pos:column="12"/></operator><literal type="number" pos:line="102" pos:column="12">0<pos:position pos:line="102" pos:column="13"/></literal><operator pos:line="102" pos:column="13">)<pos:position pos:line="102" pos:column="14"/></operator></expr>;<pos:position pos:line="102" pos:column="15"/></return>

}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

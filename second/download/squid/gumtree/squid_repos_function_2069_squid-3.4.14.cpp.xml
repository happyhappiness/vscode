<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2069_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">httpMakeVaryMark<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">HttpRequest<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">request<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">HttpReply<pos:position pos:line="2" pos:column="50"/></name> <specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type> <name pos:line="2" pos:column="59">reply<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">vary<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">hdr<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pos<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">item<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">value<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">ilen<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">String<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">vstr<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">vstr<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">.<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">clean<pos:position pos:line="11" pos:column="15"/></name></name><argument_list pos:line="11" pos:column="15">()<pos:position pos:line="11" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">vary<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name><name pos:line="12" pos:column="12">reply<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">header<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">getList<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">HDR_VARY<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><call><name pos:line="14" pos:column="12">strListGetItem<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">vary<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="34">','<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="40">item<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="47">ilen<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="53">&amp;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="54">pos<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="59"/></condition> <block pos:line="14" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">name<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator><call><name pos:line="15" pos:column="30">xmalloc<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">ilen<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">+<pos:position pos:line="15" pos:column="44"/></operator> <literal type="number" pos:line="15" pos:column="45">1<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">xstrncpy<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">name<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">item<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">ilen<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">+<pos:position pos:line="16" pos:column="36"/></operator> <literal type="number" pos:line="16" pos:column="37">1<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">Tolower<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">name<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">strcmp<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">name<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"*"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36"> <block pos:line="19" pos:column="37">{
            <comment type="block" pos:line="20" pos:column="13">/* Can not handle "Vary: *" withtout ETag support */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">safe_free<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">name<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">vstr<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">clean<pos:position pos:line="22" pos:column="23"/></name></name><argument_list pos:line="22" pos:column="23">()<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">strListAdd<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="21">vstr<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">name<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="33">','<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">hdr<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name><name pos:line="27" pos:column="15">request<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">header<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">.<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">getByName<pos:position pos:line="27" pos:column="40"/></name></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">name<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">safe_free<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">name<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">value<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name><name pos:line="29" pos:column="17">hdr<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">termedBuf<pos:position pos:line="29" pos:column="30"/></name></name><argument_list pos:line="29" pos:column="30">()<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">value<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">value<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">rfc1738_escape_part<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">value<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">vstr<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">append<pos:position pos:line="33" pos:column="24"/></name></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"=\""<pos:position pos:line="33" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="32">2<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">vstr<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">append<pos:position pos:line="34" pos:column="24"/></name></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">value<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">vstr<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">append<pos:position pos:line="35" pos:column="24"/></name></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"\""<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="31">1<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="38" pos:column="9">hdr<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">clean<pos:position pos:line="38" pos:column="18"/></name></name><argument_list pos:line="38" pos:column="18">()<pos:position pos:line="38" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">vary<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">.<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">clean<pos:position pos:line="41" pos:column="15"/></name></name><argument_list pos:line="41" pos:column="15">()<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">X_ACCELERATOR_VARY<pos:position pos:line="42" pos:column="23"/></name></expr></cpp:if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">pos<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <name pos:line="44" pos:column="11">NULL<pos:position pos:line="44" pos:column="15"/></name></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">vary<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name><name pos:line="45" pos:column="12">reply<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">header<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">getList<pos:position pos:line="45" pos:column="33"/></name></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">HDR_X_ACCELERATOR_VARY<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>

    <while pos:line="47" pos:column="5">while <condition pos:line="47" pos:column="11">(<expr><call><name pos:line="47" pos:column="12">strListGetItem<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><operator pos:line="47" pos:column="27">&amp;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="28">vary<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="34">','<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="39">&amp;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="40">item<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="46">&amp;<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="47">ilen<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="53">&amp;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="54">pos<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="59"/></condition> <block pos:line="47" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">char<pos:position pos:line="48" pos:column="13"/></name> <modifier pos:line="48" pos:column="14">*<pos:position pos:line="48" pos:column="15"/></modifier></type><name pos:line="48" pos:column="15">name<pos:position pos:line="48" pos:column="19"/></name> <init pos:line="48" pos:column="20">= <expr><operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">char<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">*<pos:position pos:line="48" pos:column="29"/></operator><operator pos:line="48" pos:column="29">)<pos:position pos:line="48" pos:column="30"/></operator><call><name pos:line="48" pos:column="30">xmalloc<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">ilen<pos:position pos:line="48" pos:column="42"/></name> <operator pos:line="48" pos:column="43">+<pos:position pos:line="48" pos:column="44"/></operator> <literal type="number" pos:line="48" pos:column="45">1<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">xstrncpy<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">name<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">item<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">ilen<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">+<pos:position pos:line="49" pos:column="36"/></operator> <literal type="number" pos:line="49" pos:column="37">1<pos:position pos:line="49" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">Tolower<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">name<pos:position pos:line="50" pos:column="21"/></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">strListAdd<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><operator pos:line="51" pos:column="20">&amp;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="21">vstr<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">name<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="51" pos:column="33">','<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">hdr<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name><name pos:line="52" pos:column="15">request<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">header<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">.<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">getByName<pos:position pos:line="52" pos:column="40"/></name></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">name<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">safe_free<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">name<pos:position pos:line="53" pos:column="23"/></name></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">value<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <call><name><name pos:line="54" pos:column="17">hdr<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">.<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">termedBuf<pos:position pos:line="54" pos:column="30"/></name></name><argument_list pos:line="54" pos:column="30">()<pos:position pos:line="54" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">value<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">value<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <call><name pos:line="57" pos:column="21">rfc1738_escape_part<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">value<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">vstr<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">append<pos:position pos:line="58" pos:column="24"/></name></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"=\""<pos:position pos:line="58" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="32">2<pos:position pos:line="58" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">vstr<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">append<pos:position pos:line="59" pos:column="24"/></name></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">value<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">vstr<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">.<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">append<pos:position pos:line="60" pos:column="24"/></name></name><argument_list pos:line="60" pos:column="24">(<argument><expr><literal type="string" pos:line="60" pos:column="25">"\""<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="31">1<pos:position pos:line="60" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="63" pos:column="9">hdr<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">.<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">clean<pos:position pos:line="63" pos:column="18"/></name></name><argument_list pos:line="63" pos:column="18">()<pos:position pos:line="63" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="66" pos:column="5">vary<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">.<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">clean<pos:position pos:line="66" pos:column="15"/></name></name><argument_list pos:line="66" pos:column="15">()<pos:position pos:line="66" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">debugs<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><literal type="number" pos:line="69" pos:column="12">11<pos:position pos:line="69" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="16">3<pos:position pos:line="69" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="19">"httpMakeVaryMark: "<pos:position pos:line="69" pos:column="39"/></literal> <operator pos:line="69" pos:column="40">&lt;&lt;<pos:position pos:line="69" pos:column="48"/></operator> <name pos:line="69" pos:column="43">vstr<pos:position pos:line="69" pos:column="47"/></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
    <return pos:line="70" pos:column="5">return <expr><call><name><name pos:line="70" pos:column="12">vstr<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">.<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">termedBuf<pos:position pos:line="70" pos:column="26"/></name></name><argument_list pos:line="70" pos:column="26">()<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

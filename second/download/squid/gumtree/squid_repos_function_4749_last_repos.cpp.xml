<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4749_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">toUpper<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">()<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">24<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"\""<pos:position pos:line="4" pos:column="23"/></literal> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">this<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">&lt;&lt;<pos:position pos:line="4" pos:column="41"/></operator> <literal type="string" pos:line="4" pos:column="36">"\""<pos:position pos:line="4" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">size_type<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">j<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></init> <condition><expr><name pos:line="5" pos:column="27">j<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&lt;<pos:position pos:line="5" pos:column="33"/></operator> <call><name pos:line="5" pos:column="31">length<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="40"/></condition> <incr><expr><operator pos:line="5" pos:column="41">++<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">j<pos:position pos:line="5" pos:column="44"/></name></expr></incr>)<pos:position pos:line="5" pos:column="45"/></control> <block pos:line="5" pos:column="46">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">c<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">this<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator><index pos:line="6" pos:column="30">[<expr><name pos:line="6" pos:column="31">j<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">islower<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">c<pos:position pos:line="7" pos:column="22"/></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">setAt<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">j<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="22">toupper<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">c<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">24<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">8<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"result: \""<pos:position pos:line="10" pos:column="31"/></literal> <operator pos:line="10" pos:column="32">&lt;&lt;<pos:position pos:line="10" pos:column="40"/></operator> <operator pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">this<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">&lt;&lt;<pos:position pos:line="10" pos:column="49"/></operator> <literal type="string" pos:line="10" pos:column="44">"\""<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">++<pos:position pos:line="11" pos:column="7"/></operator><name><name pos:line="11" pos:column="7">stats<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">.<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">caseChange<pos:position pos:line="11" pos:column="23"/></name></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

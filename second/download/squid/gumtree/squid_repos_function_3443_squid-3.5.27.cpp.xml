<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3443_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">addr2oid<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name><name pos:line="2" pos:column="10">Ip<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Address<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="23">addr<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">oid<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">Dest<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">u_int<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">i<pos:position pos:line="4" pos:column="12"/></name></decl> ;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">u_char<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">cp<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">in_addr<pos:position pos:line="6" pos:column="19"/></name></name></type> <name pos:line="6" pos:column="20">i4addr<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">in6_addr<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">i6addr<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">oid<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">code<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><ternary><condition><expr><call><name><name pos:line="8" pos:column="16">addr<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">isIPv6<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">()<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>?<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <expr><name pos:line="8" pos:column="31">INETADDRESSTYPE_IPV6<pos:position pos:line="8" pos:column="51"/></name></expr>  <pos:position pos:line="8" pos:column="53"/></then><else pos:line="8" pos:column="53">: <expr><name pos:line="8" pos:column="55">INETADDRESSTYPE_IPV4<pos:position pos:line="8" pos:column="75"/></name></expr></else></ternary></expr></init></decl> ;<pos:position pos:line="8" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">u_int<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">size<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><ternary><condition><expr><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">code<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">INETADDRESSTYPE_IPV4<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator></expr> ?<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <expr><sizeof pos:line="9" pos:column="51">sizeof<argument_list pos:line="9" pos:column="57">(<argument><expr pos:line="9" pos:column="58">struct <name pos:line="9" pos:column="65">in_addr<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></sizeof></expr></then><else pos:line="9" pos:column="73">:<expr><sizeof pos:line="9" pos:column="74">sizeof<argument_list pos:line="9" pos:column="80">(<argument><expr pos:line="9" pos:column="81">struct <name pos:line="9" pos:column="88">in6_addr<pos:position pos:line="9" pos:column="96"/></name></expr></argument>)<pos:position pos:line="9" pos:column="97"/></argument_list></sizeof></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="98"/></decl_stmt>
    <comment type="line" pos:line="10" pos:column="5">//  Dest[0] = code ;</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">( <expr><name pos:line="11" pos:column="10">code<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">INETADDRESSTYPE_IPV4<pos:position pos:line="11" pos:column="38"/></name></expr> )<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">addr<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">getInAddr<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">i4addr<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">cp<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">u_char<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></operator><operator pos:line="13" pos:column="23">)<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><operator pos:line="13" pos:column="26">(<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="27">i4addr<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">s_addr<pos:position pos:line="13" pos:column="40"/></name></name><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">addr<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">getInAddr<pos:position pos:line="15" pos:column="23"/></name></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">i6addr<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">cp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">u_char<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">)<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="26">i6addr<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">( <init><expr><name pos:line="18" pos:column="11">i<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal></expr> ;<pos:position pos:line="18" pos:column="16"/></init> <condition><expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&lt;<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="21">size<pos:position pos:line="18" pos:column="25"/></name></expr> ;<pos:position pos:line="18" pos:column="27"/></condition> <incr><expr><operator pos:line="18" pos:column="28">++<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">i<pos:position pos:line="18" pos:column="31"/></name></expr></incr>)<pos:position pos:line="18" pos:column="32"/></control> <block pos:line="18" pos:column="33">{
        <comment type="line" pos:line="19" pos:column="9">// OID's are in network order</comment>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">Dest<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name></expr>]<pos:position pos:line="20" pos:column="16"/></index></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">cp<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="21" pos:column="9">++<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">cp<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">MemBuf<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">tmp<pos:position pos:line="23" pos:column="15"/></name></decl>;<pos:position pos:line="23" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">49<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">7<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"addr2oid: Dest : "<pos:position pos:line="24" pos:column="38"/></literal> <operator pos:line="24" pos:column="39">&lt;&lt;<pos:position pos:line="24" pos:column="47"/></operator> <call><name pos:line="24" pos:column="42">snmpDebugOid<pos:position pos:line="24" pos:column="54"/></name><argument_list pos:line="24" pos:column="54">(<argument><expr><name pos:line="24" pos:column="55">Dest<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">size<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="67">tmp<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

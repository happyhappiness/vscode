<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3057_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CachePeer<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">peerUserHashSelectParent<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">HttpRequest<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">request<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CachePeer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">p<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">CachePeer<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">tp<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">user_hash<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">combined_hash<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">double<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">score<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">double<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">high_score<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">key<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name pos:line="12" pos:column="23">NULL<pos:position pos:line="12" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">n_userhash_peers<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">request<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">auth_user_request<pos:position pos:line="17" pos:column="35"/></name></name> <operator pos:line="17" pos:column="36">!=<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">NULL<pos:position pos:line="17" pos:column="43"/></name></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">key<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name><name pos:line="18" pos:column="15">request<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">auth_user_request<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">username<pos:position pos:line="18" pos:column="51"/></name></name><argument_list pos:line="18" pos:column="51">()<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">key<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* calculate hash key */</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">39<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">2<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"peerUserHashSelectParent: Calculating hash for "<pos:position pos:line="24" pos:column="68"/></literal> <operator pos:line="24" pos:column="69">&lt;&lt;<pos:position pos:line="24" pos:column="77"/></operator> <name pos:line="24" pos:column="72">key<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>

    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><expr><name pos:line="26" pos:column="10">c<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">key<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></init> <condition><expr><operator pos:line="26" pos:column="19">*<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">c<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">!=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">0<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></condition> <incr><expr><operator pos:line="26" pos:column="28">++<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">c<pos:position pos:line="26" pos:column="31"/></name></expr></incr>)<pos:position pos:line="26" pos:column="32"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">user_hash<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">+=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">ROTATE_LEFT<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">user_hash<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="45">19<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call> <operator pos:line="27" pos:column="49">+<pos:position pos:line="27" pos:column="50"/></operator> <operator pos:line="27" pos:column="51">*<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">c<pos:position pos:line="27" pos:column="53"/></name></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt></block></for>

    <comment type="block" pos:line="29" pos:column="5">/* select CachePeer */</comment>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">k<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></init> <condition><expr><name pos:line="30" pos:column="17">k<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">n_userhash_peers<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></condition> <incr><expr><operator pos:line="30" pos:column="39">++<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">k<pos:position pos:line="30" pos:column="42"/></name></expr></incr>)<pos:position pos:line="30" pos:column="43"/></control> <block pos:line="30" pos:column="44">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">tp<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name><name pos:line="31" pos:column="14">userhash_peers<pos:position pos:line="31" pos:column="28"/></name><index pos:line="31" pos:column="28">[<expr><name pos:line="31" pos:column="29">k<pos:position pos:line="31" pos:column="30"/></name></expr>]<pos:position pos:line="31" pos:column="31"/></index></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">combined_hash<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="25">(<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">user_hash<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">^<pos:position pos:line="32" pos:column="37"/></operator> <name><name pos:line="32" pos:column="38">tp<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">userhash<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">.<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="51">hash<pos:position pos:line="32" pos:column="55"/></name></name><operator pos:line="32" pos:column="55">)<pos:position pos:line="32" pos:column="56"/></operator></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">combined_hash<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">+=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">combined_hash<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">*<pos:position pos:line="33" pos:column="41"/></operator> <literal type="number" pos:line="33" pos:column="42">0x62531965<pos:position pos:line="33" pos:column="52"/></literal></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">combined_hash<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <call><name pos:line="34" pos:column="25">ROTATE_LEFT<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">combined_hash<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="52">21<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">score<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">combined_hash<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">*<pos:position pos:line="35" pos:column="32"/></operator> <name><name pos:line="35" pos:column="33">tp<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">userhash<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">.<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">load_multiplier<pos:position pos:line="35" pos:column="61"/></name></name></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">39<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">3<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="23">"peerUserHashSelectParent: "<pos:position pos:line="36" pos:column="51"/></literal> <operator pos:line="36" pos:column="52">&lt;&lt;<pos:position pos:line="36" pos:column="60"/></operator> <name><name pos:line="36" pos:column="55">tp<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="59">name<pos:position pos:line="36" pos:column="63"/></name></name> <operator pos:line="36" pos:column="64">&lt;&lt;<pos:position pos:line="36" pos:column="72"/></operator> <literal type="string" pos:line="36" pos:column="67">" combined_hash "<pos:position pos:line="36" pos:column="84"/></literal> <operator pos:line="36" pos:column="85">&lt;&lt;<pos:position pos:line="36" pos:column="93"/></operator> <name pos:line="36" pos:column="88">combined_hash<pos:position pos:line="36" pos:column="101"/></name>  <operator pos:line="36" pos:column="103">&lt;&lt;<pos:position pos:line="36" pos:column="111"/></operator>
               <literal type="string" pos:line="37" pos:column="16">" score "<pos:position pos:line="37" pos:column="25"/></literal> <operator pos:line="37" pos:column="26">&lt;&lt;<pos:position pos:line="37" pos:column="34"/></operator> <call><name><name pos:line="37" pos:column="29">std<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">::<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">setprecision<pos:position pos:line="37" pos:column="46"/></name></name><argument_list pos:line="37" pos:column="46">(<argument><expr><literal type="number" pos:line="37" pos:column="47">0<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call> <operator pos:line="37" pos:column="50">&lt;&lt;<pos:position pos:line="37" pos:column="58"/></operator> <name pos:line="37" pos:column="53">score<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">score<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">&gt;<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="22">high_score<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">)<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="34">&amp;&amp;<pos:position pos:line="39" pos:column="44"/></operator> <call><name pos:line="39" pos:column="37">peerHTTPOkay<pos:position pos:line="39" pos:column="49"/></name><argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">tp<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">request<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="63"/></condition><then pos:line="39" pos:column="63"> <block pos:line="39" pos:column="64">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">p<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">tp<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">high_score<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">score<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">p<pos:position pos:line="45" pos:column="10"/></name></expr>)<pos:position pos:line="45" pos:column="11"/></condition><then pos:line="45" pos:column="11">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">debugs<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">39<pos:position pos:line="46" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="20">2<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"peerUserHashSelectParent: selected "<pos:position pos:line="46" pos:column="60"/></literal> <operator pos:line="46" pos:column="61">&lt;&lt;<pos:position pos:line="46" pos:column="69"/></operator> <name><name pos:line="46" pos:column="64">p<pos:position pos:line="46" pos:column="65"/></name><operator pos:line="46" pos:column="65">-&gt;<pos:position pos:line="46" pos:column="70"/></operator><name pos:line="46" pos:column="67">name<pos:position pos:line="46" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="73"/></expr_stmt></block></then></if>

    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">p<pos:position pos:line="48" pos:column="13"/></name></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7389_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">setReadTimeout<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">timeToRead<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">negotiationTimeout<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">timeUsed<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">squid_curtime<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">-<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="46">startTime<pos:position pos:line="6" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">int<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">timeLeft<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><call><name pos:line="7" pos:column="30">max<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>, <argument><expr><cast type="static" pos:line="7" pos:column="37">static_cast<argument_list type="generic" pos:line="7" pos:column="48">&lt;<argument><expr><name pos:line="7" pos:column="49">int<pos:position pos:line="7" pos:column="52"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="56"/></argument_list><argument_list pos:line="7" pos:column="53">(<argument><expr><name pos:line="7" pos:column="54">negotiationTimeout<pos:position pos:line="7" pos:column="72"/></name> <operator pos:line="7" pos:column="73">-<pos:position pos:line="7" pos:column="74"/></operator> <name pos:line="7" pos:column="75">timeUsed<pos:position pos:line="7" pos:column="83"/></name></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></cast></expr></argument>)<pos:position pos:line="7" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="86"/></decl_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">timeToRead<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">min<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><cast type="static" pos:line="8" pos:column="26">static_cast<argument_list type="generic" pos:line="8" pos:column="37">&lt;<argument><expr><name pos:line="8" pos:column="38">int<pos:position pos:line="8" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="45"/></argument_list><argument_list pos:line="8" pos:column="42">(<argument><expr><name><operator pos:line="8" pos:column="43">::<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">Config<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">.<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">Timeout<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">read<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">timeLeft<pos:position pos:line="8" pos:column="75"/></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">timeToRead<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><operator pos:line="10" pos:column="22">::<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">Config<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">Timeout<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">read<pos:position pos:line="10" pos:column="43"/></name></name></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt></block></else></if>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">AsyncCall<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">Pointer<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">nil<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">commSetConnTimeout<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><call><name pos:line="12" pos:column="24">serverConnection<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">()<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">timeToRead<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">nil<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

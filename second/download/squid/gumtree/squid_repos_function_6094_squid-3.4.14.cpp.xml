<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6094_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">ESISegment<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">listToChar<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">length<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">listLength<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">rv<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></operator><operator pos:line="5" pos:column="23">)<pos:position pos:line="5" pos:column="24"/></operator><call><name pos:line="5" pos:column="24">xmalloc<pos:position pos:line="5" pos:column="31"/></name> <argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">length<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">+<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="42">1<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">rv<pos:position pos:line="6" pos:column="15"/></name></expr></argument>)<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">rv<pos:position pos:line="7" pos:column="7"/></name> <index pos:line="7" pos:column="8">[<expr><name pos:line="7" pos:column="9">length<pos:position pos:line="7" pos:column="15"/></name></expr>]<pos:position pos:line="7" pos:column="16"/></index></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="char" pos:line="7" pos:column="19">'\0'<pos:position pos:line="7" pos:column="23"/></literal></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">ESISegment<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">::<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">Pointer<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">temp<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">this<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">pos<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><call><name><name pos:line="12" pos:column="12">temp<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">getRaw<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="26"/></condition> <block pos:line="12" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">memcpy<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><operator pos:line="13" pos:column="16">&amp;<pos:position pos:line="13" pos:column="21"/></operator><name><name pos:line="13" pos:column="17">rv<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><name pos:line="13" pos:column="20">pos<pos:position pos:line="13" pos:column="23"/></name></expr>]<pos:position pos:line="13" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="26">temp<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">buf<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">temp<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">len<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">pos<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">temp<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">len<pos:position pos:line="14" pos:column="25"/></name></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">temp<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">temp<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">next<pos:position pos:line="15" pos:column="26"/></name></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">rv<pos:position pos:line="18" pos:column="14"/></name></expr>;<pos:position pos:line="18" pos:column="15"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4760_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IdentLookup<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">LookupDone<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ident<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">data<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">checklist<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">Filled<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><cast type="static" pos:line="4" pos:column="44">static_cast<argument_list type="generic" pos:line="4" pos:column="55">&lt;<argument><expr><name pos:line="4" pos:column="56">ACLChecklist<pos:position pos:line="4" pos:column="68"/></name><operator pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="73"/></argument_list><argument_list pos:line="4" pos:column="70">(<argument><expr><name pos:line="4" pos:column="71">data<pos:position pos:line="4" pos:column="75"/></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></cast></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name><name pos:line="5" pos:column="12">checklist<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">asyncState<pos:position pos:line="5" pos:column="33"/></name></name><argument_list pos:line="5" pos:column="33">()<pos:position pos:line="5" pos:column="35"/></argument_list></call> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <call><name><name pos:line="5" pos:column="39">IdentLookup<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">::<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">Instance<pos:position pos:line="5" pos:column="60"/></name></name><argument_list pos:line="5" pos:column="60">()<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">ident<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">xstrncpy<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name><name pos:line="8" pos:column="18">checklist<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">rfc931<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">ident<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">USER_IDENT_SZ<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">xstrncpy<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name><name pos:line="10" pos:column="18">checklist<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">rfc931<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">dash_str<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">USER_IDENT_SZ<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * Cache the ident result in the connection, to avoid redoing ident lookup
     * over and over on persistent connections
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">checklist<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">conn<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">&amp;&amp;<pos:position pos:line="17" pos:column="45"/></operator> <operator pos:line="17" pos:column="38">!<pos:position pos:line="17" pos:column="39"/></operator><call><name><name pos:line="17" pos:column="39">checklist<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">conn<pos:position pos:line="17" pos:column="54"/></name></name><argument_list pos:line="17" pos:column="54">()<pos:position pos:line="17" pos:column="56"/></argument_list></call><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name><name pos:line="17" pos:column="58">rfc931<pos:position pos:line="17" pos:column="64"/></name><index pos:line="17" pos:column="64">[<expr><literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr>]<pos:position pos:line="17" pos:column="67"/></index></name></expr>)<pos:position pos:line="17" pos:column="68"/></condition><then pos:line="17" pos:column="68">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">xstrncpy<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><call><name><name pos:line="18" pos:column="18">checklist<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">conn<pos:position pos:line="18" pos:column="33"/></name></name><argument_list pos:line="18" pos:column="33">()<pos:position pos:line="18" pos:column="35"/></argument_list></call><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">rfc931<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="45">checklist<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">rfc931<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">USER_IDENT_SZ<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">checklist<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">asyncInProgress<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="boolean" pos:line="20" pos:column="32">false<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">checklist<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">changeState<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">(<argument><expr><call><name><name pos:line="21" pos:column="28">ACLChecklist<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">::<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">NullState<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">::<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">Instance<pos:position pos:line="21" pos:column="61"/></name></name><argument_list pos:line="21" pos:column="61">()<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">checklist<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">check<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1684_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">peerDigestSetCBlock<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">PeerDigest<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">pd<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">buf<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreDigestCBlock<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">cblock<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">freed_size<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">host<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name><name pos:line="6" pos:column="24">pd<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">host<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">termedBuf<pos:position pos:line="6" pos:column="42"/></name></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">xmemcpy<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="14">cblock<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="27">sizeof<argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">cblock<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* network -&gt; host conversions */</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">cblock<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">ver<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">current<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">ntohs<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">cblock<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">ver<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">current<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">cblock<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">ver<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">required<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <call><name pos:line="11" pos:column="27">ntohs<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">cblock<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">.<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">ver<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">.<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">required<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">cblock<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">capacity<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">ntohl<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">cblock<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">.<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">capacity<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">cblock<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">count<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">ntohl<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name><name pos:line="13" pos:column="26">cblock<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">count<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">cblock<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">del_count<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">ntohl<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name><name pos:line="14" pos:column="30">cblock<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">del_count<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">cblock<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">mask_size<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">ntohl<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name><name pos:line="15" pos:column="30">cblock<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">mask_size<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">72<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">2<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"got digest cblock from "<pos:position pos:line="16" pos:column="44"/></literal> <operator pos:line="16" pos:column="45">&lt;&lt;<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="48">host<pos:position pos:line="16" pos:column="52"/></name> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <literal type="string" pos:line="16" pos:column="56">"; ver: "<pos:position pos:line="16" pos:column="65"/></literal> <operator pos:line="16" pos:column="66">&lt;&lt;<pos:position pos:line="16" pos:column="74"/></operator>
           <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">int<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">cblock<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">ver<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">current<pos:position pos:line="17" pos:column="36"/></name></name> <operator pos:line="17" pos:column="37">&lt;&lt;<pos:position pos:line="17" pos:column="45"/></operator> <literal type="string" pos:line="17" pos:column="40">" (req: "<pos:position pos:line="17" pos:column="49"/></literal> <operator pos:line="17" pos:column="50">&lt;&lt;<pos:position pos:line="17" pos:column="58"/></operator> <operator pos:line="17" pos:column="53">(<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">int<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator> <name><name pos:line="17" pos:column="59">cblock<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">.<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="66">ver<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">.<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="70">required<pos:position pos:line="17" pos:column="78"/></name></name> <operator pos:line="17" pos:column="79">&lt;&lt;<pos:position pos:line="17" pos:column="87"/></operator>
           <literal type="string" pos:line="18" pos:column="12">")"<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">72<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">2<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"\t size: "<pos:position pos:line="20" pos:column="30"/></literal> <operator pos:line="20" pos:column="31">&lt;&lt;<pos:position pos:line="20" pos:column="39"/></operator>
           <name><name pos:line="21" pos:column="12">cblock<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">mask_size<pos:position pos:line="21" pos:column="28"/></name></name> <operator pos:line="21" pos:column="29">&lt;&lt;<pos:position pos:line="21" pos:column="37"/></operator> <literal type="string" pos:line="21" pos:column="32">" bytes, e-cnt: "<pos:position pos:line="21" pos:column="49"/></literal> <operator pos:line="21" pos:column="50">&lt;&lt;<pos:position pos:line="21" pos:column="58"/></operator>
           <name><name pos:line="22" pos:column="12">cblock<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">count<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">&lt;&lt;<pos:position pos:line="22" pos:column="33"/></operator> <literal type="string" pos:line="22" pos:column="28">", e-util: "<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&lt;&lt;<pos:position pos:line="22" pos:column="49"/></operator>
           <call><name pos:line="23" pos:column="12">xpercentInt<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">cblock<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">count<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="38">cblock<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">capacity<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">&lt;&lt;<pos:position pos:line="23" pos:column="63"/></operator> <literal type="string" pos:line="23" pos:column="58">"%"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument> )<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/* check version requirements (both ways) */</comment>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">cblock<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">ver<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">required<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">&gt;<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="31">CacheDigestVer<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">current<pos:position pos:line="26" pos:column="53"/></name></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">72<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">""<pos:position pos:line="27" pos:column="25"/></literal> <operator pos:line="27" pos:column="26">&lt;&lt;<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="29">host<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">&lt;&lt;<pos:position pos:line="27" pos:column="42"/></operator> <literal type="string" pos:line="27" pos:column="37">" digest requires version "<pos:position pos:line="27" pos:column="64"/></literal> <operator pos:line="27" pos:column="65">&lt;&lt;<pos:position pos:line="27" pos:column="73"/></operator>
               <name><name pos:line="28" pos:column="16">cblock<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">ver<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">.<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">required<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">&lt;&lt;<pos:position pos:line="28" pos:column="44"/></operator> <literal type="string" pos:line="28" pos:column="39">"; have: "<pos:position pos:line="28" pos:column="49"/></literal> <operator pos:line="28" pos:column="50">&lt;&lt;<pos:position pos:line="28" pos:column="58"/></operator> <name><name pos:line="28" pos:column="53">CacheDigestVer<pos:position pos:line="28" pos:column="67"/></name><operator pos:line="28" pos:column="67">.<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="68">current<pos:position pos:line="28" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>

        <return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">cblock<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">ver<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">current<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">&lt;<pos:position pos:line="33" pos:column="32"/></operator> <name><name pos:line="33" pos:column="30">CacheDigestVer<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">required<pos:position pos:line="33" pos:column="53"/></name></name></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <block pos:line="33" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">72<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">""<pos:position pos:line="34" pos:column="25"/></literal> <operator pos:line="34" pos:column="26">&lt;&lt;<pos:position pos:line="34" pos:column="34"/></operator> <name pos:line="34" pos:column="29">host<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">&lt;&lt;<pos:position pos:line="34" pos:column="42"/></operator> <literal type="string" pos:line="34" pos:column="37">" digest is version "<pos:position pos:line="34" pos:column="58"/></literal> <operator pos:line="34" pos:column="59">&lt;&lt;<pos:position pos:line="34" pos:column="67"/></operator>
               <name><name pos:line="35" pos:column="16">cblock<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">.<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">ver<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">current<pos:position pos:line="35" pos:column="34"/></name></name> <operator pos:line="35" pos:column="35">&lt;&lt;<pos:position pos:line="35" pos:column="43"/></operator> <literal type="string" pos:line="35" pos:column="38">"; we require: "<pos:position pos:line="35" pos:column="54"/></literal> <operator pos:line="35" pos:column="55">&lt;&lt;<pos:position pos:line="35" pos:column="63"/></operator>
               <name><name pos:line="36" pos:column="16">CacheDigestVer<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">.<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">required<pos:position pos:line="36" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>

        <return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/* check consistency */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">cblock<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">.<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">ver<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">required<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">&gt;<pos:position pos:line="42" pos:column="33"/></operator> <name><name pos:line="42" pos:column="31">cblock<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">.<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">ver<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">.<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">current<pos:position pos:line="42" pos:column="49"/></name></name> <operator pos:line="42" pos:column="50">||<pos:position pos:line="42" pos:column="52"/></operator>
            <name><name pos:line="43" pos:column="13">cblock<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">mask_size<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">&lt;=<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal> <operator pos:line="43" pos:column="35">||<pos:position pos:line="43" pos:column="37"/></operator> <name><name pos:line="43" pos:column="38">cblock<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">.<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">capacity<pos:position pos:line="43" pos:column="53"/></name></name> <operator pos:line="43" pos:column="54">&lt;=<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="57">0<pos:position pos:line="43" pos:column="58"/></literal> <operator pos:line="43" pos:column="59">||<pos:position pos:line="43" pos:column="61"/></operator>
            <name><name pos:line="44" pos:column="13">cblock<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">bits_per_entry<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">&lt;=<pos:position pos:line="44" pos:column="40"/></operator> <literal type="number" pos:line="44" pos:column="38">0<pos:position pos:line="44" pos:column="39"/></literal> <operator pos:line="44" pos:column="40">||<pos:position pos:line="44" pos:column="42"/></operator> <name><name pos:line="44" pos:column="43">cblock<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">.<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">hash_func_count<pos:position pos:line="44" pos:column="65"/></name></name> <operator pos:line="44" pos:column="66">&lt;=<pos:position pos:line="44" pos:column="71"/></operator> <literal type="number" pos:line="44" pos:column="69">0<pos:position pos:line="44" pos:column="70"/></literal></expr>)<pos:position pos:line="44" pos:column="71"/></condition><then pos:line="44" pos:column="71"> <block pos:line="44" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">72<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">""<pos:position pos:line="45" pos:column="25"/></literal> <operator pos:line="45" pos:column="26">&lt;&lt;<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="29">host<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">&lt;&lt;<pos:position pos:line="45" pos:column="42"/></operator> <literal type="string" pos:line="45" pos:column="37">" digest cblock is corrupted."<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* check consistency further */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">size_t<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">)<pos:position pos:line="50" pos:column="17"/></operator><name><name pos:line="50" pos:column="17">cblock<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">mask_size<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">!=<pos:position pos:line="50" pos:column="36"/></operator> <call><name pos:line="50" pos:column="37">cacheDigestCalcMaskSize<pos:position pos:line="50" pos:column="60"/></name><argument_list pos:line="50" pos:column="60">(<argument><expr><name><name pos:line="50" pos:column="61">cblock<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">.<pos:position pos:line="50" pos:column="68"/></operator><name pos:line="50" pos:column="68">capacity<pos:position pos:line="50" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="78">cblock<pos:position pos:line="50" pos:column="84"/></name><operator pos:line="50" pos:column="84">.<pos:position pos:line="50" pos:column="85"/></operator><name pos:line="50" pos:column="85">bits_per_entry<pos:position pos:line="50" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="100"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="101"/></condition><then pos:line="50" pos:column="101"> <block pos:line="50" pos:column="102">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">72<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="23">host<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">&lt;&lt;<pos:position pos:line="51" pos:column="36"/></operator> <literal type="string" pos:line="51" pos:column="31">" digest cblock is corrupted "<pos:position pos:line="51" pos:column="61"/></literal> <operator pos:line="51" pos:column="62">&lt;&lt;<pos:position pos:line="51" pos:column="70"/></operator>
               <literal type="string" pos:line="52" pos:column="16">"(mask size mismatch: "<pos:position pos:line="52" pos:column="39"/></literal> <operator pos:line="52" pos:column="40">&lt;&lt;<pos:position pos:line="52" pos:column="48"/></operator> <name><name pos:line="52" pos:column="43">cblock<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">.<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">mask_size<pos:position pos:line="52" pos:column="59"/></name></name> <operator pos:line="52" pos:column="60">&lt;&lt;<pos:position pos:line="52" pos:column="68"/></operator> <literal type="string" pos:line="52" pos:column="63">" ? "<pos:position pos:line="52" pos:column="68"/></literal> <operator pos:line="52" pos:column="69">&lt;&lt;<pos:position pos:line="52" pos:column="77"/></operator>
               <call><name pos:line="53" pos:column="16">cacheDigestCalcMaskSize<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name><name pos:line="53" pos:column="40">cblock<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">.<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">capacity<pos:position pos:line="53" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="57">cblock<pos:position pos:line="53" pos:column="63"/></name><operator pos:line="53" pos:column="63">.<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="64">bits_per_entry<pos:position pos:line="53" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call>
               <operator pos:line="54" pos:column="16">&lt;&lt;<pos:position pos:line="54" pos:column="24"/></operator> <literal type="string" pos:line="54" pos:column="19">")."<pos:position pos:line="54" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* there are some things we cannot do yet */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">cblock<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">hash_func_count<pos:position pos:line="59" pos:column="31"/></name></name> <operator pos:line="59" pos:column="32">!=<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="35">CacheDigestHashFuncCount<pos:position pos:line="59" pos:column="59"/></name></expr>)<pos:position pos:line="59" pos:column="60"/></condition><then pos:line="59" pos:column="60"> <block pos:line="59" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">debugs<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="number" pos:line="60" pos:column="16">72<pos:position pos:line="60" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="23">""<pos:position pos:line="60" pos:column="25"/></literal> <operator pos:line="60" pos:column="26">&lt;&lt;<pos:position pos:line="60" pos:column="34"/></operator> <name pos:line="60" pos:column="29">host<pos:position pos:line="60" pos:column="33"/></name> <operator pos:line="60" pos:column="34">&lt;&lt;<pos:position pos:line="60" pos:column="42"/></operator> <literal type="string" pos:line="60" pos:column="37">" digest: unsupported #hash functions: "<pos:position pos:line="60" pos:column="77"/></literal> <operator pos:line="60" pos:column="78">&lt;&lt;<pos:position pos:line="60" pos:column="86"/></operator>
               <name><name pos:line="61" pos:column="16">cblock<pos:position pos:line="61" pos:column="22"/></name><operator pos:line="61" pos:column="22">.<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="23">hash_func_count<pos:position pos:line="61" pos:column="38"/></name></name> <operator pos:line="61" pos:column="39">&lt;&lt;<pos:position pos:line="61" pos:column="47"/></operator> <literal type="string" pos:line="61" pos:column="42">" ? "<pos:position pos:line="61" pos:column="47"/></literal> <operator pos:line="61" pos:column="48">&lt;&lt;<pos:position pos:line="61" pos:column="56"/></operator> <name pos:line="61" pos:column="51">CacheDigestHashFuncCount<pos:position pos:line="61" pos:column="75"/></name> <operator pos:line="61" pos:column="76">&lt;&lt;<pos:position pos:line="61" pos:column="84"/></operator> <literal type="string" pos:line="61" pos:column="79">"."<pos:position pos:line="61" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="84"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">0<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="65" pos:column="5">/*
     * no cblock bugs below this point
     */</comment>
    <comment type="block" pos:line="68" pos:column="5">/* check size changes */</comment>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name><name pos:line="69" pos:column="9">pd<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">cd<pos:position pos:line="69" pos:column="15"/></name></name> <operator pos:line="69" pos:column="16">&amp;&amp;<pos:position pos:line="69" pos:column="26"/></operator> <name><name pos:line="69" pos:column="19">cblock<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">.<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="26">mask_size<pos:position pos:line="69" pos:column="35"/></name></name> <operator pos:line="69" pos:column="36">!=<pos:position pos:line="69" pos:column="38"/></operator> <operator pos:line="69" pos:column="39">(<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="40">ssize_t<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">)<pos:position pos:line="69" pos:column="48"/></operator><name><name pos:line="69" pos:column="48">pd<pos:position pos:line="69" pos:column="50"/></name><operator pos:line="69" pos:column="50">-&gt;<pos:position pos:line="69" pos:column="55"/></operator><name pos:line="69" pos:column="52">cd<pos:position pos:line="69" pos:column="54"/></name><operator pos:line="69" pos:column="54">-&gt;<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="56">mask_size<pos:position pos:line="69" pos:column="65"/></name></name></expr>)<pos:position pos:line="69" pos:column="66"/></condition><then pos:line="69" pos:column="66"> <block pos:line="69" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">debugs<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="number" pos:line="70" pos:column="16">72<pos:position pos:line="70" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="20">2<pos:position pos:line="70" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="23">host<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">&lt;&lt;<pos:position pos:line="70" pos:column="36"/></operator> <literal type="string" pos:line="70" pos:column="31">" digest changed size: "<pos:position pos:line="70" pos:column="55"/></literal> <operator pos:line="70" pos:column="56">&lt;&lt;<pos:position pos:line="70" pos:column="64"/></operator> <name><name pos:line="70" pos:column="59">cblock<pos:position pos:line="70" pos:column="65"/></name><operator pos:line="70" pos:column="65">.<pos:position pos:line="70" pos:column="66"/></operator><name pos:line="70" pos:column="66">mask_size<pos:position pos:line="70" pos:column="75"/></name></name> <operator pos:line="70" pos:column="76">&lt;&lt;<pos:position pos:line="70" pos:column="84"/></operator>
               <literal type="string" pos:line="71" pos:column="16">" -&gt; "<pos:position pos:line="71" pos:column="25"/></literal> <operator pos:line="71" pos:column="23">&lt;&lt;<pos:position pos:line="71" pos:column="31"/></operator> <name><name pos:line="71" pos:column="26">pd<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">cd<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">mask_size<pos:position pos:line="71" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">freed_size<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <name><name pos:line="72" pos:column="22">pd<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">cd<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">-&gt;<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="30">mask_size<pos:position pos:line="72" pos:column="39"/></name></name></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">cacheDigestDestroy<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name><name pos:line="73" pos:column="28">pd<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">-&gt;<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="32">cd<pos:position pos:line="73" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">pd<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">cd<pos:position pos:line="74" pos:column="15"/></name></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">NULL<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">!<pos:position pos:line="77" pos:column="10"/></operator><name><name pos:line="77" pos:column="10">pd<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">cd<pos:position pos:line="77" pos:column="16"/></name></name></expr>)<pos:position pos:line="77" pos:column="17"/></condition><then pos:line="77" pos:column="17"> <block pos:line="77" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debugs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="number" pos:line="78" pos:column="16">72<pos:position pos:line="78" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="20">2<pos:position pos:line="78" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="23">"creating "<pos:position pos:line="78" pos:column="34"/></literal> <operator pos:line="78" pos:column="35">&lt;&lt;<pos:position pos:line="78" pos:column="43"/></operator> <name pos:line="78" pos:column="38">host<pos:position pos:line="78" pos:column="42"/></name> <operator pos:line="78" pos:column="43">&lt;&lt;<pos:position pos:line="78" pos:column="51"/></operator> <literal type="string" pos:line="78" pos:column="46">" digest; size: "<pos:position pos:line="78" pos:column="63"/></literal> <operator pos:line="78" pos:column="64">&lt;&lt;<pos:position pos:line="78" pos:column="72"/></operator> <name><name pos:line="78" pos:column="67">cblock<pos:position pos:line="78" pos:column="73"/></name><operator pos:line="78" pos:column="73">.<pos:position pos:line="78" pos:column="74"/></operator><name pos:line="78" pos:column="74">mask_size<pos:position pos:line="78" pos:column="83"/></name></name> <operator pos:line="78" pos:column="84">&lt;&lt;<pos:position pos:line="78" pos:column="92"/></operator> <literal type="string" pos:line="78" pos:column="87">" ("<pos:position pos:line="78" pos:column="91"/></literal> <operator pos:line="78" pos:column="92">&lt;&lt;<pos:position pos:line="78" pos:column="100"/></operator>
               <name><name pos:line="79" pos:column="16">std<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">::<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="21">showpos<pos:position pos:line="79" pos:column="28"/></name></name> <operator pos:line="79" pos:column="29">&lt;&lt;<pos:position pos:line="79" pos:column="37"/></operator>  <call pos:line="79" pos:column="33">(<name pos:line="79" pos:column="34">int<pos:position pos:line="79" pos:column="37"/></name>) <argument_list pos:line="79" pos:column="39">(<argument><expr><name><name pos:line="79" pos:column="40">cblock<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">.<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="47">mask_size<pos:position pos:line="79" pos:column="56"/></name></name> <operator pos:line="79" pos:column="57">-<pos:position pos:line="79" pos:column="58"/></operator> <name pos:line="79" pos:column="59">freed_size<pos:position pos:line="79" pos:column="69"/></name></expr></argument>)<pos:position pos:line="79" pos:column="70"/></argument_list></call> <operator pos:line="79" pos:column="71">&lt;&lt;<pos:position pos:line="79" pos:column="79"/></operator> <literal type="string" pos:line="79" pos:column="74">") bytes"<pos:position pos:line="79" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">pd<pos:position pos:line="80" pos:column="11"/></name><operator pos:line="80" pos:column="11">-&gt;<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="13">cd<pos:position pos:line="80" pos:column="15"/></name></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">cacheDigestCreate<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name><name pos:line="80" pos:column="36">cblock<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">.<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="43">capacity<pos:position pos:line="80" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="53">cblock<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">.<pos:position pos:line="80" pos:column="60"/></operator><name pos:line="80" pos:column="60">bits_per_entry<pos:position pos:line="80" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="76"/></expr_stmt>

        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">cblock<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">mask_size<pos:position pos:line="82" pos:column="29"/></name></name> <operator pos:line="82" pos:column="30">&gt;=<pos:position pos:line="82" pos:column="35"/></operator> <name pos:line="82" pos:column="33">freed_size<pos:position pos:line="82" pos:column="43"/></name></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="13">kb_incr<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><operator pos:line="83" pos:column="21">&amp;<pos:position pos:line="83" pos:column="26"/></operator><name><name pos:line="83" pos:column="22">statCounter<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">.<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="34">cd<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">.<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="37">memory<pos:position pos:line="83" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="45">cblock<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">.<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="52">mask_size<pos:position pos:line="83" pos:column="61"/></name></name> <operator pos:line="83" pos:column="62">-<pos:position pos:line="83" pos:column="63"/></operator> <name pos:line="83" pos:column="64">freed_size<pos:position pos:line="83" pos:column="74"/></name></expr></argument>)<pos:position pos:line="83" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="76"/></expr_stmt></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">assert<pos:position pos:line="86" pos:column="11"/></name><argument_list pos:line="86" pos:column="11">(<argument><expr><name><name pos:line="86" pos:column="12">pd<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">cd<pos:position pos:line="86" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="87" pos:column="5">/* these assignments leave us in an inconsistent state until we finish reading the digest */</comment>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">pd<pos:position pos:line="88" pos:column="7"/></name><operator pos:line="88" pos:column="7">-&gt;<pos:position pos:line="88" pos:column="12"/></operator><name pos:line="88" pos:column="9">cd<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">count<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <name><name pos:line="88" pos:column="21">cblock<pos:position pos:line="88" pos:column="27"/></name><operator pos:line="88" pos:column="27">.<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="28">count<pos:position pos:line="88" pos:column="33"/></name></name></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="89" pos:column="5">pd<pos:position pos:line="89" pos:column="7"/></name><operator pos:line="89" pos:column="7">-&gt;<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="9">cd<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">del_count<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name><name pos:line="89" pos:column="25">cblock<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">.<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">del_count<pos:position pos:line="89" pos:column="41"/></name></name></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt>
    <return pos:line="90" pos:column="5">return <expr><literal type="number" pos:line="90" pos:column="12">1<pos:position pos:line="90" pos:column="13"/></literal></expr>;<pos:position pos:line="90" pos:column="14"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

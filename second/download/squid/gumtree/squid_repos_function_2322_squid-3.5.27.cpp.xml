<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2322_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Note<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Pointer<pos:position pos:line="1" pos:column="14"/></name></name></type>
<name><name pos:line="2" pos:column="1">Notes<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">parse<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ConfigParser<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">&amp;<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="28">parser<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">key<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name><name pos:line="4" pos:column="18">ConfigParser<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">::<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">NextToken<pos:position pos:line="4" pos:column="41"/></name></name><argument_list pos:line="4" pos:column="41">()<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">ConfigParser<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">EnableMacros<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">String<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">value<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><call><name><name pos:line="6" pos:column="20">ConfigParser<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">::<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">NextQuotedToken<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">ConfigParser<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">DisableMacros<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">valueWasQuoted<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><call><name><name pos:line="8" pos:column="27">ConfigParser<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">::<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">LastTokenWasQuoted<pos:position pos:line="8" pos:column="59"/></name></name><argument_list pos:line="8" pos:column="59">()<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Note<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">::<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">Pointer<pos:position pos:line="9" pos:column="18"/></name></name></type> <name pos:line="9" pos:column="19">note<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><call><name pos:line="9" pos:column="26">add<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">key<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Note<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">::<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">Value<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">::<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">Pointer<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">noteValue<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><call><name><name pos:line="10" pos:column="38">note<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">addValue<pos:position pos:line="10" pos:column="52"/></name></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">value<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">String<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">label<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">key<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">label<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">append<pos:position pos:line="13" pos:column="17"/></name></name><argument_list pos:line="13" pos:column="17">(<argument><expr><literal type="char" pos:line="13" pos:column="18">'='<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">label<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">.<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">append<pos:position pos:line="14" pos:column="17"/></name></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">value<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">aclParseAclList<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">parser<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="30">noteValue<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">aclList<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="50">label<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">.<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="56">termedBuf<pos:position pos:line="15" pos:column="65"/></name></name><argument_list pos:line="15" pos:column="65">()<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">formattedValues<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">&amp;&amp;<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="28">valueWasQuoted<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">noteValue<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">valueFormat<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator>  <operator pos:line="17" pos:column="35">new<pos:position pos:line="17" pos:column="38"/></operator> <call><name><name pos:line="17" pos:column="39">Format<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">::<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">Format<pos:position pos:line="17" pos:column="53"/></name></name><argument_list pos:line="17" pos:column="53">(<argument><expr><ternary><condition><expr><name pos:line="17" pos:column="54">descr<pos:position pos:line="17" pos:column="59"/></name></expr> ?<pos:position pos:line="17" pos:column="61"/></condition><then pos:line="17" pos:column="61"> <expr><name pos:line="17" pos:column="62">descr<pos:position pos:line="17" pos:column="67"/></name></expr> <pos:position pos:line="17" pos:column="68"/></then><else pos:line="17" pos:column="68">: <expr><literal type="string" pos:line="17" pos:column="70">"Notes"<pos:position pos:line="17" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">noteValue<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">valueFormat<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">parse<pos:position pos:line="18" pos:column="38"/></name></name><argument_list pos:line="18" pos:column="38">(<argument><expr><call><name><name pos:line="18" pos:column="39">value<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">termedBuf<pos:position pos:line="18" pos:column="54"/></name></name><argument_list pos:line="18" pos:column="54">()<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">blacklisted<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <block pos:line="20" pos:column="22">{
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><decl><type><name pos:line="21" pos:column="14">int<pos:position pos:line="21" pos:column="17"/></name></type> <name pos:line="21" pos:column="18">i<pos:position pos:line="21" pos:column="19"/></name> <init pos:line="21" pos:column="20">= <expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="24"/></init> <condition><expr><name><name pos:line="21" pos:column="25">blacklisted<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><name pos:line="21" pos:column="37">i<pos:position pos:line="21" pos:column="38"/></name></expr>]<pos:position pos:line="21" pos:column="39"/></index></name> <operator pos:line="21" pos:column="40">!=<pos:position pos:line="21" pos:column="42"/></operator> <name pos:line="21" pos:column="43">NULL<pos:position pos:line="21" pos:column="47"/></name></expr>;<pos:position pos:line="21" pos:column="48"/></condition> <incr><expr><operator pos:line="21" pos:column="49">++<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">i<pos:position pos:line="21" pos:column="52"/></name></expr></incr>)<pos:position pos:line="21" pos:column="53"/></control> <block pos:line="21" pos:column="54">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><call><name><name pos:line="22" pos:column="17">note<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">key<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">caseCmp<pos:position pos:line="22" pos:column="34"/></name></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name><name pos:line="22" pos:column="35">blacklisted<pos:position pos:line="22" pos:column="46"/></name><index pos:line="22" pos:column="46">[<expr><name pos:line="22" pos:column="47">i<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call> <operator pos:line="22" pos:column="51">==<pos:position pos:line="22" pos:column="53"/></operator> <literal type="number" pos:line="22" pos:column="54">0<pos:position pos:line="22" pos:column="55"/></literal></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56"> <block pos:line="22" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">fatalf<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"%s:%d: meta key \"%s\" is a reserved %s name"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>,
                       <argument><expr><name pos:line="24" pos:column="24">cfg_filename<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">config_lineno<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="53">note<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">key<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">.<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="63">termedBuf<pos:position pos:line="24" pos:column="72"/></name></name><argument_list pos:line="24" pos:column="72">()<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>,
                       <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="24">descr<pos:position pos:line="25" pos:column="29"/></name></expr> ?<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <expr><name pos:line="25" pos:column="32">descr<pos:position pos:line="25" pos:column="37"/></name></expr> <pos:position pos:line="25" pos:column="38"/></then><else pos:line="25" pos:column="38">: <expr><literal type="string" pos:line="25" pos:column="40">""<pos:position pos:line="25" pos:column="42"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></for>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">note<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

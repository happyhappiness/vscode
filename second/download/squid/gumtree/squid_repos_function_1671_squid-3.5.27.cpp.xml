<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1671_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClassCBucket<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">update<pos:position pos:line="2" pos:column="21"/></name></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">DelaySpec<pos:position pos:line="2" pos:column="32"/></name> <specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">rate<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">incr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* If we aren't active, don't try to update us ! */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name><name pos:line="5" pos:column="13">rate<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">restore_bps<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">!=<pos:position pos:line="5" pos:column="32"/></operator> <operator pos:line="5" pos:column="33">-<pos:position pos:line="5" pos:column="34"/></operator><literal type="number" pos:line="5" pos:column="34">1<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">unsigned<pos:position pos:line="7" pos:column="18"/></name> <name pos:line="7" pos:column="19">int<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">j<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></init> <condition><expr><name pos:line="7" pos:column="30">j<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&lt;<pos:position pos:line="7" pos:column="36"/></operator> <call><name><name pos:line="7" pos:column="34">individuals<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">size<pos:position pos:line="7" pos:column="50"/></name></name><argument_list pos:line="7" pos:column="50">()<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></condition> <incr><expr><operator pos:line="7" pos:column="54">++<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">j<pos:position pos:line="7" pos:column="57"/></name></expr></incr>)<pos:position pos:line="7" pos:column="58"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">individuals<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">values<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">j<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><call><name pos:line="8" pos:column="31">update<pos:position pos:line="8" pos:column="37"/></name> <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">rate<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">incr<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4424_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Bio<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">sslFeatures<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">parseV23Hello<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">hello<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">size_t<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">size<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">83<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"Get fake features from v23 ClientHello message."<pos:position pos:line="4" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="70"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">size<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&lt;<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="16">7<pos:position pos:line="5" pos:column="17"/></literal></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if>
    <comment type="line" pos:line="7" pos:column="5">//Ciphers list. It is stored after the Session ID.</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">unsigned<pos:position pos:line="8" pos:column="19"/></name> <name pos:line="8" pos:column="20">int<pos:position pos:line="8" pos:column="23"/></name></type> <name pos:line="8" pos:column="24">ciphersLen<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name><name pos:line="8" pos:column="38">hello<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><literal type="number" pos:line="8" pos:column="44">5<pos:position pos:line="8" pos:column="45"/></literal></expr>]<pos:position pos:line="8" pos:column="46"/></index></name> <operator pos:line="8" pos:column="47">&lt;&lt;<pos:position pos:line="8" pos:column="55"/></operator> <literal type="number" pos:line="8" pos:column="50">8<pos:position pos:line="8" pos:column="51"/></literal><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator> <operator pos:line="8" pos:column="53">|<pos:position pos:line="8" pos:column="54"/></operator> <name><name pos:line="8" pos:column="55">hello<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><literal type="number" pos:line="8" pos:column="61">6<pos:position pos:line="8" pos:column="62"/></literal></expr>]<pos:position pos:line="8" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">unsigned<pos:position pos:line="9" pos:column="19"/></name> <name pos:line="9" pos:column="20">char<pos:position pos:line="9" pos:column="24"/></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">ciphers<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">hello<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">+<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">11<pos:position pos:line="9" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">size<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="16">ciphersLen<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">+<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">11<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="boolean" pos:line="12" pos:column="16">false<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ciphersLen<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><operator pos:line="15" pos:column="5">(<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">OPENSSL_VERSION_NUMBER<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">&gt;=<pos:position pos:line="15" pos:column="34"/></operator> <literal type="number" pos:line="15" pos:column="32">0x10100000L<pos:position pos:line="15" pos:column="43"/></literal><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">SSL_METHOD<pos:position pos:line="16" pos:column="25"/></name> <modifier pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></modifier></type><name pos:line="16" pos:column="27">method<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><call><name pos:line="16" pos:column="36">TLS_method<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">()<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">SSL_METHOD<pos:position pos:line="18" pos:column="25"/></name> <modifier pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></modifier></type><name pos:line="18" pos:column="27">method<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><call><name pos:line="18" pos:column="36">SSLv23_method<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">()<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="52"/></decl_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><decl><type><name pos:line="20" pos:column="14">unsigned<pos:position pos:line="20" pos:column="22"/></name> <name pos:line="20" pos:column="23">int<pos:position pos:line="20" pos:column="26"/></name></type> <name pos:line="20" pos:column="27">i<pos:position pos:line="20" pos:column="28"/></name> <init pos:line="20" pos:column="29">= <expr><literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="33"/></init> <condition><expr><name pos:line="20" pos:column="34">i<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&lt;<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="38">ciphersLen<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></condition> <incr><expr><name pos:line="20" pos:column="50">i<pos:position pos:line="20" pos:column="51"/></name> <operator pos:line="20" pos:column="52">+=<pos:position pos:line="20" pos:column="54"/></operator> <literal type="number" pos:line="20" pos:column="55">3<pos:position pos:line="20" pos:column="56"/></literal></expr></incr>)<pos:position pos:line="20" pos:column="57"/></control> <block pos:line="20" pos:column="58">{
            <comment type="line" pos:line="21" pos:column="13">// The v2 hello messages cipher has 3 bytes.</comment>
            <comment type="line" pos:line="22" pos:column="13">// The v2 cipher has the first byte not null</comment>
            <comment type="line" pos:line="23" pos:column="13">// Because we are going to sent only v3 message we</comment>
            <comment type="line" pos:line="24" pos:column="13">// are ignoring these ciphers</comment>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">ciphers<pos:position pos:line="25" pos:column="24"/></name><index pos:line="25" pos:column="24">[<expr><name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name></expr>]<pos:position pos:line="25" pos:column="27"/></index></name> <operator pos:line="25" pos:column="28">!=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
                <block type="pseudo"><continue pos:line="26" pos:column="17">continue;<pos:position pos:line="26" pos:column="26"/></continue></block></then></if>
            <decl_stmt><decl><type><specifier pos:line="27" pos:column="13">const<pos:position pos:line="27" pos:column="18"/></specifier> <name pos:line="27" pos:column="19">SSL_CIPHER<pos:position pos:line="27" pos:column="29"/></name> <modifier pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></modifier></type><name pos:line="27" pos:column="31">c<pos:position pos:line="27" pos:column="32"/></name> <init pos:line="27" pos:column="33">= <expr><call><name><name pos:line="27" pos:column="35">method<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">get_cipher_by_char<pos:position pos:line="27" pos:column="61"/></name></name><argument_list pos:line="27" pos:column="61">(<argument><expr><operator pos:line="27" pos:column="62">(<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="63">ciphers<pos:position pos:line="27" pos:column="70"/></name> <operator pos:line="27" pos:column="71">+<pos:position pos:line="27" pos:column="72"/></operator> <name pos:line="27" pos:column="73">i<pos:position pos:line="27" pos:column="74"/></name> <operator pos:line="27" pos:column="75">+<pos:position pos:line="27" pos:column="76"/></operator> <literal type="number" pos:line="27" pos:column="77">1<pos:position pos:line="27" pos:column="78"/></literal><operator pos:line="27" pos:column="78">)<pos:position pos:line="27" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="81"/></decl_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name pos:line="28" pos:column="17">c<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">!=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">NULL<pos:position pos:line="28" pos:column="26"/></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block pos:line="28" pos:column="28">{
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name><name pos:line="29" pos:column="22">clientRequestedCiphers<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">empty<pos:position pos:line="29" pos:column="50"/></name></name><argument_list pos:line="29" pos:column="50">()<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="21">clientRequestedCiphers<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">append<pos:position pos:line="30" pos:column="50"/></name></name><argument_list pos:line="30" pos:column="50">(<argument><expr><literal type="string" pos:line="30" pos:column="51">":"<pos:position pos:line="30" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="31" pos:column="17">clientRequestedCiphers<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">.<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="40">append<pos:position pos:line="31" pos:column="46"/></name></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name><name pos:line="31" pos:column="47">c<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">name<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
        }<pos:position pos:line="33" pos:column="10"/></block></for>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">83<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">7<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"Ciphers requested by client: "<pos:position pos:line="35" pos:column="50"/></literal> <operator pos:line="35" pos:column="51">&lt;&lt;<pos:position pos:line="35" pos:column="59"/></operator> <name pos:line="35" pos:column="54">clientRequestedCiphers<pos:position pos:line="35" pos:column="76"/></name></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="37" pos:column="5">const<pos:position pos:line="37" pos:column="10"/></specifier> <name pos:line="37" pos:column="11">unsigned<pos:position pos:line="37" pos:column="19"/></name> <name pos:line="37" pos:column="20">int<pos:position pos:line="37" pos:column="23"/></name></type> <name pos:line="37" pos:column="24">sessionIdLength<pos:position pos:line="37" pos:column="39"/></name> <init pos:line="37" pos:column="40">= <expr><operator pos:line="37" pos:column="42">(<pos:position pos:line="37" pos:column="43"/></operator><name><name pos:line="37" pos:column="43">hello<pos:position pos:line="37" pos:column="48"/></name><index pos:line="37" pos:column="48">[<expr><literal type="number" pos:line="37" pos:column="49">7<pos:position pos:line="37" pos:column="50"/></literal></expr>]<pos:position pos:line="37" pos:column="51"/></index></name> <operator pos:line="37" pos:column="52">&lt;&lt;<pos:position pos:line="37" pos:column="60"/></operator> <literal type="number" pos:line="37" pos:column="55">8<pos:position pos:line="37" pos:column="56"/></literal><operator pos:line="37" pos:column="56">)<pos:position pos:line="37" pos:column="57"/></operator> <operator pos:line="37" pos:column="58">|<pos:position pos:line="37" pos:column="59"/></operator> <name><name pos:line="37" pos:column="60">hello<pos:position pos:line="37" pos:column="65"/></name><index pos:line="37" pos:column="65">[<expr><literal type="number" pos:line="37" pos:column="66">8<pos:position pos:line="37" pos:column="67"/></literal></expr>]<pos:position pos:line="37" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="37" pos:column="69"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">debugs<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">83<pos:position pos:line="38" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="16">7<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"SessionID length: "<pos:position pos:line="38" pos:column="39"/></literal> <operator pos:line="38" pos:column="40">&lt;&lt;<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="43">sessionIdLength<pos:position pos:line="38" pos:column="58"/></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>
    <comment type="line" pos:line="39" pos:column="5">// SessionID starts at: hello+11+ciphersLen</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">sessionIdLength<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="41" pos:column="9">sessionId<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">assign<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><specifier pos:line="41" pos:column="27">const<pos:position pos:line="41" pos:column="32"/></specifier> <name pos:line="41" pos:column="33">char<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">*<pos:position pos:line="41" pos:column="39"/></operator><operator pos:line="41" pos:column="39">)<pos:position pos:line="41" pos:column="40"/></operator><operator pos:line="41" pos:column="40">(<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">hello<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">+<pos:position pos:line="41" pos:column="48"/></operator> <literal type="number" pos:line="41" pos:column="49">11<pos:position pos:line="41" pos:column="51"/></literal> <operator pos:line="41" pos:column="52">+<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="54">ciphersLen<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">)<pos:position pos:line="41" pos:column="65"/></operator></expr></argument>, <argument><expr><name pos:line="41" pos:column="67">sessionIdLength<pos:position pos:line="41" pos:column="82"/></name></expr></argument>)<pos:position pos:line="41" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="84"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="43" pos:column="5">const<pos:position pos:line="43" pos:column="10"/></specifier> <name pos:line="43" pos:column="11">unsigned<pos:position pos:line="43" pos:column="19"/></name> <name pos:line="43" pos:column="20">int<pos:position pos:line="43" pos:column="23"/></name></type> <name pos:line="43" pos:column="24">challengeLength<pos:position pos:line="43" pos:column="39"/></name> <init pos:line="43" pos:column="40">= <expr><operator pos:line="43" pos:column="42">(<pos:position pos:line="43" pos:column="43"/></operator><name><name pos:line="43" pos:column="43">hello<pos:position pos:line="43" pos:column="48"/></name><index pos:line="43" pos:column="48">[<expr><literal type="number" pos:line="43" pos:column="49">5<pos:position pos:line="43" pos:column="50"/></literal></expr>]<pos:position pos:line="43" pos:column="51"/></index></name> <operator pos:line="43" pos:column="52">&lt;&lt;<pos:position pos:line="43" pos:column="60"/></operator> <literal type="number" pos:line="43" pos:column="55">9<pos:position pos:line="43" pos:column="56"/></literal><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator> <operator pos:line="43" pos:column="58">|<pos:position pos:line="43" pos:column="59"/></operator> <name><name pos:line="43" pos:column="60">hello<pos:position pos:line="43" pos:column="65"/></name><index pos:line="43" pos:column="65">[<expr><literal type="number" pos:line="43" pos:column="66">10<pos:position pos:line="43" pos:column="68"/></literal></expr>]<pos:position pos:line="43" pos:column="69"/></index></name></expr></init></decl>;<pos:position pos:line="43" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">debugs<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><literal type="number" pos:line="44" pos:column="12">83<pos:position pos:line="44" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="16">7<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="19">"Challenge Length: "<pos:position pos:line="44" pos:column="39"/></literal> <operator pos:line="44" pos:column="40">&lt;&lt;<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="43">challengeLength<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
    <comment type="line" pos:line="45" pos:column="5">//challenge starts at: hello+11+ciphersLen+sessionIdLength</comment>

    <expr_stmt><expr><name pos:line="47" pos:column="5">compressMethod<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">0<pos:position pos:line="47" pos:column="23"/></literal></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><literal type="boolean" pos:line="48" pos:column="12">true<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4599_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACL<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Prototype<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">registerMe<pos:position pos:line="2" pos:column="27"/></name></name> <parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">Registry<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">||<pos:position pos:line="4" pos:column="21"/></operator> <operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">Initialized<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">!=<pos:position pos:line="4" pos:column="37"/></operator> <operator pos:line="4" pos:column="38">(<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">(<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">char<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator><operator pos:line="4" pos:column="46">)<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">Registry<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">-<pos:position pos:line="4" pos:column="57"/></operator> <literal type="number" pos:line="4" pos:column="58">5<pos:position pos:line="4" pos:column="59"/></literal><operator pos:line="4" pos:column="59">)<pos:position pos:line="4" pos:column="60"/></operator><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator></expr>  )<pos:position pos:line="4" pos:column="64"/></condition><then pos:line="4" pos:column="64"> <block pos:line="4" pos:column="65">{
        <comment type="block" pos:line="5" pos:column="9">/* TODO: extract this */</comment>
        <comment type="block" pos:line="6" pos:column="9">/* Not initialised */</comment>
        <expr_stmt><expr><name pos:line="7" pos:column="9">Registry<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">new<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="24">Vector<pos:position pos:line="7" pos:column="30"/></name> <argument_list type="generic" pos:line="7" pos:column="31">&lt;<argument><expr><name><name pos:line="7" pos:column="32">ACL<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">::<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">Prototype<pos:position pos:line="7" pos:column="46"/></name></name> <specifier pos:line="7" pos:column="47">const<pos:position pos:line="7" pos:column="52"/></specifier> <operator pos:line="7" pos:column="53">*<pos:position pos:line="7" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="58"/></argument_list></name></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">Initialized<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></operator><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">Registry<pos:position pos:line="8" pos:column="39"/></name> <operator pos:line="8" pos:column="40">-<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="42">5<pos:position pos:line="8" pos:column="43"/></literal></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">Registered<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">typeString<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">fatalf<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><literal type="string" pos:line="12" pos:column="17">"Attempt to register %s twice"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">typeString<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">Registry<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">push_back<pos:position pos:line="14" pos:column="24"/></name></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">this<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

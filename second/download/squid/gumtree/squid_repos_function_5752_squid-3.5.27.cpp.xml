<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5752_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">authenticateAuthUserRequestIPCount<pos:position pos:line="2" pos:column="35"/></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name><name pos:line="2" pos:column="36">Auth<pos:position pos:line="2" pos:column="40"/></name><operator pos:line="2" pos:column="40">::<pos:position pos:line="2" pos:column="42"/></operator><name pos:line="2" pos:column="42">UserRequest<pos:position pos:line="2" pos:column="53"/></name><operator pos:line="2" pos:column="53">::<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="55">Pointer<pos:position pos:line="2" pos:column="62"/></name></name></type> <name pos:line="2" pos:column="63">auth_user_request<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">auth_user_request<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">!=<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name><name pos:line="5" pos:column="12">auth_user_request<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">user<pos:position pos:line="5" pos:column="35"/></name></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">!=<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">NULL<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name><name pos:line="6" pos:column="12">auth_user_request<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">user<pos:position pos:line="6" pos:column="35"/></name></name><argument_list pos:line="6" pos:column="35">()<pos:position pos:line="6" pos:column="37"/></argument_list></call><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">ipcount<pos:position pos:line="6" pos:column="46"/></name></expr>;<pos:position pos:line="6" pos:column="47"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1679_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestFetchAbort<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">DigestFetchState<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">fetch<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">buf<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">reason<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">reason<pos:position pos:line="4" pos:column="18"/></name></expr></argument>)<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">72<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">2<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"peerDigestFetchAbort: peer "<pos:position pos:line="5" pos:column="48"/></literal> <operator pos:line="5" pos:column="49">&lt;&lt;<pos:position pos:line="5" pos:column="57"/></operator> <name><name pos:line="5" pos:column="52">fetch<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">-&gt;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="59">pd<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">-&gt;<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="63">host<pos:position pos:line="5" pos:column="67"/></name></name> <operator pos:line="5" pos:column="68">&lt;&lt;<pos:position pos:line="5" pos:column="76"/></operator> <literal type="string" pos:line="5" pos:column="71">", reason: "<pos:position pos:line="5" pos:column="83"/></literal> <operator pos:line="5" pos:column="84">&lt;&lt;<pos:position pos:line="5" pos:column="92"/></operator> <name pos:line="5" pos:column="87">reason<pos:position pos:line="5" pos:column="93"/></name></expr></argument>)<pos:position pos:line="5" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">peerDigestReqFinish<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">fetch<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">buf<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="37">1<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="40">1<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="43">1<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">reason<pos:position pos:line="6" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="54">1<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4159_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">scheduleRead<pos:position pos:line="1" pos:column="45"/></name></name><parameter_list pos:line="1" pos:column="45">()<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name pos:line="3" pos:column="10">haveConnection<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><operator pos:line="4" pos:column="10">!<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">reader<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><call><name><name pos:line="5" pos:column="10">readBuf<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">hasSpace<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
     * See comments in Adaptation::Icap::Xaction.h about why we use commBuf
     * here instead of reading directly into readBuf.buf.
     */</comment>
    <typedef pos:line="11" pos:column="5">typedef <type><name><name pos:line="11" pos:column="13">CommCbMemFunT<pos:position pos:line="11" pos:column="26"/></name><argument_list type="generic" pos:line="11" pos:column="26">&lt;<argument><expr><name><name pos:line="11" pos:column="27">Adaptation<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">::<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">Icap<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">::<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">Xaction<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">CommIoCbParams<pos:position pos:line="11" pos:column="68"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="72"/></argument_list></name></type> <name pos:line="11" pos:column="70">Dialer<pos:position pos:line="11" pos:column="76"/></name>;<pos:position pos:line="11" pos:column="77"/></typedef>
    <expr_stmt><expr><name pos:line="12" pos:column="5">reader<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">JobCallback<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="number" pos:line="12" pos:column="26">93<pos:position pos:line="12" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="30">3<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>,
                         <argument><expr><name pos:line="13" pos:column="26">Dialer<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">this<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="40">Adaptation<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">::<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">Icap<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">::<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="58">Xaction<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">::<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="67">noteCommRead<pos:position pos:line="13" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">comm_read<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">connection<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">commBuf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="36">readBuf<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">.<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">spaceSize<pos:position pos:line="15" pos:column="53"/></name></name><argument_list pos:line="15" pos:column="53">()<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">reader<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">updateTimeout<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

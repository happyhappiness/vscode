<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7670_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">heap_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">heap_delete<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">heap<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type> <name pos:line="2" pos:column="20">hp<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">heap_node<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">elm<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">heap_node<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">lastNode<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">heap_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">data<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">elm<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">data<pos:position pos:line="5" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><call><name pos:line="7" pos:column="12">_heap_node_exist<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">hp<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="33">hp<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">last<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">-<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="44">1<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">lastNode<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name><name pos:line="9" pos:column="16">hp<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">nodes<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name><name pos:line="9" pos:column="26">hp<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">last<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr>]<pos:position pos:line="9" pos:column="39"/></index></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">_heap_swap_element<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">hp<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">lastNode<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">elm<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">heap_extractlast<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">hp<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">elm<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">lastNode<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
        <comment type="block" pos:line="14" pos:column="9">/*
         * lastNode just got freed, so don't access it in the next
         * block.
         */</comment>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">void<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name><name pos:line="19" pos:column="16">hp<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">last<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&gt;<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <block pos:line="19" pos:column="30">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">lastNode<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">key<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="29">hp<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">nodes<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><call><name pos:line="20" pos:column="39">Parent<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">lastNode<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">id<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>]<pos:position pos:line="20" pos:column="60"/></index></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">key<pos:position pos:line="20" pos:column="65"/></name></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">_heap_ify_up<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">hp<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">lastNode<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>     <comment type="block" pos:line="21" pos:column="45">/* COOL! */</comment>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">_heap_ify_down<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">hp<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">lastNode<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">data<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

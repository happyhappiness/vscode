; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmcurl/lib/url.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.Curl_handler = type { i8*, i32 (%struct.connectdata*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i1)*, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)*, i64, i32, i32 }
%struct.connectdata = type { %struct.Curl_easy*, %struct.Curl_chunker, i32 (i8*, i32)*, i8*, i8, i64, %struct.Curl_dns_entry*, %struct.Curl_addrinfo*, [2 x %struct.Curl_addrinfo*], [46 x i8], i32, i32, %struct.hostname, i8*, %struct.hostname, %struct.proxy_info, %struct.proxy_info, i64, i32, i32, i16, [46 x i8], i64, [46 x i8], i64, i8*, i8*, i8*, i8*, i32, i32, %struct.timeval, %struct.timeval, [2 x i32], [2 x i32], [2 x i8], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data], %struct.ssl_primary_config, %struct.ssl_primary_config, i8, %struct.ConnectBits, %struct.timeval, i32, i64, %struct.Curl_handler*, %struct.Curl_handler*, i64, i32, i32, %struct.dynamically_allocated_data, i8, i8, %struct.curl_llist, %struct.curl_llist, i8*, i64, i64, i32 (i8*, i64, i32)*, i8*, [256 x i8], i8*, i32, i32, %union.anon, i32, i32, i8*, i16, i32, [2 x i32], %struct.connectbundle*, i32 }
%struct.Curl_easy = type { %struct.Curl_easy*, %struct.Curl_easy*, %struct.connectdata*, i32, i32, %struct.Curl_message, [5 x i32], i32, %struct.Names, %struct.Curl_multi*, %struct.Curl_multi*, %struct.Curl_share*, %struct.SingleRequest, %struct.UserDefined, %struct.DynamicStatic, %struct.CookieInfo*, %struct.Progress, %struct.UrlState, %struct.WildcardData, %struct.PureInfo, %struct.curl_tlssessioninfo, i32 }
%struct.Curl_message = type { %struct.CURLMsg }
%struct.CURLMsg = type { i32, %struct.Curl_easy*, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.Names = type { %struct.curl_hash*, i32 }
%struct.curl_hash = type { %struct.curl_llist*, i64 (i8*, i64, i64)*, i64 (i8*, i64, i8*, i64)*, void (i8*)*, i32, i64 }
%struct.Curl_multi = type { i64, %struct.Curl_easy*, %struct.Curl_easy*, i32, i32, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i8*, i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)*, i8*, %struct.curl_hash, %struct.Curl_tree*, %struct.curl_hash, i64, i8, %struct.conncache, %struct.Curl_easy*, i64, i64, i64, i64, i64, i64, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_multi*, i64, i8*)*, i8*, %struct.timeval }
%struct.curl_pushheaders = type opaque
%struct.Curl_tree = type { %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.timeval, i8* }
%struct.conncache = type { %struct.curl_hash, i64, i64, %struct.timeval }
%struct.Curl_share = type { i32, i32, void (%struct.Curl_easy*, i32, i32, i8*)*, void (%struct.Curl_easy*, i32, i8*)*, i8*, %struct.curl_hash, %struct.CookieInfo*, %struct.curl_ssl_session*, i64, i64 }
%struct.curl_ssl_session = type { i8*, i8*, i8*, i8*, i64, i64, i32, i32, %struct.ssl_primary_config }
%struct.SingleRequest = type { i64, i64*, i64, i64*, i64, i64, i64, i64, %struct.timeval, %struct.timeval, i8, i32, i32, i8*, i64, i8*, i8*, i8*, i8*, i8, i64, i32, %struct.timeval, i32, i32, i32, i64, i64, i8*, i8*, i32, i32, i8, i8, i8, i8*, i8*, i64, i8*, i8, i8, i8, i8, i8* }
%struct.UserDefined = type { %struct._IO_FILE*, i8*, i8*, i64, i8*, i8*, i8*, i8*, i64, i64, i64, i64, i64, i32, i8, i8*, i32 (i8*, i64, i32)*, i64, i16, i32, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i32, i32, i32 (i8*, double, double, double, double)*, i32 (i8*, i64, i64, i64, i64)*, i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)*, i32 (%struct.Curl_easy*, i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32 (i8*, i32, %struct.curl_sockaddr*)*, i8*, i32 (i8*, i32)*, i8*, i8*, i32 (i8*, i64)*, i32 (i8*, i64)*, i32 (i8*, i64)*, i8*, i8*, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64, i64, i64, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_httppost*, i8, i8, i8, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, i32, i64, i32, i64, %struct.ssl_config_data, %struct.ssl_config_data, %struct.ssl_general_config, i32, i64, i64, i8*, %struct.curl_slist*, i64, i64, i32, i32, i32 (%struct.Curl_easy*, %struct.curl_khkey*, %struct.curl_khkey*, i32, i8*)*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i64, i8, i8, i64, i64, i8, [56 x i8*], i32, i64, i64, %struct.curl_slist*, i8, i32, i64, i8, i64 (i8*, i8*, i32)*, i64 (i8*)*, i32 (i8*, i8*, i8*)*, i8*, i64, i8, i64, i64, i8, i64, i8, i8, i8, i8, i64, i8, %struct.Curl_easy*, i8, i32, %struct.Curl_http2_dep*, i8 }
%struct.curl_sockaddr = type { i32, i32, i32, i32, %struct.sockaddr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.curl_httppost = type { %struct.curl_httppost*, i8*, i64, i8*, i64, i8*, i64, i8*, %struct.curl_slist*, %struct.curl_httppost*, i64, i8*, i8*, i64 }
%struct.ssl_config_data = type { %struct.ssl_primary_config, i8, i8, i64, i8*, i8*, i32 (%struct.Curl_easy*, i8*, i8*)*, i8*, i8, i8, i8*, i8*, i8*, i8*, i8* }
%struct.ssl_general_config = type { i64 }
%struct.curl_khkey = type { i8*, i64, i32 }
%struct.curl_slist = type { i8*, %struct.curl_slist* }
%struct.Curl_http2_dep = type { %struct.Curl_http2_dep*, %struct.Curl_easy* }
%struct.DynamicStatic = type { i8*, i8, i8*, i8, %struct.curl_slist*, %struct.curl_slist* }
%struct.CookieInfo = type { %struct.Cookie*, i8*, i8, i64, i8 }
%struct.Cookie = type { %struct.Cookie*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8, i8*, i8*, i8, i8, i8 }
%struct.Progress = type { i64, i64, i64, i64, i64, i64, i8, i32, i32, double, i64, i64, double, double, double, double, double, double, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, i64, %struct.timeval, i64, [6 x i64], [6 x %struct.timeval], i32 }
%struct.UrlState = type { %struct.conncache*, i8, %struct.timeval, %struct.connectdata*, i8*, i64, i8*, [16385 x i8], i64, i8, i8*, i32, %struct.curl_ssl_session*, i64, i32, [3 x %struct.tempbuf], i8*, i8, i32, void (i32)*, i8, %struct.digestdata, %struct.digestdata, %struct.auth, %struct.auth, i8, i8*, %struct.timeval, %struct.Curl_tree, %struct.curl_llist, i8*, i8, i32, i8, i8, i8, i64, i8*, i8*, i8, i8, i8, i8*, i64, i64, i64, i64, i64, i64, i8, i64 (i8*, i64, i64, i8*)*, i8*, %struct.Curl_easy*, i8, i32 }
%struct.tempbuf = type { i8*, i64, i32 }
%struct.digestdata = type { i8*, i8*, i8*, i32, i8, i8*, i8*, i8*, i32 }
%struct.auth = type { i64, i64, i64, i8, i8, i8 }
%struct.WildcardData = type { i32, i8*, i8*, %struct.curl_llist, i8*, void (i8*)*, i8* }
%struct.PureInfo = type { i32, i32, i32, i64, i8, i64, i64, i64, i64, i64, i8*, i8*, [46 x i8], i64, [46 x i8], i64, i8*, i32, %struct.curl_certinfo }
%struct.curl_certinfo = type { i32, %struct.curl_slist** }
%struct.curl_tlssessioninfo = type { i32, i8* }
%struct.Curl_chunker = type { [17 x i8], i32, i32, i64, i64 }
%struct.Curl_dns_entry = type { %struct.Curl_addrinfo*, i64, i64 }
%struct.Curl_addrinfo = type { i32, i32, i32, i32, i32, i8*, %struct.sockaddr*, %struct.Curl_addrinfo* }
%struct.hostname = type { i8*, i8*, i8*, i8* }
%struct.proxy_info = type { %struct.hostname, i64, i32, i8*, i8* }
%struct.ssl_connect_data = type { i8, i32, i32 }
%struct.ssl_primary_config = type { i64, i64, i8, i8, i8, i8*, i8*, i8*, i8*, i8*, i8*, i8 }
%struct.ConnectBits = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8 }
%struct.timeval = type { i64, i64 }
%struct.dynamically_allocated_data = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.curl_llist = type { %struct.curl_llist_element*, %struct.curl_llist_element*, void (i8*, i8*)*, i64 }
%struct.curl_llist_element = type { i8*, %struct.curl_llist_element*, %struct.curl_llist_element* }
%union.anon = type { %struct.ftp_conn }
%struct.ftp_conn = type { %struct.pingpong, i8*, i8**, i32, i32, i8*, i8, i8, i8, i8, i8, i8*, i8, i32, i32, i32, i32, i32, i64, i8*, i64, i8*, i16 }
%struct.pingpong = type { i8*, i64, i64, i8*, i8, i8*, i64, i64, %struct.timeval, i64, %struct.connectdata*, i32 (%struct.connectdata*)*, i1 (%struct.connectdata*, i8*, i64, i32*)* }
%struct.connectbundle = type { i32, i64, %struct.curl_llist }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.curl_hash_iterator = type { %struct.curl_hash*, i32, %struct.curl_llist_element* }
%struct.curl_hash_element = type { i8*, i64, [1 x i8] }

@Curl_cfree = external global void (i8*)*, align 8
@stdout = external global %struct._IO_FILE*, align 8
@stdin = external global %struct._IO_FILE*, align 8
@stderr = external global %struct._IO_FILE*, align 8
@Curl_ccalloc = external global i8* (i64, i64)*, align 8
@Curl_cmalloc = external global i8* (i64)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"SESS\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"FLUSH\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"RELOAD\00", align 1
@Curl_cstrdup = external global i8* (i8*)*, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"Set-Cookie:\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"CURLOPT_SSL_VERIFYHOST no longer supports 1 as value!\00", align 1
@Curl_crealloc = external global i8* (i8*, i64)*, align 8
@.str.7 = private unnamed_addr constant [24 x i8] c"Closing connection %ld\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"unknown proxytype option given\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"Connected to %s (%s) port %ld (#%ld)\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"User-Agent: %s\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"%s://%s\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"Found connection %ld, with requests in the pipe (%zu)\0A\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"We can reuse, but we want a new connection anyway\0A\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"Re-using existing connection! (#%ld) with %s %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"No more connections allowed to host: %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"No connections available in cache\0A\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"No connections available.\0A\00", align 1
@Curl_handler_dummy = internal constant %struct.Curl_handler { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), i32 (%struct.connectdata*)* null, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i32, i1)* null, i32 (%struct.connectdata*, i32*)* null, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i1)* null, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)* null, i64 0, i32 0, i32 0 }, align 8
@.str.21 = private unnamed_addr constant [14 x i8] c"<no protocol>\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"Illegal characters found in URL\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"Bad URL, colon is first character\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"%*15[^\0A/:]:%[^\0A]\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"%[^\0A]\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Bad URL\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"localhost/\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"127.0.0.1/\00", align 1
@.str.32 = private unnamed_addr constant [66 x i8] c"Invalid file://hostname/, expected localhost or 127.0.0.1 or none\00", align 1
@.str.33 = private unnamed_addr constant [55 x i8] c"File drive letters are only accepted in MSDOS/Windows.\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"%15[^\0A/:]:%3[/]%[^\0A/?#]%[^\0A]\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"%[^\0A/?#]%[^\0A]\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"<url> malformed\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"FTP.\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"DICT.\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"DICT\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"LDAP.\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"LDAP\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"IMAP.\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"IMAP\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"SMTP.\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"smtp\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"POP3.\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"pop3\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.50 = private unnamed_addr constant [52 x i8] c"Unwillingly accepted illegal URL using %d slash%s!\0A\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"%s://%s%s\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"Rebuilt URL to: %s\0A\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"%25\00", align 1
@.str.56 = private unnamed_addr constant [45 x i8] c"Please URL encode %% as %%25, see RFC 6874.\0A\00", align 1
@.str.57 = private unnamed_addr constant [29 x i8] c"Invalid IPv6 address format\0A\00", align 1
@protocols = internal constant [4 x %struct.Curl_handler*] [%struct.Curl_handler* @Curl_handler_http, %struct.Curl_handler* @Curl_handler_ftp, %struct.Curl_handler* @Curl_handler_file, %struct.Curl_handler* null], align 16
@.str.58 = private unnamed_addr constant [51 x i8] c"Protocol \22%s\22 not supported or disabled in libcurl\00", align 1
@Curl_handler_http = external constant %struct.Curl_handler, align 8
@Curl_handler_ftp = external constant %struct.Curl_handler, align 8
@Curl_handler_file = external constant %struct.Curl_handler, align 8
@.str.59 = private unnamed_addr constant [16 x i8] c"memory shortage\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"no_proxy\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"NO_PROXY\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"_proxy\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"http_proxy\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"all_proxy\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"ALL_PROXY\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"socks5h\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"socks5\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"socks4a\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"socks4\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"socks\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"http:\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"Unsupported proxy scheme for '%s'\00", align 1
@.str.77 = private unnamed_addr constant [74 x i8] c"Unsupported proxy '%s', libcurl is built without the HTTPS-proxy support.\00", align 1
@.str.78 = private unnamed_addr constant [43 x i8] c"No valid port number in proxy string (%s)\0A\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"[%*45[0123456789abcdefABCDEF:.]%c\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c";type=%c\00", align 1
@.str.81 = private unnamed_addr constant [22 x i8] c"%s://%s%s%s:%hu%s%s%s\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"Port number out of range\00", align 1
@.str.85 = private unnamed_addr constant [28 x i8] c"Port number ended with '%c'\00", align 1
@.str.86 = private unnamed_addr constant [58 x i8] c"Couldn't find host %s in the .netrc file; using defaults\0A\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"ftp@example.com\00", align 1
@.str.89 = private unnamed_addr constant [28 x i8] c"Connecting to hostname: %s\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"Connecting to port: %d\0A\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str.92 = private unnamed_addr constant [53 x i8] c"No valid port number in connect to host string (%s)\0A\00", align 1
@.str.93 = private unnamed_addr constant [54 x i8] c"IDN support not present, can't parse Unicode domains\0A\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"%lu-\00", align 1
@.str.95 = private unnamed_addr constant [34 x i8] c"Connection %ld seems to be dead!\0A\00", align 1
@.str.96 = private unnamed_addr constant [35 x i8] c"Found bundle for host %s: %p [%s]\0A\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"can pipeline\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"can multiplex\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"serially\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"Server doesn't support multi-use yet, wait\0A\00", align 1
@.str.101 = private unnamed_addr constant [40 x i8] c"Server doesn't support multi-use (yet)\0A\00", align 1
@.str.102 = private unnamed_addr constant [35 x i8] c"Could pipeline, but not asked to!\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"Could multiplex, but not asked to!\0A\00", align 1
@.str.104 = private unnamed_addr constant [48 x i8] c"Connection #%ld isn't open enough, can't reuse\0A\00", align 1
@.str.105 = private unnamed_addr constant [26 x i8] c"Pipe is full, skip (%zu)\0A\00", align 1
@.str.106 = private unnamed_addr constant [17 x i8] c"Penalized, skip\0A\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"Multiplexed connection found!\0A\00", align 1
@.str.108 = private unnamed_addr constant [63 x i8] c"Found pending candidate for reuse and CURLOPT_PIPEWAIT is set\0A\00", align 1
@.str.109 = private unnamed_addr constant [27 x i8] c"Couldn't resolve host '%s'\00", align 1
@.str.110 = private unnamed_addr constant [28 x i8] c"Couldn't resolve proxy '%s'\00", align 1

; Function Attrs: nounwind uwtable
define void @Curl_freeset(%struct.Curl_easy* %data) #0 !dbg !2080 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %i = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2255, metadata !2256), !dbg !2257
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2258, metadata !2256), !dbg !2259
  store i32 0, i32* %i, align 4, !dbg !2260
  br label %for.cond, !dbg !2262

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2263
  %cmp = icmp ult i32 %0, 56, !dbg !2266
  br i1 %cmp, label %for.body, label %for.end, !dbg !2267

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !2268

do.body:                                          ; preds = %for.body
  %1 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2270
  %2 = load i32, i32* %i, align 4, !dbg !2270
  %idxprom = zext i32 %2 to i64, !dbg !2270
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2270
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 13, !dbg !2270
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !2270
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 %idxprom, !dbg !2270
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !2270
  call void %1(i8* %4), !dbg !2270
  %5 = load i32, i32* %i, align 4, !dbg !2270
  %idxprom1 = zext i32 %5 to i64, !dbg !2270
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2270
  %set2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 13, !dbg !2270
  %str3 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2, i32 0, i32 128, !dbg !2270
  %arrayidx4 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3, i64 0, i64 %idxprom1, !dbg !2270
  store i8* null, i8** %arrayidx4, align 8, !dbg !2270
  br label %do.end, !dbg !2270

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !2273

for.inc:                                          ; preds = %do.end
  %7 = load i32, i32* %i, align 4, !dbg !2274
  %inc = add i32 %7, 1, !dbg !2274
  store i32 %inc, i32* %i, align 4, !dbg !2274
  br label %for.cond, !dbg !2276

for.end:                                          ; preds = %for.cond
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2277
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 14, !dbg !2279
  %referer_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 3, !dbg !2280
  %9 = load i8, i8* %referer_alloc, align 8, !dbg !2280
  %tobool = trunc i8 %9 to i1, !dbg !2280
  br i1 %tobool, label %if.then, label %if.end, !dbg !2281

if.then:                                          ; preds = %for.end
  br label %do.body5, !dbg !2282

do.body5:                                         ; preds = %if.then
  %10 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2284
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2284
  %change6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 14, !dbg !2284
  %referer = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change6, i32 0, i32 2, !dbg !2284
  %12 = load i8*, i8** %referer, align 8, !dbg !2284
  call void %10(i8* %12), !dbg !2284
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2284
  %change7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 14, !dbg !2284
  %referer8 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change7, i32 0, i32 2, !dbg !2284
  store i8* null, i8** %referer8, align 8, !dbg !2284
  br label %do.end9, !dbg !2284

do.end9:                                          ; preds = %do.body5
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2287
  %change10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 14, !dbg !2288
  %referer_alloc11 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change10, i32 0, i32 3, !dbg !2289
  store i8 0, i8* %referer_alloc11, align 8, !dbg !2290
  br label %if.end, !dbg !2291

if.end:                                           ; preds = %do.end9, %for.end
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2292
  %change12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 14, !dbg !2293
  %referer13 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change12, i32 0, i32 2, !dbg !2294
  store i8* null, i8** %referer13, align 8, !dbg !2295
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2296
  %change14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 14, !dbg !2298
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change14, i32 0, i32 1, !dbg !2299
  %17 = load i8, i8* %url_alloc, align 8, !dbg !2299
  %tobool15 = trunc i8 %17 to i1, !dbg !2299
  br i1 %tobool15, label %if.then16, label %if.end24, !dbg !2300

if.then16:                                        ; preds = %if.end
  br label %do.body17, !dbg !2301

do.body17:                                        ; preds = %if.then16
  %18 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2303
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2303
  %change18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %19, i32 0, i32 14, !dbg !2303
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change18, i32 0, i32 0, !dbg !2303
  %20 = load i8*, i8** %url, align 8, !dbg !2303
  call void %18(i8* %20), !dbg !2303
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2303
  %change19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 14, !dbg !2303
  %url20 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change19, i32 0, i32 0, !dbg !2303
  store i8* null, i8** %url20, align 8, !dbg !2303
  br label %do.end21, !dbg !2303

do.end21:                                         ; preds = %do.body17
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2306
  %change22 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 14, !dbg !2307
  %url_alloc23 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change22, i32 0, i32 1, !dbg !2308
  store i8 0, i8* %url_alloc23, align 8, !dbg !2309
  br label %if.end24, !dbg !2310

if.end24:                                         ; preds = %do.end21, %if.end
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2311
  %change25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 14, !dbg !2312
  %url26 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change25, i32 0, i32 0, !dbg !2313
  store i8* null, i8** %url26, align 8, !dbg !2314
  ret void, !dbg !2315
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @Curl_dupset(%struct.Curl_easy* %dst, %struct.Curl_easy* %src) #0 !dbg !2084 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.Curl_easy*, align 8
  %src.addr = alloca %struct.Curl_easy*, align 8
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Curl_easy* %dst, %struct.Curl_easy** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %dst.addr, metadata !2316, metadata !2256), !dbg !2317
  store %struct.Curl_easy* %src, %struct.Curl_easy** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %src.addr, metadata !2318, metadata !2256), !dbg !2319
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2320, metadata !2256), !dbg !2321
  store i32 0, i32* %result, align 4, !dbg !2321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2322, metadata !2256), !dbg !2323
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2324
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 13, !dbg !2325
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2326
  %set1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 13, !dbg !2327
  %2 = bitcast %struct.UserDefined* %set to i8*, !dbg !2327
  %3 = bitcast %struct.UserDefined* %set1 to i8*, !dbg !2327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 1720, i32 8, i1 false), !dbg !2327
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2328
  %set2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 13, !dbg !2329
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2, i32 0, i32 128, !dbg !2330
  %arraydecay = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i32 0, i32 0, !dbg !2331
  %5 = bitcast i8** %arraydecay to i8*, !dbg !2331
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 448, i32 8, i1 false), !dbg !2331
  store i32 0, i32* %i, align 4, !dbg !2332
  br label %for.cond, !dbg !2334

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !2335
  %cmp = icmp ult i32 %6, 54, !dbg !2338
  br i1 %cmp, label %for.body, label %for.end, !dbg !2339

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !2340
  %idxprom = zext i32 %7 to i64, !dbg !2342
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2342
  %set3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !2343
  %str4 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3, i32 0, i32 128, !dbg !2344
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str4, i64 0, i64 %idxprom, !dbg !2342
  %9 = load i32, i32* %i, align 4, !dbg !2345
  %idxprom5 = zext i32 %9 to i64, !dbg !2346
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2346
  %set6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !2347
  %str7 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set6, i32 0, i32 128, !dbg !2348
  %arrayidx8 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str7, i64 0, i64 %idxprom5, !dbg !2346
  %11 = load i8*, i8** %arrayidx8, align 8, !dbg !2346
  %call = call i32 @setstropt(i8** %arrayidx, i8* %11), !dbg !2349
  store i32 %call, i32* %result, align 4, !dbg !2350
  %12 = load i32, i32* %result, align 4, !dbg !2351
  %tobool = icmp ne i32 %12, 0, !dbg !2351
  br i1 %tobool, label %if.then, label %if.end, !dbg !2353

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %result, align 4, !dbg !2354
  store i32 %13, i32* %retval, align 4, !dbg !2355
  br label %return, !dbg !2355

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2356

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !2357
  %inc = add i32 %14, 1, !dbg !2357
  store i32 %inc, i32* %i, align 4, !dbg !2357
  br label %for.cond, !dbg !2359

for.end:                                          ; preds = %for.cond
  store i32 55, i32* %i, align 4, !dbg !2360
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2361
  %set9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 13, !dbg !2363
  %postfieldsize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set9, i32 0, i32 17, !dbg !2364
  %16 = load i64, i64* %postfieldsize, align 8, !dbg !2364
  %tobool10 = icmp ne i64 %16, 0, !dbg !2361
  br i1 %tobool10, label %land.lhs.true, label %if.end41, !dbg !2365

land.lhs.true:                                    ; preds = %for.end
  %17 = load i32, i32* %i, align 4, !dbg !2366
  %idxprom11 = zext i32 %17 to i64, !dbg !2368
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2368
  %set12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 13, !dbg !2369
  %str13 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set12, i32 0, i32 128, !dbg !2370
  %arrayidx14 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str13, i64 0, i64 %idxprom11, !dbg !2368
  %19 = load i8*, i8** %arrayidx14, align 8, !dbg !2368
  %tobool15 = icmp ne i8* %19, null, !dbg !2368
  br i1 %tobool15, label %if.then16, label %if.end41, !dbg !2371

if.then16:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %i, align 4, !dbg !2372
  %idxprom17 = zext i32 %20 to i64, !dbg !2374
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2374
  %set18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 13, !dbg !2375
  %str19 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set18, i32 0, i32 128, !dbg !2376
  %arrayidx20 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str19, i64 0, i64 %idxprom17, !dbg !2374
  %22 = load i8*, i8** %arrayidx20, align 8, !dbg !2374
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %src.addr, align 8, !dbg !2377
  %set21 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 13, !dbg !2378
  %postfieldsize22 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set21, i32 0, i32 17, !dbg !2379
  %24 = load i64, i64* %postfieldsize22, align 8, !dbg !2379
  %call23 = call i64 @curlx_sotouz(i64 %24), !dbg !2380
  %call24 = call i8* @Curl_memdup(i8* %22, i64 %call23), !dbg !2381
  %25 = load i32, i32* %i, align 4, !dbg !2382
  %idxprom25 = zext i32 %25 to i64, !dbg !2383
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2383
  %set26 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 13, !dbg !2384
  %str27 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set26, i32 0, i32 128, !dbg !2385
  %arrayidx28 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str27, i64 0, i64 %idxprom25, !dbg !2383
  store i8* %call24, i8** %arrayidx28, align 8, !dbg !2386
  %27 = load i32, i32* %i, align 4, !dbg !2387
  %idxprom29 = zext i32 %27 to i64, !dbg !2389
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2389
  %set30 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 13, !dbg !2390
  %str31 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set30, i32 0, i32 128, !dbg !2391
  %arrayidx32 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str31, i64 0, i64 %idxprom29, !dbg !2389
  %29 = load i8*, i8** %arrayidx32, align 8, !dbg !2389
  %tobool33 = icmp ne i8* %29, null, !dbg !2389
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2392

if.then34:                                        ; preds = %if.then16
  store i32 27, i32* %retval, align 4, !dbg !2393
  br label %return, !dbg !2393

if.end35:                                         ; preds = %if.then16
  %30 = load i32, i32* %i, align 4, !dbg !2394
  %idxprom36 = zext i32 %30 to i64, !dbg !2395
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2395
  %set37 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 13, !dbg !2396
  %str38 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set37, i32 0, i32 128, !dbg !2397
  %arrayidx39 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str38, i64 0, i64 %idxprom36, !dbg !2395
  %32 = load i8*, i8** %arrayidx39, align 8, !dbg !2395
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %dst.addr, align 8, !dbg !2398
  %set40 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 13, !dbg !2399
  %postfields = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set40, i32 0, i32 15, !dbg !2400
  store i8* %32, i8** %postfields, align 8, !dbg !2401
  br label %if.end41, !dbg !2402

if.end41:                                         ; preds = %if.end35, %land.lhs.true, %for.end
  store i32 0, i32* %retval, align 4, !dbg !2403
  br label %return, !dbg !2403

return:                                           ; preds = %if.end41, %if.then34, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !2404
  ret i32 %34, !dbg !2404
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @setstropt(i8** %charp, i8* %s) #0 !dbg !2139 {
entry:
  %retval = alloca i32, align 4
  %charp.addr = alloca i8**, align 8
  %s.addr = alloca i8*, align 8
  %str = alloca i8*, align 8
  store i8** %charp, i8*** %charp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %charp.addr, metadata !2405, metadata !2256), !dbg !2406
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2407, metadata !2256), !dbg !2408
  br label %do.body, !dbg !2409

do.body:                                          ; preds = %entry
  %0 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2410
  %1 = load i8**, i8*** %charp.addr, align 8, !dbg !2410
  %2 = load i8*, i8** %1, align 8, !dbg !2410
  call void %0(i8* %2), !dbg !2410
  %3 = load i8**, i8*** %charp.addr, align 8, !dbg !2410
  store i8* null, i8** %3, align 8, !dbg !2410
  br label %do.end, !dbg !2410

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %s.addr, align 8, !dbg !2413
  %tobool = icmp ne i8* %4, null, !dbg !2413
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2415

if.then:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %str, metadata !2416, metadata !2256), !dbg !2418
  %5 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !2419
  %6 = load i8*, i8** %s.addr, align 8, !dbg !2419
  %call = call i8* %5(i8* %6), !dbg !2419
  store i8* %call, i8** %str, align 8, !dbg !2418
  %7 = load i8*, i8** %str, align 8, !dbg !2420
  %tobool1 = icmp ne i8* %7, null, !dbg !2420
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2422

if.then2:                                         ; preds = %if.then
  store i32 27, i32* %retval, align 4, !dbg !2423
  br label %return, !dbg !2423

if.end:                                           ; preds = %if.then
  %8 = load i8*, i8** %str, align 8, !dbg !2424
  %9 = load i8**, i8*** %charp.addr, align 8, !dbg !2425
  store i8* %8, i8** %9, align 8, !dbg !2426
  br label %if.end3, !dbg !2427

if.end3:                                          ; preds = %if.end, %do.end
  store i32 0, i32* %retval, align 4, !dbg !2428
  br label %return, !dbg !2428

return:                                           ; preds = %if.end3, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !2429
  ret i32 %10, !dbg !2429
}

declare i8* @Curl_memdup(i8*, i64) #3

declare i64 @curlx_sotouz(i64) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_close(%struct.Curl_easy* %data) #0 !dbg !2087 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %m = alloca %struct.Curl_multi*, align 8
  %wc = alloca %struct.WildcardData*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2430, metadata !2256), !dbg !2431
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %m, metadata !2432, metadata !2256), !dbg !2433
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2434
  %tobool = icmp ne %struct.Curl_easy* %0, null, !dbg !2434
  br i1 %tobool, label %if.end, label %if.then, !dbg !2436

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2437
  br label %return, !dbg !2437

if.end:                                           ; preds = %entry
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2438
  call void @Curl_expire_clear(%struct.Curl_easy* %1), !dbg !2439
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2440
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 9, !dbg !2441
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2441
  store %struct.Curl_multi* %3, %struct.Curl_multi** %m, align 8, !dbg !2442
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %m, align 8, !dbg !2443
  %tobool1 = icmp ne %struct.Curl_multi* %4, null, !dbg !2443
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !2445

if.then2:                                         ; preds = %if.end
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2446
  %multi3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 9, !dbg !2447
  %6 = load %struct.Curl_multi*, %struct.Curl_multi** %multi3, align 8, !dbg !2447
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2448
  %call = call i32 @curl_multi_remove_handle(%struct.Curl_multi* %6, %struct.Curl_easy* %7), !dbg !2449
  br label %if.end4, !dbg !2449

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2450
  %multi_easy = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 10, !dbg !2452
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi_easy, align 8, !dbg !2452
  %tobool5 = icmp ne %struct.Curl_multi* %9, null, !dbg !2450
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !2453

if.then6:                                         ; preds = %if.end4
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2454
  %multi_easy7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 10, !dbg !2455
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi_easy7, align 8, !dbg !2455
  %call8 = call i32 @curl_multi_cleanup(%struct.Curl_multi* %11), !dbg !2456
  br label %if.end9, !dbg !2456

if.end9:                                          ; preds = %if.then6, %if.end4
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2457
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %12, i32 0, i32 17, !dbg !2458
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 29, !dbg !2459
  call void @Curl_llist_destroy(%struct.curl_llist* %timeoutlist, i8* null), !dbg !2460
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2461
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 21, !dbg !2462
  store i32 0, i32* %magic, align 8, !dbg !2463
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2464
  %state10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 17, !dbg !2466
  %rangestringalloc = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state10, i32 0, i32 41, !dbg !2467
  %15 = load i8, i8* %rangestringalloc, align 2, !dbg !2467
  %tobool11 = trunc i8 %15 to i1, !dbg !2467
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !2468

if.then12:                                        ; preds = %if.end9
  %16 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2469
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2469
  %state13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 17, !dbg !2469
  %range = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state13, i32 0, i32 42, !dbg !2469
  %18 = load i8*, i8** %range, align 8, !dbg !2469
  call void %16(i8* %18), !dbg !2469
  br label %if.end14, !dbg !2469

if.end14:                                         ; preds = %if.then12, %if.end9
  br label %do.body, !dbg !2470

do.body:                                          ; preds = %if.end14
  %19 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2471
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2471
  %state15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 17, !dbg !2471
  %pathbuffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state15, i32 0, i32 37, !dbg !2471
  %21 = load i8*, i8** %pathbuffer, align 8, !dbg !2471
  call void %19(i8* %21), !dbg !2471
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2471
  %state16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !2471
  %pathbuffer17 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state16, i32 0, i32 37, !dbg !2471
  store i8* null, i8** %pathbuffer17, align 8, !dbg !2471
  br label %do.end, !dbg !2471

do.end:                                           ; preds = %do.body
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2474
  %state18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 17, !dbg !2475
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state18, i32 0, i32 38, !dbg !2476
  store i8* null, i8** %path, align 8, !dbg !2477
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2478
  call void @Curl_free_request_state(%struct.Curl_easy* %24), !dbg !2479
  br label %do.body19, !dbg !2480

do.body19:                                        ; preds = %do.end
  br label %do.end20, !dbg !2481

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !2484

do.body21:                                        ; preds = %do.end20
  %25 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2485
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2485
  %state22 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 17, !dbg !2485
  %first_host = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state22, i32 0, i32 10, !dbg !2485
  %27 = load i8*, i8** %first_host, align 8, !dbg !2485
  call void %25(i8* %27), !dbg !2485
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2485
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 17, !dbg !2485
  %first_host24 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 10, !dbg !2485
  store i8* null, i8** %first_host24, align 8, !dbg !2485
  br label %do.end25, !dbg !2485

do.end25:                                         ; preds = %do.body21
  br label %do.body26, !dbg !2488

do.body26:                                        ; preds = %do.end25
  %29 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2489
  %30 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2489
  %state27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %30, i32 0, i32 17, !dbg !2489
  %scratch = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state27, i32 0, i32 16, !dbg !2489
  %31 = load i8*, i8** %scratch, align 8, !dbg !2489
  call void %29(i8* %31), !dbg !2489
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2489
  %state28 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %32, i32 0, i32 17, !dbg !2489
  %scratch29 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state28, i32 0, i32 16, !dbg !2489
  store i8* null, i8** %scratch29, align 8, !dbg !2489
  br label %do.end30, !dbg !2489

do.end30:                                         ; preds = %do.body26
  br label %do.body31, !dbg !2492

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !2493

do.end32:                                         ; preds = %do.body31
  %33 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2496
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2496
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 12, !dbg !2496
  %newurl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 36, !dbg !2496
  %35 = load i8*, i8** %newurl, align 8, !dbg !2496
  call void %33(i8* %35), !dbg !2496
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2497
  %req33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %36, i32 0, i32 12, !dbg !2498
  %newurl34 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req33, i32 0, i32 36, !dbg !2499
  store i8* null, i8** %newurl34, align 8, !dbg !2500
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2501
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %37, i32 0, i32 14, !dbg !2503
  %referer_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 3, !dbg !2504
  %38 = load i8, i8* %referer_alloc, align 8, !dbg !2504
  %tobool35 = trunc i8 %38 to i1, !dbg !2504
  br i1 %tobool35, label %if.then36, label %if.end44, !dbg !2505

if.then36:                                        ; preds = %do.end32
  br label %do.body37, !dbg !2506

do.body37:                                        ; preds = %if.then36
  %39 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2508
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2508
  %change38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 14, !dbg !2508
  %referer = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change38, i32 0, i32 2, !dbg !2508
  %41 = load i8*, i8** %referer, align 8, !dbg !2508
  call void %39(i8* %41), !dbg !2508
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2508
  %change39 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 14, !dbg !2508
  %referer40 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change39, i32 0, i32 2, !dbg !2508
  store i8* null, i8** %referer40, align 8, !dbg !2508
  br label %do.end41, !dbg !2508

do.end41:                                         ; preds = %do.body37
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2511
  %change42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %43, i32 0, i32 14, !dbg !2512
  %referer_alloc43 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change42, i32 0, i32 3, !dbg !2513
  store i8 0, i8* %referer_alloc43, align 8, !dbg !2514
  br label %if.end44, !dbg !2515

if.end44:                                         ; preds = %do.end41, %do.end32
  %44 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2516
  %change45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %44, i32 0, i32 14, !dbg !2517
  %referer46 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change45, i32 0, i32 2, !dbg !2518
  store i8* null, i8** %referer46, align 8, !dbg !2519
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2520
  %change47 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 14, !dbg !2522
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change47, i32 0, i32 1, !dbg !2523
  %46 = load i8, i8* %url_alloc, align 8, !dbg !2523
  %tobool48 = trunc i8 %46 to i1, !dbg !2523
  br i1 %tobool48, label %if.then49, label %if.end57, !dbg !2524

if.then49:                                        ; preds = %if.end44
  br label %do.body50, !dbg !2525

do.body50:                                        ; preds = %if.then49
  %47 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2527
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2527
  %change51 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 14, !dbg !2527
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change51, i32 0, i32 0, !dbg !2527
  %49 = load i8*, i8** %url, align 8, !dbg !2527
  call void %47(i8* %49), !dbg !2527
  %50 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2527
  %change52 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %50, i32 0, i32 14, !dbg !2527
  %url53 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change52, i32 0, i32 0, !dbg !2527
  store i8* null, i8** %url53, align 8, !dbg !2527
  br label %do.end54, !dbg !2527

do.end54:                                         ; preds = %do.body50
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2530
  %change55 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 14, !dbg !2531
  %url_alloc56 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change55, i32 0, i32 1, !dbg !2532
  store i8 0, i8* %url_alloc56, align 8, !dbg !2533
  br label %if.end57, !dbg !2534

if.end57:                                         ; preds = %do.end54, %if.end44
  %52 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2535
  %change58 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %52, i32 0, i32 14, !dbg !2536
  %url59 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change58, i32 0, i32 0, !dbg !2537
  store i8* null, i8** %url59, align 8, !dbg !2538
  br label %do.body60, !dbg !2539

do.body60:                                        ; preds = %if.end57
  %53 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2540
  %54 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2540
  %state61 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %54, i32 0, i32 17, !dbg !2540
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state61, i32 0, i32 6, !dbg !2540
  %55 = load i8*, i8** %buffer, align 8, !dbg !2540
  call void %53(i8* %55), !dbg !2540
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2540
  %state62 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %56, i32 0, i32 17, !dbg !2540
  %buffer63 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state62, i32 0, i32 6, !dbg !2540
  store i8* null, i8** %buffer63, align 8, !dbg !2540
  br label %do.end64, !dbg !2540

do.end64:                                         ; preds = %do.body60
  br label %do.body65, !dbg !2543

do.body65:                                        ; preds = %do.end64
  %57 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2544
  %58 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2544
  %state66 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %58, i32 0, i32 17, !dbg !2544
  %headerbuff = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state66, i32 0, i32 4, !dbg !2544
  %59 = load i8*, i8** %headerbuff, align 8, !dbg !2544
  call void %57(i8* %59), !dbg !2544
  %60 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2544
  %state67 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %60, i32 0, i32 17, !dbg !2544
  %headerbuff68 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state67, i32 0, i32 4, !dbg !2544
  store i8* null, i8** %headerbuff68, align 8, !dbg !2544
  br label %do.end69, !dbg !2544

do.end69:                                         ; preds = %do.body65
  %61 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2547
  call void @Curl_flush_cookies(%struct.Curl_easy* %61, i32 1), !dbg !2548
  %62 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2549
  call void @Curl_digest_cleanup(%struct.Curl_easy* %62), !dbg !2550
  br label %do.body70, !dbg !2551

do.body70:                                        ; preds = %do.end69
  %63 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2552
  %64 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2552
  %info = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %64, i32 0, i32 19, !dbg !2552
  %contenttype = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info, i32 0, i32 10, !dbg !2552
  %65 = load i8*, i8** %contenttype, align 8, !dbg !2552
  call void %63(i8* %65), !dbg !2552
  %66 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2552
  %info71 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %66, i32 0, i32 19, !dbg !2552
  %contenttype72 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info71, i32 0, i32 10, !dbg !2552
  store i8* null, i8** %contenttype72, align 8, !dbg !2552
  br label %do.end73, !dbg !2552

do.end73:                                         ; preds = %do.body70
  br label %do.body74, !dbg !2555

do.body74:                                        ; preds = %do.end73
  %67 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2556
  %68 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2556
  %info75 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %68, i32 0, i32 19, !dbg !2556
  %wouldredirect = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info75, i32 0, i32 11, !dbg !2556
  %69 = load i8*, i8** %wouldredirect, align 8, !dbg !2556
  call void %67(i8* %69), !dbg !2556
  %70 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2556
  %info76 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %70, i32 0, i32 19, !dbg !2556
  %wouldredirect77 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info76, i32 0, i32 11, !dbg !2556
  store i8* null, i8** %wouldredirect77, align 8, !dbg !2556
  br label %do.end78, !dbg !2556

do.end78:                                         ; preds = %do.body74
  br label %do.body79, !dbg !2559

do.body79:                                        ; preds = %do.end78
  br label %do.end80, !dbg !2560

do.end80:                                         ; preds = %do.body79
  br label %do.body81, !dbg !2563

do.body81:                                        ; preds = %do.end80
  br label %do.end82, !dbg !2564

do.end82:                                         ; preds = %do.body81
  %71 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2567
  %share = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %71, i32 0, i32 11, !dbg !2569
  %72 = load %struct.Curl_share*, %struct.Curl_share** %share, align 8, !dbg !2569
  %tobool83 = icmp ne %struct.Curl_share* %72, null, !dbg !2567
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !2570

if.then84:                                        ; preds = %do.end82
  %73 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2571
  %call85 = call i32 @Curl_share_lock(%struct.Curl_easy* %73, i32 1, i32 2), !dbg !2573
  %74 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2574
  %share86 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %74, i32 0, i32 11, !dbg !2575
  %75 = load %struct.Curl_share*, %struct.Curl_share** %share86, align 8, !dbg !2575
  %dirty = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %75, i32 0, i32 1, !dbg !2576
  %76 = load volatile i32, i32* %dirty, align 4, !dbg !2577
  %dec = add i32 %76, -1, !dbg !2577
  store volatile i32 %dec, i32* %dirty, align 4, !dbg !2577
  %77 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2578
  %call87 = call i32 @Curl_share_unlock(%struct.Curl_easy* %77, i32 1), !dbg !2579
  br label %if.end88, !dbg !2580

if.end88:                                         ; preds = %if.then84, %do.end82
  %78 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2581
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %78, i32 0, i32 13, !dbg !2583
  %wildcardmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 136, !dbg !2584
  %79 = load i8, i8* %wildcardmatch, align 8, !dbg !2584
  %tobool89 = trunc i8 %79 to i1, !dbg !2584
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !2585

if.then90:                                        ; preds = %if.end88
  call void @llvm.dbg.declare(metadata %struct.WildcardData** %wc, metadata !2586, metadata !2256), !dbg !2589
  %80 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2590
  %wildcard = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %80, i32 0, i32 18, !dbg !2591
  store %struct.WildcardData* %wildcard, %struct.WildcardData** %wc, align 8, !dbg !2589
  %81 = load %struct.WildcardData*, %struct.WildcardData** %wc, align 8, !dbg !2592
  call void @Curl_wildcard_dtor(%struct.WildcardData* %81), !dbg !2593
  br label %if.end91, !dbg !2594

if.end91:                                         ; preds = %if.then90, %if.end88
  %82 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2595
  call void @Curl_freeset(%struct.Curl_easy* %82), !dbg !2596
  %83 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2597
  %84 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2597
  %85 = bitcast %struct.Curl_easy* %84 to i8*, !dbg !2597
  call void %83(i8* %85), !dbg !2597
  store i32 0, i32* %retval, align 4, !dbg !2598
  br label %return, !dbg !2598

return:                                           ; preds = %if.end91, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !2599
  ret i32 %86, !dbg !2599
}

declare void @Curl_expire_clear(%struct.Curl_easy*) #3

declare i32 @curl_multi_remove_handle(%struct.Curl_multi*, %struct.Curl_easy*) #3

declare i32 @curl_multi_cleanup(%struct.Curl_multi*) #3

declare void @Curl_llist_destroy(%struct.curl_llist*, i8*) #3

; Function Attrs: nounwind uwtable
define void @Curl_free_request_state(%struct.Curl_easy* %data) #0 !dbg !2130 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2600, metadata !2256), !dbg !2601
  br label %do.body, !dbg !2602

do.body:                                          ; preds = %entry
  %0 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2603
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2603
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 12, !dbg !2603
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !2603
  %2 = load i8*, i8** %protop, align 8, !dbg !2603
  call void %0(i8* %2), !dbg !2603
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2603
  %req1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 12, !dbg !2603
  %protop2 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1, i32 0, i32 43, !dbg !2603
  store i8* null, i8** %protop2, align 8, !dbg !2603
  br label %do.end, !dbg !2603

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !2606

do.body3:                                         ; preds = %do.end
  %4 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2607
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2607
  %req4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 12, !dbg !2607
  %newurl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req4, i32 0, i32 36, !dbg !2607
  %6 = load i8*, i8** %newurl, align 8, !dbg !2607
  call void %4(i8* %6), !dbg !2607
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2607
  %req5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 12, !dbg !2607
  %newurl6 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req5, i32 0, i32 36, !dbg !2607
  store i8* null, i8** %newurl6, align 8, !dbg !2607
  br label %do.end7, !dbg !2607

do.end7:                                          ; preds = %do.body3
  ret void, !dbg !2610
}

declare void @Curl_flush_cookies(%struct.Curl_easy*, i32) #3

declare void @Curl_digest_cleanup(%struct.Curl_easy*) #3

declare i32 @Curl_share_lock(%struct.Curl_easy*, i32, i32) #3

declare i32 @Curl_share_unlock(%struct.Curl_easy*, i32) #3

declare void @Curl_wildcard_dtor(%struct.WildcardData*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_init_userdefined(%struct.UserDefined* %set) #0 !dbg !2090 {
entry:
  %set.addr = alloca %struct.UserDefined*, align 8
  %result = alloca i32, align 4
  store %struct.UserDefined* %set, %struct.UserDefined** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UserDefined** %set.addr, metadata !2611, metadata !2256), !dbg !2612
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2613, metadata !2256), !dbg !2614
  store i32 0, i32* %result, align 4, !dbg !2614
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2615
  %1 = bitcast %struct._IO_FILE* %0 to i8*, !dbg !2615
  %2 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2616
  %out = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %2, i32 0, i32 4, !dbg !2617
  store i8* %1, i8** %out, align 8, !dbg !2618
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2619
  %4 = bitcast %struct._IO_FILE* %3 to i8*, !dbg !2619
  %5 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2620
  %in_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %5, i32 0, i32 5, !dbg !2621
  store i8* %4, i8** %in_set, align 8, !dbg !2622
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2623
  %7 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2624
  %err = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %7, i32 0, i32 0, !dbg !2625
  store %struct._IO_FILE* %6, %struct._IO_FILE** %err, align 8, !dbg !2626
  %8 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2627
  %fwrite_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %8, i32 0, i32 20, !dbg !2628
  store i64 (i8*, i64, i64, i8*)* bitcast (i64 (i8*, i64, i64, %struct._IO_FILE*)* @fwrite to i64 (i8*, i64, i64, i8*)*), i64 (i8*, i64, i64, i8*)** %fwrite_func, align 8, !dbg !2629
  %9 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2630
  %fread_func_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %9, i32 0, i32 23, !dbg !2631
  store i64 (i8*, i64, i64, i8*)* bitcast (i64 (i8*, i64, i64, %struct._IO_FILE*)* @fread to i64 (i8*, i64, i64, i8*)*), i64 (i8*, i64, i64, i8*)** %fread_func_set, align 8, !dbg !2632
  %10 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2633
  %is_fread_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %10, i32 0, i32 24, !dbg !2634
  store i32 0, i32* %is_fread_set, align 8, !dbg !2635
  %11 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2636
  %is_fwrite_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %11, i32 0, i32 25, !dbg !2637
  store i32 0, i32* %is_fwrite_set, align 4, !dbg !2638
  %12 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2639
  %seek_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %12, i32 0, i32 16, !dbg !2640
  store i32 (i8*, i64, i32)* null, i32 (i8*, i64, i32)** %seek_func, align 8, !dbg !2641
  %13 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2642
  %seek_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %13, i32 0, i32 36, !dbg !2643
  store i8* null, i8** %seek_client, align 8, !dbg !2644
  %14 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2645
  %convfromnetwork = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %14, i32 0, i32 37, !dbg !2646
  store i32 (i8*, i64)* null, i32 (i8*, i64)** %convfromnetwork, align 8, !dbg !2647
  %15 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2648
  %convtonetwork = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %15, i32 0, i32 38, !dbg !2649
  store i32 (i8*, i64)* null, i32 (i8*, i64)** %convtonetwork, align 8, !dbg !2650
  %16 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2651
  %convfromutf8 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %16, i32 0, i32 39, !dbg !2652
  store i32 (i8*, i64)* null, i32 (i8*, i64)** %convfromutf8, align 8, !dbg !2653
  %17 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2654
  %filesize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %17, i32 0, i32 48, !dbg !2655
  store i64 -1, i64* %filesize, align 8, !dbg !2656
  %18 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2657
  %postfieldsize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %18, i32 0, i32 17, !dbg !2658
  store i64 -1, i64* %postfieldsize, align 8, !dbg !2659
  %19 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2660
  %maxredirs = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %19, i32 0, i32 12, !dbg !2661
  store i64 -1, i64* %maxredirs, align 8, !dbg !2662
  %20 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2663
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %20, i32 0, i32 71, !dbg !2664
  store i32 1, i32* %httpreq, align 8, !dbg !2665
  %21 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2666
  %rtspreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %21, i32 0, i32 134, !dbg !2667
  store i32 1, i32* %rtspreq, align 4, !dbg !2668
  %22 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2669
  %ftp_use_epsv = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %22, i32 0, i32 110, !dbg !2670
  store i8 1, i8* %ftp_use_epsv, align 4, !dbg !2671
  %23 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2672
  %ftp_use_eprt = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %23, i32 0, i32 111, !dbg !2673
  store i8 1, i8* %ftp_use_eprt, align 1, !dbg !2674
  %24 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2675
  %ftp_use_pret = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %24, i32 0, i32 112, !dbg !2676
  store i8 0, i8* %ftp_use_pret, align 2, !dbg !2677
  %25 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2678
  %ftp_filemethod = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %25, i32 0, i32 83, !dbg !2679
  store i32 1, i32* %ftp_filemethod, align 8, !dbg !2680
  %26 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2681
  %dns_cache_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %26, i32 0, i32 77, !dbg !2682
  store i64 60, i64* %dns_cache_timeout, align 8, !dbg !2683
  %27 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2684
  %general_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %27, i32 0, i32 75, !dbg !2685
  %max_ssl_sessions = getelementptr inbounds %struct.ssl_general_config, %struct.ssl_general_config* %general_ssl, i32 0, i32 0, !dbg !2686
  store i64 5, i64* %max_ssl_sessions, align 8, !dbg !2687
  %28 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2688
  %proxyport = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %28, i32 0, i32 3, !dbg !2689
  store i64 0, i64* %proxyport, align 8, !dbg !2690
  %29 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2691
  %proxytype = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %29, i32 0, i32 76, !dbg !2692
  store i32 0, i32* %proxytype, align 8, !dbg !2693
  %30 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2694
  %httpauth = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %30, i32 0, i32 9, !dbg !2695
  store i64 1, i64* %httpauth, align 8, !dbg !2696
  %31 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2697
  %proxyauth = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %31, i32 0, i32 10, !dbg !2698
  store i64 1, i64* %proxyauth, align 8, !dbg !2699
  %32 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2700
  %hide_progress = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %32, i32 0, i32 94, !dbg !2701
  store i8 1, i8* %hide_progress, align 1, !dbg !2702
  %33 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2703
  %ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %33, i32 0, i32 73, !dbg !2704
  %primary = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl, i32 0, i32 0, !dbg !2705
  %verifypeer = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary, i32 0, i32 2, !dbg !2706
  store i8 1, i8* %verifypeer, align 8, !dbg !2707
  %34 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2708
  %ssl1 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %34, i32 0, i32 73, !dbg !2709
  %primary2 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl1, i32 0, i32 0, !dbg !2710
  %verifyhost = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary2, i32 0, i32 3, !dbg !2711
  store i8 1, i8* %verifyhost, align 1, !dbg !2712
  %35 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2713
  %ssh_auth_types = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %35, i32 0, i32 122, !dbg !2714
  store i64 -1, i64* %ssh_auth_types, align 8, !dbg !2715
  %36 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2716
  %ssl3 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %36, i32 0, i32 73, !dbg !2717
  %primary4 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl3, i32 0, i32 0, !dbg !2718
  %sessionid = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary4, i32 0, i32 11, !dbg !2719
  store i8 1, i8* %sessionid, align 8, !dbg !2720
  %37 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2721
  %proxy_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %37, i32 0, i32 74, !dbg !2722
  %38 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2723
  %ssl5 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %38, i32 0, i32 73, !dbg !2724
  %39 = bitcast %struct.ssl_config_data* %proxy_ssl to i8*, !dbg !2724
  %40 = bitcast %struct.ssl_config_data* %ssl5 to i8*, !dbg !2724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 176, i32 8, i1 false), !dbg !2724
  %41 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2725
  %new_file_perms = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %41, i32 0, i32 125, !dbg !2726
  store i64 420, i64* %new_file_perms, align 8, !dbg !2727
  %42 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2728
  %new_directory_perms = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %42, i32 0, i32 126, !dbg !2729
  store i64 493, i64* %new_directory_perms, align 8, !dbg !2730
  %43 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2731
  %allowed_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %43, i32 0, i32 130, !dbg !2732
  store i64 -1, i64* %allowed_protocols, align 8, !dbg !2733
  %44 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2734
  %redir_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %44, i32 0, i32 131, !dbg !2735
  store i64 -201327633, i64* %redir_protocols, align 8, !dbg !2736
  %45 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2737
  %wildcardmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %45, i32 0, i32 136, !dbg !2738
  store i8 0, i8* %wildcardmatch, align 8, !dbg !2739
  %46 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2740
  %chunk_bgn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %46, i32 0, i32 137, !dbg !2741
  store i64 (i8*, i8*, i32)* null, i64 (i8*, i8*, i32)** %chunk_bgn, align 8, !dbg !2742
  %47 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2743
  %chunk_end = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %47, i32 0, i32 138, !dbg !2744
  store i64 (i8*)* null, i64 (i8*)** %chunk_end, align 8, !dbg !2745
  %48 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2746
  %tcp_keepalive = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %48, i32 0, i32 142, !dbg !2747
  store i8 0, i8* %tcp_keepalive, align 8, !dbg !2748
  %49 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2749
  %tcp_keepintvl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %49, i32 0, i32 144, !dbg !2750
  store i64 60, i64* %tcp_keepintvl, align 8, !dbg !2751
  %50 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2752
  %tcp_keepidle = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %50, i32 0, i32 143, !dbg !2753
  store i64 60, i64* %tcp_keepidle, align 8, !dbg !2754
  %51 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2755
  %tcp_fastopen = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %51, i32 0, i32 145, !dbg !2756
  store i8 0, i8* %tcp_fastopen, align 8, !dbg !2757
  %52 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2758
  %tcp_nodelay = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %52, i32 0, i32 118, !dbg !2759
  store i8 1, i8* %tcp_nodelay, align 2, !dbg !2760
  %53 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2761
  %ssl_enable_npn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %53, i32 0, i32 147, !dbg !2762
  store i8 1, i8* %ssl_enable_npn, align 8, !dbg !2763
  %54 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2764
  %ssl_enable_alpn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %54, i32 0, i32 148, !dbg !2765
  store i8 1, i8* %ssl_enable_alpn, align 1, !dbg !2766
  %55 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2767
  %expect_100_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %55, i32 0, i32 151, !dbg !2768
  store i64 1000, i64* %expect_100_timeout, align 8, !dbg !2769
  %56 = load %struct.UserDefined*, %struct.UserDefined** %set.addr, align 8, !dbg !2770
  %sep_headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %56, i32 0, i32 57, !dbg !2771
  store i8 1, i8* %sep_headers, align 8, !dbg !2772
  %57 = load i32, i32* %result, align 4, !dbg !2773
  ret i32 %57, !dbg !2774
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_open(%struct.Curl_easy** %curl) #0 !dbg !2094 {
entry:
  %retval = alloca i32, align 4
  %curl.addr = alloca %struct.Curl_easy**, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.Curl_easy** %curl, %struct.Curl_easy*** %curl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy*** %curl.addr, metadata !2775, metadata !2256), !dbg !2776
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2777, metadata !2256), !dbg !2778
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !2779, metadata !2256), !dbg !2780
  %0 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !2781
  %call = call i8* %0(i64 1, i64 20024), !dbg !2781
  %1 = bitcast i8* %call to %struct.Curl_easy*, !dbg !2781
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !2782
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2783
  %tobool = icmp ne %struct.Curl_easy* %2, null, !dbg !2783
  br i1 %tobool, label %if.end, label %if.then, !dbg !2785

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2786

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !2788

do.end:                                           ; preds = %do.body
  store i32 27, i32* %retval, align 4, !dbg !2791
  br label %return, !dbg !2791

if.end:                                           ; preds = %entry
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2792
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 21, !dbg !2793
  store i32 -1059136595, i32* %magic, align 8, !dbg !2794
  store i32 0, i32* %result, align 4, !dbg !2795
  %4 = load i32, i32* %result, align 4, !dbg !2796
  %tobool1 = icmp ne i32 %4, 0, !dbg !2796
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !2798

if.then2:                                         ; preds = %if.end
  br label %do.body3, !dbg !2799

do.body3:                                         ; preds = %if.then2
  br label %do.end4, !dbg !2801

do.end4:                                          ; preds = %do.body3
  %5 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2804
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2804
  %7 = bitcast %struct.Curl_easy* %6 to i8*, !dbg !2804
  call void %5(i8* %7), !dbg !2804
  %8 = load i32, i32* %result, align 4, !dbg !2805
  store i32 %8, i32* %retval, align 4, !dbg !2806
  br label %return, !dbg !2806

if.end5:                                          ; preds = %if.end
  %9 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !2807
  %call6 = call i8* %9(i64 16385), !dbg !2807
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2808
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 17, !dbg !2809
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 6, !dbg !2810
  store i8* %call6, i8** %buffer, align 8, !dbg !2811
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2812
  %state7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 17, !dbg !2814
  %buffer8 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state7, i32 0, i32 6, !dbg !2815
  %12 = load i8*, i8** %buffer8, align 8, !dbg !2815
  %tobool9 = icmp ne i8* %12, null, !dbg !2812
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !2816

if.then10:                                        ; preds = %if.end5
  br label %do.body11, !dbg !2817

do.body11:                                        ; preds = %if.then10
  br label %do.end12, !dbg !2819

do.end12:                                         ; preds = %do.body11
  store i32 27, i32* %result, align 4, !dbg !2822
  br label %if.end13, !dbg !2823

if.end13:                                         ; preds = %do.end12, %if.end5
  %13 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !2824
  %call14 = call i8* %13(i64 256), !dbg !2824
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2825
  %state15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 17, !dbg !2826
  %headerbuff = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state15, i32 0, i32 4, !dbg !2827
  store i8* %call14, i8** %headerbuff, align 8, !dbg !2828
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2829
  %state16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 17, !dbg !2831
  %headerbuff17 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state16, i32 0, i32 4, !dbg !2832
  %16 = load i8*, i8** %headerbuff17, align 8, !dbg !2832
  %tobool18 = icmp ne i8* %16, null, !dbg !2829
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !2833

if.then19:                                        ; preds = %if.end13
  br label %do.body20, !dbg !2834

do.body20:                                        ; preds = %if.then19
  br label %do.end21, !dbg !2836

do.end21:                                         ; preds = %do.body20
  store i32 27, i32* %result, align 4, !dbg !2839
  br label %if.end31, !dbg !2840

if.else:                                          ; preds = %if.end13
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2841
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !2843
  %call22 = call i32 @Curl_init_userdefined(%struct.UserDefined* %set), !dbg !2844
  store i32 %call22, i32* %result, align 4, !dbg !2845
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2846
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 17, !dbg !2847
  %headersize = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 5, !dbg !2848
  store i64 256, i64* %headersize, align 8, !dbg !2849
  br label %do.body24, !dbg !2850

do.body24:                                        ; preds = %if.else
  br label %do.end25, !dbg !2851

do.end25:                                         ; preds = %do.body24
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2854
  %call26 = call i32 @Curl_initinfo(%struct.Curl_easy* %19), !dbg !2855
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2856
  %state27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 17, !dbg !2857
  %lastconnect = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state27, i32 0, i32 3, !dbg !2858
  store %struct.connectdata* null, %struct.connectdata** %lastconnect, align 8, !dbg !2859
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2860
  %progress = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 16, !dbg !2861
  %flags = getelementptr inbounds %struct.Progress, %struct.Progress* %progress, i32 0, i32 8, !dbg !2862
  %22 = load i32, i32* %flags, align 8, !dbg !2863
  %or = or i32 %22, 16, !dbg !2863
  store i32 %or, i32* %flags, align 8, !dbg !2863
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2864
  %state28 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 17, !dbg !2865
  %current_speed = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state28, i32 0, i32 8, !dbg !2866
  store i64 -1, i64* %current_speed, align 8, !dbg !2867
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2868
  %set29 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 13, !dbg !2869
  %fnmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set29, i32 0, i32 139, !dbg !2870
  store i32 (i8*, i8*, i8*)* null, i32 (i8*, i8*, i8*)** %fnmatch, align 8, !dbg !2871
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2872
  %set30 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 13, !dbg !2873
  %maxconnects = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set30, i32 0, i32 146, !dbg !2874
  store i64 5, i64* %maxconnects, align 8, !dbg !2875
  br label %if.end31

if.end31:                                         ; preds = %do.end25, %do.end21
  %26 = load i32, i32* %result, align 4, !dbg !2876
  %tobool32 = icmp ne i32 %26, 0, !dbg !2876
  br i1 %tobool32, label %if.then33, label %if.else40, !dbg !2878

if.then33:                                        ; preds = %if.end31
  br label %do.body34, !dbg !2879

do.body34:                                        ; preds = %if.then33
  br label %do.end35, !dbg !2881

do.end35:                                         ; preds = %do.body34
  %27 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2884
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2884
  %state36 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 17, !dbg !2884
  %buffer37 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state36, i32 0, i32 6, !dbg !2884
  %29 = load i8*, i8** %buffer37, align 8, !dbg !2884
  call void %27(i8* %29), !dbg !2884
  %30 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2885
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2885
  %state38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 17, !dbg !2885
  %headerbuff39 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state38, i32 0, i32 4, !dbg !2885
  %32 = load i8*, i8** %headerbuff39, align 8, !dbg !2885
  call void %30(i8* %32), !dbg !2885
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2886
  call void @Curl_freeset(%struct.Curl_easy* %33), !dbg !2887
  %34 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2888
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2888
  %36 = bitcast %struct.Curl_easy* %35 to i8*, !dbg !2888
  call void %34(i8* %36), !dbg !2888
  store %struct.Curl_easy* null, %struct.Curl_easy** %data, align 8, !dbg !2889
  br label %if.end41, !dbg !2890

if.else40:                                        ; preds = %if.end31
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2891
  %38 = load %struct.Curl_easy**, %struct.Curl_easy*** %curl.addr, align 8, !dbg !2892
  store %struct.Curl_easy* %37, %struct.Curl_easy** %38, align 8, !dbg !2893
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %do.end35
  %39 = load i32, i32* %result, align 4, !dbg !2894
  store i32 %39, i32* %retval, align 4, !dbg !2895
  br label %return, !dbg !2895

return:                                           ; preds = %if.end41, %do.end4, %do.end
  %40 = load i32, i32* %retval, align 4, !dbg !2896
  ret i32 %40, !dbg !2896
}

declare i32 @Curl_initinfo(%struct.Curl_easy*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_setopt(%struct.Curl_easy* %data, i32 %option, %struct.__va_list_tag* %param) #0 !dbg !2098 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %option.addr = alloca i32, align 4
  %param.addr = alloca %struct.__va_list_tag*, align 8
  %argptr = alloca i8*, align 8
  %result = alloca i32, align 4
  %arg = alloca i64, align 8
  %bigsize = alloca i64, align 8
  %postRedir = alloca i32, align 4
  %p = alloca i8*, align 8
  %cl = alloca %struct.curl_slist*, align 8
  %newcookies = alloca %struct.CookieInfo*, align 8
  %bitcheck = alloca i32, align 4
  %authbits = alloca i8, align 1
  %auth = alloca i64, align 8
  %bitcheck1163 = alloca i32, align 4
  %authbits1164 = alloca i8, align 1
  %auth1165 = alloca i64, align 8
  %set2692 = alloca %struct.Curl_share*, align 8
  %curl_rtspreq = alloca i64, align 8
  %rtspreq = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2897, metadata !2256), !dbg !2898
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !2899, metadata !2256), !dbg !2900
  store %struct.__va_list_tag* %param, %struct.__va_list_tag** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %param.addr, metadata !2901, metadata !2256), !dbg !2902
  call void @llvm.dbg.declare(metadata i8** %argptr, metadata !2903, metadata !2256), !dbg !2904
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2905, metadata !2256), !dbg !2906
  store i32 0, i32* %result, align 4, !dbg !2906
  call void @llvm.dbg.declare(metadata i64* %arg, metadata !2907, metadata !2256), !dbg !2908
  call void @llvm.dbg.declare(metadata i64* %bigsize, metadata !2909, metadata !2256), !dbg !2910
  %0 = load i32, i32* %option.addr, align 4, !dbg !2911
  switch i32 %0, label %sw.default3647 [
    i32 92, label %sw.bb
    i32 91, label %sw.bb1
    i32 10083, label %sw.bb14
    i32 10259, label %sw.bb27
    i32 10076, label %sw.bb43
    i32 10077, label %sw.bb59
    i32 71, label %sw.bb75
    i32 75, label %sw.bb88
    i32 74, label %sw.bb105
    i32 41, label %sw.bb122
    i32 42, label %sw.bb139
    i32 43, label %sw.bb156
    i32 44, label %sw.bb178
    i32 45, label %sw.bb195
    i32 245, label %sw.bb212
    i32 46, label %sw.bb229
    i32 54, label %sw.bb229
    i32 69, label %sw.bb257
    i32 110, label %sw.bb274
    i32 112, label %sw.bb294
    i32 242, label %sw.bb307
    i32 178, label %sw.bb322
    i32 48, label %sw.bb335
    i32 50, label %sw.bb352
    i32 138, label %sw.bb369
    i32 51, label %sw.bb382
    i32 10118, label %sw.bb396
    i32 53, label %sw.bb412
    i32 33, label %sw.bb430
    i32 34, label %sw.bb444
    i32 32, label %sw.bb457
    i32 250, label %sw.bb458
    i32 58, label %sw.bb459
    i32 10102, label %sw.bb477
    i32 207, label %sw.bb496
    i32 52, label %sw.bb514
    i32 105, label %sw.bb532
    i32 68, label %sw.bb550
    i32 161, label %sw.bb563
    i32 47, label %sw.bb578
    i32 10165, label %sw.bb600
    i32 10015, label %sw.bb664
    i32 60, label %sw.bb684
    i32 30120, label %sw.bb718
    i32 10024, label %sw.bb752
    i32 10016, label %sw.bb769
    i32 10018, label %sw.bb798
    i32 10023, label %sw.bb814
    i32 10228, label %sw.bb827
    i32 229, label %sw.bb840
    i32 10104, label %sw.bb858
    i32 10022, label %sw.bb871
    i32 10031, label %sw.bb887
    i32 10082, label %sw.bb913
    i32 96, label %sw.bb936
    i32 10135, label %sw.bb955
    i32 80, label %sw.bb1022
    i32 84, label %sw.bb1043
    i32 107, label %sw.bb1060
    i32 227, label %sw.bb1102
    i32 10036, label %sw.bb1115
    i32 61, label %sw.bb1131
    i32 59, label %sw.bb1149
    i32 111, label %sw.bb1162
    i32 10004, label %sw.bb1215
    i32 10262, label %sw.bb1231
    i32 101, label %sw.bb1247
    i32 166, label %sw.bb1261
    i32 10236, label %sw.bb1280
    i32 10029, label %sw.bb1296
    i32 10010, label %sw.bb1309
    i32 10001, label %sw.bb1322
    i32 10017, label %sw.bb1335
    i32 106, label %sw.bb1359
    i32 85, label %sw.bb1377
    i32 188, label %sw.bb1395
    i32 154, label %sw.bb1413
    i32 137, label %sw.bb1427
    i32 10009, label %sw.bb1445
    i32 14, label %sw.bb1458
    i32 30115, label %sw.bb1471
    i32 19, label %sw.bb1485
    i32 30145, label %sw.bb1498
    i32 30146, label %sw.bb1511
    i32 20, label %sw.bb1524
    i32 10002, label %sw.bb1537
    i32 3, label %sw.bb1569
    i32 13, label %sw.bb1582
    i32 155, label %sw.bb1596
    i32 78, label %sw.bb1610
    i32 156, label %sw.bb1624
    i32 212, label %sw.bb1638
    i32 10005, label %sw.bb1651
    i32 10173, label %sw.bb1670
    i32 10174, label %sw.bb1686
    i32 10224, label %sw.bb1702
    i32 10220, label %sw.bb1718
    i32 10039, label %sw.bb1734
    i32 10093, label %sw.bb1747
    i32 10028, label %sw.bb1760
    i32 10203, label %sw.bb1773
    i32 20056, label %sw.bb1790
    i32 20219, label %sw.bb1812
    i32 10057, label %sw.bb1835
    i32 10006, label %sw.bb1848
    i32 10175, label %sw.bb1867
    i32 10176, label %sw.bb1883
    i32 10177, label %sw.bb1899
    i32 10007, label %sw.bb1915
    i32 21, label %sw.bb1931
    i32 30116, label %sw.bb1944
    i32 20094, label %sw.bb1958
    i32 10095, label %sw.bb1971
    i32 10037, label %sw.bb1984
    i32 20079, label %sw.bb2004
    i32 20011, label %sw.bb2017
    i32 20012, label %sw.bb2041
    i32 20167, label %sw.bb2065
    i32 10168, label %sw.bb2078
    i32 20142, label %sw.bb2091
    i32 20143, label %sw.bb2104
    i32 20144, label %sw.bb2117
    i32 20130, label %sw.bb2130
    i32 10131, label %sw.bb2143
    i32 10025, label %sw.bb2156
    i32 10254, label %sw.bb2172
    i32 10086, label %sw.bb2188
    i32 10255, label %sw.bb2204
    i32 10087, label %sw.bb2220
    i32 10256, label %sw.bb2236
    i32 10088, label %sw.bb2252
    i32 10257, label %sw.bb2268
    i32 10026, label %sw.bb2284
    i32 10258, label %sw.bb2300
    i32 10089, label %sw.bb2316
    i32 90, label %sw.bb2335
    i32 27, label %sw.bb2336
    i32 10062, label %sw.bb2354
    i32 139, label %sw.bb2370
    i32 140, label %sw.bb2384
    i32 10063, label %sw.bb2398
    i32 210, label %sw.bb2422
    i32 64, label %sw.bb2435
    i32 248, label %sw.bb2453
    i32 81, label %sw.bb2473
    i32 249, label %sw.bb2497
    i32 232, label %sw.bb2522
    i32 20108, label %sw.bb2523
    i32 10109, label %sw.bb2524
    i32 233, label %sw.bb2525
    i32 172, label %sw.bb2526
    i32 10230, label %sw.bb2527
    i32 10263, label %sw.bb2528
    i32 10065, label %sw.bb2529
    i32 10246, label %sw.bb2545
    i32 10097, label %sw.bb2561
    i32 10247, label %sw.bb2562
    i32 10169, label %sw.bb2563
    i32 10260, label %sw.bb2579
    i32 10170, label %sw.bb2595
    i32 10070, label %sw.bb2611
    i32 98, label %sw.bb2624
    i32 99, label %sw.bb2673
    i32 10100, label %sw.bb2691
    i32 10103, label %sw.bb2776
    i32 114, label %sw.bb2789
    i32 129, label %sw.bb2802
    i32 113, label %sw.bb2816
    i32 30117, label %sw.bb2829
    i32 121, label %sw.bb2843
    i32 10134, label %sw.bb2861
    i32 136, label %sw.bb2877
    i32 141, label %sw.bb2895
    i32 10147, label %sw.bb2913
    i32 20148, label %sw.bb2929
    i32 10149, label %sw.bb2942
    i32 20163, label %sw.bb2955
    i32 10164, label %sw.bb2968
    i32 20208, label %sw.bb2981
    i32 10209, label %sw.bb2994
    i32 150, label %sw.bb3007
    i32 157, label %sw.bb3037
    i32 158, label %sw.bb3055
    i32 159, label %sw.bb3073
    i32 160, label %sw.bb3086
    i32 171, label %sw.bb3099
    i32 181, label %sw.bb3113
    i32 182, label %sw.bb3126
    i32 10238, label %sw.bb3139
    i32 10186, label %sw.bb3155
    i32 10217, label %sw.bb3171
    i32 10187, label %sw.bb3187
    i32 218, label %sw.bb3200
    i32 189, label %sw.bb3218
    i32 10190, label %sw.bb3245
    i32 10191, label %sw.bb3261
    i32 10192, label %sw.bb3277
    i32 193, label %sw.bb3293
    i32 194, label %sw.bb3306
    i32 10195, label %sw.bb3320
    i32 20196, label %sw.bb3333
    i32 197, label %sw.bb3346
    i32 20198, label %sw.bb3364
    i32 20199, label %sw.bb3377
    i32 20200, label %sw.bb3390
    i32 10201, label %sw.bb3403
    i32 10202, label %sw.bb3415
    i32 10211, label %sw.bb3428
    i32 10221, label %sw.bb3441
    i32 10222, label %sw.bb3454
    i32 10223, label %sw.bb3467
    i32 213, label %sw.bb3480
    i32 214, label %sw.bb3498
    i32 215, label %sw.bb3511
    i32 244, label %sw.bb3524
    i32 225, label %sw.bb3542
    i32 226, label %sw.bb3560
    i32 234, label %sw.bb3578
    i32 237, label %sw.bb3596
    i32 239, label %sw.bb3614
    i32 10240, label %sw.bb3615
    i32 10241, label %sw.bb3615
    i32 10243, label %sw.bb3616
    i32 265, label %sw.bb3629
  ], !dbg !2912

sw.bb:                                            ; preds = %entry
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2913
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !2913
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !2913
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !2913
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !2913

vaarg.in_reg:                                     ; preds = %sw.bb
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !2915
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !2915
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !2915
  %4 = bitcast i8* %3 to i64*, !dbg !2915
  %5 = add i32 %gp_offset, 8, !dbg !2915
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !2915
  br label %vaarg.end, !dbg !2915

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !2917
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !2917
  %6 = bitcast i8* %overflow_arg_area to i64*, !dbg !2917
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !2917
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !2917
  br label %vaarg.end, !dbg !2917

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i64* [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !2919
  %7 = load i64, i64* %vaarg.addr, align 8, !dbg !2919
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2921
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !2922
  %dns_cache_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 77, !dbg !2923
  store i64 %7, i64* %dns_cache_timeout, align 8, !dbg !2924
  br label %sw.epilog3648, !dbg !2925

sw.bb1:                                           ; preds = %entry
  %9 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2926
  %gp_offset_p2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %9, i32 0, i32 0, !dbg !2926
  %gp_offset3 = load i32, i32* %gp_offset_p2, align 8, !dbg !2926
  %fits_in_gp4 = icmp ule i32 %gp_offset3, 40, !dbg !2926
  br i1 %fits_in_gp4, label %vaarg.in_reg5, label %vaarg.in_mem7, !dbg !2926

vaarg.in_reg5:                                    ; preds = %sw.bb1
  %10 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %9, i32 0, i32 3, !dbg !2927
  %reg_save_area6 = load i8*, i8** %10, align 8, !dbg !2927
  %11 = getelementptr i8, i8* %reg_save_area6, i32 %gp_offset3, !dbg !2927
  %12 = bitcast i8* %11 to i64*, !dbg !2927
  %13 = add i32 %gp_offset3, 8, !dbg !2927
  store i32 %13, i32* %gp_offset_p2, align 8, !dbg !2927
  br label %vaarg.end11, !dbg !2927

vaarg.in_mem7:                                    ; preds = %sw.bb1
  %overflow_arg_area_p8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %9, i32 0, i32 2, !dbg !2928
  %overflow_arg_area9 = load i8*, i8** %overflow_arg_area_p8, align 8, !dbg !2928
  %14 = bitcast i8* %overflow_arg_area9 to i64*, !dbg !2928
  %overflow_arg_area.next10 = getelementptr i8, i8* %overflow_arg_area9, i32 8, !dbg !2928
  store i8* %overflow_arg_area.next10, i8** %overflow_arg_area_p8, align 8, !dbg !2928
  br label %vaarg.end11, !dbg !2928

vaarg.end11:                                      ; preds = %vaarg.in_mem7, %vaarg.in_reg5
  %vaarg.addr12 = phi i64* [ %12, %vaarg.in_reg5 ], [ %14, %vaarg.in_mem7 ], !dbg !2929
  %15 = load i64, i64* %vaarg.addr12, align 8, !dbg !2929
  store i64 %15, i64* %arg, align 8, !dbg !2930
  %16 = load i64, i64* %arg, align 8, !dbg !2931
  %cmp = icmp ne i64 0, %16, !dbg !2932
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !2933
  %tobool = icmp ne i32 %cond, 0, !dbg !2933
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2934
  %set13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !2935
  %global_dns_cache = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set13, i32 0, i32 117, !dbg !2936
  %frombool = zext i1 %tobool to i8, !dbg !2937
  store i8 %frombool, i8* %global_dns_cache, align 1, !dbg !2937
  br label %sw.epilog3648, !dbg !2938

sw.bb14:                                          ; preds = %entry
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2939
  %set15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 13, !dbg !2940
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set15, i32 0, i32 128, !dbg !2941
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 32, !dbg !2939
  %19 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2942
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %19, i32 0, i32 0, !dbg !2942
  %gp_offset17 = load i32, i32* %gp_offset_p16, align 8, !dbg !2942
  %fits_in_gp18 = icmp ule i32 %gp_offset17, 40, !dbg !2942
  br i1 %fits_in_gp18, label %vaarg.in_reg19, label %vaarg.in_mem21, !dbg !2942

vaarg.in_reg19:                                   ; preds = %sw.bb14
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %19, i32 0, i32 3, !dbg !2943
  %reg_save_area20 = load i8*, i8** %20, align 8, !dbg !2943
  %21 = getelementptr i8, i8* %reg_save_area20, i32 %gp_offset17, !dbg !2943
  %22 = bitcast i8* %21 to i8**, !dbg !2943
  %23 = add i32 %gp_offset17, 8, !dbg !2943
  store i32 %23, i32* %gp_offset_p16, align 8, !dbg !2943
  br label %vaarg.end25, !dbg !2943

vaarg.in_mem21:                                   ; preds = %sw.bb14
  %overflow_arg_area_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %19, i32 0, i32 2, !dbg !2944
  %overflow_arg_area23 = load i8*, i8** %overflow_arg_area_p22, align 8, !dbg !2944
  %24 = bitcast i8* %overflow_arg_area23 to i8**, !dbg !2944
  %overflow_arg_area.next24 = getelementptr i8, i8* %overflow_arg_area23, i32 8, !dbg !2944
  store i8* %overflow_arg_area.next24, i8** %overflow_arg_area_p22, align 8, !dbg !2944
  br label %vaarg.end25, !dbg !2944

vaarg.end25:                                      ; preds = %vaarg.in_mem21, %vaarg.in_reg19
  %vaarg.addr26 = phi i8** [ %22, %vaarg.in_reg19 ], [ %24, %vaarg.in_mem21 ], !dbg !2945
  %25 = load i8*, i8** %vaarg.addr26, align 8, !dbg !2945
  %call = call i32 @setstropt(i8** %arrayidx, i8* %25), !dbg !2946
  store i32 %call, i32* %result, align 4, !dbg !2947
  br label %sw.epilog3648, !dbg !2948

sw.bb27:                                          ; preds = %entry
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2949
  %set28 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 13, !dbg !2950
  %str29 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set28, i32 0, i32 128, !dbg !2951
  %arrayidx30 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str29, i64 0, i64 33, !dbg !2949
  %27 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2952
  %gp_offset_p31 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %27, i32 0, i32 0, !dbg !2952
  %gp_offset32 = load i32, i32* %gp_offset_p31, align 8, !dbg !2952
  %fits_in_gp33 = icmp ule i32 %gp_offset32, 40, !dbg !2952
  br i1 %fits_in_gp33, label %vaarg.in_reg34, label %vaarg.in_mem36, !dbg !2952

vaarg.in_reg34:                                   ; preds = %sw.bb27
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %27, i32 0, i32 3, !dbg !2953
  %reg_save_area35 = load i8*, i8** %28, align 8, !dbg !2953
  %29 = getelementptr i8, i8* %reg_save_area35, i32 %gp_offset32, !dbg !2953
  %30 = bitcast i8* %29 to i8**, !dbg !2953
  %31 = add i32 %gp_offset32, 8, !dbg !2953
  store i32 %31, i32* %gp_offset_p31, align 8, !dbg !2953
  br label %vaarg.end40, !dbg !2953

vaarg.in_mem36:                                   ; preds = %sw.bb27
  %overflow_arg_area_p37 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %27, i32 0, i32 2, !dbg !2954
  %overflow_arg_area38 = load i8*, i8** %overflow_arg_area_p37, align 8, !dbg !2954
  %32 = bitcast i8* %overflow_arg_area38 to i8**, !dbg !2954
  %overflow_arg_area.next39 = getelementptr i8, i8* %overflow_arg_area38, i32 8, !dbg !2954
  store i8* %overflow_arg_area.next39, i8** %overflow_arg_area_p37, align 8, !dbg !2954
  br label %vaarg.end40, !dbg !2954

vaarg.end40:                                      ; preds = %vaarg.in_mem36, %vaarg.in_reg34
  %vaarg.addr41 = phi i8** [ %30, %vaarg.in_reg34 ], [ %32, %vaarg.in_mem36 ], !dbg !2955
  %33 = load i8*, i8** %vaarg.addr41, align 8, !dbg !2955
  %call42 = call i32 @setstropt(i8** %arrayidx30, i8* %33), !dbg !2956
  store i32 %call42, i32* %result, align 4, !dbg !2957
  br label %sw.epilog3648, !dbg !2958

sw.bb43:                                          ; preds = %entry
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2959
  %set44 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 13, !dbg !2960
  %str45 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set44, i32 0, i32 128, !dbg !2961
  %arrayidx46 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str45, i64 0, i64 35, !dbg !2959
  %35 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2962
  %gp_offset_p47 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %35, i32 0, i32 0, !dbg !2962
  %gp_offset48 = load i32, i32* %gp_offset_p47, align 8, !dbg !2962
  %fits_in_gp49 = icmp ule i32 %gp_offset48, 40, !dbg !2962
  br i1 %fits_in_gp49, label %vaarg.in_reg50, label %vaarg.in_mem52, !dbg !2962

vaarg.in_reg50:                                   ; preds = %sw.bb43
  %36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %35, i32 0, i32 3, !dbg !2963
  %reg_save_area51 = load i8*, i8** %36, align 8, !dbg !2963
  %37 = getelementptr i8, i8* %reg_save_area51, i32 %gp_offset48, !dbg !2963
  %38 = bitcast i8* %37 to i8**, !dbg !2963
  %39 = add i32 %gp_offset48, 8, !dbg !2963
  store i32 %39, i32* %gp_offset_p47, align 8, !dbg !2963
  br label %vaarg.end56, !dbg !2963

vaarg.in_mem52:                                   ; preds = %sw.bb43
  %overflow_arg_area_p53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %35, i32 0, i32 2, !dbg !2964
  %overflow_arg_area54 = load i8*, i8** %overflow_arg_area_p53, align 8, !dbg !2964
  %40 = bitcast i8* %overflow_arg_area54 to i8**, !dbg !2964
  %overflow_arg_area.next55 = getelementptr i8, i8* %overflow_arg_area54, i32 8, !dbg !2964
  store i8* %overflow_arg_area.next55, i8** %overflow_arg_area_p53, align 8, !dbg !2964
  br label %vaarg.end56, !dbg !2964

vaarg.end56:                                      ; preds = %vaarg.in_mem52, %vaarg.in_reg50
  %vaarg.addr57 = phi i8** [ %38, %vaarg.in_reg50 ], [ %40, %vaarg.in_mem52 ], !dbg !2965
  %41 = load i8*, i8** %vaarg.addr57, align 8, !dbg !2965
  %call58 = call i32 @setstropt(i8** %arrayidx46, i8* %41), !dbg !2966
  store i32 %call58, i32* %result, align 4, !dbg !2967
  br label %sw.epilog3648, !dbg !2968

sw.bb59:                                          ; preds = %entry
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2969
  %set60 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 13, !dbg !2970
  %str61 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set60, i32 0, i32 128, !dbg !2971
  %arrayidx62 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str61, i64 0, i64 34, !dbg !2969
  %43 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2972
  %gp_offset_p63 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %43, i32 0, i32 0, !dbg !2972
  %gp_offset64 = load i32, i32* %gp_offset_p63, align 8, !dbg !2972
  %fits_in_gp65 = icmp ule i32 %gp_offset64, 40, !dbg !2972
  br i1 %fits_in_gp65, label %vaarg.in_reg66, label %vaarg.in_mem68, !dbg !2972

vaarg.in_reg66:                                   ; preds = %sw.bb59
  %44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %43, i32 0, i32 3, !dbg !2973
  %reg_save_area67 = load i8*, i8** %44, align 8, !dbg !2973
  %45 = getelementptr i8, i8* %reg_save_area67, i32 %gp_offset64, !dbg !2973
  %46 = bitcast i8* %45 to i8**, !dbg !2973
  %47 = add i32 %gp_offset64, 8, !dbg !2973
  store i32 %47, i32* %gp_offset_p63, align 8, !dbg !2973
  br label %vaarg.end72, !dbg !2973

vaarg.in_mem68:                                   ; preds = %sw.bb59
  %overflow_arg_area_p69 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %43, i32 0, i32 2, !dbg !2974
  %overflow_arg_area70 = load i8*, i8** %overflow_arg_area_p69, align 8, !dbg !2974
  %48 = bitcast i8* %overflow_arg_area70 to i8**, !dbg !2974
  %overflow_arg_area.next71 = getelementptr i8, i8* %overflow_arg_area70, i32 8, !dbg !2974
  store i8* %overflow_arg_area.next71, i8** %overflow_arg_area_p69, align 8, !dbg !2974
  br label %vaarg.end72, !dbg !2974

vaarg.end72:                                      ; preds = %vaarg.in_mem68, %vaarg.in_reg66
  %vaarg.addr73 = phi i8** [ %46, %vaarg.in_reg66 ], [ %48, %vaarg.in_mem68 ], !dbg !2975
  %49 = load i8*, i8** %vaarg.addr73, align 8, !dbg !2975
  %call74 = call i32 @setstropt(i8** %arrayidx62, i8* %49), !dbg !2976
  store i32 %call74, i32* %result, align 4, !dbg !2977
  br label %sw.epilog3648, !dbg !2978

sw.bb75:                                          ; preds = %entry
  %50 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2979
  %gp_offset_p76 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %50, i32 0, i32 0, !dbg !2979
  %gp_offset77 = load i32, i32* %gp_offset_p76, align 8, !dbg !2979
  %fits_in_gp78 = icmp ule i32 %gp_offset77, 40, !dbg !2979
  br i1 %fits_in_gp78, label %vaarg.in_reg79, label %vaarg.in_mem81, !dbg !2979

vaarg.in_reg79:                                   ; preds = %sw.bb75
  %51 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %50, i32 0, i32 3, !dbg !2980
  %reg_save_area80 = load i8*, i8** %51, align 8, !dbg !2980
  %52 = getelementptr i8, i8* %reg_save_area80, i32 %gp_offset77, !dbg !2980
  %53 = bitcast i8* %52 to i64*, !dbg !2980
  %54 = add i32 %gp_offset77, 8, !dbg !2980
  store i32 %54, i32* %gp_offset_p76, align 8, !dbg !2980
  br label %vaarg.end85, !dbg !2980

vaarg.in_mem81:                                   ; preds = %sw.bb75
  %overflow_arg_area_p82 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %50, i32 0, i32 2, !dbg !2981
  %overflow_arg_area83 = load i8*, i8** %overflow_arg_area_p82, align 8, !dbg !2981
  %55 = bitcast i8* %overflow_arg_area83 to i64*, !dbg !2981
  %overflow_arg_area.next84 = getelementptr i8, i8* %overflow_arg_area83, i32 8, !dbg !2981
  store i8* %overflow_arg_area.next84, i8** %overflow_arg_area_p82, align 8, !dbg !2981
  br label %vaarg.end85, !dbg !2981

vaarg.end85:                                      ; preds = %vaarg.in_mem81, %vaarg.in_reg79
  %vaarg.addr86 = phi i64* [ %53, %vaarg.in_reg79 ], [ %55, %vaarg.in_mem81 ], !dbg !2982
  %56 = load i64, i64* %vaarg.addr86, align 8, !dbg !2982
  %57 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2983
  %set87 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %57, i32 0, i32 13, !dbg !2984
  %maxconnects = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set87, i32 0, i32 146, !dbg !2985
  store i64 %56, i64* %maxconnects, align 8, !dbg !2986
  br label %sw.epilog3648, !dbg !2987

sw.bb88:                                          ; preds = %entry
  %58 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2988
  %gp_offset_p89 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %58, i32 0, i32 0, !dbg !2988
  %gp_offset90 = load i32, i32* %gp_offset_p89, align 8, !dbg !2988
  %fits_in_gp91 = icmp ule i32 %gp_offset90, 40, !dbg !2988
  br i1 %fits_in_gp91, label %vaarg.in_reg92, label %vaarg.in_mem94, !dbg !2988

vaarg.in_reg92:                                   ; preds = %sw.bb88
  %59 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %58, i32 0, i32 3, !dbg !2989
  %reg_save_area93 = load i8*, i8** %59, align 8, !dbg !2989
  %60 = getelementptr i8, i8* %reg_save_area93, i32 %gp_offset90, !dbg !2989
  %61 = bitcast i8* %60 to i64*, !dbg !2989
  %62 = add i32 %gp_offset90, 8, !dbg !2989
  store i32 %62, i32* %gp_offset_p89, align 8, !dbg !2989
  br label %vaarg.end98, !dbg !2989

vaarg.in_mem94:                                   ; preds = %sw.bb88
  %overflow_arg_area_p95 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %58, i32 0, i32 2, !dbg !2990
  %overflow_arg_area96 = load i8*, i8** %overflow_arg_area_p95, align 8, !dbg !2990
  %63 = bitcast i8* %overflow_arg_area96 to i64*, !dbg !2990
  %overflow_arg_area.next97 = getelementptr i8, i8* %overflow_arg_area96, i32 8, !dbg !2990
  store i8* %overflow_arg_area.next97, i8** %overflow_arg_area_p95, align 8, !dbg !2990
  br label %vaarg.end98, !dbg !2990

vaarg.end98:                                      ; preds = %vaarg.in_mem94, %vaarg.in_reg92
  %vaarg.addr99 = phi i64* [ %61, %vaarg.in_reg92 ], [ %63, %vaarg.in_mem94 ], !dbg !2991
  %64 = load i64, i64* %vaarg.addr99, align 8, !dbg !2991
  %cmp100 = icmp ne i64 0, %64, !dbg !2992
  %cond101 = select i1 %cmp100, i32 1, i32 0, !dbg !2993
  %tobool102 = icmp ne i32 %cond101, 0, !dbg !2993
  %65 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2994
  %set103 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %65, i32 0, i32 13, !dbg !2995
  %reuse_forbid = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set103, i32 0, i32 108, !dbg !2996
  %frombool104 = zext i1 %tobool102 to i8, !dbg !2997
  store i8 %frombool104, i8* %reuse_forbid, align 2, !dbg !2997
  br label %sw.epilog3648, !dbg !2998

sw.bb105:                                         ; preds = %entry
  %66 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !2999
  %gp_offset_p106 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %66, i32 0, i32 0, !dbg !2999
  %gp_offset107 = load i32, i32* %gp_offset_p106, align 8, !dbg !2999
  %fits_in_gp108 = icmp ule i32 %gp_offset107, 40, !dbg !2999
  br i1 %fits_in_gp108, label %vaarg.in_reg109, label %vaarg.in_mem111, !dbg !2999

vaarg.in_reg109:                                  ; preds = %sw.bb105
  %67 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %66, i32 0, i32 3, !dbg !3000
  %reg_save_area110 = load i8*, i8** %67, align 8, !dbg !3000
  %68 = getelementptr i8, i8* %reg_save_area110, i32 %gp_offset107, !dbg !3000
  %69 = bitcast i8* %68 to i64*, !dbg !3000
  %70 = add i32 %gp_offset107, 8, !dbg !3000
  store i32 %70, i32* %gp_offset_p106, align 8, !dbg !3000
  br label %vaarg.end115, !dbg !3000

vaarg.in_mem111:                                  ; preds = %sw.bb105
  %overflow_arg_area_p112 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %66, i32 0, i32 2, !dbg !3001
  %overflow_arg_area113 = load i8*, i8** %overflow_arg_area_p112, align 8, !dbg !3001
  %71 = bitcast i8* %overflow_arg_area113 to i64*, !dbg !3001
  %overflow_arg_area.next114 = getelementptr i8, i8* %overflow_arg_area113, i32 8, !dbg !3001
  store i8* %overflow_arg_area.next114, i8** %overflow_arg_area_p112, align 8, !dbg !3001
  br label %vaarg.end115, !dbg !3001

vaarg.end115:                                     ; preds = %vaarg.in_mem111, %vaarg.in_reg109
  %vaarg.addr116 = phi i64* [ %69, %vaarg.in_reg109 ], [ %71, %vaarg.in_mem111 ], !dbg !3002
  %72 = load i64, i64* %vaarg.addr116, align 8, !dbg !3002
  %cmp117 = icmp ne i64 0, %72, !dbg !3003
  %cond118 = select i1 %cmp117, i32 1, i32 0, !dbg !3004
  %tobool119 = icmp ne i32 %cond118, 0, !dbg !3004
  %73 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3005
  %set120 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %73, i32 0, i32 13, !dbg !3006
  %reuse_fresh = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set120, i32 0, i32 109, !dbg !3007
  %frombool121 = zext i1 %tobool119 to i8, !dbg !3008
  store i8 %frombool121, i8* %reuse_fresh, align 1, !dbg !3008
  br label %sw.epilog3648, !dbg !3009

sw.bb122:                                         ; preds = %entry
  %74 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3010
  %gp_offset_p123 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %74, i32 0, i32 0, !dbg !3010
  %gp_offset124 = load i32, i32* %gp_offset_p123, align 8, !dbg !3010
  %fits_in_gp125 = icmp ule i32 %gp_offset124, 40, !dbg !3010
  br i1 %fits_in_gp125, label %vaarg.in_reg126, label %vaarg.in_mem128, !dbg !3010

vaarg.in_reg126:                                  ; preds = %sw.bb122
  %75 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %74, i32 0, i32 3, !dbg !3011
  %reg_save_area127 = load i8*, i8** %75, align 8, !dbg !3011
  %76 = getelementptr i8, i8* %reg_save_area127, i32 %gp_offset124, !dbg !3011
  %77 = bitcast i8* %76 to i64*, !dbg !3011
  %78 = add i32 %gp_offset124, 8, !dbg !3011
  store i32 %78, i32* %gp_offset_p123, align 8, !dbg !3011
  br label %vaarg.end132, !dbg !3011

vaarg.in_mem128:                                  ; preds = %sw.bb122
  %overflow_arg_area_p129 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %74, i32 0, i32 2, !dbg !3012
  %overflow_arg_area130 = load i8*, i8** %overflow_arg_area_p129, align 8, !dbg !3012
  %79 = bitcast i8* %overflow_arg_area130 to i64*, !dbg !3012
  %overflow_arg_area.next131 = getelementptr i8, i8* %overflow_arg_area130, i32 8, !dbg !3012
  store i8* %overflow_arg_area.next131, i8** %overflow_arg_area_p129, align 8, !dbg !3012
  br label %vaarg.end132, !dbg !3012

vaarg.end132:                                     ; preds = %vaarg.in_mem128, %vaarg.in_reg126
  %vaarg.addr133 = phi i64* [ %77, %vaarg.in_reg126 ], [ %79, %vaarg.in_mem128 ], !dbg !3013
  %80 = load i64, i64* %vaarg.addr133, align 8, !dbg !3013
  %cmp134 = icmp ne i64 0, %80, !dbg !3014
  %cond135 = select i1 %cmp134, i32 1, i32 0, !dbg !3015
  %tobool136 = icmp ne i32 %cond135, 0, !dbg !3015
  %81 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3016
  %set137 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %81, i32 0, i32 13, !dbg !3017
  %verbose = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set137, i32 0, i32 106, !dbg !3018
  %frombool138 = zext i1 %tobool136 to i8, !dbg !3019
  store i8 %frombool138, i8* %verbose, align 8, !dbg !3019
  br label %sw.epilog3648, !dbg !3020

sw.bb139:                                         ; preds = %entry
  %82 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3021
  %gp_offset_p140 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %82, i32 0, i32 0, !dbg !3021
  %gp_offset141 = load i32, i32* %gp_offset_p140, align 8, !dbg !3021
  %fits_in_gp142 = icmp ule i32 %gp_offset141, 40, !dbg !3021
  br i1 %fits_in_gp142, label %vaarg.in_reg143, label %vaarg.in_mem145, !dbg !3021

vaarg.in_reg143:                                  ; preds = %sw.bb139
  %83 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %82, i32 0, i32 3, !dbg !3022
  %reg_save_area144 = load i8*, i8** %83, align 8, !dbg !3022
  %84 = getelementptr i8, i8* %reg_save_area144, i32 %gp_offset141, !dbg !3022
  %85 = bitcast i8* %84 to i64*, !dbg !3022
  %86 = add i32 %gp_offset141, 8, !dbg !3022
  store i32 %86, i32* %gp_offset_p140, align 8, !dbg !3022
  br label %vaarg.end149, !dbg !3022

vaarg.in_mem145:                                  ; preds = %sw.bb139
  %overflow_arg_area_p146 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %82, i32 0, i32 2, !dbg !3023
  %overflow_arg_area147 = load i8*, i8** %overflow_arg_area_p146, align 8, !dbg !3023
  %87 = bitcast i8* %overflow_arg_area147 to i64*, !dbg !3023
  %overflow_arg_area.next148 = getelementptr i8, i8* %overflow_arg_area147, i32 8, !dbg !3023
  store i8* %overflow_arg_area.next148, i8** %overflow_arg_area_p146, align 8, !dbg !3023
  br label %vaarg.end149, !dbg !3023

vaarg.end149:                                     ; preds = %vaarg.in_mem145, %vaarg.in_reg143
  %vaarg.addr150 = phi i64* [ %85, %vaarg.in_reg143 ], [ %87, %vaarg.in_mem145 ], !dbg !3024
  %88 = load i64, i64* %vaarg.addr150, align 8, !dbg !3024
  %cmp151 = icmp ne i64 0, %88, !dbg !3025
  %cond152 = select i1 %cmp151, i32 1, i32 0, !dbg !3026
  %tobool153 = icmp ne i32 %cond152, 0, !dbg !3026
  %89 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3027
  %set154 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %89, i32 0, i32 13, !dbg !3028
  %include_header = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set154, i32 0, i32 100, !dbg !3029
  %frombool155 = zext i1 %tobool153 to i8, !dbg !3030
  store i8 %frombool155, i8* %include_header, align 1, !dbg !3030
  br label %sw.epilog3648, !dbg !3031

sw.bb156:                                         ; preds = %entry
  %90 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3032
  %gp_offset_p157 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 0, !dbg !3032
  %gp_offset158 = load i32, i32* %gp_offset_p157, align 8, !dbg !3032
  %fits_in_gp159 = icmp ule i32 %gp_offset158, 40, !dbg !3032
  br i1 %fits_in_gp159, label %vaarg.in_reg160, label %vaarg.in_mem162, !dbg !3032

vaarg.in_reg160:                                  ; preds = %sw.bb156
  %91 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 3, !dbg !3033
  %reg_save_area161 = load i8*, i8** %91, align 8, !dbg !3033
  %92 = getelementptr i8, i8* %reg_save_area161, i32 %gp_offset158, !dbg !3033
  %93 = bitcast i8* %92 to i64*, !dbg !3033
  %94 = add i32 %gp_offset158, 8, !dbg !3033
  store i32 %94, i32* %gp_offset_p157, align 8, !dbg !3033
  br label %vaarg.end166, !dbg !3033

vaarg.in_mem162:                                  ; preds = %sw.bb156
  %overflow_arg_area_p163 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %90, i32 0, i32 2, !dbg !3034
  %overflow_arg_area164 = load i8*, i8** %overflow_arg_area_p163, align 8, !dbg !3034
  %95 = bitcast i8* %overflow_arg_area164 to i64*, !dbg !3034
  %overflow_arg_area.next165 = getelementptr i8, i8* %overflow_arg_area164, i32 8, !dbg !3034
  store i8* %overflow_arg_area.next165, i8** %overflow_arg_area_p163, align 8, !dbg !3034
  br label %vaarg.end166, !dbg !3034

vaarg.end166:                                     ; preds = %vaarg.in_mem162, %vaarg.in_reg160
  %vaarg.addr167 = phi i64* [ %93, %vaarg.in_reg160 ], [ %95, %vaarg.in_mem162 ], !dbg !3035
  %96 = load i64, i64* %vaarg.addr167, align 8, !dbg !3035
  %cmp168 = icmp ne i64 0, %96, !dbg !3036
  %cond169 = select i1 %cmp168, i32 1, i32 0, !dbg !3037
  %tobool170 = icmp ne i32 %cond169, 0, !dbg !3037
  %97 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3038
  %set171 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %97, i32 0, i32 13, !dbg !3039
  %hide_progress = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set171, i32 0, i32 94, !dbg !3040
  %frombool172 = zext i1 %tobool170 to i8, !dbg !3041
  store i8 %frombool172, i8* %hide_progress, align 1, !dbg !3041
  %98 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3042
  %set173 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %98, i32 0, i32 13, !dbg !3044
  %hide_progress174 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set173, i32 0, i32 94, !dbg !3045
  %99 = load i8, i8* %hide_progress174, align 1, !dbg !3045
  %tobool175 = trunc i8 %99 to i1, !dbg !3045
  br i1 %tobool175, label %if.then, label %if.else, !dbg !3046

if.then:                                          ; preds = %vaarg.end166
  %100 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3047
  %progress = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %100, i32 0, i32 16, !dbg !3048
  %flags = getelementptr inbounds %struct.Progress, %struct.Progress* %progress, i32 0, i32 8, !dbg !3049
  %101 = load i32, i32* %flags, align 8, !dbg !3050
  %or = or i32 %101, 16, !dbg !3050
  store i32 %or, i32* %flags, align 8, !dbg !3050
  br label %if.end, !dbg !3047

if.else:                                          ; preds = %vaarg.end166
  %102 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3051
  %progress176 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %102, i32 0, i32 16, !dbg !3052
  %flags177 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress176, i32 0, i32 8, !dbg !3053
  %103 = load i32, i32* %flags177, align 8, !dbg !3054
  %and = and i32 %103, -17, !dbg !3054
  store i32 %and, i32* %flags177, align 8, !dbg !3054
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog3648, !dbg !3055

sw.bb178:                                         ; preds = %entry
  %104 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3056
  %gp_offset_p179 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %104, i32 0, i32 0, !dbg !3056
  %gp_offset180 = load i32, i32* %gp_offset_p179, align 8, !dbg !3056
  %fits_in_gp181 = icmp ule i32 %gp_offset180, 40, !dbg !3056
  br i1 %fits_in_gp181, label %vaarg.in_reg182, label %vaarg.in_mem184, !dbg !3056

vaarg.in_reg182:                                  ; preds = %sw.bb178
  %105 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %104, i32 0, i32 3, !dbg !3057
  %reg_save_area183 = load i8*, i8** %105, align 8, !dbg !3057
  %106 = getelementptr i8, i8* %reg_save_area183, i32 %gp_offset180, !dbg !3057
  %107 = bitcast i8* %106 to i64*, !dbg !3057
  %108 = add i32 %gp_offset180, 8, !dbg !3057
  store i32 %108, i32* %gp_offset_p179, align 8, !dbg !3057
  br label %vaarg.end188, !dbg !3057

vaarg.in_mem184:                                  ; preds = %sw.bb178
  %overflow_arg_area_p185 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %104, i32 0, i32 2, !dbg !3058
  %overflow_arg_area186 = load i8*, i8** %overflow_arg_area_p185, align 8, !dbg !3058
  %109 = bitcast i8* %overflow_arg_area186 to i64*, !dbg !3058
  %overflow_arg_area.next187 = getelementptr i8, i8* %overflow_arg_area186, i32 8, !dbg !3058
  store i8* %overflow_arg_area.next187, i8** %overflow_arg_area_p185, align 8, !dbg !3058
  br label %vaarg.end188, !dbg !3058

vaarg.end188:                                     ; preds = %vaarg.in_mem184, %vaarg.in_reg182
  %vaarg.addr189 = phi i64* [ %107, %vaarg.in_reg182 ], [ %109, %vaarg.in_mem184 ], !dbg !3059
  %110 = load i64, i64* %vaarg.addr189, align 8, !dbg !3059
  %cmp190 = icmp ne i64 0, %110, !dbg !3060
  %cond191 = select i1 %cmp190, i32 1, i32 0, !dbg !3061
  %tobool192 = icmp ne i32 %cond191, 0, !dbg !3061
  %111 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3062
  %set193 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %111, i32 0, i32 13, !dbg !3063
  %opt_no_body = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set193, i32 0, i32 103, !dbg !3064
  %frombool194 = zext i1 %tobool192 to i8, !dbg !3065
  store i8 %frombool194, i8* %opt_no_body, align 8, !dbg !3065
  br label %sw.epilog3648, !dbg !3066

sw.bb195:                                         ; preds = %entry
  %112 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3067
  %gp_offset_p196 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %112, i32 0, i32 0, !dbg !3067
  %gp_offset197 = load i32, i32* %gp_offset_p196, align 8, !dbg !3067
  %fits_in_gp198 = icmp ule i32 %gp_offset197, 40, !dbg !3067
  br i1 %fits_in_gp198, label %vaarg.in_reg199, label %vaarg.in_mem201, !dbg !3067

vaarg.in_reg199:                                  ; preds = %sw.bb195
  %113 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %112, i32 0, i32 3, !dbg !3068
  %reg_save_area200 = load i8*, i8** %113, align 8, !dbg !3068
  %114 = getelementptr i8, i8* %reg_save_area200, i32 %gp_offset197, !dbg !3068
  %115 = bitcast i8* %114 to i64*, !dbg !3068
  %116 = add i32 %gp_offset197, 8, !dbg !3068
  store i32 %116, i32* %gp_offset_p196, align 8, !dbg !3068
  br label %vaarg.end205, !dbg !3068

vaarg.in_mem201:                                  ; preds = %sw.bb195
  %overflow_arg_area_p202 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %112, i32 0, i32 2, !dbg !3069
  %overflow_arg_area203 = load i8*, i8** %overflow_arg_area_p202, align 8, !dbg !3069
  %117 = bitcast i8* %overflow_arg_area203 to i64*, !dbg !3069
  %overflow_arg_area.next204 = getelementptr i8, i8* %overflow_arg_area203, i32 8, !dbg !3069
  store i8* %overflow_arg_area.next204, i8** %overflow_arg_area_p202, align 8, !dbg !3069
  br label %vaarg.end205, !dbg !3069

vaarg.end205:                                     ; preds = %vaarg.in_mem201, %vaarg.in_reg199
  %vaarg.addr206 = phi i64* [ %115, %vaarg.in_reg199 ], [ %117, %vaarg.in_mem201 ], !dbg !3070
  %118 = load i64, i64* %vaarg.addr206, align 8, !dbg !3070
  %cmp207 = icmp ne i64 0, %118, !dbg !3071
  %cond208 = select i1 %cmp207, i32 1, i32 0, !dbg !3072
  %tobool209 = icmp ne i32 %cond208, 0, !dbg !3072
  %119 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3073
  %set210 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %119, i32 0, i32 13, !dbg !3074
  %http_fail_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set210, i32 0, i32 95, !dbg !3075
  %frombool211 = zext i1 %tobool209 to i8, !dbg !3076
  store i8 %frombool211, i8* %http_fail_on_error, align 8, !dbg !3076
  br label %sw.epilog3648, !dbg !3077

sw.bb212:                                         ; preds = %entry
  %120 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3078
  %gp_offset_p213 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %120, i32 0, i32 0, !dbg !3078
  %gp_offset214 = load i32, i32* %gp_offset_p213, align 8, !dbg !3078
  %fits_in_gp215 = icmp ule i32 %gp_offset214, 40, !dbg !3078
  br i1 %fits_in_gp215, label %vaarg.in_reg216, label %vaarg.in_mem218, !dbg !3078

vaarg.in_reg216:                                  ; preds = %sw.bb212
  %121 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %120, i32 0, i32 3, !dbg !3079
  %reg_save_area217 = load i8*, i8** %121, align 8, !dbg !3079
  %122 = getelementptr i8, i8* %reg_save_area217, i32 %gp_offset214, !dbg !3079
  %123 = bitcast i8* %122 to i64*, !dbg !3079
  %124 = add i32 %gp_offset214, 8, !dbg !3079
  store i32 %124, i32* %gp_offset_p213, align 8, !dbg !3079
  br label %vaarg.end222, !dbg !3079

vaarg.in_mem218:                                  ; preds = %sw.bb212
  %overflow_arg_area_p219 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %120, i32 0, i32 2, !dbg !3080
  %overflow_arg_area220 = load i8*, i8** %overflow_arg_area_p219, align 8, !dbg !3080
  %125 = bitcast i8* %overflow_arg_area220 to i64*, !dbg !3080
  %overflow_arg_area.next221 = getelementptr i8, i8* %overflow_arg_area220, i32 8, !dbg !3080
  store i8* %overflow_arg_area.next221, i8** %overflow_arg_area_p219, align 8, !dbg !3080
  br label %vaarg.end222, !dbg !3080

vaarg.end222:                                     ; preds = %vaarg.in_mem218, %vaarg.in_reg216
  %vaarg.addr223 = phi i64* [ %123, %vaarg.in_reg216 ], [ %125, %vaarg.in_mem218 ], !dbg !3081
  %126 = load i64, i64* %vaarg.addr223, align 8, !dbg !3081
  %cmp224 = icmp ne i64 0, %126, !dbg !3082
  %cond225 = select i1 %cmp224, i32 1, i32 0, !dbg !3083
  %tobool226 = icmp ne i32 %cond225, 0, !dbg !3083
  %127 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3084
  %set227 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %127, i32 0, i32 13, !dbg !3085
  %http_keep_sending_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set227, i32 0, i32 96, !dbg !3086
  %frombool228 = zext i1 %tobool226 to i8, !dbg !3087
  store i8 %frombool228, i8* %http_keep_sending_on_error, align 1, !dbg !3087
  br label %sw.epilog3648, !dbg !3088

sw.bb229:                                         ; preds = %entry, %entry
  %128 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3089
  %gp_offset_p230 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !3089
  %gp_offset231 = load i32, i32* %gp_offset_p230, align 8, !dbg !3089
  %fits_in_gp232 = icmp ule i32 %gp_offset231, 40, !dbg !3089
  br i1 %fits_in_gp232, label %vaarg.in_reg233, label %vaarg.in_mem235, !dbg !3089

vaarg.in_reg233:                                  ; preds = %sw.bb229
  %129 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %128, i32 0, i32 3, !dbg !3090
  %reg_save_area234 = load i8*, i8** %129, align 8, !dbg !3090
  %130 = getelementptr i8, i8* %reg_save_area234, i32 %gp_offset231, !dbg !3090
  %131 = bitcast i8* %130 to i64*, !dbg !3090
  %132 = add i32 %gp_offset231, 8, !dbg !3090
  store i32 %132, i32* %gp_offset_p230, align 8, !dbg !3090
  br label %vaarg.end239, !dbg !3090

vaarg.in_mem235:                                  ; preds = %sw.bb229
  %overflow_arg_area_p236 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !3091
  %overflow_arg_area237 = load i8*, i8** %overflow_arg_area_p236, align 8, !dbg !3091
  %133 = bitcast i8* %overflow_arg_area237 to i64*, !dbg !3091
  %overflow_arg_area.next238 = getelementptr i8, i8* %overflow_arg_area237, i32 8, !dbg !3091
  store i8* %overflow_arg_area.next238, i8** %overflow_arg_area_p236, align 8, !dbg !3091
  br label %vaarg.end239, !dbg !3091

vaarg.end239:                                     ; preds = %vaarg.in_mem235, %vaarg.in_reg233
  %vaarg.addr240 = phi i64* [ %131, %vaarg.in_reg233 ], [ %133, %vaarg.in_mem235 ], !dbg !3092
  %134 = load i64, i64* %vaarg.addr240, align 8, !dbg !3092
  %cmp241 = icmp ne i64 0, %134, !dbg !3093
  %cond242 = select i1 %cmp241, i32 1, i32 0, !dbg !3094
  %tobool243 = icmp ne i32 %cond242, 0, !dbg !3094
  %135 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3095
  %set244 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %135, i32 0, i32 13, !dbg !3096
  %upload = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set244, i32 0, i32 104, !dbg !3097
  %frombool245 = zext i1 %tobool243 to i8, !dbg !3098
  store i8 %frombool245, i8* %upload, align 1, !dbg !3098
  %136 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3099
  %set246 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %136, i32 0, i32 13, !dbg !3101
  %upload247 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set246, i32 0, i32 104, !dbg !3102
  %137 = load i8, i8* %upload247, align 1, !dbg !3102
  %tobool248 = trunc i8 %137 to i1, !dbg !3102
  br i1 %tobool248, label %if.then249, label %if.else253, !dbg !3103

if.then249:                                       ; preds = %vaarg.end239
  %138 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3104
  %set250 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %138, i32 0, i32 13, !dbg !3106
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set250, i32 0, i32 71, !dbg !3107
  store i32 4, i32* %httpreq, align 8, !dbg !3108
  %139 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3109
  %set251 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %139, i32 0, i32 13, !dbg !3110
  %opt_no_body252 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set251, i32 0, i32 103, !dbg !3111
  store i8 0, i8* %opt_no_body252, align 8, !dbg !3112
  br label %if.end256, !dbg !3113

if.else253:                                       ; preds = %vaarg.end239
  %140 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3114
  %set254 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %140, i32 0, i32 13, !dbg !3115
  %httpreq255 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set254, i32 0, i32 71, !dbg !3116
  store i32 1, i32* %httpreq255, align 8, !dbg !3117
  br label %if.end256

if.end256:                                        ; preds = %if.else253, %if.then249
  br label %sw.epilog3648, !dbg !3118

sw.bb257:                                         ; preds = %entry
  %141 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3119
  %gp_offset_p258 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %141, i32 0, i32 0, !dbg !3119
  %gp_offset259 = load i32, i32* %gp_offset_p258, align 8, !dbg !3119
  %fits_in_gp260 = icmp ule i32 %gp_offset259, 40, !dbg !3119
  br i1 %fits_in_gp260, label %vaarg.in_reg261, label %vaarg.in_mem263, !dbg !3119

vaarg.in_reg261:                                  ; preds = %sw.bb257
  %142 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %141, i32 0, i32 3, !dbg !3120
  %reg_save_area262 = load i8*, i8** %142, align 8, !dbg !3120
  %143 = getelementptr i8, i8* %reg_save_area262, i32 %gp_offset259, !dbg !3120
  %144 = bitcast i8* %143 to i64*, !dbg !3120
  %145 = add i32 %gp_offset259, 8, !dbg !3120
  store i32 %145, i32* %gp_offset_p258, align 8, !dbg !3120
  br label %vaarg.end267, !dbg !3120

vaarg.in_mem263:                                  ; preds = %sw.bb257
  %overflow_arg_area_p264 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %141, i32 0, i32 2, !dbg !3121
  %overflow_arg_area265 = load i8*, i8** %overflow_arg_area_p264, align 8, !dbg !3121
  %146 = bitcast i8* %overflow_arg_area265 to i64*, !dbg !3121
  %overflow_arg_area.next266 = getelementptr i8, i8* %overflow_arg_area265, i32 8, !dbg !3121
  store i8* %overflow_arg_area.next266, i8** %overflow_arg_area_p264, align 8, !dbg !3121
  br label %vaarg.end267, !dbg !3121

vaarg.end267:                                     ; preds = %vaarg.in_mem263, %vaarg.in_reg261
  %vaarg.addr268 = phi i64* [ %144, %vaarg.in_reg261 ], [ %146, %vaarg.in_mem263 ], !dbg !3122
  %147 = load i64, i64* %vaarg.addr268, align 8, !dbg !3122
  %cmp269 = icmp ne i64 0, %147, !dbg !3123
  %cond270 = select i1 %cmp269, i32 1, i32 0, !dbg !3124
  %tobool271 = icmp ne i32 %cond270, 0, !dbg !3124
  %148 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3125
  %set272 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %148, i32 0, i32 13, !dbg !3126
  %get_filetime = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set272, i32 0, i32 88, !dbg !3127
  %frombool273 = zext i1 %tobool271 to i8, !dbg !3128
  store i8 %frombool273, i8* %get_filetime, align 1, !dbg !3128
  br label %sw.epilog3648, !dbg !3129

sw.bb274:                                         ; preds = %entry
  %149 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3130
  %gp_offset_p275 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %149, i32 0, i32 0, !dbg !3130
  %gp_offset276 = load i32, i32* %gp_offset_p275, align 8, !dbg !3130
  %fits_in_gp277 = icmp ule i32 %gp_offset276, 40, !dbg !3130
  br i1 %fits_in_gp277, label %vaarg.in_reg278, label %vaarg.in_mem280, !dbg !3130

vaarg.in_reg278:                                  ; preds = %sw.bb274
  %150 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %149, i32 0, i32 3, !dbg !3131
  %reg_save_area279 = load i8*, i8** %150, align 8, !dbg !3131
  %151 = getelementptr i8, i8* %reg_save_area279, i32 %gp_offset276, !dbg !3131
  %152 = bitcast i8* %151 to i64*, !dbg !3131
  %153 = add i32 %gp_offset276, 8, !dbg !3131
  store i32 %153, i32* %gp_offset_p275, align 8, !dbg !3131
  br label %vaarg.end284, !dbg !3131

vaarg.in_mem280:                                  ; preds = %sw.bb274
  %overflow_arg_area_p281 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %149, i32 0, i32 2, !dbg !3132
  %overflow_arg_area282 = load i8*, i8** %overflow_arg_area_p281, align 8, !dbg !3132
  %154 = bitcast i8* %overflow_arg_area282 to i64*, !dbg !3132
  %overflow_arg_area.next283 = getelementptr i8, i8* %overflow_arg_area282, i32 8, !dbg !3132
  store i8* %overflow_arg_area.next283, i8** %overflow_arg_area_p281, align 8, !dbg !3132
  br label %vaarg.end284, !dbg !3132

vaarg.end284:                                     ; preds = %vaarg.in_mem280, %vaarg.in_reg278
  %vaarg.addr285 = phi i64* [ %152, %vaarg.in_reg278 ], [ %154, %vaarg.in_mem280 ], !dbg !3133
  %155 = load i64, i64* %vaarg.addr285, align 8, !dbg !3133
  switch i64 %155, label %sw.default [
    i64 0, label %sw.bb286
    i64 1, label %sw.bb288
    i64 2, label %sw.bb291
  ], !dbg !3134

sw.bb286:                                         ; preds = %vaarg.end284
  %156 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3135
  %set287 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %156, i32 0, i32 13, !dbg !3137
  %ftp_create_missing_dirs = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set287, i32 0, i32 84, !dbg !3138
  store i32 0, i32* %ftp_create_missing_dirs, align 4, !dbg !3139
  br label %sw.epilog, !dbg !3140

sw.bb288:                                         ; preds = %vaarg.end284
  %157 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3141
  %set289 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %157, i32 0, i32 13, !dbg !3142
  %ftp_create_missing_dirs290 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set289, i32 0, i32 84, !dbg !3143
  store i32 1, i32* %ftp_create_missing_dirs290, align 4, !dbg !3144
  br label %sw.epilog, !dbg !3145

sw.bb291:                                         ; preds = %vaarg.end284
  %158 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3146
  %set292 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %158, i32 0, i32 13, !dbg !3147
  %ftp_create_missing_dirs293 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set292, i32 0, i32 84, !dbg !3148
  store i32 2, i32* %ftp_create_missing_dirs293, align 4, !dbg !3149
  br label %sw.epilog, !dbg !3150

sw.default:                                       ; preds = %vaarg.end284
  store i32 48, i32* %result, align 4, !dbg !3151
  br label %sw.epilog, !dbg !3152

sw.epilog:                                        ; preds = %sw.default, %sw.bb291, %sw.bb288, %sw.bb286
  br label %sw.epilog3648, !dbg !3153

sw.bb294:                                         ; preds = %entry
  %159 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3154
  %gp_offset_p295 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %159, i32 0, i32 0, !dbg !3154
  %gp_offset296 = load i32, i32* %gp_offset_p295, align 8, !dbg !3154
  %fits_in_gp297 = icmp ule i32 %gp_offset296, 40, !dbg !3154
  br i1 %fits_in_gp297, label %vaarg.in_reg298, label %vaarg.in_mem300, !dbg !3154

vaarg.in_reg298:                                  ; preds = %sw.bb294
  %160 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %159, i32 0, i32 3, !dbg !3155
  %reg_save_area299 = load i8*, i8** %160, align 8, !dbg !3155
  %161 = getelementptr i8, i8* %reg_save_area299, i32 %gp_offset296, !dbg !3155
  %162 = bitcast i8* %161 to i64*, !dbg !3155
  %163 = add i32 %gp_offset296, 8, !dbg !3155
  store i32 %163, i32* %gp_offset_p295, align 8, !dbg !3155
  br label %vaarg.end304, !dbg !3155

vaarg.in_mem300:                                  ; preds = %sw.bb294
  %overflow_arg_area_p301 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %159, i32 0, i32 2, !dbg !3156
  %overflow_arg_area302 = load i8*, i8** %overflow_arg_area_p301, align 8, !dbg !3156
  %164 = bitcast i8* %overflow_arg_area302 to i64*, !dbg !3156
  %overflow_arg_area.next303 = getelementptr i8, i8* %overflow_arg_area302, i32 8, !dbg !3156
  store i8* %overflow_arg_area.next303, i8** %overflow_arg_area_p301, align 8, !dbg !3156
  br label %vaarg.end304, !dbg !3156

vaarg.end304:                                     ; preds = %vaarg.in_mem300, %vaarg.in_reg298
  %vaarg.addr305 = phi i64* [ %162, %vaarg.in_reg298 ], [ %164, %vaarg.in_mem300 ], !dbg !3157
  %165 = load i64, i64* %vaarg.addr305, align 8, !dbg !3157
  %mul = mul nsw i64 %165, 1000, !dbg !3158
  %166 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3159
  %set306 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %166, i32 0, i32 13, !dbg !3160
  %server_response_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set306, i32 0, i32 45, !dbg !3161
  store i64 %mul, i64* %server_response_timeout, align 8, !dbg !3162
  br label %sw.epilog3648, !dbg !3163

sw.bb307:                                         ; preds = %entry
  %167 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3164
  %gp_offset_p308 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %167, i32 0, i32 0, !dbg !3164
  %gp_offset309 = load i32, i32* %gp_offset_p308, align 8, !dbg !3164
  %fits_in_gp310 = icmp ule i32 %gp_offset309, 40, !dbg !3164
  br i1 %fits_in_gp310, label %vaarg.in_reg311, label %vaarg.in_mem313, !dbg !3164

vaarg.in_reg311:                                  ; preds = %sw.bb307
  %168 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %167, i32 0, i32 3, !dbg !3165
  %reg_save_area312 = load i8*, i8** %168, align 8, !dbg !3165
  %169 = getelementptr i8, i8* %reg_save_area312, i32 %gp_offset309, !dbg !3165
  %170 = bitcast i8* %169 to i64*, !dbg !3165
  %171 = add i32 %gp_offset309, 8, !dbg !3165
  store i32 %171, i32* %gp_offset_p308, align 8, !dbg !3165
  br label %vaarg.end317, !dbg !3165

vaarg.in_mem313:                                  ; preds = %sw.bb307
  %overflow_arg_area_p314 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %167, i32 0, i32 2, !dbg !3166
  %overflow_arg_area315 = load i8*, i8** %overflow_arg_area_p314, align 8, !dbg !3166
  %172 = bitcast i8* %overflow_arg_area315 to i64*, !dbg !3166
  %overflow_arg_area.next316 = getelementptr i8, i8* %overflow_arg_area315, i32 8, !dbg !3166
  store i8* %overflow_arg_area.next316, i8** %overflow_arg_area_p314, align 8, !dbg !3166
  br label %vaarg.end317, !dbg !3166

vaarg.end317:                                     ; preds = %vaarg.in_mem313, %vaarg.in_reg311
  %vaarg.addr318 = phi i64* [ %170, %vaarg.in_reg311 ], [ %172, %vaarg.in_mem313 ], !dbg !3167
  %173 = load i64, i64* %vaarg.addr318, align 8, !dbg !3167
  %cmp319 = icmp ne i64 %173, 0, !dbg !3168
  %174 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3169
  %set320 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %174, i32 0, i32 13, !dbg !3170
  %tftp_no_options = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set320, i32 0, i32 47, !dbg !3171
  %frombool321 = zext i1 %cmp319 to i8, !dbg !3172
  store i8 %frombool321, i8* %tftp_no_options, align 8, !dbg !3172
  br label %sw.epilog3648, !dbg !3173

sw.bb322:                                         ; preds = %entry
  %175 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3174
  %gp_offset_p323 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %175, i32 0, i32 0, !dbg !3174
  %gp_offset324 = load i32, i32* %gp_offset_p323, align 8, !dbg !3174
  %fits_in_gp325 = icmp ule i32 %gp_offset324, 40, !dbg !3174
  br i1 %fits_in_gp325, label %vaarg.in_reg326, label %vaarg.in_mem328, !dbg !3174

vaarg.in_reg326:                                  ; preds = %sw.bb322
  %176 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %175, i32 0, i32 3, !dbg !3175
  %reg_save_area327 = load i8*, i8** %176, align 8, !dbg !3175
  %177 = getelementptr i8, i8* %reg_save_area327, i32 %gp_offset324, !dbg !3175
  %178 = bitcast i8* %177 to i64*, !dbg !3175
  %179 = add i32 %gp_offset324, 8, !dbg !3175
  store i32 %179, i32* %gp_offset_p323, align 8, !dbg !3175
  br label %vaarg.end332, !dbg !3175

vaarg.in_mem328:                                  ; preds = %sw.bb322
  %overflow_arg_area_p329 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %175, i32 0, i32 2, !dbg !3176
  %overflow_arg_area330 = load i8*, i8** %overflow_arg_area_p329, align 8, !dbg !3176
  %180 = bitcast i8* %overflow_arg_area330 to i64*, !dbg !3176
  %overflow_arg_area.next331 = getelementptr i8, i8* %overflow_arg_area330, i32 8, !dbg !3176
  store i8* %overflow_arg_area.next331, i8** %overflow_arg_area_p329, align 8, !dbg !3176
  br label %vaarg.end332, !dbg !3176

vaarg.end332:                                     ; preds = %vaarg.in_mem328, %vaarg.in_reg326
  %vaarg.addr333 = phi i64* [ %178, %vaarg.in_reg326 ], [ %180, %vaarg.in_mem328 ], !dbg !3177
  %181 = load i64, i64* %vaarg.addr333, align 8, !dbg !3177
  %182 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3178
  %set334 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %182, i32 0, i32 13, !dbg !3179
  %tftp_blksize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set334, i32 0, i32 46, !dbg !3180
  store i64 %181, i64* %tftp_blksize, align 8, !dbg !3181
  br label %sw.epilog3648, !dbg !3182

sw.bb335:                                         ; preds = %entry
  %183 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3183
  %gp_offset_p336 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 0, !dbg !3183
  %gp_offset337 = load i32, i32* %gp_offset_p336, align 8, !dbg !3183
  %fits_in_gp338 = icmp ule i32 %gp_offset337, 40, !dbg !3183
  br i1 %fits_in_gp338, label %vaarg.in_reg339, label %vaarg.in_mem341, !dbg !3183

vaarg.in_reg339:                                  ; preds = %sw.bb335
  %184 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 3, !dbg !3184
  %reg_save_area340 = load i8*, i8** %184, align 8, !dbg !3184
  %185 = getelementptr i8, i8* %reg_save_area340, i32 %gp_offset337, !dbg !3184
  %186 = bitcast i8* %185 to i64*, !dbg !3184
  %187 = add i32 %gp_offset337, 8, !dbg !3184
  store i32 %187, i32* %gp_offset_p336, align 8, !dbg !3184
  br label %vaarg.end345, !dbg !3184

vaarg.in_mem341:                                  ; preds = %sw.bb335
  %overflow_arg_area_p342 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 2, !dbg !3185
  %overflow_arg_area343 = load i8*, i8** %overflow_arg_area_p342, align 8, !dbg !3185
  %188 = bitcast i8* %overflow_arg_area343 to i64*, !dbg !3185
  %overflow_arg_area.next344 = getelementptr i8, i8* %overflow_arg_area343, i32 8, !dbg !3185
  store i8* %overflow_arg_area.next344, i8** %overflow_arg_area_p342, align 8, !dbg !3185
  br label %vaarg.end345, !dbg !3185

vaarg.end345:                                     ; preds = %vaarg.in_mem341, %vaarg.in_reg339
  %vaarg.addr346 = phi i64* [ %186, %vaarg.in_reg339 ], [ %188, %vaarg.in_mem341 ], !dbg !3186
  %189 = load i64, i64* %vaarg.addr346, align 8, !dbg !3186
  %cmp347 = icmp ne i64 0, %189, !dbg !3187
  %cond348 = select i1 %cmp347, i32 1, i32 0, !dbg !3188
  %tobool349 = icmp ne i32 %cond348, 0, !dbg !3188
  %190 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3189
  %set350 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %190, i32 0, i32 13, !dbg !3190
  %ftp_list_only = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set350, i32 0, i32 92, !dbg !3191
  %frombool351 = zext i1 %tobool349 to i8, !dbg !3192
  store i8 %frombool351, i8* %ftp_list_only, align 1, !dbg !3192
  br label %sw.epilog3648, !dbg !3193

sw.bb352:                                         ; preds = %entry
  %191 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3194
  %gp_offset_p353 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %191, i32 0, i32 0, !dbg !3194
  %gp_offset354 = load i32, i32* %gp_offset_p353, align 8, !dbg !3194
  %fits_in_gp355 = icmp ule i32 %gp_offset354, 40, !dbg !3194
  br i1 %fits_in_gp355, label %vaarg.in_reg356, label %vaarg.in_mem358, !dbg !3194

vaarg.in_reg356:                                  ; preds = %sw.bb352
  %192 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %191, i32 0, i32 3, !dbg !3195
  %reg_save_area357 = load i8*, i8** %192, align 8, !dbg !3195
  %193 = getelementptr i8, i8* %reg_save_area357, i32 %gp_offset354, !dbg !3195
  %194 = bitcast i8* %193 to i64*, !dbg !3195
  %195 = add i32 %gp_offset354, 8, !dbg !3195
  store i32 %195, i32* %gp_offset_p353, align 8, !dbg !3195
  br label %vaarg.end362, !dbg !3195

vaarg.in_mem358:                                  ; preds = %sw.bb352
  %overflow_arg_area_p359 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %191, i32 0, i32 2, !dbg !3196
  %overflow_arg_area360 = load i8*, i8** %overflow_arg_area_p359, align 8, !dbg !3196
  %196 = bitcast i8* %overflow_arg_area360 to i64*, !dbg !3196
  %overflow_arg_area.next361 = getelementptr i8, i8* %overflow_arg_area360, i32 8, !dbg !3196
  store i8* %overflow_arg_area.next361, i8** %overflow_arg_area_p359, align 8, !dbg !3196
  br label %vaarg.end362, !dbg !3196

vaarg.end362:                                     ; preds = %vaarg.in_mem358, %vaarg.in_reg356
  %vaarg.addr363 = phi i64* [ %194, %vaarg.in_reg356 ], [ %196, %vaarg.in_mem358 ], !dbg !3197
  %197 = load i64, i64* %vaarg.addr363, align 8, !dbg !3197
  %cmp364 = icmp ne i64 0, %197, !dbg !3198
  %cond365 = select i1 %cmp364, i32 1, i32 0, !dbg !3199
  %tobool366 = icmp ne i32 %cond365, 0, !dbg !3199
  %198 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3200
  %set367 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %198, i32 0, i32 13, !dbg !3201
  %ftp_append = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set367, i32 0, i32 91, !dbg !3202
  %frombool368 = zext i1 %tobool366 to i8, !dbg !3203
  store i8 %frombool368, i8* %ftp_append, align 4, !dbg !3203
  br label %sw.epilog3648, !dbg !3204

sw.bb369:                                         ; preds = %entry
  %199 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3205
  %gp_offset_p370 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %199, i32 0, i32 0, !dbg !3205
  %gp_offset371 = load i32, i32* %gp_offset_p370, align 8, !dbg !3205
  %fits_in_gp372 = icmp ule i32 %gp_offset371, 40, !dbg !3205
  br i1 %fits_in_gp372, label %vaarg.in_reg373, label %vaarg.in_mem375, !dbg !3205

vaarg.in_reg373:                                  ; preds = %sw.bb369
  %200 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %199, i32 0, i32 3, !dbg !3206
  %reg_save_area374 = load i8*, i8** %200, align 8, !dbg !3206
  %201 = getelementptr i8, i8* %reg_save_area374, i32 %gp_offset371, !dbg !3206
  %202 = bitcast i8* %201 to i64*, !dbg !3206
  %203 = add i32 %gp_offset371, 8, !dbg !3206
  store i32 %203, i32* %gp_offset_p370, align 8, !dbg !3206
  br label %vaarg.end379, !dbg !3206

vaarg.in_mem375:                                  ; preds = %sw.bb369
  %overflow_arg_area_p376 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %199, i32 0, i32 2, !dbg !3207
  %overflow_arg_area377 = load i8*, i8** %overflow_arg_area_p376, align 8, !dbg !3207
  %204 = bitcast i8* %overflow_arg_area377 to i64*, !dbg !3207
  %overflow_arg_area.next378 = getelementptr i8, i8* %overflow_arg_area377, i32 8, !dbg !3207
  store i8* %overflow_arg_area.next378, i8** %overflow_arg_area_p376, align 8, !dbg !3207
  br label %vaarg.end379, !dbg !3207

vaarg.end379:                                     ; preds = %vaarg.in_mem375, %vaarg.in_reg373
  %vaarg.addr380 = phi i64* [ %202, %vaarg.in_reg373 ], [ %204, %vaarg.in_mem375 ], !dbg !3208
  %205 = load i64, i64* %vaarg.addr380, align 8, !dbg !3208
  %conv = trunc i64 %205 to i32, !dbg !3209
  %206 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3210
  %set381 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %206, i32 0, i32 13, !dbg !3211
  %ftp_filemethod = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set381, i32 0, i32 83, !dbg !3212
  store i32 %conv, i32* %ftp_filemethod, align 8, !dbg !3213
  br label %sw.epilog3648, !dbg !3214

sw.bb382:                                         ; preds = %entry
  %207 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3215
  %gp_offset_p383 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %207, i32 0, i32 0, !dbg !3215
  %gp_offset384 = load i32, i32* %gp_offset_p383, align 8, !dbg !3215
  %fits_in_gp385 = icmp ule i32 %gp_offset384, 40, !dbg !3215
  br i1 %fits_in_gp385, label %vaarg.in_reg386, label %vaarg.in_mem388, !dbg !3215

vaarg.in_reg386:                                  ; preds = %sw.bb382
  %208 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %207, i32 0, i32 3, !dbg !3216
  %reg_save_area387 = load i8*, i8** %208, align 8, !dbg !3216
  %209 = getelementptr i8, i8* %reg_save_area387, i32 %gp_offset384, !dbg !3216
  %210 = bitcast i8* %209 to i64*, !dbg !3216
  %211 = add i32 %gp_offset384, 8, !dbg !3216
  store i32 %211, i32* %gp_offset_p383, align 8, !dbg !3216
  br label %vaarg.end392, !dbg !3216

vaarg.in_mem388:                                  ; preds = %sw.bb382
  %overflow_arg_area_p389 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %207, i32 0, i32 2, !dbg !3217
  %overflow_arg_area390 = load i8*, i8** %overflow_arg_area_p389, align 8, !dbg !3217
  %212 = bitcast i8* %overflow_arg_area390 to i64*, !dbg !3217
  %overflow_arg_area.next391 = getelementptr i8, i8* %overflow_arg_area390, i32 8, !dbg !3217
  store i8* %overflow_arg_area.next391, i8** %overflow_arg_area_p389, align 8, !dbg !3217
  br label %vaarg.end392, !dbg !3217

vaarg.end392:                                     ; preds = %vaarg.in_mem388, %vaarg.in_reg386
  %vaarg.addr393 = phi i64* [ %210, %vaarg.in_reg386 ], [ %212, %vaarg.in_mem388 ], !dbg !3218
  %213 = load i64, i64* %vaarg.addr393, align 8, !dbg !3218
  %conv394 = trunc i64 %213 to i32, !dbg !3219
  %214 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3220
  %set395 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %214, i32 0, i32 13, !dbg !3221
  %use_netrc = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set395, i32 0, i32 105, !dbg !3222
  store i32 %conv394, i32* %use_netrc, align 4, !dbg !3223
  br label %sw.epilog3648, !dbg !3224

sw.bb396:                                         ; preds = %entry
  %215 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3225
  %set397 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %215, i32 0, i32 13, !dbg !3226
  %str398 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set397, i32 0, i32 128, !dbg !3227
  %arrayidx399 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str398, i64 0, i64 20, !dbg !3225
  %216 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3228
  %gp_offset_p400 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %216, i32 0, i32 0, !dbg !3228
  %gp_offset401 = load i32, i32* %gp_offset_p400, align 8, !dbg !3228
  %fits_in_gp402 = icmp ule i32 %gp_offset401, 40, !dbg !3228
  br i1 %fits_in_gp402, label %vaarg.in_reg403, label %vaarg.in_mem405, !dbg !3228

vaarg.in_reg403:                                  ; preds = %sw.bb396
  %217 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %216, i32 0, i32 3, !dbg !3229
  %reg_save_area404 = load i8*, i8** %217, align 8, !dbg !3229
  %218 = getelementptr i8, i8* %reg_save_area404, i32 %gp_offset401, !dbg !3229
  %219 = bitcast i8* %218 to i8**, !dbg !3229
  %220 = add i32 %gp_offset401, 8, !dbg !3229
  store i32 %220, i32* %gp_offset_p400, align 8, !dbg !3229
  br label %vaarg.end409, !dbg !3229

vaarg.in_mem405:                                  ; preds = %sw.bb396
  %overflow_arg_area_p406 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %216, i32 0, i32 2, !dbg !3230
  %overflow_arg_area407 = load i8*, i8** %overflow_arg_area_p406, align 8, !dbg !3230
  %221 = bitcast i8* %overflow_arg_area407 to i8**, !dbg !3230
  %overflow_arg_area.next408 = getelementptr i8, i8* %overflow_arg_area407, i32 8, !dbg !3230
  store i8* %overflow_arg_area.next408, i8** %overflow_arg_area_p406, align 8, !dbg !3230
  br label %vaarg.end409, !dbg !3230

vaarg.end409:                                     ; preds = %vaarg.in_mem405, %vaarg.in_reg403
  %vaarg.addr410 = phi i8** [ %219, %vaarg.in_reg403 ], [ %221, %vaarg.in_mem405 ], !dbg !3231
  %222 = load i8*, i8** %vaarg.addr410, align 8, !dbg !3231
  %call411 = call i32 @setstropt(i8** %arrayidx399, i8* %222), !dbg !3232
  store i32 %call411, i32* %result, align 4, !dbg !3233
  br label %sw.epilog3648, !dbg !3234

sw.bb412:                                         ; preds = %entry
  %223 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3235
  %gp_offset_p413 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %223, i32 0, i32 0, !dbg !3235
  %gp_offset414 = load i32, i32* %gp_offset_p413, align 8, !dbg !3235
  %fits_in_gp415 = icmp ule i32 %gp_offset414, 40, !dbg !3235
  br i1 %fits_in_gp415, label %vaarg.in_reg416, label %vaarg.in_mem418, !dbg !3235

vaarg.in_reg416:                                  ; preds = %sw.bb412
  %224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %223, i32 0, i32 3, !dbg !3236
  %reg_save_area417 = load i8*, i8** %224, align 8, !dbg !3236
  %225 = getelementptr i8, i8* %reg_save_area417, i32 %gp_offset414, !dbg !3236
  %226 = bitcast i8* %225 to i64*, !dbg !3236
  %227 = add i32 %gp_offset414, 8, !dbg !3236
  store i32 %227, i32* %gp_offset_p413, align 8, !dbg !3236
  br label %vaarg.end422, !dbg !3236

vaarg.in_mem418:                                  ; preds = %sw.bb412
  %overflow_arg_area_p419 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %223, i32 0, i32 2, !dbg !3237
  %overflow_arg_area420 = load i8*, i8** %overflow_arg_area_p419, align 8, !dbg !3237
  %228 = bitcast i8* %overflow_arg_area420 to i64*, !dbg !3237
  %overflow_arg_area.next421 = getelementptr i8, i8* %overflow_arg_area420, i32 8, !dbg !3237
  store i8* %overflow_arg_area.next421, i8** %overflow_arg_area_p419, align 8, !dbg !3237
  br label %vaarg.end422, !dbg !3237

vaarg.end422:                                     ; preds = %vaarg.in_mem418, %vaarg.in_reg416
  %vaarg.addr423 = phi i64* [ %226, %vaarg.in_reg416 ], [ %228, %vaarg.in_mem418 ], !dbg !3238
  %229 = load i64, i64* %vaarg.addr423, align 8, !dbg !3238
  %cmp424 = icmp ne i64 0, %229, !dbg !3239
  %cond426 = select i1 %cmp424, i32 1, i32 0, !dbg !3240
  %tobool427 = icmp ne i32 %cond426, 0, !dbg !3240
  %230 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3241
  %set428 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %230, i32 0, i32 13, !dbg !3242
  %prefer_ascii = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set428, i32 0, i32 90, !dbg !3243
  %frombool429 = zext i1 %tobool427 to i8, !dbg !3244
  store i8 %frombool429, i8* %prefer_ascii, align 1, !dbg !3244
  br label %sw.epilog3648, !dbg !3245

sw.bb430:                                         ; preds = %entry
  %231 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3246
  %gp_offset_p431 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %231, i32 0, i32 0, !dbg !3246
  %gp_offset432 = load i32, i32* %gp_offset_p431, align 8, !dbg !3246
  %fits_in_gp433 = icmp ule i32 %gp_offset432, 40, !dbg !3246
  br i1 %fits_in_gp433, label %vaarg.in_reg434, label %vaarg.in_mem436, !dbg !3246

vaarg.in_reg434:                                  ; preds = %sw.bb430
  %232 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %231, i32 0, i32 3, !dbg !3247
  %reg_save_area435 = load i8*, i8** %232, align 8, !dbg !3247
  %233 = getelementptr i8, i8* %reg_save_area435, i32 %gp_offset432, !dbg !3247
  %234 = bitcast i8* %233 to i64*, !dbg !3247
  %235 = add i32 %gp_offset432, 8, !dbg !3247
  store i32 %235, i32* %gp_offset_p431, align 8, !dbg !3247
  br label %vaarg.end440, !dbg !3247

vaarg.in_mem436:                                  ; preds = %sw.bb430
  %overflow_arg_area_p437 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %231, i32 0, i32 2, !dbg !3248
  %overflow_arg_area438 = load i8*, i8** %overflow_arg_area_p437, align 8, !dbg !3248
  %236 = bitcast i8* %overflow_arg_area438 to i64*, !dbg !3248
  %overflow_arg_area.next439 = getelementptr i8, i8* %overflow_arg_area438, i32 8, !dbg !3248
  store i8* %overflow_arg_area.next439, i8** %overflow_arg_area_p437, align 8, !dbg !3248
  br label %vaarg.end440, !dbg !3248

vaarg.end440:                                     ; preds = %vaarg.in_mem436, %vaarg.in_reg434
  %vaarg.addr441 = phi i64* [ %234, %vaarg.in_reg434 ], [ %236, %vaarg.in_mem436 ], !dbg !3249
  %237 = load i64, i64* %vaarg.addr441, align 8, !dbg !3249
  %conv442 = trunc i64 %237 to i32, !dbg !3250
  %238 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3251
  %set443 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %238, i32 0, i32 13, !dbg !3252
  %timecondition = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set443, i32 0, i32 69, !dbg !3253
  store i32 %conv442, i32* %timecondition, align 8, !dbg !3254
  br label %sw.epilog3648, !dbg !3255

sw.bb444:                                         ; preds = %entry
  %239 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3256
  %gp_offset_p445 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %239, i32 0, i32 0, !dbg !3256
  %gp_offset446 = load i32, i32* %gp_offset_p445, align 8, !dbg !3256
  %fits_in_gp447 = icmp ule i32 %gp_offset446, 40, !dbg !3256
  br i1 %fits_in_gp447, label %vaarg.in_reg448, label %vaarg.in_mem450, !dbg !3256

vaarg.in_reg448:                                  ; preds = %sw.bb444
  %240 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %239, i32 0, i32 3, !dbg !3257
  %reg_save_area449 = load i8*, i8** %240, align 8, !dbg !3257
  %241 = getelementptr i8, i8* %reg_save_area449, i32 %gp_offset446, !dbg !3257
  %242 = bitcast i8* %241 to i64*, !dbg !3257
  %243 = add i32 %gp_offset446, 8, !dbg !3257
  store i32 %243, i32* %gp_offset_p445, align 8, !dbg !3257
  br label %vaarg.end454, !dbg !3257

vaarg.in_mem450:                                  ; preds = %sw.bb444
  %overflow_arg_area_p451 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %239, i32 0, i32 2, !dbg !3258
  %overflow_arg_area452 = load i8*, i8** %overflow_arg_area_p451, align 8, !dbg !3258
  %244 = bitcast i8* %overflow_arg_area452 to i64*, !dbg !3258
  %overflow_arg_area.next453 = getelementptr i8, i8* %overflow_arg_area452, i32 8, !dbg !3258
  store i8* %overflow_arg_area.next453, i8** %overflow_arg_area_p451, align 8, !dbg !3258
  br label %vaarg.end454, !dbg !3258

vaarg.end454:                                     ; preds = %vaarg.in_mem450, %vaarg.in_reg448
  %vaarg.addr455 = phi i64* [ %242, %vaarg.in_reg448 ], [ %244, %vaarg.in_mem450 ], !dbg !3259
  %245 = load i64, i64* %vaarg.addr455, align 8, !dbg !3259
  %246 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3260
  %set456 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %246, i32 0, i32 13, !dbg !3261
  %timevalue = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set456, i32 0, i32 70, !dbg !3262
  store i64 %245, i64* %timevalue, align 8, !dbg !3263
  br label %sw.epilog3648, !dbg !3264

sw.bb457:                                         ; preds = %entry
  store i32 48, i32* %result, align 4, !dbg !3265
  br label %sw.epilog3648, !dbg !3266

sw.bb458:                                         ; preds = %entry
  store i32 48, i32* %result, align 4, !dbg !3267
  br label %sw.epilog3648, !dbg !3268

sw.bb459:                                         ; preds = %entry
  %247 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3269
  %gp_offset_p460 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %247, i32 0, i32 0, !dbg !3269
  %gp_offset461 = load i32, i32* %gp_offset_p460, align 8, !dbg !3269
  %fits_in_gp462 = icmp ule i32 %gp_offset461, 40, !dbg !3269
  br i1 %fits_in_gp462, label %vaarg.in_reg463, label %vaarg.in_mem465, !dbg !3269

vaarg.in_reg463:                                  ; preds = %sw.bb459
  %248 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %247, i32 0, i32 3, !dbg !3270
  %reg_save_area464 = load i8*, i8** %248, align 8, !dbg !3270
  %249 = getelementptr i8, i8* %reg_save_area464, i32 %gp_offset461, !dbg !3270
  %250 = bitcast i8* %249 to i64*, !dbg !3270
  %251 = add i32 %gp_offset461, 8, !dbg !3270
  store i32 %251, i32* %gp_offset_p460, align 8, !dbg !3270
  br label %vaarg.end469, !dbg !3270

vaarg.in_mem465:                                  ; preds = %sw.bb459
  %overflow_arg_area_p466 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %247, i32 0, i32 2, !dbg !3271
  %overflow_arg_area467 = load i8*, i8** %overflow_arg_area_p466, align 8, !dbg !3271
  %252 = bitcast i8* %overflow_arg_area467 to i64*, !dbg !3271
  %overflow_arg_area.next468 = getelementptr i8, i8* %overflow_arg_area467, i32 8, !dbg !3271
  store i8* %overflow_arg_area.next468, i8** %overflow_arg_area_p466, align 8, !dbg !3271
  br label %vaarg.end469, !dbg !3271

vaarg.end469:                                     ; preds = %vaarg.in_mem465, %vaarg.in_reg463
  %vaarg.addr470 = phi i64* [ %250, %vaarg.in_reg463 ], [ %252, %vaarg.in_mem465 ], !dbg !3272
  %253 = load i64, i64* %vaarg.addr470, align 8, !dbg !3272
  %cmp471 = icmp ne i64 0, %253, !dbg !3273
  %cond473 = select i1 %cmp471, i32 1, i32 0, !dbg !3274
  %tobool474 = icmp ne i32 %cond473, 0, !dbg !3274
  %254 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3275
  %set475 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %254, i32 0, i32 13, !dbg !3276
  %http_auto_referer = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set475, i32 0, i32 102, !dbg !3277
  %frombool476 = zext i1 %tobool474 to i8, !dbg !3278
  store i8 %frombool476, i8* %http_auto_referer, align 1, !dbg !3278
  br label %sw.epilog3648, !dbg !3279

sw.bb477:                                         ; preds = %entry
  %255 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3280
  %gp_offset_p478 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %255, i32 0, i32 0, !dbg !3280
  %gp_offset479 = load i32, i32* %gp_offset_p478, align 8, !dbg !3280
  %fits_in_gp480 = icmp ule i32 %gp_offset479, 40, !dbg !3280
  br i1 %fits_in_gp480, label %vaarg.in_reg481, label %vaarg.in_mem483, !dbg !3280

vaarg.in_reg481:                                  ; preds = %sw.bb477
  %256 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %255, i32 0, i32 3, !dbg !3281
  %reg_save_area482 = load i8*, i8** %256, align 8, !dbg !3281
  %257 = getelementptr i8, i8* %reg_save_area482, i32 %gp_offset479, !dbg !3281
  %258 = bitcast i8* %257 to i8**, !dbg !3281
  %259 = add i32 %gp_offset479, 8, !dbg !3281
  store i32 %259, i32* %gp_offset_p478, align 8, !dbg !3281
  br label %vaarg.end487, !dbg !3281

vaarg.in_mem483:                                  ; preds = %sw.bb477
  %overflow_arg_area_p484 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %255, i32 0, i32 2, !dbg !3282
  %overflow_arg_area485 = load i8*, i8** %overflow_arg_area_p484, align 8, !dbg !3282
  %260 = bitcast i8* %overflow_arg_area485 to i8**, !dbg !3282
  %overflow_arg_area.next486 = getelementptr i8, i8* %overflow_arg_area485, i32 8, !dbg !3282
  store i8* %overflow_arg_area.next486, i8** %overflow_arg_area_p484, align 8, !dbg !3282
  br label %vaarg.end487, !dbg !3282

vaarg.end487:                                     ; preds = %vaarg.in_mem483, %vaarg.in_reg481
  %vaarg.addr488 = phi i8** [ %258, %vaarg.in_reg481 ], [ %260, %vaarg.in_mem483 ], !dbg !3283
  %261 = load i8*, i8** %vaarg.addr488, align 8, !dbg !3283
  store i8* %261, i8** %argptr, align 8, !dbg !3284
  %262 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3285
  %set489 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %262, i32 0, i32 13, !dbg !3286
  %str490 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set489, i32 0, i32 128, !dbg !3287
  %arrayidx491 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str490, i64 0, i64 9, !dbg !3285
  %263 = load i8*, i8** %argptr, align 8, !dbg !3288
  %tobool492 = icmp ne i8* %263, null, !dbg !3288
  br i1 %tobool492, label %land.lhs.true, label %cond.false, !dbg !3289

land.lhs.true:                                    ; preds = %vaarg.end487
  %264 = load i8*, i8** %argptr, align 8, !dbg !3290
  %265 = load i8, i8* %264, align 1, !dbg !3291
  %tobool493 = icmp ne i8 %265, 0, !dbg !3291
  br i1 %tobool493, label %cond.false, label %cond.true, !dbg !3292

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !3293

cond.false:                                       ; preds = %land.lhs.true, %vaarg.end487
  %266 = load i8*, i8** %argptr, align 8, !dbg !3294
  br label %cond.end, !dbg !3295

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond494 = phi i8* [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %cond.true ], [ %266, %cond.false ], !dbg !3296
  %call495 = call i32 @setstropt(i8** %arrayidx491, i8* %cond494), !dbg !3298
  store i32 %call495, i32* %result, align 4, !dbg !3299
  br label %sw.epilog3648, !dbg !3300

sw.bb496:                                         ; preds = %entry
  %267 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3301
  %gp_offset_p497 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %267, i32 0, i32 0, !dbg !3301
  %gp_offset498 = load i32, i32* %gp_offset_p497, align 8, !dbg !3301
  %fits_in_gp499 = icmp ule i32 %gp_offset498, 40, !dbg !3301
  br i1 %fits_in_gp499, label %vaarg.in_reg500, label %vaarg.in_mem502, !dbg !3301

vaarg.in_reg500:                                  ; preds = %sw.bb496
  %268 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %267, i32 0, i32 3, !dbg !3302
  %reg_save_area501 = load i8*, i8** %268, align 8, !dbg !3302
  %269 = getelementptr i8, i8* %reg_save_area501, i32 %gp_offset498, !dbg !3302
  %270 = bitcast i8* %269 to i64*, !dbg !3302
  %271 = add i32 %gp_offset498, 8, !dbg !3302
  store i32 %271, i32* %gp_offset_p497, align 8, !dbg !3302
  br label %vaarg.end506, !dbg !3302

vaarg.in_mem502:                                  ; preds = %sw.bb496
  %overflow_arg_area_p503 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %267, i32 0, i32 2, !dbg !3303
  %overflow_arg_area504 = load i8*, i8** %overflow_arg_area_p503, align 8, !dbg !3303
  %272 = bitcast i8* %overflow_arg_area504 to i64*, !dbg !3303
  %overflow_arg_area.next505 = getelementptr i8, i8* %overflow_arg_area504, i32 8, !dbg !3303
  store i8* %overflow_arg_area.next505, i8** %overflow_arg_area_p503, align 8, !dbg !3303
  br label %vaarg.end506, !dbg !3303

vaarg.end506:                                     ; preds = %vaarg.in_mem502, %vaarg.in_reg500
  %vaarg.addr507 = phi i64* [ %270, %vaarg.in_reg500 ], [ %272, %vaarg.in_mem502 ], !dbg !3304
  %273 = load i64, i64* %vaarg.addr507, align 8, !dbg !3304
  %cmp508 = icmp ne i64 0, %273, !dbg !3305
  %cond510 = select i1 %cmp508, i32 1, i32 0, !dbg !3306
  %tobool511 = icmp ne i32 %cond510, 0, !dbg !3306
  %274 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3307
  %set512 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %274, i32 0, i32 13, !dbg !3308
  %http_transfer_encoding = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set512, i32 0, i32 98, !dbg !3309
  %frombool513 = zext i1 %tobool511 to i8, !dbg !3310
  store i8 %frombool513, i8* %http_transfer_encoding, align 1, !dbg !3310
  br label %sw.epilog3648, !dbg !3311

sw.bb514:                                         ; preds = %entry
  %275 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3312
  %gp_offset_p515 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %275, i32 0, i32 0, !dbg !3312
  %gp_offset516 = load i32, i32* %gp_offset_p515, align 8, !dbg !3312
  %fits_in_gp517 = icmp ule i32 %gp_offset516, 40, !dbg !3312
  br i1 %fits_in_gp517, label %vaarg.in_reg518, label %vaarg.in_mem520, !dbg !3312

vaarg.in_reg518:                                  ; preds = %sw.bb514
  %276 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %275, i32 0, i32 3, !dbg !3313
  %reg_save_area519 = load i8*, i8** %276, align 8, !dbg !3313
  %277 = getelementptr i8, i8* %reg_save_area519, i32 %gp_offset516, !dbg !3313
  %278 = bitcast i8* %277 to i64*, !dbg !3313
  %279 = add i32 %gp_offset516, 8, !dbg !3313
  store i32 %279, i32* %gp_offset_p515, align 8, !dbg !3313
  br label %vaarg.end524, !dbg !3313

vaarg.in_mem520:                                  ; preds = %sw.bb514
  %overflow_arg_area_p521 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %275, i32 0, i32 2, !dbg !3314
  %overflow_arg_area522 = load i8*, i8** %overflow_arg_area_p521, align 8, !dbg !3314
  %280 = bitcast i8* %overflow_arg_area522 to i64*, !dbg !3314
  %overflow_arg_area.next523 = getelementptr i8, i8* %overflow_arg_area522, i32 8, !dbg !3314
  store i8* %overflow_arg_area.next523, i8** %overflow_arg_area_p521, align 8, !dbg !3314
  br label %vaarg.end524, !dbg !3314

vaarg.end524:                                     ; preds = %vaarg.in_mem520, %vaarg.in_reg518
  %vaarg.addr525 = phi i64* [ %278, %vaarg.in_reg518 ], [ %280, %vaarg.in_mem520 ], !dbg !3315
  %281 = load i64, i64* %vaarg.addr525, align 8, !dbg !3315
  %cmp526 = icmp ne i64 0, %281, !dbg !3316
  %cond528 = select i1 %cmp526, i32 1, i32 0, !dbg !3317
  %tobool529 = icmp ne i32 %cond528, 0, !dbg !3317
  %282 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3318
  %set530 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %282, i32 0, i32 13, !dbg !3319
  %http_follow_location = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set530, i32 0, i32 97, !dbg !3320
  %frombool531 = zext i1 %tobool529 to i8, !dbg !3321
  store i8 %frombool531, i8* %http_follow_location, align 2, !dbg !3321
  br label %sw.epilog3648, !dbg !3322

sw.bb532:                                         ; preds = %entry
  %283 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3323
  %gp_offset_p533 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %283, i32 0, i32 0, !dbg !3323
  %gp_offset534 = load i32, i32* %gp_offset_p533, align 8, !dbg !3323
  %fits_in_gp535 = icmp ule i32 %gp_offset534, 40, !dbg !3323
  br i1 %fits_in_gp535, label %vaarg.in_reg536, label %vaarg.in_mem538, !dbg !3323

vaarg.in_reg536:                                  ; preds = %sw.bb532
  %284 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %283, i32 0, i32 3, !dbg !3324
  %reg_save_area537 = load i8*, i8** %284, align 8, !dbg !3324
  %285 = getelementptr i8, i8* %reg_save_area537, i32 %gp_offset534, !dbg !3324
  %286 = bitcast i8* %285 to i64*, !dbg !3324
  %287 = add i32 %gp_offset534, 8, !dbg !3324
  store i32 %287, i32* %gp_offset_p533, align 8, !dbg !3324
  br label %vaarg.end542, !dbg !3324

vaarg.in_mem538:                                  ; preds = %sw.bb532
  %overflow_arg_area_p539 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %283, i32 0, i32 2, !dbg !3325
  %overflow_arg_area540 = load i8*, i8** %overflow_arg_area_p539, align 8, !dbg !3325
  %288 = bitcast i8* %overflow_arg_area540 to i64*, !dbg !3325
  %overflow_arg_area.next541 = getelementptr i8, i8* %overflow_arg_area540, i32 8, !dbg !3325
  store i8* %overflow_arg_area.next541, i8** %overflow_arg_area_p539, align 8, !dbg !3325
  br label %vaarg.end542, !dbg !3325

vaarg.end542:                                     ; preds = %vaarg.in_mem538, %vaarg.in_reg536
  %vaarg.addr543 = phi i64* [ %286, %vaarg.in_reg536 ], [ %288, %vaarg.in_mem538 ], !dbg !3326
  %289 = load i64, i64* %vaarg.addr543, align 8, !dbg !3326
  %cmp544 = icmp ne i64 0, %289, !dbg !3327
  %cond546 = select i1 %cmp544, i32 1, i32 0, !dbg !3328
  %tobool547 = icmp ne i32 %cond546, 0, !dbg !3328
  %290 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3329
  %set548 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %290, i32 0, i32 13, !dbg !3330
  %http_disable_hostname_check_before_authentication = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set548, i32 0, i32 99, !dbg !3331
  %frombool549 = zext i1 %tobool547 to i8, !dbg !3332
  store i8 %frombool549, i8* %http_disable_hostname_check_before_authentication, align 4, !dbg !3332
  br label %sw.epilog3648, !dbg !3333

sw.bb550:                                         ; preds = %entry
  %291 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3334
  %gp_offset_p551 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %291, i32 0, i32 0, !dbg !3334
  %gp_offset552 = load i32, i32* %gp_offset_p551, align 8, !dbg !3334
  %fits_in_gp553 = icmp ule i32 %gp_offset552, 40, !dbg !3334
  br i1 %fits_in_gp553, label %vaarg.in_reg554, label %vaarg.in_mem556, !dbg !3334

vaarg.in_reg554:                                  ; preds = %sw.bb550
  %292 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %291, i32 0, i32 3, !dbg !3335
  %reg_save_area555 = load i8*, i8** %292, align 8, !dbg !3335
  %293 = getelementptr i8, i8* %reg_save_area555, i32 %gp_offset552, !dbg !3335
  %294 = bitcast i8* %293 to i64*, !dbg !3335
  %295 = add i32 %gp_offset552, 8, !dbg !3335
  store i32 %295, i32* %gp_offset_p551, align 8, !dbg !3335
  br label %vaarg.end560, !dbg !3335

vaarg.in_mem556:                                  ; preds = %sw.bb550
  %overflow_arg_area_p557 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %291, i32 0, i32 2, !dbg !3336
  %overflow_arg_area558 = load i8*, i8** %overflow_arg_area_p557, align 8, !dbg !3336
  %296 = bitcast i8* %overflow_arg_area558 to i64*, !dbg !3336
  %overflow_arg_area.next559 = getelementptr i8, i8* %overflow_arg_area558, i32 8, !dbg !3336
  store i8* %overflow_arg_area.next559, i8** %overflow_arg_area_p557, align 8, !dbg !3336
  br label %vaarg.end560, !dbg !3336

vaarg.end560:                                     ; preds = %vaarg.in_mem556, %vaarg.in_reg554
  %vaarg.addr561 = phi i64* [ %294, %vaarg.in_reg554 ], [ %296, %vaarg.in_mem556 ], !dbg !3337
  %297 = load i64, i64* %vaarg.addr561, align 8, !dbg !3337
  %298 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3338
  %set562 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %298, i32 0, i32 13, !dbg !3339
  %maxredirs = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set562, i32 0, i32 12, !dbg !3340
  store i64 %297, i64* %maxredirs, align 8, !dbg !3341
  br label %sw.epilog3648, !dbg !3342

sw.bb563:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %postRedir, metadata !3343, metadata !2256), !dbg !3345
  %299 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3346
  %gp_offset_p564 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %299, i32 0, i32 0, !dbg !3346
  %gp_offset565 = load i32, i32* %gp_offset_p564, align 8, !dbg !3346
  %fits_in_gp566 = icmp ule i32 %gp_offset565, 40, !dbg !3346
  br i1 %fits_in_gp566, label %vaarg.in_reg567, label %vaarg.in_mem569, !dbg !3346

vaarg.in_reg567:                                  ; preds = %sw.bb563
  %300 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %299, i32 0, i32 3, !dbg !3347
  %reg_save_area568 = load i8*, i8** %300, align 8, !dbg !3347
  %301 = getelementptr i8, i8* %reg_save_area568, i32 %gp_offset565, !dbg !3347
  %302 = bitcast i8* %301 to i64*, !dbg !3347
  %303 = add i32 %gp_offset565, 8, !dbg !3347
  store i32 %303, i32* %gp_offset_p564, align 8, !dbg !3347
  br label %vaarg.end573, !dbg !3347

vaarg.in_mem569:                                  ; preds = %sw.bb563
  %overflow_arg_area_p570 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %299, i32 0, i32 2, !dbg !3349
  %overflow_arg_area571 = load i8*, i8** %overflow_arg_area_p570, align 8, !dbg !3349
  %304 = bitcast i8* %overflow_arg_area571 to i64*, !dbg !3349
  %overflow_arg_area.next572 = getelementptr i8, i8* %overflow_arg_area571, i32 8, !dbg !3349
  store i8* %overflow_arg_area.next572, i8** %overflow_arg_area_p570, align 8, !dbg !3349
  br label %vaarg.end573, !dbg !3349

vaarg.end573:                                     ; preds = %vaarg.in_mem569, %vaarg.in_reg567
  %vaarg.addr574 = phi i64* [ %302, %vaarg.in_reg567 ], [ %304, %vaarg.in_mem569 ], !dbg !3351
  %305 = load i64, i64* %vaarg.addr574, align 8, !dbg !3351
  %call575 = call i32 @curlx_sltosi(i64 %305), !dbg !3353
  store i32 %call575, i32* %postRedir, align 4, !dbg !3354
  %306 = load i32, i32* %postRedir, align 4, !dbg !3355
  %and576 = and i32 %306, 7, !dbg !3356
  %307 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3357
  %set577 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %307, i32 0, i32 13, !dbg !3358
  %keep_post = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set577, i32 0, i32 13, !dbg !3359
  store i32 %and576, i32* %keep_post, align 8, !dbg !3360
  br label %sw.epilog3648, !dbg !3361

sw.bb578:                                         ; preds = %entry
  %308 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3362
  %gp_offset_p579 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %308, i32 0, i32 0, !dbg !3362
  %gp_offset580 = load i32, i32* %gp_offset_p579, align 8, !dbg !3362
  %fits_in_gp581 = icmp ule i32 %gp_offset580, 40, !dbg !3362
  br i1 %fits_in_gp581, label %vaarg.in_reg582, label %vaarg.in_mem584, !dbg !3362

vaarg.in_reg582:                                  ; preds = %sw.bb578
  %309 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %308, i32 0, i32 3, !dbg !3364
  %reg_save_area583 = load i8*, i8** %309, align 8, !dbg !3364
  %310 = getelementptr i8, i8* %reg_save_area583, i32 %gp_offset580, !dbg !3364
  %311 = bitcast i8* %310 to i64*, !dbg !3364
  %312 = add i32 %gp_offset580, 8, !dbg !3364
  store i32 %312, i32* %gp_offset_p579, align 8, !dbg !3364
  br label %vaarg.end588, !dbg !3364

vaarg.in_mem584:                                  ; preds = %sw.bb578
  %overflow_arg_area_p585 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %308, i32 0, i32 2, !dbg !3366
  %overflow_arg_area586 = load i8*, i8** %overflow_arg_area_p585, align 8, !dbg !3366
  %313 = bitcast i8* %overflow_arg_area586 to i64*, !dbg !3366
  %overflow_arg_area.next587 = getelementptr i8, i8* %overflow_arg_area586, i32 8, !dbg !3366
  store i8* %overflow_arg_area.next587, i8** %overflow_arg_area_p585, align 8, !dbg !3366
  br label %vaarg.end588, !dbg !3366

vaarg.end588:                                     ; preds = %vaarg.in_mem584, %vaarg.in_reg582
  %vaarg.addr589 = phi i64* [ %311, %vaarg.in_reg582 ], [ %313, %vaarg.in_mem584 ], !dbg !3368
  %314 = load i64, i64* %vaarg.addr589, align 8, !dbg !3368
  %tobool590 = icmp ne i64 %314, 0, !dbg !3368
  br i1 %tobool590, label %if.then591, label %if.else596, !dbg !3368

if.then591:                                       ; preds = %vaarg.end588
  %315 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3370
  %set592 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %315, i32 0, i32 13, !dbg !3372
  %httpreq593 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set592, i32 0, i32 71, !dbg !3373
  store i32 2, i32* %httpreq593, align 8, !dbg !3374
  %316 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3375
  %set594 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %316, i32 0, i32 13, !dbg !3376
  %opt_no_body595 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set594, i32 0, i32 103, !dbg !3377
  store i8 0, i8* %opt_no_body595, align 8, !dbg !3378
  br label %if.end599, !dbg !3379

if.else596:                                       ; preds = %vaarg.end588
  %317 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3380
  %set597 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %317, i32 0, i32 13, !dbg !3381
  %httpreq598 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set597, i32 0, i32 71, !dbg !3382
  store i32 1, i32* %httpreq598, align 8, !dbg !3383
  br label %if.end599

if.end599:                                        ; preds = %if.else596, %if.then591
  br label %sw.epilog3648, !dbg !3384

sw.bb600:                                         ; preds = %entry
  %318 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3385
  %gp_offset_p601 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %318, i32 0, i32 0, !dbg !3385
  %gp_offset602 = load i32, i32* %gp_offset_p601, align 8, !dbg !3385
  %fits_in_gp603 = icmp ule i32 %gp_offset602, 40, !dbg !3385
  br i1 %fits_in_gp603, label %vaarg.in_reg604, label %vaarg.in_mem606, !dbg !3385

vaarg.in_reg604:                                  ; preds = %sw.bb600
  %319 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %318, i32 0, i32 3, !dbg !3386
  %reg_save_area605 = load i8*, i8** %319, align 8, !dbg !3386
  %320 = getelementptr i8, i8* %reg_save_area605, i32 %gp_offset602, !dbg !3386
  %321 = bitcast i8* %320 to i8**, !dbg !3386
  %322 = add i32 %gp_offset602, 8, !dbg !3386
  store i32 %322, i32* %gp_offset_p601, align 8, !dbg !3386
  br label %vaarg.end610, !dbg !3386

vaarg.in_mem606:                                  ; preds = %sw.bb600
  %overflow_arg_area_p607 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %318, i32 0, i32 2, !dbg !3387
  %overflow_arg_area608 = load i8*, i8** %overflow_arg_area_p607, align 8, !dbg !3387
  %323 = bitcast i8* %overflow_arg_area608 to i8**, !dbg !3387
  %overflow_arg_area.next609 = getelementptr i8, i8* %overflow_arg_area608, i32 8, !dbg !3387
  store i8* %overflow_arg_area.next609, i8** %overflow_arg_area_p607, align 8, !dbg !3387
  br label %vaarg.end610, !dbg !3387

vaarg.end610:                                     ; preds = %vaarg.in_mem606, %vaarg.in_reg604
  %vaarg.addr611 = phi i8** [ %321, %vaarg.in_reg604 ], [ %323, %vaarg.in_mem606 ], !dbg !3388
  %324 = load i8*, i8** %vaarg.addr611, align 8, !dbg !3388
  store i8* %324, i8** %argptr, align 8, !dbg !3389
  %325 = load i8*, i8** %argptr, align 8, !dbg !3390
  %tobool612 = icmp ne i8* %325, null, !dbg !3390
  br i1 %tobool612, label %lor.lhs.false, label %if.then616, !dbg !3392

lor.lhs.false:                                    ; preds = %vaarg.end610
  %326 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3393
  %set613 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %326, i32 0, i32 13, !dbg !3395
  %postfieldsize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set613, i32 0, i32 17, !dbg !3396
  %327 = load i64, i64* %postfieldsize, align 8, !dbg !3396
  %cmp614 = icmp eq i64 %327, -1, !dbg !3397
  br i1 %cmp614, label %if.then616, label %if.else621, !dbg !3398

if.then616:                                       ; preds = %lor.lhs.false, %vaarg.end610
  %328 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3399
  %set617 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %328, i32 0, i32 13, !dbg !3400
  %str618 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set617, i32 0, i32 128, !dbg !3401
  %arrayidx619 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str618, i64 0, i64 55, !dbg !3399
  %329 = load i8*, i8** %argptr, align 8, !dbg !3402
  %call620 = call i32 @setstropt(i8** %arrayidx619, i8* %329), !dbg !3403
  store i32 %call620, i32* %result, align 4, !dbg !3404
  br label %if.end657, !dbg !3405

if.else621:                                       ; preds = %lor.lhs.false
  %330 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3406
  %set622 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %330, i32 0, i32 13, !dbg !3409
  %postfieldsize623 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set622, i32 0, i32 17, !dbg !3410
  %331 = load i64, i64* %postfieldsize623, align 8, !dbg !3410
  %cmp624 = icmp slt i64 %331, 0, !dbg !3411
  br i1 %cmp624, label %if.then626, label %if.else627, !dbg !3412

if.then626:                                       ; preds = %if.else621
  store i32 27, i32* %result, align 4, !dbg !3413
  br label %if.end656, !dbg !3414

if.else627:                                       ; preds = %if.else621
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3415, metadata !2256), !dbg !3417
  %332 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3418
  %set628 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %332, i32 0, i32 13, !dbg !3419
  %str629 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set628, i32 0, i32 128, !dbg !3420
  %arrayidx630 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str629, i64 0, i64 55, !dbg !3418
  %call631 = call i32 @setstropt(i8** %arrayidx630, i8* null), !dbg !3421
  %333 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !3422
  %334 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3422
  %set632 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %334, i32 0, i32 13, !dbg !3422
  %postfieldsize633 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set632, i32 0, i32 17, !dbg !3422
  %335 = load i64, i64* %postfieldsize633, align 8, !dbg !3422
  %tobool634 = icmp ne i64 %335, 0, !dbg !3422
  br i1 %tobool634, label %cond.true635, label %cond.false638, !dbg !3422

cond.true635:                                     ; preds = %if.else627
  %336 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3423
  %set636 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %336, i32 0, i32 13, !dbg !3423
  %postfieldsize637 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set636, i32 0, i32 17, !dbg !3423
  %337 = load i64, i64* %postfieldsize637, align 8, !dbg !3423
  br label %cond.end639, !dbg !3423

cond.false638:                                    ; preds = %if.else627
  br label %cond.end639, !dbg !3425

cond.end639:                                      ; preds = %cond.false638, %cond.true635
  %cond640 = phi i64 [ %337, %cond.true635 ], [ 1, %cond.false638 ], !dbg !3427
  %call641 = call i8* %333(i64 %cond640), !dbg !3427
  store i8* %call641, i8** %p, align 8, !dbg !3429
  %338 = load i8*, i8** %p, align 8, !dbg !3430
  %tobool642 = icmp ne i8* %338, null, !dbg !3430
  br i1 %tobool642, label %if.else644, label %if.then643, !dbg !3432

if.then643:                                       ; preds = %cond.end639
  store i32 27, i32* %result, align 4, !dbg !3433
  br label %if.end655, !dbg !3434

if.else644:                                       ; preds = %cond.end639
  %339 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3435
  %set645 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %339, i32 0, i32 13, !dbg !3438
  %postfieldsize646 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set645, i32 0, i32 17, !dbg !3439
  %340 = load i64, i64* %postfieldsize646, align 8, !dbg !3439
  %tobool647 = icmp ne i64 %340, 0, !dbg !3435
  br i1 %tobool647, label %if.then648, label %if.end651, !dbg !3440

if.then648:                                       ; preds = %if.else644
  %341 = load i8*, i8** %p, align 8, !dbg !3441
  %342 = load i8*, i8** %argptr, align 8, !dbg !3442
  %343 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3443
  %set649 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %343, i32 0, i32 13, !dbg !3444
  %postfieldsize650 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set649, i32 0, i32 17, !dbg !3445
  %344 = load i64, i64* %postfieldsize650, align 8, !dbg !3445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %341, i8* %342, i64 %344, i32 1, i1 false), !dbg !3446
  br label %if.end651, !dbg !3446

if.end651:                                        ; preds = %if.then648, %if.else644
  %345 = load i8*, i8** %p, align 8, !dbg !3447
  %346 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3448
  %set652 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %346, i32 0, i32 13, !dbg !3449
  %str653 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set652, i32 0, i32 128, !dbg !3450
  %arrayidx654 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str653, i64 0, i64 55, !dbg !3448
  store i8* %345, i8** %arrayidx654, align 8, !dbg !3451
  br label %if.end655

if.end655:                                        ; preds = %if.end651, %if.then643
  br label %if.end656

if.end656:                                        ; preds = %if.end655, %if.then626
  br label %if.end657

if.end657:                                        ; preds = %if.end656, %if.then616
  %347 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3452
  %set658 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %347, i32 0, i32 13, !dbg !3453
  %str659 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set658, i32 0, i32 128, !dbg !3454
  %arrayidx660 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str659, i64 0, i64 55, !dbg !3452
  %348 = load i8*, i8** %arrayidx660, align 8, !dbg !3452
  %349 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3455
  %set661 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %349, i32 0, i32 13, !dbg !3456
  %postfields = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set661, i32 0, i32 15, !dbg !3457
  store i8* %348, i8** %postfields, align 8, !dbg !3458
  %350 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3459
  %set662 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %350, i32 0, i32 13, !dbg !3460
  %httpreq663 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set662, i32 0, i32 71, !dbg !3461
  store i32 2, i32* %httpreq663, align 8, !dbg !3462
  br label %sw.epilog3648, !dbg !3463

sw.bb664:                                         ; preds = %entry
  %351 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3464
  %gp_offset_p665 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %351, i32 0, i32 0, !dbg !3464
  %gp_offset666 = load i32, i32* %gp_offset_p665, align 8, !dbg !3464
  %fits_in_gp667 = icmp ule i32 %gp_offset666, 40, !dbg !3464
  br i1 %fits_in_gp667, label %vaarg.in_reg668, label %vaarg.in_mem670, !dbg !3464

vaarg.in_reg668:                                  ; preds = %sw.bb664
  %352 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %351, i32 0, i32 3, !dbg !3465
  %reg_save_area669 = load i8*, i8** %352, align 8, !dbg !3465
  %353 = getelementptr i8, i8* %reg_save_area669, i32 %gp_offset666, !dbg !3465
  %354 = bitcast i8* %353 to i8**, !dbg !3465
  %355 = add i32 %gp_offset666, 8, !dbg !3465
  store i32 %355, i32* %gp_offset_p665, align 8, !dbg !3465
  br label %vaarg.end674, !dbg !3465

vaarg.in_mem670:                                  ; preds = %sw.bb664
  %overflow_arg_area_p671 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %351, i32 0, i32 2, !dbg !3466
  %overflow_arg_area672 = load i8*, i8** %overflow_arg_area_p671, align 8, !dbg !3466
  %356 = bitcast i8* %overflow_arg_area672 to i8**, !dbg !3466
  %overflow_arg_area.next673 = getelementptr i8, i8* %overflow_arg_area672, i32 8, !dbg !3466
  store i8* %overflow_arg_area.next673, i8** %overflow_arg_area_p671, align 8, !dbg !3466
  br label %vaarg.end674, !dbg !3466

vaarg.end674:                                     ; preds = %vaarg.in_mem670, %vaarg.in_reg668
  %vaarg.addr675 = phi i8** [ %354, %vaarg.in_reg668 ], [ %356, %vaarg.in_mem670 ], !dbg !3467
  %357 = load i8*, i8** %vaarg.addr675, align 8, !dbg !3467
  %358 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3468
  %set676 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %358, i32 0, i32 13, !dbg !3469
  %postfields677 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set676, i32 0, i32 15, !dbg !3470
  store i8* %357, i8** %postfields677, align 8, !dbg !3471
  %359 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3472
  %set678 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %359, i32 0, i32 13, !dbg !3473
  %str679 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set678, i32 0, i32 128, !dbg !3474
  %arrayidx680 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str679, i64 0, i64 55, !dbg !3472
  %call681 = call i32 @setstropt(i8** %arrayidx680, i8* null), !dbg !3475
  %360 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3476
  %set682 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %360, i32 0, i32 13, !dbg !3477
  %httpreq683 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set682, i32 0, i32 71, !dbg !3478
  store i32 2, i32* %httpreq683, align 8, !dbg !3479
  br label %sw.epilog3648, !dbg !3480

sw.bb684:                                         ; preds = %entry
  %361 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3481
  %gp_offset_p685 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %361, i32 0, i32 0, !dbg !3481
  %gp_offset686 = load i32, i32* %gp_offset_p685, align 8, !dbg !3481
  %fits_in_gp687 = icmp ule i32 %gp_offset686, 40, !dbg !3481
  br i1 %fits_in_gp687, label %vaarg.in_reg688, label %vaarg.in_mem690, !dbg !3481

vaarg.in_reg688:                                  ; preds = %sw.bb684
  %362 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %361, i32 0, i32 3, !dbg !3482
  %reg_save_area689 = load i8*, i8** %362, align 8, !dbg !3482
  %363 = getelementptr i8, i8* %reg_save_area689, i32 %gp_offset686, !dbg !3482
  %364 = bitcast i8* %363 to i64*, !dbg !3482
  %365 = add i32 %gp_offset686, 8, !dbg !3482
  store i32 %365, i32* %gp_offset_p685, align 8, !dbg !3482
  br label %vaarg.end694, !dbg !3482

vaarg.in_mem690:                                  ; preds = %sw.bb684
  %overflow_arg_area_p691 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %361, i32 0, i32 2, !dbg !3483
  %overflow_arg_area692 = load i8*, i8** %overflow_arg_area_p691, align 8, !dbg !3483
  %366 = bitcast i8* %overflow_arg_area692 to i64*, !dbg !3483
  %overflow_arg_area.next693 = getelementptr i8, i8* %overflow_arg_area692, i32 8, !dbg !3483
  store i8* %overflow_arg_area.next693, i8** %overflow_arg_area_p691, align 8, !dbg !3483
  br label %vaarg.end694, !dbg !3483

vaarg.end694:                                     ; preds = %vaarg.in_mem690, %vaarg.in_reg688
  %vaarg.addr695 = phi i64* [ %364, %vaarg.in_reg688 ], [ %366, %vaarg.in_mem690 ], !dbg !3484
  %367 = load i64, i64* %vaarg.addr695, align 8, !dbg !3484
  store i64 %367, i64* %bigsize, align 8, !dbg !3485
  %368 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3486
  %set696 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %368, i32 0, i32 13, !dbg !3488
  %postfieldsize697 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set696, i32 0, i32 17, !dbg !3489
  %369 = load i64, i64* %postfieldsize697, align 8, !dbg !3489
  %370 = load i64, i64* %bigsize, align 8, !dbg !3490
  %cmp698 = icmp slt i64 %369, %370, !dbg !3491
  br i1 %cmp698, label %land.lhs.true700, label %if.end715, !dbg !3492

land.lhs.true700:                                 ; preds = %vaarg.end694
  %371 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3493
  %set701 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %371, i32 0, i32 13, !dbg !3494
  %postfields702 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set701, i32 0, i32 15, !dbg !3495
  %372 = load i8*, i8** %postfields702, align 8, !dbg !3495
  %373 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3496
  %set703 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %373, i32 0, i32 13, !dbg !3497
  %str704 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set703, i32 0, i32 128, !dbg !3498
  %arrayidx705 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str704, i64 0, i64 55, !dbg !3496
  %374 = load i8*, i8** %arrayidx705, align 8, !dbg !3496
  %cmp706 = icmp eq i8* %372, %374, !dbg !3499
  br i1 %cmp706, label %if.then708, label %if.end715, !dbg !3500

if.then708:                                       ; preds = %land.lhs.true700
  %375 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3501
  %set709 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %375, i32 0, i32 13, !dbg !3503
  %str710 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set709, i32 0, i32 128, !dbg !3504
  %arrayidx711 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str710, i64 0, i64 55, !dbg !3501
  %call712 = call i32 @setstropt(i8** %arrayidx711, i8* null), !dbg !3505
  %376 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3506
  %set713 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %376, i32 0, i32 13, !dbg !3507
  %postfields714 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set713, i32 0, i32 15, !dbg !3508
  store i8* null, i8** %postfields714, align 8, !dbg !3509
  br label %if.end715, !dbg !3510

if.end715:                                        ; preds = %if.then708, %land.lhs.true700, %vaarg.end694
  %377 = load i64, i64* %bigsize, align 8, !dbg !3511
  %378 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3512
  %set716 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %378, i32 0, i32 13, !dbg !3513
  %postfieldsize717 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set716, i32 0, i32 17, !dbg !3514
  store i64 %377, i64* %postfieldsize717, align 8, !dbg !3515
  br label %sw.epilog3648, !dbg !3516

sw.bb718:                                         ; preds = %entry
  %379 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3517
  %gp_offset_p719 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %379, i32 0, i32 0, !dbg !3517
  %gp_offset720 = load i32, i32* %gp_offset_p719, align 8, !dbg !3517
  %fits_in_gp721 = icmp ule i32 %gp_offset720, 40, !dbg !3517
  br i1 %fits_in_gp721, label %vaarg.in_reg722, label %vaarg.in_mem724, !dbg !3517

vaarg.in_reg722:                                  ; preds = %sw.bb718
  %380 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %379, i32 0, i32 3, !dbg !3518
  %reg_save_area723 = load i8*, i8** %380, align 8, !dbg !3518
  %381 = getelementptr i8, i8* %reg_save_area723, i32 %gp_offset720, !dbg !3518
  %382 = bitcast i8* %381 to i64*, !dbg !3518
  %383 = add i32 %gp_offset720, 8, !dbg !3518
  store i32 %383, i32* %gp_offset_p719, align 8, !dbg !3518
  br label %vaarg.end728, !dbg !3518

vaarg.in_mem724:                                  ; preds = %sw.bb718
  %overflow_arg_area_p725 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %379, i32 0, i32 2, !dbg !3519
  %overflow_arg_area726 = load i8*, i8** %overflow_arg_area_p725, align 8, !dbg !3519
  %384 = bitcast i8* %overflow_arg_area726 to i64*, !dbg !3519
  %overflow_arg_area.next727 = getelementptr i8, i8* %overflow_arg_area726, i32 8, !dbg !3519
  store i8* %overflow_arg_area.next727, i8** %overflow_arg_area_p725, align 8, !dbg !3519
  br label %vaarg.end728, !dbg !3519

vaarg.end728:                                     ; preds = %vaarg.in_mem724, %vaarg.in_reg722
  %vaarg.addr729 = phi i64* [ %382, %vaarg.in_reg722 ], [ %384, %vaarg.in_mem724 ], !dbg !3520
  %385 = load i64, i64* %vaarg.addr729, align 8, !dbg !3520
  store i64 %385, i64* %bigsize, align 8, !dbg !3521
  %386 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3522
  %set730 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %386, i32 0, i32 13, !dbg !3524
  %postfieldsize731 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set730, i32 0, i32 17, !dbg !3525
  %387 = load i64, i64* %postfieldsize731, align 8, !dbg !3525
  %388 = load i64, i64* %bigsize, align 8, !dbg !3526
  %cmp732 = icmp slt i64 %387, %388, !dbg !3527
  br i1 %cmp732, label %land.lhs.true734, label %if.end749, !dbg !3528

land.lhs.true734:                                 ; preds = %vaarg.end728
  %389 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3529
  %set735 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %389, i32 0, i32 13, !dbg !3530
  %postfields736 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set735, i32 0, i32 15, !dbg !3531
  %390 = load i8*, i8** %postfields736, align 8, !dbg !3531
  %391 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3532
  %set737 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %391, i32 0, i32 13, !dbg !3533
  %str738 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set737, i32 0, i32 128, !dbg !3534
  %arrayidx739 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str738, i64 0, i64 55, !dbg !3532
  %392 = load i8*, i8** %arrayidx739, align 8, !dbg !3532
  %cmp740 = icmp eq i8* %390, %392, !dbg !3535
  br i1 %cmp740, label %if.then742, label %if.end749, !dbg !3536

if.then742:                                       ; preds = %land.lhs.true734
  %393 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3537
  %set743 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %393, i32 0, i32 13, !dbg !3539
  %str744 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set743, i32 0, i32 128, !dbg !3540
  %arrayidx745 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str744, i64 0, i64 55, !dbg !3537
  %call746 = call i32 @setstropt(i8** %arrayidx745, i8* null), !dbg !3541
  %394 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3542
  %set747 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %394, i32 0, i32 13, !dbg !3543
  %postfields748 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set747, i32 0, i32 15, !dbg !3544
  store i8* null, i8** %postfields748, align 8, !dbg !3545
  br label %if.end749, !dbg !3546

if.end749:                                        ; preds = %if.then742, %land.lhs.true734, %vaarg.end728
  %395 = load i64, i64* %bigsize, align 8, !dbg !3547
  %396 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3548
  %set750 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %396, i32 0, i32 13, !dbg !3549
  %postfieldsize751 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set750, i32 0, i32 17, !dbg !3550
  store i64 %395, i64* %postfieldsize751, align 8, !dbg !3551
  br label %sw.epilog3648, !dbg !3552

sw.bb752:                                         ; preds = %entry
  %397 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3553
  %gp_offset_p753 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %397, i32 0, i32 0, !dbg !3553
  %gp_offset754 = load i32, i32* %gp_offset_p753, align 8, !dbg !3553
  %fits_in_gp755 = icmp ule i32 %gp_offset754, 40, !dbg !3553
  br i1 %fits_in_gp755, label %vaarg.in_reg756, label %vaarg.in_mem758, !dbg !3553

vaarg.in_reg756:                                  ; preds = %sw.bb752
  %398 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %397, i32 0, i32 3, !dbg !3554
  %reg_save_area757 = load i8*, i8** %398, align 8, !dbg !3554
  %399 = getelementptr i8, i8* %reg_save_area757, i32 %gp_offset754, !dbg !3554
  %400 = bitcast i8* %399 to %struct.curl_httppost**, !dbg !3554
  %401 = add i32 %gp_offset754, 8, !dbg !3554
  store i32 %401, i32* %gp_offset_p753, align 8, !dbg !3554
  br label %vaarg.end762, !dbg !3554

vaarg.in_mem758:                                  ; preds = %sw.bb752
  %overflow_arg_area_p759 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %397, i32 0, i32 2, !dbg !3555
  %overflow_arg_area760 = load i8*, i8** %overflow_arg_area_p759, align 8, !dbg !3555
  %402 = bitcast i8* %overflow_arg_area760 to %struct.curl_httppost**, !dbg !3555
  %overflow_arg_area.next761 = getelementptr i8, i8* %overflow_arg_area760, i32 8, !dbg !3555
  store i8* %overflow_arg_area.next761, i8** %overflow_arg_area_p759, align 8, !dbg !3555
  br label %vaarg.end762, !dbg !3555

vaarg.end762:                                     ; preds = %vaarg.in_mem758, %vaarg.in_reg756
  %vaarg.addr763 = phi %struct.curl_httppost** [ %400, %vaarg.in_reg756 ], [ %402, %vaarg.in_mem758 ], !dbg !3556
  %403 = load %struct.curl_httppost*, %struct.curl_httppost** %vaarg.addr763, align 8, !dbg !3556
  %404 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3557
  %set764 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %404, i32 0, i32 13, !dbg !3558
  %httppost = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set764, i32 0, i32 56, !dbg !3559
  store %struct.curl_httppost* %403, %struct.curl_httppost** %httppost, align 8, !dbg !3560
  %405 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3561
  %set765 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %405, i32 0, i32 13, !dbg !3562
  %httpreq766 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set765, i32 0, i32 71, !dbg !3563
  store i32 3, i32* %httpreq766, align 8, !dbg !3564
  %406 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3565
  %set767 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %406, i32 0, i32 13, !dbg !3566
  %opt_no_body768 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set767, i32 0, i32 103, !dbg !3567
  store i8 0, i8* %opt_no_body768, align 8, !dbg !3568
  br label %sw.epilog3648, !dbg !3569

sw.bb769:                                         ; preds = %entry
  %407 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3570
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %407, i32 0, i32 14, !dbg !3572
  %referer_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 3, !dbg !3573
  %408 = load i8, i8* %referer_alloc, align 8, !dbg !3573
  %tobool770 = trunc i8 %408 to i1, !dbg !3573
  br i1 %tobool770, label %if.then771, label %if.end777, !dbg !3574

if.then771:                                       ; preds = %sw.bb769
  br label %do.body, !dbg !3575

do.body:                                          ; preds = %if.then771
  %409 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3577
  %410 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3577
  %change772 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %410, i32 0, i32 14, !dbg !3577
  %referer = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change772, i32 0, i32 2, !dbg !3577
  %411 = load i8*, i8** %referer, align 8, !dbg !3577
  call void %409(i8* %411), !dbg !3577
  %412 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3577
  %change773 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %412, i32 0, i32 14, !dbg !3577
  %referer774 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change773, i32 0, i32 2, !dbg !3577
  store i8* null, i8** %referer774, align 8, !dbg !3577
  br label %do.end, !dbg !3577

do.end:                                           ; preds = %do.body
  %413 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3580
  %change775 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %413, i32 0, i32 14, !dbg !3581
  %referer_alloc776 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change775, i32 0, i32 3, !dbg !3582
  store i8 0, i8* %referer_alloc776, align 8, !dbg !3583
  br label %if.end777, !dbg !3584

if.end777:                                        ; preds = %do.end, %sw.bb769
  %414 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3585
  %set778 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %414, i32 0, i32 13, !dbg !3586
  %str779 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set778, i32 0, i32 128, !dbg !3587
  %arrayidx780 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str779, i64 0, i64 24, !dbg !3585
  %415 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3588
  %gp_offset_p781 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %415, i32 0, i32 0, !dbg !3588
  %gp_offset782 = load i32, i32* %gp_offset_p781, align 8, !dbg !3588
  %fits_in_gp783 = icmp ule i32 %gp_offset782, 40, !dbg !3588
  br i1 %fits_in_gp783, label %vaarg.in_reg784, label %vaarg.in_mem786, !dbg !3588

vaarg.in_reg784:                                  ; preds = %if.end777
  %416 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %415, i32 0, i32 3, !dbg !3589
  %reg_save_area785 = load i8*, i8** %416, align 8, !dbg !3589
  %417 = getelementptr i8, i8* %reg_save_area785, i32 %gp_offset782, !dbg !3589
  %418 = bitcast i8* %417 to i8**, !dbg !3589
  %419 = add i32 %gp_offset782, 8, !dbg !3589
  store i32 %419, i32* %gp_offset_p781, align 8, !dbg !3589
  br label %vaarg.end790, !dbg !3589

vaarg.in_mem786:                                  ; preds = %if.end777
  %overflow_arg_area_p787 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %415, i32 0, i32 2, !dbg !3590
  %overflow_arg_area788 = load i8*, i8** %overflow_arg_area_p787, align 8, !dbg !3590
  %420 = bitcast i8* %overflow_arg_area788 to i8**, !dbg !3590
  %overflow_arg_area.next789 = getelementptr i8, i8* %overflow_arg_area788, i32 8, !dbg !3590
  store i8* %overflow_arg_area.next789, i8** %overflow_arg_area_p787, align 8, !dbg !3590
  br label %vaarg.end790, !dbg !3590

vaarg.end790:                                     ; preds = %vaarg.in_mem786, %vaarg.in_reg784
  %vaarg.addr791 = phi i8** [ %418, %vaarg.in_reg784 ], [ %420, %vaarg.in_mem786 ], !dbg !3591
  %421 = load i8*, i8** %vaarg.addr791, align 8, !dbg !3591
  %call792 = call i32 @setstropt(i8** %arrayidx780, i8* %421), !dbg !3592
  store i32 %call792, i32* %result, align 4, !dbg !3593
  %422 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3594
  %set793 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %422, i32 0, i32 13, !dbg !3595
  %str794 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set793, i32 0, i32 128, !dbg !3596
  %arrayidx795 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str794, i64 0, i64 24, !dbg !3594
  %423 = load i8*, i8** %arrayidx795, align 8, !dbg !3594
  %424 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3597
  %change796 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %424, i32 0, i32 14, !dbg !3598
  %referer797 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change796, i32 0, i32 2, !dbg !3599
  store i8* %423, i8** %referer797, align 8, !dbg !3600
  br label %sw.epilog3648, !dbg !3601

sw.bb798:                                         ; preds = %entry
  %425 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3602
  %set799 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %425, i32 0, i32 13, !dbg !3603
  %str800 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set799, i32 0, i32 128, !dbg !3604
  %arrayidx801 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str800, i64 0, i64 36, !dbg !3602
  %426 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3605
  %gp_offset_p802 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %426, i32 0, i32 0, !dbg !3605
  %gp_offset803 = load i32, i32* %gp_offset_p802, align 8, !dbg !3605
  %fits_in_gp804 = icmp ule i32 %gp_offset803, 40, !dbg !3605
  br i1 %fits_in_gp804, label %vaarg.in_reg805, label %vaarg.in_mem807, !dbg !3605

vaarg.in_reg805:                                  ; preds = %sw.bb798
  %427 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %426, i32 0, i32 3, !dbg !3606
  %reg_save_area806 = load i8*, i8** %427, align 8, !dbg !3606
  %428 = getelementptr i8, i8* %reg_save_area806, i32 %gp_offset803, !dbg !3606
  %429 = bitcast i8* %428 to i8**, !dbg !3606
  %430 = add i32 %gp_offset803, 8, !dbg !3606
  store i32 %430, i32* %gp_offset_p802, align 8, !dbg !3606
  br label %vaarg.end811, !dbg !3606

vaarg.in_mem807:                                  ; preds = %sw.bb798
  %overflow_arg_area_p808 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %426, i32 0, i32 2, !dbg !3607
  %overflow_arg_area809 = load i8*, i8** %overflow_arg_area_p808, align 8, !dbg !3607
  %431 = bitcast i8* %overflow_arg_area809 to i8**, !dbg !3607
  %overflow_arg_area.next810 = getelementptr i8, i8* %overflow_arg_area809, i32 8, !dbg !3607
  store i8* %overflow_arg_area.next810, i8** %overflow_arg_area_p808, align 8, !dbg !3607
  br label %vaarg.end811, !dbg !3607

vaarg.end811:                                     ; preds = %vaarg.in_mem807, %vaarg.in_reg805
  %vaarg.addr812 = phi i8** [ %429, %vaarg.in_reg805 ], [ %431, %vaarg.in_mem807 ], !dbg !3608
  %432 = load i8*, i8** %vaarg.addr812, align 8, !dbg !3608
  %call813 = call i32 @setstropt(i8** %arrayidx801, i8* %432), !dbg !3609
  store i32 %call813, i32* %result, align 4, !dbg !3610
  br label %sw.epilog3648, !dbg !3611

sw.bb814:                                         ; preds = %entry
  %433 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3612
  %gp_offset_p815 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %433, i32 0, i32 0, !dbg !3612
  %gp_offset816 = load i32, i32* %gp_offset_p815, align 8, !dbg !3612
  %fits_in_gp817 = icmp ule i32 %gp_offset816, 40, !dbg !3612
  br i1 %fits_in_gp817, label %vaarg.in_reg818, label %vaarg.in_mem820, !dbg !3612

vaarg.in_reg818:                                  ; preds = %sw.bb814
  %434 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %433, i32 0, i32 3, !dbg !3613
  %reg_save_area819 = load i8*, i8** %434, align 8, !dbg !3613
  %435 = getelementptr i8, i8* %reg_save_area819, i32 %gp_offset816, !dbg !3613
  %436 = bitcast i8* %435 to %struct.curl_slist**, !dbg !3613
  %437 = add i32 %gp_offset816, 8, !dbg !3613
  store i32 %437, i32* %gp_offset_p815, align 8, !dbg !3613
  br label %vaarg.end824, !dbg !3613

vaarg.in_mem820:                                  ; preds = %sw.bb814
  %overflow_arg_area_p821 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %433, i32 0, i32 2, !dbg !3614
  %overflow_arg_area822 = load i8*, i8** %overflow_arg_area_p821, align 8, !dbg !3614
  %438 = bitcast i8* %overflow_arg_area822 to %struct.curl_slist**, !dbg !3614
  %overflow_arg_area.next823 = getelementptr i8, i8* %overflow_arg_area822, i32 8, !dbg !3614
  store i8* %overflow_arg_area.next823, i8** %overflow_arg_area_p821, align 8, !dbg !3614
  br label %vaarg.end824, !dbg !3614

vaarg.end824:                                     ; preds = %vaarg.in_mem820, %vaarg.in_reg818
  %vaarg.addr825 = phi %struct.curl_slist** [ %436, %vaarg.in_reg818 ], [ %438, %vaarg.in_mem820 ], !dbg !3615
  %439 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr825, align 8, !dbg !3615
  %440 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3616
  %set826 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %440, i32 0, i32 13, !dbg !3617
  %headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set826, i32 0, i32 54, !dbg !3618
  store %struct.curl_slist* %439, %struct.curl_slist** %headers, align 8, !dbg !3619
  br label %sw.epilog3648, !dbg !3620

sw.bb827:                                         ; preds = %entry
  %441 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3621
  %gp_offset_p828 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %441, i32 0, i32 0, !dbg !3621
  %gp_offset829 = load i32, i32* %gp_offset_p828, align 8, !dbg !3621
  %fits_in_gp830 = icmp ule i32 %gp_offset829, 40, !dbg !3621
  br i1 %fits_in_gp830, label %vaarg.in_reg831, label %vaarg.in_mem833, !dbg !3621

vaarg.in_reg831:                                  ; preds = %sw.bb827
  %442 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %441, i32 0, i32 3, !dbg !3622
  %reg_save_area832 = load i8*, i8** %442, align 8, !dbg !3622
  %443 = getelementptr i8, i8* %reg_save_area832, i32 %gp_offset829, !dbg !3622
  %444 = bitcast i8* %443 to %struct.curl_slist**, !dbg !3622
  %445 = add i32 %gp_offset829, 8, !dbg !3622
  store i32 %445, i32* %gp_offset_p828, align 8, !dbg !3622
  br label %vaarg.end837, !dbg !3622

vaarg.in_mem833:                                  ; preds = %sw.bb827
  %overflow_arg_area_p834 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %441, i32 0, i32 2, !dbg !3623
  %overflow_arg_area835 = load i8*, i8** %overflow_arg_area_p834, align 8, !dbg !3623
  %446 = bitcast i8* %overflow_arg_area835 to %struct.curl_slist**, !dbg !3623
  %overflow_arg_area.next836 = getelementptr i8, i8* %overflow_arg_area835, i32 8, !dbg !3623
  store i8* %overflow_arg_area.next836, i8** %overflow_arg_area_p834, align 8, !dbg !3623
  br label %vaarg.end837, !dbg !3623

vaarg.end837:                                     ; preds = %vaarg.in_mem833, %vaarg.in_reg831
  %vaarg.addr838 = phi %struct.curl_slist** [ %444, %vaarg.in_reg831 ], [ %446, %vaarg.in_mem833 ], !dbg !3624
  %447 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr838, align 8, !dbg !3624
  %448 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3625
  %set839 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %448, i32 0, i32 13, !dbg !3626
  %proxyheaders = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set839, i32 0, i32 55, !dbg !3627
  store %struct.curl_slist* %447, %struct.curl_slist** %proxyheaders, align 8, !dbg !3628
  br label %sw.epilog3648, !dbg !3629

sw.bb840:                                         ; preds = %entry
  %449 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3630
  %gp_offset_p841 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %449, i32 0, i32 0, !dbg !3630
  %gp_offset842 = load i32, i32* %gp_offset_p841, align 8, !dbg !3630
  %fits_in_gp843 = icmp ule i32 %gp_offset842, 40, !dbg !3630
  br i1 %fits_in_gp843, label %vaarg.in_reg844, label %vaarg.in_mem846, !dbg !3630

vaarg.in_reg844:                                  ; preds = %sw.bb840
  %450 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %449, i32 0, i32 3, !dbg !3631
  %reg_save_area845 = load i8*, i8** %450, align 8, !dbg !3631
  %451 = getelementptr i8, i8* %reg_save_area845, i32 %gp_offset842, !dbg !3631
  %452 = bitcast i8* %451 to i64*, !dbg !3631
  %453 = add i32 %gp_offset842, 8, !dbg !3631
  store i32 %453, i32* %gp_offset_p841, align 8, !dbg !3631
  br label %vaarg.end850, !dbg !3631

vaarg.in_mem846:                                  ; preds = %sw.bb840
  %overflow_arg_area_p847 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %449, i32 0, i32 2, !dbg !3632
  %overflow_arg_area848 = load i8*, i8** %overflow_arg_area_p847, align 8, !dbg !3632
  %454 = bitcast i8* %overflow_arg_area848 to i64*, !dbg !3632
  %overflow_arg_area.next849 = getelementptr i8, i8* %overflow_arg_area848, i32 8, !dbg !3632
  store i8* %overflow_arg_area.next849, i8** %overflow_arg_area_p847, align 8, !dbg !3632
  br label %vaarg.end850, !dbg !3632

vaarg.end850:                                     ; preds = %vaarg.in_mem846, %vaarg.in_reg844
  %vaarg.addr851 = phi i64* [ %452, %vaarg.in_reg844 ], [ %454, %vaarg.in_mem846 ], !dbg !3633
  %455 = load i64, i64* %vaarg.addr851, align 8, !dbg !3633
  store i64 %455, i64* %arg, align 8, !dbg !3634
  %456 = load i64, i64* %arg, align 8, !dbg !3635
  %and852 = and i64 %456, 1, !dbg !3636
  %tobool853 = icmp ne i64 %and852, 0, !dbg !3637
  %cond854 = select i1 %tobool853, i32 1, i32 0, !dbg !3637
  %tobool855 = icmp ne i32 %cond854, 0, !dbg !3637
  %457 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3638
  %set856 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %457, i32 0, i32 13, !dbg !3639
  %sep_headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set856, i32 0, i32 57, !dbg !3640
  %frombool857 = zext i1 %tobool855 to i8, !dbg !3641
  store i8 %frombool857, i8* %sep_headers, align 8, !dbg !3641
  br label %sw.epilog3648, !dbg !3642

sw.bb858:                                         ; preds = %entry
  %458 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3643
  %gp_offset_p859 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %458, i32 0, i32 0, !dbg !3643
  %gp_offset860 = load i32, i32* %gp_offset_p859, align 8, !dbg !3643
  %fits_in_gp861 = icmp ule i32 %gp_offset860, 40, !dbg !3643
  br i1 %fits_in_gp861, label %vaarg.in_reg862, label %vaarg.in_mem864, !dbg !3643

vaarg.in_reg862:                                  ; preds = %sw.bb858
  %459 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %458, i32 0, i32 3, !dbg !3644
  %reg_save_area863 = load i8*, i8** %459, align 8, !dbg !3644
  %460 = getelementptr i8, i8* %reg_save_area863, i32 %gp_offset860, !dbg !3644
  %461 = bitcast i8* %460 to %struct.curl_slist**, !dbg !3644
  %462 = add i32 %gp_offset860, 8, !dbg !3644
  store i32 %462, i32* %gp_offset_p859, align 8, !dbg !3644
  br label %vaarg.end868, !dbg !3644

vaarg.in_mem864:                                  ; preds = %sw.bb858
  %overflow_arg_area_p865 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %458, i32 0, i32 2, !dbg !3645
  %overflow_arg_area866 = load i8*, i8** %overflow_arg_area_p865, align 8, !dbg !3645
  %463 = bitcast i8* %overflow_arg_area866 to %struct.curl_slist**, !dbg !3645
  %overflow_arg_area.next867 = getelementptr i8, i8* %overflow_arg_area866, i32 8, !dbg !3645
  store i8* %overflow_arg_area.next867, i8** %overflow_arg_area_p865, align 8, !dbg !3645
  br label %vaarg.end868, !dbg !3645

vaarg.end868:                                     ; preds = %vaarg.in_mem864, %vaarg.in_reg862
  %vaarg.addr869 = phi %struct.curl_slist** [ %461, %vaarg.in_reg862 ], [ %463, %vaarg.in_mem864 ], !dbg !3646
  %464 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr869, align 8, !dbg !3646
  %465 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3647
  %set870 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %465, i32 0, i32 13, !dbg !3648
  %http200aliases = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set870, i32 0, i32 80, !dbg !3649
  store %struct.curl_slist* %464, %struct.curl_slist** %http200aliases, align 8, !dbg !3650
  br label %sw.epilog3648, !dbg !3651

sw.bb871:                                         ; preds = %entry
  %466 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3652
  %set872 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %466, i32 0, i32 13, !dbg !3653
  %str873 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set872, i32 0, i32 128, !dbg !3654
  %arrayidx874 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str873, i64 0, i64 4, !dbg !3652
  %467 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3655
  %gp_offset_p875 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %467, i32 0, i32 0, !dbg !3655
  %gp_offset876 = load i32, i32* %gp_offset_p875, align 8, !dbg !3655
  %fits_in_gp877 = icmp ule i32 %gp_offset876, 40, !dbg !3655
  br i1 %fits_in_gp877, label %vaarg.in_reg878, label %vaarg.in_mem880, !dbg !3655

vaarg.in_reg878:                                  ; preds = %sw.bb871
  %468 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %467, i32 0, i32 3, !dbg !3656
  %reg_save_area879 = load i8*, i8** %468, align 8, !dbg !3656
  %469 = getelementptr i8, i8* %reg_save_area879, i32 %gp_offset876, !dbg !3656
  %470 = bitcast i8* %469 to i8**, !dbg !3656
  %471 = add i32 %gp_offset876, 8, !dbg !3656
  store i32 %471, i32* %gp_offset_p875, align 8, !dbg !3656
  br label %vaarg.end884, !dbg !3656

vaarg.in_mem880:                                  ; preds = %sw.bb871
  %overflow_arg_area_p881 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %467, i32 0, i32 2, !dbg !3657
  %overflow_arg_area882 = load i8*, i8** %overflow_arg_area_p881, align 8, !dbg !3657
  %472 = bitcast i8* %overflow_arg_area882 to i8**, !dbg !3657
  %overflow_arg_area.next883 = getelementptr i8, i8* %overflow_arg_area882, i32 8, !dbg !3657
  store i8* %overflow_arg_area.next883, i8** %overflow_arg_area_p881, align 8, !dbg !3657
  br label %vaarg.end884, !dbg !3657

vaarg.end884:                                     ; preds = %vaarg.in_mem880, %vaarg.in_reg878
  %vaarg.addr885 = phi i8** [ %470, %vaarg.in_reg878 ], [ %472, %vaarg.in_mem880 ], !dbg !3658
  %473 = load i8*, i8** %vaarg.addr885, align 8, !dbg !3658
  %call886 = call i32 @setstropt(i8** %arrayidx874, i8* %473), !dbg !3659
  store i32 %call886, i32* %result, align 4, !dbg !3660
  br label %sw.epilog3648, !dbg !3661

sw.bb887:                                         ; preds = %entry
  %474 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3662
  %gp_offset_p888 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %474, i32 0, i32 0, !dbg !3662
  %gp_offset889 = load i32, i32* %gp_offset_p888, align 8, !dbg !3662
  %fits_in_gp890 = icmp ule i32 %gp_offset889, 40, !dbg !3662
  br i1 %fits_in_gp890, label %vaarg.in_reg891, label %vaarg.in_mem893, !dbg !3662

vaarg.in_reg891:                                  ; preds = %sw.bb887
  %475 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %474, i32 0, i32 3, !dbg !3663
  %reg_save_area892 = load i8*, i8** %475, align 8, !dbg !3663
  %476 = getelementptr i8, i8* %reg_save_area892, i32 %gp_offset889, !dbg !3663
  %477 = bitcast i8* %476 to i8**, !dbg !3663
  %478 = add i32 %gp_offset889, 8, !dbg !3663
  store i32 %478, i32* %gp_offset_p888, align 8, !dbg !3663
  br label %vaarg.end897, !dbg !3663

vaarg.in_mem893:                                  ; preds = %sw.bb887
  %overflow_arg_area_p894 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %474, i32 0, i32 2, !dbg !3664
  %overflow_arg_area895 = load i8*, i8** %overflow_arg_area_p894, align 8, !dbg !3664
  %479 = bitcast i8* %overflow_arg_area895 to i8**, !dbg !3664
  %overflow_arg_area.next896 = getelementptr i8, i8* %overflow_arg_area895, i32 8, !dbg !3664
  store i8* %overflow_arg_area.next896, i8** %overflow_arg_area_p894, align 8, !dbg !3664
  br label %vaarg.end897, !dbg !3664

vaarg.end897:                                     ; preds = %vaarg.in_mem893, %vaarg.in_reg891
  %vaarg.addr898 = phi i8** [ %477, %vaarg.in_reg891 ], [ %479, %vaarg.in_mem893 ], !dbg !3665
  %480 = load i8*, i8** %vaarg.addr898, align 8, !dbg !3665
  store i8* %480, i8** %argptr, align 8, !dbg !3666
  %481 = load i8*, i8** %argptr, align 8, !dbg !3667
  %tobool899 = icmp ne i8* %481, null, !dbg !3667
  br i1 %tobool899, label %if.then900, label %if.end912, !dbg !3669

if.then900:                                       ; preds = %vaarg.end897
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %cl, metadata !3670, metadata !2256), !dbg !3672
  %482 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3673
  %change901 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %482, i32 0, i32 14, !dbg !3674
  %cookielist = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change901, i32 0, i32 4, !dbg !3675
  %483 = load %struct.curl_slist*, %struct.curl_slist** %cookielist, align 8, !dbg !3675
  %484 = load i8*, i8** %argptr, align 8, !dbg !3676
  %call902 = call %struct.curl_slist* @curl_slist_append(%struct.curl_slist* %483, i8* %484), !dbg !3677
  store %struct.curl_slist* %call902, %struct.curl_slist** %cl, align 8, !dbg !3678
  %485 = load %struct.curl_slist*, %struct.curl_slist** %cl, align 8, !dbg !3679
  %tobool903 = icmp ne %struct.curl_slist* %485, null, !dbg !3679
  br i1 %tobool903, label %if.end909, label %if.then904, !dbg !3681

if.then904:                                       ; preds = %if.then900
  %486 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3682
  %change905 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %486, i32 0, i32 14, !dbg !3684
  %cookielist906 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change905, i32 0, i32 4, !dbg !3685
  %487 = load %struct.curl_slist*, %struct.curl_slist** %cookielist906, align 8, !dbg !3685
  call void @curl_slist_free_all(%struct.curl_slist* %487), !dbg !3686
  %488 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3687
  %change907 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %488, i32 0, i32 14, !dbg !3688
  %cookielist908 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change907, i32 0, i32 4, !dbg !3689
  store %struct.curl_slist* null, %struct.curl_slist** %cookielist908, align 8, !dbg !3690
  store i32 27, i32* %retval, align 4, !dbg !3691
  br label %return, !dbg !3691

if.end909:                                        ; preds = %if.then900
  %489 = load %struct.curl_slist*, %struct.curl_slist** %cl, align 8, !dbg !3692
  %490 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3693
  %change910 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %490, i32 0, i32 14, !dbg !3694
  %cookielist911 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change910, i32 0, i32 4, !dbg !3695
  store %struct.curl_slist* %489, %struct.curl_slist** %cookielist911, align 8, !dbg !3696
  br label %if.end912, !dbg !3697

if.end912:                                        ; preds = %if.end909, %vaarg.end897
  br label %sw.epilog3648, !dbg !3698

sw.bb913:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CookieInfo** %newcookies, metadata !3699, metadata !2256), !dbg !3701
  %491 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3702
  %set914 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %491, i32 0, i32 13, !dbg !3703
  %str915 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set914, i32 0, i32 128, !dbg !3704
  %arrayidx916 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str915, i64 0, i64 5, !dbg !3702
  %492 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3705
  %gp_offset_p917 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %492, i32 0, i32 0, !dbg !3705
  %gp_offset918 = load i32, i32* %gp_offset_p917, align 8, !dbg !3705
  %fits_in_gp919 = icmp ule i32 %gp_offset918, 40, !dbg !3705
  br i1 %fits_in_gp919, label %vaarg.in_reg920, label %vaarg.in_mem922, !dbg !3705

vaarg.in_reg920:                                  ; preds = %sw.bb913
  %493 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %492, i32 0, i32 3, !dbg !3706
  %reg_save_area921 = load i8*, i8** %493, align 8, !dbg !3706
  %494 = getelementptr i8, i8* %reg_save_area921, i32 %gp_offset918, !dbg !3706
  %495 = bitcast i8* %494 to i8**, !dbg !3706
  %496 = add i32 %gp_offset918, 8, !dbg !3706
  store i32 %496, i32* %gp_offset_p917, align 8, !dbg !3706
  br label %vaarg.end926, !dbg !3706

vaarg.in_mem922:                                  ; preds = %sw.bb913
  %overflow_arg_area_p923 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %492, i32 0, i32 2, !dbg !3708
  %overflow_arg_area924 = load i8*, i8** %overflow_arg_area_p923, align 8, !dbg !3708
  %497 = bitcast i8* %overflow_arg_area924 to i8**, !dbg !3708
  %overflow_arg_area.next925 = getelementptr i8, i8* %overflow_arg_area924, i32 8, !dbg !3708
  store i8* %overflow_arg_area.next925, i8** %overflow_arg_area_p923, align 8, !dbg !3708
  br label %vaarg.end926, !dbg !3708

vaarg.end926:                                     ; preds = %vaarg.in_mem922, %vaarg.in_reg920
  %vaarg.addr927 = phi i8** [ %495, %vaarg.in_reg920 ], [ %497, %vaarg.in_mem922 ], !dbg !3710
  %498 = load i8*, i8** %vaarg.addr927, align 8, !dbg !3710
  %call928 = call i32 @setstropt(i8** %arrayidx916, i8* %498), !dbg !3712
  store i32 %call928, i32* %result, align 4, !dbg !3713
  %499 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3714
  %500 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3715
  %cookies = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %500, i32 0, i32 15, !dbg !3716
  %501 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies, align 8, !dbg !3716
  %502 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3717
  %set929 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %502, i32 0, i32 13, !dbg !3718
  %cookiesession = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set929, i32 0, i32 58, !dbg !3719
  %503 = load i8, i8* %cookiesession, align 1, !dbg !3719
  %tobool930 = trunc i8 %503 to i1, !dbg !3719
  %call931 = call %struct.CookieInfo* @Curl_cookie_init(%struct.Curl_easy* %499, i8* null, %struct.CookieInfo* %501, i1 zeroext %tobool930), !dbg !3720
  store %struct.CookieInfo* %call931, %struct.CookieInfo** %newcookies, align 8, !dbg !3721
  %504 = load %struct.CookieInfo*, %struct.CookieInfo** %newcookies, align 8, !dbg !3722
  %tobool932 = icmp ne %struct.CookieInfo* %504, null, !dbg !3722
  br i1 %tobool932, label %if.end934, label %if.then933, !dbg !3724

if.then933:                                       ; preds = %vaarg.end926
  store i32 27, i32* %result, align 4, !dbg !3725
  br label %if.end934, !dbg !3726

if.end934:                                        ; preds = %if.then933, %vaarg.end926
  %505 = load %struct.CookieInfo*, %struct.CookieInfo** %newcookies, align 8, !dbg !3727
  %506 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3728
  %cookies935 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %506, i32 0, i32 15, !dbg !3729
  store %struct.CookieInfo* %505, %struct.CookieInfo** %cookies935, align 8, !dbg !3730
  br label %sw.epilog3648, !dbg !3731

sw.bb936:                                         ; preds = %entry
  %507 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3732
  %gp_offset_p937 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %507, i32 0, i32 0, !dbg !3732
  %gp_offset938 = load i32, i32* %gp_offset_p937, align 8, !dbg !3732
  %fits_in_gp939 = icmp ule i32 %gp_offset938, 40, !dbg !3732
  br i1 %fits_in_gp939, label %vaarg.in_reg940, label %vaarg.in_mem942, !dbg !3732

vaarg.in_reg940:                                  ; preds = %sw.bb936
  %508 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %507, i32 0, i32 3, !dbg !3733
  %reg_save_area941 = load i8*, i8** %508, align 8, !dbg !3733
  %509 = getelementptr i8, i8* %reg_save_area941, i32 %gp_offset938, !dbg !3733
  %510 = bitcast i8* %509 to i64*, !dbg !3733
  %511 = add i32 %gp_offset938, 8, !dbg !3733
  store i32 %511, i32* %gp_offset_p937, align 8, !dbg !3733
  br label %vaarg.end946, !dbg !3733

vaarg.in_mem942:                                  ; preds = %sw.bb936
  %overflow_arg_area_p943 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %507, i32 0, i32 2, !dbg !3734
  %overflow_arg_area944 = load i8*, i8** %overflow_arg_area_p943, align 8, !dbg !3734
  %512 = bitcast i8* %overflow_arg_area944 to i64*, !dbg !3734
  %overflow_arg_area.next945 = getelementptr i8, i8* %overflow_arg_area944, i32 8, !dbg !3734
  store i8* %overflow_arg_area.next945, i8** %overflow_arg_area_p943, align 8, !dbg !3734
  br label %vaarg.end946, !dbg !3734

vaarg.end946:                                     ; preds = %vaarg.in_mem942, %vaarg.in_reg940
  %vaarg.addr947 = phi i64* [ %510, %vaarg.in_reg940 ], [ %512, %vaarg.in_mem942 ], !dbg !3735
  %513 = load i64, i64* %vaarg.addr947, align 8, !dbg !3735
  %cmp948 = icmp ne i64 0, %513, !dbg !3736
  %cond950 = select i1 %cmp948, i32 1, i32 0, !dbg !3737
  %tobool951 = icmp ne i32 %cond950, 0, !dbg !3737
  %514 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3738
  %set952 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %514, i32 0, i32 13, !dbg !3739
  %cookiesession953 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set952, i32 0, i32 58, !dbg !3740
  %frombool954 = zext i1 %tobool951 to i8, !dbg !3741
  store i8 %frombool954, i8* %cookiesession953, align 1, !dbg !3741
  br label %sw.epilog3648, !dbg !3742

sw.bb955:                                         ; preds = %entry
  %515 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3743
  %gp_offset_p956 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %515, i32 0, i32 0, !dbg !3743
  %gp_offset957 = load i32, i32* %gp_offset_p956, align 8, !dbg !3743
  %fits_in_gp958 = icmp ule i32 %gp_offset957, 40, !dbg !3743
  br i1 %fits_in_gp958, label %vaarg.in_reg959, label %vaarg.in_mem961, !dbg !3743

vaarg.in_reg959:                                  ; preds = %sw.bb955
  %516 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %515, i32 0, i32 3, !dbg !3744
  %reg_save_area960 = load i8*, i8** %516, align 8, !dbg !3744
  %517 = getelementptr i8, i8* %reg_save_area960, i32 %gp_offset957, !dbg !3744
  %518 = bitcast i8* %517 to i8**, !dbg !3744
  %519 = add i32 %gp_offset957, 8, !dbg !3744
  store i32 %519, i32* %gp_offset_p956, align 8, !dbg !3744
  br label %vaarg.end965, !dbg !3744

vaarg.in_mem961:                                  ; preds = %sw.bb955
  %overflow_arg_area_p962 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %515, i32 0, i32 2, !dbg !3745
  %overflow_arg_area963 = load i8*, i8** %overflow_arg_area_p962, align 8, !dbg !3745
  %520 = bitcast i8* %overflow_arg_area963 to i8**, !dbg !3745
  %overflow_arg_area.next964 = getelementptr i8, i8* %overflow_arg_area963, i32 8, !dbg !3745
  store i8* %overflow_arg_area.next964, i8** %overflow_arg_area_p962, align 8, !dbg !3745
  br label %vaarg.end965, !dbg !3745

vaarg.end965:                                     ; preds = %vaarg.in_mem961, %vaarg.in_reg959
  %vaarg.addr966 = phi i8** [ %518, %vaarg.in_reg959 ], [ %520, %vaarg.in_mem961 ], !dbg !3746
  %521 = load i8*, i8** %vaarg.addr966, align 8, !dbg !3746
  store i8* %521, i8** %argptr, align 8, !dbg !3747
  %522 = load i8*, i8** %argptr, align 8, !dbg !3748
  %cmp967 = icmp eq i8* %522, null, !dbg !3750
  br i1 %cmp967, label %if.then969, label %if.end970, !dbg !3751

if.then969:                                       ; preds = %vaarg.end965
  br label %sw.epilog3648, !dbg !3752

if.end970:                                        ; preds = %vaarg.end965
  %523 = load i8*, i8** %argptr, align 8, !dbg !3753
  %call971 = call i32 @Curl_strcasecompare(i8* %523, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0)), !dbg !3753
  %tobool972 = icmp ne i32 %call971, 0, !dbg !3753
  br i1 %tobool972, label %if.then973, label %if.else977, !dbg !3755

if.then973:                                       ; preds = %if.end970
  %524 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3756
  %call974 = call i32 @Curl_share_lock(%struct.Curl_easy* %524, i32 2, i32 2), !dbg !3758
  %525 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3759
  %cookies975 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %525, i32 0, i32 15, !dbg !3760
  %526 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies975, align 8, !dbg !3760
  call void @Curl_cookie_clearall(%struct.CookieInfo* %526), !dbg !3761
  %527 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3762
  %call976 = call i32 @Curl_share_unlock(%struct.Curl_easy* %527, i32 2), !dbg !3763
  br label %if.end1021, !dbg !3764

if.else977:                                       ; preds = %if.end970
  %528 = load i8*, i8** %argptr, align 8, !dbg !3765
  %call978 = call i32 @Curl_strcasecompare(i8* %528, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0)), !dbg !3765
  %tobool979 = icmp ne i32 %call978, 0, !dbg !3765
  br i1 %tobool979, label %if.then980, label %if.else984, !dbg !3767

if.then980:                                       ; preds = %if.else977
  %529 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3768
  %call981 = call i32 @Curl_share_lock(%struct.Curl_easy* %529, i32 2, i32 2), !dbg !3770
  %530 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3771
  %cookies982 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %530, i32 0, i32 15, !dbg !3772
  %531 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies982, align 8, !dbg !3772
  call void @Curl_cookie_clearsess(%struct.CookieInfo* %531), !dbg !3773
  %532 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3774
  %call983 = call i32 @Curl_share_unlock(%struct.Curl_easy* %532, i32 2), !dbg !3775
  br label %if.end1020, !dbg !3776

if.else984:                                       ; preds = %if.else977
  %533 = load i8*, i8** %argptr, align 8, !dbg !3777
  %call985 = call i32 @Curl_strcasecompare(i8* %533, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0)), !dbg !3777
  %tobool986 = icmp ne i32 %call985, 0, !dbg !3777
  br i1 %tobool986, label %if.then987, label %if.else988, !dbg !3779

if.then987:                                       ; preds = %if.else984
  %534 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3780
  call void @Curl_flush_cookies(%struct.Curl_easy* %534, i32 0), !dbg !3782
  br label %if.end1019, !dbg !3783

if.else988:                                       ; preds = %if.else984
  %535 = load i8*, i8** %argptr, align 8, !dbg !3784
  %call989 = call i32 @Curl_strcasecompare(i8* %535, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)), !dbg !3784
  %tobool990 = icmp ne i32 %call989, 0, !dbg !3784
  br i1 %tobool990, label %if.then991, label %if.else992, !dbg !3786

if.then991:                                       ; preds = %if.else988
  %536 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3787
  call void @Curl_cookie_loadfiles(%struct.Curl_easy* %536), !dbg !3789
  br label %sw.epilog3648, !dbg !3790

if.else992:                                       ; preds = %if.else988
  %537 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3791
  %cookies993 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %537, i32 0, i32 15, !dbg !3794
  %538 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies993, align 8, !dbg !3794
  %tobool994 = icmp ne %struct.CookieInfo* %538, null, !dbg !3791
  br i1 %tobool994, label %if.end998, label %if.then995, !dbg !3795

if.then995:                                       ; preds = %if.else992
  %539 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3796
  %call996 = call %struct.CookieInfo* @Curl_cookie_init(%struct.Curl_easy* %539, i8* null, %struct.CookieInfo* null, i1 zeroext true), !dbg !3797
  %540 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3798
  %cookies997 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %540, i32 0, i32 15, !dbg !3799
  store %struct.CookieInfo* %call996, %struct.CookieInfo** %cookies997, align 8, !dbg !3800
  br label %if.end998, !dbg !3798

if.end998:                                        ; preds = %if.then995, %if.else992
  %541 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !3801
  %542 = load i8*, i8** %argptr, align 8, !dbg !3801
  %call999 = call i8* %541(i8* %542), !dbg !3801
  store i8* %call999, i8** %argptr, align 8, !dbg !3802
  %543 = load i8*, i8** %argptr, align 8, !dbg !3803
  %tobool1000 = icmp ne i8* %543, null, !dbg !3803
  br i1 %tobool1000, label %lor.lhs.false1001, label %if.then1004, !dbg !3805

lor.lhs.false1001:                                ; preds = %if.end998
  %544 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3806
  %cookies1002 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %544, i32 0, i32 15, !dbg !3808
  %545 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies1002, align 8, !dbg !3808
  %tobool1003 = icmp ne %struct.CookieInfo* %545, null, !dbg !3806
  br i1 %tobool1003, label %if.else1005, label %if.then1004, !dbg !3809

if.then1004:                                      ; preds = %lor.lhs.false1001, %if.end998
  store i32 27, i32* %result, align 4, !dbg !3810
  %546 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3812
  %547 = load i8*, i8** %argptr, align 8, !dbg !3812
  call void %546(i8* %547), !dbg !3812
  br label %if.end1017, !dbg !3813

if.else1005:                                      ; preds = %lor.lhs.false1001
  %548 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3814
  %call1006 = call i32 @Curl_share_lock(%struct.Curl_easy* %548, i32 2, i32 2), !dbg !3816
  %549 = load i8*, i8** %argptr, align 8, !dbg !3817
  %call1007 = call i32 @curl_strnequal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* %549, i64 11), !dbg !3817
  %tobool1008 = icmp ne i32 %call1007, 0, !dbg !3817
  br i1 %tobool1008, label %if.then1009, label %if.else1012, !dbg !3819

if.then1009:                                      ; preds = %if.else1005
  %550 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3820
  %551 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3821
  %cookies1010 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %551, i32 0, i32 15, !dbg !3822
  %552 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies1010, align 8, !dbg !3822
  %553 = load i8*, i8** %argptr, align 8, !dbg !3823
  %add.ptr = getelementptr inbounds i8, i8* %553, i64 11, !dbg !3824
  %call1011 = call %struct.Cookie* @Curl_cookie_add(%struct.Curl_easy* %550, %struct.CookieInfo* %552, i1 zeroext true, i8* %add.ptr, i8* null, i8* null), !dbg !3825
  br label %if.end1015, !dbg !3825

if.else1012:                                      ; preds = %if.else1005
  %554 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3826
  %555 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3827
  %cookies1013 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %555, i32 0, i32 15, !dbg !3828
  %556 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies1013, align 8, !dbg !3828
  %557 = load i8*, i8** %argptr, align 8, !dbg !3829
  %call1014 = call %struct.Cookie* @Curl_cookie_add(%struct.Curl_easy* %554, %struct.CookieInfo* %556, i1 zeroext false, i8* %557, i8* null, i8* null), !dbg !3830
  br label %if.end1015

if.end1015:                                       ; preds = %if.else1012, %if.then1009
  %558 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3831
  %call1016 = call i32 @Curl_share_unlock(%struct.Curl_easy* %558, i32 2), !dbg !3832
  %559 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3833
  %560 = load i8*, i8** %argptr, align 8, !dbg !3833
  call void %559(i8* %560), !dbg !3833
  br label %if.end1017

if.end1017:                                       ; preds = %if.end1015, %if.then1004
  br label %if.end1018

if.end1018:                                       ; preds = %if.end1017
  br label %if.end1019

if.end1019:                                       ; preds = %if.end1018, %if.then987
  br label %if.end1020

if.end1020:                                       ; preds = %if.end1019, %if.then980
  br label %if.end1021

if.end1021:                                       ; preds = %if.end1020, %if.then973
  br label %sw.epilog3648, !dbg !3834

sw.bb1022:                                        ; preds = %entry
  %561 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3835
  %gp_offset_p1023 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %561, i32 0, i32 0, !dbg !3835
  %gp_offset1024 = load i32, i32* %gp_offset_p1023, align 8, !dbg !3835
  %fits_in_gp1025 = icmp ule i32 %gp_offset1024, 40, !dbg !3835
  br i1 %fits_in_gp1025, label %vaarg.in_reg1026, label %vaarg.in_mem1028, !dbg !3835

vaarg.in_reg1026:                                 ; preds = %sw.bb1022
  %562 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %561, i32 0, i32 3, !dbg !3837
  %reg_save_area1027 = load i8*, i8** %562, align 8, !dbg !3837
  %563 = getelementptr i8, i8* %reg_save_area1027, i32 %gp_offset1024, !dbg !3837
  %564 = bitcast i8* %563 to i64*, !dbg !3837
  %565 = add i32 %gp_offset1024, 8, !dbg !3837
  store i32 %565, i32* %gp_offset_p1023, align 8, !dbg !3837
  br label %vaarg.end1032, !dbg !3837

vaarg.in_mem1028:                                 ; preds = %sw.bb1022
  %overflow_arg_area_p1029 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %561, i32 0, i32 2, !dbg !3839
  %overflow_arg_area1030 = load i8*, i8** %overflow_arg_area_p1029, align 8, !dbg !3839
  %566 = bitcast i8* %overflow_arg_area1030 to i64*, !dbg !3839
  %overflow_arg_area.next1031 = getelementptr i8, i8* %overflow_arg_area1030, i32 8, !dbg !3839
  store i8* %overflow_arg_area.next1031, i8** %overflow_arg_area_p1029, align 8, !dbg !3839
  br label %vaarg.end1032, !dbg !3839

vaarg.end1032:                                    ; preds = %vaarg.in_mem1028, %vaarg.in_reg1026
  %vaarg.addr1033 = phi i64* [ %564, %vaarg.in_reg1026 ], [ %566, %vaarg.in_mem1028 ], !dbg !3841
  %567 = load i64, i64* %vaarg.addr1033, align 8, !dbg !3841
  %tobool1034 = icmp ne i64 %567, 0, !dbg !3841
  br i1 %tobool1034, label %if.then1035, label %if.end1042, !dbg !3841

if.then1035:                                      ; preds = %vaarg.end1032
  %568 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3843
  %set1036 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %568, i32 0, i32 13, !dbg !3845
  %httpreq1037 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1036, i32 0, i32 71, !dbg !3846
  store i32 1, i32* %httpreq1037, align 8, !dbg !3847
  %569 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3848
  %set1038 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %569, i32 0, i32 13, !dbg !3849
  %upload1039 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1038, i32 0, i32 104, !dbg !3850
  store i8 0, i8* %upload1039, align 1, !dbg !3851
  %570 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3852
  %set1040 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %570, i32 0, i32 13, !dbg !3853
  %opt_no_body1041 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1040, i32 0, i32 103, !dbg !3854
  store i8 0, i8* %opt_no_body1041, align 8, !dbg !3855
  br label %if.end1042, !dbg !3856

if.end1042:                                       ; preds = %if.then1035, %vaarg.end1032
  br label %sw.epilog3648, !dbg !3857

sw.bb1043:                                        ; preds = %entry
  %571 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3858
  %gp_offset_p1044 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %571, i32 0, i32 0, !dbg !3858
  %gp_offset1045 = load i32, i32* %gp_offset_p1044, align 8, !dbg !3858
  %fits_in_gp1046 = icmp ule i32 %gp_offset1045, 40, !dbg !3858
  br i1 %fits_in_gp1046, label %vaarg.in_reg1047, label %vaarg.in_mem1049, !dbg !3858

vaarg.in_reg1047:                                 ; preds = %sw.bb1043
  %572 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %571, i32 0, i32 3, !dbg !3859
  %reg_save_area1048 = load i8*, i8** %572, align 8, !dbg !3859
  %573 = getelementptr i8, i8* %reg_save_area1048, i32 %gp_offset1045, !dbg !3859
  %574 = bitcast i8* %573 to i64*, !dbg !3859
  %575 = add i32 %gp_offset1045, 8, !dbg !3859
  store i32 %575, i32* %gp_offset_p1044, align 8, !dbg !3859
  br label %vaarg.end1053, !dbg !3859

vaarg.in_mem1049:                                 ; preds = %sw.bb1043
  %overflow_arg_area_p1050 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %571, i32 0, i32 2, !dbg !3860
  %overflow_arg_area1051 = load i8*, i8** %overflow_arg_area_p1050, align 8, !dbg !3860
  %576 = bitcast i8* %overflow_arg_area1051 to i64*, !dbg !3860
  %overflow_arg_area.next1052 = getelementptr i8, i8* %overflow_arg_area1051, i32 8, !dbg !3860
  store i8* %overflow_arg_area.next1052, i8** %overflow_arg_area_p1050, align 8, !dbg !3860
  br label %vaarg.end1053, !dbg !3860

vaarg.end1053:                                    ; preds = %vaarg.in_mem1049, %vaarg.in_reg1047
  %vaarg.addr1054 = phi i64* [ %574, %vaarg.in_reg1047 ], [ %576, %vaarg.in_mem1049 ], !dbg !3861
  %577 = load i64, i64* %vaarg.addr1054, align 8, !dbg !3861
  store i64 %577, i64* %arg, align 8, !dbg !3862
  %578 = load i64, i64* %arg, align 8, !dbg !3863
  %cmp1055 = icmp sge i64 %578, 3, !dbg !3865
  br i1 %cmp1055, label %if.then1057, label %if.end1058, !dbg !3866

if.then1057:                                      ; preds = %vaarg.end1053
  store i32 1, i32* %retval, align 4, !dbg !3867
  br label %return, !dbg !3867

if.end1058:                                       ; preds = %vaarg.end1053
  %579 = load i64, i64* %arg, align 8, !dbg !3868
  %580 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3869
  %set1059 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %580, i32 0, i32 13, !dbg !3870
  %httpversion = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1059, i32 0, i32 72, !dbg !3871
  store i64 %579, i64* %httpversion, align 8, !dbg !3872
  br label %sw.epilog3648, !dbg !3873

sw.bb1060:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bitcheck, metadata !3874, metadata !2256), !dbg !3876
  call void @llvm.dbg.declare(metadata i8* %authbits, metadata !3877, metadata !2256), !dbg !3878
  call void @llvm.dbg.declare(metadata i64* %auth, metadata !3879, metadata !2256), !dbg !3880
  %581 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3881
  %gp_offset_p1061 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %581, i32 0, i32 0, !dbg !3881
  %gp_offset1062 = load i32, i32* %gp_offset_p1061, align 8, !dbg !3881
  %fits_in_gp1063 = icmp ule i32 %gp_offset1062, 40, !dbg !3881
  br i1 %fits_in_gp1063, label %vaarg.in_reg1064, label %vaarg.in_mem1066, !dbg !3881

vaarg.in_reg1064:                                 ; preds = %sw.bb1060
  %582 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %581, i32 0, i32 3, !dbg !3882
  %reg_save_area1065 = load i8*, i8** %582, align 8, !dbg !3882
  %583 = getelementptr i8, i8* %reg_save_area1065, i32 %gp_offset1062, !dbg !3882
  %584 = bitcast i8* %583 to i64*, !dbg !3882
  %585 = add i32 %gp_offset1062, 8, !dbg !3882
  store i32 %585, i32* %gp_offset_p1061, align 8, !dbg !3882
  br label %vaarg.end1070, !dbg !3882

vaarg.in_mem1066:                                 ; preds = %sw.bb1060
  %overflow_arg_area_p1067 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %581, i32 0, i32 2, !dbg !3884
  %overflow_arg_area1068 = load i8*, i8** %overflow_arg_area_p1067, align 8, !dbg !3884
  %586 = bitcast i8* %overflow_arg_area1068 to i64*, !dbg !3884
  %overflow_arg_area.next1069 = getelementptr i8, i8* %overflow_arg_area1068, i32 8, !dbg !3884
  store i8* %overflow_arg_area.next1069, i8** %overflow_arg_area_p1067, align 8, !dbg !3884
  br label %vaarg.end1070, !dbg !3884

vaarg.end1070:                                    ; preds = %vaarg.in_mem1066, %vaarg.in_reg1064
  %vaarg.addr1071 = phi i64* [ %584, %vaarg.in_reg1064 ], [ %586, %vaarg.in_mem1066 ], !dbg !3886
  %587 = load i64, i64* %vaarg.addr1071, align 8, !dbg !3886
  store i64 %587, i64* %auth, align 8, !dbg !3888
  %588 = load i64, i64* %auth, align 8, !dbg !3889
  %cmp1072 = icmp eq i64 %588, 0, !dbg !3891
  br i1 %cmp1072, label %if.then1074, label %if.end1076, !dbg !3892

if.then1074:                                      ; preds = %vaarg.end1070
  %589 = load i64, i64* %auth, align 8, !dbg !3893
  %590 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3895
  %set1075 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %590, i32 0, i32 13, !dbg !3896
  %httpauth = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1075, i32 0, i32 9, !dbg !3897
  store i64 %589, i64* %httpauth, align 8, !dbg !3898
  br label %sw.epilog3648, !dbg !3899

if.end1076:                                       ; preds = %vaarg.end1070
  %591 = load i64, i64* %auth, align 8, !dbg !3900
  %and1077 = and i64 %591, 16, !dbg !3901
  %tobool1078 = icmp ne i64 %and1077, 0, !dbg !3902
  %cond1079 = select i1 %tobool1078, i32 1, i32 0, !dbg !3902
  %tobool1080 = icmp ne i32 %cond1079, 0, !dbg !3902
  %592 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3903
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %592, i32 0, i32 17, !dbg !3904
  %authhost = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 23, !dbg !3905
  %iestyle = getelementptr inbounds %struct.auth, %struct.auth* %authhost, i32 0, i32 5, !dbg !3906
  %frombool1081 = zext i1 %tobool1080 to i8, !dbg !3907
  store i8 %frombool1081, i8* %iestyle, align 2, !dbg !3907
  %593 = load i64, i64* %auth, align 8, !dbg !3908
  %and1082 = and i64 %593, 16, !dbg !3910
  %tobool1083 = icmp ne i64 %and1082, 0, !dbg !3910
  br i1 %tobool1083, label %if.then1084, label %if.end1087, !dbg !3911

if.then1084:                                      ; preds = %if.end1076
  %594 = load i64, i64* %auth, align 8, !dbg !3912
  %or1085 = or i64 %594, 2, !dbg !3912
  store i64 %or1085, i64* %auth, align 8, !dbg !3912
  %595 = load i64, i64* %auth, align 8, !dbg !3914
  %and1086 = and i64 %595, -17, !dbg !3914
  store i64 %and1086, i64* %auth, align 8, !dbg !3914
  br label %if.end1087, !dbg !3915

if.end1087:                                       ; preds = %if.then1084, %if.end1076
  %596 = load i64, i64* %auth, align 8, !dbg !3916
  %and1088 = and i64 %596, -9, !dbg !3916
  store i64 %and1088, i64* %auth, align 8, !dbg !3916
  %597 = load i64, i64* %auth, align 8, !dbg !3917
  %and1089 = and i64 %597, -33, !dbg !3917
  store i64 %and1089, i64* %auth, align 8, !dbg !3917
  %598 = load i64, i64* %auth, align 8, !dbg !3918
  %and1090 = and i64 %598, -5, !dbg !3918
  store i64 %and1090, i64* %auth, align 8, !dbg !3918
  store i32 0, i32* %bitcheck, align 4, !dbg !3919
  store i8 0, i8* %authbits, align 1, !dbg !3920
  br label %while.cond, !dbg !3921

while.cond:                                       ; preds = %if.end1096, %if.end1087
  %599 = load i32, i32* %bitcheck, align 4, !dbg !3922
  %cmp1091 = icmp slt i32 %599, 31, !dbg !3923
  br i1 %cmp1091, label %while.body, label %while.end, !dbg !3924

while.body:                                       ; preds = %while.cond
  %600 = load i64, i64* %auth, align 8, !dbg !3925
  %601 = load i32, i32* %bitcheck, align 4, !dbg !3928
  %inc = add nsw i32 %601, 1, !dbg !3928
  store i32 %inc, i32* %bitcheck, align 4, !dbg !3928
  %sh_prom = zext i32 %601 to i64, !dbg !3929
  %shl = shl i64 1, %sh_prom, !dbg !3929
  %and1093 = and i64 %600, %shl, !dbg !3930
  %tobool1094 = icmp ne i64 %and1093, 0, !dbg !3930
  br i1 %tobool1094, label %if.then1095, label %if.end1096, !dbg !3931

if.then1095:                                      ; preds = %while.body
  store i8 1, i8* %authbits, align 1, !dbg !3932
  br label %while.end, !dbg !3934

if.end1096:                                       ; preds = %while.body
  br label %while.cond, !dbg !3935

while.end:                                        ; preds = %if.then1095, %while.cond
  %602 = load i8, i8* %authbits, align 1, !dbg !3936
  %tobool1097 = trunc i8 %602 to i1, !dbg !3936
  br i1 %tobool1097, label %if.end1099, label %if.then1098, !dbg !3938

if.then1098:                                      ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !3939
  br label %return, !dbg !3939

if.end1099:                                       ; preds = %while.end
  %603 = load i64, i64* %auth, align 8, !dbg !3940
  %604 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3941
  %set1100 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %604, i32 0, i32 13, !dbg !3942
  %httpauth1101 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1100, i32 0, i32 9, !dbg !3943
  store i64 %603, i64* %httpauth1101, align 8, !dbg !3944
  br label %sw.epilog3648, !dbg !3945

sw.bb1102:                                        ; preds = %entry
  %605 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3946
  %gp_offset_p1103 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %605, i32 0, i32 0, !dbg !3946
  %gp_offset1104 = load i32, i32* %gp_offset_p1103, align 8, !dbg !3946
  %fits_in_gp1105 = icmp ule i32 %gp_offset1104, 40, !dbg !3946
  br i1 %fits_in_gp1105, label %vaarg.in_reg1106, label %vaarg.in_mem1108, !dbg !3946

vaarg.in_reg1106:                                 ; preds = %sw.bb1102
  %606 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %605, i32 0, i32 3, !dbg !3947
  %reg_save_area1107 = load i8*, i8** %606, align 8, !dbg !3947
  %607 = getelementptr i8, i8* %reg_save_area1107, i32 %gp_offset1104, !dbg !3947
  %608 = bitcast i8* %607 to i64*, !dbg !3947
  %609 = add i32 %gp_offset1104, 8, !dbg !3947
  store i32 %609, i32* %gp_offset_p1103, align 8, !dbg !3947
  br label %vaarg.end1112, !dbg !3947

vaarg.in_mem1108:                                 ; preds = %sw.bb1102
  %overflow_arg_area_p1109 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %605, i32 0, i32 2, !dbg !3948
  %overflow_arg_area1110 = load i8*, i8** %overflow_arg_area_p1109, align 8, !dbg !3948
  %610 = bitcast i8* %overflow_arg_area1110 to i64*, !dbg !3948
  %overflow_arg_area.next1111 = getelementptr i8, i8* %overflow_arg_area1110, i32 8, !dbg !3948
  store i8* %overflow_arg_area.next1111, i8** %overflow_arg_area_p1109, align 8, !dbg !3948
  br label %vaarg.end1112, !dbg !3948

vaarg.end1112:                                    ; preds = %vaarg.in_mem1108, %vaarg.in_reg1106
  %vaarg.addr1113 = phi i64* [ %608, %vaarg.in_reg1106 ], [ %610, %vaarg.in_mem1108 ], !dbg !3949
  %611 = load i64, i64* %vaarg.addr1113, align 8, !dbg !3949
  %612 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3950
  %set1114 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %612, i32 0, i32 13, !dbg !3951
  %expect_100_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1114, i32 0, i32 151, !dbg !3952
  store i64 %611, i64* %expect_100_timeout, align 8, !dbg !3953
  br label %sw.epilog3648, !dbg !3954

sw.bb1115:                                        ; preds = %entry
  %613 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3955
  %set1116 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %613, i32 0, i32 13, !dbg !3956
  %str1117 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1116, i32 0, i32 128, !dbg !3957
  %arrayidx1118 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1117, i64 0, i64 6, !dbg !3955
  %614 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3958
  %gp_offset_p1119 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %614, i32 0, i32 0, !dbg !3958
  %gp_offset1120 = load i32, i32* %gp_offset_p1119, align 8, !dbg !3958
  %fits_in_gp1121 = icmp ule i32 %gp_offset1120, 40, !dbg !3958
  br i1 %fits_in_gp1121, label %vaarg.in_reg1122, label %vaarg.in_mem1124, !dbg !3958

vaarg.in_reg1122:                                 ; preds = %sw.bb1115
  %615 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %614, i32 0, i32 3, !dbg !3959
  %reg_save_area1123 = load i8*, i8** %615, align 8, !dbg !3959
  %616 = getelementptr i8, i8* %reg_save_area1123, i32 %gp_offset1120, !dbg !3959
  %617 = bitcast i8* %616 to i8**, !dbg !3959
  %618 = add i32 %gp_offset1120, 8, !dbg !3959
  store i32 %618, i32* %gp_offset_p1119, align 8, !dbg !3959
  br label %vaarg.end1128, !dbg !3959

vaarg.in_mem1124:                                 ; preds = %sw.bb1115
  %overflow_arg_area_p1125 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %614, i32 0, i32 2, !dbg !3960
  %overflow_arg_area1126 = load i8*, i8** %overflow_arg_area_p1125, align 8, !dbg !3960
  %619 = bitcast i8* %overflow_arg_area1126 to i8**, !dbg !3960
  %overflow_arg_area.next1127 = getelementptr i8, i8* %overflow_arg_area1126, i32 8, !dbg !3960
  store i8* %overflow_arg_area.next1127, i8** %overflow_arg_area_p1125, align 8, !dbg !3960
  br label %vaarg.end1128, !dbg !3960

vaarg.end1128:                                    ; preds = %vaarg.in_mem1124, %vaarg.in_reg1122
  %vaarg.addr1129 = phi i8** [ %617, %vaarg.in_reg1122 ], [ %619, %vaarg.in_mem1124 ], !dbg !3961
  %620 = load i8*, i8** %vaarg.addr1129, align 8, !dbg !3961
  %call1130 = call i32 @setstropt(i8** %arrayidx1118, i8* %620), !dbg !3962
  store i32 %call1130, i32* %result, align 4, !dbg !3963
  br label %sw.epilog3648, !dbg !3964

sw.bb1131:                                        ; preds = %entry
  %621 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3965
  %gp_offset_p1132 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %621, i32 0, i32 0, !dbg !3965
  %gp_offset1133 = load i32, i32* %gp_offset_p1132, align 8, !dbg !3965
  %fits_in_gp1134 = icmp ule i32 %gp_offset1133, 40, !dbg !3965
  br i1 %fits_in_gp1134, label %vaarg.in_reg1135, label %vaarg.in_mem1137, !dbg !3965

vaarg.in_reg1135:                                 ; preds = %sw.bb1131
  %622 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %621, i32 0, i32 3, !dbg !3966
  %reg_save_area1136 = load i8*, i8** %622, align 8, !dbg !3966
  %623 = getelementptr i8, i8* %reg_save_area1136, i32 %gp_offset1133, !dbg !3966
  %624 = bitcast i8* %623 to i64*, !dbg !3966
  %625 = add i32 %gp_offset1133, 8, !dbg !3966
  store i32 %625, i32* %gp_offset_p1132, align 8, !dbg !3966
  br label %vaarg.end1141, !dbg !3966

vaarg.in_mem1137:                                 ; preds = %sw.bb1131
  %overflow_arg_area_p1138 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %621, i32 0, i32 2, !dbg !3967
  %overflow_arg_area1139 = load i8*, i8** %overflow_arg_area_p1138, align 8, !dbg !3967
  %626 = bitcast i8* %overflow_arg_area1139 to i64*, !dbg !3967
  %overflow_arg_area.next1140 = getelementptr i8, i8* %overflow_arg_area1139, i32 8, !dbg !3967
  store i8* %overflow_arg_area.next1140, i8** %overflow_arg_area_p1138, align 8, !dbg !3967
  br label %vaarg.end1141, !dbg !3967

vaarg.end1141:                                    ; preds = %vaarg.in_mem1137, %vaarg.in_reg1135
  %vaarg.addr1142 = phi i64* [ %624, %vaarg.in_reg1135 ], [ %626, %vaarg.in_mem1137 ], !dbg !3968
  %627 = load i64, i64* %vaarg.addr1142, align 8, !dbg !3968
  %cmp1143 = icmp ne i64 0, %627, !dbg !3969
  %cond1145 = select i1 %cmp1143, i32 1, i32 0, !dbg !3970
  %tobool1146 = icmp ne i32 %cond1145, 0, !dbg !3970
  %628 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3971
  %set1147 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %628, i32 0, i32 13, !dbg !3972
  %tunnel_thru_httpproxy = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1147, i32 0, i32 89, !dbg !3973
  %frombool1148 = zext i1 %tobool1146 to i8, !dbg !3974
  store i8 %frombool1148, i8* %tunnel_thru_httpproxy, align 2, !dbg !3974
  br label %sw.epilog3648, !dbg !3975

sw.bb1149:                                        ; preds = %entry
  %629 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3976
  %gp_offset_p1150 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %629, i32 0, i32 0, !dbg !3976
  %gp_offset1151 = load i32, i32* %gp_offset_p1150, align 8, !dbg !3976
  %fits_in_gp1152 = icmp ule i32 %gp_offset1151, 40, !dbg !3976
  br i1 %fits_in_gp1152, label %vaarg.in_reg1153, label %vaarg.in_mem1155, !dbg !3976

vaarg.in_reg1153:                                 ; preds = %sw.bb1149
  %630 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %629, i32 0, i32 3, !dbg !3977
  %reg_save_area1154 = load i8*, i8** %630, align 8, !dbg !3977
  %631 = getelementptr i8, i8* %reg_save_area1154, i32 %gp_offset1151, !dbg !3977
  %632 = bitcast i8* %631 to i64*, !dbg !3977
  %633 = add i32 %gp_offset1151, 8, !dbg !3977
  store i32 %633, i32* %gp_offset_p1150, align 8, !dbg !3977
  br label %vaarg.end1159, !dbg !3977

vaarg.in_mem1155:                                 ; preds = %sw.bb1149
  %overflow_arg_area_p1156 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %629, i32 0, i32 2, !dbg !3978
  %overflow_arg_area1157 = load i8*, i8** %overflow_arg_area_p1156, align 8, !dbg !3978
  %634 = bitcast i8* %overflow_arg_area1157 to i64*, !dbg !3978
  %overflow_arg_area.next1158 = getelementptr i8, i8* %overflow_arg_area1157, i32 8, !dbg !3978
  store i8* %overflow_arg_area.next1158, i8** %overflow_arg_area_p1156, align 8, !dbg !3978
  br label %vaarg.end1159, !dbg !3978

vaarg.end1159:                                    ; preds = %vaarg.in_mem1155, %vaarg.in_reg1153
  %vaarg.addr1160 = phi i64* [ %632, %vaarg.in_reg1153 ], [ %634, %vaarg.in_mem1155 ], !dbg !3979
  %635 = load i64, i64* %vaarg.addr1160, align 8, !dbg !3979
  %636 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3980
  %set1161 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %636, i32 0, i32 13, !dbg !3981
  %proxyport = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1161, i32 0, i32 3, !dbg !3982
  store i64 %635, i64* %proxyport, align 8, !dbg !3983
  br label %sw.epilog3648, !dbg !3984

sw.bb1162:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bitcheck1163, metadata !3985, metadata !2256), !dbg !3987
  call void @llvm.dbg.declare(metadata i8* %authbits1164, metadata !3988, metadata !2256), !dbg !3989
  call void @llvm.dbg.declare(metadata i64* %auth1165, metadata !3990, metadata !2256), !dbg !3991
  %637 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !3992
  %gp_offset_p1166 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %637, i32 0, i32 0, !dbg !3992
  %gp_offset1167 = load i32, i32* %gp_offset_p1166, align 8, !dbg !3992
  %fits_in_gp1168 = icmp ule i32 %gp_offset1167, 40, !dbg !3992
  br i1 %fits_in_gp1168, label %vaarg.in_reg1169, label %vaarg.in_mem1171, !dbg !3992

vaarg.in_reg1169:                                 ; preds = %sw.bb1162
  %638 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %637, i32 0, i32 3, !dbg !3993
  %reg_save_area1170 = load i8*, i8** %638, align 8, !dbg !3993
  %639 = getelementptr i8, i8* %reg_save_area1170, i32 %gp_offset1167, !dbg !3993
  %640 = bitcast i8* %639 to i64*, !dbg !3993
  %641 = add i32 %gp_offset1167, 8, !dbg !3993
  store i32 %641, i32* %gp_offset_p1166, align 8, !dbg !3993
  br label %vaarg.end1175, !dbg !3993

vaarg.in_mem1171:                                 ; preds = %sw.bb1162
  %overflow_arg_area_p1172 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %637, i32 0, i32 2, !dbg !3995
  %overflow_arg_area1173 = load i8*, i8** %overflow_arg_area_p1172, align 8, !dbg !3995
  %642 = bitcast i8* %overflow_arg_area1173 to i64*, !dbg !3995
  %overflow_arg_area.next1174 = getelementptr i8, i8* %overflow_arg_area1173, i32 8, !dbg !3995
  store i8* %overflow_arg_area.next1174, i8** %overflow_arg_area_p1172, align 8, !dbg !3995
  br label %vaarg.end1175, !dbg !3995

vaarg.end1175:                                    ; preds = %vaarg.in_mem1171, %vaarg.in_reg1169
  %vaarg.addr1176 = phi i64* [ %640, %vaarg.in_reg1169 ], [ %642, %vaarg.in_mem1171 ], !dbg !3997
  %643 = load i64, i64* %vaarg.addr1176, align 8, !dbg !3997
  store i64 %643, i64* %auth1165, align 8, !dbg !3999
  %644 = load i64, i64* %auth1165, align 8, !dbg !4000
  %cmp1177 = icmp eq i64 %644, 0, !dbg !4002
  br i1 %cmp1177, label %if.then1179, label %if.end1181, !dbg !4003

if.then1179:                                      ; preds = %vaarg.end1175
  %645 = load i64, i64* %auth1165, align 8, !dbg !4004
  %646 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4006
  %set1180 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %646, i32 0, i32 13, !dbg !4007
  %proxyauth = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1180, i32 0, i32 10, !dbg !4008
  store i64 %645, i64* %proxyauth, align 8, !dbg !4009
  br label %sw.epilog3648, !dbg !4010

if.end1181:                                       ; preds = %vaarg.end1175
  %647 = load i64, i64* %auth1165, align 8, !dbg !4011
  %and1182 = and i64 %647, 16, !dbg !4012
  %tobool1183 = icmp ne i64 %and1182, 0, !dbg !4013
  %cond1184 = select i1 %tobool1183, i32 1, i32 0, !dbg !4013
  %tobool1185 = icmp ne i32 %cond1184, 0, !dbg !4013
  %648 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4014
  %state1186 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %648, i32 0, i32 17, !dbg !4015
  %authproxy = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1186, i32 0, i32 24, !dbg !4016
  %iestyle1187 = getelementptr inbounds %struct.auth, %struct.auth* %authproxy, i32 0, i32 5, !dbg !4017
  %frombool1188 = zext i1 %tobool1185 to i8, !dbg !4018
  store i8 %frombool1188, i8* %iestyle1187, align 2, !dbg !4018
  %649 = load i64, i64* %auth1165, align 8, !dbg !4019
  %and1189 = and i64 %649, 16, !dbg !4021
  %tobool1190 = icmp ne i64 %and1189, 0, !dbg !4021
  br i1 %tobool1190, label %if.then1191, label %if.end1194, !dbg !4022

if.then1191:                                      ; preds = %if.end1181
  %650 = load i64, i64* %auth1165, align 8, !dbg !4023
  %or1192 = or i64 %650, 2, !dbg !4023
  store i64 %or1192, i64* %auth1165, align 8, !dbg !4023
  %651 = load i64, i64* %auth1165, align 8, !dbg !4025
  %and1193 = and i64 %651, -17, !dbg !4025
  store i64 %and1193, i64* %auth1165, align 8, !dbg !4025
  br label %if.end1194, !dbg !4026

if.end1194:                                       ; preds = %if.then1191, %if.end1181
  %652 = load i64, i64* %auth1165, align 8, !dbg !4027
  %and1195 = and i64 %652, -9, !dbg !4027
  store i64 %and1195, i64* %auth1165, align 8, !dbg !4027
  %653 = load i64, i64* %auth1165, align 8, !dbg !4028
  %and1196 = and i64 %653, -33, !dbg !4028
  store i64 %and1196, i64* %auth1165, align 8, !dbg !4028
  %654 = load i64, i64* %auth1165, align 8, !dbg !4029
  %and1197 = and i64 %654, -5, !dbg !4029
  store i64 %and1197, i64* %auth1165, align 8, !dbg !4029
  store i32 0, i32* %bitcheck1163, align 4, !dbg !4030
  store i8 0, i8* %authbits1164, align 1, !dbg !4031
  br label %while.cond1198, !dbg !4032

while.cond1198:                                   ; preds = %if.end1208, %if.end1194
  %655 = load i32, i32* %bitcheck1163, align 4, !dbg !4033
  %cmp1199 = icmp slt i32 %655, 31, !dbg !4034
  br i1 %cmp1199, label %while.body1201, label %while.end1209, !dbg !4035

while.body1201:                                   ; preds = %while.cond1198
  %656 = load i64, i64* %auth1165, align 8, !dbg !4036
  %657 = load i32, i32* %bitcheck1163, align 4, !dbg !4039
  %inc1202 = add nsw i32 %657, 1, !dbg !4039
  store i32 %inc1202, i32* %bitcheck1163, align 4, !dbg !4039
  %sh_prom1203 = zext i32 %657 to i64, !dbg !4040
  %shl1204 = shl i64 1, %sh_prom1203, !dbg !4040
  %and1205 = and i64 %656, %shl1204, !dbg !4041
  %tobool1206 = icmp ne i64 %and1205, 0, !dbg !4041
  br i1 %tobool1206, label %if.then1207, label %if.end1208, !dbg !4042

if.then1207:                                      ; preds = %while.body1201
  store i8 1, i8* %authbits1164, align 1, !dbg !4043
  br label %while.end1209, !dbg !4045

if.end1208:                                       ; preds = %while.body1201
  br label %while.cond1198, !dbg !4046

while.end1209:                                    ; preds = %if.then1207, %while.cond1198
  %658 = load i8, i8* %authbits1164, align 1, !dbg !4047
  %tobool1210 = trunc i8 %658 to i1, !dbg !4047
  br i1 %tobool1210, label %if.end1212, label %if.then1211, !dbg !4049

if.then1211:                                      ; preds = %while.end1209
  store i32 4, i32* %retval, align 4, !dbg !4050
  br label %return, !dbg !4050

if.end1212:                                       ; preds = %while.end1209
  %659 = load i64, i64* %auth1165, align 8, !dbg !4051
  %660 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4052
  %set1213 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %660, i32 0, i32 13, !dbg !4053
  %proxyauth1214 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1213, i32 0, i32 10, !dbg !4054
  store i64 %659, i64* %proxyauth1214, align 8, !dbg !4055
  br label %sw.epilog3648, !dbg !4056

sw.bb1215:                                        ; preds = %entry
  %661 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4057
  %set1216 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %661, i32 0, i32 13, !dbg !4058
  %str1217 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1216, i32 0, i32 128, !dbg !4059
  %arrayidx1218 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1217, i64 0, i64 21, !dbg !4057
  %662 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4060
  %gp_offset_p1219 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %662, i32 0, i32 0, !dbg !4060
  %gp_offset1220 = load i32, i32* %gp_offset_p1219, align 8, !dbg !4060
  %fits_in_gp1221 = icmp ule i32 %gp_offset1220, 40, !dbg !4060
  br i1 %fits_in_gp1221, label %vaarg.in_reg1222, label %vaarg.in_mem1224, !dbg !4060

vaarg.in_reg1222:                                 ; preds = %sw.bb1215
  %663 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %662, i32 0, i32 3, !dbg !4061
  %reg_save_area1223 = load i8*, i8** %663, align 8, !dbg !4061
  %664 = getelementptr i8, i8* %reg_save_area1223, i32 %gp_offset1220, !dbg !4061
  %665 = bitcast i8* %664 to i8**, !dbg !4061
  %666 = add i32 %gp_offset1220, 8, !dbg !4061
  store i32 %666, i32* %gp_offset_p1219, align 8, !dbg !4061
  br label %vaarg.end1228, !dbg !4061

vaarg.in_mem1224:                                 ; preds = %sw.bb1215
  %overflow_arg_area_p1225 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %662, i32 0, i32 2, !dbg !4062
  %overflow_arg_area1226 = load i8*, i8** %overflow_arg_area_p1225, align 8, !dbg !4062
  %667 = bitcast i8* %overflow_arg_area1226 to i8**, !dbg !4062
  %overflow_arg_area.next1227 = getelementptr i8, i8* %overflow_arg_area1226, i32 8, !dbg !4062
  store i8* %overflow_arg_area.next1227, i8** %overflow_arg_area_p1225, align 8, !dbg !4062
  br label %vaarg.end1228, !dbg !4062

vaarg.end1228:                                    ; preds = %vaarg.in_mem1224, %vaarg.in_reg1222
  %vaarg.addr1229 = phi i8** [ %665, %vaarg.in_reg1222 ], [ %667, %vaarg.in_mem1224 ], !dbg !4063
  %668 = load i8*, i8** %vaarg.addr1229, align 8, !dbg !4063
  %call1230 = call i32 @setstropt(i8** %arrayidx1218, i8* %668), !dbg !4064
  store i32 %call1230, i32* %result, align 4, !dbg !4065
  br label %sw.epilog3648, !dbg !4066

sw.bb1231:                                        ; preds = %entry
  %669 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4067
  %set1232 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %669, i32 0, i32 13, !dbg !4068
  %str1233 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1232, i32 0, i32 128, !dbg !4069
  %arrayidx1234 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1233, i64 0, i64 22, !dbg !4067
  %670 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4070
  %gp_offset_p1235 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %670, i32 0, i32 0, !dbg !4070
  %gp_offset1236 = load i32, i32* %gp_offset_p1235, align 8, !dbg !4070
  %fits_in_gp1237 = icmp ule i32 %gp_offset1236, 40, !dbg !4070
  br i1 %fits_in_gp1237, label %vaarg.in_reg1238, label %vaarg.in_mem1240, !dbg !4070

vaarg.in_reg1238:                                 ; preds = %sw.bb1231
  %671 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %670, i32 0, i32 3, !dbg !4071
  %reg_save_area1239 = load i8*, i8** %671, align 8, !dbg !4071
  %672 = getelementptr i8, i8* %reg_save_area1239, i32 %gp_offset1236, !dbg !4071
  %673 = bitcast i8* %672 to i8**, !dbg !4071
  %674 = add i32 %gp_offset1236, 8, !dbg !4071
  store i32 %674, i32* %gp_offset_p1235, align 8, !dbg !4071
  br label %vaarg.end1244, !dbg !4071

vaarg.in_mem1240:                                 ; preds = %sw.bb1231
  %overflow_arg_area_p1241 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %670, i32 0, i32 2, !dbg !4072
  %overflow_arg_area1242 = load i8*, i8** %overflow_arg_area_p1241, align 8, !dbg !4072
  %675 = bitcast i8* %overflow_arg_area1242 to i8**, !dbg !4072
  %overflow_arg_area.next1243 = getelementptr i8, i8* %overflow_arg_area1242, i32 8, !dbg !4072
  store i8* %overflow_arg_area.next1243, i8** %overflow_arg_area_p1241, align 8, !dbg !4072
  br label %vaarg.end1244, !dbg !4072

vaarg.end1244:                                    ; preds = %vaarg.in_mem1240, %vaarg.in_reg1238
  %vaarg.addr1245 = phi i8** [ %673, %vaarg.in_reg1238 ], [ %675, %vaarg.in_mem1240 ], !dbg !4073
  %676 = load i8*, i8** %vaarg.addr1245, align 8, !dbg !4073
  %call1246 = call i32 @setstropt(i8** %arrayidx1234, i8* %676), !dbg !4074
  store i32 %call1246, i32* %result, align 4, !dbg !4075
  br label %sw.epilog3648, !dbg !4076

sw.bb1247:                                        ; preds = %entry
  %677 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4077
  %gp_offset_p1248 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %677, i32 0, i32 0, !dbg !4077
  %gp_offset1249 = load i32, i32* %gp_offset_p1248, align 8, !dbg !4077
  %fits_in_gp1250 = icmp ule i32 %gp_offset1249, 40, !dbg !4077
  br i1 %fits_in_gp1250, label %vaarg.in_reg1251, label %vaarg.in_mem1253, !dbg !4077

vaarg.in_reg1251:                                 ; preds = %sw.bb1247
  %678 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %677, i32 0, i32 3, !dbg !4078
  %reg_save_area1252 = load i8*, i8** %678, align 8, !dbg !4078
  %679 = getelementptr i8, i8* %reg_save_area1252, i32 %gp_offset1249, !dbg !4078
  %680 = bitcast i8* %679 to i64*, !dbg !4078
  %681 = add i32 %gp_offset1249, 8, !dbg !4078
  store i32 %681, i32* %gp_offset_p1248, align 8, !dbg !4078
  br label %vaarg.end1257, !dbg !4078

vaarg.in_mem1253:                                 ; preds = %sw.bb1247
  %overflow_arg_area_p1254 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %677, i32 0, i32 2, !dbg !4079
  %overflow_arg_area1255 = load i8*, i8** %overflow_arg_area_p1254, align 8, !dbg !4079
  %682 = bitcast i8* %overflow_arg_area1255 to i64*, !dbg !4079
  %overflow_arg_area.next1256 = getelementptr i8, i8* %overflow_arg_area1255, i32 8, !dbg !4079
  store i8* %overflow_arg_area.next1256, i8** %overflow_arg_area_p1254, align 8, !dbg !4079
  br label %vaarg.end1257, !dbg !4079

vaarg.end1257:                                    ; preds = %vaarg.in_mem1253, %vaarg.in_reg1251
  %vaarg.addr1258 = phi i64* [ %680, %vaarg.in_reg1251 ], [ %682, %vaarg.in_mem1253 ], !dbg !4080
  %683 = load i64, i64* %vaarg.addr1258, align 8, !dbg !4080
  %conv1259 = trunc i64 %683 to i32, !dbg !4081
  %684 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4082
  %set1260 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %684, i32 0, i32 13, !dbg !4083
  %proxytype = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1260, i32 0, i32 76, !dbg !4084
  store i32 %conv1259, i32* %proxytype, align 8, !dbg !4085
  br label %sw.epilog3648, !dbg !4086

sw.bb1261:                                        ; preds = %entry
  %685 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4087
  %gp_offset_p1262 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %685, i32 0, i32 0, !dbg !4087
  %gp_offset1263 = load i32, i32* %gp_offset_p1262, align 8, !dbg !4087
  %fits_in_gp1264 = icmp ule i32 %gp_offset1263, 40, !dbg !4087
  br i1 %fits_in_gp1264, label %vaarg.in_reg1265, label %vaarg.in_mem1267, !dbg !4087

vaarg.in_reg1265:                                 ; preds = %sw.bb1261
  %686 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %685, i32 0, i32 3, !dbg !4088
  %reg_save_area1266 = load i8*, i8** %686, align 8, !dbg !4088
  %687 = getelementptr i8, i8* %reg_save_area1266, i32 %gp_offset1263, !dbg !4088
  %688 = bitcast i8* %687 to i64*, !dbg !4088
  %689 = add i32 %gp_offset1263, 8, !dbg !4088
  store i32 %689, i32* %gp_offset_p1262, align 8, !dbg !4088
  br label %vaarg.end1271, !dbg !4088

vaarg.in_mem1267:                                 ; preds = %sw.bb1261
  %overflow_arg_area_p1268 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %685, i32 0, i32 2, !dbg !4089
  %overflow_arg_area1269 = load i8*, i8** %overflow_arg_area_p1268, align 8, !dbg !4089
  %690 = bitcast i8* %overflow_arg_area1269 to i64*, !dbg !4089
  %overflow_arg_area.next1270 = getelementptr i8, i8* %overflow_arg_area1269, i32 8, !dbg !4089
  store i8* %overflow_arg_area.next1270, i8** %overflow_arg_area_p1268, align 8, !dbg !4089
  br label %vaarg.end1271, !dbg !4089

vaarg.end1271:                                    ; preds = %vaarg.in_mem1267, %vaarg.in_reg1265
  %vaarg.addr1272 = phi i64* [ %688, %vaarg.in_reg1265 ], [ %690, %vaarg.in_mem1267 ], !dbg !4090
  %691 = load i64, i64* %vaarg.addr1272, align 8, !dbg !4090
  switch i64 %691, label %sw.default1278 [
    i64 0, label %sw.bb1273
    i64 1, label %sw.bb1275
  ], !dbg !4091

sw.bb1273:                                        ; preds = %vaarg.end1271
  %692 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4092
  %set1274 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %692, i32 0, i32 13, !dbg !4094
  %proxy_transfer_mode = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1274, i32 0, i32 127, !dbg !4095
  store i8 0, i8* %proxy_transfer_mode, align 8, !dbg !4096
  br label %sw.epilog1279, !dbg !4097

sw.bb1275:                                        ; preds = %vaarg.end1271
  %693 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4098
  %set1276 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %693, i32 0, i32 13, !dbg !4099
  %proxy_transfer_mode1277 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1276, i32 0, i32 127, !dbg !4100
  store i8 1, i8* %proxy_transfer_mode1277, align 8, !dbg !4101
  br label %sw.epilog1279, !dbg !4102

sw.default1278:                                   ; preds = %vaarg.end1271
  store i32 48, i32* %result, align 4, !dbg !4103
  br label %sw.epilog1279, !dbg !4104

sw.epilog1279:                                    ; preds = %sw.default1278, %sw.bb1275, %sw.bb1273
  br label %sw.epilog3648, !dbg !4105

sw.bb1280:                                        ; preds = %entry
  %694 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4106
  %set1281 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %694, i32 0, i32 13, !dbg !4107
  %str1282 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1281, i32 0, i32 128, !dbg !4108
  %arrayidx1283 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1282, i64 0, i64 50, !dbg !4106
  %695 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4109
  %gp_offset_p1284 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %695, i32 0, i32 0, !dbg !4109
  %gp_offset1285 = load i32, i32* %gp_offset_p1284, align 8, !dbg !4109
  %fits_in_gp1286 = icmp ule i32 %gp_offset1285, 40, !dbg !4109
  br i1 %fits_in_gp1286, label %vaarg.in_reg1287, label %vaarg.in_mem1289, !dbg !4109

vaarg.in_reg1287:                                 ; preds = %sw.bb1280
  %696 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %695, i32 0, i32 3, !dbg !4110
  %reg_save_area1288 = load i8*, i8** %696, align 8, !dbg !4110
  %697 = getelementptr i8, i8* %reg_save_area1288, i32 %gp_offset1285, !dbg !4110
  %698 = bitcast i8* %697 to i8**, !dbg !4110
  %699 = add i32 %gp_offset1285, 8, !dbg !4110
  store i32 %699, i32* %gp_offset_p1284, align 8, !dbg !4110
  br label %vaarg.end1293, !dbg !4110

vaarg.in_mem1289:                                 ; preds = %sw.bb1280
  %overflow_arg_area_p1290 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %695, i32 0, i32 2, !dbg !4111
  %overflow_arg_area1291 = load i8*, i8** %overflow_arg_area_p1290, align 8, !dbg !4111
  %700 = bitcast i8* %overflow_arg_area1291 to i8**, !dbg !4111
  %overflow_arg_area.next1292 = getelementptr i8, i8* %overflow_arg_area1291, i32 8, !dbg !4111
  store i8* %overflow_arg_area.next1292, i8** %overflow_arg_area_p1290, align 8, !dbg !4111
  br label %vaarg.end1293, !dbg !4111

vaarg.end1293:                                    ; preds = %vaarg.in_mem1289, %vaarg.in_reg1287
  %vaarg.addr1294 = phi i8** [ %698, %vaarg.in_reg1287 ], [ %700, %vaarg.in_mem1289 ], !dbg !4112
  %701 = load i8*, i8** %vaarg.addr1294, align 8, !dbg !4112
  %call1295 = call i32 @setstropt(i8** %arrayidx1283, i8* %701), !dbg !4113
  store i32 %call1295, i32* %result, align 4, !dbg !4114
  br label %sw.epilog3648, !dbg !4115

sw.bb1296:                                        ; preds = %entry
  %702 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4116
  %gp_offset_p1297 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %702, i32 0, i32 0, !dbg !4116
  %gp_offset1298 = load i32, i32* %gp_offset_p1297, align 8, !dbg !4116
  %fits_in_gp1299 = icmp ule i32 %gp_offset1298, 40, !dbg !4116
  br i1 %fits_in_gp1299, label %vaarg.in_reg1300, label %vaarg.in_mem1302, !dbg !4116

vaarg.in_reg1300:                                 ; preds = %sw.bb1296
  %703 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %702, i32 0, i32 3, !dbg !4117
  %reg_save_area1301 = load i8*, i8** %703, align 8, !dbg !4117
  %704 = getelementptr i8, i8* %reg_save_area1301, i32 %gp_offset1298, !dbg !4117
  %705 = bitcast i8* %704 to i8**, !dbg !4117
  %706 = add i32 %gp_offset1298, 8, !dbg !4117
  store i32 %706, i32* %gp_offset_p1297, align 8, !dbg !4117
  br label %vaarg.end1306, !dbg !4117

vaarg.in_mem1302:                                 ; preds = %sw.bb1296
  %overflow_arg_area_p1303 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %702, i32 0, i32 2, !dbg !4118
  %overflow_arg_area1304 = load i8*, i8** %overflow_arg_area_p1303, align 8, !dbg !4118
  %707 = bitcast i8* %overflow_arg_area1304 to i8**, !dbg !4118
  %overflow_arg_area.next1305 = getelementptr i8, i8* %overflow_arg_area1304, i32 8, !dbg !4118
  store i8* %overflow_arg_area.next1305, i8** %overflow_arg_area_p1303, align 8, !dbg !4118
  br label %vaarg.end1306, !dbg !4118

vaarg.end1306:                                    ; preds = %vaarg.in_mem1302, %vaarg.in_reg1300
  %vaarg.addr1307 = phi i8** [ %705, %vaarg.in_reg1300 ], [ %707, %vaarg.in_mem1302 ], !dbg !4119
  %708 = load i8*, i8** %vaarg.addr1307, align 8, !dbg !4119
  %709 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4120
  %set1308 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %709, i32 0, i32 13, !dbg !4121
  %writeheader = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1308, i32 0, i32 6, !dbg !4122
  store i8* %708, i8** %writeheader, align 8, !dbg !4123
  br label %sw.epilog3648, !dbg !4124

sw.bb1309:                                        ; preds = %entry
  %710 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4125
  %gp_offset_p1310 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %710, i32 0, i32 0, !dbg !4125
  %gp_offset1311 = load i32, i32* %gp_offset_p1310, align 8, !dbg !4125
  %fits_in_gp1312 = icmp ule i32 %gp_offset1311, 40, !dbg !4125
  br i1 %fits_in_gp1312, label %vaarg.in_reg1313, label %vaarg.in_mem1315, !dbg !4125

vaarg.in_reg1313:                                 ; preds = %sw.bb1309
  %711 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %710, i32 0, i32 3, !dbg !4126
  %reg_save_area1314 = load i8*, i8** %711, align 8, !dbg !4126
  %712 = getelementptr i8, i8* %reg_save_area1314, i32 %gp_offset1311, !dbg !4126
  %713 = bitcast i8* %712 to i8**, !dbg !4126
  %714 = add i32 %gp_offset1311, 8, !dbg !4126
  store i32 %714, i32* %gp_offset_p1310, align 8, !dbg !4126
  br label %vaarg.end1319, !dbg !4126

vaarg.in_mem1315:                                 ; preds = %sw.bb1309
  %overflow_arg_area_p1316 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %710, i32 0, i32 2, !dbg !4127
  %overflow_arg_area1317 = load i8*, i8** %overflow_arg_area_p1316, align 8, !dbg !4127
  %715 = bitcast i8* %overflow_arg_area1317 to i8**, !dbg !4127
  %overflow_arg_area.next1318 = getelementptr i8, i8* %overflow_arg_area1317, i32 8, !dbg !4127
  store i8* %overflow_arg_area.next1318, i8** %overflow_arg_area_p1316, align 8, !dbg !4127
  br label %vaarg.end1319, !dbg !4127

vaarg.end1319:                                    ; preds = %vaarg.in_mem1315, %vaarg.in_reg1313
  %vaarg.addr1320 = phi i8** [ %713, %vaarg.in_reg1313 ], [ %715, %vaarg.in_mem1315 ], !dbg !4128
  %716 = load i8*, i8** %vaarg.addr1320, align 8, !dbg !4128
  %717 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4129
  %set1321 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %717, i32 0, i32 13, !dbg !4130
  %errorbuffer = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1321, i32 0, i32 2, !dbg !4131
  store i8* %716, i8** %errorbuffer, align 8, !dbg !4132
  br label %sw.epilog3648, !dbg !4133

sw.bb1322:                                        ; preds = %entry
  %718 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4134
  %gp_offset_p1323 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %718, i32 0, i32 0, !dbg !4134
  %gp_offset1324 = load i32, i32* %gp_offset_p1323, align 8, !dbg !4134
  %fits_in_gp1325 = icmp ule i32 %gp_offset1324, 40, !dbg !4134
  br i1 %fits_in_gp1325, label %vaarg.in_reg1326, label %vaarg.in_mem1328, !dbg !4134

vaarg.in_reg1326:                                 ; preds = %sw.bb1322
  %719 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %718, i32 0, i32 3, !dbg !4135
  %reg_save_area1327 = load i8*, i8** %719, align 8, !dbg !4135
  %720 = getelementptr i8, i8* %reg_save_area1327, i32 %gp_offset1324, !dbg !4135
  %721 = bitcast i8* %720 to i8**, !dbg !4135
  %722 = add i32 %gp_offset1324, 8, !dbg !4135
  store i32 %722, i32* %gp_offset_p1323, align 8, !dbg !4135
  br label %vaarg.end1332, !dbg !4135

vaarg.in_mem1328:                                 ; preds = %sw.bb1322
  %overflow_arg_area_p1329 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %718, i32 0, i32 2, !dbg !4136
  %overflow_arg_area1330 = load i8*, i8** %overflow_arg_area_p1329, align 8, !dbg !4136
  %723 = bitcast i8* %overflow_arg_area1330 to i8**, !dbg !4136
  %overflow_arg_area.next1331 = getelementptr i8, i8* %overflow_arg_area1330, i32 8, !dbg !4136
  store i8* %overflow_arg_area.next1331, i8** %overflow_arg_area_p1329, align 8, !dbg !4136
  br label %vaarg.end1332, !dbg !4136

vaarg.end1332:                                    ; preds = %vaarg.in_mem1328, %vaarg.in_reg1326
  %vaarg.addr1333 = phi i8** [ %721, %vaarg.in_reg1326 ], [ %723, %vaarg.in_mem1328 ], !dbg !4137
  %724 = load i8*, i8** %vaarg.addr1333, align 8, !dbg !4137
  %725 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4138
  %set1334 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %725, i32 0, i32 13, !dbg !4139
  %out = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1334, i32 0, i32 4, !dbg !4140
  store i8* %724, i8** %out, align 8, !dbg !4141
  br label %sw.epilog3648, !dbg !4142

sw.bb1335:                                        ; preds = %entry
  %726 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4143
  %set1336 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %726, i32 0, i32 13, !dbg !4144
  %str1337 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1336, i32 0, i32 128, !dbg !4145
  %arrayidx1338 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1337, i64 0, i64 12, !dbg !4143
  %727 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4146
  %gp_offset_p1339 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %727, i32 0, i32 0, !dbg !4146
  %gp_offset1340 = load i32, i32* %gp_offset_p1339, align 8, !dbg !4146
  %fits_in_gp1341 = icmp ule i32 %gp_offset1340, 40, !dbg !4146
  br i1 %fits_in_gp1341, label %vaarg.in_reg1342, label %vaarg.in_mem1344, !dbg !4146

vaarg.in_reg1342:                                 ; preds = %sw.bb1335
  %728 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %727, i32 0, i32 3, !dbg !4147
  %reg_save_area1343 = load i8*, i8** %728, align 8, !dbg !4147
  %729 = getelementptr i8, i8* %reg_save_area1343, i32 %gp_offset1340, !dbg !4147
  %730 = bitcast i8* %729 to i8**, !dbg !4147
  %731 = add i32 %gp_offset1340, 8, !dbg !4147
  store i32 %731, i32* %gp_offset_p1339, align 8, !dbg !4147
  br label %vaarg.end1348, !dbg !4147

vaarg.in_mem1344:                                 ; preds = %sw.bb1335
  %overflow_arg_area_p1345 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %727, i32 0, i32 2, !dbg !4148
  %overflow_arg_area1346 = load i8*, i8** %overflow_arg_area_p1345, align 8, !dbg !4148
  %732 = bitcast i8* %overflow_arg_area1346 to i8**, !dbg !4148
  %overflow_arg_area.next1347 = getelementptr i8, i8* %overflow_arg_area1346, i32 8, !dbg !4148
  store i8* %overflow_arg_area.next1347, i8** %overflow_arg_area_p1345, align 8, !dbg !4148
  br label %vaarg.end1348, !dbg !4148

vaarg.end1348:                                    ; preds = %vaarg.in_mem1344, %vaarg.in_reg1342
  %vaarg.addr1349 = phi i8** [ %730, %vaarg.in_reg1342 ], [ %732, %vaarg.in_mem1344 ], !dbg !4149
  %733 = load i8*, i8** %vaarg.addr1349, align 8, !dbg !4149
  %call1350 = call i32 @setstropt(i8** %arrayidx1338, i8* %733), !dbg !4150
  store i32 %call1350, i32* %result, align 4, !dbg !4151
  %734 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4152
  %set1351 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %734, i32 0, i32 13, !dbg !4153
  %str1352 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1351, i32 0, i32 128, !dbg !4154
  %arrayidx1353 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1352, i64 0, i64 12, !dbg !4152
  %735 = load i8*, i8** %arrayidx1353, align 8, !dbg !4152
  %tobool1354 = icmp ne i8* %735, null, !dbg !4155
  %cond1355 = select i1 %tobool1354, i32 1, i32 0, !dbg !4155
  %tobool1356 = icmp ne i32 %cond1355, 0, !dbg !4155
  %736 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4156
  %set1357 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %736, i32 0, i32 13, !dbg !4157
  %ftp_use_port = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1357, i32 0, i32 93, !dbg !4158
  %frombool1358 = zext i1 %tobool1356 to i8, !dbg !4159
  store i8 %frombool1358, i8* %ftp_use_port, align 2, !dbg !4159
  br label %sw.epilog3648, !dbg !4160

sw.bb1359:                                        ; preds = %entry
  %737 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4161
  %gp_offset_p1360 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %737, i32 0, i32 0, !dbg !4161
  %gp_offset1361 = load i32, i32* %gp_offset_p1360, align 8, !dbg !4161
  %fits_in_gp1362 = icmp ule i32 %gp_offset1361, 40, !dbg !4161
  br i1 %fits_in_gp1362, label %vaarg.in_reg1363, label %vaarg.in_mem1365, !dbg !4161

vaarg.in_reg1363:                                 ; preds = %sw.bb1359
  %738 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %737, i32 0, i32 3, !dbg !4162
  %reg_save_area1364 = load i8*, i8** %738, align 8, !dbg !4162
  %739 = getelementptr i8, i8* %reg_save_area1364, i32 %gp_offset1361, !dbg !4162
  %740 = bitcast i8* %739 to i64*, !dbg !4162
  %741 = add i32 %gp_offset1361, 8, !dbg !4162
  store i32 %741, i32* %gp_offset_p1360, align 8, !dbg !4162
  br label %vaarg.end1369, !dbg !4162

vaarg.in_mem1365:                                 ; preds = %sw.bb1359
  %overflow_arg_area_p1366 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %737, i32 0, i32 2, !dbg !4163
  %overflow_arg_area1367 = load i8*, i8** %overflow_arg_area_p1366, align 8, !dbg !4163
  %742 = bitcast i8* %overflow_arg_area1367 to i64*, !dbg !4163
  %overflow_arg_area.next1368 = getelementptr i8, i8* %overflow_arg_area1367, i32 8, !dbg !4163
  store i8* %overflow_arg_area.next1368, i8** %overflow_arg_area_p1366, align 8, !dbg !4163
  br label %vaarg.end1369, !dbg !4163

vaarg.end1369:                                    ; preds = %vaarg.in_mem1365, %vaarg.in_reg1363
  %vaarg.addr1370 = phi i64* [ %740, %vaarg.in_reg1363 ], [ %742, %vaarg.in_mem1365 ], !dbg !4164
  %743 = load i64, i64* %vaarg.addr1370, align 8, !dbg !4164
  %cmp1371 = icmp ne i64 0, %743, !dbg !4165
  %cond1373 = select i1 %cmp1371, i32 1, i32 0, !dbg !4166
  %tobool1374 = icmp ne i32 %cond1373, 0, !dbg !4166
  %744 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4167
  %set1375 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %744, i32 0, i32 13, !dbg !4168
  %ftp_use_eprt = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1375, i32 0, i32 111, !dbg !4169
  %frombool1376 = zext i1 %tobool1374 to i8, !dbg !4170
  store i8 %frombool1376, i8* %ftp_use_eprt, align 1, !dbg !4170
  br label %sw.epilog3648, !dbg !4171

sw.bb1377:                                        ; preds = %entry
  %745 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4172
  %gp_offset_p1378 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %745, i32 0, i32 0, !dbg !4172
  %gp_offset1379 = load i32, i32* %gp_offset_p1378, align 8, !dbg !4172
  %fits_in_gp1380 = icmp ule i32 %gp_offset1379, 40, !dbg !4172
  br i1 %fits_in_gp1380, label %vaarg.in_reg1381, label %vaarg.in_mem1383, !dbg !4172

vaarg.in_reg1381:                                 ; preds = %sw.bb1377
  %746 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %745, i32 0, i32 3, !dbg !4173
  %reg_save_area1382 = load i8*, i8** %746, align 8, !dbg !4173
  %747 = getelementptr i8, i8* %reg_save_area1382, i32 %gp_offset1379, !dbg !4173
  %748 = bitcast i8* %747 to i64*, !dbg !4173
  %749 = add i32 %gp_offset1379, 8, !dbg !4173
  store i32 %749, i32* %gp_offset_p1378, align 8, !dbg !4173
  br label %vaarg.end1387, !dbg !4173

vaarg.in_mem1383:                                 ; preds = %sw.bb1377
  %overflow_arg_area_p1384 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %745, i32 0, i32 2, !dbg !4174
  %overflow_arg_area1385 = load i8*, i8** %overflow_arg_area_p1384, align 8, !dbg !4174
  %750 = bitcast i8* %overflow_arg_area1385 to i64*, !dbg !4174
  %overflow_arg_area.next1386 = getelementptr i8, i8* %overflow_arg_area1385, i32 8, !dbg !4174
  store i8* %overflow_arg_area.next1386, i8** %overflow_arg_area_p1384, align 8, !dbg !4174
  br label %vaarg.end1387, !dbg !4174

vaarg.end1387:                                    ; preds = %vaarg.in_mem1383, %vaarg.in_reg1381
  %vaarg.addr1388 = phi i64* [ %748, %vaarg.in_reg1381 ], [ %750, %vaarg.in_mem1383 ], !dbg !4175
  %751 = load i64, i64* %vaarg.addr1388, align 8, !dbg !4175
  %cmp1389 = icmp ne i64 0, %751, !dbg !4176
  %cond1391 = select i1 %cmp1389, i32 1, i32 0, !dbg !4177
  %tobool1392 = icmp ne i32 %cond1391, 0, !dbg !4177
  %752 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4178
  %set1393 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %752, i32 0, i32 13, !dbg !4179
  %ftp_use_epsv = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1393, i32 0, i32 110, !dbg !4180
  %frombool1394 = zext i1 %tobool1392 to i8, !dbg !4181
  store i8 %frombool1394, i8* %ftp_use_epsv, align 4, !dbg !4181
  br label %sw.epilog3648, !dbg !4182

sw.bb1395:                                        ; preds = %entry
  %753 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4183
  %gp_offset_p1396 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %753, i32 0, i32 0, !dbg !4183
  %gp_offset1397 = load i32, i32* %gp_offset_p1396, align 8, !dbg !4183
  %fits_in_gp1398 = icmp ule i32 %gp_offset1397, 40, !dbg !4183
  br i1 %fits_in_gp1398, label %vaarg.in_reg1399, label %vaarg.in_mem1401, !dbg !4183

vaarg.in_reg1399:                                 ; preds = %sw.bb1395
  %754 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %753, i32 0, i32 3, !dbg !4184
  %reg_save_area1400 = load i8*, i8** %754, align 8, !dbg !4184
  %755 = getelementptr i8, i8* %reg_save_area1400, i32 %gp_offset1397, !dbg !4184
  %756 = bitcast i8* %755 to i64*, !dbg !4184
  %757 = add i32 %gp_offset1397, 8, !dbg !4184
  store i32 %757, i32* %gp_offset_p1396, align 8, !dbg !4184
  br label %vaarg.end1405, !dbg !4184

vaarg.in_mem1401:                                 ; preds = %sw.bb1395
  %overflow_arg_area_p1402 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %753, i32 0, i32 2, !dbg !4185
  %overflow_arg_area1403 = load i8*, i8** %overflow_arg_area_p1402, align 8, !dbg !4185
  %758 = bitcast i8* %overflow_arg_area1403 to i64*, !dbg !4185
  %overflow_arg_area.next1404 = getelementptr i8, i8* %overflow_arg_area1403, i32 8, !dbg !4185
  store i8* %overflow_arg_area.next1404, i8** %overflow_arg_area_p1402, align 8, !dbg !4185
  br label %vaarg.end1405, !dbg !4185

vaarg.end1405:                                    ; preds = %vaarg.in_mem1401, %vaarg.in_reg1399
  %vaarg.addr1406 = phi i64* [ %756, %vaarg.in_reg1399 ], [ %758, %vaarg.in_mem1401 ], !dbg !4186
  %759 = load i64, i64* %vaarg.addr1406, align 8, !dbg !4186
  %cmp1407 = icmp ne i64 0, %759, !dbg !4187
  %cond1409 = select i1 %cmp1407, i32 1, i32 0, !dbg !4188
  %tobool1410 = icmp ne i32 %cond1409, 0, !dbg !4188
  %760 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4189
  %set1411 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %760, i32 0, i32 13, !dbg !4190
  %ftp_use_pret = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1411, i32 0, i32 112, !dbg !4191
  %frombool1412 = zext i1 %tobool1410 to i8, !dbg !4192
  store i8 %frombool1412, i8* %ftp_use_pret, align 2, !dbg !4192
  br label %sw.epilog3648, !dbg !4193

sw.bb1413:                                        ; preds = %entry
  %761 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4194
  %gp_offset_p1414 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %761, i32 0, i32 0, !dbg !4194
  %gp_offset1415 = load i32, i32* %gp_offset_p1414, align 8, !dbg !4194
  %fits_in_gp1416 = icmp ule i32 %gp_offset1415, 40, !dbg !4194
  br i1 %fits_in_gp1416, label %vaarg.in_reg1417, label %vaarg.in_mem1419, !dbg !4194

vaarg.in_reg1417:                                 ; preds = %sw.bb1413
  %762 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %761, i32 0, i32 3, !dbg !4195
  %reg_save_area1418 = load i8*, i8** %762, align 8, !dbg !4195
  %763 = getelementptr i8, i8* %reg_save_area1418, i32 %gp_offset1415, !dbg !4195
  %764 = bitcast i8* %763 to i64*, !dbg !4195
  %765 = add i32 %gp_offset1415, 8, !dbg !4195
  store i32 %765, i32* %gp_offset_p1414, align 8, !dbg !4195
  br label %vaarg.end1423, !dbg !4195

vaarg.in_mem1419:                                 ; preds = %sw.bb1413
  %overflow_arg_area_p1420 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %761, i32 0, i32 2, !dbg !4196
  %overflow_arg_area1421 = load i8*, i8** %overflow_arg_area_p1420, align 8, !dbg !4196
  %766 = bitcast i8* %overflow_arg_area1421 to i64*, !dbg !4196
  %overflow_arg_area.next1422 = getelementptr i8, i8* %overflow_arg_area1421, i32 8, !dbg !4196
  store i8* %overflow_arg_area.next1422, i8** %overflow_arg_area_p1420, align 8, !dbg !4196
  br label %vaarg.end1423, !dbg !4196

vaarg.end1423:                                    ; preds = %vaarg.in_mem1419, %vaarg.in_reg1417
  %vaarg.addr1424 = phi i64* [ %764, %vaarg.in_reg1417 ], [ %766, %vaarg.in_mem1419 ], !dbg !4197
  %767 = load i64, i64* %vaarg.addr1424, align 8, !dbg !4197
  %conv1425 = trunc i64 %767 to i32, !dbg !4198
  %768 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4199
  %set1426 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %768, i32 0, i32 13, !dbg !4200
  %ftp_ccc = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1426, i32 0, i32 115, !dbg !4201
  store i32 %conv1425, i32* %ftp_ccc, align 8, !dbg !4202
  br label %sw.epilog3648, !dbg !4203

sw.bb1427:                                        ; preds = %entry
  %769 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4204
  %gp_offset_p1428 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %769, i32 0, i32 0, !dbg !4204
  %gp_offset1429 = load i32, i32* %gp_offset_p1428, align 8, !dbg !4204
  %fits_in_gp1430 = icmp ule i32 %gp_offset1429, 40, !dbg !4204
  br i1 %fits_in_gp1430, label %vaarg.in_reg1431, label %vaarg.in_mem1433, !dbg !4204

vaarg.in_reg1431:                                 ; preds = %sw.bb1427
  %770 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %769, i32 0, i32 3, !dbg !4205
  %reg_save_area1432 = load i8*, i8** %770, align 8, !dbg !4205
  %771 = getelementptr i8, i8* %reg_save_area1432, i32 %gp_offset1429, !dbg !4205
  %772 = bitcast i8* %771 to i64*, !dbg !4205
  %773 = add i32 %gp_offset1429, 8, !dbg !4205
  store i32 %773, i32* %gp_offset_p1428, align 8, !dbg !4205
  br label %vaarg.end1437, !dbg !4205

vaarg.in_mem1433:                                 ; preds = %sw.bb1427
  %overflow_arg_area_p1434 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %769, i32 0, i32 2, !dbg !4206
  %overflow_arg_area1435 = load i8*, i8** %overflow_arg_area_p1434, align 8, !dbg !4206
  %774 = bitcast i8* %overflow_arg_area1435 to i64*, !dbg !4206
  %overflow_arg_area.next1436 = getelementptr i8, i8* %overflow_arg_area1435, i32 8, !dbg !4206
  store i8* %overflow_arg_area.next1436, i8** %overflow_arg_area_p1434, align 8, !dbg !4206
  br label %vaarg.end1437, !dbg !4206

vaarg.end1437:                                    ; preds = %vaarg.in_mem1433, %vaarg.in_reg1431
  %vaarg.addr1438 = phi i64* [ %772, %vaarg.in_reg1431 ], [ %774, %vaarg.in_mem1433 ], !dbg !4207
  %775 = load i64, i64* %vaarg.addr1438, align 8, !dbg !4207
  %cmp1439 = icmp ne i64 0, %775, !dbg !4208
  %cond1441 = select i1 %cmp1439, i32 1, i32 0, !dbg !4209
  %tobool1442 = icmp ne i32 %cond1441, 0, !dbg !4209
  %776 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4210
  %set1443 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %776, i32 0, i32 13, !dbg !4211
  %ftp_skip_ip = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1443, i32 0, i32 120, !dbg !4212
  %frombool1444 = zext i1 %tobool1442 to i8, !dbg !4213
  store i8 %frombool1444, i8* %ftp_skip_ip, align 8, !dbg !4213
  br label %sw.epilog3648, !dbg !4214

sw.bb1445:                                        ; preds = %entry
  %777 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4215
  %gp_offset_p1446 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %777, i32 0, i32 0, !dbg !4215
  %gp_offset1447 = load i32, i32* %gp_offset_p1446, align 8, !dbg !4215
  %fits_in_gp1448 = icmp ule i32 %gp_offset1447, 40, !dbg !4215
  br i1 %fits_in_gp1448, label %vaarg.in_reg1449, label %vaarg.in_mem1451, !dbg !4215

vaarg.in_reg1449:                                 ; preds = %sw.bb1445
  %778 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %777, i32 0, i32 3, !dbg !4216
  %reg_save_area1450 = load i8*, i8** %778, align 8, !dbg !4216
  %779 = getelementptr i8, i8* %reg_save_area1450, i32 %gp_offset1447, !dbg !4216
  %780 = bitcast i8* %779 to i8**, !dbg !4216
  %781 = add i32 %gp_offset1447, 8, !dbg !4216
  store i32 %781, i32* %gp_offset_p1446, align 8, !dbg !4216
  br label %vaarg.end1455, !dbg !4216

vaarg.in_mem1451:                                 ; preds = %sw.bb1445
  %overflow_arg_area_p1452 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %777, i32 0, i32 2, !dbg !4217
  %overflow_arg_area1453 = load i8*, i8** %overflow_arg_area_p1452, align 8, !dbg !4217
  %782 = bitcast i8* %overflow_arg_area1453 to i8**, !dbg !4217
  %overflow_arg_area.next1454 = getelementptr i8, i8* %overflow_arg_area1453, i32 8, !dbg !4217
  store i8* %overflow_arg_area.next1454, i8** %overflow_arg_area_p1452, align 8, !dbg !4217
  br label %vaarg.end1455, !dbg !4217

vaarg.end1455:                                    ; preds = %vaarg.in_mem1451, %vaarg.in_reg1449
  %vaarg.addr1456 = phi i8** [ %780, %vaarg.in_reg1449 ], [ %782, %vaarg.in_mem1451 ], !dbg !4218
  %783 = load i8*, i8** %vaarg.addr1456, align 8, !dbg !4218
  %784 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4219
  %set1457 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %784, i32 0, i32 13, !dbg !4220
  %in_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1457, i32 0, i32 5, !dbg !4221
  store i8* %783, i8** %in_set, align 8, !dbg !4222
  br label %sw.epilog3648, !dbg !4223

sw.bb1458:                                        ; preds = %entry
  %785 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4224
  %gp_offset_p1459 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %785, i32 0, i32 0, !dbg !4224
  %gp_offset1460 = load i32, i32* %gp_offset_p1459, align 8, !dbg !4224
  %fits_in_gp1461 = icmp ule i32 %gp_offset1460, 40, !dbg !4224
  br i1 %fits_in_gp1461, label %vaarg.in_reg1462, label %vaarg.in_mem1464, !dbg !4224

vaarg.in_reg1462:                                 ; preds = %sw.bb1458
  %786 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %785, i32 0, i32 3, !dbg !4225
  %reg_save_area1463 = load i8*, i8** %786, align 8, !dbg !4225
  %787 = getelementptr i8, i8* %reg_save_area1463, i32 %gp_offset1460, !dbg !4225
  %788 = bitcast i8* %787 to i64*, !dbg !4225
  %789 = add i32 %gp_offset1460, 8, !dbg !4225
  store i32 %789, i32* %gp_offset_p1459, align 8, !dbg !4225
  br label %vaarg.end1468, !dbg !4225

vaarg.in_mem1464:                                 ; preds = %sw.bb1458
  %overflow_arg_area_p1465 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %785, i32 0, i32 2, !dbg !4226
  %overflow_arg_area1466 = load i8*, i8** %overflow_arg_area_p1465, align 8, !dbg !4226
  %790 = bitcast i8* %overflow_arg_area1466 to i64*, !dbg !4226
  %overflow_arg_area.next1467 = getelementptr i8, i8* %overflow_arg_area1466, i32 8, !dbg !4226
  store i8* %overflow_arg_area.next1467, i8** %overflow_arg_area_p1465, align 8, !dbg !4226
  br label %vaarg.end1468, !dbg !4226

vaarg.end1468:                                    ; preds = %vaarg.in_mem1464, %vaarg.in_reg1462
  %vaarg.addr1469 = phi i64* [ %788, %vaarg.in_reg1462 ], [ %790, %vaarg.in_mem1464 ], !dbg !4227
  %791 = load i64, i64* %vaarg.addr1469, align 8, !dbg !4227
  %792 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4228
  %set1470 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %792, i32 0, i32 13, !dbg !4229
  %filesize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1470, i32 0, i32 48, !dbg !4230
  store i64 %791, i64* %filesize, align 8, !dbg !4231
  br label %sw.epilog3648, !dbg !4232

sw.bb1471:                                        ; preds = %entry
  %793 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4233
  %gp_offset_p1472 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %793, i32 0, i32 0, !dbg !4233
  %gp_offset1473 = load i32, i32* %gp_offset_p1472, align 8, !dbg !4233
  %fits_in_gp1474 = icmp ule i32 %gp_offset1473, 40, !dbg !4233
  br i1 %fits_in_gp1474, label %vaarg.in_reg1475, label %vaarg.in_mem1477, !dbg !4233

vaarg.in_reg1475:                                 ; preds = %sw.bb1471
  %794 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %793, i32 0, i32 3, !dbg !4234
  %reg_save_area1476 = load i8*, i8** %794, align 8, !dbg !4234
  %795 = getelementptr i8, i8* %reg_save_area1476, i32 %gp_offset1473, !dbg !4234
  %796 = bitcast i8* %795 to i64*, !dbg !4234
  %797 = add i32 %gp_offset1473, 8, !dbg !4234
  store i32 %797, i32* %gp_offset_p1472, align 8, !dbg !4234
  br label %vaarg.end1481, !dbg !4234

vaarg.in_mem1477:                                 ; preds = %sw.bb1471
  %overflow_arg_area_p1478 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %793, i32 0, i32 2, !dbg !4235
  %overflow_arg_area1479 = load i8*, i8** %overflow_arg_area_p1478, align 8, !dbg !4235
  %798 = bitcast i8* %overflow_arg_area1479 to i64*, !dbg !4235
  %overflow_arg_area.next1480 = getelementptr i8, i8* %overflow_arg_area1479, i32 8, !dbg !4235
  store i8* %overflow_arg_area.next1480, i8** %overflow_arg_area_p1478, align 8, !dbg !4235
  br label %vaarg.end1481, !dbg !4235

vaarg.end1481:                                    ; preds = %vaarg.in_mem1477, %vaarg.in_reg1475
  %vaarg.addr1482 = phi i64* [ %796, %vaarg.in_reg1475 ], [ %798, %vaarg.in_mem1477 ], !dbg !4236
  %799 = load i64, i64* %vaarg.addr1482, align 8, !dbg !4236
  %800 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4237
  %set1483 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %800, i32 0, i32 13, !dbg !4238
  %filesize1484 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1483, i32 0, i32 48, !dbg !4239
  store i64 %799, i64* %filesize1484, align 8, !dbg !4240
  br label %sw.epilog3648, !dbg !4241

sw.bb1485:                                        ; preds = %entry
  %801 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4242
  %gp_offset_p1486 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %801, i32 0, i32 0, !dbg !4242
  %gp_offset1487 = load i32, i32* %gp_offset_p1486, align 8, !dbg !4242
  %fits_in_gp1488 = icmp ule i32 %gp_offset1487, 40, !dbg !4242
  br i1 %fits_in_gp1488, label %vaarg.in_reg1489, label %vaarg.in_mem1491, !dbg !4242

vaarg.in_reg1489:                                 ; preds = %sw.bb1485
  %802 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %801, i32 0, i32 3, !dbg !4243
  %reg_save_area1490 = load i8*, i8** %802, align 8, !dbg !4243
  %803 = getelementptr i8, i8* %reg_save_area1490, i32 %gp_offset1487, !dbg !4243
  %804 = bitcast i8* %803 to i64*, !dbg !4243
  %805 = add i32 %gp_offset1487, 8, !dbg !4243
  store i32 %805, i32* %gp_offset_p1486, align 8, !dbg !4243
  br label %vaarg.end1495, !dbg !4243

vaarg.in_mem1491:                                 ; preds = %sw.bb1485
  %overflow_arg_area_p1492 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %801, i32 0, i32 2, !dbg !4244
  %overflow_arg_area1493 = load i8*, i8** %overflow_arg_area_p1492, align 8, !dbg !4244
  %806 = bitcast i8* %overflow_arg_area1493 to i64*, !dbg !4244
  %overflow_arg_area.next1494 = getelementptr i8, i8* %overflow_arg_area1493, i32 8, !dbg !4244
  store i8* %overflow_arg_area.next1494, i8** %overflow_arg_area_p1492, align 8, !dbg !4244
  br label %vaarg.end1495, !dbg !4244

vaarg.end1495:                                    ; preds = %vaarg.in_mem1491, %vaarg.in_reg1489
  %vaarg.addr1496 = phi i64* [ %804, %vaarg.in_reg1489 ], [ %806, %vaarg.in_mem1491 ], !dbg !4245
  %807 = load i64, i64* %vaarg.addr1496, align 8, !dbg !4245
  %808 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4246
  %set1497 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %808, i32 0, i32 13, !dbg !4247
  %low_speed_limit = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1497, i32 0, i32 49, !dbg !4248
  store i64 %807, i64* %low_speed_limit, align 8, !dbg !4249
  br label %sw.epilog3648, !dbg !4250

sw.bb1498:                                        ; preds = %entry
  %809 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4251
  %gp_offset_p1499 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %809, i32 0, i32 0, !dbg !4251
  %gp_offset1500 = load i32, i32* %gp_offset_p1499, align 8, !dbg !4251
  %fits_in_gp1501 = icmp ule i32 %gp_offset1500, 40, !dbg !4251
  br i1 %fits_in_gp1501, label %vaarg.in_reg1502, label %vaarg.in_mem1504, !dbg !4251

vaarg.in_reg1502:                                 ; preds = %sw.bb1498
  %810 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %809, i32 0, i32 3, !dbg !4252
  %reg_save_area1503 = load i8*, i8** %810, align 8, !dbg !4252
  %811 = getelementptr i8, i8* %reg_save_area1503, i32 %gp_offset1500, !dbg !4252
  %812 = bitcast i8* %811 to i64*, !dbg !4252
  %813 = add i32 %gp_offset1500, 8, !dbg !4252
  store i32 %813, i32* %gp_offset_p1499, align 8, !dbg !4252
  br label %vaarg.end1508, !dbg !4252

vaarg.in_mem1504:                                 ; preds = %sw.bb1498
  %overflow_arg_area_p1505 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %809, i32 0, i32 2, !dbg !4253
  %overflow_arg_area1506 = load i8*, i8** %overflow_arg_area_p1505, align 8, !dbg !4253
  %814 = bitcast i8* %overflow_arg_area1506 to i64*, !dbg !4253
  %overflow_arg_area.next1507 = getelementptr i8, i8* %overflow_arg_area1506, i32 8, !dbg !4253
  store i8* %overflow_arg_area.next1507, i8** %overflow_arg_area_p1505, align 8, !dbg !4253
  br label %vaarg.end1508, !dbg !4253

vaarg.end1508:                                    ; preds = %vaarg.in_mem1504, %vaarg.in_reg1502
  %vaarg.addr1509 = phi i64* [ %812, %vaarg.in_reg1502 ], [ %814, %vaarg.in_mem1504 ], !dbg !4254
  %815 = load i64, i64* %vaarg.addr1509, align 8, !dbg !4254
  %816 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4255
  %set1510 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %816, i32 0, i32 13, !dbg !4256
  %max_send_speed = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1510, i32 0, i32 51, !dbg !4257
  store i64 %815, i64* %max_send_speed, align 8, !dbg !4258
  br label %sw.epilog3648, !dbg !4259

sw.bb1511:                                        ; preds = %entry
  %817 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4260
  %gp_offset_p1512 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %817, i32 0, i32 0, !dbg !4260
  %gp_offset1513 = load i32, i32* %gp_offset_p1512, align 8, !dbg !4260
  %fits_in_gp1514 = icmp ule i32 %gp_offset1513, 40, !dbg !4260
  br i1 %fits_in_gp1514, label %vaarg.in_reg1515, label %vaarg.in_mem1517, !dbg !4260

vaarg.in_reg1515:                                 ; preds = %sw.bb1511
  %818 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %817, i32 0, i32 3, !dbg !4261
  %reg_save_area1516 = load i8*, i8** %818, align 8, !dbg !4261
  %819 = getelementptr i8, i8* %reg_save_area1516, i32 %gp_offset1513, !dbg !4261
  %820 = bitcast i8* %819 to i64*, !dbg !4261
  %821 = add i32 %gp_offset1513, 8, !dbg !4261
  store i32 %821, i32* %gp_offset_p1512, align 8, !dbg !4261
  br label %vaarg.end1521, !dbg !4261

vaarg.in_mem1517:                                 ; preds = %sw.bb1511
  %overflow_arg_area_p1518 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %817, i32 0, i32 2, !dbg !4262
  %overflow_arg_area1519 = load i8*, i8** %overflow_arg_area_p1518, align 8, !dbg !4262
  %822 = bitcast i8* %overflow_arg_area1519 to i64*, !dbg !4262
  %overflow_arg_area.next1520 = getelementptr i8, i8* %overflow_arg_area1519, i32 8, !dbg !4262
  store i8* %overflow_arg_area.next1520, i8** %overflow_arg_area_p1518, align 8, !dbg !4262
  br label %vaarg.end1521, !dbg !4262

vaarg.end1521:                                    ; preds = %vaarg.in_mem1517, %vaarg.in_reg1515
  %vaarg.addr1522 = phi i64* [ %820, %vaarg.in_reg1515 ], [ %822, %vaarg.in_mem1517 ], !dbg !4263
  %823 = load i64, i64* %vaarg.addr1522, align 8, !dbg !4263
  %824 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4264
  %set1523 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %824, i32 0, i32 13, !dbg !4265
  %max_recv_speed = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1523, i32 0, i32 52, !dbg !4266
  store i64 %823, i64* %max_recv_speed, align 8, !dbg !4267
  br label %sw.epilog3648, !dbg !4268

sw.bb1524:                                        ; preds = %entry
  %825 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4269
  %gp_offset_p1525 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %825, i32 0, i32 0, !dbg !4269
  %gp_offset1526 = load i32, i32* %gp_offset_p1525, align 8, !dbg !4269
  %fits_in_gp1527 = icmp ule i32 %gp_offset1526, 40, !dbg !4269
  br i1 %fits_in_gp1527, label %vaarg.in_reg1528, label %vaarg.in_mem1530, !dbg !4269

vaarg.in_reg1528:                                 ; preds = %sw.bb1524
  %826 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %825, i32 0, i32 3, !dbg !4270
  %reg_save_area1529 = load i8*, i8** %826, align 8, !dbg !4270
  %827 = getelementptr i8, i8* %reg_save_area1529, i32 %gp_offset1526, !dbg !4270
  %828 = bitcast i8* %827 to i64*, !dbg !4270
  %829 = add i32 %gp_offset1526, 8, !dbg !4270
  store i32 %829, i32* %gp_offset_p1525, align 8, !dbg !4270
  br label %vaarg.end1534, !dbg !4270

vaarg.in_mem1530:                                 ; preds = %sw.bb1524
  %overflow_arg_area_p1531 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %825, i32 0, i32 2, !dbg !4271
  %overflow_arg_area1532 = load i8*, i8** %overflow_arg_area_p1531, align 8, !dbg !4271
  %830 = bitcast i8* %overflow_arg_area1532 to i64*, !dbg !4271
  %overflow_arg_area.next1533 = getelementptr i8, i8* %overflow_arg_area1532, i32 8, !dbg !4271
  store i8* %overflow_arg_area.next1533, i8** %overflow_arg_area_p1531, align 8, !dbg !4271
  br label %vaarg.end1534, !dbg !4271

vaarg.end1534:                                    ; preds = %vaarg.in_mem1530, %vaarg.in_reg1528
  %vaarg.addr1535 = phi i64* [ %828, %vaarg.in_reg1528 ], [ %830, %vaarg.in_mem1530 ], !dbg !4272
  %831 = load i64, i64* %vaarg.addr1535, align 8, !dbg !4272
  %832 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4273
  %set1536 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %832, i32 0, i32 13, !dbg !4274
  %low_speed_time = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1536, i32 0, i32 50, !dbg !4275
  store i64 %831, i64* %low_speed_time, align 8, !dbg !4276
  br label %sw.epilog3648, !dbg !4277

sw.bb1537:                                        ; preds = %entry
  %833 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4278
  %change1538 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %833, i32 0, i32 14, !dbg !4280
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1538, i32 0, i32 1, !dbg !4281
  %834 = load i8, i8* %url_alloc, align 8, !dbg !4281
  %tobool1539 = trunc i8 %834 to i1, !dbg !4281
  br i1 %tobool1539, label %if.then1540, label %if.end1548, !dbg !4282

if.then1540:                                      ; preds = %sw.bb1537
  br label %do.body1541, !dbg !4283

do.body1541:                                      ; preds = %if.then1540
  %835 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !4285
  %836 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4285
  %change1542 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %836, i32 0, i32 14, !dbg !4285
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1542, i32 0, i32 0, !dbg !4285
  %837 = load i8*, i8** %url, align 8, !dbg !4285
  call void %835(i8* %837), !dbg !4285
  %838 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4285
  %change1543 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %838, i32 0, i32 14, !dbg !4285
  %url1544 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1543, i32 0, i32 0, !dbg !4285
  store i8* null, i8** %url1544, align 8, !dbg !4285
  br label %do.end1545, !dbg !4285

do.end1545:                                       ; preds = %do.body1541
  %839 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4288
  %change1546 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %839, i32 0, i32 14, !dbg !4289
  %url_alloc1547 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1546, i32 0, i32 1, !dbg !4290
  store i8 0, i8* %url_alloc1547, align 8, !dbg !4291
  br label %if.end1548, !dbg !4292

if.end1548:                                       ; preds = %do.end1545, %sw.bb1537
  %840 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4293
  %set1549 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %840, i32 0, i32 13, !dbg !4294
  %str1550 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1549, i32 0, i32 128, !dbg !4295
  %arrayidx1551 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1550, i64 0, i64 25, !dbg !4293
  %841 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4296
  %gp_offset_p1552 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %841, i32 0, i32 0, !dbg !4296
  %gp_offset1553 = load i32, i32* %gp_offset_p1552, align 8, !dbg !4296
  %fits_in_gp1554 = icmp ule i32 %gp_offset1553, 40, !dbg !4296
  br i1 %fits_in_gp1554, label %vaarg.in_reg1555, label %vaarg.in_mem1557, !dbg !4296

vaarg.in_reg1555:                                 ; preds = %if.end1548
  %842 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %841, i32 0, i32 3, !dbg !4297
  %reg_save_area1556 = load i8*, i8** %842, align 8, !dbg !4297
  %843 = getelementptr i8, i8* %reg_save_area1556, i32 %gp_offset1553, !dbg !4297
  %844 = bitcast i8* %843 to i8**, !dbg !4297
  %845 = add i32 %gp_offset1553, 8, !dbg !4297
  store i32 %845, i32* %gp_offset_p1552, align 8, !dbg !4297
  br label %vaarg.end1561, !dbg !4297

vaarg.in_mem1557:                                 ; preds = %if.end1548
  %overflow_arg_area_p1558 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %841, i32 0, i32 2, !dbg !4298
  %overflow_arg_area1559 = load i8*, i8** %overflow_arg_area_p1558, align 8, !dbg !4298
  %846 = bitcast i8* %overflow_arg_area1559 to i8**, !dbg !4298
  %overflow_arg_area.next1560 = getelementptr i8, i8* %overflow_arg_area1559, i32 8, !dbg !4298
  store i8* %overflow_arg_area.next1560, i8** %overflow_arg_area_p1558, align 8, !dbg !4298
  br label %vaarg.end1561, !dbg !4298

vaarg.end1561:                                    ; preds = %vaarg.in_mem1557, %vaarg.in_reg1555
  %vaarg.addr1562 = phi i8** [ %844, %vaarg.in_reg1555 ], [ %846, %vaarg.in_mem1557 ], !dbg !4299
  %847 = load i8*, i8** %vaarg.addr1562, align 8, !dbg !4299
  %call1563 = call i32 @setstropt(i8** %arrayidx1551, i8* %847), !dbg !4300
  store i32 %call1563, i32* %result, align 4, !dbg !4301
  %848 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4302
  %set1564 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %848, i32 0, i32 13, !dbg !4303
  %str1565 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1564, i32 0, i32 128, !dbg !4304
  %arrayidx1566 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1565, i64 0, i64 25, !dbg !4302
  %849 = load i8*, i8** %arrayidx1566, align 8, !dbg !4302
  %850 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4305
  %change1567 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %850, i32 0, i32 14, !dbg !4306
  %url1568 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1567, i32 0, i32 0, !dbg !4307
  store i8* %849, i8** %url1568, align 8, !dbg !4308
  br label %sw.epilog3648, !dbg !4309

sw.bb1569:                                        ; preds = %entry
  %851 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4310
  %gp_offset_p1570 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %851, i32 0, i32 0, !dbg !4310
  %gp_offset1571 = load i32, i32* %gp_offset_p1570, align 8, !dbg !4310
  %fits_in_gp1572 = icmp ule i32 %gp_offset1571, 40, !dbg !4310
  br i1 %fits_in_gp1572, label %vaarg.in_reg1573, label %vaarg.in_mem1575, !dbg !4310

vaarg.in_reg1573:                                 ; preds = %sw.bb1569
  %852 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %851, i32 0, i32 3, !dbg !4311
  %reg_save_area1574 = load i8*, i8** %852, align 8, !dbg !4311
  %853 = getelementptr i8, i8* %reg_save_area1574, i32 %gp_offset1571, !dbg !4311
  %854 = bitcast i8* %853 to i64*, !dbg !4311
  %855 = add i32 %gp_offset1571, 8, !dbg !4311
  store i32 %855, i32* %gp_offset_p1570, align 8, !dbg !4311
  br label %vaarg.end1579, !dbg !4311

vaarg.in_mem1575:                                 ; preds = %sw.bb1569
  %overflow_arg_area_p1576 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %851, i32 0, i32 2, !dbg !4312
  %overflow_arg_area1577 = load i8*, i8** %overflow_arg_area_p1576, align 8, !dbg !4312
  %856 = bitcast i8* %overflow_arg_area1577 to i64*, !dbg !4312
  %overflow_arg_area.next1578 = getelementptr i8, i8* %overflow_arg_area1577, i32 8, !dbg !4312
  store i8* %overflow_arg_area.next1578, i8** %overflow_arg_area_p1576, align 8, !dbg !4312
  br label %vaarg.end1579, !dbg !4312

vaarg.end1579:                                    ; preds = %vaarg.in_mem1575, %vaarg.in_reg1573
  %vaarg.addr1580 = phi i64* [ %854, %vaarg.in_reg1573 ], [ %856, %vaarg.in_mem1575 ], !dbg !4313
  %857 = load i64, i64* %vaarg.addr1580, align 8, !dbg !4313
  %858 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4314
  %set1581 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %858, i32 0, i32 13, !dbg !4315
  %use_port = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1581, i32 0, i32 8, !dbg !4316
  store i64 %857, i64* %use_port, align 8, !dbg !4317
  br label %sw.epilog3648, !dbg !4318

sw.bb1582:                                        ; preds = %entry
  %859 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4319
  %gp_offset_p1583 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %859, i32 0, i32 0, !dbg !4319
  %gp_offset1584 = load i32, i32* %gp_offset_p1583, align 8, !dbg !4319
  %fits_in_gp1585 = icmp ule i32 %gp_offset1584, 40, !dbg !4319
  br i1 %fits_in_gp1585, label %vaarg.in_reg1586, label %vaarg.in_mem1588, !dbg !4319

vaarg.in_reg1586:                                 ; preds = %sw.bb1582
  %860 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %859, i32 0, i32 3, !dbg !4320
  %reg_save_area1587 = load i8*, i8** %860, align 8, !dbg !4320
  %861 = getelementptr i8, i8* %reg_save_area1587, i32 %gp_offset1584, !dbg !4320
  %862 = bitcast i8* %861 to i64*, !dbg !4320
  %863 = add i32 %gp_offset1584, 8, !dbg !4320
  store i32 %863, i32* %gp_offset_p1583, align 8, !dbg !4320
  br label %vaarg.end1592, !dbg !4320

vaarg.in_mem1588:                                 ; preds = %sw.bb1582
  %overflow_arg_area_p1589 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %859, i32 0, i32 2, !dbg !4321
  %overflow_arg_area1590 = load i8*, i8** %overflow_arg_area_p1589, align 8, !dbg !4321
  %864 = bitcast i8* %overflow_arg_area1590 to i64*, !dbg !4321
  %overflow_arg_area.next1591 = getelementptr i8, i8* %overflow_arg_area1590, i32 8, !dbg !4321
  store i8* %overflow_arg_area.next1591, i8** %overflow_arg_area_p1589, align 8, !dbg !4321
  br label %vaarg.end1592, !dbg !4321

vaarg.end1592:                                    ; preds = %vaarg.in_mem1588, %vaarg.in_reg1586
  %vaarg.addr1593 = phi i64* [ %862, %vaarg.in_reg1586 ], [ %864, %vaarg.in_mem1588 ], !dbg !4322
  %865 = load i64, i64* %vaarg.addr1593, align 8, !dbg !4322
  %mul1594 = mul nsw i64 %865, 1000, !dbg !4323
  %866 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4324
  %set1595 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %866, i32 0, i32 13, !dbg !4325
  %timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1595, i32 0, i32 42, !dbg !4326
  store i64 %mul1594, i64* %timeout, align 8, !dbg !4327
  br label %sw.epilog3648, !dbg !4328

sw.bb1596:                                        ; preds = %entry
  %867 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4329
  %gp_offset_p1597 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %867, i32 0, i32 0, !dbg !4329
  %gp_offset1598 = load i32, i32* %gp_offset_p1597, align 8, !dbg !4329
  %fits_in_gp1599 = icmp ule i32 %gp_offset1598, 40, !dbg !4329
  br i1 %fits_in_gp1599, label %vaarg.in_reg1600, label %vaarg.in_mem1602, !dbg !4329

vaarg.in_reg1600:                                 ; preds = %sw.bb1596
  %868 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %867, i32 0, i32 3, !dbg !4330
  %reg_save_area1601 = load i8*, i8** %868, align 8, !dbg !4330
  %869 = getelementptr i8, i8* %reg_save_area1601, i32 %gp_offset1598, !dbg !4330
  %870 = bitcast i8* %869 to i64*, !dbg !4330
  %871 = add i32 %gp_offset1598, 8, !dbg !4330
  store i32 %871, i32* %gp_offset_p1597, align 8, !dbg !4330
  br label %vaarg.end1606, !dbg !4330

vaarg.in_mem1602:                                 ; preds = %sw.bb1596
  %overflow_arg_area_p1603 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %867, i32 0, i32 2, !dbg !4331
  %overflow_arg_area1604 = load i8*, i8** %overflow_arg_area_p1603, align 8, !dbg !4331
  %872 = bitcast i8* %overflow_arg_area1604 to i64*, !dbg !4331
  %overflow_arg_area.next1605 = getelementptr i8, i8* %overflow_arg_area1604, i32 8, !dbg !4331
  store i8* %overflow_arg_area.next1605, i8** %overflow_arg_area_p1603, align 8, !dbg !4331
  br label %vaarg.end1606, !dbg !4331

vaarg.end1606:                                    ; preds = %vaarg.in_mem1602, %vaarg.in_reg1600
  %vaarg.addr1607 = phi i64* [ %870, %vaarg.in_reg1600 ], [ %872, %vaarg.in_mem1602 ], !dbg !4332
  %873 = load i64, i64* %vaarg.addr1607, align 8, !dbg !4332
  %874 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4333
  %set1608 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %874, i32 0, i32 13, !dbg !4334
  %timeout1609 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1608, i32 0, i32 42, !dbg !4335
  store i64 %873, i64* %timeout1609, align 8, !dbg !4336
  br label %sw.epilog3648, !dbg !4337

sw.bb1610:                                        ; preds = %entry
  %875 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4338
  %gp_offset_p1611 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %875, i32 0, i32 0, !dbg !4338
  %gp_offset1612 = load i32, i32* %gp_offset_p1611, align 8, !dbg !4338
  %fits_in_gp1613 = icmp ule i32 %gp_offset1612, 40, !dbg !4338
  br i1 %fits_in_gp1613, label %vaarg.in_reg1614, label %vaarg.in_mem1616, !dbg !4338

vaarg.in_reg1614:                                 ; preds = %sw.bb1610
  %876 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %875, i32 0, i32 3, !dbg !4339
  %reg_save_area1615 = load i8*, i8** %876, align 8, !dbg !4339
  %877 = getelementptr i8, i8* %reg_save_area1615, i32 %gp_offset1612, !dbg !4339
  %878 = bitcast i8* %877 to i64*, !dbg !4339
  %879 = add i32 %gp_offset1612, 8, !dbg !4339
  store i32 %879, i32* %gp_offset_p1611, align 8, !dbg !4339
  br label %vaarg.end1620, !dbg !4339

vaarg.in_mem1616:                                 ; preds = %sw.bb1610
  %overflow_arg_area_p1617 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %875, i32 0, i32 2, !dbg !4340
  %overflow_arg_area1618 = load i8*, i8** %overflow_arg_area_p1617, align 8, !dbg !4340
  %880 = bitcast i8* %overflow_arg_area1618 to i64*, !dbg !4340
  %overflow_arg_area.next1619 = getelementptr i8, i8* %overflow_arg_area1618, i32 8, !dbg !4340
  store i8* %overflow_arg_area.next1619, i8** %overflow_arg_area_p1617, align 8, !dbg !4340
  br label %vaarg.end1620, !dbg !4340

vaarg.end1620:                                    ; preds = %vaarg.in_mem1616, %vaarg.in_reg1614
  %vaarg.addr1621 = phi i64* [ %878, %vaarg.in_reg1614 ], [ %880, %vaarg.in_mem1616 ], !dbg !4341
  %881 = load i64, i64* %vaarg.addr1621, align 8, !dbg !4341
  %mul1622 = mul nsw i64 %881, 1000, !dbg !4342
  %882 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4343
  %set1623 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %882, i32 0, i32 13, !dbg !4344
  %connecttimeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1623, i32 0, i32 43, !dbg !4345
  store i64 %mul1622, i64* %connecttimeout, align 8, !dbg !4346
  br label %sw.epilog3648, !dbg !4347

sw.bb1624:                                        ; preds = %entry
  %883 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4348
  %gp_offset_p1625 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %883, i32 0, i32 0, !dbg !4348
  %gp_offset1626 = load i32, i32* %gp_offset_p1625, align 8, !dbg !4348
  %fits_in_gp1627 = icmp ule i32 %gp_offset1626, 40, !dbg !4348
  br i1 %fits_in_gp1627, label %vaarg.in_reg1628, label %vaarg.in_mem1630, !dbg !4348

vaarg.in_reg1628:                                 ; preds = %sw.bb1624
  %884 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %883, i32 0, i32 3, !dbg !4349
  %reg_save_area1629 = load i8*, i8** %884, align 8, !dbg !4349
  %885 = getelementptr i8, i8* %reg_save_area1629, i32 %gp_offset1626, !dbg !4349
  %886 = bitcast i8* %885 to i64*, !dbg !4349
  %887 = add i32 %gp_offset1626, 8, !dbg !4349
  store i32 %887, i32* %gp_offset_p1625, align 8, !dbg !4349
  br label %vaarg.end1634, !dbg !4349

vaarg.in_mem1630:                                 ; preds = %sw.bb1624
  %overflow_arg_area_p1631 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %883, i32 0, i32 2, !dbg !4350
  %overflow_arg_area1632 = load i8*, i8** %overflow_arg_area_p1631, align 8, !dbg !4350
  %888 = bitcast i8* %overflow_arg_area1632 to i64*, !dbg !4350
  %overflow_arg_area.next1633 = getelementptr i8, i8* %overflow_arg_area1632, i32 8, !dbg !4350
  store i8* %overflow_arg_area.next1633, i8** %overflow_arg_area_p1631, align 8, !dbg !4350
  br label %vaarg.end1634, !dbg !4350

vaarg.end1634:                                    ; preds = %vaarg.in_mem1630, %vaarg.in_reg1628
  %vaarg.addr1635 = phi i64* [ %886, %vaarg.in_reg1628 ], [ %888, %vaarg.in_mem1630 ], !dbg !4351
  %889 = load i64, i64* %vaarg.addr1635, align 8, !dbg !4351
  %890 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4352
  %set1636 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %890, i32 0, i32 13, !dbg !4353
  %connecttimeout1637 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1636, i32 0, i32 43, !dbg !4354
  store i64 %889, i64* %connecttimeout1637, align 8, !dbg !4355
  br label %sw.epilog3648, !dbg !4356

sw.bb1638:                                        ; preds = %entry
  %891 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4357
  %gp_offset_p1639 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %891, i32 0, i32 0, !dbg !4357
  %gp_offset1640 = load i32, i32* %gp_offset_p1639, align 8, !dbg !4357
  %fits_in_gp1641 = icmp ule i32 %gp_offset1640, 40, !dbg !4357
  br i1 %fits_in_gp1641, label %vaarg.in_reg1642, label %vaarg.in_mem1644, !dbg !4357

vaarg.in_reg1642:                                 ; preds = %sw.bb1638
  %892 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %891, i32 0, i32 3, !dbg !4358
  %reg_save_area1643 = load i8*, i8** %892, align 8, !dbg !4358
  %893 = getelementptr i8, i8* %reg_save_area1643, i32 %gp_offset1640, !dbg !4358
  %894 = bitcast i8* %893 to i64*, !dbg !4358
  %895 = add i32 %gp_offset1640, 8, !dbg !4358
  store i32 %895, i32* %gp_offset_p1639, align 8, !dbg !4358
  br label %vaarg.end1648, !dbg !4358

vaarg.in_mem1644:                                 ; preds = %sw.bb1638
  %overflow_arg_area_p1645 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %891, i32 0, i32 2, !dbg !4359
  %overflow_arg_area1646 = load i8*, i8** %overflow_arg_area_p1645, align 8, !dbg !4359
  %896 = bitcast i8* %overflow_arg_area1646 to i64*, !dbg !4359
  %overflow_arg_area.next1647 = getelementptr i8, i8* %overflow_arg_area1646, i32 8, !dbg !4359
  store i8* %overflow_arg_area.next1647, i8** %overflow_arg_area_p1645, align 8, !dbg !4359
  br label %vaarg.end1648, !dbg !4359

vaarg.end1648:                                    ; preds = %vaarg.in_mem1644, %vaarg.in_reg1642
  %vaarg.addr1649 = phi i64* [ %894, %vaarg.in_reg1642 ], [ %896, %vaarg.in_mem1644 ], !dbg !4360
  %897 = load i64, i64* %vaarg.addr1649, align 8, !dbg !4360
  %898 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4361
  %set1650 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %898, i32 0, i32 13, !dbg !4362
  %accepttimeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1650, i32 0, i32 44, !dbg !4363
  store i64 %897, i64* %accepttimeout, align 8, !dbg !4364
  br label %sw.epilog3648, !dbg !4365

sw.bb1651:                                        ; preds = %entry
  %899 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4366
  %gp_offset_p1652 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %899, i32 0, i32 0, !dbg !4366
  %gp_offset1653 = load i32, i32* %gp_offset_p1652, align 8, !dbg !4366
  %fits_in_gp1654 = icmp ule i32 %gp_offset1653, 40, !dbg !4366
  br i1 %fits_in_gp1654, label %vaarg.in_reg1655, label %vaarg.in_mem1657, !dbg !4366

vaarg.in_reg1655:                                 ; preds = %sw.bb1651
  %900 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %899, i32 0, i32 3, !dbg !4367
  %reg_save_area1656 = load i8*, i8** %900, align 8, !dbg !4367
  %901 = getelementptr i8, i8* %reg_save_area1656, i32 %gp_offset1653, !dbg !4367
  %902 = bitcast i8* %901 to i8**, !dbg !4367
  %903 = add i32 %gp_offset1653, 8, !dbg !4367
  store i32 %903, i32* %gp_offset_p1652, align 8, !dbg !4367
  br label %vaarg.end1661, !dbg !4367

vaarg.in_mem1657:                                 ; preds = %sw.bb1651
  %overflow_arg_area_p1658 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %899, i32 0, i32 2, !dbg !4368
  %overflow_arg_area1659 = load i8*, i8** %overflow_arg_area_p1658, align 8, !dbg !4368
  %904 = bitcast i8* %overflow_arg_area1659 to i8**, !dbg !4368
  %overflow_arg_area.next1660 = getelementptr i8, i8* %overflow_arg_area1659, i32 8, !dbg !4368
  store i8* %overflow_arg_area.next1660, i8** %overflow_arg_area_p1658, align 8, !dbg !4368
  br label %vaarg.end1661, !dbg !4368

vaarg.end1661:                                    ; preds = %vaarg.in_mem1657, %vaarg.in_reg1655
  %vaarg.addr1662 = phi i8** [ %902, %vaarg.in_reg1655 ], [ %904, %vaarg.in_mem1657 ], !dbg !4369
  %905 = load i8*, i8** %vaarg.addr1662, align 8, !dbg !4369
  %906 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4370
  %set1663 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %906, i32 0, i32 13, !dbg !4371
  %str1664 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1663, i32 0, i32 128, !dbg !4372
  %arrayidx1665 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1664, i64 0, i64 41, !dbg !4370
  %907 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4373
  %set1666 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %907, i32 0, i32 13, !dbg !4374
  %str1667 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1666, i32 0, i32 128, !dbg !4375
  %arrayidx1668 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1667, i64 0, i64 42, !dbg !4373
  %call1669 = call i32 @setstropt_userpwd(i8* %905, i8** %arrayidx1665, i8** %arrayidx1668), !dbg !4376
  store i32 %call1669, i32* %result, align 4, !dbg !4377
  br label %sw.epilog3648, !dbg !4378

sw.bb1670:                                        ; preds = %entry
  %908 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4379
  %set1671 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %908, i32 0, i32 13, !dbg !4380
  %str1672 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1671, i32 0, i32 128, !dbg !4381
  %arrayidx1673 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1672, i64 0, i64 41, !dbg !4379
  %909 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4382
  %gp_offset_p1674 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %909, i32 0, i32 0, !dbg !4382
  %gp_offset1675 = load i32, i32* %gp_offset_p1674, align 8, !dbg !4382
  %fits_in_gp1676 = icmp ule i32 %gp_offset1675, 40, !dbg !4382
  br i1 %fits_in_gp1676, label %vaarg.in_reg1677, label %vaarg.in_mem1679, !dbg !4382

vaarg.in_reg1677:                                 ; preds = %sw.bb1670
  %910 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %909, i32 0, i32 3, !dbg !4383
  %reg_save_area1678 = load i8*, i8** %910, align 8, !dbg !4383
  %911 = getelementptr i8, i8* %reg_save_area1678, i32 %gp_offset1675, !dbg !4383
  %912 = bitcast i8* %911 to i8**, !dbg !4383
  %913 = add i32 %gp_offset1675, 8, !dbg !4383
  store i32 %913, i32* %gp_offset_p1674, align 8, !dbg !4383
  br label %vaarg.end1683, !dbg !4383

vaarg.in_mem1679:                                 ; preds = %sw.bb1670
  %overflow_arg_area_p1680 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %909, i32 0, i32 2, !dbg !4384
  %overflow_arg_area1681 = load i8*, i8** %overflow_arg_area_p1680, align 8, !dbg !4384
  %914 = bitcast i8* %overflow_arg_area1681 to i8**, !dbg !4384
  %overflow_arg_area.next1682 = getelementptr i8, i8* %overflow_arg_area1681, i32 8, !dbg !4384
  store i8* %overflow_arg_area.next1682, i8** %overflow_arg_area_p1680, align 8, !dbg !4384
  br label %vaarg.end1683, !dbg !4384

vaarg.end1683:                                    ; preds = %vaarg.in_mem1679, %vaarg.in_reg1677
  %vaarg.addr1684 = phi i8** [ %912, %vaarg.in_reg1677 ], [ %914, %vaarg.in_mem1679 ], !dbg !4385
  %915 = load i8*, i8** %vaarg.addr1684, align 8, !dbg !4385
  %call1685 = call i32 @setstropt(i8** %arrayidx1673, i8* %915), !dbg !4386
  store i32 %call1685, i32* %result, align 4, !dbg !4387
  br label %sw.epilog3648, !dbg !4388

sw.bb1686:                                        ; preds = %entry
  %916 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4389
  %set1687 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %916, i32 0, i32 13, !dbg !4390
  %str1688 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1687, i32 0, i32 128, !dbg !4391
  %arrayidx1689 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1688, i64 0, i64 42, !dbg !4389
  %917 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4392
  %gp_offset_p1690 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %917, i32 0, i32 0, !dbg !4392
  %gp_offset1691 = load i32, i32* %gp_offset_p1690, align 8, !dbg !4392
  %fits_in_gp1692 = icmp ule i32 %gp_offset1691, 40, !dbg !4392
  br i1 %fits_in_gp1692, label %vaarg.in_reg1693, label %vaarg.in_mem1695, !dbg !4392

vaarg.in_reg1693:                                 ; preds = %sw.bb1686
  %918 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %917, i32 0, i32 3, !dbg !4393
  %reg_save_area1694 = load i8*, i8** %918, align 8, !dbg !4393
  %919 = getelementptr i8, i8* %reg_save_area1694, i32 %gp_offset1691, !dbg !4393
  %920 = bitcast i8* %919 to i8**, !dbg !4393
  %921 = add i32 %gp_offset1691, 8, !dbg !4393
  store i32 %921, i32* %gp_offset_p1690, align 8, !dbg !4393
  br label %vaarg.end1699, !dbg !4393

vaarg.in_mem1695:                                 ; preds = %sw.bb1686
  %overflow_arg_area_p1696 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %917, i32 0, i32 2, !dbg !4394
  %overflow_arg_area1697 = load i8*, i8** %overflow_arg_area_p1696, align 8, !dbg !4394
  %922 = bitcast i8* %overflow_arg_area1697 to i8**, !dbg !4394
  %overflow_arg_area.next1698 = getelementptr i8, i8* %overflow_arg_area1697, i32 8, !dbg !4394
  store i8* %overflow_arg_area.next1698, i8** %overflow_arg_area_p1696, align 8, !dbg !4394
  br label %vaarg.end1699, !dbg !4394

vaarg.end1699:                                    ; preds = %vaarg.in_mem1695, %vaarg.in_reg1693
  %vaarg.addr1700 = phi i8** [ %920, %vaarg.in_reg1693 ], [ %922, %vaarg.in_mem1695 ], !dbg !4395
  %923 = load i8*, i8** %vaarg.addr1700, align 8, !dbg !4395
  %call1701 = call i32 @setstropt(i8** %arrayidx1689, i8* %923), !dbg !4396
  store i32 %call1701, i32* %result, align 4, !dbg !4397
  br label %sw.epilog3648, !dbg !4398

sw.bb1702:                                        ; preds = %entry
  %924 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4399
  %set1703 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %924, i32 0, i32 13, !dbg !4400
  %str1704 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1703, i32 0, i32 128, !dbg !4401
  %arrayidx1705 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1704, i64 0, i64 43, !dbg !4399
  %925 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4402
  %gp_offset_p1706 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %925, i32 0, i32 0, !dbg !4402
  %gp_offset1707 = load i32, i32* %gp_offset_p1706, align 8, !dbg !4402
  %fits_in_gp1708 = icmp ule i32 %gp_offset1707, 40, !dbg !4402
  br i1 %fits_in_gp1708, label %vaarg.in_reg1709, label %vaarg.in_mem1711, !dbg !4402

vaarg.in_reg1709:                                 ; preds = %sw.bb1702
  %926 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %925, i32 0, i32 3, !dbg !4403
  %reg_save_area1710 = load i8*, i8** %926, align 8, !dbg !4403
  %927 = getelementptr i8, i8* %reg_save_area1710, i32 %gp_offset1707, !dbg !4403
  %928 = bitcast i8* %927 to i8**, !dbg !4403
  %929 = add i32 %gp_offset1707, 8, !dbg !4403
  store i32 %929, i32* %gp_offset_p1706, align 8, !dbg !4403
  br label %vaarg.end1715, !dbg !4403

vaarg.in_mem1711:                                 ; preds = %sw.bb1702
  %overflow_arg_area_p1712 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %925, i32 0, i32 2, !dbg !4404
  %overflow_arg_area1713 = load i8*, i8** %overflow_arg_area_p1712, align 8, !dbg !4404
  %930 = bitcast i8* %overflow_arg_area1713 to i8**, !dbg !4404
  %overflow_arg_area.next1714 = getelementptr i8, i8* %overflow_arg_area1713, i32 8, !dbg !4404
  store i8* %overflow_arg_area.next1714, i8** %overflow_arg_area_p1712, align 8, !dbg !4404
  br label %vaarg.end1715, !dbg !4404

vaarg.end1715:                                    ; preds = %vaarg.in_mem1711, %vaarg.in_reg1709
  %vaarg.addr1716 = phi i8** [ %928, %vaarg.in_reg1709 ], [ %930, %vaarg.in_mem1711 ], !dbg !4405
  %931 = load i8*, i8** %vaarg.addr1716, align 8, !dbg !4405
  %call1717 = call i32 @setstropt(i8** %arrayidx1705, i8* %931), !dbg !4406
  store i32 %call1717, i32* %result, align 4, !dbg !4407
  br label %sw.epilog3648, !dbg !4408

sw.bb1718:                                        ; preds = %entry
  %932 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4409
  %set1719 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %932, i32 0, i32 13, !dbg !4410
  %str1720 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1719, i32 0, i32 128, !dbg !4411
  %arrayidx1721 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1720, i64 0, i64 53, !dbg !4409
  %933 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4412
  %gp_offset_p1722 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %933, i32 0, i32 0, !dbg !4412
  %gp_offset1723 = load i32, i32* %gp_offset_p1722, align 8, !dbg !4412
  %fits_in_gp1724 = icmp ule i32 %gp_offset1723, 40, !dbg !4412
  br i1 %fits_in_gp1724, label %vaarg.in_reg1725, label %vaarg.in_mem1727, !dbg !4412

vaarg.in_reg1725:                                 ; preds = %sw.bb1718
  %934 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %933, i32 0, i32 3, !dbg !4413
  %reg_save_area1726 = load i8*, i8** %934, align 8, !dbg !4413
  %935 = getelementptr i8, i8* %reg_save_area1726, i32 %gp_offset1723, !dbg !4413
  %936 = bitcast i8* %935 to i8**, !dbg !4413
  %937 = add i32 %gp_offset1723, 8, !dbg !4413
  store i32 %937, i32* %gp_offset_p1722, align 8, !dbg !4413
  br label %vaarg.end1731, !dbg !4413

vaarg.in_mem1727:                                 ; preds = %sw.bb1718
  %overflow_arg_area_p1728 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %933, i32 0, i32 2, !dbg !4414
  %overflow_arg_area1729 = load i8*, i8** %overflow_arg_area_p1728, align 8, !dbg !4414
  %938 = bitcast i8* %overflow_arg_area1729 to i8**, !dbg !4414
  %overflow_arg_area.next1730 = getelementptr i8, i8* %overflow_arg_area1729, i32 8, !dbg !4414
  store i8* %overflow_arg_area.next1730, i8** %overflow_arg_area_p1728, align 8, !dbg !4414
  br label %vaarg.end1731, !dbg !4414

vaarg.end1731:                                    ; preds = %vaarg.in_mem1727, %vaarg.in_reg1725
  %vaarg.addr1732 = phi i8** [ %936, %vaarg.in_reg1725 ], [ %938, %vaarg.in_mem1727 ], !dbg !4415
  %939 = load i8*, i8** %vaarg.addr1732, align 8, !dbg !4415
  %call1733 = call i32 @setstropt(i8** %arrayidx1721, i8* %939), !dbg !4416
  store i32 %call1733, i32* %result, align 4, !dbg !4417
  br label %sw.epilog3648, !dbg !4418

sw.bb1734:                                        ; preds = %entry
  %940 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4419
  %gp_offset_p1735 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %940, i32 0, i32 0, !dbg !4419
  %gp_offset1736 = load i32, i32* %gp_offset_p1735, align 8, !dbg !4419
  %fits_in_gp1737 = icmp ule i32 %gp_offset1736, 40, !dbg !4419
  br i1 %fits_in_gp1737, label %vaarg.in_reg1738, label %vaarg.in_mem1740, !dbg !4419

vaarg.in_reg1738:                                 ; preds = %sw.bb1734
  %941 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %940, i32 0, i32 3, !dbg !4420
  %reg_save_area1739 = load i8*, i8** %941, align 8, !dbg !4420
  %942 = getelementptr i8, i8* %reg_save_area1739, i32 %gp_offset1736, !dbg !4420
  %943 = bitcast i8* %942 to %struct.curl_slist**, !dbg !4420
  %944 = add i32 %gp_offset1736, 8, !dbg !4420
  store i32 %944, i32* %gp_offset_p1735, align 8, !dbg !4420
  br label %vaarg.end1744, !dbg !4420

vaarg.in_mem1740:                                 ; preds = %sw.bb1734
  %overflow_arg_area_p1741 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %940, i32 0, i32 2, !dbg !4421
  %overflow_arg_area1742 = load i8*, i8** %overflow_arg_area_p1741, align 8, !dbg !4421
  %945 = bitcast i8* %overflow_arg_area1742 to %struct.curl_slist**, !dbg !4421
  %overflow_arg_area.next1743 = getelementptr i8, i8* %overflow_arg_area1742, i32 8, !dbg !4421
  store i8* %overflow_arg_area.next1743, i8** %overflow_arg_area_p1741, align 8, !dbg !4421
  br label %vaarg.end1744, !dbg !4421

vaarg.end1744:                                    ; preds = %vaarg.in_mem1740, %vaarg.in_reg1738
  %vaarg.addr1745 = phi %struct.curl_slist** [ %943, %vaarg.in_reg1738 ], [ %945, %vaarg.in_mem1740 ], !dbg !4422
  %946 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr1745, align 8, !dbg !4422
  %947 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4423
  %set1746 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %947, i32 0, i32 13, !dbg !4424
  %postquote = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1746, i32 0, i32 61, !dbg !4425
  store %struct.curl_slist* %946, %struct.curl_slist** %postquote, align 8, !dbg !4426
  br label %sw.epilog3648, !dbg !4427

sw.bb1747:                                        ; preds = %entry
  %948 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4428
  %gp_offset_p1748 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %948, i32 0, i32 0, !dbg !4428
  %gp_offset1749 = load i32, i32* %gp_offset_p1748, align 8, !dbg !4428
  %fits_in_gp1750 = icmp ule i32 %gp_offset1749, 40, !dbg !4428
  br i1 %fits_in_gp1750, label %vaarg.in_reg1751, label %vaarg.in_mem1753, !dbg !4428

vaarg.in_reg1751:                                 ; preds = %sw.bb1747
  %949 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %948, i32 0, i32 3, !dbg !4429
  %reg_save_area1752 = load i8*, i8** %949, align 8, !dbg !4429
  %950 = getelementptr i8, i8* %reg_save_area1752, i32 %gp_offset1749, !dbg !4429
  %951 = bitcast i8* %950 to %struct.curl_slist**, !dbg !4429
  %952 = add i32 %gp_offset1749, 8, !dbg !4429
  store i32 %952, i32* %gp_offset_p1748, align 8, !dbg !4429
  br label %vaarg.end1757, !dbg !4429

vaarg.in_mem1753:                                 ; preds = %sw.bb1747
  %overflow_arg_area_p1754 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %948, i32 0, i32 2, !dbg !4430
  %overflow_arg_area1755 = load i8*, i8** %overflow_arg_area_p1754, align 8, !dbg !4430
  %953 = bitcast i8* %overflow_arg_area1755 to %struct.curl_slist**, !dbg !4430
  %overflow_arg_area.next1756 = getelementptr i8, i8* %overflow_arg_area1755, i32 8, !dbg !4430
  store i8* %overflow_arg_area.next1756, i8** %overflow_arg_area_p1754, align 8, !dbg !4430
  br label %vaarg.end1757, !dbg !4430

vaarg.end1757:                                    ; preds = %vaarg.in_mem1753, %vaarg.in_reg1751
  %vaarg.addr1758 = phi %struct.curl_slist** [ %951, %vaarg.in_reg1751 ], [ %953, %vaarg.in_mem1753 ], !dbg !4431
  %954 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr1758, align 8, !dbg !4431
  %955 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4432
  %set1759 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %955, i32 0, i32 13, !dbg !4433
  %prequote = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1759, i32 0, i32 62, !dbg !4434
  store %struct.curl_slist* %954, %struct.curl_slist** %prequote, align 8, !dbg !4435
  br label %sw.epilog3648, !dbg !4436

sw.bb1760:                                        ; preds = %entry
  %956 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4437
  %gp_offset_p1761 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %956, i32 0, i32 0, !dbg !4437
  %gp_offset1762 = load i32, i32* %gp_offset_p1761, align 8, !dbg !4437
  %fits_in_gp1763 = icmp ule i32 %gp_offset1762, 40, !dbg !4437
  br i1 %fits_in_gp1763, label %vaarg.in_reg1764, label %vaarg.in_mem1766, !dbg !4437

vaarg.in_reg1764:                                 ; preds = %sw.bb1760
  %957 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %956, i32 0, i32 3, !dbg !4438
  %reg_save_area1765 = load i8*, i8** %957, align 8, !dbg !4438
  %958 = getelementptr i8, i8* %reg_save_area1765, i32 %gp_offset1762, !dbg !4438
  %959 = bitcast i8* %958 to %struct.curl_slist**, !dbg !4438
  %960 = add i32 %gp_offset1762, 8, !dbg !4438
  store i32 %960, i32* %gp_offset_p1761, align 8, !dbg !4438
  br label %vaarg.end1770, !dbg !4438

vaarg.in_mem1766:                                 ; preds = %sw.bb1760
  %overflow_arg_area_p1767 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %956, i32 0, i32 2, !dbg !4439
  %overflow_arg_area1768 = load i8*, i8** %overflow_arg_area_p1767, align 8, !dbg !4439
  %961 = bitcast i8* %overflow_arg_area1768 to %struct.curl_slist**, !dbg !4439
  %overflow_arg_area.next1769 = getelementptr i8, i8* %overflow_arg_area1768, i32 8, !dbg !4439
  store i8* %overflow_arg_area.next1769, i8** %overflow_arg_area_p1767, align 8, !dbg !4439
  br label %vaarg.end1770, !dbg !4439

vaarg.end1770:                                    ; preds = %vaarg.in_mem1766, %vaarg.in_reg1764
  %vaarg.addr1771 = phi %struct.curl_slist** [ %959, %vaarg.in_reg1764 ], [ %961, %vaarg.in_mem1766 ], !dbg !4440
  %962 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr1771, align 8, !dbg !4440
  %963 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4441
  %set1772 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %963, i32 0, i32 13, !dbg !4442
  %quote = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1772, i32 0, i32 60, !dbg !4443
  store %struct.curl_slist* %962, %struct.curl_slist** %quote, align 8, !dbg !4444
  br label %sw.epilog3648, !dbg !4445

sw.bb1773:                                        ; preds = %entry
  %964 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4446
  %gp_offset_p1774 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %964, i32 0, i32 0, !dbg !4446
  %gp_offset1775 = load i32, i32* %gp_offset_p1774, align 8, !dbg !4446
  %fits_in_gp1776 = icmp ule i32 %gp_offset1775, 40, !dbg !4446
  br i1 %fits_in_gp1776, label %vaarg.in_reg1777, label %vaarg.in_mem1779, !dbg !4446

vaarg.in_reg1777:                                 ; preds = %sw.bb1773
  %965 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %964, i32 0, i32 3, !dbg !4447
  %reg_save_area1778 = load i8*, i8** %965, align 8, !dbg !4447
  %966 = getelementptr i8, i8* %reg_save_area1778, i32 %gp_offset1775, !dbg !4447
  %967 = bitcast i8* %966 to %struct.curl_slist**, !dbg !4447
  %968 = add i32 %gp_offset1775, 8, !dbg !4447
  store i32 %968, i32* %gp_offset_p1774, align 8, !dbg !4447
  br label %vaarg.end1783, !dbg !4447

vaarg.in_mem1779:                                 ; preds = %sw.bb1773
  %overflow_arg_area_p1780 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %964, i32 0, i32 2, !dbg !4448
  %overflow_arg_area1781 = load i8*, i8** %overflow_arg_area_p1780, align 8, !dbg !4448
  %969 = bitcast i8* %overflow_arg_area1781 to %struct.curl_slist**, !dbg !4448
  %overflow_arg_area.next1782 = getelementptr i8, i8* %overflow_arg_area1781, i32 8, !dbg !4448
  store i8* %overflow_arg_area.next1782, i8** %overflow_arg_area_p1780, align 8, !dbg !4448
  br label %vaarg.end1783, !dbg !4448

vaarg.end1783:                                    ; preds = %vaarg.in_mem1779, %vaarg.in_reg1777
  %vaarg.addr1784 = phi %struct.curl_slist** [ %967, %vaarg.in_reg1777 ], [ %969, %vaarg.in_mem1779 ], !dbg !4449
  %970 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr1784, align 8, !dbg !4449
  %971 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4450
  %set1785 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %971, i32 0, i32 13, !dbg !4451
  %resolve = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1785, i32 0, i32 67, !dbg !4452
  store %struct.curl_slist* %970, %struct.curl_slist** %resolve, align 8, !dbg !4453
  %972 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4454
  %set1786 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %972, i32 0, i32 13, !dbg !4455
  %resolve1787 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1786, i32 0, i32 67, !dbg !4456
  %973 = load %struct.curl_slist*, %struct.curl_slist** %resolve1787, align 8, !dbg !4456
  %974 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4457
  %change1788 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %974, i32 0, i32 14, !dbg !4458
  %resolve1789 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change1788, i32 0, i32 5, !dbg !4459
  store %struct.curl_slist* %973, %struct.curl_slist** %resolve1789, align 8, !dbg !4460
  br label %sw.epilog3648, !dbg !4461

sw.bb1790:                                        ; preds = %entry
  %975 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4462
  %gp_offset_p1791 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %975, i32 0, i32 0, !dbg !4462
  %gp_offset1792 = load i32, i32* %gp_offset_p1791, align 8, !dbg !4462
  %fits_in_gp1793 = icmp ule i32 %gp_offset1792, 40, !dbg !4462
  br i1 %fits_in_gp1793, label %vaarg.in_reg1794, label %vaarg.in_mem1796, !dbg !4462

vaarg.in_reg1794:                                 ; preds = %sw.bb1790
  %976 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %975, i32 0, i32 3, !dbg !4463
  %reg_save_area1795 = load i8*, i8** %976, align 8, !dbg !4463
  %977 = getelementptr i8, i8* %reg_save_area1795, i32 %gp_offset1792, !dbg !4463
  %978 = bitcast i8* %977 to i32 (i8*, double, double, double, double)**, !dbg !4463
  %979 = add i32 %gp_offset1792, 8, !dbg !4463
  store i32 %979, i32* %gp_offset_p1791, align 8, !dbg !4463
  br label %vaarg.end1800, !dbg !4463

vaarg.in_mem1796:                                 ; preds = %sw.bb1790
  %overflow_arg_area_p1797 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %975, i32 0, i32 2, !dbg !4464
  %overflow_arg_area1798 = load i8*, i8** %overflow_arg_area_p1797, align 8, !dbg !4464
  %980 = bitcast i8* %overflow_arg_area1798 to i32 (i8*, double, double, double, double)**, !dbg !4464
  %overflow_arg_area.next1799 = getelementptr i8, i8* %overflow_arg_area1798, i32 8, !dbg !4464
  store i8* %overflow_arg_area.next1799, i8** %overflow_arg_area_p1797, align 8, !dbg !4464
  br label %vaarg.end1800, !dbg !4464

vaarg.end1800:                                    ; preds = %vaarg.in_mem1796, %vaarg.in_reg1794
  %vaarg.addr1801 = phi i32 (i8*, double, double, double, double)** [ %978, %vaarg.in_reg1794 ], [ %980, %vaarg.in_mem1796 ], !dbg !4465
  %981 = load i32 (i8*, double, double, double, double)*, i32 (i8*, double, double, double, double)** %vaarg.addr1801, align 8, !dbg !4465
  %982 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4466
  %set1802 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %982, i32 0, i32 13, !dbg !4467
  %fprogress = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1802, i32 0, i32 26, !dbg !4468
  store i32 (i8*, double, double, double, double)* %981, i32 (i8*, double, double, double, double)** %fprogress, align 8, !dbg !4469
  %983 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4470
  %set1803 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %983, i32 0, i32 13, !dbg !4472
  %fprogress1804 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1803, i32 0, i32 26, !dbg !4473
  %984 = load i32 (i8*, double, double, double, double)*, i32 (i8*, double, double, double, double)** %fprogress1804, align 8, !dbg !4473
  %tobool1805 = icmp ne i32 (i8*, double, double, double, double)* %984, null, !dbg !4470
  br i1 %tobool1805, label %if.then1806, label %if.else1808, !dbg !4474

if.then1806:                                      ; preds = %vaarg.end1800
  %985 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4475
  %progress1807 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %985, i32 0, i32 16, !dbg !4476
  %callback = getelementptr inbounds %struct.Progress, %struct.Progress* %progress1807, i32 0, i32 6, !dbg !4477
  store i8 1, i8* %callback, align 8, !dbg !4478
  br label %if.end1811, !dbg !4475

if.else1808:                                      ; preds = %vaarg.end1800
  %986 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4479
  %progress1809 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %986, i32 0, i32 16, !dbg !4480
  %callback1810 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress1809, i32 0, i32 6, !dbg !4481
  store i8 0, i8* %callback1810, align 8, !dbg !4482
  br label %if.end1811

if.end1811:                                       ; preds = %if.else1808, %if.then1806
  br label %sw.epilog3648, !dbg !4483

sw.bb1812:                                        ; preds = %entry
  %987 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4484
  %gp_offset_p1813 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %987, i32 0, i32 0, !dbg !4484
  %gp_offset1814 = load i32, i32* %gp_offset_p1813, align 8, !dbg !4484
  %fits_in_gp1815 = icmp ule i32 %gp_offset1814, 40, !dbg !4484
  br i1 %fits_in_gp1815, label %vaarg.in_reg1816, label %vaarg.in_mem1818, !dbg !4484

vaarg.in_reg1816:                                 ; preds = %sw.bb1812
  %988 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %987, i32 0, i32 3, !dbg !4485
  %reg_save_area1817 = load i8*, i8** %988, align 8, !dbg !4485
  %989 = getelementptr i8, i8* %reg_save_area1817, i32 %gp_offset1814, !dbg !4485
  %990 = bitcast i8* %989 to i32 (i8*, i64, i64, i64, i64)**, !dbg !4485
  %991 = add i32 %gp_offset1814, 8, !dbg !4485
  store i32 %991, i32* %gp_offset_p1813, align 8, !dbg !4485
  br label %vaarg.end1822, !dbg !4485

vaarg.in_mem1818:                                 ; preds = %sw.bb1812
  %overflow_arg_area_p1819 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %987, i32 0, i32 2, !dbg !4486
  %overflow_arg_area1820 = load i8*, i8** %overflow_arg_area_p1819, align 8, !dbg !4486
  %992 = bitcast i8* %overflow_arg_area1820 to i32 (i8*, i64, i64, i64, i64)**, !dbg !4486
  %overflow_arg_area.next1821 = getelementptr i8, i8* %overflow_arg_area1820, i32 8, !dbg !4486
  store i8* %overflow_arg_area.next1821, i8** %overflow_arg_area_p1819, align 8, !dbg !4486
  br label %vaarg.end1822, !dbg !4486

vaarg.end1822:                                    ; preds = %vaarg.in_mem1818, %vaarg.in_reg1816
  %vaarg.addr1823 = phi i32 (i8*, i64, i64, i64, i64)** [ %990, %vaarg.in_reg1816 ], [ %992, %vaarg.in_mem1818 ], !dbg !4487
  %993 = load i32 (i8*, i64, i64, i64, i64)*, i32 (i8*, i64, i64, i64, i64)** %vaarg.addr1823, align 8, !dbg !4487
  %994 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4488
  %set1824 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %994, i32 0, i32 13, !dbg !4489
  %fxferinfo = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1824, i32 0, i32 27, !dbg !4490
  store i32 (i8*, i64, i64, i64, i64)* %993, i32 (i8*, i64, i64, i64, i64)** %fxferinfo, align 8, !dbg !4491
  %995 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4492
  %set1825 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %995, i32 0, i32 13, !dbg !4494
  %fxferinfo1826 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1825, i32 0, i32 27, !dbg !4495
  %996 = load i32 (i8*, i64, i64, i64, i64)*, i32 (i8*, i64, i64, i64, i64)** %fxferinfo1826, align 8, !dbg !4495
  %tobool1827 = icmp ne i32 (i8*, i64, i64, i64, i64)* %996, null, !dbg !4492
  br i1 %tobool1827, label %if.then1828, label %if.else1831, !dbg !4496

if.then1828:                                      ; preds = %vaarg.end1822
  %997 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4497
  %progress1829 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %997, i32 0, i32 16, !dbg !4498
  %callback1830 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress1829, i32 0, i32 6, !dbg !4499
  store i8 1, i8* %callback1830, align 8, !dbg !4500
  br label %if.end1834, !dbg !4497

if.else1831:                                      ; preds = %vaarg.end1822
  %998 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4501
  %progress1832 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %998, i32 0, i32 16, !dbg !4502
  %callback1833 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress1832, i32 0, i32 6, !dbg !4503
  store i8 0, i8* %callback1833, align 8, !dbg !4504
  br label %if.end1834

if.end1834:                                       ; preds = %if.else1831, %if.then1828
  br label %sw.epilog3648, !dbg !4505

sw.bb1835:                                        ; preds = %entry
  %999 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4506
  %gp_offset_p1836 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %999, i32 0, i32 0, !dbg !4506
  %gp_offset1837 = load i32, i32* %gp_offset_p1836, align 8, !dbg !4506
  %fits_in_gp1838 = icmp ule i32 %gp_offset1837, 40, !dbg !4506
  br i1 %fits_in_gp1838, label %vaarg.in_reg1839, label %vaarg.in_mem1841, !dbg !4506

vaarg.in_reg1839:                                 ; preds = %sw.bb1835
  %1000 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %999, i32 0, i32 3, !dbg !4507
  %reg_save_area1840 = load i8*, i8** %1000, align 8, !dbg !4507
  %1001 = getelementptr i8, i8* %reg_save_area1840, i32 %gp_offset1837, !dbg !4507
  %1002 = bitcast i8* %1001 to i8**, !dbg !4507
  %1003 = add i32 %gp_offset1837, 8, !dbg !4507
  store i32 %1003, i32* %gp_offset_p1836, align 8, !dbg !4507
  br label %vaarg.end1845, !dbg !4507

vaarg.in_mem1841:                                 ; preds = %sw.bb1835
  %overflow_arg_area_p1842 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %999, i32 0, i32 2, !dbg !4508
  %overflow_arg_area1843 = load i8*, i8** %overflow_arg_area_p1842, align 8, !dbg !4508
  %1004 = bitcast i8* %overflow_arg_area1843 to i8**, !dbg !4508
  %overflow_arg_area.next1844 = getelementptr i8, i8* %overflow_arg_area1843, i32 8, !dbg !4508
  store i8* %overflow_arg_area.next1844, i8** %overflow_arg_area_p1842, align 8, !dbg !4508
  br label %vaarg.end1845, !dbg !4508

vaarg.end1845:                                    ; preds = %vaarg.in_mem1841, %vaarg.in_reg1839
  %vaarg.addr1846 = phi i8** [ %1002, %vaarg.in_reg1839 ], [ %1004, %vaarg.in_mem1841 ], !dbg !4509
  %1005 = load i8*, i8** %vaarg.addr1846, align 8, !dbg !4509
  %1006 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4510
  %set1847 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1006, i32 0, i32 13, !dbg !4511
  %progress_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1847, i32 0, i32 40, !dbg !4512
  store i8* %1005, i8** %progress_client, align 8, !dbg !4513
  br label %sw.epilog3648, !dbg !4514

sw.bb1848:                                        ; preds = %entry
  %1007 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4515
  %gp_offset_p1849 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1007, i32 0, i32 0, !dbg !4515
  %gp_offset1850 = load i32, i32* %gp_offset_p1849, align 8, !dbg !4515
  %fits_in_gp1851 = icmp ule i32 %gp_offset1850, 40, !dbg !4515
  br i1 %fits_in_gp1851, label %vaarg.in_reg1852, label %vaarg.in_mem1854, !dbg !4515

vaarg.in_reg1852:                                 ; preds = %sw.bb1848
  %1008 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1007, i32 0, i32 3, !dbg !4516
  %reg_save_area1853 = load i8*, i8** %1008, align 8, !dbg !4516
  %1009 = getelementptr i8, i8* %reg_save_area1853, i32 %gp_offset1850, !dbg !4516
  %1010 = bitcast i8* %1009 to i8**, !dbg !4516
  %1011 = add i32 %gp_offset1850, 8, !dbg !4516
  store i32 %1011, i32* %gp_offset_p1849, align 8, !dbg !4516
  br label %vaarg.end1858, !dbg !4516

vaarg.in_mem1854:                                 ; preds = %sw.bb1848
  %overflow_arg_area_p1855 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1007, i32 0, i32 2, !dbg !4517
  %overflow_arg_area1856 = load i8*, i8** %overflow_arg_area_p1855, align 8, !dbg !4517
  %1012 = bitcast i8* %overflow_arg_area1856 to i8**, !dbg !4517
  %overflow_arg_area.next1857 = getelementptr i8, i8* %overflow_arg_area1856, i32 8, !dbg !4517
  store i8* %overflow_arg_area.next1857, i8** %overflow_arg_area_p1855, align 8, !dbg !4517
  br label %vaarg.end1858, !dbg !4517

vaarg.end1858:                                    ; preds = %vaarg.in_mem1854, %vaarg.in_reg1852
  %vaarg.addr1859 = phi i8** [ %1010, %vaarg.in_reg1852 ], [ %1012, %vaarg.in_mem1854 ], !dbg !4518
  %1013 = load i8*, i8** %vaarg.addr1859, align 8, !dbg !4518
  %1014 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4519
  %set1860 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1014, i32 0, i32 13, !dbg !4520
  %str1861 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1860, i32 0, i32 128, !dbg !4521
  %arrayidx1862 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1861, i64 0, i64 44, !dbg !4519
  %1015 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4522
  %set1863 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1015, i32 0, i32 13, !dbg !4523
  %str1864 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1863, i32 0, i32 128, !dbg !4524
  %arrayidx1865 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1864, i64 0, i64 45, !dbg !4522
  %call1866 = call i32 @setstropt_userpwd(i8* %1013, i8** %arrayidx1862, i8** %arrayidx1865), !dbg !4525
  store i32 %call1866, i32* %result, align 4, !dbg !4526
  br label %sw.epilog3648, !dbg !4527

sw.bb1867:                                        ; preds = %entry
  %1016 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4528
  %set1868 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1016, i32 0, i32 13, !dbg !4529
  %str1869 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1868, i32 0, i32 128, !dbg !4530
  %arrayidx1870 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1869, i64 0, i64 44, !dbg !4528
  %1017 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4531
  %gp_offset_p1871 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1017, i32 0, i32 0, !dbg !4531
  %gp_offset1872 = load i32, i32* %gp_offset_p1871, align 8, !dbg !4531
  %fits_in_gp1873 = icmp ule i32 %gp_offset1872, 40, !dbg !4531
  br i1 %fits_in_gp1873, label %vaarg.in_reg1874, label %vaarg.in_mem1876, !dbg !4531

vaarg.in_reg1874:                                 ; preds = %sw.bb1867
  %1018 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1017, i32 0, i32 3, !dbg !4532
  %reg_save_area1875 = load i8*, i8** %1018, align 8, !dbg !4532
  %1019 = getelementptr i8, i8* %reg_save_area1875, i32 %gp_offset1872, !dbg !4532
  %1020 = bitcast i8* %1019 to i8**, !dbg !4532
  %1021 = add i32 %gp_offset1872, 8, !dbg !4532
  store i32 %1021, i32* %gp_offset_p1871, align 8, !dbg !4532
  br label %vaarg.end1880, !dbg !4532

vaarg.in_mem1876:                                 ; preds = %sw.bb1867
  %overflow_arg_area_p1877 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1017, i32 0, i32 2, !dbg !4533
  %overflow_arg_area1878 = load i8*, i8** %overflow_arg_area_p1877, align 8, !dbg !4533
  %1022 = bitcast i8* %overflow_arg_area1878 to i8**, !dbg !4533
  %overflow_arg_area.next1879 = getelementptr i8, i8* %overflow_arg_area1878, i32 8, !dbg !4533
  store i8* %overflow_arg_area.next1879, i8** %overflow_arg_area_p1877, align 8, !dbg !4533
  br label %vaarg.end1880, !dbg !4533

vaarg.end1880:                                    ; preds = %vaarg.in_mem1876, %vaarg.in_reg1874
  %vaarg.addr1881 = phi i8** [ %1020, %vaarg.in_reg1874 ], [ %1022, %vaarg.in_mem1876 ], !dbg !4534
  %1023 = load i8*, i8** %vaarg.addr1881, align 8, !dbg !4534
  %call1882 = call i32 @setstropt(i8** %arrayidx1870, i8* %1023), !dbg !4535
  store i32 %call1882, i32* %result, align 4, !dbg !4536
  br label %sw.epilog3648, !dbg !4537

sw.bb1883:                                        ; preds = %entry
  %1024 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4538
  %set1884 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1024, i32 0, i32 13, !dbg !4539
  %str1885 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1884, i32 0, i32 128, !dbg !4540
  %arrayidx1886 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1885, i64 0, i64 45, !dbg !4538
  %1025 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4541
  %gp_offset_p1887 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1025, i32 0, i32 0, !dbg !4541
  %gp_offset1888 = load i32, i32* %gp_offset_p1887, align 8, !dbg !4541
  %fits_in_gp1889 = icmp ule i32 %gp_offset1888, 40, !dbg !4541
  br i1 %fits_in_gp1889, label %vaarg.in_reg1890, label %vaarg.in_mem1892, !dbg !4541

vaarg.in_reg1890:                                 ; preds = %sw.bb1883
  %1026 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1025, i32 0, i32 3, !dbg !4542
  %reg_save_area1891 = load i8*, i8** %1026, align 8, !dbg !4542
  %1027 = getelementptr i8, i8* %reg_save_area1891, i32 %gp_offset1888, !dbg !4542
  %1028 = bitcast i8* %1027 to i8**, !dbg !4542
  %1029 = add i32 %gp_offset1888, 8, !dbg !4542
  store i32 %1029, i32* %gp_offset_p1887, align 8, !dbg !4542
  br label %vaarg.end1896, !dbg !4542

vaarg.in_mem1892:                                 ; preds = %sw.bb1883
  %overflow_arg_area_p1893 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1025, i32 0, i32 2, !dbg !4543
  %overflow_arg_area1894 = load i8*, i8** %overflow_arg_area_p1893, align 8, !dbg !4543
  %1030 = bitcast i8* %overflow_arg_area1894 to i8**, !dbg !4543
  %overflow_arg_area.next1895 = getelementptr i8, i8* %overflow_arg_area1894, i32 8, !dbg !4543
  store i8* %overflow_arg_area.next1895, i8** %overflow_arg_area_p1893, align 8, !dbg !4543
  br label %vaarg.end1896, !dbg !4543

vaarg.end1896:                                    ; preds = %vaarg.in_mem1892, %vaarg.in_reg1890
  %vaarg.addr1897 = phi i8** [ %1028, %vaarg.in_reg1890 ], [ %1030, %vaarg.in_mem1892 ], !dbg !4544
  %1031 = load i8*, i8** %vaarg.addr1897, align 8, !dbg !4544
  %call1898 = call i32 @setstropt(i8** %arrayidx1886, i8* %1031), !dbg !4545
  store i32 %call1898, i32* %result, align 4, !dbg !4546
  br label %sw.epilog3648, !dbg !4547

sw.bb1899:                                        ; preds = %entry
  %1032 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4548
  %set1900 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1032, i32 0, i32 13, !dbg !4549
  %str1901 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1900, i32 0, i32 128, !dbg !4550
  %arrayidx1902 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1901, i64 0, i64 46, !dbg !4548
  %1033 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4551
  %gp_offset_p1903 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1033, i32 0, i32 0, !dbg !4551
  %gp_offset1904 = load i32, i32* %gp_offset_p1903, align 8, !dbg !4551
  %fits_in_gp1905 = icmp ule i32 %gp_offset1904, 40, !dbg !4551
  br i1 %fits_in_gp1905, label %vaarg.in_reg1906, label %vaarg.in_mem1908, !dbg !4551

vaarg.in_reg1906:                                 ; preds = %sw.bb1899
  %1034 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1033, i32 0, i32 3, !dbg !4552
  %reg_save_area1907 = load i8*, i8** %1034, align 8, !dbg !4552
  %1035 = getelementptr i8, i8* %reg_save_area1907, i32 %gp_offset1904, !dbg !4552
  %1036 = bitcast i8* %1035 to i8**, !dbg !4552
  %1037 = add i32 %gp_offset1904, 8, !dbg !4552
  store i32 %1037, i32* %gp_offset_p1903, align 8, !dbg !4552
  br label %vaarg.end1912, !dbg !4552

vaarg.in_mem1908:                                 ; preds = %sw.bb1899
  %overflow_arg_area_p1909 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1033, i32 0, i32 2, !dbg !4553
  %overflow_arg_area1910 = load i8*, i8** %overflow_arg_area_p1909, align 8, !dbg !4553
  %1038 = bitcast i8* %overflow_arg_area1910 to i8**, !dbg !4553
  %overflow_arg_area.next1911 = getelementptr i8, i8* %overflow_arg_area1910, i32 8, !dbg !4553
  store i8* %overflow_arg_area.next1911, i8** %overflow_arg_area_p1909, align 8, !dbg !4553
  br label %vaarg.end1912, !dbg !4553

vaarg.end1912:                                    ; preds = %vaarg.in_mem1908, %vaarg.in_reg1906
  %vaarg.addr1913 = phi i8** [ %1036, %vaarg.in_reg1906 ], [ %1038, %vaarg.in_mem1908 ], !dbg !4554
  %1039 = load i8*, i8** %vaarg.addr1913, align 8, !dbg !4554
  %call1914 = call i32 @setstropt(i8** %arrayidx1902, i8* %1039), !dbg !4555
  store i32 %call1914, i32* %result, align 4, !dbg !4556
  br label %sw.epilog3648, !dbg !4557

sw.bb1915:                                        ; preds = %entry
  %1040 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4558
  %set1916 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1040, i32 0, i32 13, !dbg !4559
  %str1917 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1916, i32 0, i32 128, !dbg !4560
  %arrayidx1918 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str1917, i64 0, i64 23, !dbg !4558
  %1041 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4561
  %gp_offset_p1919 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1041, i32 0, i32 0, !dbg !4561
  %gp_offset1920 = load i32, i32* %gp_offset_p1919, align 8, !dbg !4561
  %fits_in_gp1921 = icmp ule i32 %gp_offset1920, 40, !dbg !4561
  br i1 %fits_in_gp1921, label %vaarg.in_reg1922, label %vaarg.in_mem1924, !dbg !4561

vaarg.in_reg1922:                                 ; preds = %sw.bb1915
  %1042 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1041, i32 0, i32 3, !dbg !4562
  %reg_save_area1923 = load i8*, i8** %1042, align 8, !dbg !4562
  %1043 = getelementptr i8, i8* %reg_save_area1923, i32 %gp_offset1920, !dbg !4562
  %1044 = bitcast i8* %1043 to i8**, !dbg !4562
  %1045 = add i32 %gp_offset1920, 8, !dbg !4562
  store i32 %1045, i32* %gp_offset_p1919, align 8, !dbg !4562
  br label %vaarg.end1928, !dbg !4562

vaarg.in_mem1924:                                 ; preds = %sw.bb1915
  %overflow_arg_area_p1925 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1041, i32 0, i32 2, !dbg !4563
  %overflow_arg_area1926 = load i8*, i8** %overflow_arg_area_p1925, align 8, !dbg !4563
  %1046 = bitcast i8* %overflow_arg_area1926 to i8**, !dbg !4563
  %overflow_arg_area.next1927 = getelementptr i8, i8* %overflow_arg_area1926, i32 8, !dbg !4563
  store i8* %overflow_arg_area.next1927, i8** %overflow_arg_area_p1925, align 8, !dbg !4563
  br label %vaarg.end1928, !dbg !4563

vaarg.end1928:                                    ; preds = %vaarg.in_mem1924, %vaarg.in_reg1922
  %vaarg.addr1929 = phi i8** [ %1044, %vaarg.in_reg1922 ], [ %1046, %vaarg.in_mem1924 ], !dbg !4564
  %1047 = load i8*, i8** %vaarg.addr1929, align 8, !dbg !4564
  %call1930 = call i32 @setstropt(i8** %arrayidx1918, i8* %1047), !dbg !4565
  store i32 %call1930, i32* %result, align 4, !dbg !4566
  br label %sw.epilog3648, !dbg !4567

sw.bb1931:                                        ; preds = %entry
  %1048 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4568
  %gp_offset_p1932 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1048, i32 0, i32 0, !dbg !4568
  %gp_offset1933 = load i32, i32* %gp_offset_p1932, align 8, !dbg !4568
  %fits_in_gp1934 = icmp ule i32 %gp_offset1933, 40, !dbg !4568
  br i1 %fits_in_gp1934, label %vaarg.in_reg1935, label %vaarg.in_mem1937, !dbg !4568

vaarg.in_reg1935:                                 ; preds = %sw.bb1931
  %1049 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1048, i32 0, i32 3, !dbg !4569
  %reg_save_area1936 = load i8*, i8** %1049, align 8, !dbg !4569
  %1050 = getelementptr i8, i8* %reg_save_area1936, i32 %gp_offset1933, !dbg !4569
  %1051 = bitcast i8* %1050 to i64*, !dbg !4569
  %1052 = add i32 %gp_offset1933, 8, !dbg !4569
  store i32 %1052, i32* %gp_offset_p1932, align 8, !dbg !4569
  br label %vaarg.end1941, !dbg !4569

vaarg.in_mem1937:                                 ; preds = %sw.bb1931
  %overflow_arg_area_p1938 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1048, i32 0, i32 2, !dbg !4570
  %overflow_arg_area1939 = load i8*, i8** %overflow_arg_area_p1938, align 8, !dbg !4570
  %1053 = bitcast i8* %overflow_arg_area1939 to i64*, !dbg !4570
  %overflow_arg_area.next1940 = getelementptr i8, i8* %overflow_arg_area1939, i32 8, !dbg !4570
  store i8* %overflow_arg_area.next1940, i8** %overflow_arg_area_p1938, align 8, !dbg !4570
  br label %vaarg.end1941, !dbg !4570

vaarg.end1941:                                    ; preds = %vaarg.in_mem1937, %vaarg.in_reg1935
  %vaarg.addr1942 = phi i64* [ %1051, %vaarg.in_reg1935 ], [ %1053, %vaarg.in_mem1937 ], !dbg !4571
  %1054 = load i64, i64* %vaarg.addr1942, align 8, !dbg !4571
  %1055 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4572
  %set1943 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1055, i32 0, i32 13, !dbg !4573
  %set_resume_from = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1943, i32 0, i32 53, !dbg !4574
  store i64 %1054, i64* %set_resume_from, align 8, !dbg !4575
  br label %sw.epilog3648, !dbg !4576

sw.bb1944:                                        ; preds = %entry
  %1056 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4577
  %gp_offset_p1945 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1056, i32 0, i32 0, !dbg !4577
  %gp_offset1946 = load i32, i32* %gp_offset_p1945, align 8, !dbg !4577
  %fits_in_gp1947 = icmp ule i32 %gp_offset1946, 40, !dbg !4577
  br i1 %fits_in_gp1947, label %vaarg.in_reg1948, label %vaarg.in_mem1950, !dbg !4577

vaarg.in_reg1948:                                 ; preds = %sw.bb1944
  %1057 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1056, i32 0, i32 3, !dbg !4578
  %reg_save_area1949 = load i8*, i8** %1057, align 8, !dbg !4578
  %1058 = getelementptr i8, i8* %reg_save_area1949, i32 %gp_offset1946, !dbg !4578
  %1059 = bitcast i8* %1058 to i64*, !dbg !4578
  %1060 = add i32 %gp_offset1946, 8, !dbg !4578
  store i32 %1060, i32* %gp_offset_p1945, align 8, !dbg !4578
  br label %vaarg.end1954, !dbg !4578

vaarg.in_mem1950:                                 ; preds = %sw.bb1944
  %overflow_arg_area_p1951 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1056, i32 0, i32 2, !dbg !4579
  %overflow_arg_area1952 = load i8*, i8** %overflow_arg_area_p1951, align 8, !dbg !4579
  %1061 = bitcast i8* %overflow_arg_area1952 to i64*, !dbg !4579
  %overflow_arg_area.next1953 = getelementptr i8, i8* %overflow_arg_area1952, i32 8, !dbg !4579
  store i8* %overflow_arg_area.next1953, i8** %overflow_arg_area_p1951, align 8, !dbg !4579
  br label %vaarg.end1954, !dbg !4579

vaarg.end1954:                                    ; preds = %vaarg.in_mem1950, %vaarg.in_reg1948
  %vaarg.addr1955 = phi i64* [ %1059, %vaarg.in_reg1948 ], [ %1061, %vaarg.in_mem1950 ], !dbg !4580
  %1062 = load i64, i64* %vaarg.addr1955, align 8, !dbg !4580
  %1063 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4581
  %set1956 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1063, i32 0, i32 13, !dbg !4582
  %set_resume_from1957 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1956, i32 0, i32 53, !dbg !4583
  store i64 %1062, i64* %set_resume_from1957, align 8, !dbg !4584
  br label %sw.epilog3648, !dbg !4585

sw.bb1958:                                        ; preds = %entry
  %1064 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4586
  %gp_offset_p1959 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1064, i32 0, i32 0, !dbg !4586
  %gp_offset1960 = load i32, i32* %gp_offset_p1959, align 8, !dbg !4586
  %fits_in_gp1961 = icmp ule i32 %gp_offset1960, 40, !dbg !4586
  br i1 %fits_in_gp1961, label %vaarg.in_reg1962, label %vaarg.in_mem1964, !dbg !4586

vaarg.in_reg1962:                                 ; preds = %sw.bb1958
  %1065 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1064, i32 0, i32 3, !dbg !4587
  %reg_save_area1963 = load i8*, i8** %1065, align 8, !dbg !4587
  %1066 = getelementptr i8, i8* %reg_save_area1963, i32 %gp_offset1960, !dbg !4587
  %1067 = bitcast i8* %1066 to i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)**, !dbg !4587
  %1068 = add i32 %gp_offset1960, 8, !dbg !4587
  store i32 %1068, i32* %gp_offset_p1959, align 8, !dbg !4587
  br label %vaarg.end1968, !dbg !4587

vaarg.in_mem1964:                                 ; preds = %sw.bb1958
  %overflow_arg_area_p1965 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1064, i32 0, i32 2, !dbg !4588
  %overflow_arg_area1966 = load i8*, i8** %overflow_arg_area_p1965, align 8, !dbg !4588
  %1069 = bitcast i8* %overflow_arg_area1966 to i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)**, !dbg !4588
  %overflow_arg_area.next1967 = getelementptr i8, i8* %overflow_arg_area1966, i32 8, !dbg !4588
  store i8* %overflow_arg_area.next1967, i8** %overflow_arg_area_p1965, align 8, !dbg !4588
  br label %vaarg.end1968, !dbg !4588

vaarg.end1968:                                    ; preds = %vaarg.in_mem1964, %vaarg.in_reg1962
  %vaarg.addr1969 = phi i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)** [ %1067, %vaarg.in_reg1962 ], [ %1069, %vaarg.in_mem1964 ], !dbg !4589
  %1070 = load i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)*, i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)** %vaarg.addr1969, align 8, !dbg !4589
  %1071 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4590
  %set1970 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1071, i32 0, i32 13, !dbg !4591
  %fdebug = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1970, i32 0, i32 28, !dbg !4592
  store i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)* %1070, i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)** %fdebug, align 8, !dbg !4593
  br label %sw.epilog3648, !dbg !4594

sw.bb1971:                                        ; preds = %entry
  %1072 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4595
  %gp_offset_p1972 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1072, i32 0, i32 0, !dbg !4595
  %gp_offset1973 = load i32, i32* %gp_offset_p1972, align 8, !dbg !4595
  %fits_in_gp1974 = icmp ule i32 %gp_offset1973, 40, !dbg !4595
  br i1 %fits_in_gp1974, label %vaarg.in_reg1975, label %vaarg.in_mem1977, !dbg !4595

vaarg.in_reg1975:                                 ; preds = %sw.bb1971
  %1073 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1072, i32 0, i32 3, !dbg !4596
  %reg_save_area1976 = load i8*, i8** %1073, align 8, !dbg !4596
  %1074 = getelementptr i8, i8* %reg_save_area1976, i32 %gp_offset1973, !dbg !4596
  %1075 = bitcast i8* %1074 to i8**, !dbg !4596
  %1076 = add i32 %gp_offset1973, 8, !dbg !4596
  store i32 %1076, i32* %gp_offset_p1972, align 8, !dbg !4596
  br label %vaarg.end1981, !dbg !4596

vaarg.in_mem1977:                                 ; preds = %sw.bb1971
  %overflow_arg_area_p1978 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1072, i32 0, i32 2, !dbg !4597
  %overflow_arg_area1979 = load i8*, i8** %overflow_arg_area_p1978, align 8, !dbg !4597
  %1077 = bitcast i8* %overflow_arg_area1979 to i8**, !dbg !4597
  %overflow_arg_area.next1980 = getelementptr i8, i8* %overflow_arg_area1979, i32 8, !dbg !4597
  store i8* %overflow_arg_area.next1980, i8** %overflow_arg_area_p1978, align 8, !dbg !4597
  br label %vaarg.end1981, !dbg !4597

vaarg.end1981:                                    ; preds = %vaarg.in_mem1977, %vaarg.in_reg1975
  %vaarg.addr1982 = phi i8** [ %1075, %vaarg.in_reg1975 ], [ %1077, %vaarg.in_mem1977 ], !dbg !4598
  %1078 = load i8*, i8** %vaarg.addr1982, align 8, !dbg !4598
  %1079 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4599
  %set1983 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1079, i32 0, i32 13, !dbg !4600
  %debugdata = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1983, i32 0, i32 1, !dbg !4601
  store i8* %1078, i8** %debugdata, align 8, !dbg !4602
  br label %sw.epilog3648, !dbg !4603

sw.bb1984:                                        ; preds = %entry
  %1080 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4604
  %gp_offset_p1985 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1080, i32 0, i32 0, !dbg !4604
  %gp_offset1986 = load i32, i32* %gp_offset_p1985, align 8, !dbg !4604
  %fits_in_gp1987 = icmp ule i32 %gp_offset1986, 40, !dbg !4604
  br i1 %fits_in_gp1987, label %vaarg.in_reg1988, label %vaarg.in_mem1990, !dbg !4604

vaarg.in_reg1988:                                 ; preds = %sw.bb1984
  %1081 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1080, i32 0, i32 3, !dbg !4605
  %reg_save_area1989 = load i8*, i8** %1081, align 8, !dbg !4605
  %1082 = getelementptr i8, i8* %reg_save_area1989, i32 %gp_offset1986, !dbg !4605
  %1083 = bitcast i8* %1082 to %struct._IO_FILE**, !dbg !4605
  %1084 = add i32 %gp_offset1986, 8, !dbg !4605
  store i32 %1084, i32* %gp_offset_p1985, align 8, !dbg !4605
  br label %vaarg.end1994, !dbg !4605

vaarg.in_mem1990:                                 ; preds = %sw.bb1984
  %overflow_arg_area_p1991 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1080, i32 0, i32 2, !dbg !4606
  %overflow_arg_area1992 = load i8*, i8** %overflow_arg_area_p1991, align 8, !dbg !4606
  %1085 = bitcast i8* %overflow_arg_area1992 to %struct._IO_FILE**, !dbg !4606
  %overflow_arg_area.next1993 = getelementptr i8, i8* %overflow_arg_area1992, i32 8, !dbg !4606
  store i8* %overflow_arg_area.next1993, i8** %overflow_arg_area_p1991, align 8, !dbg !4606
  br label %vaarg.end1994, !dbg !4606

vaarg.end1994:                                    ; preds = %vaarg.in_mem1990, %vaarg.in_reg1988
  %vaarg.addr1995 = phi %struct._IO_FILE** [ %1083, %vaarg.in_reg1988 ], [ %1085, %vaarg.in_mem1990 ], !dbg !4607
  %1086 = load %struct._IO_FILE*, %struct._IO_FILE** %vaarg.addr1995, align 8, !dbg !4607
  %1087 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4608
  %set1996 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1087, i32 0, i32 13, !dbg !4609
  %err = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1996, i32 0, i32 0, !dbg !4610
  store %struct._IO_FILE* %1086, %struct._IO_FILE** %err, align 8, !dbg !4611
  %1088 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4612
  %set1997 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1088, i32 0, i32 13, !dbg !4614
  %err1998 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1997, i32 0, i32 0, !dbg !4615
  %1089 = load %struct._IO_FILE*, %struct._IO_FILE** %err1998, align 8, !dbg !4615
  %tobool1999 = icmp ne %struct._IO_FILE* %1089, null, !dbg !4612
  br i1 %tobool1999, label %if.end2003, label %if.then2000, !dbg !4616

if.then2000:                                      ; preds = %vaarg.end1994
  %1090 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4617
  %1091 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4618
  %set2001 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1091, i32 0, i32 13, !dbg !4619
  %err2002 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2001, i32 0, i32 0, !dbg !4620
  store %struct._IO_FILE* %1090, %struct._IO_FILE** %err2002, align 8, !dbg !4621
  br label %if.end2003, !dbg !4618

if.end2003:                                       ; preds = %if.then2000, %vaarg.end1994
  br label %sw.epilog3648, !dbg !4622

sw.bb2004:                                        ; preds = %entry
  %1092 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4623
  %gp_offset_p2005 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1092, i32 0, i32 0, !dbg !4623
  %gp_offset2006 = load i32, i32* %gp_offset_p2005, align 8, !dbg !4623
  %fits_in_gp2007 = icmp ule i32 %gp_offset2006, 40, !dbg !4623
  br i1 %fits_in_gp2007, label %vaarg.in_reg2008, label %vaarg.in_mem2010, !dbg !4623

vaarg.in_reg2008:                                 ; preds = %sw.bb2004
  %1093 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1092, i32 0, i32 3, !dbg !4624
  %reg_save_area2009 = load i8*, i8** %1093, align 8, !dbg !4624
  %1094 = getelementptr i8, i8* %reg_save_area2009, i32 %gp_offset2006, !dbg !4624
  %1095 = bitcast i8* %1094 to i64 (i8*, i64, i64, i8*)**, !dbg !4624
  %1096 = add i32 %gp_offset2006, 8, !dbg !4624
  store i32 %1096, i32* %gp_offset_p2005, align 8, !dbg !4624
  br label %vaarg.end2014, !dbg !4624

vaarg.in_mem2010:                                 ; preds = %sw.bb2004
  %overflow_arg_area_p2011 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1092, i32 0, i32 2, !dbg !4625
  %overflow_arg_area2012 = load i8*, i8** %overflow_arg_area_p2011, align 8, !dbg !4625
  %1097 = bitcast i8* %overflow_arg_area2012 to i64 (i8*, i64, i64, i8*)**, !dbg !4625
  %overflow_arg_area.next2013 = getelementptr i8, i8* %overflow_arg_area2012, i32 8, !dbg !4625
  store i8* %overflow_arg_area.next2013, i8** %overflow_arg_area_p2011, align 8, !dbg !4625
  br label %vaarg.end2014, !dbg !4625

vaarg.end2014:                                    ; preds = %vaarg.in_mem2010, %vaarg.in_reg2008
  %vaarg.addr2015 = phi i64 (i8*, i64, i64, i8*)** [ %1095, %vaarg.in_reg2008 ], [ %1097, %vaarg.in_mem2010 ], !dbg !4626
  %1098 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %vaarg.addr2015, align 8, !dbg !4626
  %1099 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4627
  %set2016 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1099, i32 0, i32 13, !dbg !4628
  %fwrite_header = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2016, i32 0, i32 21, !dbg !4629
  store i64 (i8*, i64, i64, i8*)* %1098, i64 (i8*, i64, i64, i8*)** %fwrite_header, align 8, !dbg !4630
  br label %sw.epilog3648, !dbg !4631

sw.bb2017:                                        ; preds = %entry
  %1100 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4632
  %gp_offset_p2018 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1100, i32 0, i32 0, !dbg !4632
  %gp_offset2019 = load i32, i32* %gp_offset_p2018, align 8, !dbg !4632
  %fits_in_gp2020 = icmp ule i32 %gp_offset2019, 40, !dbg !4632
  br i1 %fits_in_gp2020, label %vaarg.in_reg2021, label %vaarg.in_mem2023, !dbg !4632

vaarg.in_reg2021:                                 ; preds = %sw.bb2017
  %1101 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1100, i32 0, i32 3, !dbg !4633
  %reg_save_area2022 = load i8*, i8** %1101, align 8, !dbg !4633
  %1102 = getelementptr i8, i8* %reg_save_area2022, i32 %gp_offset2019, !dbg !4633
  %1103 = bitcast i8* %1102 to i64 (i8*, i64, i64, i8*)**, !dbg !4633
  %1104 = add i32 %gp_offset2019, 8, !dbg !4633
  store i32 %1104, i32* %gp_offset_p2018, align 8, !dbg !4633
  br label %vaarg.end2027, !dbg !4633

vaarg.in_mem2023:                                 ; preds = %sw.bb2017
  %overflow_arg_area_p2024 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1100, i32 0, i32 2, !dbg !4634
  %overflow_arg_area2025 = load i8*, i8** %overflow_arg_area_p2024, align 8, !dbg !4634
  %1105 = bitcast i8* %overflow_arg_area2025 to i64 (i8*, i64, i64, i8*)**, !dbg !4634
  %overflow_arg_area.next2026 = getelementptr i8, i8* %overflow_arg_area2025, i32 8, !dbg !4634
  store i8* %overflow_arg_area.next2026, i8** %overflow_arg_area_p2024, align 8, !dbg !4634
  br label %vaarg.end2027, !dbg !4634

vaarg.end2027:                                    ; preds = %vaarg.in_mem2023, %vaarg.in_reg2021
  %vaarg.addr2028 = phi i64 (i8*, i64, i64, i8*)** [ %1103, %vaarg.in_reg2021 ], [ %1105, %vaarg.in_mem2023 ], !dbg !4635
  %1106 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %vaarg.addr2028, align 8, !dbg !4635
  %1107 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4636
  %set2029 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1107, i32 0, i32 13, !dbg !4637
  %fwrite_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2029, i32 0, i32 20, !dbg !4638
  store i64 (i8*, i64, i64, i8*)* %1106, i64 (i8*, i64, i64, i8*)** %fwrite_func, align 8, !dbg !4639
  %1108 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4640
  %set2030 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1108, i32 0, i32 13, !dbg !4642
  %fwrite_func2031 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2030, i32 0, i32 20, !dbg !4643
  %1109 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fwrite_func2031, align 8, !dbg !4643
  %tobool2032 = icmp ne i64 (i8*, i64, i64, i8*)* %1109, null, !dbg !4640
  br i1 %tobool2032, label %if.else2037, label %if.then2033, !dbg !4644

if.then2033:                                      ; preds = %vaarg.end2027
  %1110 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4645
  %set2034 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1110, i32 0, i32 13, !dbg !4647
  %is_fwrite_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2034, i32 0, i32 25, !dbg !4648
  store i32 0, i32* %is_fwrite_set, align 4, !dbg !4649
  %1111 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4650
  %set2035 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1111, i32 0, i32 13, !dbg !4651
  %fwrite_func2036 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2035, i32 0, i32 20, !dbg !4652
  store i64 (i8*, i64, i64, i8*)* bitcast (i64 (i8*, i64, i64, %struct._IO_FILE*)* @fwrite to i64 (i8*, i64, i64, i8*)*), i64 (i8*, i64, i64, i8*)** %fwrite_func2036, align 8, !dbg !4653
  br label %if.end2040, !dbg !4654

if.else2037:                                      ; preds = %vaarg.end2027
  %1112 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4655
  %set2038 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1112, i32 0, i32 13, !dbg !4656
  %is_fwrite_set2039 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2038, i32 0, i32 25, !dbg !4657
  store i32 1, i32* %is_fwrite_set2039, align 4, !dbg !4658
  br label %if.end2040

if.end2040:                                       ; preds = %if.else2037, %if.then2033
  br label %sw.epilog3648, !dbg !4659

sw.bb2041:                                        ; preds = %entry
  %1113 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4660
  %gp_offset_p2042 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1113, i32 0, i32 0, !dbg !4660
  %gp_offset2043 = load i32, i32* %gp_offset_p2042, align 8, !dbg !4660
  %fits_in_gp2044 = icmp ule i32 %gp_offset2043, 40, !dbg !4660
  br i1 %fits_in_gp2044, label %vaarg.in_reg2045, label %vaarg.in_mem2047, !dbg !4660

vaarg.in_reg2045:                                 ; preds = %sw.bb2041
  %1114 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1113, i32 0, i32 3, !dbg !4661
  %reg_save_area2046 = load i8*, i8** %1114, align 8, !dbg !4661
  %1115 = getelementptr i8, i8* %reg_save_area2046, i32 %gp_offset2043, !dbg !4661
  %1116 = bitcast i8* %1115 to i64 (i8*, i64, i64, i8*)**, !dbg !4661
  %1117 = add i32 %gp_offset2043, 8, !dbg !4661
  store i32 %1117, i32* %gp_offset_p2042, align 8, !dbg !4661
  br label %vaarg.end2051, !dbg !4661

vaarg.in_mem2047:                                 ; preds = %sw.bb2041
  %overflow_arg_area_p2048 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1113, i32 0, i32 2, !dbg !4662
  %overflow_arg_area2049 = load i8*, i8** %overflow_arg_area_p2048, align 8, !dbg !4662
  %1118 = bitcast i8* %overflow_arg_area2049 to i64 (i8*, i64, i64, i8*)**, !dbg !4662
  %overflow_arg_area.next2050 = getelementptr i8, i8* %overflow_arg_area2049, i32 8, !dbg !4662
  store i8* %overflow_arg_area.next2050, i8** %overflow_arg_area_p2048, align 8, !dbg !4662
  br label %vaarg.end2051, !dbg !4662

vaarg.end2051:                                    ; preds = %vaarg.in_mem2047, %vaarg.in_reg2045
  %vaarg.addr2052 = phi i64 (i8*, i64, i64, i8*)** [ %1116, %vaarg.in_reg2045 ], [ %1118, %vaarg.in_mem2047 ], !dbg !4663
  %1119 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %vaarg.addr2052, align 8, !dbg !4663
  %1120 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4664
  %set2053 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1120, i32 0, i32 13, !dbg !4665
  %fread_func_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2053, i32 0, i32 23, !dbg !4666
  store i64 (i8*, i64, i64, i8*)* %1119, i64 (i8*, i64, i64, i8*)** %fread_func_set, align 8, !dbg !4667
  %1121 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4668
  %set2054 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1121, i32 0, i32 13, !dbg !4670
  %fread_func_set2055 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2054, i32 0, i32 23, !dbg !4671
  %1122 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fread_func_set2055, align 8, !dbg !4671
  %tobool2056 = icmp ne i64 (i8*, i64, i64, i8*)* %1122, null, !dbg !4668
  br i1 %tobool2056, label %if.else2061, label %if.then2057, !dbg !4672

if.then2057:                                      ; preds = %vaarg.end2051
  %1123 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4673
  %set2058 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1123, i32 0, i32 13, !dbg !4675
  %is_fread_set = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2058, i32 0, i32 24, !dbg !4676
  store i32 0, i32* %is_fread_set, align 8, !dbg !4677
  %1124 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4678
  %set2059 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1124, i32 0, i32 13, !dbg !4679
  %fread_func_set2060 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2059, i32 0, i32 23, !dbg !4680
  store i64 (i8*, i64, i64, i8*)* bitcast (i64 (i8*, i64, i64, %struct._IO_FILE*)* @fread to i64 (i8*, i64, i64, i8*)*), i64 (i8*, i64, i64, i8*)** %fread_func_set2060, align 8, !dbg !4681
  br label %if.end2064, !dbg !4682

if.else2061:                                      ; preds = %vaarg.end2051
  %1125 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4683
  %set2062 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1125, i32 0, i32 13, !dbg !4684
  %is_fread_set2063 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2062, i32 0, i32 24, !dbg !4685
  store i32 1, i32* %is_fread_set2063, align 8, !dbg !4686
  br label %if.end2064

if.end2064:                                       ; preds = %if.else2061, %if.then2057
  br label %sw.epilog3648, !dbg !4687

sw.bb2065:                                        ; preds = %entry
  %1126 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4688
  %gp_offset_p2066 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1126, i32 0, i32 0, !dbg !4688
  %gp_offset2067 = load i32, i32* %gp_offset_p2066, align 8, !dbg !4688
  %fits_in_gp2068 = icmp ule i32 %gp_offset2067, 40, !dbg !4688
  br i1 %fits_in_gp2068, label %vaarg.in_reg2069, label %vaarg.in_mem2071, !dbg !4688

vaarg.in_reg2069:                                 ; preds = %sw.bb2065
  %1127 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1126, i32 0, i32 3, !dbg !4689
  %reg_save_area2070 = load i8*, i8** %1127, align 8, !dbg !4689
  %1128 = getelementptr i8, i8* %reg_save_area2070, i32 %gp_offset2067, !dbg !4689
  %1129 = bitcast i8* %1128 to i32 (i8*, i64, i32)**, !dbg !4689
  %1130 = add i32 %gp_offset2067, 8, !dbg !4689
  store i32 %1130, i32* %gp_offset_p2066, align 8, !dbg !4689
  br label %vaarg.end2075, !dbg !4689

vaarg.in_mem2071:                                 ; preds = %sw.bb2065
  %overflow_arg_area_p2072 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1126, i32 0, i32 2, !dbg !4690
  %overflow_arg_area2073 = load i8*, i8** %overflow_arg_area_p2072, align 8, !dbg !4690
  %1131 = bitcast i8* %overflow_arg_area2073 to i32 (i8*, i64, i32)**, !dbg !4690
  %overflow_arg_area.next2074 = getelementptr i8, i8* %overflow_arg_area2073, i32 8, !dbg !4690
  store i8* %overflow_arg_area.next2074, i8** %overflow_arg_area_p2072, align 8, !dbg !4690
  br label %vaarg.end2075, !dbg !4690

vaarg.end2075:                                    ; preds = %vaarg.in_mem2071, %vaarg.in_reg2069
  %vaarg.addr2076 = phi i32 (i8*, i64, i32)** [ %1129, %vaarg.in_reg2069 ], [ %1131, %vaarg.in_mem2071 ], !dbg !4691
  %1132 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** %vaarg.addr2076, align 8, !dbg !4691
  %1133 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4692
  %set2077 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1133, i32 0, i32 13, !dbg !4693
  %seek_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2077, i32 0, i32 16, !dbg !4694
  store i32 (i8*, i64, i32)* %1132, i32 (i8*, i64, i32)** %seek_func, align 8, !dbg !4695
  br label %sw.epilog3648, !dbg !4696

sw.bb2078:                                        ; preds = %entry
  %1134 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4697
  %gp_offset_p2079 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1134, i32 0, i32 0, !dbg !4697
  %gp_offset2080 = load i32, i32* %gp_offset_p2079, align 8, !dbg !4697
  %fits_in_gp2081 = icmp ule i32 %gp_offset2080, 40, !dbg !4697
  br i1 %fits_in_gp2081, label %vaarg.in_reg2082, label %vaarg.in_mem2084, !dbg !4697

vaarg.in_reg2082:                                 ; preds = %sw.bb2078
  %1135 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1134, i32 0, i32 3, !dbg !4698
  %reg_save_area2083 = load i8*, i8** %1135, align 8, !dbg !4698
  %1136 = getelementptr i8, i8* %reg_save_area2083, i32 %gp_offset2080, !dbg !4698
  %1137 = bitcast i8* %1136 to i8**, !dbg !4698
  %1138 = add i32 %gp_offset2080, 8, !dbg !4698
  store i32 %1138, i32* %gp_offset_p2079, align 8, !dbg !4698
  br label %vaarg.end2088, !dbg !4698

vaarg.in_mem2084:                                 ; preds = %sw.bb2078
  %overflow_arg_area_p2085 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1134, i32 0, i32 2, !dbg !4699
  %overflow_arg_area2086 = load i8*, i8** %overflow_arg_area_p2085, align 8, !dbg !4699
  %1139 = bitcast i8* %overflow_arg_area2086 to i8**, !dbg !4699
  %overflow_arg_area.next2087 = getelementptr i8, i8* %overflow_arg_area2086, i32 8, !dbg !4699
  store i8* %overflow_arg_area.next2087, i8** %overflow_arg_area_p2085, align 8, !dbg !4699
  br label %vaarg.end2088, !dbg !4699

vaarg.end2088:                                    ; preds = %vaarg.in_mem2084, %vaarg.in_reg2082
  %vaarg.addr2089 = phi i8** [ %1137, %vaarg.in_reg2082 ], [ %1139, %vaarg.in_mem2084 ], !dbg !4700
  %1140 = load i8*, i8** %vaarg.addr2089, align 8, !dbg !4700
  %1141 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4701
  %set2090 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1141, i32 0, i32 13, !dbg !4702
  %seek_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2090, i32 0, i32 36, !dbg !4703
  store i8* %1140, i8** %seek_client, align 8, !dbg !4704
  br label %sw.epilog3648, !dbg !4705

sw.bb2091:                                        ; preds = %entry
  %1142 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4706
  %gp_offset_p2092 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1142, i32 0, i32 0, !dbg !4706
  %gp_offset2093 = load i32, i32* %gp_offset_p2092, align 8, !dbg !4706
  %fits_in_gp2094 = icmp ule i32 %gp_offset2093, 40, !dbg !4706
  br i1 %fits_in_gp2094, label %vaarg.in_reg2095, label %vaarg.in_mem2097, !dbg !4706

vaarg.in_reg2095:                                 ; preds = %sw.bb2091
  %1143 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1142, i32 0, i32 3, !dbg !4707
  %reg_save_area2096 = load i8*, i8** %1143, align 8, !dbg !4707
  %1144 = getelementptr i8, i8* %reg_save_area2096, i32 %gp_offset2093, !dbg !4707
  %1145 = bitcast i8* %1144 to i32 (i8*, i64)**, !dbg !4707
  %1146 = add i32 %gp_offset2093, 8, !dbg !4707
  store i32 %1146, i32* %gp_offset_p2092, align 8, !dbg !4707
  br label %vaarg.end2101, !dbg !4707

vaarg.in_mem2097:                                 ; preds = %sw.bb2091
  %overflow_arg_area_p2098 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1142, i32 0, i32 2, !dbg !4708
  %overflow_arg_area2099 = load i8*, i8** %overflow_arg_area_p2098, align 8, !dbg !4708
  %1147 = bitcast i8* %overflow_arg_area2099 to i32 (i8*, i64)**, !dbg !4708
  %overflow_arg_area.next2100 = getelementptr i8, i8* %overflow_arg_area2099, i32 8, !dbg !4708
  store i8* %overflow_arg_area.next2100, i8** %overflow_arg_area_p2098, align 8, !dbg !4708
  br label %vaarg.end2101, !dbg !4708

vaarg.end2101:                                    ; preds = %vaarg.in_mem2097, %vaarg.in_reg2095
  %vaarg.addr2102 = phi i32 (i8*, i64)** [ %1145, %vaarg.in_reg2095 ], [ %1147, %vaarg.in_mem2097 ], !dbg !4709
  %1148 = load i32 (i8*, i64)*, i32 (i8*, i64)** %vaarg.addr2102, align 8, !dbg !4709
  %1149 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4710
  %set2103 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1149, i32 0, i32 13, !dbg !4711
  %convfromnetwork = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2103, i32 0, i32 37, !dbg !4712
  store i32 (i8*, i64)* %1148, i32 (i8*, i64)** %convfromnetwork, align 8, !dbg !4713
  br label %sw.epilog3648, !dbg !4714

sw.bb2104:                                        ; preds = %entry
  %1150 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4715
  %gp_offset_p2105 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1150, i32 0, i32 0, !dbg !4715
  %gp_offset2106 = load i32, i32* %gp_offset_p2105, align 8, !dbg !4715
  %fits_in_gp2107 = icmp ule i32 %gp_offset2106, 40, !dbg !4715
  br i1 %fits_in_gp2107, label %vaarg.in_reg2108, label %vaarg.in_mem2110, !dbg !4715

vaarg.in_reg2108:                                 ; preds = %sw.bb2104
  %1151 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1150, i32 0, i32 3, !dbg !4716
  %reg_save_area2109 = load i8*, i8** %1151, align 8, !dbg !4716
  %1152 = getelementptr i8, i8* %reg_save_area2109, i32 %gp_offset2106, !dbg !4716
  %1153 = bitcast i8* %1152 to i32 (i8*, i64)**, !dbg !4716
  %1154 = add i32 %gp_offset2106, 8, !dbg !4716
  store i32 %1154, i32* %gp_offset_p2105, align 8, !dbg !4716
  br label %vaarg.end2114, !dbg !4716

vaarg.in_mem2110:                                 ; preds = %sw.bb2104
  %overflow_arg_area_p2111 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1150, i32 0, i32 2, !dbg !4717
  %overflow_arg_area2112 = load i8*, i8** %overflow_arg_area_p2111, align 8, !dbg !4717
  %1155 = bitcast i8* %overflow_arg_area2112 to i32 (i8*, i64)**, !dbg !4717
  %overflow_arg_area.next2113 = getelementptr i8, i8* %overflow_arg_area2112, i32 8, !dbg !4717
  store i8* %overflow_arg_area.next2113, i8** %overflow_arg_area_p2111, align 8, !dbg !4717
  br label %vaarg.end2114, !dbg !4717

vaarg.end2114:                                    ; preds = %vaarg.in_mem2110, %vaarg.in_reg2108
  %vaarg.addr2115 = phi i32 (i8*, i64)** [ %1153, %vaarg.in_reg2108 ], [ %1155, %vaarg.in_mem2110 ], !dbg !4718
  %1156 = load i32 (i8*, i64)*, i32 (i8*, i64)** %vaarg.addr2115, align 8, !dbg !4718
  %1157 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4719
  %set2116 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1157, i32 0, i32 13, !dbg !4720
  %convtonetwork = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2116, i32 0, i32 38, !dbg !4721
  store i32 (i8*, i64)* %1156, i32 (i8*, i64)** %convtonetwork, align 8, !dbg !4722
  br label %sw.epilog3648, !dbg !4723

sw.bb2117:                                        ; preds = %entry
  %1158 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4724
  %gp_offset_p2118 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1158, i32 0, i32 0, !dbg !4724
  %gp_offset2119 = load i32, i32* %gp_offset_p2118, align 8, !dbg !4724
  %fits_in_gp2120 = icmp ule i32 %gp_offset2119, 40, !dbg !4724
  br i1 %fits_in_gp2120, label %vaarg.in_reg2121, label %vaarg.in_mem2123, !dbg !4724

vaarg.in_reg2121:                                 ; preds = %sw.bb2117
  %1159 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1158, i32 0, i32 3, !dbg !4725
  %reg_save_area2122 = load i8*, i8** %1159, align 8, !dbg !4725
  %1160 = getelementptr i8, i8* %reg_save_area2122, i32 %gp_offset2119, !dbg !4725
  %1161 = bitcast i8* %1160 to i32 (i8*, i64)**, !dbg !4725
  %1162 = add i32 %gp_offset2119, 8, !dbg !4725
  store i32 %1162, i32* %gp_offset_p2118, align 8, !dbg !4725
  br label %vaarg.end2127, !dbg !4725

vaarg.in_mem2123:                                 ; preds = %sw.bb2117
  %overflow_arg_area_p2124 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1158, i32 0, i32 2, !dbg !4726
  %overflow_arg_area2125 = load i8*, i8** %overflow_arg_area_p2124, align 8, !dbg !4726
  %1163 = bitcast i8* %overflow_arg_area2125 to i32 (i8*, i64)**, !dbg !4726
  %overflow_arg_area.next2126 = getelementptr i8, i8* %overflow_arg_area2125, i32 8, !dbg !4726
  store i8* %overflow_arg_area.next2126, i8** %overflow_arg_area_p2124, align 8, !dbg !4726
  br label %vaarg.end2127, !dbg !4726

vaarg.end2127:                                    ; preds = %vaarg.in_mem2123, %vaarg.in_reg2121
  %vaarg.addr2128 = phi i32 (i8*, i64)** [ %1161, %vaarg.in_reg2121 ], [ %1163, %vaarg.in_mem2123 ], !dbg !4727
  %1164 = load i32 (i8*, i64)*, i32 (i8*, i64)** %vaarg.addr2128, align 8, !dbg !4727
  %1165 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4728
  %set2129 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1165, i32 0, i32 13, !dbg !4729
  %convfromutf8 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2129, i32 0, i32 39, !dbg !4730
  store i32 (i8*, i64)* %1164, i32 (i8*, i64)** %convfromutf8, align 8, !dbg !4731
  br label %sw.epilog3648, !dbg !4732

sw.bb2130:                                        ; preds = %entry
  %1166 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4733
  %gp_offset_p2131 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1166, i32 0, i32 0, !dbg !4733
  %gp_offset2132 = load i32, i32* %gp_offset_p2131, align 8, !dbg !4733
  %fits_in_gp2133 = icmp ule i32 %gp_offset2132, 40, !dbg !4733
  br i1 %fits_in_gp2133, label %vaarg.in_reg2134, label %vaarg.in_mem2136, !dbg !4733

vaarg.in_reg2134:                                 ; preds = %sw.bb2130
  %1167 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1166, i32 0, i32 3, !dbg !4734
  %reg_save_area2135 = load i8*, i8** %1167, align 8, !dbg !4734
  %1168 = getelementptr i8, i8* %reg_save_area2135, i32 %gp_offset2132, !dbg !4734
  %1169 = bitcast i8* %1168 to i32 (%struct.Curl_easy*, i32, i8*)**, !dbg !4734
  %1170 = add i32 %gp_offset2132, 8, !dbg !4734
  store i32 %1170, i32* %gp_offset_p2131, align 8, !dbg !4734
  br label %vaarg.end2140, !dbg !4734

vaarg.in_mem2136:                                 ; preds = %sw.bb2130
  %overflow_arg_area_p2137 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1166, i32 0, i32 2, !dbg !4735
  %overflow_arg_area2138 = load i8*, i8** %overflow_arg_area_p2137, align 8, !dbg !4735
  %1171 = bitcast i8* %overflow_arg_area2138 to i32 (%struct.Curl_easy*, i32, i8*)**, !dbg !4735
  %overflow_arg_area.next2139 = getelementptr i8, i8* %overflow_arg_area2138, i32 8, !dbg !4735
  store i8* %overflow_arg_area.next2139, i8** %overflow_arg_area_p2137, align 8, !dbg !4735
  br label %vaarg.end2140, !dbg !4735

vaarg.end2140:                                    ; preds = %vaarg.in_mem2136, %vaarg.in_reg2134
  %vaarg.addr2141 = phi i32 (%struct.Curl_easy*, i32, i8*)** [ %1169, %vaarg.in_reg2134 ], [ %1171, %vaarg.in_mem2136 ], !dbg !4736
  %1172 = load i32 (%struct.Curl_easy*, i32, i8*)*, i32 (%struct.Curl_easy*, i32, i8*)** %vaarg.addr2141, align 8, !dbg !4736
  %1173 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4737
  %set2142 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1173, i32 0, i32 13, !dbg !4738
  %ioctl_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2142, i32 0, i32 29, !dbg !4739
  store i32 (%struct.Curl_easy*, i32, i8*)* %1172, i32 (%struct.Curl_easy*, i32, i8*)** %ioctl_func, align 8, !dbg !4740
  br label %sw.epilog3648, !dbg !4741

sw.bb2143:                                        ; preds = %entry
  %1174 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4742
  %gp_offset_p2144 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1174, i32 0, i32 0, !dbg !4742
  %gp_offset2145 = load i32, i32* %gp_offset_p2144, align 8, !dbg !4742
  %fits_in_gp2146 = icmp ule i32 %gp_offset2145, 40, !dbg !4742
  br i1 %fits_in_gp2146, label %vaarg.in_reg2147, label %vaarg.in_mem2149, !dbg !4742

vaarg.in_reg2147:                                 ; preds = %sw.bb2143
  %1175 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1174, i32 0, i32 3, !dbg !4743
  %reg_save_area2148 = load i8*, i8** %1175, align 8, !dbg !4743
  %1176 = getelementptr i8, i8* %reg_save_area2148, i32 %gp_offset2145, !dbg !4743
  %1177 = bitcast i8* %1176 to i8**, !dbg !4743
  %1178 = add i32 %gp_offset2145, 8, !dbg !4743
  store i32 %1178, i32* %gp_offset_p2144, align 8, !dbg !4743
  br label %vaarg.end2153, !dbg !4743

vaarg.in_mem2149:                                 ; preds = %sw.bb2143
  %overflow_arg_area_p2150 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1174, i32 0, i32 2, !dbg !4744
  %overflow_arg_area2151 = load i8*, i8** %overflow_arg_area_p2150, align 8, !dbg !4744
  %1179 = bitcast i8* %overflow_arg_area2151 to i8**, !dbg !4744
  %overflow_arg_area.next2152 = getelementptr i8, i8* %overflow_arg_area2151, i32 8, !dbg !4744
  store i8* %overflow_arg_area.next2152, i8** %overflow_arg_area_p2150, align 8, !dbg !4744
  br label %vaarg.end2153, !dbg !4744

vaarg.end2153:                                    ; preds = %vaarg.in_mem2149, %vaarg.in_reg2147
  %vaarg.addr2154 = phi i8** [ %1177, %vaarg.in_reg2147 ], [ %1179, %vaarg.in_mem2149 ], !dbg !4745
  %1180 = load i8*, i8** %vaarg.addr2154, align 8, !dbg !4745
  %1181 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4746
  %set2155 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1181, i32 0, i32 13, !dbg !4747
  %ioctl_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2155, i32 0, i32 41, !dbg !4748
  store i8* %1180, i8** %ioctl_client, align 8, !dbg !4749
  br label %sw.epilog3648, !dbg !4750

sw.bb2156:                                        ; preds = %entry
  %1182 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4751
  %set2157 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1182, i32 0, i32 13, !dbg !4752
  %str2158 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2157, i32 0, i32 128, !dbg !4753
  %arrayidx2159 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2158, i64 0, i64 0, !dbg !4751
  %1183 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4754
  %gp_offset_p2160 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1183, i32 0, i32 0, !dbg !4754
  %gp_offset2161 = load i32, i32* %gp_offset_p2160, align 8, !dbg !4754
  %fits_in_gp2162 = icmp ule i32 %gp_offset2161, 40, !dbg !4754
  br i1 %fits_in_gp2162, label %vaarg.in_reg2163, label %vaarg.in_mem2165, !dbg !4754

vaarg.in_reg2163:                                 ; preds = %sw.bb2156
  %1184 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1183, i32 0, i32 3, !dbg !4755
  %reg_save_area2164 = load i8*, i8** %1184, align 8, !dbg !4755
  %1185 = getelementptr i8, i8* %reg_save_area2164, i32 %gp_offset2161, !dbg !4755
  %1186 = bitcast i8* %1185 to i8**, !dbg !4755
  %1187 = add i32 %gp_offset2161, 8, !dbg !4755
  store i32 %1187, i32* %gp_offset_p2160, align 8, !dbg !4755
  br label %vaarg.end2169, !dbg !4755

vaarg.in_mem2165:                                 ; preds = %sw.bb2156
  %overflow_arg_area_p2166 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1183, i32 0, i32 2, !dbg !4756
  %overflow_arg_area2167 = load i8*, i8** %overflow_arg_area_p2166, align 8, !dbg !4756
  %1188 = bitcast i8* %overflow_arg_area2167 to i8**, !dbg !4756
  %overflow_arg_area.next2168 = getelementptr i8, i8* %overflow_arg_area2167, i32 8, !dbg !4756
  store i8* %overflow_arg_area.next2168, i8** %overflow_arg_area_p2166, align 8, !dbg !4756
  br label %vaarg.end2169, !dbg !4756

vaarg.end2169:                                    ; preds = %vaarg.in_mem2165, %vaarg.in_reg2163
  %vaarg.addr2170 = phi i8** [ %1186, %vaarg.in_reg2163 ], [ %1188, %vaarg.in_mem2165 ], !dbg !4757
  %1189 = load i8*, i8** %vaarg.addr2170, align 8, !dbg !4757
  %call2171 = call i32 @setstropt(i8** %arrayidx2159, i8* %1189), !dbg !4758
  store i32 %call2171, i32* %result, align 4, !dbg !4759
  br label %sw.epilog3648, !dbg !4760

sw.bb2172:                                        ; preds = %entry
  %1190 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4761
  %set2173 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1190, i32 0, i32 13, !dbg !4762
  %str2174 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2173, i32 0, i32 128, !dbg !4763
  %arrayidx2175 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2174, i64 0, i64 1, !dbg !4761
  %1191 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4764
  %gp_offset_p2176 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1191, i32 0, i32 0, !dbg !4764
  %gp_offset2177 = load i32, i32* %gp_offset_p2176, align 8, !dbg !4764
  %fits_in_gp2178 = icmp ule i32 %gp_offset2177, 40, !dbg !4764
  br i1 %fits_in_gp2178, label %vaarg.in_reg2179, label %vaarg.in_mem2181, !dbg !4764

vaarg.in_reg2179:                                 ; preds = %sw.bb2172
  %1192 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1191, i32 0, i32 3, !dbg !4765
  %reg_save_area2180 = load i8*, i8** %1192, align 8, !dbg !4765
  %1193 = getelementptr i8, i8* %reg_save_area2180, i32 %gp_offset2177, !dbg !4765
  %1194 = bitcast i8* %1193 to i8**, !dbg !4765
  %1195 = add i32 %gp_offset2177, 8, !dbg !4765
  store i32 %1195, i32* %gp_offset_p2176, align 8, !dbg !4765
  br label %vaarg.end2185, !dbg !4765

vaarg.in_mem2181:                                 ; preds = %sw.bb2172
  %overflow_arg_area_p2182 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1191, i32 0, i32 2, !dbg !4766
  %overflow_arg_area2183 = load i8*, i8** %overflow_arg_area_p2182, align 8, !dbg !4766
  %1196 = bitcast i8* %overflow_arg_area2183 to i8**, !dbg !4766
  %overflow_arg_area.next2184 = getelementptr i8, i8* %overflow_arg_area2183, i32 8, !dbg !4766
  store i8* %overflow_arg_area.next2184, i8** %overflow_arg_area_p2182, align 8, !dbg !4766
  br label %vaarg.end2185, !dbg !4766

vaarg.end2185:                                    ; preds = %vaarg.in_mem2181, %vaarg.in_reg2179
  %vaarg.addr2186 = phi i8** [ %1194, %vaarg.in_reg2179 ], [ %1196, %vaarg.in_mem2181 ], !dbg !4767
  %1197 = load i8*, i8** %vaarg.addr2186, align 8, !dbg !4767
  %call2187 = call i32 @setstropt(i8** %arrayidx2175, i8* %1197), !dbg !4768
  store i32 %call2187, i32* %result, align 4, !dbg !4769
  br label %sw.epilog3648, !dbg !4770

sw.bb2188:                                        ; preds = %entry
  %1198 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4771
  %set2189 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1198, i32 0, i32 13, !dbg !4772
  %str2190 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2189, i32 0, i32 128, !dbg !4773
  %arrayidx2191 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2190, i64 0, i64 2, !dbg !4771
  %1199 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4774
  %gp_offset_p2192 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1199, i32 0, i32 0, !dbg !4774
  %gp_offset2193 = load i32, i32* %gp_offset_p2192, align 8, !dbg !4774
  %fits_in_gp2194 = icmp ule i32 %gp_offset2193, 40, !dbg !4774
  br i1 %fits_in_gp2194, label %vaarg.in_reg2195, label %vaarg.in_mem2197, !dbg !4774

vaarg.in_reg2195:                                 ; preds = %sw.bb2188
  %1200 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1199, i32 0, i32 3, !dbg !4775
  %reg_save_area2196 = load i8*, i8** %1200, align 8, !dbg !4775
  %1201 = getelementptr i8, i8* %reg_save_area2196, i32 %gp_offset2193, !dbg !4775
  %1202 = bitcast i8* %1201 to i8**, !dbg !4775
  %1203 = add i32 %gp_offset2193, 8, !dbg !4775
  store i32 %1203, i32* %gp_offset_p2192, align 8, !dbg !4775
  br label %vaarg.end2201, !dbg !4775

vaarg.in_mem2197:                                 ; preds = %sw.bb2188
  %overflow_arg_area_p2198 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1199, i32 0, i32 2, !dbg !4776
  %overflow_arg_area2199 = load i8*, i8** %overflow_arg_area_p2198, align 8, !dbg !4776
  %1204 = bitcast i8* %overflow_arg_area2199 to i8**, !dbg !4776
  %overflow_arg_area.next2200 = getelementptr i8, i8* %overflow_arg_area2199, i32 8, !dbg !4776
  store i8* %overflow_arg_area.next2200, i8** %overflow_arg_area_p2198, align 8, !dbg !4776
  br label %vaarg.end2201, !dbg !4776

vaarg.end2201:                                    ; preds = %vaarg.in_mem2197, %vaarg.in_reg2195
  %vaarg.addr2202 = phi i8** [ %1202, %vaarg.in_reg2195 ], [ %1204, %vaarg.in_mem2197 ], !dbg !4777
  %1205 = load i8*, i8** %vaarg.addr2202, align 8, !dbg !4777
  %call2203 = call i32 @setstropt(i8** %arrayidx2191, i8* %1205), !dbg !4778
  store i32 %call2203, i32* %result, align 4, !dbg !4779
  br label %sw.epilog3648, !dbg !4780

sw.bb2204:                                        ; preds = %entry
  %1206 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4781
  %set2205 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1206, i32 0, i32 13, !dbg !4782
  %str2206 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2205, i32 0, i32 128, !dbg !4783
  %arrayidx2207 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2206, i64 0, i64 3, !dbg !4781
  %1207 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4784
  %gp_offset_p2208 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1207, i32 0, i32 0, !dbg !4784
  %gp_offset2209 = load i32, i32* %gp_offset_p2208, align 8, !dbg !4784
  %fits_in_gp2210 = icmp ule i32 %gp_offset2209, 40, !dbg !4784
  br i1 %fits_in_gp2210, label %vaarg.in_reg2211, label %vaarg.in_mem2213, !dbg !4784

vaarg.in_reg2211:                                 ; preds = %sw.bb2204
  %1208 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1207, i32 0, i32 3, !dbg !4785
  %reg_save_area2212 = load i8*, i8** %1208, align 8, !dbg !4785
  %1209 = getelementptr i8, i8* %reg_save_area2212, i32 %gp_offset2209, !dbg !4785
  %1210 = bitcast i8* %1209 to i8**, !dbg !4785
  %1211 = add i32 %gp_offset2209, 8, !dbg !4785
  store i32 %1211, i32* %gp_offset_p2208, align 8, !dbg !4785
  br label %vaarg.end2217, !dbg !4785

vaarg.in_mem2213:                                 ; preds = %sw.bb2204
  %overflow_arg_area_p2214 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1207, i32 0, i32 2, !dbg !4786
  %overflow_arg_area2215 = load i8*, i8** %overflow_arg_area_p2214, align 8, !dbg !4786
  %1212 = bitcast i8* %overflow_arg_area2215 to i8**, !dbg !4786
  %overflow_arg_area.next2216 = getelementptr i8, i8* %overflow_arg_area2215, i32 8, !dbg !4786
  store i8* %overflow_arg_area.next2216, i8** %overflow_arg_area_p2214, align 8, !dbg !4786
  br label %vaarg.end2217, !dbg !4786

vaarg.end2217:                                    ; preds = %vaarg.in_mem2213, %vaarg.in_reg2211
  %vaarg.addr2218 = phi i8** [ %1210, %vaarg.in_reg2211 ], [ %1212, %vaarg.in_mem2213 ], !dbg !4787
  %1213 = load i8*, i8** %vaarg.addr2218, align 8, !dbg !4787
  %call2219 = call i32 @setstropt(i8** %arrayidx2207, i8* %1213), !dbg !4788
  store i32 %call2219, i32* %result, align 4, !dbg !4789
  br label %sw.epilog3648, !dbg !4790

sw.bb2220:                                        ; preds = %entry
  %1214 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4791
  %set2221 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1214, i32 0, i32 13, !dbg !4792
  %str2222 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2221, i32 0, i32 128, !dbg !4793
  %arrayidx2223 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2222, i64 0, i64 13, !dbg !4791
  %1215 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4794
  %gp_offset_p2224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1215, i32 0, i32 0, !dbg !4794
  %gp_offset2225 = load i32, i32* %gp_offset_p2224, align 8, !dbg !4794
  %fits_in_gp2226 = icmp ule i32 %gp_offset2225, 40, !dbg !4794
  br i1 %fits_in_gp2226, label %vaarg.in_reg2227, label %vaarg.in_mem2229, !dbg !4794

vaarg.in_reg2227:                                 ; preds = %sw.bb2220
  %1216 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1215, i32 0, i32 3, !dbg !4795
  %reg_save_area2228 = load i8*, i8** %1216, align 8, !dbg !4795
  %1217 = getelementptr i8, i8* %reg_save_area2228, i32 %gp_offset2225, !dbg !4795
  %1218 = bitcast i8* %1217 to i8**, !dbg !4795
  %1219 = add i32 %gp_offset2225, 8, !dbg !4795
  store i32 %1219, i32* %gp_offset_p2224, align 8, !dbg !4795
  br label %vaarg.end2233, !dbg !4795

vaarg.in_mem2229:                                 ; preds = %sw.bb2220
  %overflow_arg_area_p2230 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1215, i32 0, i32 2, !dbg !4796
  %overflow_arg_area2231 = load i8*, i8** %overflow_arg_area_p2230, align 8, !dbg !4796
  %1220 = bitcast i8* %overflow_arg_area2231 to i8**, !dbg !4796
  %overflow_arg_area.next2232 = getelementptr i8, i8* %overflow_arg_area2231, i32 8, !dbg !4796
  store i8* %overflow_arg_area.next2232, i8** %overflow_arg_area_p2230, align 8, !dbg !4796
  br label %vaarg.end2233, !dbg !4796

vaarg.end2233:                                    ; preds = %vaarg.in_mem2229, %vaarg.in_reg2227
  %vaarg.addr2234 = phi i8** [ %1218, %vaarg.in_reg2227 ], [ %1220, %vaarg.in_mem2229 ], !dbg !4797
  %1221 = load i8*, i8** %vaarg.addr2234, align 8, !dbg !4797
  %call2235 = call i32 @setstropt(i8** %arrayidx2223, i8* %1221), !dbg !4798
  store i32 %call2235, i32* %result, align 4, !dbg !4799
  br label %sw.epilog3648, !dbg !4800

sw.bb2236:                                        ; preds = %entry
  %1222 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4801
  %set2237 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1222, i32 0, i32 13, !dbg !4802
  %str2238 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2237, i32 0, i32 128, !dbg !4803
  %arrayidx2239 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2238, i64 0, i64 14, !dbg !4801
  %1223 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4804
  %gp_offset_p2240 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1223, i32 0, i32 0, !dbg !4804
  %gp_offset2241 = load i32, i32* %gp_offset_p2240, align 8, !dbg !4804
  %fits_in_gp2242 = icmp ule i32 %gp_offset2241, 40, !dbg !4804
  br i1 %fits_in_gp2242, label %vaarg.in_reg2243, label %vaarg.in_mem2245, !dbg !4804

vaarg.in_reg2243:                                 ; preds = %sw.bb2236
  %1224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1223, i32 0, i32 3, !dbg !4805
  %reg_save_area2244 = load i8*, i8** %1224, align 8, !dbg !4805
  %1225 = getelementptr i8, i8* %reg_save_area2244, i32 %gp_offset2241, !dbg !4805
  %1226 = bitcast i8* %1225 to i8**, !dbg !4805
  %1227 = add i32 %gp_offset2241, 8, !dbg !4805
  store i32 %1227, i32* %gp_offset_p2240, align 8, !dbg !4805
  br label %vaarg.end2249, !dbg !4805

vaarg.in_mem2245:                                 ; preds = %sw.bb2236
  %overflow_arg_area_p2246 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1223, i32 0, i32 2, !dbg !4806
  %overflow_arg_area2247 = load i8*, i8** %overflow_arg_area_p2246, align 8, !dbg !4806
  %1228 = bitcast i8* %overflow_arg_area2247 to i8**, !dbg !4806
  %overflow_arg_area.next2248 = getelementptr i8, i8* %overflow_arg_area2247, i32 8, !dbg !4806
  store i8* %overflow_arg_area.next2248, i8** %overflow_arg_area_p2246, align 8, !dbg !4806
  br label %vaarg.end2249, !dbg !4806

vaarg.end2249:                                    ; preds = %vaarg.in_mem2245, %vaarg.in_reg2243
  %vaarg.addr2250 = phi i8** [ %1226, %vaarg.in_reg2243 ], [ %1228, %vaarg.in_mem2245 ], !dbg !4807
  %1229 = load i8*, i8** %vaarg.addr2250, align 8, !dbg !4807
  %call2251 = call i32 @setstropt(i8** %arrayidx2239, i8* %1229), !dbg !4808
  store i32 %call2251, i32* %result, align 4, !dbg !4809
  br label %sw.epilog3648, !dbg !4810

sw.bb2252:                                        ; preds = %entry
  %1230 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4811
  %set2253 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1230, i32 0, i32 13, !dbg !4812
  %str2254 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2253, i32 0, i32 128, !dbg !4813
  %arrayidx2255 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2254, i64 0, i64 17, !dbg !4811
  %1231 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4814
  %gp_offset_p2256 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1231, i32 0, i32 0, !dbg !4814
  %gp_offset2257 = load i32, i32* %gp_offset_p2256, align 8, !dbg !4814
  %fits_in_gp2258 = icmp ule i32 %gp_offset2257, 40, !dbg !4814
  br i1 %fits_in_gp2258, label %vaarg.in_reg2259, label %vaarg.in_mem2261, !dbg !4814

vaarg.in_reg2259:                                 ; preds = %sw.bb2252
  %1232 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1231, i32 0, i32 3, !dbg !4815
  %reg_save_area2260 = load i8*, i8** %1232, align 8, !dbg !4815
  %1233 = getelementptr i8, i8* %reg_save_area2260, i32 %gp_offset2257, !dbg !4815
  %1234 = bitcast i8* %1233 to i8**, !dbg !4815
  %1235 = add i32 %gp_offset2257, 8, !dbg !4815
  store i32 %1235, i32* %gp_offset_p2256, align 8, !dbg !4815
  br label %vaarg.end2265, !dbg !4815

vaarg.in_mem2261:                                 ; preds = %sw.bb2252
  %overflow_arg_area_p2262 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1231, i32 0, i32 2, !dbg !4816
  %overflow_arg_area2263 = load i8*, i8** %overflow_arg_area_p2262, align 8, !dbg !4816
  %1236 = bitcast i8* %overflow_arg_area2263 to i8**, !dbg !4816
  %overflow_arg_area.next2264 = getelementptr i8, i8* %overflow_arg_area2263, i32 8, !dbg !4816
  store i8* %overflow_arg_area.next2264, i8** %overflow_arg_area_p2262, align 8, !dbg !4816
  br label %vaarg.end2265, !dbg !4816

vaarg.end2265:                                    ; preds = %vaarg.in_mem2261, %vaarg.in_reg2259
  %vaarg.addr2266 = phi i8** [ %1234, %vaarg.in_reg2259 ], [ %1236, %vaarg.in_mem2261 ], !dbg !4817
  %1237 = load i8*, i8** %vaarg.addr2266, align 8, !dbg !4817
  %call2267 = call i32 @setstropt(i8** %arrayidx2255, i8* %1237), !dbg !4818
  store i32 %call2267, i32* %result, align 4, !dbg !4819
  br label %sw.epilog3648, !dbg !4820

sw.bb2268:                                        ; preds = %entry
  %1238 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4821
  %set2269 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1238, i32 0, i32 13, !dbg !4822
  %str2270 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2269, i32 0, i32 128, !dbg !4823
  %arrayidx2271 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2270, i64 0, i64 18, !dbg !4821
  %1239 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4824
  %gp_offset_p2272 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1239, i32 0, i32 0, !dbg !4824
  %gp_offset2273 = load i32, i32* %gp_offset_p2272, align 8, !dbg !4824
  %fits_in_gp2274 = icmp ule i32 %gp_offset2273, 40, !dbg !4824
  br i1 %fits_in_gp2274, label %vaarg.in_reg2275, label %vaarg.in_mem2277, !dbg !4824

vaarg.in_reg2275:                                 ; preds = %sw.bb2268
  %1240 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1239, i32 0, i32 3, !dbg !4825
  %reg_save_area2276 = load i8*, i8** %1240, align 8, !dbg !4825
  %1241 = getelementptr i8, i8* %reg_save_area2276, i32 %gp_offset2273, !dbg !4825
  %1242 = bitcast i8* %1241 to i8**, !dbg !4825
  %1243 = add i32 %gp_offset2273, 8, !dbg !4825
  store i32 %1243, i32* %gp_offset_p2272, align 8, !dbg !4825
  br label %vaarg.end2281, !dbg !4825

vaarg.in_mem2277:                                 ; preds = %sw.bb2268
  %overflow_arg_area_p2278 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1239, i32 0, i32 2, !dbg !4826
  %overflow_arg_area2279 = load i8*, i8** %overflow_arg_area_p2278, align 8, !dbg !4826
  %1244 = bitcast i8* %overflow_arg_area2279 to i8**, !dbg !4826
  %overflow_arg_area.next2280 = getelementptr i8, i8* %overflow_arg_area2279, i32 8, !dbg !4826
  store i8* %overflow_arg_area.next2280, i8** %overflow_arg_area_p2278, align 8, !dbg !4826
  br label %vaarg.end2281, !dbg !4826

vaarg.end2281:                                    ; preds = %vaarg.in_mem2277, %vaarg.in_reg2275
  %vaarg.addr2282 = phi i8** [ %1242, %vaarg.in_reg2275 ], [ %1244, %vaarg.in_mem2277 ], !dbg !4827
  %1245 = load i8*, i8** %vaarg.addr2282, align 8, !dbg !4827
  %call2283 = call i32 @setstropt(i8** %arrayidx2271, i8* %1245), !dbg !4828
  store i32 %call2283, i32* %result, align 4, !dbg !4829
  br label %sw.epilog3648, !dbg !4830

sw.bb2284:                                        ; preds = %entry
  %1246 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4831
  %set2285 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1246, i32 0, i32 13, !dbg !4832
  %str2286 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2285, i32 0, i32 128, !dbg !4833
  %arrayidx2287 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2286, i64 0, i64 15, !dbg !4831
  %1247 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4834
  %gp_offset_p2288 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1247, i32 0, i32 0, !dbg !4834
  %gp_offset2289 = load i32, i32* %gp_offset_p2288, align 8, !dbg !4834
  %fits_in_gp2290 = icmp ule i32 %gp_offset2289, 40, !dbg !4834
  br i1 %fits_in_gp2290, label %vaarg.in_reg2291, label %vaarg.in_mem2293, !dbg !4834

vaarg.in_reg2291:                                 ; preds = %sw.bb2284
  %1248 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1247, i32 0, i32 3, !dbg !4835
  %reg_save_area2292 = load i8*, i8** %1248, align 8, !dbg !4835
  %1249 = getelementptr i8, i8* %reg_save_area2292, i32 %gp_offset2289, !dbg !4835
  %1250 = bitcast i8* %1249 to i8**, !dbg !4835
  %1251 = add i32 %gp_offset2289, 8, !dbg !4835
  store i32 %1251, i32* %gp_offset_p2288, align 8, !dbg !4835
  br label %vaarg.end2297, !dbg !4835

vaarg.in_mem2293:                                 ; preds = %sw.bb2284
  %overflow_arg_area_p2294 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1247, i32 0, i32 2, !dbg !4836
  %overflow_arg_area2295 = load i8*, i8** %overflow_arg_area_p2294, align 8, !dbg !4836
  %1252 = bitcast i8* %overflow_arg_area2295 to i8**, !dbg !4836
  %overflow_arg_area.next2296 = getelementptr i8, i8* %overflow_arg_area2295, i32 8, !dbg !4836
  store i8* %overflow_arg_area.next2296, i8** %overflow_arg_area_p2294, align 8, !dbg !4836
  br label %vaarg.end2297, !dbg !4836

vaarg.end2297:                                    ; preds = %vaarg.in_mem2293, %vaarg.in_reg2291
  %vaarg.addr2298 = phi i8** [ %1250, %vaarg.in_reg2291 ], [ %1252, %vaarg.in_mem2293 ], !dbg !4837
  %1253 = load i8*, i8** %vaarg.addr2298, align 8, !dbg !4837
  %call2299 = call i32 @setstropt(i8** %arrayidx2287, i8* %1253), !dbg !4838
  store i32 %call2299, i32* %result, align 4, !dbg !4839
  br label %sw.epilog3648, !dbg !4840

sw.bb2300:                                        ; preds = %entry
  %1254 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4841
  %set2301 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1254, i32 0, i32 13, !dbg !4842
  %str2302 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2301, i32 0, i32 128, !dbg !4843
  %arrayidx2303 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2302, i64 0, i64 16, !dbg !4841
  %1255 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4844
  %gp_offset_p2304 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1255, i32 0, i32 0, !dbg !4844
  %gp_offset2305 = load i32, i32* %gp_offset_p2304, align 8, !dbg !4844
  %fits_in_gp2306 = icmp ule i32 %gp_offset2305, 40, !dbg !4844
  br i1 %fits_in_gp2306, label %vaarg.in_reg2307, label %vaarg.in_mem2309, !dbg !4844

vaarg.in_reg2307:                                 ; preds = %sw.bb2300
  %1256 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1255, i32 0, i32 3, !dbg !4845
  %reg_save_area2308 = load i8*, i8** %1256, align 8, !dbg !4845
  %1257 = getelementptr i8, i8* %reg_save_area2308, i32 %gp_offset2305, !dbg !4845
  %1258 = bitcast i8* %1257 to i8**, !dbg !4845
  %1259 = add i32 %gp_offset2305, 8, !dbg !4845
  store i32 %1259, i32* %gp_offset_p2304, align 8, !dbg !4845
  br label %vaarg.end2313, !dbg !4845

vaarg.in_mem2309:                                 ; preds = %sw.bb2300
  %overflow_arg_area_p2310 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1255, i32 0, i32 2, !dbg !4846
  %overflow_arg_area2311 = load i8*, i8** %overflow_arg_area_p2310, align 8, !dbg !4846
  %1260 = bitcast i8* %overflow_arg_area2311 to i8**, !dbg !4846
  %overflow_arg_area.next2312 = getelementptr i8, i8* %overflow_arg_area2311, i32 8, !dbg !4846
  store i8* %overflow_arg_area.next2312, i8** %overflow_arg_area_p2310, align 8, !dbg !4846
  br label %vaarg.end2313, !dbg !4846

vaarg.end2313:                                    ; preds = %vaarg.in_mem2309, %vaarg.in_reg2307
  %vaarg.addr2314 = phi i8** [ %1258, %vaarg.in_reg2307 ], [ %1260, %vaarg.in_mem2309 ], !dbg !4847
  %1261 = load i8*, i8** %vaarg.addr2314, align 8, !dbg !4847
  %call2315 = call i32 @setstropt(i8** %arrayidx2303, i8* %1261), !dbg !4848
  store i32 %call2315, i32* %result, align 4, !dbg !4849
  br label %sw.epilog3648, !dbg !4850

sw.bb2316:                                        ; preds = %entry
  %1262 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4851
  %gp_offset_p2317 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1262, i32 0, i32 0, !dbg !4851
  %gp_offset2318 = load i32, i32* %gp_offset_p2317, align 8, !dbg !4851
  %fits_in_gp2319 = icmp ule i32 %gp_offset2318, 40, !dbg !4851
  br i1 %fits_in_gp2319, label %vaarg.in_reg2320, label %vaarg.in_mem2322, !dbg !4851

vaarg.in_reg2320:                                 ; preds = %sw.bb2316
  %1263 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1262, i32 0, i32 3, !dbg !4852
  %reg_save_area2321 = load i8*, i8** %1263, align 8, !dbg !4852
  %1264 = getelementptr i8, i8* %reg_save_area2321, i32 %gp_offset2318, !dbg !4852
  %1265 = bitcast i8* %1264 to i8**, !dbg !4852
  %1266 = add i32 %gp_offset2318, 8, !dbg !4852
  store i32 %1266, i32* %gp_offset_p2317, align 8, !dbg !4852
  br label %vaarg.end2326, !dbg !4852

vaarg.in_mem2322:                                 ; preds = %sw.bb2316
  %overflow_arg_area_p2323 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1262, i32 0, i32 2, !dbg !4853
  %overflow_arg_area2324 = load i8*, i8** %overflow_arg_area_p2323, align 8, !dbg !4853
  %1267 = bitcast i8* %overflow_arg_area2324 to i8**, !dbg !4853
  %overflow_arg_area.next2325 = getelementptr i8, i8* %overflow_arg_area2324, i32 8, !dbg !4853
  store i8* %overflow_arg_area.next2325, i8** %overflow_arg_area_p2323, align 8, !dbg !4853
  br label %vaarg.end2326, !dbg !4853

vaarg.end2326:                                    ; preds = %vaarg.in_mem2322, %vaarg.in_reg2320
  %vaarg.addr2327 = phi i8** [ %1265, %vaarg.in_reg2320 ], [ %1267, %vaarg.in_mem2322 ], !dbg !4854
  %1268 = load i8*, i8** %vaarg.addr2327, align 8, !dbg !4854
  store i8* %1268, i8** %argptr, align 8, !dbg !4855
  %1269 = load i8*, i8** %argptr, align 8, !dbg !4856
  %tobool2328 = icmp ne i8* %1269, null, !dbg !4856
  br i1 %tobool2328, label %land.lhs.true2329, label %if.end2334, !dbg !4858

land.lhs.true2329:                                ; preds = %vaarg.end2326
  %1270 = load i8*, i8** %argptr, align 8, !dbg !4859
  %arrayidx2330 = getelementptr inbounds i8, i8* %1270, i64 0, !dbg !4859
  %1271 = load i8, i8* %arrayidx2330, align 1, !dbg !4859
  %conv2331 = sext i8 %1271 to i32, !dbg !4859
  %tobool2332 = icmp ne i32 %conv2331, 0, !dbg !4859
  br i1 %tobool2332, label %if.then2333, label %if.end2334, !dbg !4861

if.then2333:                                      ; preds = %land.lhs.true2329
  store i32 4, i32* %result, align 4, !dbg !4862
  br label %if.end2334, !dbg !4863

if.end2334:                                       ; preds = %if.then2333, %land.lhs.true2329, %vaarg.end2326
  br label %sw.epilog3648, !dbg !4864

sw.bb2335:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !4865
  br label %sw.epilog3648, !dbg !4866

sw.bb2336:                                        ; preds = %entry
  %1272 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4867
  %gp_offset_p2337 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1272, i32 0, i32 0, !dbg !4867
  %gp_offset2338 = load i32, i32* %gp_offset_p2337, align 8, !dbg !4867
  %fits_in_gp2339 = icmp ule i32 %gp_offset2338, 40, !dbg !4867
  br i1 %fits_in_gp2339, label %vaarg.in_reg2340, label %vaarg.in_mem2342, !dbg !4867

vaarg.in_reg2340:                                 ; preds = %sw.bb2336
  %1273 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1272, i32 0, i32 3, !dbg !4868
  %reg_save_area2341 = load i8*, i8** %1273, align 8, !dbg !4868
  %1274 = getelementptr i8, i8* %reg_save_area2341, i32 %gp_offset2338, !dbg !4868
  %1275 = bitcast i8* %1274 to i64*, !dbg !4868
  %1276 = add i32 %gp_offset2338, 8, !dbg !4868
  store i32 %1276, i32* %gp_offset_p2337, align 8, !dbg !4868
  br label %vaarg.end2346, !dbg !4868

vaarg.in_mem2342:                                 ; preds = %sw.bb2336
  %overflow_arg_area_p2343 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1272, i32 0, i32 2, !dbg !4869
  %overflow_arg_area2344 = load i8*, i8** %overflow_arg_area_p2343, align 8, !dbg !4869
  %1277 = bitcast i8* %overflow_arg_area2344 to i64*, !dbg !4869
  %overflow_arg_area.next2345 = getelementptr i8, i8* %overflow_arg_area2344, i32 8, !dbg !4869
  store i8* %overflow_arg_area.next2345, i8** %overflow_arg_area_p2343, align 8, !dbg !4869
  br label %vaarg.end2346, !dbg !4869

vaarg.end2346:                                    ; preds = %vaarg.in_mem2342, %vaarg.in_reg2340
  %vaarg.addr2347 = phi i64* [ %1275, %vaarg.in_reg2340 ], [ %1277, %vaarg.in_mem2342 ], !dbg !4870
  %1278 = load i64, i64* %vaarg.addr2347, align 8, !dbg !4870
  %cmp2348 = icmp ne i64 0, %1278, !dbg !4871
  %cond2350 = select i1 %cmp2348, i32 1, i32 0, !dbg !4872
  %tobool2351 = icmp ne i32 %cond2350, 0, !dbg !4872
  %1279 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4873
  %set2352 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1279, i32 0, i32 13, !dbg !4874
  %crlf = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2352, i32 0, i32 59, !dbg !4875
  %frombool2353 = zext i1 %tobool2351 to i8, !dbg !4876
  store i8 %frombool2353, i8* %crlf, align 2, !dbg !4876
  br label %sw.epilog3648, !dbg !4877

sw.bb2354:                                        ; preds = %entry
  %1280 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4878
  %set2355 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1280, i32 0, i32 13, !dbg !4879
  %str2356 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2355, i32 0, i32 128, !dbg !4880
  %arrayidx2357 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2356, i64 0, i64 8, !dbg !4878
  %1281 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4881
  %gp_offset_p2358 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1281, i32 0, i32 0, !dbg !4881
  %gp_offset2359 = load i32, i32* %gp_offset_p2358, align 8, !dbg !4881
  %fits_in_gp2360 = icmp ule i32 %gp_offset2359, 40, !dbg !4881
  br i1 %fits_in_gp2360, label %vaarg.in_reg2361, label %vaarg.in_mem2363, !dbg !4881

vaarg.in_reg2361:                                 ; preds = %sw.bb2354
  %1282 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1281, i32 0, i32 3, !dbg !4882
  %reg_save_area2362 = load i8*, i8** %1282, align 8, !dbg !4882
  %1283 = getelementptr i8, i8* %reg_save_area2362, i32 %gp_offset2359, !dbg !4882
  %1284 = bitcast i8* %1283 to i8**, !dbg !4882
  %1285 = add i32 %gp_offset2359, 8, !dbg !4882
  store i32 %1285, i32* %gp_offset_p2358, align 8, !dbg !4882
  br label %vaarg.end2367, !dbg !4882

vaarg.in_mem2363:                                 ; preds = %sw.bb2354
  %overflow_arg_area_p2364 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1281, i32 0, i32 2, !dbg !4883
  %overflow_arg_area2365 = load i8*, i8** %overflow_arg_area_p2364, align 8, !dbg !4883
  %1286 = bitcast i8* %overflow_arg_area2365 to i8**, !dbg !4883
  %overflow_arg_area.next2366 = getelementptr i8, i8* %overflow_arg_area2365, i32 8, !dbg !4883
  store i8* %overflow_arg_area.next2366, i8** %overflow_arg_area_p2364, align 8, !dbg !4883
  br label %vaarg.end2367, !dbg !4883

vaarg.end2367:                                    ; preds = %vaarg.in_mem2363, %vaarg.in_reg2361
  %vaarg.addr2368 = phi i8** [ %1284, %vaarg.in_reg2361 ], [ %1286, %vaarg.in_mem2363 ], !dbg !4884
  %1287 = load i8*, i8** %vaarg.addr2368, align 8, !dbg !4884
  %call2369 = call i32 @setstropt(i8** %arrayidx2357, i8* %1287), !dbg !4885
  store i32 %call2369, i32* %result, align 4, !dbg !4886
  br label %sw.epilog3648, !dbg !4887

sw.bb2370:                                        ; preds = %entry
  %1288 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4888
  %gp_offset_p2371 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1288, i32 0, i32 0, !dbg !4888
  %gp_offset2372 = load i32, i32* %gp_offset_p2371, align 8, !dbg !4888
  %fits_in_gp2373 = icmp ule i32 %gp_offset2372, 40, !dbg !4888
  br i1 %fits_in_gp2373, label %vaarg.in_reg2374, label %vaarg.in_mem2376, !dbg !4888

vaarg.in_reg2374:                                 ; preds = %sw.bb2370
  %1289 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1288, i32 0, i32 3, !dbg !4889
  %reg_save_area2375 = load i8*, i8** %1289, align 8, !dbg !4889
  %1290 = getelementptr i8, i8* %reg_save_area2375, i32 %gp_offset2372, !dbg !4889
  %1291 = bitcast i8* %1290 to i64*, !dbg !4889
  %1292 = add i32 %gp_offset2372, 8, !dbg !4889
  store i32 %1292, i32* %gp_offset_p2371, align 8, !dbg !4889
  br label %vaarg.end2380, !dbg !4889

vaarg.in_mem2376:                                 ; preds = %sw.bb2370
  %overflow_arg_area_p2377 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1288, i32 0, i32 2, !dbg !4890
  %overflow_arg_area2378 = load i8*, i8** %overflow_arg_area_p2377, align 8, !dbg !4890
  %1293 = bitcast i8* %overflow_arg_area2378 to i64*, !dbg !4890
  %overflow_arg_area.next2379 = getelementptr i8, i8* %overflow_arg_area2378, i32 8, !dbg !4890
  store i8* %overflow_arg_area.next2379, i8** %overflow_arg_area_p2377, align 8, !dbg !4890
  br label %vaarg.end2380, !dbg !4890

vaarg.end2380:                                    ; preds = %vaarg.in_mem2376, %vaarg.in_reg2374
  %vaarg.addr2381 = phi i64* [ %1291, %vaarg.in_reg2374 ], [ %1293, %vaarg.in_mem2376 ], !dbg !4891
  %1294 = load i64, i64* %vaarg.addr2381, align 8, !dbg !4891
  %call2382 = call zeroext i16 @curlx_sltous(i64 %1294), !dbg !4892
  %1295 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4893
  %set2383 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1295, i32 0, i32 13, !dbg !4894
  %localport = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2383, i32 0, i32 18, !dbg !4895
  store i16 %call2382, i16* %localport, align 8, !dbg !4896
  br label %sw.epilog3648, !dbg !4897

sw.bb2384:                                        ; preds = %entry
  %1296 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4898
  %gp_offset_p2385 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1296, i32 0, i32 0, !dbg !4898
  %gp_offset2386 = load i32, i32* %gp_offset_p2385, align 8, !dbg !4898
  %fits_in_gp2387 = icmp ule i32 %gp_offset2386, 40, !dbg !4898
  br i1 %fits_in_gp2387, label %vaarg.in_reg2388, label %vaarg.in_mem2390, !dbg !4898

vaarg.in_reg2388:                                 ; preds = %sw.bb2384
  %1297 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1296, i32 0, i32 3, !dbg !4899
  %reg_save_area2389 = load i8*, i8** %1297, align 8, !dbg !4899
  %1298 = getelementptr i8, i8* %reg_save_area2389, i32 %gp_offset2386, !dbg !4899
  %1299 = bitcast i8* %1298 to i64*, !dbg !4899
  %1300 = add i32 %gp_offset2386, 8, !dbg !4899
  store i32 %1300, i32* %gp_offset_p2385, align 8, !dbg !4899
  br label %vaarg.end2394, !dbg !4899

vaarg.in_mem2390:                                 ; preds = %sw.bb2384
  %overflow_arg_area_p2391 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1296, i32 0, i32 2, !dbg !4900
  %overflow_arg_area2392 = load i8*, i8** %overflow_arg_area_p2391, align 8, !dbg !4900
  %1301 = bitcast i8* %overflow_arg_area2392 to i64*, !dbg !4900
  %overflow_arg_area.next2393 = getelementptr i8, i8* %overflow_arg_area2392, i32 8, !dbg !4900
  store i8* %overflow_arg_area.next2393, i8** %overflow_arg_area_p2391, align 8, !dbg !4900
  br label %vaarg.end2394, !dbg !4900

vaarg.end2394:                                    ; preds = %vaarg.in_mem2390, %vaarg.in_reg2388
  %vaarg.addr2395 = phi i64* [ %1299, %vaarg.in_reg2388 ], [ %1301, %vaarg.in_mem2390 ], !dbg !4901
  %1302 = load i64, i64* %vaarg.addr2395, align 8, !dbg !4901
  %call2396 = call i32 @curlx_sltosi(i64 %1302), !dbg !4902
  %1303 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4903
  %set2397 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1303, i32 0, i32 13, !dbg !4904
  %localportrange = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2397, i32 0, i32 19, !dbg !4905
  store i32 %call2396, i32* %localportrange, align 4, !dbg !4906
  br label %sw.epilog3648, !dbg !4907

sw.bb2398:                                        ; preds = %entry
  %1304 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4908
  %set2399 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1304, i32 0, i32 13, !dbg !4909
  %str2400 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2399, i32 0, i32 128, !dbg !4910
  %arrayidx2401 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2400, i64 0, i64 19, !dbg !4908
  %1305 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4911
  %gp_offset_p2402 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1305, i32 0, i32 0, !dbg !4911
  %gp_offset2403 = load i32, i32* %gp_offset_p2402, align 8, !dbg !4911
  %fits_in_gp2404 = icmp ule i32 %gp_offset2403, 40, !dbg !4911
  br i1 %fits_in_gp2404, label %vaarg.in_reg2405, label %vaarg.in_mem2407, !dbg !4911

vaarg.in_reg2405:                                 ; preds = %sw.bb2398
  %1306 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1305, i32 0, i32 3, !dbg !4912
  %reg_save_area2406 = load i8*, i8** %1306, align 8, !dbg !4912
  %1307 = getelementptr i8, i8* %reg_save_area2406, i32 %gp_offset2403, !dbg !4912
  %1308 = bitcast i8* %1307 to i8**, !dbg !4912
  %1309 = add i32 %gp_offset2403, 8, !dbg !4912
  store i32 %1309, i32* %gp_offset_p2402, align 8, !dbg !4912
  br label %vaarg.end2411, !dbg !4912

vaarg.in_mem2407:                                 ; preds = %sw.bb2398
  %overflow_arg_area_p2408 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1305, i32 0, i32 2, !dbg !4913
  %overflow_arg_area2409 = load i8*, i8** %overflow_arg_area_p2408, align 8, !dbg !4913
  %1310 = bitcast i8* %overflow_arg_area2409 to i8**, !dbg !4913
  %overflow_arg_area.next2410 = getelementptr i8, i8* %overflow_arg_area2409, i32 8, !dbg !4913
  store i8* %overflow_arg_area.next2410, i8** %overflow_arg_area_p2408, align 8, !dbg !4913
  br label %vaarg.end2411, !dbg !4913

vaarg.end2411:                                    ; preds = %vaarg.in_mem2407, %vaarg.in_reg2405
  %vaarg.addr2412 = phi i8** [ %1308, %vaarg.in_reg2405 ], [ %1310, %vaarg.in_mem2407 ], !dbg !4914
  %1311 = load i8*, i8** %vaarg.addr2412, align 8, !dbg !4914
  %call2413 = call i32 @setstropt(i8** %arrayidx2401, i8* %1311), !dbg !4915
  store i32 %call2413, i32* %result, align 4, !dbg !4916
  %1312 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4917
  %set2414 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1312, i32 0, i32 13, !dbg !4918
  %str2415 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2414, i32 0, i32 128, !dbg !4919
  %arrayidx2416 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2415, i64 0, i64 19, !dbg !4917
  %1313 = load i8*, i8** %arrayidx2416, align 8, !dbg !4917
  %tobool2417 = icmp ne i8* %1313, null, !dbg !4920
  %cond2418 = select i1 %tobool2417, i32 1, i32 0, !dbg !4920
  %tobool2419 = icmp ne i32 %cond2418, 0, !dbg !4920
  %1314 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4921
  %set2420 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1314, i32 0, i32 13, !dbg !4922
  %krb = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2420, i32 0, i32 107, !dbg !4923
  %frombool2421 = zext i1 %tobool2419 to i8, !dbg !4924
  store i8 %frombool2421, i8* %krb, align 1, !dbg !4924
  br label %sw.epilog3648, !dbg !4925

sw.bb2422:                                        ; preds = %entry
  %1315 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4926
  %gp_offset_p2423 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1315, i32 0, i32 0, !dbg !4926
  %gp_offset2424 = load i32, i32* %gp_offset_p2423, align 8, !dbg !4926
  %fits_in_gp2425 = icmp ule i32 %gp_offset2424, 40, !dbg !4926
  br i1 %fits_in_gp2425, label %vaarg.in_reg2426, label %vaarg.in_mem2428, !dbg !4926

vaarg.in_reg2426:                                 ; preds = %sw.bb2422
  %1316 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1315, i32 0, i32 3, !dbg !4927
  %reg_save_area2427 = load i8*, i8** %1316, align 8, !dbg !4927
  %1317 = getelementptr i8, i8* %reg_save_area2427, i32 %gp_offset2424, !dbg !4927
  %1318 = bitcast i8* %1317 to i64*, !dbg !4927
  %1319 = add i32 %gp_offset2424, 8, !dbg !4927
  store i32 %1319, i32* %gp_offset_p2423, align 8, !dbg !4927
  br label %vaarg.end2432, !dbg !4927

vaarg.in_mem2428:                                 ; preds = %sw.bb2422
  %overflow_arg_area_p2429 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1315, i32 0, i32 2, !dbg !4928
  %overflow_arg_area2430 = load i8*, i8** %overflow_arg_area_p2429, align 8, !dbg !4928
  %1320 = bitcast i8* %overflow_arg_area2430 to i64*, !dbg !4928
  %overflow_arg_area.next2431 = getelementptr i8, i8* %overflow_arg_area2430, i32 8, !dbg !4928
  store i8* %overflow_arg_area.next2431, i8** %overflow_arg_area_p2429, align 8, !dbg !4928
  br label %vaarg.end2432, !dbg !4928

vaarg.end2432:                                    ; preds = %vaarg.in_mem2428, %vaarg.in_reg2426
  %vaarg.addr2433 = phi i64* [ %1318, %vaarg.in_reg2426 ], [ %1320, %vaarg.in_mem2428 ], !dbg !4929
  %1321 = load i64, i64* %vaarg.addr2433, align 8, !dbg !4929
  %1322 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4930
  %set2434 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1322, i32 0, i32 13, !dbg !4931
  %gssapi_delegation = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2434, i32 0, i32 141, !dbg !4932
  store i64 %1321, i64* %gssapi_delegation, align 8, !dbg !4933
  br label %sw.epilog3648, !dbg !4934

sw.bb2435:                                        ; preds = %entry
  %1323 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4935
  %gp_offset_p2436 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1323, i32 0, i32 0, !dbg !4935
  %gp_offset2437 = load i32, i32* %gp_offset_p2436, align 8, !dbg !4935
  %fits_in_gp2438 = icmp ule i32 %gp_offset2437, 40, !dbg !4935
  br i1 %fits_in_gp2438, label %vaarg.in_reg2439, label %vaarg.in_mem2441, !dbg !4935

vaarg.in_reg2439:                                 ; preds = %sw.bb2435
  %1324 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1323, i32 0, i32 3, !dbg !4936
  %reg_save_area2440 = load i8*, i8** %1324, align 8, !dbg !4936
  %1325 = getelementptr i8, i8* %reg_save_area2440, i32 %gp_offset2437, !dbg !4936
  %1326 = bitcast i8* %1325 to i64*, !dbg !4936
  %1327 = add i32 %gp_offset2437, 8, !dbg !4936
  store i32 %1327, i32* %gp_offset_p2436, align 8, !dbg !4936
  br label %vaarg.end2445, !dbg !4936

vaarg.in_mem2441:                                 ; preds = %sw.bb2435
  %overflow_arg_area_p2442 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1323, i32 0, i32 2, !dbg !4937
  %overflow_arg_area2443 = load i8*, i8** %overflow_arg_area_p2442, align 8, !dbg !4937
  %1328 = bitcast i8* %overflow_arg_area2443 to i64*, !dbg !4937
  %overflow_arg_area.next2444 = getelementptr i8, i8* %overflow_arg_area2443, i32 8, !dbg !4937
  store i8* %overflow_arg_area.next2444, i8** %overflow_arg_area_p2442, align 8, !dbg !4937
  br label %vaarg.end2445, !dbg !4937

vaarg.end2445:                                    ; preds = %vaarg.in_mem2441, %vaarg.in_reg2439
  %vaarg.addr2446 = phi i64* [ %1326, %vaarg.in_reg2439 ], [ %1328, %vaarg.in_mem2441 ], !dbg !4938
  %1329 = load i64, i64* %vaarg.addr2446, align 8, !dbg !4938
  %cmp2447 = icmp ne i64 0, %1329, !dbg !4939
  %cond2449 = select i1 %cmp2447, i32 1, i32 0, !dbg !4940
  %tobool2450 = icmp ne i32 %cond2449, 0, !dbg !4940
  %1330 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4941
  %set2451 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1330, i32 0, i32 13, !dbg !4942
  %ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2451, i32 0, i32 73, !dbg !4943
  %primary = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl, i32 0, i32 0, !dbg !4944
  %verifypeer = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary, i32 0, i32 2, !dbg !4945
  %frombool2452 = zext i1 %tobool2450 to i8, !dbg !4946
  store i8 %frombool2452, i8* %verifypeer, align 8, !dbg !4946
  br label %sw.epilog3648, !dbg !4947

sw.bb2453:                                        ; preds = %entry
  %1331 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4948
  %gp_offset_p2454 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1331, i32 0, i32 0, !dbg !4948
  %gp_offset2455 = load i32, i32* %gp_offset_p2454, align 8, !dbg !4948
  %fits_in_gp2456 = icmp ule i32 %gp_offset2455, 40, !dbg !4948
  br i1 %fits_in_gp2456, label %vaarg.in_reg2457, label %vaarg.in_mem2459, !dbg !4948

vaarg.in_reg2457:                                 ; preds = %sw.bb2453
  %1332 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1331, i32 0, i32 3, !dbg !4949
  %reg_save_area2458 = load i8*, i8** %1332, align 8, !dbg !4949
  %1333 = getelementptr i8, i8* %reg_save_area2458, i32 %gp_offset2455, !dbg !4949
  %1334 = bitcast i8* %1333 to i64*, !dbg !4949
  %1335 = add i32 %gp_offset2455, 8, !dbg !4949
  store i32 %1335, i32* %gp_offset_p2454, align 8, !dbg !4949
  br label %vaarg.end2463, !dbg !4949

vaarg.in_mem2459:                                 ; preds = %sw.bb2453
  %overflow_arg_area_p2460 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1331, i32 0, i32 2, !dbg !4950
  %overflow_arg_area2461 = load i8*, i8** %overflow_arg_area_p2460, align 8, !dbg !4950
  %1336 = bitcast i8* %overflow_arg_area2461 to i64*, !dbg !4950
  %overflow_arg_area.next2462 = getelementptr i8, i8* %overflow_arg_area2461, i32 8, !dbg !4950
  store i8* %overflow_arg_area.next2462, i8** %overflow_arg_area_p2460, align 8, !dbg !4950
  br label %vaarg.end2463, !dbg !4950

vaarg.end2463:                                    ; preds = %vaarg.in_mem2459, %vaarg.in_reg2457
  %vaarg.addr2464 = phi i64* [ %1334, %vaarg.in_reg2457 ], [ %1336, %vaarg.in_mem2459 ], !dbg !4951
  %1337 = load i64, i64* %vaarg.addr2464, align 8, !dbg !4951
  %cmp2465 = icmp ne i64 0, %1337, !dbg !4952
  %cond2467 = select i1 %cmp2465, i32 1, i32 0, !dbg !4953
  %tobool2468 = icmp ne i32 %cond2467, 0, !dbg !4953
  %1338 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4954
  %set2469 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1338, i32 0, i32 13, !dbg !4955
  %proxy_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2469, i32 0, i32 74, !dbg !4956
  %primary2470 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl, i32 0, i32 0, !dbg !4957
  %verifypeer2471 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary2470, i32 0, i32 2, !dbg !4958
  %frombool2472 = zext i1 %tobool2468 to i8, !dbg !4959
  store i8 %frombool2472, i8* %verifypeer2471, align 8, !dbg !4959
  br label %sw.epilog3648, !dbg !4960

sw.bb2473:                                        ; preds = %entry
  %1339 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4961
  %gp_offset_p2474 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1339, i32 0, i32 0, !dbg !4961
  %gp_offset2475 = load i32, i32* %gp_offset_p2474, align 8, !dbg !4961
  %fits_in_gp2476 = icmp ule i32 %gp_offset2475, 40, !dbg !4961
  br i1 %fits_in_gp2476, label %vaarg.in_reg2477, label %vaarg.in_mem2479, !dbg !4961

vaarg.in_reg2477:                                 ; preds = %sw.bb2473
  %1340 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1339, i32 0, i32 3, !dbg !4962
  %reg_save_area2478 = load i8*, i8** %1340, align 8, !dbg !4962
  %1341 = getelementptr i8, i8* %reg_save_area2478, i32 %gp_offset2475, !dbg !4962
  %1342 = bitcast i8* %1341 to i64*, !dbg !4962
  %1343 = add i32 %gp_offset2475, 8, !dbg !4962
  store i32 %1343, i32* %gp_offset_p2474, align 8, !dbg !4962
  br label %vaarg.end2483, !dbg !4962

vaarg.in_mem2479:                                 ; preds = %sw.bb2473
  %overflow_arg_area_p2480 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1339, i32 0, i32 2, !dbg !4963
  %overflow_arg_area2481 = load i8*, i8** %overflow_arg_area_p2480, align 8, !dbg !4963
  %1344 = bitcast i8* %overflow_arg_area2481 to i64*, !dbg !4963
  %overflow_arg_area.next2482 = getelementptr i8, i8* %overflow_arg_area2481, i32 8, !dbg !4963
  store i8* %overflow_arg_area.next2482, i8** %overflow_arg_area_p2480, align 8, !dbg !4963
  br label %vaarg.end2483, !dbg !4963

vaarg.end2483:                                    ; preds = %vaarg.in_mem2479, %vaarg.in_reg2477
  %vaarg.addr2484 = phi i64* [ %1342, %vaarg.in_reg2477 ], [ %1344, %vaarg.in_mem2479 ], !dbg !4964
  %1345 = load i64, i64* %vaarg.addr2484, align 8, !dbg !4964
  store i64 %1345, i64* %arg, align 8, !dbg !4965
  %1346 = load i64, i64* %arg, align 8, !dbg !4966
  %cmp2485 = icmp eq i64 1, %1346, !dbg !4968
  br i1 %cmp2485, label %if.then2487, label %if.end2488, !dbg !4969

if.then2487:                                      ; preds = %vaarg.end2483
  %1347 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4970
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %1347, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i32 0, i32 0)), !dbg !4972
  store i32 43, i32* %retval, align 4, !dbg !4973
  br label %return, !dbg !4973

if.end2488:                                       ; preds = %vaarg.end2483
  %1348 = load i64, i64* %arg, align 8, !dbg !4974
  %cmp2489 = icmp ne i64 0, %1348, !dbg !4975
  %cond2491 = select i1 %cmp2489, i32 1, i32 0, !dbg !4976
  %tobool2492 = icmp ne i32 %cond2491, 0, !dbg !4976
  %1349 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4977
  %set2493 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1349, i32 0, i32 13, !dbg !4978
  %ssl2494 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2493, i32 0, i32 73, !dbg !4979
  %primary2495 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl2494, i32 0, i32 0, !dbg !4980
  %verifyhost = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary2495, i32 0, i32 3, !dbg !4981
  %frombool2496 = zext i1 %tobool2492 to i8, !dbg !4982
  store i8 %frombool2496, i8* %verifyhost, align 1, !dbg !4982
  br label %sw.epilog3648, !dbg !4983

sw.bb2497:                                        ; preds = %entry
  %1350 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !4984
  %gp_offset_p2498 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1350, i32 0, i32 0, !dbg !4984
  %gp_offset2499 = load i32, i32* %gp_offset_p2498, align 8, !dbg !4984
  %fits_in_gp2500 = icmp ule i32 %gp_offset2499, 40, !dbg !4984
  br i1 %fits_in_gp2500, label %vaarg.in_reg2501, label %vaarg.in_mem2503, !dbg !4984

vaarg.in_reg2501:                                 ; preds = %sw.bb2497
  %1351 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1350, i32 0, i32 3, !dbg !4985
  %reg_save_area2502 = load i8*, i8** %1351, align 8, !dbg !4985
  %1352 = getelementptr i8, i8* %reg_save_area2502, i32 %gp_offset2499, !dbg !4985
  %1353 = bitcast i8* %1352 to i64*, !dbg !4985
  %1354 = add i32 %gp_offset2499, 8, !dbg !4985
  store i32 %1354, i32* %gp_offset_p2498, align 8, !dbg !4985
  br label %vaarg.end2507, !dbg !4985

vaarg.in_mem2503:                                 ; preds = %sw.bb2497
  %overflow_arg_area_p2504 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1350, i32 0, i32 2, !dbg !4986
  %overflow_arg_area2505 = load i8*, i8** %overflow_arg_area_p2504, align 8, !dbg !4986
  %1355 = bitcast i8* %overflow_arg_area2505 to i64*, !dbg !4986
  %overflow_arg_area.next2506 = getelementptr i8, i8* %overflow_arg_area2505, i32 8, !dbg !4986
  store i8* %overflow_arg_area.next2506, i8** %overflow_arg_area_p2504, align 8, !dbg !4986
  br label %vaarg.end2507, !dbg !4986

vaarg.end2507:                                    ; preds = %vaarg.in_mem2503, %vaarg.in_reg2501
  %vaarg.addr2508 = phi i64* [ %1353, %vaarg.in_reg2501 ], [ %1355, %vaarg.in_mem2503 ], !dbg !4987
  %1356 = load i64, i64* %vaarg.addr2508, align 8, !dbg !4987
  store i64 %1356, i64* %arg, align 8, !dbg !4988
  %1357 = load i64, i64* %arg, align 8, !dbg !4989
  %cmp2509 = icmp eq i64 1, %1357, !dbg !4991
  br i1 %cmp2509, label %if.then2511, label %if.end2512, !dbg !4992

if.then2511:                                      ; preds = %vaarg.end2507
  %1358 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4993
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %1358, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i32 0, i32 0)), !dbg !4995
  store i32 43, i32* %retval, align 4, !dbg !4996
  br label %return, !dbg !4996

if.end2512:                                       ; preds = %vaarg.end2507
  %1359 = load i64, i64* %arg, align 8, !dbg !4997
  %cmp2513 = icmp ne i64 0, %1359, !dbg !4998
  %cond2515 = select i1 %cmp2513, i32 1, i32 0, !dbg !4999
  %tobool2516 = icmp ne i32 %cond2515, 0, !dbg !4999
  %1360 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5000
  %set2517 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1360, i32 0, i32 13, !dbg !5001
  %proxy_ssl2518 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2517, i32 0, i32 74, !dbg !5002
  %primary2519 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl2518, i32 0, i32 0, !dbg !5003
  %verifyhost2520 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary2519, i32 0, i32 3, !dbg !5004
  %frombool2521 = zext i1 %tobool2516 to i8, !dbg !5005
  store i8 %frombool2521, i8* %verifyhost2520, align 1, !dbg !5005
  br label %sw.epilog3648, !dbg !5006

sw.bb2522:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5007
  br label %sw.epilog3648, !dbg !5010

sw.bb2523:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5011
  br label %sw.epilog3648, !dbg !5012

sw.bb2524:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5013
  br label %sw.epilog3648, !dbg !5014

sw.bb2525:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5015
  br label %sw.epilog3648, !dbg !5018

sw.bb2526:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5019
  br label %sw.epilog3648, !dbg !5020

sw.bb2527:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5021
  br label %sw.epilog3648, !dbg !5022

sw.bb2528:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5023
  br label %sw.epilog3648, !dbg !5024

sw.bb2529:                                        ; preds = %entry
  %1361 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5025
  %set2530 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1361, i32 0, i32 13, !dbg !5026
  %str2531 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2530, i32 0, i32 128, !dbg !5027
  %arrayidx2532 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2531, i64 0, i64 28, !dbg !5025
  %1362 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5028
  %gp_offset_p2533 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1362, i32 0, i32 0, !dbg !5028
  %gp_offset2534 = load i32, i32* %gp_offset_p2533, align 8, !dbg !5028
  %fits_in_gp2535 = icmp ule i32 %gp_offset2534, 40, !dbg !5028
  br i1 %fits_in_gp2535, label %vaarg.in_reg2536, label %vaarg.in_mem2538, !dbg !5028

vaarg.in_reg2536:                                 ; preds = %sw.bb2529
  %1363 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1362, i32 0, i32 3, !dbg !5029
  %reg_save_area2537 = load i8*, i8** %1363, align 8, !dbg !5029
  %1364 = getelementptr i8, i8* %reg_save_area2537, i32 %gp_offset2534, !dbg !5029
  %1365 = bitcast i8* %1364 to i8**, !dbg !5029
  %1366 = add i32 %gp_offset2534, 8, !dbg !5029
  store i32 %1366, i32* %gp_offset_p2533, align 8, !dbg !5029
  br label %vaarg.end2542, !dbg !5029

vaarg.in_mem2538:                                 ; preds = %sw.bb2529
  %overflow_arg_area_p2539 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1362, i32 0, i32 2, !dbg !5030
  %overflow_arg_area2540 = load i8*, i8** %overflow_arg_area_p2539, align 8, !dbg !5030
  %1367 = bitcast i8* %overflow_arg_area2540 to i8**, !dbg !5030
  %overflow_arg_area.next2541 = getelementptr i8, i8* %overflow_arg_area2540, i32 8, !dbg !5030
  store i8* %overflow_arg_area.next2541, i8** %overflow_arg_area_p2539, align 8, !dbg !5030
  br label %vaarg.end2542, !dbg !5030

vaarg.end2542:                                    ; preds = %vaarg.in_mem2538, %vaarg.in_reg2536
  %vaarg.addr2543 = phi i8** [ %1365, %vaarg.in_reg2536 ], [ %1367, %vaarg.in_mem2538 ], !dbg !5031
  %1368 = load i8*, i8** %vaarg.addr2543, align 8, !dbg !5031
  %call2544 = call i32 @setstropt(i8** %arrayidx2532, i8* %1368), !dbg !5032
  store i32 %call2544, i32* %result, align 4, !dbg !5033
  br label %sw.epilog3648, !dbg !5034

sw.bb2545:                                        ; preds = %entry
  %1369 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5035
  %set2546 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1369, i32 0, i32 13, !dbg !5036
  %str2547 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2546, i32 0, i32 128, !dbg !5037
  %arrayidx2548 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2547, i64 0, i64 29, !dbg !5035
  %1370 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5038
  %gp_offset_p2549 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1370, i32 0, i32 0, !dbg !5038
  %gp_offset2550 = load i32, i32* %gp_offset_p2549, align 8, !dbg !5038
  %fits_in_gp2551 = icmp ule i32 %gp_offset2550, 40, !dbg !5038
  br i1 %fits_in_gp2551, label %vaarg.in_reg2552, label %vaarg.in_mem2554, !dbg !5038

vaarg.in_reg2552:                                 ; preds = %sw.bb2545
  %1371 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1370, i32 0, i32 3, !dbg !5039
  %reg_save_area2553 = load i8*, i8** %1371, align 8, !dbg !5039
  %1372 = getelementptr i8, i8* %reg_save_area2553, i32 %gp_offset2550, !dbg !5039
  %1373 = bitcast i8* %1372 to i8**, !dbg !5039
  %1374 = add i32 %gp_offset2550, 8, !dbg !5039
  store i32 %1374, i32* %gp_offset_p2549, align 8, !dbg !5039
  br label %vaarg.end2558, !dbg !5039

vaarg.in_mem2554:                                 ; preds = %sw.bb2545
  %overflow_arg_area_p2555 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1370, i32 0, i32 2, !dbg !5040
  %overflow_arg_area2556 = load i8*, i8** %overflow_arg_area_p2555, align 8, !dbg !5040
  %1375 = bitcast i8* %overflow_arg_area2556 to i8**, !dbg !5040
  %overflow_arg_area.next2557 = getelementptr i8, i8* %overflow_arg_area2556, i32 8, !dbg !5040
  store i8* %overflow_arg_area.next2557, i8** %overflow_arg_area_p2555, align 8, !dbg !5040
  br label %vaarg.end2558, !dbg !5040

vaarg.end2558:                                    ; preds = %vaarg.in_mem2554, %vaarg.in_reg2552
  %vaarg.addr2559 = phi i8** [ %1373, %vaarg.in_reg2552 ], [ %1375, %vaarg.in_mem2554 ], !dbg !5041
  %1376 = load i8*, i8** %vaarg.addr2559, align 8, !dbg !5041
  %call2560 = call i32 @setstropt(i8** %arrayidx2548, i8* %1376), !dbg !5042
  store i32 %call2560, i32* %result, align 4, !dbg !5043
  br label %sw.epilog3648, !dbg !5044

sw.bb2561:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5045
  br label %sw.epilog3648, !dbg !5046

sw.bb2562:                                        ; preds = %entry
  store i32 4, i32* %result, align 4, !dbg !5047
  br label %sw.epilog3648, !dbg !5048

sw.bb2563:                                        ; preds = %entry
  %1377 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5049
  %set2564 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1377, i32 0, i32 13, !dbg !5050
  %str2565 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2564, i32 0, i32 128, !dbg !5051
  %arrayidx2566 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2565, i64 0, i64 37, !dbg !5049
  %1378 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5052
  %gp_offset_p2567 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1378, i32 0, i32 0, !dbg !5052
  %gp_offset2568 = load i32, i32* %gp_offset_p2567, align 8, !dbg !5052
  %fits_in_gp2569 = icmp ule i32 %gp_offset2568, 40, !dbg !5052
  br i1 %fits_in_gp2569, label %vaarg.in_reg2570, label %vaarg.in_mem2572, !dbg !5052

vaarg.in_reg2570:                                 ; preds = %sw.bb2563
  %1379 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1378, i32 0, i32 3, !dbg !5053
  %reg_save_area2571 = load i8*, i8** %1379, align 8, !dbg !5053
  %1380 = getelementptr i8, i8* %reg_save_area2571, i32 %gp_offset2568, !dbg !5053
  %1381 = bitcast i8* %1380 to i8**, !dbg !5053
  %1382 = add i32 %gp_offset2568, 8, !dbg !5053
  store i32 %1382, i32* %gp_offset_p2567, align 8, !dbg !5053
  br label %vaarg.end2576, !dbg !5053

vaarg.in_mem2572:                                 ; preds = %sw.bb2563
  %overflow_arg_area_p2573 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1378, i32 0, i32 2, !dbg !5054
  %overflow_arg_area2574 = load i8*, i8** %overflow_arg_area_p2573, align 8, !dbg !5054
  %1383 = bitcast i8* %overflow_arg_area2574 to i8**, !dbg !5054
  %overflow_arg_area.next2575 = getelementptr i8, i8* %overflow_arg_area2574, i32 8, !dbg !5054
  store i8* %overflow_arg_area.next2575, i8** %overflow_arg_area_p2573, align 8, !dbg !5054
  br label %vaarg.end2576, !dbg !5054

vaarg.end2576:                                    ; preds = %vaarg.in_mem2572, %vaarg.in_reg2570
  %vaarg.addr2577 = phi i8** [ %1381, %vaarg.in_reg2570 ], [ %1383, %vaarg.in_mem2572 ], !dbg !5055
  %1384 = load i8*, i8** %vaarg.addr2577, align 8, !dbg !5055
  %call2578 = call i32 @setstropt(i8** %arrayidx2566, i8* %1384), !dbg !5056
  store i32 %call2578, i32* %result, align 4, !dbg !5057
  br label %sw.epilog3648, !dbg !5058

sw.bb2579:                                        ; preds = %entry
  %1385 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5059
  %set2580 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1385, i32 0, i32 13, !dbg !5060
  %str2581 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2580, i32 0, i32 128, !dbg !5061
  %arrayidx2582 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2581, i64 0, i64 38, !dbg !5059
  %1386 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5062
  %gp_offset_p2583 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1386, i32 0, i32 0, !dbg !5062
  %gp_offset2584 = load i32, i32* %gp_offset_p2583, align 8, !dbg !5062
  %fits_in_gp2585 = icmp ule i32 %gp_offset2584, 40, !dbg !5062
  br i1 %fits_in_gp2585, label %vaarg.in_reg2586, label %vaarg.in_mem2588, !dbg !5062

vaarg.in_reg2586:                                 ; preds = %sw.bb2579
  %1387 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1386, i32 0, i32 3, !dbg !5063
  %reg_save_area2587 = load i8*, i8** %1387, align 8, !dbg !5063
  %1388 = getelementptr i8, i8* %reg_save_area2587, i32 %gp_offset2584, !dbg !5063
  %1389 = bitcast i8* %1388 to i8**, !dbg !5063
  %1390 = add i32 %gp_offset2584, 8, !dbg !5063
  store i32 %1390, i32* %gp_offset_p2583, align 8, !dbg !5063
  br label %vaarg.end2592, !dbg !5063

vaarg.in_mem2588:                                 ; preds = %sw.bb2579
  %overflow_arg_area_p2589 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1386, i32 0, i32 2, !dbg !5064
  %overflow_arg_area2590 = load i8*, i8** %overflow_arg_area_p2589, align 8, !dbg !5064
  %1391 = bitcast i8* %overflow_arg_area2590 to i8**, !dbg !5064
  %overflow_arg_area.next2591 = getelementptr i8, i8* %overflow_arg_area2590, i32 8, !dbg !5064
  store i8* %overflow_arg_area.next2591, i8** %overflow_arg_area_p2589, align 8, !dbg !5064
  br label %vaarg.end2592, !dbg !5064

vaarg.end2592:                                    ; preds = %vaarg.in_mem2588, %vaarg.in_reg2586
  %vaarg.addr2593 = phi i8** [ %1389, %vaarg.in_reg2586 ], [ %1391, %vaarg.in_mem2588 ], !dbg !5065
  %1392 = load i8*, i8** %vaarg.addr2593, align 8, !dbg !5065
  %call2594 = call i32 @setstropt(i8** %arrayidx2582, i8* %1392), !dbg !5066
  store i32 %call2594, i32* %result, align 4, !dbg !5067
  br label %sw.epilog3648, !dbg !5068

sw.bb2595:                                        ; preds = %entry
  %1393 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5069
  %set2596 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1393, i32 0, i32 13, !dbg !5070
  %str2597 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2596, i32 0, i32 128, !dbg !5071
  %arrayidx2598 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2597, i64 0, i64 39, !dbg !5069
  %1394 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5072
  %gp_offset_p2599 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1394, i32 0, i32 0, !dbg !5072
  %gp_offset2600 = load i32, i32* %gp_offset_p2599, align 8, !dbg !5072
  %fits_in_gp2601 = icmp ule i32 %gp_offset2600, 40, !dbg !5072
  br i1 %fits_in_gp2601, label %vaarg.in_reg2602, label %vaarg.in_mem2604, !dbg !5072

vaarg.in_reg2602:                                 ; preds = %sw.bb2595
  %1395 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1394, i32 0, i32 3, !dbg !5073
  %reg_save_area2603 = load i8*, i8** %1395, align 8, !dbg !5073
  %1396 = getelementptr i8, i8* %reg_save_area2603, i32 %gp_offset2600, !dbg !5073
  %1397 = bitcast i8* %1396 to i8**, !dbg !5073
  %1398 = add i32 %gp_offset2600, 8, !dbg !5073
  store i32 %1398, i32* %gp_offset_p2599, align 8, !dbg !5073
  br label %vaarg.end2608, !dbg !5073

vaarg.in_mem2604:                                 ; preds = %sw.bb2595
  %overflow_arg_area_p2605 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1394, i32 0, i32 2, !dbg !5074
  %overflow_arg_area2606 = load i8*, i8** %overflow_arg_area_p2605, align 8, !dbg !5074
  %1399 = bitcast i8* %overflow_arg_area2606 to i8**, !dbg !5074
  %overflow_arg_area.next2607 = getelementptr i8, i8* %overflow_arg_area2606, i32 8, !dbg !5074
  store i8* %overflow_arg_area.next2607, i8** %overflow_arg_area_p2605, align 8, !dbg !5074
  br label %vaarg.end2608, !dbg !5074

vaarg.end2608:                                    ; preds = %vaarg.in_mem2604, %vaarg.in_reg2602
  %vaarg.addr2609 = phi i8** [ %1397, %vaarg.in_reg2602 ], [ %1399, %vaarg.in_mem2604 ], !dbg !5075
  %1400 = load i8*, i8** %vaarg.addr2609, align 8, !dbg !5075
  %call2610 = call i32 @setstropt(i8** %arrayidx2598, i8* %1400), !dbg !5076
  store i32 %call2610, i32* %result, align 4, !dbg !5077
  br label %sw.epilog3648, !dbg !5078

sw.bb2611:                                        ; preds = %entry
  %1401 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5079
  %gp_offset_p2612 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1401, i32 0, i32 0, !dbg !5079
  %gp_offset2613 = load i32, i32* %gp_offset_p2612, align 8, !dbg !5079
  %fits_in_gp2614 = icmp ule i32 %gp_offset2613, 40, !dbg !5079
  br i1 %fits_in_gp2614, label %vaarg.in_reg2615, label %vaarg.in_mem2617, !dbg !5079

vaarg.in_reg2615:                                 ; preds = %sw.bb2611
  %1402 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1401, i32 0, i32 3, !dbg !5080
  %reg_save_area2616 = load i8*, i8** %1402, align 8, !dbg !5080
  %1403 = getelementptr i8, i8* %reg_save_area2616, i32 %gp_offset2613, !dbg !5080
  %1404 = bitcast i8* %1403 to %struct.curl_slist**, !dbg !5080
  %1405 = add i32 %gp_offset2613, 8, !dbg !5080
  store i32 %1405, i32* %gp_offset_p2612, align 8, !dbg !5080
  br label %vaarg.end2621, !dbg !5080

vaarg.in_mem2617:                                 ; preds = %sw.bb2611
  %overflow_arg_area_p2618 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1401, i32 0, i32 2, !dbg !5081
  %overflow_arg_area2619 = load i8*, i8** %overflow_arg_area_p2618, align 8, !dbg !5081
  %1406 = bitcast i8* %overflow_arg_area2619 to %struct.curl_slist**, !dbg !5081
  %overflow_arg_area.next2620 = getelementptr i8, i8* %overflow_arg_area2619, i32 8, !dbg !5081
  store i8* %overflow_arg_area.next2620, i8** %overflow_arg_area_p2618, align 8, !dbg !5081
  br label %vaarg.end2621, !dbg !5081

vaarg.end2621:                                    ; preds = %vaarg.in_mem2617, %vaarg.in_reg2615
  %vaarg.addr2622 = phi %struct.curl_slist** [ %1404, %vaarg.in_reg2615 ], [ %1406, %vaarg.in_mem2617 ], !dbg !5082
  %1407 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr2622, align 8, !dbg !5082
  %1408 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5083
  %set2623 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1408, i32 0, i32 13, !dbg !5084
  %telnet_options = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2623, i32 0, i32 66, !dbg !5085
  store %struct.curl_slist* %1407, %struct.curl_slist** %telnet_options, align 8, !dbg !5086
  br label %sw.epilog3648, !dbg !5087

sw.bb2624:                                        ; preds = %entry
  %1409 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5088
  %gp_offset_p2625 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1409, i32 0, i32 0, !dbg !5088
  %gp_offset2626 = load i32, i32* %gp_offset_p2625, align 8, !dbg !5088
  %fits_in_gp2627 = icmp ule i32 %gp_offset2626, 40, !dbg !5088
  br i1 %fits_in_gp2627, label %vaarg.in_reg2628, label %vaarg.in_mem2630, !dbg !5088

vaarg.in_reg2628:                                 ; preds = %sw.bb2624
  %1410 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1409, i32 0, i32 3, !dbg !5089
  %reg_save_area2629 = load i8*, i8** %1410, align 8, !dbg !5089
  %1411 = getelementptr i8, i8* %reg_save_area2629, i32 %gp_offset2626, !dbg !5089
  %1412 = bitcast i8* %1411 to i64*, !dbg !5089
  %1413 = add i32 %gp_offset2626, 8, !dbg !5089
  store i32 %1413, i32* %gp_offset_p2625, align 8, !dbg !5089
  br label %vaarg.end2634, !dbg !5089

vaarg.in_mem2630:                                 ; preds = %sw.bb2624
  %overflow_arg_area_p2631 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1409, i32 0, i32 2, !dbg !5090
  %overflow_arg_area2632 = load i8*, i8** %overflow_arg_area_p2631, align 8, !dbg !5090
  %1414 = bitcast i8* %overflow_arg_area2632 to i64*, !dbg !5090
  %overflow_arg_area.next2633 = getelementptr i8, i8* %overflow_arg_area2632, i32 8, !dbg !5090
  store i8* %overflow_arg_area.next2633, i8** %overflow_arg_area_p2631, align 8, !dbg !5090
  br label %vaarg.end2634, !dbg !5090

vaarg.end2634:                                    ; preds = %vaarg.in_mem2630, %vaarg.in_reg2628
  %vaarg.addr2635 = phi i64* [ %1412, %vaarg.in_reg2628 ], [ %1414, %vaarg.in_mem2630 ], !dbg !5091
  %1415 = load i64, i64* %vaarg.addr2635, align 8, !dbg !5091
  %1416 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5092
  %set2636 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1416, i32 0, i32 13, !dbg !5093
  %buffer_size = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2636, i32 0, i32 78, !dbg !5094
  store i64 %1415, i64* %buffer_size, align 8, !dbg !5095
  %1417 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5096
  %set2637 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1417, i32 0, i32 13, !dbg !5098
  %buffer_size2638 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2637, i32 0, i32 78, !dbg !5099
  %1418 = load i64, i64* %buffer_size2638, align 8, !dbg !5099
  %cmp2639 = icmp sgt i64 %1418, 524288, !dbg !5100
  br i1 %cmp2639, label %if.then2641, label %if.else2644, !dbg !5101

if.then2641:                                      ; preds = %vaarg.end2634
  %1419 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5102
  %set2642 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1419, i32 0, i32 13, !dbg !5103
  %buffer_size2643 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2642, i32 0, i32 78, !dbg !5104
  store i64 524288, i64* %buffer_size2643, align 8, !dbg !5105
  br label %if.end2653, !dbg !5102

if.else2644:                                      ; preds = %vaarg.end2634
  %1420 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5106
  %set2645 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1420, i32 0, i32 13, !dbg !5108
  %buffer_size2646 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2645, i32 0, i32 78, !dbg !5109
  %1421 = load i64, i64* %buffer_size2646, align 8, !dbg !5109
  %cmp2647 = icmp slt i64 %1421, 1, !dbg !5110
  br i1 %cmp2647, label %if.then2649, label %if.end2652, !dbg !5111

if.then2649:                                      ; preds = %if.else2644
  %1422 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5112
  %set2650 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1422, i32 0, i32 13, !dbg !5113
  %buffer_size2651 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2650, i32 0, i32 78, !dbg !5114
  store i64 16384, i64* %buffer_size2651, align 8, !dbg !5115
  br label %if.end2652, !dbg !5112

if.end2652:                                       ; preds = %if.then2649, %if.else2644
  br label %if.end2653

if.end2653:                                       ; preds = %if.end2652, %if.then2641
  %1423 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5116
  %set2654 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1423, i32 0, i32 13, !dbg !5118
  %buffer_size2655 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2654, i32 0, i32 78, !dbg !5119
  %1424 = load i64, i64* %buffer_size2655, align 8, !dbg !5119
  %cmp2656 = icmp sgt i64 %1424, 16384, !dbg !5120
  br i1 %cmp2656, label %if.then2658, label %if.end2672, !dbg !5121

if.then2658:                                      ; preds = %if.end2653
  %1425 = load i8* (i8*, i64)*, i8* (i8*, i64)** @Curl_crealloc, align 8, !dbg !5122
  %1426 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5122
  %state2659 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1426, i32 0, i32 17, !dbg !5122
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2659, i32 0, i32 6, !dbg !5122
  %1427 = load i8*, i8** %buffer, align 8, !dbg !5122
  %1428 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5122
  %set2660 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1428, i32 0, i32 13, !dbg !5122
  %buffer_size2661 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2660, i32 0, i32 78, !dbg !5122
  %1429 = load i64, i64* %buffer_size2661, align 8, !dbg !5122
  %add = add nsw i64 %1429, 1, !dbg !5122
  %call2662 = call i8* %1425(i8* %1427, i64 %add), !dbg !5122
  %1430 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5124
  %state2663 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1430, i32 0, i32 17, !dbg !5125
  %buffer2664 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2663, i32 0, i32 6, !dbg !5126
  store i8* %call2662, i8** %buffer2664, align 8, !dbg !5127
  %1431 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5128
  %state2665 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1431, i32 0, i32 17, !dbg !5130
  %buffer2666 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2665, i32 0, i32 6, !dbg !5131
  %1432 = load i8*, i8** %buffer2666, align 8, !dbg !5131
  %tobool2667 = icmp ne i8* %1432, null, !dbg !5128
  br i1 %tobool2667, label %if.end2671, label %if.then2668, !dbg !5132

if.then2668:                                      ; preds = %if.then2658
  br label %do.body2669, !dbg !5133

do.body2669:                                      ; preds = %if.then2668
  br label %do.end2670, !dbg !5135

do.end2670:                                       ; preds = %do.body2669
  store i32 27, i32* %result, align 4, !dbg !5138
  br label %if.end2671, !dbg !5139

if.end2671:                                       ; preds = %do.end2670, %if.then2658
  br label %if.end2672, !dbg !5140

if.end2672:                                       ; preds = %if.end2671, %if.end2653
  br label %sw.epilog3648, !dbg !5141

sw.bb2673:                                        ; preds = %entry
  %1433 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5142
  %gp_offset_p2674 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1433, i32 0, i32 0, !dbg !5142
  %gp_offset2675 = load i32, i32* %gp_offset_p2674, align 8, !dbg !5142
  %fits_in_gp2676 = icmp ule i32 %gp_offset2675, 40, !dbg !5142
  br i1 %fits_in_gp2676, label %vaarg.in_reg2677, label %vaarg.in_mem2679, !dbg !5142

vaarg.in_reg2677:                                 ; preds = %sw.bb2673
  %1434 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1433, i32 0, i32 3, !dbg !5143
  %reg_save_area2678 = load i8*, i8** %1434, align 8, !dbg !5143
  %1435 = getelementptr i8, i8* %reg_save_area2678, i32 %gp_offset2675, !dbg !5143
  %1436 = bitcast i8* %1435 to i64*, !dbg !5143
  %1437 = add i32 %gp_offset2675, 8, !dbg !5143
  store i32 %1437, i32* %gp_offset_p2674, align 8, !dbg !5143
  br label %vaarg.end2683, !dbg !5143

vaarg.in_mem2679:                                 ; preds = %sw.bb2673
  %overflow_arg_area_p2680 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1433, i32 0, i32 2, !dbg !5144
  %overflow_arg_area2681 = load i8*, i8** %overflow_arg_area_p2680, align 8, !dbg !5144
  %1438 = bitcast i8* %overflow_arg_area2681 to i64*, !dbg !5144
  %overflow_arg_area.next2682 = getelementptr i8, i8* %overflow_arg_area2681, i32 8, !dbg !5144
  store i8* %overflow_arg_area.next2682, i8** %overflow_arg_area_p2680, align 8, !dbg !5144
  br label %vaarg.end2683, !dbg !5144

vaarg.end2683:                                    ; preds = %vaarg.in_mem2679, %vaarg.in_reg2677
  %vaarg.addr2684 = phi i64* [ %1436, %vaarg.in_reg2677 ], [ %1438, %vaarg.in_mem2679 ], !dbg !5145
  %1439 = load i64, i64* %vaarg.addr2684, align 8, !dbg !5145
  %cmp2685 = icmp ne i64 0, %1439, !dbg !5146
  %cond2687 = select i1 %cmp2685, i32 1, i32 0, !dbg !5147
  %tobool2688 = icmp ne i32 %cond2687, 0, !dbg !5147
  %1440 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5148
  %set2689 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1440, i32 0, i32 13, !dbg !5149
  %no_signal = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2689, i32 0, i32 116, !dbg !5150
  %frombool2690 = zext i1 %tobool2688 to i8, !dbg !5151
  store i8 %frombool2690, i8* %no_signal, align 4, !dbg !5151
  br label %sw.epilog3648, !dbg !5152

sw.bb2691:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Curl_share** %set2692, metadata !5153, metadata !2256), !dbg !5155
  %1441 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5156
  %gp_offset_p2693 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1441, i32 0, i32 0, !dbg !5156
  %gp_offset2694 = load i32, i32* %gp_offset_p2693, align 8, !dbg !5156
  %fits_in_gp2695 = icmp ule i32 %gp_offset2694, 40, !dbg !5156
  br i1 %fits_in_gp2695, label %vaarg.in_reg2696, label %vaarg.in_mem2698, !dbg !5156

vaarg.in_reg2696:                                 ; preds = %sw.bb2691
  %1442 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1441, i32 0, i32 3, !dbg !5157
  %reg_save_area2697 = load i8*, i8** %1442, align 8, !dbg !5157
  %1443 = getelementptr i8, i8* %reg_save_area2697, i32 %gp_offset2694, !dbg !5157
  %1444 = bitcast i8* %1443 to %struct.Curl_share**, !dbg !5157
  %1445 = add i32 %gp_offset2694, 8, !dbg !5157
  store i32 %1445, i32* %gp_offset_p2693, align 8, !dbg !5157
  br label %vaarg.end2702, !dbg !5157

vaarg.in_mem2698:                                 ; preds = %sw.bb2691
  %overflow_arg_area_p2699 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1441, i32 0, i32 2, !dbg !5159
  %overflow_arg_area2700 = load i8*, i8** %overflow_arg_area_p2699, align 8, !dbg !5159
  %1446 = bitcast i8* %overflow_arg_area2700 to %struct.Curl_share**, !dbg !5159
  %overflow_arg_area.next2701 = getelementptr i8, i8* %overflow_arg_area2700, i32 8, !dbg !5159
  store i8* %overflow_arg_area.next2701, i8** %overflow_arg_area_p2699, align 8, !dbg !5159
  br label %vaarg.end2702, !dbg !5159

vaarg.end2702:                                    ; preds = %vaarg.in_mem2698, %vaarg.in_reg2696
  %vaarg.addr2703 = phi %struct.Curl_share** [ %1444, %vaarg.in_reg2696 ], [ %1446, %vaarg.in_mem2698 ], !dbg !5161
  %1447 = load %struct.Curl_share*, %struct.Curl_share** %vaarg.addr2703, align 8, !dbg !5161
  store %struct.Curl_share* %1447, %struct.Curl_share** %set2692, align 8, !dbg !5163
  %1448 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5164
  %share = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1448, i32 0, i32 11, !dbg !5166
  %1449 = load %struct.Curl_share*, %struct.Curl_share** %share, align 8, !dbg !5166
  %tobool2704 = icmp ne %struct.Curl_share* %1449, null, !dbg !5164
  br i1 %tobool2704, label %if.then2705, label %if.end2733, !dbg !5167

if.then2705:                                      ; preds = %vaarg.end2702
  %1450 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5168
  %call2706 = call i32 @Curl_share_lock(%struct.Curl_easy* %1450, i32 1, i32 2), !dbg !5170
  %1451 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5171
  %dns = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1451, i32 0, i32 8, !dbg !5173
  %hostcachetype = getelementptr inbounds %struct.Names, %struct.Names* %dns, i32 0, i32 1, !dbg !5174
  %1452 = load i32, i32* %hostcachetype, align 8, !dbg !5174
  %cmp2707 = icmp eq i32 %1452, 3, !dbg !5175
  br i1 %cmp2707, label %if.then2709, label %if.end2713, !dbg !5176

if.then2709:                                      ; preds = %if.then2705
  %1453 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5177
  %dns2710 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1453, i32 0, i32 8, !dbg !5179
  %hostcache = getelementptr inbounds %struct.Names, %struct.Names* %dns2710, i32 0, i32 0, !dbg !5180
  store %struct.curl_hash* null, %struct.curl_hash** %hostcache, align 8, !dbg !5181
  %1454 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5182
  %dns2711 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1454, i32 0, i32 8, !dbg !5183
  %hostcachetype2712 = getelementptr inbounds %struct.Names, %struct.Names* %dns2711, i32 0, i32 1, !dbg !5184
  store i32 0, i32* %hostcachetype2712, align 8, !dbg !5185
  br label %if.end2713, !dbg !5186

if.end2713:                                       ; preds = %if.then2709, %if.then2705
  %1455 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5187
  %share2714 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1455, i32 0, i32 11, !dbg !5189
  %1456 = load %struct.Curl_share*, %struct.Curl_share** %share2714, align 8, !dbg !5189
  %cookies2715 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1456, i32 0, i32 6, !dbg !5190
  %1457 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies2715, align 8, !dbg !5190
  %1458 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5191
  %cookies2716 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1458, i32 0, i32 15, !dbg !5192
  %1459 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies2716, align 8, !dbg !5192
  %cmp2717 = icmp eq %struct.CookieInfo* %1457, %1459, !dbg !5193
  br i1 %cmp2717, label %if.then2719, label %if.end2721, !dbg !5194

if.then2719:                                      ; preds = %if.end2713
  %1460 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5195
  %cookies2720 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1460, i32 0, i32 15, !dbg !5196
  store %struct.CookieInfo* null, %struct.CookieInfo** %cookies2720, align 8, !dbg !5197
  br label %if.end2721, !dbg !5195

if.end2721:                                       ; preds = %if.then2719, %if.end2713
  %1461 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5198
  %share2722 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1461, i32 0, i32 11, !dbg !5200
  %1462 = load %struct.Curl_share*, %struct.Curl_share** %share2722, align 8, !dbg !5200
  %sslsession = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1462, i32 0, i32 7, !dbg !5201
  %1463 = load %struct.curl_ssl_session*, %struct.curl_ssl_session** %sslsession, align 8, !dbg !5201
  %1464 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5202
  %state2723 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1464, i32 0, i32 17, !dbg !5203
  %session = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2723, i32 0, i32 12, !dbg !5204
  %1465 = load %struct.curl_ssl_session*, %struct.curl_ssl_session** %session, align 8, !dbg !5204
  %cmp2724 = icmp eq %struct.curl_ssl_session* %1463, %1465, !dbg !5205
  br i1 %cmp2724, label %if.then2726, label %if.end2729, !dbg !5206

if.then2726:                                      ; preds = %if.end2721
  %1466 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5207
  %state2727 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1466, i32 0, i32 17, !dbg !5208
  %session2728 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2727, i32 0, i32 12, !dbg !5209
  store %struct.curl_ssl_session* null, %struct.curl_ssl_session** %session2728, align 8, !dbg !5210
  br label %if.end2729, !dbg !5207

if.end2729:                                       ; preds = %if.then2726, %if.end2721
  %1467 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5211
  %share2730 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1467, i32 0, i32 11, !dbg !5212
  %1468 = load %struct.Curl_share*, %struct.Curl_share** %share2730, align 8, !dbg !5212
  %dirty = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1468, i32 0, i32 1, !dbg !5213
  %1469 = load volatile i32, i32* %dirty, align 4, !dbg !5214
  %dec = add i32 %1469, -1, !dbg !5214
  store volatile i32 %dec, i32* %dirty, align 4, !dbg !5214
  %1470 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5215
  %call2731 = call i32 @Curl_share_unlock(%struct.Curl_easy* %1470, i32 1), !dbg !5216
  %1471 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5217
  %share2732 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1471, i32 0, i32 11, !dbg !5218
  store %struct.Curl_share* null, %struct.Curl_share** %share2732, align 8, !dbg !5219
  br label %if.end2733, !dbg !5220

if.end2733:                                       ; preds = %if.end2729, %vaarg.end2702
  %1472 = load %struct.Curl_share*, %struct.Curl_share** %set2692, align 8, !dbg !5221
  %1473 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5222
  %share2734 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1473, i32 0, i32 11, !dbg !5223
  store %struct.Curl_share* %1472, %struct.Curl_share** %share2734, align 8, !dbg !5224
  %1474 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5225
  %share2735 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1474, i32 0, i32 11, !dbg !5227
  %1475 = load %struct.Curl_share*, %struct.Curl_share** %share2735, align 8, !dbg !5227
  %tobool2736 = icmp ne %struct.Curl_share* %1475, null, !dbg !5225
  br i1 %tobool2736, label %if.then2737, label %if.end2775, !dbg !5228

if.then2737:                                      ; preds = %if.end2733
  %1476 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5229
  %call2738 = call i32 @Curl_share_lock(%struct.Curl_easy* %1476, i32 1, i32 2), !dbg !5231
  %1477 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5232
  %share2739 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1477, i32 0, i32 11, !dbg !5233
  %1478 = load %struct.Curl_share*, %struct.Curl_share** %share2739, align 8, !dbg !5233
  %dirty2740 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1478, i32 0, i32 1, !dbg !5234
  %1479 = load volatile i32, i32* %dirty2740, align 4, !dbg !5235
  %inc2741 = add i32 %1479, 1, !dbg !5235
  store volatile i32 %inc2741, i32* %dirty2740, align 4, !dbg !5235
  %1480 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5236
  %share2742 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1480, i32 0, i32 11, !dbg !5238
  %1481 = load %struct.Curl_share*, %struct.Curl_share** %share2742, align 8, !dbg !5238
  %specifier = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1481, i32 0, i32 0, !dbg !5239
  %1482 = load i32, i32* %specifier, align 8, !dbg !5239
  %and2743 = and i32 %1482, 8, !dbg !5240
  %tobool2744 = icmp ne i32 %and2743, 0, !dbg !5240
  br i1 %tobool2744, label %if.then2745, label %if.end2752, !dbg !5241

if.then2745:                                      ; preds = %if.then2737
  %1483 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5242
  %share2746 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1483, i32 0, i32 11, !dbg !5244
  %1484 = load %struct.Curl_share*, %struct.Curl_share** %share2746, align 8, !dbg !5244
  %hostcache2747 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1484, i32 0, i32 5, !dbg !5245
  %1485 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5246
  %dns2748 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1485, i32 0, i32 8, !dbg !5247
  %hostcache2749 = getelementptr inbounds %struct.Names, %struct.Names* %dns2748, i32 0, i32 0, !dbg !5248
  store %struct.curl_hash* %hostcache2747, %struct.curl_hash** %hostcache2749, align 8, !dbg !5249
  %1486 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5250
  %dns2750 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1486, i32 0, i32 8, !dbg !5251
  %hostcachetype2751 = getelementptr inbounds %struct.Names, %struct.Names* %dns2750, i32 0, i32 1, !dbg !5252
  store i32 3, i32* %hostcachetype2751, align 8, !dbg !5253
  br label %if.end2752, !dbg !5254

if.end2752:                                       ; preds = %if.then2745, %if.then2737
  %1487 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5255
  %share2753 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1487, i32 0, i32 11, !dbg !5257
  %1488 = load %struct.Curl_share*, %struct.Curl_share** %share2753, align 8, !dbg !5257
  %cookies2754 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1488, i32 0, i32 6, !dbg !5258
  %1489 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies2754, align 8, !dbg !5258
  %tobool2755 = icmp ne %struct.CookieInfo* %1489, null, !dbg !5255
  br i1 %tobool2755, label %if.then2756, label %if.end2761, !dbg !5259

if.then2756:                                      ; preds = %if.end2752
  %1490 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5260
  %cookies2757 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1490, i32 0, i32 15, !dbg !5262
  %1491 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies2757, align 8, !dbg !5262
  call void @Curl_cookie_cleanup(%struct.CookieInfo* %1491), !dbg !5263
  %1492 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5264
  %share2758 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1492, i32 0, i32 11, !dbg !5265
  %1493 = load %struct.Curl_share*, %struct.Curl_share** %share2758, align 8, !dbg !5265
  %cookies2759 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1493, i32 0, i32 6, !dbg !5266
  %1494 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies2759, align 8, !dbg !5266
  %1495 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5267
  %cookies2760 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1495, i32 0, i32 15, !dbg !5268
  store %struct.CookieInfo* %1494, %struct.CookieInfo** %cookies2760, align 8, !dbg !5269
  br label %if.end2761, !dbg !5270

if.end2761:                                       ; preds = %if.then2756, %if.end2752
  %1496 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5271
  %share2762 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1496, i32 0, i32 11, !dbg !5273
  %1497 = load %struct.Curl_share*, %struct.Curl_share** %share2762, align 8, !dbg !5273
  %sslsession2763 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1497, i32 0, i32 7, !dbg !5274
  %1498 = load %struct.curl_ssl_session*, %struct.curl_ssl_session** %sslsession2763, align 8, !dbg !5274
  %tobool2764 = icmp ne %struct.curl_ssl_session* %1498, null, !dbg !5271
  br i1 %tobool2764, label %if.then2765, label %if.end2773, !dbg !5275

if.then2765:                                      ; preds = %if.end2761
  %1499 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5276
  %share2766 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1499, i32 0, i32 11, !dbg !5278
  %1500 = load %struct.Curl_share*, %struct.Curl_share** %share2766, align 8, !dbg !5278
  %max_ssl_sessions = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1500, i32 0, i32 8, !dbg !5279
  %1501 = load i64, i64* %max_ssl_sessions, align 8, !dbg !5279
  %1502 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5280
  %set2767 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1502, i32 0, i32 13, !dbg !5281
  %general_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2767, i32 0, i32 75, !dbg !5282
  %max_ssl_sessions2768 = getelementptr inbounds %struct.ssl_general_config, %struct.ssl_general_config* %general_ssl, i32 0, i32 0, !dbg !5283
  store i64 %1501, i64* %max_ssl_sessions2768, align 8, !dbg !5284
  %1503 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5285
  %share2769 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1503, i32 0, i32 11, !dbg !5286
  %1504 = load %struct.Curl_share*, %struct.Curl_share** %share2769, align 8, !dbg !5286
  %sslsession2770 = getelementptr inbounds %struct.Curl_share, %struct.Curl_share* %1504, i32 0, i32 7, !dbg !5287
  %1505 = load %struct.curl_ssl_session*, %struct.curl_ssl_session** %sslsession2770, align 8, !dbg !5287
  %1506 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5288
  %state2771 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1506, i32 0, i32 17, !dbg !5289
  %session2772 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2771, i32 0, i32 12, !dbg !5290
  store %struct.curl_ssl_session* %1505, %struct.curl_ssl_session** %session2772, align 8, !dbg !5291
  br label %if.end2773, !dbg !5292

if.end2773:                                       ; preds = %if.then2765, %if.end2761
  %1507 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5293
  %call2774 = call i32 @Curl_share_unlock(%struct.Curl_easy* %1507, i32 1), !dbg !5294
  br label %if.end2775, !dbg !5295

if.end2775:                                       ; preds = %if.end2773, %if.end2733
  br label %sw.epilog3648, !dbg !5296

sw.bb2776:                                        ; preds = %entry
  %1508 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5297
  %gp_offset_p2777 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1508, i32 0, i32 0, !dbg !5297
  %gp_offset2778 = load i32, i32* %gp_offset_p2777, align 8, !dbg !5297
  %fits_in_gp2779 = icmp ule i32 %gp_offset2778, 40, !dbg !5297
  br i1 %fits_in_gp2779, label %vaarg.in_reg2780, label %vaarg.in_mem2782, !dbg !5297

vaarg.in_reg2780:                                 ; preds = %sw.bb2776
  %1509 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1508, i32 0, i32 3, !dbg !5298
  %reg_save_area2781 = load i8*, i8** %1509, align 8, !dbg !5298
  %1510 = getelementptr i8, i8* %reg_save_area2781, i32 %gp_offset2778, !dbg !5298
  %1511 = bitcast i8* %1510 to i8**, !dbg !5298
  %1512 = add i32 %gp_offset2778, 8, !dbg !5298
  store i32 %1512, i32* %gp_offset_p2777, align 8, !dbg !5298
  br label %vaarg.end2786, !dbg !5298

vaarg.in_mem2782:                                 ; preds = %sw.bb2776
  %overflow_arg_area_p2783 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1508, i32 0, i32 2, !dbg !5299
  %overflow_arg_area2784 = load i8*, i8** %overflow_arg_area_p2783, align 8, !dbg !5299
  %1513 = bitcast i8* %overflow_arg_area2784 to i8**, !dbg !5299
  %overflow_arg_area.next2785 = getelementptr i8, i8* %overflow_arg_area2784, i32 8, !dbg !5299
  store i8* %overflow_arg_area.next2785, i8** %overflow_arg_area_p2783, align 8, !dbg !5299
  br label %vaarg.end2786, !dbg !5299

vaarg.end2786:                                    ; preds = %vaarg.in_mem2782, %vaarg.in_reg2780
  %vaarg.addr2787 = phi i8** [ %1511, %vaarg.in_reg2780 ], [ %1513, %vaarg.in_mem2782 ], !dbg !5300
  %1514 = load i8*, i8** %vaarg.addr2787, align 8, !dbg !5300
  %1515 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5301
  %set2788 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1515, i32 0, i32 13, !dbg !5302
  %private_data = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2788, i32 0, i32 79, !dbg !5303
  store i8* %1514, i8** %private_data, align 8, !dbg !5304
  br label %sw.epilog3648, !dbg !5305

sw.bb2789:                                        ; preds = %entry
  %1516 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5306
  %gp_offset_p2790 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1516, i32 0, i32 0, !dbg !5306
  %gp_offset2791 = load i32, i32* %gp_offset_p2790, align 8, !dbg !5306
  %fits_in_gp2792 = icmp ule i32 %gp_offset2791, 40, !dbg !5306
  br i1 %fits_in_gp2792, label %vaarg.in_reg2793, label %vaarg.in_mem2795, !dbg !5306

vaarg.in_reg2793:                                 ; preds = %sw.bb2789
  %1517 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1516, i32 0, i32 3, !dbg !5307
  %reg_save_area2794 = load i8*, i8** %1517, align 8, !dbg !5307
  %1518 = getelementptr i8, i8* %reg_save_area2794, i32 %gp_offset2791, !dbg !5307
  %1519 = bitcast i8* %1518 to i64*, !dbg !5307
  %1520 = add i32 %gp_offset2791, 8, !dbg !5307
  store i32 %1520, i32* %gp_offset_p2790, align 8, !dbg !5307
  br label %vaarg.end2799, !dbg !5307

vaarg.in_mem2795:                                 ; preds = %sw.bb2789
  %overflow_arg_area_p2796 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1516, i32 0, i32 2, !dbg !5308
  %overflow_arg_area2797 = load i8*, i8** %overflow_arg_area_p2796, align 8, !dbg !5308
  %1521 = bitcast i8* %overflow_arg_area2797 to i64*, !dbg !5308
  %overflow_arg_area.next2798 = getelementptr i8, i8* %overflow_arg_area2797, i32 8, !dbg !5308
  store i8* %overflow_arg_area.next2798, i8** %overflow_arg_area_p2796, align 8, !dbg !5308
  br label %vaarg.end2799, !dbg !5308

vaarg.end2799:                                    ; preds = %vaarg.in_mem2795, %vaarg.in_reg2793
  %vaarg.addr2800 = phi i64* [ %1519, %vaarg.in_reg2793 ], [ %1521, %vaarg.in_mem2795 ], !dbg !5309
  %1522 = load i64, i64* %vaarg.addr2800, align 8, !dbg !5309
  %1523 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5310
  %set2801 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1523, i32 0, i32 13, !dbg !5311
  %max_filesize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2801, i32 0, i32 82, !dbg !5312
  store i64 %1522, i64* %max_filesize, align 8, !dbg !5313
  br label %sw.epilog3648, !dbg !5314

sw.bb2802:                                        ; preds = %entry
  %1524 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5315
  %gp_offset_p2803 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1524, i32 0, i32 0, !dbg !5315
  %gp_offset2804 = load i32, i32* %gp_offset_p2803, align 8, !dbg !5315
  %fits_in_gp2805 = icmp ule i32 %gp_offset2804, 40, !dbg !5315
  br i1 %fits_in_gp2805, label %vaarg.in_reg2806, label %vaarg.in_mem2808, !dbg !5315

vaarg.in_reg2806:                                 ; preds = %sw.bb2802
  %1525 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1524, i32 0, i32 3, !dbg !5316
  %reg_save_area2807 = load i8*, i8** %1525, align 8, !dbg !5316
  %1526 = getelementptr i8, i8* %reg_save_area2807, i32 %gp_offset2804, !dbg !5316
  %1527 = bitcast i8* %1526 to i64*, !dbg !5316
  %1528 = add i32 %gp_offset2804, 8, !dbg !5316
  store i32 %1528, i32* %gp_offset_p2803, align 8, !dbg !5316
  br label %vaarg.end2812, !dbg !5316

vaarg.in_mem2808:                                 ; preds = %sw.bb2802
  %overflow_arg_area_p2809 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1524, i32 0, i32 2, !dbg !5317
  %overflow_arg_area2810 = load i8*, i8** %overflow_arg_area_p2809, align 8, !dbg !5317
  %1529 = bitcast i8* %overflow_arg_area2810 to i64*, !dbg !5317
  %overflow_arg_area.next2811 = getelementptr i8, i8* %overflow_arg_area2810, i32 8, !dbg !5317
  store i8* %overflow_arg_area.next2811, i8** %overflow_arg_area_p2809, align 8, !dbg !5317
  br label %vaarg.end2812, !dbg !5317

vaarg.end2812:                                    ; preds = %vaarg.in_mem2808, %vaarg.in_reg2806
  %vaarg.addr2813 = phi i64* [ %1527, %vaarg.in_reg2806 ], [ %1529, %vaarg.in_mem2808 ], !dbg !5318
  %1530 = load i64, i64* %vaarg.addr2813, align 8, !dbg !5318
  %conv2814 = trunc i64 %1530 to i32, !dbg !5319
  %1531 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5320
  %set2815 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1531, i32 0, i32 13, !dbg !5321
  %ftpsslauth = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2815, i32 0, i32 114, !dbg !5322
  store i32 %conv2814, i32* %ftpsslauth, align 4, !dbg !5323
  br label %sw.epilog3648, !dbg !5324

sw.bb2816:                                        ; preds = %entry
  %1532 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5325
  %gp_offset_p2817 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1532, i32 0, i32 0, !dbg !5325
  %gp_offset2818 = load i32, i32* %gp_offset_p2817, align 8, !dbg !5325
  %fits_in_gp2819 = icmp ule i32 %gp_offset2818, 40, !dbg !5325
  br i1 %fits_in_gp2819, label %vaarg.in_reg2820, label %vaarg.in_mem2822, !dbg !5325

vaarg.in_reg2820:                                 ; preds = %sw.bb2816
  %1533 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1532, i32 0, i32 3, !dbg !5326
  %reg_save_area2821 = load i8*, i8** %1533, align 8, !dbg !5326
  %1534 = getelementptr i8, i8* %reg_save_area2821, i32 %gp_offset2818, !dbg !5326
  %1535 = bitcast i8* %1534 to i64*, !dbg !5326
  %1536 = add i32 %gp_offset2818, 8, !dbg !5326
  store i32 %1536, i32* %gp_offset_p2817, align 8, !dbg !5326
  br label %vaarg.end2826, !dbg !5326

vaarg.in_mem2822:                                 ; preds = %sw.bb2816
  %overflow_arg_area_p2823 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1532, i32 0, i32 2, !dbg !5327
  %overflow_arg_area2824 = load i8*, i8** %overflow_arg_area_p2823, align 8, !dbg !5327
  %1537 = bitcast i8* %overflow_arg_area2824 to i64*, !dbg !5327
  %overflow_arg_area.next2825 = getelementptr i8, i8* %overflow_arg_area2824, i32 8, !dbg !5327
  store i8* %overflow_arg_area.next2825, i8** %overflow_arg_area_p2823, align 8, !dbg !5327
  br label %vaarg.end2826, !dbg !5327

vaarg.end2826:                                    ; preds = %vaarg.in_mem2822, %vaarg.in_reg2820
  %vaarg.addr2827 = phi i64* [ %1535, %vaarg.in_reg2820 ], [ %1537, %vaarg.in_mem2822 ], !dbg !5328
  %1538 = load i64, i64* %vaarg.addr2827, align 8, !dbg !5328
  %1539 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5329
  %set2828 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1539, i32 0, i32 13, !dbg !5330
  %ipver = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2828, i32 0, i32 81, !dbg !5331
  store i64 %1538, i64* %ipver, align 8, !dbg !5332
  br label %sw.epilog3648, !dbg !5333

sw.bb2829:                                        ; preds = %entry
  %1540 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5334
  %gp_offset_p2830 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1540, i32 0, i32 0, !dbg !5334
  %gp_offset2831 = load i32, i32* %gp_offset_p2830, align 8, !dbg !5334
  %fits_in_gp2832 = icmp ule i32 %gp_offset2831, 40, !dbg !5334
  br i1 %fits_in_gp2832, label %vaarg.in_reg2833, label %vaarg.in_mem2835, !dbg !5334

vaarg.in_reg2833:                                 ; preds = %sw.bb2829
  %1541 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1540, i32 0, i32 3, !dbg !5335
  %reg_save_area2834 = load i8*, i8** %1541, align 8, !dbg !5335
  %1542 = getelementptr i8, i8* %reg_save_area2834, i32 %gp_offset2831, !dbg !5335
  %1543 = bitcast i8* %1542 to i64*, !dbg !5335
  %1544 = add i32 %gp_offset2831, 8, !dbg !5335
  store i32 %1544, i32* %gp_offset_p2830, align 8, !dbg !5335
  br label %vaarg.end2839, !dbg !5335

vaarg.in_mem2835:                                 ; preds = %sw.bb2829
  %overflow_arg_area_p2836 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1540, i32 0, i32 2, !dbg !5336
  %overflow_arg_area2837 = load i8*, i8** %overflow_arg_area_p2836, align 8, !dbg !5336
  %1545 = bitcast i8* %overflow_arg_area2837 to i64*, !dbg !5336
  %overflow_arg_area.next2838 = getelementptr i8, i8* %overflow_arg_area2837, i32 8, !dbg !5336
  store i8* %overflow_arg_area.next2838, i8** %overflow_arg_area_p2836, align 8, !dbg !5336
  br label %vaarg.end2839, !dbg !5336

vaarg.end2839:                                    ; preds = %vaarg.in_mem2835, %vaarg.in_reg2833
  %vaarg.addr2840 = phi i64* [ %1543, %vaarg.in_reg2833 ], [ %1545, %vaarg.in_mem2835 ], !dbg !5337
  %1546 = load i64, i64* %vaarg.addr2840, align 8, !dbg !5337
  %1547 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5338
  %set2841 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1547, i32 0, i32 13, !dbg !5339
  %max_filesize2842 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2841, i32 0, i32 82, !dbg !5340
  store i64 %1546, i64* %max_filesize2842, align 8, !dbg !5341
  br label %sw.epilog3648, !dbg !5342

sw.bb2843:                                        ; preds = %entry
  %1548 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5343
  %gp_offset_p2844 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1548, i32 0, i32 0, !dbg !5343
  %gp_offset2845 = load i32, i32* %gp_offset_p2844, align 8, !dbg !5343
  %fits_in_gp2846 = icmp ule i32 %gp_offset2845, 40, !dbg !5343
  br i1 %fits_in_gp2846, label %vaarg.in_reg2847, label %vaarg.in_mem2849, !dbg !5343

vaarg.in_reg2847:                                 ; preds = %sw.bb2843
  %1549 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1548, i32 0, i32 3, !dbg !5344
  %reg_save_area2848 = load i8*, i8** %1549, align 8, !dbg !5344
  %1550 = getelementptr i8, i8* %reg_save_area2848, i32 %gp_offset2845, !dbg !5344
  %1551 = bitcast i8* %1550 to i64*, !dbg !5344
  %1552 = add i32 %gp_offset2845, 8, !dbg !5344
  store i32 %1552, i32* %gp_offset_p2844, align 8, !dbg !5344
  br label %vaarg.end2853, !dbg !5344

vaarg.in_mem2849:                                 ; preds = %sw.bb2843
  %overflow_arg_area_p2850 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1548, i32 0, i32 2, !dbg !5345
  %overflow_arg_area2851 = load i8*, i8** %overflow_arg_area_p2850, align 8, !dbg !5345
  %1553 = bitcast i8* %overflow_arg_area2851 to i64*, !dbg !5345
  %overflow_arg_area.next2852 = getelementptr i8, i8* %overflow_arg_area2851, i32 8, !dbg !5345
  store i8* %overflow_arg_area.next2852, i8** %overflow_arg_area_p2850, align 8, !dbg !5345
  br label %vaarg.end2853, !dbg !5345

vaarg.end2853:                                    ; preds = %vaarg.in_mem2849, %vaarg.in_reg2847
  %vaarg.addr2854 = phi i64* [ %1551, %vaarg.in_reg2847 ], [ %1553, %vaarg.in_mem2849 ], !dbg !5346
  %1554 = load i64, i64* %vaarg.addr2854, align 8, !dbg !5346
  %cmp2855 = icmp ne i64 0, %1554, !dbg !5347
  %cond2857 = select i1 %cmp2855, i32 1, i32 0, !dbg !5348
  %tobool2858 = icmp ne i32 %cond2857, 0, !dbg !5348
  %1555 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5349
  %set2859 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1555, i32 0, i32 13, !dbg !5350
  %tcp_nodelay = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2859, i32 0, i32 118, !dbg !5351
  %frombool2860 = zext i1 %tobool2858 to i8, !dbg !5352
  store i8 %frombool2860, i8* %tcp_nodelay, align 2, !dbg !5352
  br label %sw.epilog3648, !dbg !5353

sw.bb2861:                                        ; preds = %entry
  %1556 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5354
  %set2862 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1556, i32 0, i32 13, !dbg !5355
  %str2863 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2862, i32 0, i32 128, !dbg !5356
  %arrayidx2864 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2863, i64 0, i64 10, !dbg !5354
  %1557 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5357
  %gp_offset_p2865 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1557, i32 0, i32 0, !dbg !5357
  %gp_offset2866 = load i32, i32* %gp_offset_p2865, align 8, !dbg !5357
  %fits_in_gp2867 = icmp ule i32 %gp_offset2866, 40, !dbg !5357
  br i1 %fits_in_gp2867, label %vaarg.in_reg2868, label %vaarg.in_mem2870, !dbg !5357

vaarg.in_reg2868:                                 ; preds = %sw.bb2861
  %1558 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1557, i32 0, i32 3, !dbg !5358
  %reg_save_area2869 = load i8*, i8** %1558, align 8, !dbg !5358
  %1559 = getelementptr i8, i8* %reg_save_area2869, i32 %gp_offset2866, !dbg !5358
  %1560 = bitcast i8* %1559 to i8**, !dbg !5358
  %1561 = add i32 %gp_offset2866, 8, !dbg !5358
  store i32 %1561, i32* %gp_offset_p2865, align 8, !dbg !5358
  br label %vaarg.end2874, !dbg !5358

vaarg.in_mem2870:                                 ; preds = %sw.bb2861
  %overflow_arg_area_p2871 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1557, i32 0, i32 2, !dbg !5359
  %overflow_arg_area2872 = load i8*, i8** %overflow_arg_area_p2871, align 8, !dbg !5359
  %1562 = bitcast i8* %overflow_arg_area2872 to i8**, !dbg !5359
  %overflow_arg_area.next2873 = getelementptr i8, i8* %overflow_arg_area2872, i32 8, !dbg !5359
  store i8* %overflow_arg_area.next2873, i8** %overflow_arg_area_p2871, align 8, !dbg !5359
  br label %vaarg.end2874, !dbg !5359

vaarg.end2874:                                    ; preds = %vaarg.in_mem2870, %vaarg.in_reg2868
  %vaarg.addr2875 = phi i8** [ %1560, %vaarg.in_reg2868 ], [ %1562, %vaarg.in_mem2870 ], !dbg !5360
  %1563 = load i8*, i8** %vaarg.addr2875, align 8, !dbg !5360
  %call2876 = call i32 @setstropt(i8** %arrayidx2864, i8* %1563), !dbg !5361
  store i32 %call2876, i32* %result, align 4, !dbg !5362
  br label %sw.epilog3648, !dbg !5363

sw.bb2877:                                        ; preds = %entry
  %1564 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5364
  %gp_offset_p2878 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1564, i32 0, i32 0, !dbg !5364
  %gp_offset2879 = load i32, i32* %gp_offset_p2878, align 8, !dbg !5364
  %fits_in_gp2880 = icmp ule i32 %gp_offset2879, 40, !dbg !5364
  br i1 %fits_in_gp2880, label %vaarg.in_reg2881, label %vaarg.in_mem2883, !dbg !5364

vaarg.in_reg2881:                                 ; preds = %sw.bb2877
  %1565 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1564, i32 0, i32 3, !dbg !5365
  %reg_save_area2882 = load i8*, i8** %1565, align 8, !dbg !5365
  %1566 = getelementptr i8, i8* %reg_save_area2882, i32 %gp_offset2879, !dbg !5365
  %1567 = bitcast i8* %1566 to i64*, !dbg !5365
  %1568 = add i32 %gp_offset2879, 8, !dbg !5365
  store i32 %1568, i32* %gp_offset_p2878, align 8, !dbg !5365
  br label %vaarg.end2887, !dbg !5365

vaarg.in_mem2883:                                 ; preds = %sw.bb2877
  %overflow_arg_area_p2884 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1564, i32 0, i32 2, !dbg !5366
  %overflow_arg_area2885 = load i8*, i8** %overflow_arg_area_p2884, align 8, !dbg !5366
  %1569 = bitcast i8* %overflow_arg_area2885 to i64*, !dbg !5366
  %overflow_arg_area.next2886 = getelementptr i8, i8* %overflow_arg_area2885, i32 8, !dbg !5366
  store i8* %overflow_arg_area.next2886, i8** %overflow_arg_area_p2884, align 8, !dbg !5366
  br label %vaarg.end2887, !dbg !5366

vaarg.end2887:                                    ; preds = %vaarg.in_mem2883, %vaarg.in_reg2881
  %vaarg.addr2888 = phi i64* [ %1567, %vaarg.in_reg2881 ], [ %1569, %vaarg.in_mem2883 ], !dbg !5367
  %1570 = load i64, i64* %vaarg.addr2888, align 8, !dbg !5367
  %cmp2889 = icmp ne i64 0, %1570, !dbg !5368
  %cond2891 = select i1 %cmp2889, i32 1, i32 0, !dbg !5369
  %tobool2892 = icmp ne i32 %cond2891, 0, !dbg !5369
  %1571 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5370
  %set2893 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1571, i32 0, i32 13, !dbg !5371
  %ignorecl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2893, i32 0, i32 119, !dbg !5372
  %frombool2894 = zext i1 %tobool2892 to i8, !dbg !5373
  store i8 %frombool2894, i8* %ignorecl, align 1, !dbg !5373
  br label %sw.epilog3648, !dbg !5374

sw.bb2895:                                        ; preds = %entry
  %1572 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5375
  %gp_offset_p2896 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1572, i32 0, i32 0, !dbg !5375
  %gp_offset2897 = load i32, i32* %gp_offset_p2896, align 8, !dbg !5375
  %fits_in_gp2898 = icmp ule i32 %gp_offset2897, 40, !dbg !5375
  br i1 %fits_in_gp2898, label %vaarg.in_reg2899, label %vaarg.in_mem2901, !dbg !5375

vaarg.in_reg2899:                                 ; preds = %sw.bb2895
  %1573 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1572, i32 0, i32 3, !dbg !5376
  %reg_save_area2900 = load i8*, i8** %1573, align 8, !dbg !5376
  %1574 = getelementptr i8, i8* %reg_save_area2900, i32 %gp_offset2897, !dbg !5376
  %1575 = bitcast i8* %1574 to i64*, !dbg !5376
  %1576 = add i32 %gp_offset2897, 8, !dbg !5376
  store i32 %1576, i32* %gp_offset_p2896, align 8, !dbg !5376
  br label %vaarg.end2905, !dbg !5376

vaarg.in_mem2901:                                 ; preds = %sw.bb2895
  %overflow_arg_area_p2902 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1572, i32 0, i32 2, !dbg !5377
  %overflow_arg_area2903 = load i8*, i8** %overflow_arg_area_p2902, align 8, !dbg !5377
  %1577 = bitcast i8* %overflow_arg_area2903 to i64*, !dbg !5377
  %overflow_arg_area.next2904 = getelementptr i8, i8* %overflow_arg_area2903, i32 8, !dbg !5377
  store i8* %overflow_arg_area.next2904, i8** %overflow_arg_area_p2902, align 8, !dbg !5377
  br label %vaarg.end2905, !dbg !5377

vaarg.end2905:                                    ; preds = %vaarg.in_mem2901, %vaarg.in_reg2899
  %vaarg.addr2906 = phi i64* [ %1575, %vaarg.in_reg2899 ], [ %1577, %vaarg.in_mem2901 ], !dbg !5378
  %1578 = load i64, i64* %vaarg.addr2906, align 8, !dbg !5378
  %cmp2907 = icmp ne i64 0, %1578, !dbg !5379
  %cond2909 = select i1 %cmp2907, i32 1, i32 0, !dbg !5380
  %tobool2910 = icmp ne i32 %cond2909, 0, !dbg !5380
  %1579 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5381
  %set2911 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1579, i32 0, i32 13, !dbg !5382
  %connect_only = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2911, i32 0, i32 121, !dbg !5383
  %frombool2912 = zext i1 %tobool2910 to i8, !dbg !5384
  store i8 %frombool2912, i8* %connect_only, align 1, !dbg !5384
  br label %sw.epilog3648, !dbg !5385

sw.bb2913:                                        ; preds = %entry
  %1580 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5386
  %set2914 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1580, i32 0, i32 13, !dbg !5387
  %str2915 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2914, i32 0, i32 128, !dbg !5388
  %arrayidx2916 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2915, i64 0, i64 11, !dbg !5386
  %1581 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5389
  %gp_offset_p2917 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1581, i32 0, i32 0, !dbg !5389
  %gp_offset2918 = load i32, i32* %gp_offset_p2917, align 8, !dbg !5389
  %fits_in_gp2919 = icmp ule i32 %gp_offset2918, 40, !dbg !5389
  br i1 %fits_in_gp2919, label %vaarg.in_reg2920, label %vaarg.in_mem2922, !dbg !5389

vaarg.in_reg2920:                                 ; preds = %sw.bb2913
  %1582 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1581, i32 0, i32 3, !dbg !5390
  %reg_save_area2921 = load i8*, i8** %1582, align 8, !dbg !5390
  %1583 = getelementptr i8, i8* %reg_save_area2921, i32 %gp_offset2918, !dbg !5390
  %1584 = bitcast i8* %1583 to i8**, !dbg !5390
  %1585 = add i32 %gp_offset2918, 8, !dbg !5390
  store i32 %1585, i32* %gp_offset_p2917, align 8, !dbg !5390
  br label %vaarg.end2926, !dbg !5390

vaarg.in_mem2922:                                 ; preds = %sw.bb2913
  %overflow_arg_area_p2923 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1581, i32 0, i32 2, !dbg !5391
  %overflow_arg_area2924 = load i8*, i8** %overflow_arg_area_p2923, align 8, !dbg !5391
  %1586 = bitcast i8* %overflow_arg_area2924 to i8**, !dbg !5391
  %overflow_arg_area.next2925 = getelementptr i8, i8* %overflow_arg_area2924, i32 8, !dbg !5391
  store i8* %overflow_arg_area.next2925, i8** %overflow_arg_area_p2923, align 8, !dbg !5391
  br label %vaarg.end2926, !dbg !5391

vaarg.end2926:                                    ; preds = %vaarg.in_mem2922, %vaarg.in_reg2920
  %vaarg.addr2927 = phi i8** [ %1584, %vaarg.in_reg2920 ], [ %1586, %vaarg.in_mem2922 ], !dbg !5392
  %1587 = load i8*, i8** %vaarg.addr2927, align 8, !dbg !5392
  %call2928 = call i32 @setstropt(i8** %arrayidx2916, i8* %1587), !dbg !5393
  store i32 %call2928, i32* %result, align 4, !dbg !5394
  br label %sw.epilog3648, !dbg !5395

sw.bb2929:                                        ; preds = %entry
  %1588 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5396
  %gp_offset_p2930 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1588, i32 0, i32 0, !dbg !5396
  %gp_offset2931 = load i32, i32* %gp_offset_p2930, align 8, !dbg !5396
  %fits_in_gp2932 = icmp ule i32 %gp_offset2931, 40, !dbg !5396
  br i1 %fits_in_gp2932, label %vaarg.in_reg2933, label %vaarg.in_mem2935, !dbg !5396

vaarg.in_reg2933:                                 ; preds = %sw.bb2929
  %1589 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1588, i32 0, i32 3, !dbg !5397
  %reg_save_area2934 = load i8*, i8** %1589, align 8, !dbg !5397
  %1590 = getelementptr i8, i8* %reg_save_area2934, i32 %gp_offset2931, !dbg !5397
  %1591 = bitcast i8* %1590 to i32 (i8*, i32, i32)**, !dbg !5397
  %1592 = add i32 %gp_offset2931, 8, !dbg !5397
  store i32 %1592, i32* %gp_offset_p2930, align 8, !dbg !5397
  br label %vaarg.end2939, !dbg !5397

vaarg.in_mem2935:                                 ; preds = %sw.bb2929
  %overflow_arg_area_p2936 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1588, i32 0, i32 2, !dbg !5398
  %overflow_arg_area2937 = load i8*, i8** %overflow_arg_area_p2936, align 8, !dbg !5398
  %1593 = bitcast i8* %overflow_arg_area2937 to i32 (i8*, i32, i32)**, !dbg !5398
  %overflow_arg_area.next2938 = getelementptr i8, i8* %overflow_arg_area2937, i32 8, !dbg !5398
  store i8* %overflow_arg_area.next2938, i8** %overflow_arg_area_p2936, align 8, !dbg !5398
  br label %vaarg.end2939, !dbg !5398

vaarg.end2939:                                    ; preds = %vaarg.in_mem2935, %vaarg.in_reg2933
  %vaarg.addr2940 = phi i32 (i8*, i32, i32)** [ %1591, %vaarg.in_reg2933 ], [ %1593, %vaarg.in_mem2935 ], !dbg !5399
  %1594 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %vaarg.addr2940, align 8, !dbg !5399
  %1595 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5400
  %set2941 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1595, i32 0, i32 13, !dbg !5401
  %fsockopt = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2941, i32 0, i32 30, !dbg !5402
  store i32 (i8*, i32, i32)* %1594, i32 (i8*, i32, i32)** %fsockopt, align 8, !dbg !5403
  br label %sw.epilog3648, !dbg !5404

sw.bb2942:                                        ; preds = %entry
  %1596 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5405
  %gp_offset_p2943 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1596, i32 0, i32 0, !dbg !5405
  %gp_offset2944 = load i32, i32* %gp_offset_p2943, align 8, !dbg !5405
  %fits_in_gp2945 = icmp ule i32 %gp_offset2944, 40, !dbg !5405
  br i1 %fits_in_gp2945, label %vaarg.in_reg2946, label %vaarg.in_mem2948, !dbg !5405

vaarg.in_reg2946:                                 ; preds = %sw.bb2942
  %1597 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1596, i32 0, i32 3, !dbg !5406
  %reg_save_area2947 = load i8*, i8** %1597, align 8, !dbg !5406
  %1598 = getelementptr i8, i8* %reg_save_area2947, i32 %gp_offset2944, !dbg !5406
  %1599 = bitcast i8* %1598 to i8**, !dbg !5406
  %1600 = add i32 %gp_offset2944, 8, !dbg !5406
  store i32 %1600, i32* %gp_offset_p2943, align 8, !dbg !5406
  br label %vaarg.end2952, !dbg !5406

vaarg.in_mem2948:                                 ; preds = %sw.bb2942
  %overflow_arg_area_p2949 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1596, i32 0, i32 2, !dbg !5407
  %overflow_arg_area2950 = load i8*, i8** %overflow_arg_area_p2949, align 8, !dbg !5407
  %1601 = bitcast i8* %overflow_arg_area2950 to i8**, !dbg !5407
  %overflow_arg_area.next2951 = getelementptr i8, i8* %overflow_arg_area2950, i32 8, !dbg !5407
  store i8* %overflow_arg_area.next2951, i8** %overflow_arg_area_p2949, align 8, !dbg !5407
  br label %vaarg.end2952, !dbg !5407

vaarg.end2952:                                    ; preds = %vaarg.in_mem2948, %vaarg.in_reg2946
  %vaarg.addr2953 = phi i8** [ %1599, %vaarg.in_reg2946 ], [ %1601, %vaarg.in_mem2948 ], !dbg !5408
  %1602 = load i8*, i8** %vaarg.addr2953, align 8, !dbg !5408
  %1603 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5409
  %set2954 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1603, i32 0, i32 13, !dbg !5410
  %sockopt_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2954, i32 0, i32 31, !dbg !5411
  store i8* %1602, i8** %sockopt_client, align 8, !dbg !5412
  br label %sw.epilog3648, !dbg !5413

sw.bb2955:                                        ; preds = %entry
  %1604 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5414
  %gp_offset_p2956 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1604, i32 0, i32 0, !dbg !5414
  %gp_offset2957 = load i32, i32* %gp_offset_p2956, align 8, !dbg !5414
  %fits_in_gp2958 = icmp ule i32 %gp_offset2957, 40, !dbg !5414
  br i1 %fits_in_gp2958, label %vaarg.in_reg2959, label %vaarg.in_mem2961, !dbg !5414

vaarg.in_reg2959:                                 ; preds = %sw.bb2955
  %1605 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1604, i32 0, i32 3, !dbg !5415
  %reg_save_area2960 = load i8*, i8** %1605, align 8, !dbg !5415
  %1606 = getelementptr i8, i8* %reg_save_area2960, i32 %gp_offset2957, !dbg !5415
  %1607 = bitcast i8* %1606 to i32 (i8*, i32, %struct.curl_sockaddr*)**, !dbg !5415
  %1608 = add i32 %gp_offset2957, 8, !dbg !5415
  store i32 %1608, i32* %gp_offset_p2956, align 8, !dbg !5415
  br label %vaarg.end2965, !dbg !5415

vaarg.in_mem2961:                                 ; preds = %sw.bb2955
  %overflow_arg_area_p2962 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1604, i32 0, i32 2, !dbg !5416
  %overflow_arg_area2963 = load i8*, i8** %overflow_arg_area_p2962, align 8, !dbg !5416
  %1609 = bitcast i8* %overflow_arg_area2963 to i32 (i8*, i32, %struct.curl_sockaddr*)**, !dbg !5416
  %overflow_arg_area.next2964 = getelementptr i8, i8* %overflow_arg_area2963, i32 8, !dbg !5416
  store i8* %overflow_arg_area.next2964, i8** %overflow_arg_area_p2962, align 8, !dbg !5416
  br label %vaarg.end2965, !dbg !5416

vaarg.end2965:                                    ; preds = %vaarg.in_mem2961, %vaarg.in_reg2959
  %vaarg.addr2966 = phi i32 (i8*, i32, %struct.curl_sockaddr*)** [ %1607, %vaarg.in_reg2959 ], [ %1609, %vaarg.in_mem2961 ], !dbg !5417
  %1610 = load i32 (i8*, i32, %struct.curl_sockaddr*)*, i32 (i8*, i32, %struct.curl_sockaddr*)** %vaarg.addr2966, align 8, !dbg !5417
  %1611 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5418
  %set2967 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1611, i32 0, i32 13, !dbg !5419
  %fopensocket = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2967, i32 0, i32 32, !dbg !5420
  store i32 (i8*, i32, %struct.curl_sockaddr*)* %1610, i32 (i8*, i32, %struct.curl_sockaddr*)** %fopensocket, align 8, !dbg !5421
  br label %sw.epilog3648, !dbg !5422

sw.bb2968:                                        ; preds = %entry
  %1612 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5423
  %gp_offset_p2969 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1612, i32 0, i32 0, !dbg !5423
  %gp_offset2970 = load i32, i32* %gp_offset_p2969, align 8, !dbg !5423
  %fits_in_gp2971 = icmp ule i32 %gp_offset2970, 40, !dbg !5423
  br i1 %fits_in_gp2971, label %vaarg.in_reg2972, label %vaarg.in_mem2974, !dbg !5423

vaarg.in_reg2972:                                 ; preds = %sw.bb2968
  %1613 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1612, i32 0, i32 3, !dbg !5424
  %reg_save_area2973 = load i8*, i8** %1613, align 8, !dbg !5424
  %1614 = getelementptr i8, i8* %reg_save_area2973, i32 %gp_offset2970, !dbg !5424
  %1615 = bitcast i8* %1614 to i8**, !dbg !5424
  %1616 = add i32 %gp_offset2970, 8, !dbg !5424
  store i32 %1616, i32* %gp_offset_p2969, align 8, !dbg !5424
  br label %vaarg.end2978, !dbg !5424

vaarg.in_mem2974:                                 ; preds = %sw.bb2968
  %overflow_arg_area_p2975 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1612, i32 0, i32 2, !dbg !5425
  %overflow_arg_area2976 = load i8*, i8** %overflow_arg_area_p2975, align 8, !dbg !5425
  %1617 = bitcast i8* %overflow_arg_area2976 to i8**, !dbg !5425
  %overflow_arg_area.next2977 = getelementptr i8, i8* %overflow_arg_area2976, i32 8, !dbg !5425
  store i8* %overflow_arg_area.next2977, i8** %overflow_arg_area_p2975, align 8, !dbg !5425
  br label %vaarg.end2978, !dbg !5425

vaarg.end2978:                                    ; preds = %vaarg.in_mem2974, %vaarg.in_reg2972
  %vaarg.addr2979 = phi i8** [ %1615, %vaarg.in_reg2972 ], [ %1617, %vaarg.in_mem2974 ], !dbg !5426
  %1618 = load i8*, i8** %vaarg.addr2979, align 8, !dbg !5426
  %1619 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5427
  %set2980 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1619, i32 0, i32 13, !dbg !5428
  %opensocket_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2980, i32 0, i32 33, !dbg !5429
  store i8* %1618, i8** %opensocket_client, align 8, !dbg !5430
  br label %sw.epilog3648, !dbg !5431

sw.bb2981:                                        ; preds = %entry
  %1620 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5432
  %gp_offset_p2982 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1620, i32 0, i32 0, !dbg !5432
  %gp_offset2983 = load i32, i32* %gp_offset_p2982, align 8, !dbg !5432
  %fits_in_gp2984 = icmp ule i32 %gp_offset2983, 40, !dbg !5432
  br i1 %fits_in_gp2984, label %vaarg.in_reg2985, label %vaarg.in_mem2987, !dbg !5432

vaarg.in_reg2985:                                 ; preds = %sw.bb2981
  %1621 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1620, i32 0, i32 3, !dbg !5433
  %reg_save_area2986 = load i8*, i8** %1621, align 8, !dbg !5433
  %1622 = getelementptr i8, i8* %reg_save_area2986, i32 %gp_offset2983, !dbg !5433
  %1623 = bitcast i8* %1622 to i32 (i8*, i32)**, !dbg !5433
  %1624 = add i32 %gp_offset2983, 8, !dbg !5433
  store i32 %1624, i32* %gp_offset_p2982, align 8, !dbg !5433
  br label %vaarg.end2991, !dbg !5433

vaarg.in_mem2987:                                 ; preds = %sw.bb2981
  %overflow_arg_area_p2988 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1620, i32 0, i32 2, !dbg !5434
  %overflow_arg_area2989 = load i8*, i8** %overflow_arg_area_p2988, align 8, !dbg !5434
  %1625 = bitcast i8* %overflow_arg_area2989 to i32 (i8*, i32)**, !dbg !5434
  %overflow_arg_area.next2990 = getelementptr i8, i8* %overflow_arg_area2989, i32 8, !dbg !5434
  store i8* %overflow_arg_area.next2990, i8** %overflow_arg_area_p2988, align 8, !dbg !5434
  br label %vaarg.end2991, !dbg !5434

vaarg.end2991:                                    ; preds = %vaarg.in_mem2987, %vaarg.in_reg2985
  %vaarg.addr2992 = phi i32 (i8*, i32)** [ %1623, %vaarg.in_reg2985 ], [ %1625, %vaarg.in_mem2987 ], !dbg !5435
  %1626 = load i32 (i8*, i32)*, i32 (i8*, i32)** %vaarg.addr2992, align 8, !dbg !5435
  %1627 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5436
  %set2993 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1627, i32 0, i32 13, !dbg !5437
  %fclosesocket = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2993, i32 0, i32 34, !dbg !5438
  store i32 (i8*, i32)* %1626, i32 (i8*, i32)** %fclosesocket, align 8, !dbg !5439
  br label %sw.epilog3648, !dbg !5440

sw.bb2994:                                        ; preds = %entry
  %1628 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5441
  %gp_offset_p2995 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1628, i32 0, i32 0, !dbg !5441
  %gp_offset2996 = load i32, i32* %gp_offset_p2995, align 8, !dbg !5441
  %fits_in_gp2997 = icmp ule i32 %gp_offset2996, 40, !dbg !5441
  br i1 %fits_in_gp2997, label %vaarg.in_reg2998, label %vaarg.in_mem3000, !dbg !5441

vaarg.in_reg2998:                                 ; preds = %sw.bb2994
  %1629 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1628, i32 0, i32 3, !dbg !5442
  %reg_save_area2999 = load i8*, i8** %1629, align 8, !dbg !5442
  %1630 = getelementptr i8, i8* %reg_save_area2999, i32 %gp_offset2996, !dbg !5442
  %1631 = bitcast i8* %1630 to i8**, !dbg !5442
  %1632 = add i32 %gp_offset2996, 8, !dbg !5442
  store i32 %1632, i32* %gp_offset_p2995, align 8, !dbg !5442
  br label %vaarg.end3004, !dbg !5442

vaarg.in_mem3000:                                 ; preds = %sw.bb2994
  %overflow_arg_area_p3001 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1628, i32 0, i32 2, !dbg !5443
  %overflow_arg_area3002 = load i8*, i8** %overflow_arg_area_p3001, align 8, !dbg !5443
  %1633 = bitcast i8* %overflow_arg_area3002 to i8**, !dbg !5443
  %overflow_arg_area.next3003 = getelementptr i8, i8* %overflow_arg_area3002, i32 8, !dbg !5443
  store i8* %overflow_arg_area.next3003, i8** %overflow_arg_area_p3001, align 8, !dbg !5443
  br label %vaarg.end3004, !dbg !5443

vaarg.end3004:                                    ; preds = %vaarg.in_mem3000, %vaarg.in_reg2998
  %vaarg.addr3005 = phi i8** [ %1631, %vaarg.in_reg2998 ], [ %1633, %vaarg.in_mem3000 ], !dbg !5444
  %1634 = load i8*, i8** %vaarg.addr3005, align 8, !dbg !5444
  %1635 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5445
  %set3006 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1635, i32 0, i32 13, !dbg !5446
  %closesocket_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3006, i32 0, i32 35, !dbg !5447
  store i8* %1634, i8** %closesocket_client, align 8, !dbg !5448
  br label %sw.epilog3648, !dbg !5449

sw.bb3007:                                        ; preds = %entry
  %1636 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5450
  %gp_offset_p3008 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1636, i32 0, i32 0, !dbg !5450
  %gp_offset3009 = load i32, i32* %gp_offset_p3008, align 8, !dbg !5450
  %fits_in_gp3010 = icmp ule i32 %gp_offset3009, 40, !dbg !5450
  br i1 %fits_in_gp3010, label %vaarg.in_reg3011, label %vaarg.in_mem3013, !dbg !5450

vaarg.in_reg3011:                                 ; preds = %sw.bb3007
  %1637 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1636, i32 0, i32 3, !dbg !5451
  %reg_save_area3012 = load i8*, i8** %1637, align 8, !dbg !5451
  %1638 = getelementptr i8, i8* %reg_save_area3012, i32 %gp_offset3009, !dbg !5451
  %1639 = bitcast i8* %1638 to i64*, !dbg !5451
  %1640 = add i32 %gp_offset3009, 8, !dbg !5451
  store i32 %1640, i32* %gp_offset_p3008, align 8, !dbg !5451
  br label %vaarg.end3017, !dbg !5451

vaarg.in_mem3013:                                 ; preds = %sw.bb3007
  %overflow_arg_area_p3014 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1636, i32 0, i32 2, !dbg !5452
  %overflow_arg_area3015 = load i8*, i8** %overflow_arg_area_p3014, align 8, !dbg !5452
  %1641 = bitcast i8* %overflow_arg_area3015 to i64*, !dbg !5452
  %overflow_arg_area.next3016 = getelementptr i8, i8* %overflow_arg_area3015, i32 8, !dbg !5452
  store i8* %overflow_arg_area.next3016, i8** %overflow_arg_area_p3014, align 8, !dbg !5452
  br label %vaarg.end3017, !dbg !5452

vaarg.end3017:                                    ; preds = %vaarg.in_mem3013, %vaarg.in_reg3011
  %vaarg.addr3018 = phi i64* [ %1639, %vaarg.in_reg3011 ], [ %1641, %vaarg.in_mem3013 ], !dbg !5453
  %1642 = load i64, i64* %vaarg.addr3018, align 8, !dbg !5453
  %cmp3019 = icmp ne i64 0, %1642, !dbg !5454
  %cond3021 = select i1 %cmp3019, i32 1, i32 0, !dbg !5455
  %tobool3022 = icmp ne i32 %cond3021, 0, !dbg !5455
  %1643 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5456
  %set3023 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1643, i32 0, i32 13, !dbg !5457
  %ssl3024 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3023, i32 0, i32 73, !dbg !5458
  %primary3025 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl3024, i32 0, i32 0, !dbg !5459
  %sessionid = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary3025, i32 0, i32 11, !dbg !5460
  %frombool3026 = zext i1 %tobool3022 to i8, !dbg !5461
  store i8 %frombool3026, i8* %sessionid, align 8, !dbg !5461
  %1644 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5462
  %set3027 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1644, i32 0, i32 13, !dbg !5463
  %ssl3028 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3027, i32 0, i32 73, !dbg !5464
  %primary3029 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl3028, i32 0, i32 0, !dbg !5465
  %sessionid3030 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary3029, i32 0, i32 11, !dbg !5466
  %1645 = load i8, i8* %sessionid3030, align 8, !dbg !5466
  %tobool3031 = trunc i8 %1645 to i1, !dbg !5466
  %1646 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5467
  %set3032 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1646, i32 0, i32 13, !dbg !5468
  %proxy_ssl3033 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3032, i32 0, i32 74, !dbg !5469
  %primary3034 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl3033, i32 0, i32 0, !dbg !5470
  %sessionid3035 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary3034, i32 0, i32 11, !dbg !5471
  %frombool3036 = zext i1 %tobool3031 to i8, !dbg !5472
  store i8 %frombool3036, i8* %sessionid3035, align 8, !dbg !5472
  br label %sw.epilog3648, !dbg !5473

sw.bb3037:                                        ; preds = %entry
  %1647 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5474
  %gp_offset_p3038 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1647, i32 0, i32 0, !dbg !5474
  %gp_offset3039 = load i32, i32* %gp_offset_p3038, align 8, !dbg !5474
  %fits_in_gp3040 = icmp ule i32 %gp_offset3039, 40, !dbg !5474
  br i1 %fits_in_gp3040, label %vaarg.in_reg3041, label %vaarg.in_mem3043, !dbg !5474

vaarg.in_reg3041:                                 ; preds = %sw.bb3037
  %1648 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1647, i32 0, i32 3, !dbg !5475
  %reg_save_area3042 = load i8*, i8** %1648, align 8, !dbg !5475
  %1649 = getelementptr i8, i8* %reg_save_area3042, i32 %gp_offset3039, !dbg !5475
  %1650 = bitcast i8* %1649 to i64*, !dbg !5475
  %1651 = add i32 %gp_offset3039, 8, !dbg !5475
  store i32 %1651, i32* %gp_offset_p3038, align 8, !dbg !5475
  br label %vaarg.end3047, !dbg !5475

vaarg.in_mem3043:                                 ; preds = %sw.bb3037
  %overflow_arg_area_p3044 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1647, i32 0, i32 2, !dbg !5476
  %overflow_arg_area3045 = load i8*, i8** %overflow_arg_area_p3044, align 8, !dbg !5476
  %1652 = bitcast i8* %overflow_arg_area3045 to i64*, !dbg !5476
  %overflow_arg_area.next3046 = getelementptr i8, i8* %overflow_arg_area3045, i32 8, !dbg !5476
  store i8* %overflow_arg_area.next3046, i8** %overflow_arg_area_p3044, align 8, !dbg !5476
  br label %vaarg.end3047, !dbg !5476

vaarg.end3047:                                    ; preds = %vaarg.in_mem3043, %vaarg.in_reg3041
  %vaarg.addr3048 = phi i64* [ %1650, %vaarg.in_reg3041 ], [ %1652, %vaarg.in_mem3043 ], !dbg !5477
  %1653 = load i64, i64* %vaarg.addr3048, align 8, !dbg !5477
  %cmp3049 = icmp eq i64 0, %1653, !dbg !5478
  %cond3051 = select i1 %cmp3049, i32 1, i32 0, !dbg !5479
  %tobool3052 = icmp ne i32 %cond3051, 0, !dbg !5479
  %1654 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5480
  %set3053 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1654, i32 0, i32 13, !dbg !5481
  %http_te_skip = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3053, i32 0, i32 123, !dbg !5482
  %frombool3054 = zext i1 %tobool3052 to i8, !dbg !5483
  store i8 %frombool3054, i8* %http_te_skip, align 8, !dbg !5483
  br label %sw.epilog3648, !dbg !5484

sw.bb3055:                                        ; preds = %entry
  %1655 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5485
  %gp_offset_p3056 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1655, i32 0, i32 0, !dbg !5485
  %gp_offset3057 = load i32, i32* %gp_offset_p3056, align 8, !dbg !5485
  %fits_in_gp3058 = icmp ule i32 %gp_offset3057, 40, !dbg !5485
  br i1 %fits_in_gp3058, label %vaarg.in_reg3059, label %vaarg.in_mem3061, !dbg !5485

vaarg.in_reg3059:                                 ; preds = %sw.bb3055
  %1656 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1655, i32 0, i32 3, !dbg !5486
  %reg_save_area3060 = load i8*, i8** %1656, align 8, !dbg !5486
  %1657 = getelementptr i8, i8* %reg_save_area3060, i32 %gp_offset3057, !dbg !5486
  %1658 = bitcast i8* %1657 to i64*, !dbg !5486
  %1659 = add i32 %gp_offset3057, 8, !dbg !5486
  store i32 %1659, i32* %gp_offset_p3056, align 8, !dbg !5486
  br label %vaarg.end3065, !dbg !5486

vaarg.in_mem3061:                                 ; preds = %sw.bb3055
  %overflow_arg_area_p3062 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1655, i32 0, i32 2, !dbg !5487
  %overflow_arg_area3063 = load i8*, i8** %overflow_arg_area_p3062, align 8, !dbg !5487
  %1660 = bitcast i8* %overflow_arg_area3063 to i64*, !dbg !5487
  %overflow_arg_area.next3064 = getelementptr i8, i8* %overflow_arg_area3063, i32 8, !dbg !5487
  store i8* %overflow_arg_area.next3064, i8** %overflow_arg_area_p3062, align 8, !dbg !5487
  br label %vaarg.end3065, !dbg !5487

vaarg.end3065:                                    ; preds = %vaarg.in_mem3061, %vaarg.in_reg3059
  %vaarg.addr3066 = phi i64* [ %1658, %vaarg.in_reg3059 ], [ %1660, %vaarg.in_mem3061 ], !dbg !5488
  %1661 = load i64, i64* %vaarg.addr3066, align 8, !dbg !5488
  %cmp3067 = icmp eq i64 0, %1661, !dbg !5489
  %cond3069 = select i1 %cmp3067, i32 1, i32 0, !dbg !5490
  %tobool3070 = icmp ne i32 %cond3069, 0, !dbg !5490
  %1662 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5491
  %set3071 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1662, i32 0, i32 13, !dbg !5492
  %http_ce_skip = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3071, i32 0, i32 124, !dbg !5493
  %frombool3072 = zext i1 %tobool3070 to i8, !dbg !5494
  store i8 %frombool3072, i8* %http_ce_skip, align 1, !dbg !5494
  br label %sw.epilog3648, !dbg !5495

sw.bb3073:                                        ; preds = %entry
  %1663 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5496
  %gp_offset_p3074 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1663, i32 0, i32 0, !dbg !5496
  %gp_offset3075 = load i32, i32* %gp_offset_p3074, align 8, !dbg !5496
  %fits_in_gp3076 = icmp ule i32 %gp_offset3075, 40, !dbg !5496
  br i1 %fits_in_gp3076, label %vaarg.in_reg3077, label %vaarg.in_mem3079, !dbg !5496

vaarg.in_reg3077:                                 ; preds = %sw.bb3073
  %1664 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1663, i32 0, i32 3, !dbg !5497
  %reg_save_area3078 = load i8*, i8** %1664, align 8, !dbg !5497
  %1665 = getelementptr i8, i8* %reg_save_area3078, i32 %gp_offset3075, !dbg !5497
  %1666 = bitcast i8* %1665 to i64*, !dbg !5497
  %1667 = add i32 %gp_offset3075, 8, !dbg !5497
  store i32 %1667, i32* %gp_offset_p3074, align 8, !dbg !5497
  br label %vaarg.end3083, !dbg !5497

vaarg.in_mem3079:                                 ; preds = %sw.bb3073
  %overflow_arg_area_p3080 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1663, i32 0, i32 2, !dbg !5498
  %overflow_arg_area3081 = load i8*, i8** %overflow_arg_area_p3080, align 8, !dbg !5498
  %1668 = bitcast i8* %overflow_arg_area3081 to i64*, !dbg !5498
  %overflow_arg_area.next3082 = getelementptr i8, i8* %overflow_arg_area3081, i32 8, !dbg !5498
  store i8* %overflow_arg_area.next3082, i8** %overflow_arg_area_p3080, align 8, !dbg !5498
  br label %vaarg.end3083, !dbg !5498

vaarg.end3083:                                    ; preds = %vaarg.in_mem3079, %vaarg.in_reg3077
  %vaarg.addr3084 = phi i64* [ %1666, %vaarg.in_reg3077 ], [ %1668, %vaarg.in_mem3079 ], !dbg !5499
  %1669 = load i64, i64* %vaarg.addr3084, align 8, !dbg !5499
  %1670 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5500
  %set3085 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1670, i32 0, i32 13, !dbg !5501
  %new_file_perms = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3085, i32 0, i32 125, !dbg !5502
  store i64 %1669, i64* %new_file_perms, align 8, !dbg !5503
  br label %sw.epilog3648, !dbg !5504

sw.bb3086:                                        ; preds = %entry
  %1671 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5505
  %gp_offset_p3087 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1671, i32 0, i32 0, !dbg !5505
  %gp_offset3088 = load i32, i32* %gp_offset_p3087, align 8, !dbg !5505
  %fits_in_gp3089 = icmp ule i32 %gp_offset3088, 40, !dbg !5505
  br i1 %fits_in_gp3089, label %vaarg.in_reg3090, label %vaarg.in_mem3092, !dbg !5505

vaarg.in_reg3090:                                 ; preds = %sw.bb3086
  %1672 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1671, i32 0, i32 3, !dbg !5506
  %reg_save_area3091 = load i8*, i8** %1672, align 8, !dbg !5506
  %1673 = getelementptr i8, i8* %reg_save_area3091, i32 %gp_offset3088, !dbg !5506
  %1674 = bitcast i8* %1673 to i64*, !dbg !5506
  %1675 = add i32 %gp_offset3088, 8, !dbg !5506
  store i32 %1675, i32* %gp_offset_p3087, align 8, !dbg !5506
  br label %vaarg.end3096, !dbg !5506

vaarg.in_mem3092:                                 ; preds = %sw.bb3086
  %overflow_arg_area_p3093 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1671, i32 0, i32 2, !dbg !5507
  %overflow_arg_area3094 = load i8*, i8** %overflow_arg_area_p3093, align 8, !dbg !5507
  %1676 = bitcast i8* %overflow_arg_area3094 to i64*, !dbg !5507
  %overflow_arg_area.next3095 = getelementptr i8, i8* %overflow_arg_area3094, i32 8, !dbg !5507
  store i8* %overflow_arg_area.next3095, i8** %overflow_arg_area_p3093, align 8, !dbg !5507
  br label %vaarg.end3096, !dbg !5507

vaarg.end3096:                                    ; preds = %vaarg.in_mem3092, %vaarg.in_reg3090
  %vaarg.addr3097 = phi i64* [ %1674, %vaarg.in_reg3090 ], [ %1676, %vaarg.in_mem3092 ], !dbg !5508
  %1677 = load i64, i64* %vaarg.addr3097, align 8, !dbg !5508
  %1678 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5509
  %set3098 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1678, i32 0, i32 13, !dbg !5510
  %new_directory_perms = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3098, i32 0, i32 126, !dbg !5511
  store i64 %1677, i64* %new_directory_perms, align 8, !dbg !5512
  br label %sw.epilog3648, !dbg !5513

sw.bb3099:                                        ; preds = %entry
  %1679 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5514
  %gp_offset_p3100 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1679, i32 0, i32 0, !dbg !5514
  %gp_offset3101 = load i32, i32* %gp_offset_p3100, align 8, !dbg !5514
  %fits_in_gp3102 = icmp ule i32 %gp_offset3101, 40, !dbg !5514
  br i1 %fits_in_gp3102, label %vaarg.in_reg3103, label %vaarg.in_mem3105, !dbg !5514

vaarg.in_reg3103:                                 ; preds = %sw.bb3099
  %1680 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1679, i32 0, i32 3, !dbg !5515
  %reg_save_area3104 = load i8*, i8** %1680, align 8, !dbg !5515
  %1681 = getelementptr i8, i8* %reg_save_area3104, i32 %gp_offset3101, !dbg !5515
  %1682 = bitcast i8* %1681 to i64*, !dbg !5515
  %1683 = add i32 %gp_offset3101, 8, !dbg !5515
  store i32 %1683, i32* %gp_offset_p3100, align 8, !dbg !5515
  br label %vaarg.end3109, !dbg !5515

vaarg.in_mem3105:                                 ; preds = %sw.bb3099
  %overflow_arg_area_p3106 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1679, i32 0, i32 2, !dbg !5516
  %overflow_arg_area3107 = load i8*, i8** %overflow_arg_area_p3106, align 8, !dbg !5516
  %1684 = bitcast i8* %overflow_arg_area3107 to i64*, !dbg !5516
  %overflow_arg_area.next3108 = getelementptr i8, i8* %overflow_arg_area3107, i32 8, !dbg !5516
  store i8* %overflow_arg_area.next3108, i8** %overflow_arg_area_p3106, align 8, !dbg !5516
  br label %vaarg.end3109, !dbg !5516

vaarg.end3109:                                    ; preds = %vaarg.in_mem3105, %vaarg.in_reg3103
  %vaarg.addr3110 = phi i64* [ %1682, %vaarg.in_reg3103 ], [ %1684, %vaarg.in_mem3105 ], !dbg !5517
  %1685 = load i64, i64* %vaarg.addr3110, align 8, !dbg !5517
  %call3111 = call i32 @curlx_sltoui(i64 %1685), !dbg !5518
  %1686 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5519
  %set3112 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1686, i32 0, i32 13, !dbg !5520
  %scope_id = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3112, i32 0, i32 129, !dbg !5521
  store i32 %call3111, i32* %scope_id, align 8, !dbg !5522
  br label %sw.epilog3648, !dbg !5523

sw.bb3113:                                        ; preds = %entry
  %1687 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5524
  %gp_offset_p3114 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1687, i32 0, i32 0, !dbg !5524
  %gp_offset3115 = load i32, i32* %gp_offset_p3114, align 8, !dbg !5524
  %fits_in_gp3116 = icmp ule i32 %gp_offset3115, 40, !dbg !5524
  br i1 %fits_in_gp3116, label %vaarg.in_reg3117, label %vaarg.in_mem3119, !dbg !5524

vaarg.in_reg3117:                                 ; preds = %sw.bb3113
  %1688 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1687, i32 0, i32 3, !dbg !5525
  %reg_save_area3118 = load i8*, i8** %1688, align 8, !dbg !5525
  %1689 = getelementptr i8, i8* %reg_save_area3118, i32 %gp_offset3115, !dbg !5525
  %1690 = bitcast i8* %1689 to i64*, !dbg !5525
  %1691 = add i32 %gp_offset3115, 8, !dbg !5525
  store i32 %1691, i32* %gp_offset_p3114, align 8, !dbg !5525
  br label %vaarg.end3123, !dbg !5525

vaarg.in_mem3119:                                 ; preds = %sw.bb3113
  %overflow_arg_area_p3120 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1687, i32 0, i32 2, !dbg !5526
  %overflow_arg_area3121 = load i8*, i8** %overflow_arg_area_p3120, align 8, !dbg !5526
  %1692 = bitcast i8* %overflow_arg_area3121 to i64*, !dbg !5526
  %overflow_arg_area.next3122 = getelementptr i8, i8* %overflow_arg_area3121, i32 8, !dbg !5526
  store i8* %overflow_arg_area.next3122, i8** %overflow_arg_area_p3120, align 8, !dbg !5526
  br label %vaarg.end3123, !dbg !5526

vaarg.end3123:                                    ; preds = %vaarg.in_mem3119, %vaarg.in_reg3117
  %vaarg.addr3124 = phi i64* [ %1690, %vaarg.in_reg3117 ], [ %1692, %vaarg.in_mem3119 ], !dbg !5527
  %1693 = load i64, i64* %vaarg.addr3124, align 8, !dbg !5527
  %1694 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5528
  %set3125 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1694, i32 0, i32 13, !dbg !5529
  %allowed_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3125, i32 0, i32 130, !dbg !5530
  store i64 %1693, i64* %allowed_protocols, align 8, !dbg !5531
  br label %sw.epilog3648, !dbg !5532

sw.bb3126:                                        ; preds = %entry
  %1695 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5533
  %gp_offset_p3127 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1695, i32 0, i32 0, !dbg !5533
  %gp_offset3128 = load i32, i32* %gp_offset_p3127, align 8, !dbg !5533
  %fits_in_gp3129 = icmp ule i32 %gp_offset3128, 40, !dbg !5533
  br i1 %fits_in_gp3129, label %vaarg.in_reg3130, label %vaarg.in_mem3132, !dbg !5533

vaarg.in_reg3130:                                 ; preds = %sw.bb3126
  %1696 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1695, i32 0, i32 3, !dbg !5534
  %reg_save_area3131 = load i8*, i8** %1696, align 8, !dbg !5534
  %1697 = getelementptr i8, i8* %reg_save_area3131, i32 %gp_offset3128, !dbg !5534
  %1698 = bitcast i8* %1697 to i64*, !dbg !5534
  %1699 = add i32 %gp_offset3128, 8, !dbg !5534
  store i32 %1699, i32* %gp_offset_p3127, align 8, !dbg !5534
  br label %vaarg.end3136, !dbg !5534

vaarg.in_mem3132:                                 ; preds = %sw.bb3126
  %overflow_arg_area_p3133 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1695, i32 0, i32 2, !dbg !5535
  %overflow_arg_area3134 = load i8*, i8** %overflow_arg_area_p3133, align 8, !dbg !5535
  %1700 = bitcast i8* %overflow_arg_area3134 to i64*, !dbg !5535
  %overflow_arg_area.next3135 = getelementptr i8, i8* %overflow_arg_area3134, i32 8, !dbg !5535
  store i8* %overflow_arg_area.next3135, i8** %overflow_arg_area_p3133, align 8, !dbg !5535
  br label %vaarg.end3136, !dbg !5535

vaarg.end3136:                                    ; preds = %vaarg.in_mem3132, %vaarg.in_reg3130
  %vaarg.addr3137 = phi i64* [ %1698, %vaarg.in_reg3130 ], [ %1700, %vaarg.in_mem3132 ], !dbg !5536
  %1701 = load i64, i64* %vaarg.addr3137, align 8, !dbg !5536
  %1702 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5537
  %set3138 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1702, i32 0, i32 13, !dbg !5538
  %redir_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3138, i32 0, i32 131, !dbg !5539
  store i64 %1701, i64* %redir_protocols, align 8, !dbg !5540
  br label %sw.epilog3648, !dbg !5541

sw.bb3139:                                        ; preds = %entry
  %1703 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5542
  %set3140 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1703, i32 0, i32 13, !dbg !5543
  %str3141 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3140, i32 0, i32 128, !dbg !5544
  %arrayidx3142 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3141, i64 0, i64 7, !dbg !5542
  %1704 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5545
  %gp_offset_p3143 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1704, i32 0, i32 0, !dbg !5545
  %gp_offset3144 = load i32, i32* %gp_offset_p3143, align 8, !dbg !5545
  %fits_in_gp3145 = icmp ule i32 %gp_offset3144, 40, !dbg !5545
  br i1 %fits_in_gp3145, label %vaarg.in_reg3146, label %vaarg.in_mem3148, !dbg !5545

vaarg.in_reg3146:                                 ; preds = %sw.bb3139
  %1705 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1704, i32 0, i32 3, !dbg !5546
  %reg_save_area3147 = load i8*, i8** %1705, align 8, !dbg !5546
  %1706 = getelementptr i8, i8* %reg_save_area3147, i32 %gp_offset3144, !dbg !5546
  %1707 = bitcast i8* %1706 to i8**, !dbg !5546
  %1708 = add i32 %gp_offset3144, 8, !dbg !5546
  store i32 %1708, i32* %gp_offset_p3143, align 8, !dbg !5546
  br label %vaarg.end3152, !dbg !5546

vaarg.in_mem3148:                                 ; preds = %sw.bb3139
  %overflow_arg_area_p3149 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1704, i32 0, i32 2, !dbg !5547
  %overflow_arg_area3150 = load i8*, i8** %overflow_arg_area_p3149, align 8, !dbg !5547
  %1709 = bitcast i8* %overflow_arg_area3150 to i8**, !dbg !5547
  %overflow_arg_area.next3151 = getelementptr i8, i8* %overflow_arg_area3150, i32 8, !dbg !5547
  store i8* %overflow_arg_area.next3151, i8** %overflow_arg_area_p3149, align 8, !dbg !5547
  br label %vaarg.end3152, !dbg !5547

vaarg.end3152:                                    ; preds = %vaarg.in_mem3148, %vaarg.in_reg3146
  %vaarg.addr3153 = phi i8** [ %1707, %vaarg.in_reg3146 ], [ %1709, %vaarg.in_mem3148 ], !dbg !5548
  %1710 = load i8*, i8** %vaarg.addr3153, align 8, !dbg !5548
  %call3154 = call i32 @setstropt(i8** %arrayidx3142, i8* %1710), !dbg !5549
  store i32 %call3154, i32* %result, align 4, !dbg !5550
  br label %sw.epilog3648, !dbg !5551

sw.bb3155:                                        ; preds = %entry
  %1711 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5552
  %set3156 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1711, i32 0, i32 13, !dbg !5553
  %str3157 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3156, i32 0, i32 128, !dbg !5554
  %arrayidx3158 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3157, i64 0, i64 51, !dbg !5552
  %1712 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5555
  %gp_offset_p3159 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1712, i32 0, i32 0, !dbg !5555
  %gp_offset3160 = load i32, i32* %gp_offset_p3159, align 8, !dbg !5555
  %fits_in_gp3161 = icmp ule i32 %gp_offset3160, 40, !dbg !5555
  br i1 %fits_in_gp3161, label %vaarg.in_reg3162, label %vaarg.in_mem3164, !dbg !5555

vaarg.in_reg3162:                                 ; preds = %sw.bb3155
  %1713 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1712, i32 0, i32 3, !dbg !5556
  %reg_save_area3163 = load i8*, i8** %1713, align 8, !dbg !5556
  %1714 = getelementptr i8, i8* %reg_save_area3163, i32 %gp_offset3160, !dbg !5556
  %1715 = bitcast i8* %1714 to i8**, !dbg !5556
  %1716 = add i32 %gp_offset3160, 8, !dbg !5556
  store i32 %1716, i32* %gp_offset_p3159, align 8, !dbg !5556
  br label %vaarg.end3168, !dbg !5556

vaarg.in_mem3164:                                 ; preds = %sw.bb3155
  %overflow_arg_area_p3165 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1712, i32 0, i32 2, !dbg !5557
  %overflow_arg_area3166 = load i8*, i8** %overflow_arg_area_p3165, align 8, !dbg !5557
  %1717 = bitcast i8* %overflow_arg_area3166 to i8**, !dbg !5557
  %overflow_arg_area.next3167 = getelementptr i8, i8* %overflow_arg_area3166, i32 8, !dbg !5557
  store i8* %overflow_arg_area.next3167, i8** %overflow_arg_area_p3165, align 8, !dbg !5557
  br label %vaarg.end3168, !dbg !5557

vaarg.end3168:                                    ; preds = %vaarg.in_mem3164, %vaarg.in_reg3162
  %vaarg.addr3169 = phi i8** [ %1715, %vaarg.in_reg3162 ], [ %1717, %vaarg.in_mem3164 ], !dbg !5558
  %1718 = load i8*, i8** %vaarg.addr3169, align 8, !dbg !5558
  %call3170 = call i32 @setstropt(i8** %arrayidx3158, i8* %1718), !dbg !5559
  store i32 %call3170, i32* %result, align 4, !dbg !5560
  br label %sw.epilog3648, !dbg !5561

sw.bb3171:                                        ; preds = %entry
  %1719 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5562
  %set3172 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1719, i32 0, i32 13, !dbg !5563
  %str3173 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3172, i32 0, i32 128, !dbg !5564
  %arrayidx3174 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3173, i64 0, i64 52, !dbg !5562
  %1720 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5565
  %gp_offset_p3175 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1720, i32 0, i32 0, !dbg !5565
  %gp_offset3176 = load i32, i32* %gp_offset_p3175, align 8, !dbg !5565
  %fits_in_gp3177 = icmp ule i32 %gp_offset3176, 40, !dbg !5565
  br i1 %fits_in_gp3177, label %vaarg.in_reg3178, label %vaarg.in_mem3180, !dbg !5565

vaarg.in_reg3178:                                 ; preds = %sw.bb3171
  %1721 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1720, i32 0, i32 3, !dbg !5566
  %reg_save_area3179 = load i8*, i8** %1721, align 8, !dbg !5566
  %1722 = getelementptr i8, i8* %reg_save_area3179, i32 %gp_offset3176, !dbg !5566
  %1723 = bitcast i8* %1722 to i8**, !dbg !5566
  %1724 = add i32 %gp_offset3176, 8, !dbg !5566
  store i32 %1724, i32* %gp_offset_p3175, align 8, !dbg !5566
  br label %vaarg.end3184, !dbg !5566

vaarg.in_mem3180:                                 ; preds = %sw.bb3171
  %overflow_arg_area_p3181 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1720, i32 0, i32 2, !dbg !5567
  %overflow_arg_area3182 = load i8*, i8** %overflow_arg_area_p3181, align 8, !dbg !5567
  %1725 = bitcast i8* %overflow_arg_area3182 to i8**, !dbg !5567
  %overflow_arg_area.next3183 = getelementptr i8, i8* %overflow_arg_area3182, i32 8, !dbg !5567
  store i8* %overflow_arg_area.next3183, i8** %overflow_arg_area_p3181, align 8, !dbg !5567
  br label %vaarg.end3184, !dbg !5567

vaarg.end3184:                                    ; preds = %vaarg.in_mem3180, %vaarg.in_reg3178
  %vaarg.addr3185 = phi i8** [ %1723, %vaarg.in_reg3178 ], [ %1725, %vaarg.in_mem3180 ], !dbg !5568
  %1726 = load i8*, i8** %vaarg.addr3185, align 8, !dbg !5568
  %call3186 = call i32 @setstropt(i8** %arrayidx3174, i8* %1726), !dbg !5569
  store i32 %call3186, i32* %result, align 4, !dbg !5570
  br label %sw.epilog3648, !dbg !5571

sw.bb3187:                                        ; preds = %entry
  %1727 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5572
  %gp_offset_p3188 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1727, i32 0, i32 0, !dbg !5572
  %gp_offset3189 = load i32, i32* %gp_offset_p3188, align 8, !dbg !5572
  %fits_in_gp3190 = icmp ule i32 %gp_offset3189, 40, !dbg !5572
  br i1 %fits_in_gp3190, label %vaarg.in_reg3191, label %vaarg.in_mem3193, !dbg !5572

vaarg.in_reg3191:                                 ; preds = %sw.bb3187
  %1728 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1727, i32 0, i32 3, !dbg !5573
  %reg_save_area3192 = load i8*, i8** %1728, align 8, !dbg !5573
  %1729 = getelementptr i8, i8* %reg_save_area3192, i32 %gp_offset3189, !dbg !5573
  %1730 = bitcast i8* %1729 to %struct.curl_slist**, !dbg !5573
  %1731 = add i32 %gp_offset3189, 8, !dbg !5573
  store i32 %1731, i32* %gp_offset_p3188, align 8, !dbg !5573
  br label %vaarg.end3197, !dbg !5573

vaarg.in_mem3193:                                 ; preds = %sw.bb3187
  %overflow_arg_area_p3194 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1727, i32 0, i32 2, !dbg !5574
  %overflow_arg_area3195 = load i8*, i8** %overflow_arg_area_p3194, align 8, !dbg !5574
  %1732 = bitcast i8* %overflow_arg_area3195 to %struct.curl_slist**, !dbg !5574
  %overflow_arg_area.next3196 = getelementptr i8, i8* %overflow_arg_area3195, i32 8, !dbg !5574
  store i8* %overflow_arg_area.next3196, i8** %overflow_arg_area_p3194, align 8, !dbg !5574
  br label %vaarg.end3197, !dbg !5574

vaarg.end3197:                                    ; preds = %vaarg.in_mem3193, %vaarg.in_reg3191
  %vaarg.addr3198 = phi %struct.curl_slist** [ %1730, %vaarg.in_reg3191 ], [ %1732, %vaarg.in_mem3193 ], !dbg !5575
  %1733 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr3198, align 8, !dbg !5575
  %1734 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5576
  %set3199 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1734, i32 0, i32 13, !dbg !5577
  %mail_rcpt = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3199, i32 0, i32 132, !dbg !5578
  store %struct.curl_slist* %1733, %struct.curl_slist** %mail_rcpt, align 8, !dbg !5579
  br label %sw.epilog3648, !dbg !5580

sw.bb3200:                                        ; preds = %entry
  %1735 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5581
  %gp_offset_p3201 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1735, i32 0, i32 0, !dbg !5581
  %gp_offset3202 = load i32, i32* %gp_offset_p3201, align 8, !dbg !5581
  %fits_in_gp3203 = icmp ule i32 %gp_offset3202, 40, !dbg !5581
  br i1 %fits_in_gp3203, label %vaarg.in_reg3204, label %vaarg.in_mem3206, !dbg !5581

vaarg.in_reg3204:                                 ; preds = %sw.bb3200
  %1736 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1735, i32 0, i32 3, !dbg !5582
  %reg_save_area3205 = load i8*, i8** %1736, align 8, !dbg !5582
  %1737 = getelementptr i8, i8* %reg_save_area3205, i32 %gp_offset3202, !dbg !5582
  %1738 = bitcast i8* %1737 to i64*, !dbg !5582
  %1739 = add i32 %gp_offset3202, 8, !dbg !5582
  store i32 %1739, i32* %gp_offset_p3201, align 8, !dbg !5582
  br label %vaarg.end3210, !dbg !5582

vaarg.in_mem3206:                                 ; preds = %sw.bb3200
  %overflow_arg_area_p3207 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1735, i32 0, i32 2, !dbg !5583
  %overflow_arg_area3208 = load i8*, i8** %overflow_arg_area_p3207, align 8, !dbg !5583
  %1740 = bitcast i8* %overflow_arg_area3208 to i64*, !dbg !5583
  %overflow_arg_area.next3209 = getelementptr i8, i8* %overflow_arg_area3208, i32 8, !dbg !5583
  store i8* %overflow_arg_area.next3209, i8** %overflow_arg_area_p3207, align 8, !dbg !5583
  br label %vaarg.end3210, !dbg !5583

vaarg.end3210:                                    ; preds = %vaarg.in_mem3206, %vaarg.in_reg3204
  %vaarg.addr3211 = phi i64* [ %1738, %vaarg.in_reg3204 ], [ %1740, %vaarg.in_mem3206 ], !dbg !5584
  %1741 = load i64, i64* %vaarg.addr3211, align 8, !dbg !5584
  %cmp3212 = icmp ne i64 0, %1741, !dbg !5585
  %cond3214 = select i1 %cmp3212, i32 1, i32 0, !dbg !5586
  %tobool3215 = icmp ne i32 %cond3214, 0, !dbg !5586
  %1742 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5587
  %set3216 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1742, i32 0, i32 13, !dbg !5588
  %sasl_ir = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3216, i32 0, i32 133, !dbg !5589
  %frombool3217 = zext i1 %tobool3215 to i8, !dbg !5590
  store i8 %frombool3217, i8* %sasl_ir, align 8, !dbg !5590
  br label %sw.epilog3648, !dbg !5591

sw.bb3218:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %curl_rtspreq, metadata !5592, metadata !2256), !dbg !5594
  %1743 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5595
  %gp_offset_p3219 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1743, i32 0, i32 0, !dbg !5595
  %gp_offset3220 = load i32, i32* %gp_offset_p3219, align 8, !dbg !5595
  %fits_in_gp3221 = icmp ule i32 %gp_offset3220, 40, !dbg !5595
  br i1 %fits_in_gp3221, label %vaarg.in_reg3222, label %vaarg.in_mem3224, !dbg !5595

vaarg.in_reg3222:                                 ; preds = %sw.bb3218
  %1744 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1743, i32 0, i32 3, !dbg !5596
  %reg_save_area3223 = load i8*, i8** %1744, align 8, !dbg !5596
  %1745 = getelementptr i8, i8* %reg_save_area3223, i32 %gp_offset3220, !dbg !5596
  %1746 = bitcast i8* %1745 to i64*, !dbg !5596
  %1747 = add i32 %gp_offset3220, 8, !dbg !5596
  store i32 %1747, i32* %gp_offset_p3219, align 8, !dbg !5596
  br label %vaarg.end3228, !dbg !5596

vaarg.in_mem3224:                                 ; preds = %sw.bb3218
  %overflow_arg_area_p3225 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1743, i32 0, i32 2, !dbg !5598
  %overflow_arg_area3226 = load i8*, i8** %overflow_arg_area_p3225, align 8, !dbg !5598
  %1748 = bitcast i8* %overflow_arg_area3226 to i64*, !dbg !5598
  %overflow_arg_area.next3227 = getelementptr i8, i8* %overflow_arg_area3226, i32 8, !dbg !5598
  store i8* %overflow_arg_area.next3227, i8** %overflow_arg_area_p3225, align 8, !dbg !5598
  br label %vaarg.end3228, !dbg !5598

vaarg.end3228:                                    ; preds = %vaarg.in_mem3224, %vaarg.in_reg3222
  %vaarg.addr3229 = phi i64* [ %1746, %vaarg.in_reg3222 ], [ %1748, %vaarg.in_mem3224 ], !dbg !5600
  %1749 = load i64, i64* %vaarg.addr3229, align 8, !dbg !5600
  store i64 %1749, i64* %curl_rtspreq, align 8, !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %rtspreq, metadata !5603, metadata !2256), !dbg !5604
  store i32 0, i32* %rtspreq, align 4, !dbg !5604
  %1750 = load i64, i64* %curl_rtspreq, align 8, !dbg !5605
  switch i64 %1750, label %sw.default3241 [
    i64 1, label %sw.bb3230
    i64 2, label %sw.bb3231
    i64 3, label %sw.bb3232
    i64 4, label %sw.bb3233
    i64 5, label %sw.bb3234
    i64 6, label %sw.bb3235
    i64 7, label %sw.bb3236
    i64 8, label %sw.bb3237
    i64 9, label %sw.bb3238
    i64 10, label %sw.bb3239
    i64 11, label %sw.bb3240
  ], !dbg !5606

sw.bb3230:                                        ; preds = %vaarg.end3228
  store i32 1, i32* %rtspreq, align 4, !dbg !5607
  br label %sw.epilog3242, !dbg !5609

sw.bb3231:                                        ; preds = %vaarg.end3228
  store i32 2, i32* %rtspreq, align 4, !dbg !5610
  br label %sw.epilog3242, !dbg !5611

sw.bb3232:                                        ; preds = %vaarg.end3228
  store i32 3, i32* %rtspreq, align 4, !dbg !5612
  br label %sw.epilog3242, !dbg !5613

sw.bb3233:                                        ; preds = %vaarg.end3228
  store i32 4, i32* %rtspreq, align 4, !dbg !5614
  br label %sw.epilog3242, !dbg !5615

sw.bb3234:                                        ; preds = %vaarg.end3228
  store i32 5, i32* %rtspreq, align 4, !dbg !5616
  br label %sw.epilog3242, !dbg !5617

sw.bb3235:                                        ; preds = %vaarg.end3228
  store i32 6, i32* %rtspreq, align 4, !dbg !5618
  br label %sw.epilog3242, !dbg !5619

sw.bb3236:                                        ; preds = %vaarg.end3228
  store i32 7, i32* %rtspreq, align 4, !dbg !5620
  br label %sw.epilog3242, !dbg !5621

sw.bb3237:                                        ; preds = %vaarg.end3228
  store i32 8, i32* %rtspreq, align 4, !dbg !5622
  br label %sw.epilog3242, !dbg !5623

sw.bb3238:                                        ; preds = %vaarg.end3228
  store i32 9, i32* %rtspreq, align 4, !dbg !5624
  br label %sw.epilog3242, !dbg !5625

sw.bb3239:                                        ; preds = %vaarg.end3228
  store i32 10, i32* %rtspreq, align 4, !dbg !5626
  br label %sw.epilog3242, !dbg !5627

sw.bb3240:                                        ; preds = %vaarg.end3228
  store i32 11, i32* %rtspreq, align 4, !dbg !5628
  br label %sw.epilog3242, !dbg !5629

sw.default3241:                                   ; preds = %vaarg.end3228
  store i32 0, i32* %rtspreq, align 4, !dbg !5630
  br label %sw.epilog3242, !dbg !5631

sw.epilog3242:                                    ; preds = %sw.default3241, %sw.bb3240, %sw.bb3239, %sw.bb3238, %sw.bb3237, %sw.bb3236, %sw.bb3235, %sw.bb3234, %sw.bb3233, %sw.bb3232, %sw.bb3231, %sw.bb3230
  %1751 = load i32, i32* %rtspreq, align 4, !dbg !5632
  %1752 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5633
  %set3243 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1752, i32 0, i32 13, !dbg !5634
  %rtspreq3244 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3243, i32 0, i32 134, !dbg !5635
  store i32 %1751, i32* %rtspreq3244, align 4, !dbg !5636
  br label %sw.epilog3648, !dbg !5637

sw.bb3245:                                        ; preds = %entry
  %1753 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5638
  %set3246 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1753, i32 0, i32 13, !dbg !5639
  %str3247 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3246, i32 0, i32 128, !dbg !5640
  %arrayidx3248 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3247, i64 0, i64 47, !dbg !5638
  %1754 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5641
  %gp_offset_p3249 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1754, i32 0, i32 0, !dbg !5641
  %gp_offset3250 = load i32, i32* %gp_offset_p3249, align 8, !dbg !5641
  %fits_in_gp3251 = icmp ule i32 %gp_offset3250, 40, !dbg !5641
  br i1 %fits_in_gp3251, label %vaarg.in_reg3252, label %vaarg.in_mem3254, !dbg !5641

vaarg.in_reg3252:                                 ; preds = %sw.bb3245
  %1755 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1754, i32 0, i32 3, !dbg !5642
  %reg_save_area3253 = load i8*, i8** %1755, align 8, !dbg !5642
  %1756 = getelementptr i8, i8* %reg_save_area3253, i32 %gp_offset3250, !dbg !5642
  %1757 = bitcast i8* %1756 to i8**, !dbg !5642
  %1758 = add i32 %gp_offset3250, 8, !dbg !5642
  store i32 %1758, i32* %gp_offset_p3249, align 8, !dbg !5642
  br label %vaarg.end3258, !dbg !5642

vaarg.in_mem3254:                                 ; preds = %sw.bb3245
  %overflow_arg_area_p3255 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1754, i32 0, i32 2, !dbg !5643
  %overflow_arg_area3256 = load i8*, i8** %overflow_arg_area_p3255, align 8, !dbg !5643
  %1759 = bitcast i8* %overflow_arg_area3256 to i8**, !dbg !5643
  %overflow_arg_area.next3257 = getelementptr i8, i8* %overflow_arg_area3256, i32 8, !dbg !5643
  store i8* %overflow_arg_area.next3257, i8** %overflow_arg_area_p3255, align 8, !dbg !5643
  br label %vaarg.end3258, !dbg !5643

vaarg.end3258:                                    ; preds = %vaarg.in_mem3254, %vaarg.in_reg3252
  %vaarg.addr3259 = phi i8** [ %1757, %vaarg.in_reg3252 ], [ %1759, %vaarg.in_mem3254 ], !dbg !5644
  %1760 = load i8*, i8** %vaarg.addr3259, align 8, !dbg !5644
  %call3260 = call i32 @setstropt(i8** %arrayidx3248, i8* %1760), !dbg !5645
  store i32 %call3260, i32* %result, align 4, !dbg !5646
  br label %sw.epilog3648, !dbg !5647

sw.bb3261:                                        ; preds = %entry
  %1761 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5648
  %set3262 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1761, i32 0, i32 13, !dbg !5649
  %str3263 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3262, i32 0, i32 128, !dbg !5650
  %arrayidx3264 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3263, i64 0, i64 48, !dbg !5648
  %1762 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5651
  %gp_offset_p3265 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1762, i32 0, i32 0, !dbg !5651
  %gp_offset3266 = load i32, i32* %gp_offset_p3265, align 8, !dbg !5651
  %fits_in_gp3267 = icmp ule i32 %gp_offset3266, 40, !dbg !5651
  br i1 %fits_in_gp3267, label %vaarg.in_reg3268, label %vaarg.in_mem3270, !dbg !5651

vaarg.in_reg3268:                                 ; preds = %sw.bb3261
  %1763 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1762, i32 0, i32 3, !dbg !5652
  %reg_save_area3269 = load i8*, i8** %1763, align 8, !dbg !5652
  %1764 = getelementptr i8, i8* %reg_save_area3269, i32 %gp_offset3266, !dbg !5652
  %1765 = bitcast i8* %1764 to i8**, !dbg !5652
  %1766 = add i32 %gp_offset3266, 8, !dbg !5652
  store i32 %1766, i32* %gp_offset_p3265, align 8, !dbg !5652
  br label %vaarg.end3274, !dbg !5652

vaarg.in_mem3270:                                 ; preds = %sw.bb3261
  %overflow_arg_area_p3271 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1762, i32 0, i32 2, !dbg !5653
  %overflow_arg_area3272 = load i8*, i8** %overflow_arg_area_p3271, align 8, !dbg !5653
  %1767 = bitcast i8* %overflow_arg_area3272 to i8**, !dbg !5653
  %overflow_arg_area.next3273 = getelementptr i8, i8* %overflow_arg_area3272, i32 8, !dbg !5653
  store i8* %overflow_arg_area.next3273, i8** %overflow_arg_area_p3271, align 8, !dbg !5653
  br label %vaarg.end3274, !dbg !5653

vaarg.end3274:                                    ; preds = %vaarg.in_mem3270, %vaarg.in_reg3268
  %vaarg.addr3275 = phi i8** [ %1765, %vaarg.in_reg3268 ], [ %1767, %vaarg.in_mem3270 ], !dbg !5654
  %1768 = load i8*, i8** %vaarg.addr3275, align 8, !dbg !5654
  %call3276 = call i32 @setstropt(i8** %arrayidx3264, i8* %1768), !dbg !5655
  store i32 %call3276, i32* %result, align 4, !dbg !5656
  br label %sw.epilog3648, !dbg !5657

sw.bb3277:                                        ; preds = %entry
  %1769 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5658
  %set3278 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1769, i32 0, i32 13, !dbg !5659
  %str3279 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3278, i32 0, i32 128, !dbg !5660
  %arrayidx3280 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str3279, i64 0, i64 49, !dbg !5658
  %1770 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5661
  %gp_offset_p3281 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1770, i32 0, i32 0, !dbg !5661
  %gp_offset3282 = load i32, i32* %gp_offset_p3281, align 8, !dbg !5661
  %fits_in_gp3283 = icmp ule i32 %gp_offset3282, 40, !dbg !5661
  br i1 %fits_in_gp3283, label %vaarg.in_reg3284, label %vaarg.in_mem3286, !dbg !5661

vaarg.in_reg3284:                                 ; preds = %sw.bb3277
  %1771 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1770, i32 0, i32 3, !dbg !5662
  %reg_save_area3285 = load i8*, i8** %1771, align 8, !dbg !5662
  %1772 = getelementptr i8, i8* %reg_save_area3285, i32 %gp_offset3282, !dbg !5662
  %1773 = bitcast i8* %1772 to i8**, !dbg !5662
  %1774 = add i32 %gp_offset3282, 8, !dbg !5662
  store i32 %1774, i32* %gp_offset_p3281, align 8, !dbg !5662
  br label %vaarg.end3290, !dbg !5662

vaarg.in_mem3286:                                 ; preds = %sw.bb3277
  %overflow_arg_area_p3287 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1770, i32 0, i32 2, !dbg !5663
  %overflow_arg_area3288 = load i8*, i8** %overflow_arg_area_p3287, align 8, !dbg !5663
  %1775 = bitcast i8* %overflow_arg_area3288 to i8**, !dbg !5663
  %overflow_arg_area.next3289 = getelementptr i8, i8* %overflow_arg_area3288, i32 8, !dbg !5663
  store i8* %overflow_arg_area.next3289, i8** %overflow_arg_area_p3287, align 8, !dbg !5663
  br label %vaarg.end3290, !dbg !5663

vaarg.end3290:                                    ; preds = %vaarg.in_mem3286, %vaarg.in_reg3284
  %vaarg.addr3291 = phi i8** [ %1773, %vaarg.in_reg3284 ], [ %1775, %vaarg.in_mem3286 ], !dbg !5664
  %1776 = load i8*, i8** %vaarg.addr3291, align 8, !dbg !5664
  %call3292 = call i32 @setstropt(i8** %arrayidx3280, i8* %1776), !dbg !5665
  store i32 %call3292, i32* %result, align 4, !dbg !5666
  br label %sw.epilog3648, !dbg !5667

sw.bb3293:                                        ; preds = %entry
  %1777 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5668
  %gp_offset_p3294 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1777, i32 0, i32 0, !dbg !5668
  %gp_offset3295 = load i32, i32* %gp_offset_p3294, align 8, !dbg !5668
  %fits_in_gp3296 = icmp ule i32 %gp_offset3295, 40, !dbg !5668
  br i1 %fits_in_gp3296, label %vaarg.in_reg3297, label %vaarg.in_mem3299, !dbg !5668

vaarg.in_reg3297:                                 ; preds = %sw.bb3293
  %1778 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1777, i32 0, i32 3, !dbg !5669
  %reg_save_area3298 = load i8*, i8** %1778, align 8, !dbg !5669
  %1779 = getelementptr i8, i8* %reg_save_area3298, i32 %gp_offset3295, !dbg !5669
  %1780 = bitcast i8* %1779 to i64*, !dbg !5669
  %1781 = add i32 %gp_offset3295, 8, !dbg !5669
  store i32 %1781, i32* %gp_offset_p3294, align 8, !dbg !5669
  br label %vaarg.end3303, !dbg !5669

vaarg.in_mem3299:                                 ; preds = %sw.bb3293
  %overflow_arg_area_p3300 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1777, i32 0, i32 2, !dbg !5670
  %overflow_arg_area3301 = load i8*, i8** %overflow_arg_area_p3300, align 8, !dbg !5670
  %1782 = bitcast i8* %overflow_arg_area3301 to i64*, !dbg !5670
  %overflow_arg_area.next3302 = getelementptr i8, i8* %overflow_arg_area3301, i32 8, !dbg !5670
  store i8* %overflow_arg_area.next3302, i8** %overflow_arg_area_p3300, align 8, !dbg !5670
  br label %vaarg.end3303, !dbg !5670

vaarg.end3303:                                    ; preds = %vaarg.in_mem3299, %vaarg.in_reg3297
  %vaarg.addr3304 = phi i64* [ %1780, %vaarg.in_reg3297 ], [ %1782, %vaarg.in_mem3299 ], !dbg !5671
  %1783 = load i64, i64* %vaarg.addr3304, align 8, !dbg !5671
  %1784 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5672
  %state3305 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1784, i32 0, i32 17, !dbg !5673
  %rtsp_next_client_CSeq = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state3305, i32 0, i32 44, !dbg !5674
  store i64 %1783, i64* %rtsp_next_client_CSeq, align 8, !dbg !5675
  br label %sw.epilog3648, !dbg !5676

sw.bb3306:                                        ; preds = %entry
  %1785 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5677
  %gp_offset_p3307 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1785, i32 0, i32 0, !dbg !5677
  %gp_offset3308 = load i32, i32* %gp_offset_p3307, align 8, !dbg !5677
  %fits_in_gp3309 = icmp ule i32 %gp_offset3308, 40, !dbg !5677
  br i1 %fits_in_gp3309, label %vaarg.in_reg3310, label %vaarg.in_mem3312, !dbg !5677

vaarg.in_reg3310:                                 ; preds = %sw.bb3306
  %1786 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1785, i32 0, i32 3, !dbg !5678
  %reg_save_area3311 = load i8*, i8** %1786, align 8, !dbg !5678
  %1787 = getelementptr i8, i8* %reg_save_area3311, i32 %gp_offset3308, !dbg !5678
  %1788 = bitcast i8* %1787 to i64*, !dbg !5678
  %1789 = add i32 %gp_offset3308, 8, !dbg !5678
  store i32 %1789, i32* %gp_offset_p3307, align 8, !dbg !5678
  br label %vaarg.end3316, !dbg !5678

vaarg.in_mem3312:                                 ; preds = %sw.bb3306
  %overflow_arg_area_p3313 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1785, i32 0, i32 2, !dbg !5679
  %overflow_arg_area3314 = load i8*, i8** %overflow_arg_area_p3313, align 8, !dbg !5679
  %1790 = bitcast i8* %overflow_arg_area3314 to i64*, !dbg !5679
  %overflow_arg_area.next3315 = getelementptr i8, i8* %overflow_arg_area3314, i32 8, !dbg !5679
  store i8* %overflow_arg_area.next3315, i8** %overflow_arg_area_p3313, align 8, !dbg !5679
  br label %vaarg.end3316, !dbg !5679

vaarg.end3316:                                    ; preds = %vaarg.in_mem3312, %vaarg.in_reg3310
  %vaarg.addr3317 = phi i64* [ %1788, %vaarg.in_reg3310 ], [ %1790, %vaarg.in_mem3312 ], !dbg !5680
  %1791 = load i64, i64* %vaarg.addr3317, align 8, !dbg !5680
  %1792 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5681
  %state3318 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1792, i32 0, i32 17, !dbg !5682
  %rtsp_next_client_CSeq3319 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state3318, i32 0, i32 44, !dbg !5683
  store i64 %1791, i64* %rtsp_next_client_CSeq3319, align 8, !dbg !5684
  br label %sw.epilog3648, !dbg !5685

sw.bb3320:                                        ; preds = %entry
  %1793 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5686
  %gp_offset_p3321 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1793, i32 0, i32 0, !dbg !5686
  %gp_offset3322 = load i32, i32* %gp_offset_p3321, align 8, !dbg !5686
  %fits_in_gp3323 = icmp ule i32 %gp_offset3322, 40, !dbg !5686
  br i1 %fits_in_gp3323, label %vaarg.in_reg3324, label %vaarg.in_mem3326, !dbg !5686

vaarg.in_reg3324:                                 ; preds = %sw.bb3320
  %1794 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1793, i32 0, i32 3, !dbg !5687
  %reg_save_area3325 = load i8*, i8** %1794, align 8, !dbg !5687
  %1795 = getelementptr i8, i8* %reg_save_area3325, i32 %gp_offset3322, !dbg !5687
  %1796 = bitcast i8* %1795 to i8**, !dbg !5687
  %1797 = add i32 %gp_offset3322, 8, !dbg !5687
  store i32 %1797, i32* %gp_offset_p3321, align 8, !dbg !5687
  br label %vaarg.end3330, !dbg !5687

vaarg.in_mem3326:                                 ; preds = %sw.bb3320
  %overflow_arg_area_p3327 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1793, i32 0, i32 2, !dbg !5688
  %overflow_arg_area3328 = load i8*, i8** %overflow_arg_area_p3327, align 8, !dbg !5688
  %1798 = bitcast i8* %overflow_arg_area3328 to i8**, !dbg !5688
  %overflow_arg_area.next3329 = getelementptr i8, i8* %overflow_arg_area3328, i32 8, !dbg !5688
  store i8* %overflow_arg_area.next3329, i8** %overflow_arg_area_p3327, align 8, !dbg !5688
  br label %vaarg.end3330, !dbg !5688

vaarg.end3330:                                    ; preds = %vaarg.in_mem3326, %vaarg.in_reg3324
  %vaarg.addr3331 = phi i8** [ %1796, %vaarg.in_reg3324 ], [ %1798, %vaarg.in_mem3326 ], !dbg !5689
  %1799 = load i8*, i8** %vaarg.addr3331, align 8, !dbg !5689
  %1800 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5690
  %set3332 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1800, i32 0, i32 13, !dbg !5691
  %rtp_out = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3332, i32 0, i32 7, !dbg !5692
  store i8* %1799, i8** %rtp_out, align 8, !dbg !5693
  br label %sw.epilog3648, !dbg !5694

sw.bb3333:                                        ; preds = %entry
  %1801 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5695
  %gp_offset_p3334 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1801, i32 0, i32 0, !dbg !5695
  %gp_offset3335 = load i32, i32* %gp_offset_p3334, align 8, !dbg !5695
  %fits_in_gp3336 = icmp ule i32 %gp_offset3335, 40, !dbg !5695
  br i1 %fits_in_gp3336, label %vaarg.in_reg3337, label %vaarg.in_mem3339, !dbg !5695

vaarg.in_reg3337:                                 ; preds = %sw.bb3333
  %1802 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1801, i32 0, i32 3, !dbg !5696
  %reg_save_area3338 = load i8*, i8** %1802, align 8, !dbg !5696
  %1803 = getelementptr i8, i8* %reg_save_area3338, i32 %gp_offset3335, !dbg !5696
  %1804 = bitcast i8* %1803 to i64 (i8*, i64, i64, i8*)**, !dbg !5696
  %1805 = add i32 %gp_offset3335, 8, !dbg !5696
  store i32 %1805, i32* %gp_offset_p3334, align 8, !dbg !5696
  br label %vaarg.end3343, !dbg !5696

vaarg.in_mem3339:                                 ; preds = %sw.bb3333
  %overflow_arg_area_p3340 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1801, i32 0, i32 2, !dbg !5697
  %overflow_arg_area3341 = load i8*, i8** %overflow_arg_area_p3340, align 8, !dbg !5697
  %1806 = bitcast i8* %overflow_arg_area3341 to i64 (i8*, i64, i64, i8*)**, !dbg !5697
  %overflow_arg_area.next3342 = getelementptr i8, i8* %overflow_arg_area3341, i32 8, !dbg !5697
  store i8* %overflow_arg_area.next3342, i8** %overflow_arg_area_p3340, align 8, !dbg !5697
  br label %vaarg.end3343, !dbg !5697

vaarg.end3343:                                    ; preds = %vaarg.in_mem3339, %vaarg.in_reg3337
  %vaarg.addr3344 = phi i64 (i8*, i64, i64, i8*)** [ %1804, %vaarg.in_reg3337 ], [ %1806, %vaarg.in_mem3339 ], !dbg !5698
  %1807 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %vaarg.addr3344, align 8, !dbg !5698
  %1808 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5699
  %set3345 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1808, i32 0, i32 13, !dbg !5700
  %fwrite_rtp = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3345, i32 0, i32 22, !dbg !5701
  store i64 (i8*, i64, i64, i8*)* %1807, i64 (i8*, i64, i64, i8*)** %fwrite_rtp, align 8, !dbg !5702
  br label %sw.epilog3648, !dbg !5703

sw.bb3346:                                        ; preds = %entry
  %1809 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5704
  %gp_offset_p3347 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1809, i32 0, i32 0, !dbg !5704
  %gp_offset3348 = load i32, i32* %gp_offset_p3347, align 8, !dbg !5704
  %fits_in_gp3349 = icmp ule i32 %gp_offset3348, 40, !dbg !5704
  br i1 %fits_in_gp3349, label %vaarg.in_reg3350, label %vaarg.in_mem3352, !dbg !5704

vaarg.in_reg3350:                                 ; preds = %sw.bb3346
  %1810 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1809, i32 0, i32 3, !dbg !5705
  %reg_save_area3351 = load i8*, i8** %1810, align 8, !dbg !5705
  %1811 = getelementptr i8, i8* %reg_save_area3351, i32 %gp_offset3348, !dbg !5705
  %1812 = bitcast i8* %1811 to i64*, !dbg !5705
  %1813 = add i32 %gp_offset3348, 8, !dbg !5705
  store i32 %1813, i32* %gp_offset_p3347, align 8, !dbg !5705
  br label %vaarg.end3356, !dbg !5705

vaarg.in_mem3352:                                 ; preds = %sw.bb3346
  %overflow_arg_area_p3353 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1809, i32 0, i32 2, !dbg !5706
  %overflow_arg_area3354 = load i8*, i8** %overflow_arg_area_p3353, align 8, !dbg !5706
  %1814 = bitcast i8* %overflow_arg_area3354 to i64*, !dbg !5706
  %overflow_arg_area.next3355 = getelementptr i8, i8* %overflow_arg_area3354, i32 8, !dbg !5706
  store i8* %overflow_arg_area.next3355, i8** %overflow_arg_area_p3353, align 8, !dbg !5706
  br label %vaarg.end3356, !dbg !5706

vaarg.end3356:                                    ; preds = %vaarg.in_mem3352, %vaarg.in_reg3350
  %vaarg.addr3357 = phi i64* [ %1812, %vaarg.in_reg3350 ], [ %1814, %vaarg.in_mem3352 ], !dbg !5707
  %1815 = load i64, i64* %vaarg.addr3357, align 8, !dbg !5707
  %cmp3358 = icmp ne i64 0, %1815, !dbg !5708
  %cond3360 = select i1 %cmp3358, i32 1, i32 0, !dbg !5709
  %tobool3361 = icmp ne i32 %cond3360, 0, !dbg !5709
  %1816 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5710
  %set3362 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1816, i32 0, i32 13, !dbg !5711
  %wildcardmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3362, i32 0, i32 136, !dbg !5712
  %frombool3363 = zext i1 %tobool3361 to i8, !dbg !5713
  store i8 %frombool3363, i8* %wildcardmatch, align 8, !dbg !5713
  br label %sw.epilog3648, !dbg !5714

sw.bb3364:                                        ; preds = %entry
  %1817 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5715
  %gp_offset_p3365 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1817, i32 0, i32 0, !dbg !5715
  %gp_offset3366 = load i32, i32* %gp_offset_p3365, align 8, !dbg !5715
  %fits_in_gp3367 = icmp ule i32 %gp_offset3366, 40, !dbg !5715
  br i1 %fits_in_gp3367, label %vaarg.in_reg3368, label %vaarg.in_mem3370, !dbg !5715

vaarg.in_reg3368:                                 ; preds = %sw.bb3364
  %1818 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1817, i32 0, i32 3, !dbg !5716
  %reg_save_area3369 = load i8*, i8** %1818, align 8, !dbg !5716
  %1819 = getelementptr i8, i8* %reg_save_area3369, i32 %gp_offset3366, !dbg !5716
  %1820 = bitcast i8* %1819 to i64 (i8*, i8*, i32)**, !dbg !5716
  %1821 = add i32 %gp_offset3366, 8, !dbg !5716
  store i32 %1821, i32* %gp_offset_p3365, align 8, !dbg !5716
  br label %vaarg.end3374, !dbg !5716

vaarg.in_mem3370:                                 ; preds = %sw.bb3364
  %overflow_arg_area_p3371 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1817, i32 0, i32 2, !dbg !5717
  %overflow_arg_area3372 = load i8*, i8** %overflow_arg_area_p3371, align 8, !dbg !5717
  %1822 = bitcast i8* %overflow_arg_area3372 to i64 (i8*, i8*, i32)**, !dbg !5717
  %overflow_arg_area.next3373 = getelementptr i8, i8* %overflow_arg_area3372, i32 8, !dbg !5717
  store i8* %overflow_arg_area.next3373, i8** %overflow_arg_area_p3371, align 8, !dbg !5717
  br label %vaarg.end3374, !dbg !5717

vaarg.end3374:                                    ; preds = %vaarg.in_mem3370, %vaarg.in_reg3368
  %vaarg.addr3375 = phi i64 (i8*, i8*, i32)** [ %1820, %vaarg.in_reg3368 ], [ %1822, %vaarg.in_mem3370 ], !dbg !5718
  %1823 = load i64 (i8*, i8*, i32)*, i64 (i8*, i8*, i32)** %vaarg.addr3375, align 8, !dbg !5718
  %1824 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5719
  %set3376 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1824, i32 0, i32 13, !dbg !5720
  %chunk_bgn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3376, i32 0, i32 137, !dbg !5721
  store i64 (i8*, i8*, i32)* %1823, i64 (i8*, i8*, i32)** %chunk_bgn, align 8, !dbg !5722
  br label %sw.epilog3648, !dbg !5723

sw.bb3377:                                        ; preds = %entry
  %1825 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5724
  %gp_offset_p3378 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1825, i32 0, i32 0, !dbg !5724
  %gp_offset3379 = load i32, i32* %gp_offset_p3378, align 8, !dbg !5724
  %fits_in_gp3380 = icmp ule i32 %gp_offset3379, 40, !dbg !5724
  br i1 %fits_in_gp3380, label %vaarg.in_reg3381, label %vaarg.in_mem3383, !dbg !5724

vaarg.in_reg3381:                                 ; preds = %sw.bb3377
  %1826 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1825, i32 0, i32 3, !dbg !5725
  %reg_save_area3382 = load i8*, i8** %1826, align 8, !dbg !5725
  %1827 = getelementptr i8, i8* %reg_save_area3382, i32 %gp_offset3379, !dbg !5725
  %1828 = bitcast i8* %1827 to i64 (i8*)**, !dbg !5725
  %1829 = add i32 %gp_offset3379, 8, !dbg !5725
  store i32 %1829, i32* %gp_offset_p3378, align 8, !dbg !5725
  br label %vaarg.end3387, !dbg !5725

vaarg.in_mem3383:                                 ; preds = %sw.bb3377
  %overflow_arg_area_p3384 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1825, i32 0, i32 2, !dbg !5726
  %overflow_arg_area3385 = load i8*, i8** %overflow_arg_area_p3384, align 8, !dbg !5726
  %1830 = bitcast i8* %overflow_arg_area3385 to i64 (i8*)**, !dbg !5726
  %overflow_arg_area.next3386 = getelementptr i8, i8* %overflow_arg_area3385, i32 8, !dbg !5726
  store i8* %overflow_arg_area.next3386, i8** %overflow_arg_area_p3384, align 8, !dbg !5726
  br label %vaarg.end3387, !dbg !5726

vaarg.end3387:                                    ; preds = %vaarg.in_mem3383, %vaarg.in_reg3381
  %vaarg.addr3388 = phi i64 (i8*)** [ %1828, %vaarg.in_reg3381 ], [ %1830, %vaarg.in_mem3383 ], !dbg !5727
  %1831 = load i64 (i8*)*, i64 (i8*)** %vaarg.addr3388, align 8, !dbg !5727
  %1832 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5728
  %set3389 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1832, i32 0, i32 13, !dbg !5729
  %chunk_end = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3389, i32 0, i32 138, !dbg !5730
  store i64 (i8*)* %1831, i64 (i8*)** %chunk_end, align 8, !dbg !5731
  br label %sw.epilog3648, !dbg !5732

sw.bb3390:                                        ; preds = %entry
  %1833 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5733
  %gp_offset_p3391 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1833, i32 0, i32 0, !dbg !5733
  %gp_offset3392 = load i32, i32* %gp_offset_p3391, align 8, !dbg !5733
  %fits_in_gp3393 = icmp ule i32 %gp_offset3392, 40, !dbg !5733
  br i1 %fits_in_gp3393, label %vaarg.in_reg3394, label %vaarg.in_mem3396, !dbg !5733

vaarg.in_reg3394:                                 ; preds = %sw.bb3390
  %1834 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1833, i32 0, i32 3, !dbg !5734
  %reg_save_area3395 = load i8*, i8** %1834, align 8, !dbg !5734
  %1835 = getelementptr i8, i8* %reg_save_area3395, i32 %gp_offset3392, !dbg !5734
  %1836 = bitcast i8* %1835 to i32 (i8*, i8*, i8*)**, !dbg !5734
  %1837 = add i32 %gp_offset3392, 8, !dbg !5734
  store i32 %1837, i32* %gp_offset_p3391, align 8, !dbg !5734
  br label %vaarg.end3400, !dbg !5734

vaarg.in_mem3396:                                 ; preds = %sw.bb3390
  %overflow_arg_area_p3397 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1833, i32 0, i32 2, !dbg !5735
  %overflow_arg_area3398 = load i8*, i8** %overflow_arg_area_p3397, align 8, !dbg !5735
  %1838 = bitcast i8* %overflow_arg_area3398 to i32 (i8*, i8*, i8*)**, !dbg !5735
  %overflow_arg_area.next3399 = getelementptr i8, i8* %overflow_arg_area3398, i32 8, !dbg !5735
  store i8* %overflow_arg_area.next3399, i8** %overflow_arg_area_p3397, align 8, !dbg !5735
  br label %vaarg.end3400, !dbg !5735

vaarg.end3400:                                    ; preds = %vaarg.in_mem3396, %vaarg.in_reg3394
  %vaarg.addr3401 = phi i32 (i8*, i8*, i8*)** [ %1836, %vaarg.in_reg3394 ], [ %1838, %vaarg.in_mem3396 ], !dbg !5736
  %1839 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %vaarg.addr3401, align 8, !dbg !5736
  %1840 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5737
  %set3402 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1840, i32 0, i32 13, !dbg !5738
  %fnmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3402, i32 0, i32 139, !dbg !5739
  store i32 (i8*, i8*, i8*)* %1839, i32 (i8*, i8*, i8*)** %fnmatch, align 8, !dbg !5740
  br label %sw.epilog3648, !dbg !5741

sw.bb3403:                                        ; preds = %entry
  %1841 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5742
  %gp_offset_p3404 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1841, i32 0, i32 0, !dbg !5742
  %gp_offset3405 = load i32, i32* %gp_offset_p3404, align 8, !dbg !5742
  %fits_in_gp3406 = icmp ule i32 %gp_offset3405, 40, !dbg !5742
  br i1 %fits_in_gp3406, label %vaarg.in_reg3407, label %vaarg.in_mem3409, !dbg !5742

vaarg.in_reg3407:                                 ; preds = %sw.bb3403
  %1842 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1841, i32 0, i32 3, !dbg !5743
  %reg_save_area3408 = load i8*, i8** %1842, align 8, !dbg !5743
  %1843 = getelementptr i8, i8* %reg_save_area3408, i32 %gp_offset3405, !dbg !5743
  %1844 = bitcast i8* %1843 to i8**, !dbg !5743
  %1845 = add i32 %gp_offset3405, 8, !dbg !5743
  store i32 %1845, i32* %gp_offset_p3404, align 8, !dbg !5743
  br label %vaarg.end3413, !dbg !5743

vaarg.in_mem3409:                                 ; preds = %sw.bb3403
  %overflow_arg_area_p3410 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1841, i32 0, i32 2, !dbg !5744
  %overflow_arg_area3411 = load i8*, i8** %overflow_arg_area_p3410, align 8, !dbg !5744
  %1846 = bitcast i8* %overflow_arg_area3411 to i8**, !dbg !5744
  %overflow_arg_area.next3412 = getelementptr i8, i8* %overflow_arg_area3411, i32 8, !dbg !5744
  store i8* %overflow_arg_area.next3412, i8** %overflow_arg_area_p3410, align 8, !dbg !5744
  br label %vaarg.end3413, !dbg !5744

vaarg.end3413:                                    ; preds = %vaarg.in_mem3409, %vaarg.in_reg3407
  %vaarg.addr3414 = phi i8** [ %1844, %vaarg.in_reg3407 ], [ %1846, %vaarg.in_mem3409 ], !dbg !5745
  %1847 = load i8*, i8** %vaarg.addr3414, align 8, !dbg !5745
  %1848 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5746
  %wildcard = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1848, i32 0, i32 18, !dbg !5747
  %customptr = getelementptr inbounds %struct.WildcardData, %struct.WildcardData* %wildcard, i32 0, i32 6, !dbg !5748
  store i8* %1847, i8** %customptr, align 8, !dbg !5749
  br label %sw.epilog3648, !dbg !5750

sw.bb3415:                                        ; preds = %entry
  %1849 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5751
  %gp_offset_p3416 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1849, i32 0, i32 0, !dbg !5751
  %gp_offset3417 = load i32, i32* %gp_offset_p3416, align 8, !dbg !5751
  %fits_in_gp3418 = icmp ule i32 %gp_offset3417, 40, !dbg !5751
  br i1 %fits_in_gp3418, label %vaarg.in_reg3419, label %vaarg.in_mem3421, !dbg !5751

vaarg.in_reg3419:                                 ; preds = %sw.bb3415
  %1850 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1849, i32 0, i32 3, !dbg !5752
  %reg_save_area3420 = load i8*, i8** %1850, align 8, !dbg !5752
  %1851 = getelementptr i8, i8* %reg_save_area3420, i32 %gp_offset3417, !dbg !5752
  %1852 = bitcast i8* %1851 to i8**, !dbg !5752
  %1853 = add i32 %gp_offset3417, 8, !dbg !5752
  store i32 %1853, i32* %gp_offset_p3416, align 8, !dbg !5752
  br label %vaarg.end3425, !dbg !5752

vaarg.in_mem3421:                                 ; preds = %sw.bb3415
  %overflow_arg_area_p3422 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1849, i32 0, i32 2, !dbg !5753
  %overflow_arg_area3423 = load i8*, i8** %overflow_arg_area_p3422, align 8, !dbg !5753
  %1854 = bitcast i8* %overflow_arg_area3423 to i8**, !dbg !5753
  %overflow_arg_area.next3424 = getelementptr i8, i8* %overflow_arg_area3423, i32 8, !dbg !5753
  store i8* %overflow_arg_area.next3424, i8** %overflow_arg_area_p3422, align 8, !dbg !5753
  br label %vaarg.end3425, !dbg !5753

vaarg.end3425:                                    ; preds = %vaarg.in_mem3421, %vaarg.in_reg3419
  %vaarg.addr3426 = phi i8** [ %1852, %vaarg.in_reg3419 ], [ %1854, %vaarg.in_mem3421 ], !dbg !5754
  %1855 = load i8*, i8** %vaarg.addr3426, align 8, !dbg !5754
  %1856 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5755
  %set3427 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1856, i32 0, i32 13, !dbg !5756
  %fnmatch_data = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3427, i32 0, i32 140, !dbg !5757
  store i8* %1855, i8** %fnmatch_data, align 8, !dbg !5758
  br label %sw.epilog3648, !dbg !5759

sw.bb3428:                                        ; preds = %entry
  %1857 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5760
  %1858 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5761
  %gp_offset_p3429 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1858, i32 0, i32 0, !dbg !5761
  %gp_offset3430 = load i32, i32* %gp_offset_p3429, align 8, !dbg !5761
  %fits_in_gp3431 = icmp ule i32 %gp_offset3430, 40, !dbg !5761
  br i1 %fits_in_gp3431, label %vaarg.in_reg3432, label %vaarg.in_mem3434, !dbg !5761

vaarg.in_reg3432:                                 ; preds = %sw.bb3428
  %1859 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1858, i32 0, i32 3, !dbg !5762
  %reg_save_area3433 = load i8*, i8** %1859, align 8, !dbg !5762
  %1860 = getelementptr i8, i8* %reg_save_area3433, i32 %gp_offset3430, !dbg !5762
  %1861 = bitcast i8* %1860 to i8**, !dbg !5762
  %1862 = add i32 %gp_offset3430, 8, !dbg !5762
  store i32 %1862, i32* %gp_offset_p3429, align 8, !dbg !5762
  br label %vaarg.end3438, !dbg !5762

vaarg.in_mem3434:                                 ; preds = %sw.bb3428
  %overflow_arg_area_p3435 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1858, i32 0, i32 2, !dbg !5763
  %overflow_arg_area3436 = load i8*, i8** %overflow_arg_area_p3435, align 8, !dbg !5763
  %1863 = bitcast i8* %overflow_arg_area3436 to i8**, !dbg !5763
  %overflow_arg_area.next3437 = getelementptr i8, i8* %overflow_arg_area3436, i32 8, !dbg !5763
  store i8* %overflow_arg_area.next3437, i8** %overflow_arg_area_p3435, align 8, !dbg !5763
  br label %vaarg.end3438, !dbg !5763

vaarg.end3438:                                    ; preds = %vaarg.in_mem3434, %vaarg.in_reg3432
  %vaarg.addr3439 = phi i8** [ %1861, %vaarg.in_reg3432 ], [ %1863, %vaarg.in_mem3434 ], !dbg !5764
  %1864 = load i8*, i8** %vaarg.addr3439, align 8, !dbg !5764
  %call3440 = call i32 @Curl_set_dns_servers(%struct.Curl_easy* %1857, i8* %1864), !dbg !5765
  store i32 %call3440, i32* %result, align 4, !dbg !5766
  br label %sw.epilog3648, !dbg !5767

sw.bb3441:                                        ; preds = %entry
  %1865 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5768
  %1866 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5769
  %gp_offset_p3442 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1866, i32 0, i32 0, !dbg !5769
  %gp_offset3443 = load i32, i32* %gp_offset_p3442, align 8, !dbg !5769
  %fits_in_gp3444 = icmp ule i32 %gp_offset3443, 40, !dbg !5769
  br i1 %fits_in_gp3444, label %vaarg.in_reg3445, label %vaarg.in_mem3447, !dbg !5769

vaarg.in_reg3445:                                 ; preds = %sw.bb3441
  %1867 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1866, i32 0, i32 3, !dbg !5770
  %reg_save_area3446 = load i8*, i8** %1867, align 8, !dbg !5770
  %1868 = getelementptr i8, i8* %reg_save_area3446, i32 %gp_offset3443, !dbg !5770
  %1869 = bitcast i8* %1868 to i8**, !dbg !5770
  %1870 = add i32 %gp_offset3443, 8, !dbg !5770
  store i32 %1870, i32* %gp_offset_p3442, align 8, !dbg !5770
  br label %vaarg.end3451, !dbg !5770

vaarg.in_mem3447:                                 ; preds = %sw.bb3441
  %overflow_arg_area_p3448 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1866, i32 0, i32 2, !dbg !5771
  %overflow_arg_area3449 = load i8*, i8** %overflow_arg_area_p3448, align 8, !dbg !5771
  %1871 = bitcast i8* %overflow_arg_area3449 to i8**, !dbg !5771
  %overflow_arg_area.next3450 = getelementptr i8, i8* %overflow_arg_area3449, i32 8, !dbg !5771
  store i8* %overflow_arg_area.next3450, i8** %overflow_arg_area_p3448, align 8, !dbg !5771
  br label %vaarg.end3451, !dbg !5771

vaarg.end3451:                                    ; preds = %vaarg.in_mem3447, %vaarg.in_reg3445
  %vaarg.addr3452 = phi i8** [ %1869, %vaarg.in_reg3445 ], [ %1871, %vaarg.in_mem3447 ], !dbg !5772
  %1872 = load i8*, i8** %vaarg.addr3452, align 8, !dbg !5772
  %call3453 = call i32 @Curl_set_dns_interface(%struct.Curl_easy* %1865, i8* %1872), !dbg !5773
  store i32 %call3453, i32* %result, align 4, !dbg !5774
  br label %sw.epilog3648, !dbg !5775

sw.bb3454:                                        ; preds = %entry
  %1873 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5776
  %1874 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5777
  %gp_offset_p3455 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1874, i32 0, i32 0, !dbg !5777
  %gp_offset3456 = load i32, i32* %gp_offset_p3455, align 8, !dbg !5777
  %fits_in_gp3457 = icmp ule i32 %gp_offset3456, 40, !dbg !5777
  br i1 %fits_in_gp3457, label %vaarg.in_reg3458, label %vaarg.in_mem3460, !dbg !5777

vaarg.in_reg3458:                                 ; preds = %sw.bb3454
  %1875 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1874, i32 0, i32 3, !dbg !5778
  %reg_save_area3459 = load i8*, i8** %1875, align 8, !dbg !5778
  %1876 = getelementptr i8, i8* %reg_save_area3459, i32 %gp_offset3456, !dbg !5778
  %1877 = bitcast i8* %1876 to i8**, !dbg !5778
  %1878 = add i32 %gp_offset3456, 8, !dbg !5778
  store i32 %1878, i32* %gp_offset_p3455, align 8, !dbg !5778
  br label %vaarg.end3464, !dbg !5778

vaarg.in_mem3460:                                 ; preds = %sw.bb3454
  %overflow_arg_area_p3461 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1874, i32 0, i32 2, !dbg !5779
  %overflow_arg_area3462 = load i8*, i8** %overflow_arg_area_p3461, align 8, !dbg !5779
  %1879 = bitcast i8* %overflow_arg_area3462 to i8**, !dbg !5779
  %overflow_arg_area.next3463 = getelementptr i8, i8* %overflow_arg_area3462, i32 8, !dbg !5779
  store i8* %overflow_arg_area.next3463, i8** %overflow_arg_area_p3461, align 8, !dbg !5779
  br label %vaarg.end3464, !dbg !5779

vaarg.end3464:                                    ; preds = %vaarg.in_mem3460, %vaarg.in_reg3458
  %vaarg.addr3465 = phi i8** [ %1877, %vaarg.in_reg3458 ], [ %1879, %vaarg.in_mem3460 ], !dbg !5780
  %1880 = load i8*, i8** %vaarg.addr3465, align 8, !dbg !5780
  %call3466 = call i32 @Curl_set_dns_local_ip4(%struct.Curl_easy* %1873, i8* %1880), !dbg !5781
  store i32 %call3466, i32* %result, align 4, !dbg !5782
  br label %sw.epilog3648, !dbg !5783

sw.bb3467:                                        ; preds = %entry
  %1881 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5784
  %1882 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5785
  %gp_offset_p3468 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1882, i32 0, i32 0, !dbg !5785
  %gp_offset3469 = load i32, i32* %gp_offset_p3468, align 8, !dbg !5785
  %fits_in_gp3470 = icmp ule i32 %gp_offset3469, 40, !dbg !5785
  br i1 %fits_in_gp3470, label %vaarg.in_reg3471, label %vaarg.in_mem3473, !dbg !5785

vaarg.in_reg3471:                                 ; preds = %sw.bb3467
  %1883 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1882, i32 0, i32 3, !dbg !5786
  %reg_save_area3472 = load i8*, i8** %1883, align 8, !dbg !5786
  %1884 = getelementptr i8, i8* %reg_save_area3472, i32 %gp_offset3469, !dbg !5786
  %1885 = bitcast i8* %1884 to i8**, !dbg !5786
  %1886 = add i32 %gp_offset3469, 8, !dbg !5786
  store i32 %1886, i32* %gp_offset_p3468, align 8, !dbg !5786
  br label %vaarg.end3477, !dbg !5786

vaarg.in_mem3473:                                 ; preds = %sw.bb3467
  %overflow_arg_area_p3474 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1882, i32 0, i32 2, !dbg !5787
  %overflow_arg_area3475 = load i8*, i8** %overflow_arg_area_p3474, align 8, !dbg !5787
  %1887 = bitcast i8* %overflow_arg_area3475 to i8**, !dbg !5787
  %overflow_arg_area.next3476 = getelementptr i8, i8* %overflow_arg_area3475, i32 8, !dbg !5787
  store i8* %overflow_arg_area.next3476, i8** %overflow_arg_area_p3474, align 8, !dbg !5787
  br label %vaarg.end3477, !dbg !5787

vaarg.end3477:                                    ; preds = %vaarg.in_mem3473, %vaarg.in_reg3471
  %vaarg.addr3478 = phi i8** [ %1885, %vaarg.in_reg3471 ], [ %1887, %vaarg.in_mem3473 ], !dbg !5788
  %1888 = load i8*, i8** %vaarg.addr3478, align 8, !dbg !5788
  %call3479 = call i32 @Curl_set_dns_local_ip6(%struct.Curl_easy* %1881, i8* %1888), !dbg !5789
  store i32 %call3479, i32* %result, align 4, !dbg !5790
  br label %sw.epilog3648, !dbg !5791

sw.bb3480:                                        ; preds = %entry
  %1889 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5792
  %gp_offset_p3481 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1889, i32 0, i32 0, !dbg !5792
  %gp_offset3482 = load i32, i32* %gp_offset_p3481, align 8, !dbg !5792
  %fits_in_gp3483 = icmp ule i32 %gp_offset3482, 40, !dbg !5792
  br i1 %fits_in_gp3483, label %vaarg.in_reg3484, label %vaarg.in_mem3486, !dbg !5792

vaarg.in_reg3484:                                 ; preds = %sw.bb3480
  %1890 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1889, i32 0, i32 3, !dbg !5793
  %reg_save_area3485 = load i8*, i8** %1890, align 8, !dbg !5793
  %1891 = getelementptr i8, i8* %reg_save_area3485, i32 %gp_offset3482, !dbg !5793
  %1892 = bitcast i8* %1891 to i64*, !dbg !5793
  %1893 = add i32 %gp_offset3482, 8, !dbg !5793
  store i32 %1893, i32* %gp_offset_p3481, align 8, !dbg !5793
  br label %vaarg.end3490, !dbg !5793

vaarg.in_mem3486:                                 ; preds = %sw.bb3480
  %overflow_arg_area_p3487 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1889, i32 0, i32 2, !dbg !5794
  %overflow_arg_area3488 = load i8*, i8** %overflow_arg_area_p3487, align 8, !dbg !5794
  %1894 = bitcast i8* %overflow_arg_area3488 to i64*, !dbg !5794
  %overflow_arg_area.next3489 = getelementptr i8, i8* %overflow_arg_area3488, i32 8, !dbg !5794
  store i8* %overflow_arg_area.next3489, i8** %overflow_arg_area_p3487, align 8, !dbg !5794
  br label %vaarg.end3490, !dbg !5794

vaarg.end3490:                                    ; preds = %vaarg.in_mem3486, %vaarg.in_reg3484
  %vaarg.addr3491 = phi i64* [ %1892, %vaarg.in_reg3484 ], [ %1894, %vaarg.in_mem3486 ], !dbg !5795
  %1895 = load i64, i64* %vaarg.addr3491, align 8, !dbg !5795
  %cmp3492 = icmp ne i64 0, %1895, !dbg !5796
  %cond3494 = select i1 %cmp3492, i32 1, i32 0, !dbg !5797
  %tobool3495 = icmp ne i32 %cond3494, 0, !dbg !5797
  %1896 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5798
  %set3496 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1896, i32 0, i32 13, !dbg !5799
  %tcp_keepalive = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3496, i32 0, i32 142, !dbg !5800
  %frombool3497 = zext i1 %tobool3495 to i8, !dbg !5801
  store i8 %frombool3497, i8* %tcp_keepalive, align 8, !dbg !5801
  br label %sw.epilog3648, !dbg !5802

sw.bb3498:                                        ; preds = %entry
  %1897 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5803
  %gp_offset_p3499 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1897, i32 0, i32 0, !dbg !5803
  %gp_offset3500 = load i32, i32* %gp_offset_p3499, align 8, !dbg !5803
  %fits_in_gp3501 = icmp ule i32 %gp_offset3500, 40, !dbg !5803
  br i1 %fits_in_gp3501, label %vaarg.in_reg3502, label %vaarg.in_mem3504, !dbg !5803

vaarg.in_reg3502:                                 ; preds = %sw.bb3498
  %1898 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1897, i32 0, i32 3, !dbg !5804
  %reg_save_area3503 = load i8*, i8** %1898, align 8, !dbg !5804
  %1899 = getelementptr i8, i8* %reg_save_area3503, i32 %gp_offset3500, !dbg !5804
  %1900 = bitcast i8* %1899 to i64*, !dbg !5804
  %1901 = add i32 %gp_offset3500, 8, !dbg !5804
  store i32 %1901, i32* %gp_offset_p3499, align 8, !dbg !5804
  br label %vaarg.end3508, !dbg !5804

vaarg.in_mem3504:                                 ; preds = %sw.bb3498
  %overflow_arg_area_p3505 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1897, i32 0, i32 2, !dbg !5805
  %overflow_arg_area3506 = load i8*, i8** %overflow_arg_area_p3505, align 8, !dbg !5805
  %1902 = bitcast i8* %overflow_arg_area3506 to i64*, !dbg !5805
  %overflow_arg_area.next3507 = getelementptr i8, i8* %overflow_arg_area3506, i32 8, !dbg !5805
  store i8* %overflow_arg_area.next3507, i8** %overflow_arg_area_p3505, align 8, !dbg !5805
  br label %vaarg.end3508, !dbg !5805

vaarg.end3508:                                    ; preds = %vaarg.in_mem3504, %vaarg.in_reg3502
  %vaarg.addr3509 = phi i64* [ %1900, %vaarg.in_reg3502 ], [ %1902, %vaarg.in_mem3504 ], !dbg !5806
  %1903 = load i64, i64* %vaarg.addr3509, align 8, !dbg !5806
  %1904 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5807
  %set3510 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1904, i32 0, i32 13, !dbg !5808
  %tcp_keepidle = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3510, i32 0, i32 143, !dbg !5809
  store i64 %1903, i64* %tcp_keepidle, align 8, !dbg !5810
  br label %sw.epilog3648, !dbg !5811

sw.bb3511:                                        ; preds = %entry
  %1905 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5812
  %gp_offset_p3512 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1905, i32 0, i32 0, !dbg !5812
  %gp_offset3513 = load i32, i32* %gp_offset_p3512, align 8, !dbg !5812
  %fits_in_gp3514 = icmp ule i32 %gp_offset3513, 40, !dbg !5812
  br i1 %fits_in_gp3514, label %vaarg.in_reg3515, label %vaarg.in_mem3517, !dbg !5812

vaarg.in_reg3515:                                 ; preds = %sw.bb3511
  %1906 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1905, i32 0, i32 3, !dbg !5813
  %reg_save_area3516 = load i8*, i8** %1906, align 8, !dbg !5813
  %1907 = getelementptr i8, i8* %reg_save_area3516, i32 %gp_offset3513, !dbg !5813
  %1908 = bitcast i8* %1907 to i64*, !dbg !5813
  %1909 = add i32 %gp_offset3513, 8, !dbg !5813
  store i32 %1909, i32* %gp_offset_p3512, align 8, !dbg !5813
  br label %vaarg.end3521, !dbg !5813

vaarg.in_mem3517:                                 ; preds = %sw.bb3511
  %overflow_arg_area_p3518 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1905, i32 0, i32 2, !dbg !5814
  %overflow_arg_area3519 = load i8*, i8** %overflow_arg_area_p3518, align 8, !dbg !5814
  %1910 = bitcast i8* %overflow_arg_area3519 to i64*, !dbg !5814
  %overflow_arg_area.next3520 = getelementptr i8, i8* %overflow_arg_area3519, i32 8, !dbg !5814
  store i8* %overflow_arg_area.next3520, i8** %overflow_arg_area_p3518, align 8, !dbg !5814
  br label %vaarg.end3521, !dbg !5814

vaarg.end3521:                                    ; preds = %vaarg.in_mem3517, %vaarg.in_reg3515
  %vaarg.addr3522 = phi i64* [ %1908, %vaarg.in_reg3515 ], [ %1910, %vaarg.in_mem3517 ], !dbg !5815
  %1911 = load i64, i64* %vaarg.addr3522, align 8, !dbg !5815
  %1912 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5816
  %set3523 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1912, i32 0, i32 13, !dbg !5817
  %tcp_keepintvl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3523, i32 0, i32 144, !dbg !5818
  store i64 %1911, i64* %tcp_keepintvl, align 8, !dbg !5819
  br label %sw.epilog3648, !dbg !5820

sw.bb3524:                                        ; preds = %entry
  %1913 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5821
  %gp_offset_p3525 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1913, i32 0, i32 0, !dbg !5821
  %gp_offset3526 = load i32, i32* %gp_offset_p3525, align 8, !dbg !5821
  %fits_in_gp3527 = icmp ule i32 %gp_offset3526, 40, !dbg !5821
  br i1 %fits_in_gp3527, label %vaarg.in_reg3528, label %vaarg.in_mem3530, !dbg !5821

vaarg.in_reg3528:                                 ; preds = %sw.bb3524
  %1914 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1913, i32 0, i32 3, !dbg !5822
  %reg_save_area3529 = load i8*, i8** %1914, align 8, !dbg !5822
  %1915 = getelementptr i8, i8* %reg_save_area3529, i32 %gp_offset3526, !dbg !5822
  %1916 = bitcast i8* %1915 to i64*, !dbg !5822
  %1917 = add i32 %gp_offset3526, 8, !dbg !5822
  store i32 %1917, i32* %gp_offset_p3525, align 8, !dbg !5822
  br label %vaarg.end3534, !dbg !5822

vaarg.in_mem3530:                                 ; preds = %sw.bb3524
  %overflow_arg_area_p3531 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1913, i32 0, i32 2, !dbg !5823
  %overflow_arg_area3532 = load i8*, i8** %overflow_arg_area_p3531, align 8, !dbg !5823
  %1918 = bitcast i8* %overflow_arg_area3532 to i64*, !dbg !5823
  %overflow_arg_area.next3533 = getelementptr i8, i8* %overflow_arg_area3532, i32 8, !dbg !5823
  store i8* %overflow_arg_area.next3533, i8** %overflow_arg_area_p3531, align 8, !dbg !5823
  br label %vaarg.end3534, !dbg !5823

vaarg.end3534:                                    ; preds = %vaarg.in_mem3530, %vaarg.in_reg3528
  %vaarg.addr3535 = phi i64* [ %1916, %vaarg.in_reg3528 ], [ %1918, %vaarg.in_mem3530 ], !dbg !5824
  %1919 = load i64, i64* %vaarg.addr3535, align 8, !dbg !5824
  %cmp3536 = icmp ne i64 0, %1919, !dbg !5825
  %cond3538 = select i1 %cmp3536, i32 1, i32 0, !dbg !5826
  %tobool3539 = icmp ne i32 %cond3538, 0, !dbg !5826
  %1920 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5827
  %set3540 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1920, i32 0, i32 13, !dbg !5828
  %tcp_fastopen = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3540, i32 0, i32 145, !dbg !5829
  %frombool3541 = zext i1 %tobool3539 to i8, !dbg !5830
  store i8 %frombool3541, i8* %tcp_fastopen, align 8, !dbg !5830
  br label %sw.epilog3648, !dbg !5831

sw.bb3542:                                        ; preds = %entry
  %1921 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5832
  %gp_offset_p3543 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1921, i32 0, i32 0, !dbg !5832
  %gp_offset3544 = load i32, i32* %gp_offset_p3543, align 8, !dbg !5832
  %fits_in_gp3545 = icmp ule i32 %gp_offset3544, 40, !dbg !5832
  br i1 %fits_in_gp3545, label %vaarg.in_reg3546, label %vaarg.in_mem3548, !dbg !5832

vaarg.in_reg3546:                                 ; preds = %sw.bb3542
  %1922 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1921, i32 0, i32 3, !dbg !5833
  %reg_save_area3547 = load i8*, i8** %1922, align 8, !dbg !5833
  %1923 = getelementptr i8, i8* %reg_save_area3547, i32 %gp_offset3544, !dbg !5833
  %1924 = bitcast i8* %1923 to i64*, !dbg !5833
  %1925 = add i32 %gp_offset3544, 8, !dbg !5833
  store i32 %1925, i32* %gp_offset_p3543, align 8, !dbg !5833
  br label %vaarg.end3552, !dbg !5833

vaarg.in_mem3548:                                 ; preds = %sw.bb3542
  %overflow_arg_area_p3549 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1921, i32 0, i32 2, !dbg !5834
  %overflow_arg_area3550 = load i8*, i8** %overflow_arg_area_p3549, align 8, !dbg !5834
  %1926 = bitcast i8* %overflow_arg_area3550 to i64*, !dbg !5834
  %overflow_arg_area.next3551 = getelementptr i8, i8* %overflow_arg_area3550, i32 8, !dbg !5834
  store i8* %overflow_arg_area.next3551, i8** %overflow_arg_area_p3549, align 8, !dbg !5834
  br label %vaarg.end3552, !dbg !5834

vaarg.end3552:                                    ; preds = %vaarg.in_mem3548, %vaarg.in_reg3546
  %vaarg.addr3553 = phi i64* [ %1924, %vaarg.in_reg3546 ], [ %1926, %vaarg.in_mem3548 ], !dbg !5835
  %1927 = load i64, i64* %vaarg.addr3553, align 8, !dbg !5835
  %cmp3554 = icmp ne i64 0, %1927, !dbg !5836
  %cond3556 = select i1 %cmp3554, i32 1, i32 0, !dbg !5837
  %tobool3557 = icmp ne i32 %cond3556, 0, !dbg !5837
  %1928 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5838
  %set3558 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1928, i32 0, i32 13, !dbg !5839
  %ssl_enable_npn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3558, i32 0, i32 147, !dbg !5840
  %frombool3559 = zext i1 %tobool3557 to i8, !dbg !5841
  store i8 %frombool3559, i8* %ssl_enable_npn, align 8, !dbg !5841
  br label %sw.epilog3648, !dbg !5842

sw.bb3560:                                        ; preds = %entry
  %1929 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5843
  %gp_offset_p3561 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1929, i32 0, i32 0, !dbg !5843
  %gp_offset3562 = load i32, i32* %gp_offset_p3561, align 8, !dbg !5843
  %fits_in_gp3563 = icmp ule i32 %gp_offset3562, 40, !dbg !5843
  br i1 %fits_in_gp3563, label %vaarg.in_reg3564, label %vaarg.in_mem3566, !dbg !5843

vaarg.in_reg3564:                                 ; preds = %sw.bb3560
  %1930 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1929, i32 0, i32 3, !dbg !5844
  %reg_save_area3565 = load i8*, i8** %1930, align 8, !dbg !5844
  %1931 = getelementptr i8, i8* %reg_save_area3565, i32 %gp_offset3562, !dbg !5844
  %1932 = bitcast i8* %1931 to i64*, !dbg !5844
  %1933 = add i32 %gp_offset3562, 8, !dbg !5844
  store i32 %1933, i32* %gp_offset_p3561, align 8, !dbg !5844
  br label %vaarg.end3570, !dbg !5844

vaarg.in_mem3566:                                 ; preds = %sw.bb3560
  %overflow_arg_area_p3567 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1929, i32 0, i32 2, !dbg !5845
  %overflow_arg_area3568 = load i8*, i8** %overflow_arg_area_p3567, align 8, !dbg !5845
  %1934 = bitcast i8* %overflow_arg_area3568 to i64*, !dbg !5845
  %overflow_arg_area.next3569 = getelementptr i8, i8* %overflow_arg_area3568, i32 8, !dbg !5845
  store i8* %overflow_arg_area.next3569, i8** %overflow_arg_area_p3567, align 8, !dbg !5845
  br label %vaarg.end3570, !dbg !5845

vaarg.end3570:                                    ; preds = %vaarg.in_mem3566, %vaarg.in_reg3564
  %vaarg.addr3571 = phi i64* [ %1932, %vaarg.in_reg3564 ], [ %1934, %vaarg.in_mem3566 ], !dbg !5846
  %1935 = load i64, i64* %vaarg.addr3571, align 8, !dbg !5846
  %cmp3572 = icmp ne i64 0, %1935, !dbg !5847
  %cond3574 = select i1 %cmp3572, i32 1, i32 0, !dbg !5848
  %tobool3575 = icmp ne i32 %cond3574, 0, !dbg !5848
  %1936 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5849
  %set3576 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1936, i32 0, i32 13, !dbg !5850
  %ssl_enable_alpn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3576, i32 0, i32 148, !dbg !5851
  %frombool3577 = zext i1 %tobool3575 to i8, !dbg !5852
  store i8 %frombool3577, i8* %ssl_enable_alpn, align 1, !dbg !5852
  br label %sw.epilog3648, !dbg !5853

sw.bb3578:                                        ; preds = %entry
  %1937 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5854
  %gp_offset_p3579 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1937, i32 0, i32 0, !dbg !5854
  %gp_offset3580 = load i32, i32* %gp_offset_p3579, align 8, !dbg !5854
  %fits_in_gp3581 = icmp ule i32 %gp_offset3580, 40, !dbg !5854
  br i1 %fits_in_gp3581, label %vaarg.in_reg3582, label %vaarg.in_mem3584, !dbg !5854

vaarg.in_reg3582:                                 ; preds = %sw.bb3578
  %1938 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1937, i32 0, i32 3, !dbg !5855
  %reg_save_area3583 = load i8*, i8** %1938, align 8, !dbg !5855
  %1939 = getelementptr i8, i8* %reg_save_area3583, i32 %gp_offset3580, !dbg !5855
  %1940 = bitcast i8* %1939 to i64*, !dbg !5855
  %1941 = add i32 %gp_offset3580, 8, !dbg !5855
  store i32 %1941, i32* %gp_offset_p3579, align 8, !dbg !5855
  br label %vaarg.end3588, !dbg !5855

vaarg.in_mem3584:                                 ; preds = %sw.bb3578
  %overflow_arg_area_p3585 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1937, i32 0, i32 2, !dbg !5856
  %overflow_arg_area3586 = load i8*, i8** %overflow_arg_area_p3585, align 8, !dbg !5856
  %1942 = bitcast i8* %overflow_arg_area3586 to i64*, !dbg !5856
  %overflow_arg_area.next3587 = getelementptr i8, i8* %overflow_arg_area3586, i32 8, !dbg !5856
  store i8* %overflow_arg_area.next3587, i8** %overflow_arg_area_p3585, align 8, !dbg !5856
  br label %vaarg.end3588, !dbg !5856

vaarg.end3588:                                    ; preds = %vaarg.in_mem3584, %vaarg.in_reg3582
  %vaarg.addr3589 = phi i64* [ %1940, %vaarg.in_reg3582 ], [ %1942, %vaarg.in_mem3584 ], !dbg !5857
  %1943 = load i64, i64* %vaarg.addr3589, align 8, !dbg !5857
  %cmp3590 = icmp ne i64 0, %1943, !dbg !5858
  %cond3592 = select i1 %cmp3590, i32 1, i32 0, !dbg !5859
  %tobool3593 = icmp ne i32 %cond3592, 0, !dbg !5859
  %1944 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5860
  %set3594 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1944, i32 0, i32 13, !dbg !5861
  %path_as_is = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3594, i32 0, i32 149, !dbg !5862
  %frombool3595 = zext i1 %tobool3593 to i8, !dbg !5863
  store i8 %frombool3595, i8* %path_as_is, align 2, !dbg !5863
  br label %sw.epilog3648, !dbg !5864

sw.bb3596:                                        ; preds = %entry
  %1945 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5865
  %gp_offset_p3597 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1945, i32 0, i32 0, !dbg !5865
  %gp_offset3598 = load i32, i32* %gp_offset_p3597, align 8, !dbg !5865
  %fits_in_gp3599 = icmp ule i32 %gp_offset3598, 40, !dbg !5865
  br i1 %fits_in_gp3599, label %vaarg.in_reg3600, label %vaarg.in_mem3602, !dbg !5865

vaarg.in_reg3600:                                 ; preds = %sw.bb3596
  %1946 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1945, i32 0, i32 3, !dbg !5866
  %reg_save_area3601 = load i8*, i8** %1946, align 8, !dbg !5866
  %1947 = getelementptr i8, i8* %reg_save_area3601, i32 %gp_offset3598, !dbg !5866
  %1948 = bitcast i8* %1947 to i64*, !dbg !5866
  %1949 = add i32 %gp_offset3598, 8, !dbg !5866
  store i32 %1949, i32* %gp_offset_p3597, align 8, !dbg !5866
  br label %vaarg.end3606, !dbg !5866

vaarg.in_mem3602:                                 ; preds = %sw.bb3596
  %overflow_arg_area_p3603 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1945, i32 0, i32 2, !dbg !5867
  %overflow_arg_area3604 = load i8*, i8** %overflow_arg_area_p3603, align 8, !dbg !5867
  %1950 = bitcast i8* %overflow_arg_area3604 to i64*, !dbg !5867
  %overflow_arg_area.next3605 = getelementptr i8, i8* %overflow_arg_area3604, i32 8, !dbg !5867
  store i8* %overflow_arg_area.next3605, i8** %overflow_arg_area_p3603, align 8, !dbg !5867
  br label %vaarg.end3606, !dbg !5867

vaarg.end3606:                                    ; preds = %vaarg.in_mem3602, %vaarg.in_reg3600
  %vaarg.addr3607 = phi i64* [ %1948, %vaarg.in_reg3600 ], [ %1950, %vaarg.in_mem3602 ], !dbg !5868
  %1951 = load i64, i64* %vaarg.addr3607, align 8, !dbg !5868
  %cmp3608 = icmp ne i64 0, %1951, !dbg !5869
  %cond3610 = select i1 %cmp3608, i32 1, i32 0, !dbg !5870
  %tobool3611 = icmp ne i32 %cond3610, 0, !dbg !5870
  %1952 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5871
  %set3612 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1952, i32 0, i32 13, !dbg !5872
  %pipewait = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3612, i32 0, i32 150, !dbg !5873
  %frombool3613 = zext i1 %tobool3611 to i8, !dbg !5874
  store i8 %frombool3613, i8* %pipewait, align 1, !dbg !5874
  br label %sw.epilog3648, !dbg !5875

sw.bb3614:                                        ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !5876
  br label %return, !dbg !5876

sw.bb3615:                                        ; preds = %entry, %entry
  store i32 4, i32* %retval, align 4, !dbg !5877
  br label %return, !dbg !5877

sw.bb3616:                                        ; preds = %entry
  %1953 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5879
  %gp_offset_p3617 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1953, i32 0, i32 0, !dbg !5879
  %gp_offset3618 = load i32, i32* %gp_offset_p3617, align 8, !dbg !5879
  %fits_in_gp3619 = icmp ule i32 %gp_offset3618, 40, !dbg !5879
  br i1 %fits_in_gp3619, label %vaarg.in_reg3620, label %vaarg.in_mem3622, !dbg !5879

vaarg.in_reg3620:                                 ; preds = %sw.bb3616
  %1954 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1953, i32 0, i32 3, !dbg !5880
  %reg_save_area3621 = load i8*, i8** %1954, align 8, !dbg !5880
  %1955 = getelementptr i8, i8* %reg_save_area3621, i32 %gp_offset3618, !dbg !5880
  %1956 = bitcast i8* %1955 to %struct.curl_slist**, !dbg !5880
  %1957 = add i32 %gp_offset3618, 8, !dbg !5880
  store i32 %1957, i32* %gp_offset_p3617, align 8, !dbg !5880
  br label %vaarg.end3626, !dbg !5880

vaarg.in_mem3622:                                 ; preds = %sw.bb3616
  %overflow_arg_area_p3623 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1953, i32 0, i32 2, !dbg !5881
  %overflow_arg_area3624 = load i8*, i8** %overflow_arg_area_p3623, align 8, !dbg !5881
  %1958 = bitcast i8* %overflow_arg_area3624 to %struct.curl_slist**, !dbg !5881
  %overflow_arg_area.next3625 = getelementptr i8, i8* %overflow_arg_area3624, i32 8, !dbg !5881
  store i8* %overflow_arg_area.next3625, i8** %overflow_arg_area_p3623, align 8, !dbg !5881
  br label %vaarg.end3626, !dbg !5881

vaarg.end3626:                                    ; preds = %vaarg.in_mem3622, %vaarg.in_reg3620
  %vaarg.addr3627 = phi %struct.curl_slist** [ %1956, %vaarg.in_reg3620 ], [ %1958, %vaarg.in_mem3622 ], !dbg !5882
  %1959 = load %struct.curl_slist*, %struct.curl_slist** %vaarg.addr3627, align 8, !dbg !5882
  %1960 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5883
  %set3628 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1960, i32 0, i32 13, !dbg !5884
  %connect_to = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3628, i32 0, i32 68, !dbg !5885
  store %struct.curl_slist* %1959, %struct.curl_slist** %connect_to, align 8, !dbg !5886
  br label %sw.epilog3648, !dbg !5887

sw.bb3629:                                        ; preds = %entry
  %1961 = load %struct.__va_list_tag*, %struct.__va_list_tag** %param.addr, align 8, !dbg !5888
  %gp_offset_p3630 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1961, i32 0, i32 0, !dbg !5888
  %gp_offset3631 = load i32, i32* %gp_offset_p3630, align 8, !dbg !5888
  %fits_in_gp3632 = icmp ule i32 %gp_offset3631, 40, !dbg !5888
  br i1 %fits_in_gp3632, label %vaarg.in_reg3633, label %vaarg.in_mem3635, !dbg !5888

vaarg.in_reg3633:                                 ; preds = %sw.bb3629
  %1962 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1961, i32 0, i32 3, !dbg !5889
  %reg_save_area3634 = load i8*, i8** %1962, align 8, !dbg !5889
  %1963 = getelementptr i8, i8* %reg_save_area3634, i32 %gp_offset3631, !dbg !5889
  %1964 = bitcast i8* %1963 to i64*, !dbg !5889
  %1965 = add i32 %gp_offset3631, 8, !dbg !5889
  store i32 %1965, i32* %gp_offset_p3630, align 8, !dbg !5889
  br label %vaarg.end3639, !dbg !5889

vaarg.in_mem3635:                                 ; preds = %sw.bb3629
  %overflow_arg_area_p3636 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1961, i32 0, i32 2, !dbg !5890
  %overflow_arg_area3637 = load i8*, i8** %overflow_arg_area_p3636, align 8, !dbg !5890
  %1966 = bitcast i8* %overflow_arg_area3637 to i64*, !dbg !5890
  %overflow_arg_area.next3638 = getelementptr i8, i8* %overflow_arg_area3637, i32 8, !dbg !5890
  store i8* %overflow_arg_area.next3638, i8** %overflow_arg_area_p3636, align 8, !dbg !5890
  br label %vaarg.end3639, !dbg !5890

vaarg.end3639:                                    ; preds = %vaarg.in_mem3635, %vaarg.in_reg3633
  %vaarg.addr3640 = phi i64* [ %1964, %vaarg.in_reg3633 ], [ %1966, %vaarg.in_mem3635 ], !dbg !5891
  %1967 = load i64, i64* %vaarg.addr3640, align 8, !dbg !5891
  %cmp3641 = icmp ne i64 0, %1967, !dbg !5892
  %cond3643 = select i1 %cmp3641, i32 1, i32 0, !dbg !5893
  %tobool3644 = icmp ne i32 %cond3643, 0, !dbg !5893
  %1968 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5894
  %set3645 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1968, i32 0, i32 13, !dbg !5895
  %suppress_connect_headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3645, i32 0, i32 152, !dbg !5896
  %frombool3646 = zext i1 %tobool3644 to i8, !dbg !5897
  store i8 %frombool3646, i8* %suppress_connect_headers, align 8, !dbg !5897
  br label %sw.epilog3648, !dbg !5898

sw.default3647:                                   ; preds = %entry
  store i32 48, i32* %result, align 4, !dbg !5899
  br label %sw.epilog3648, !dbg !5900

sw.epilog3648:                                    ; preds = %sw.default3647, %vaarg.end3639, %vaarg.end3626, %vaarg.end3606, %vaarg.end3588, %vaarg.end3570, %vaarg.end3552, %vaarg.end3534, %vaarg.end3521, %vaarg.end3508, %vaarg.end3490, %vaarg.end3477, %vaarg.end3464, %vaarg.end3451, %vaarg.end3438, %vaarg.end3425, %vaarg.end3413, %vaarg.end3400, %vaarg.end3387, %vaarg.end3374, %vaarg.end3356, %vaarg.end3343, %vaarg.end3330, %vaarg.end3316, %vaarg.end3303, %vaarg.end3290, %vaarg.end3274, %vaarg.end3258, %sw.epilog3242, %vaarg.end3210, %vaarg.end3197, %vaarg.end3184, %vaarg.end3168, %vaarg.end3152, %vaarg.end3136, %vaarg.end3123, %vaarg.end3109, %vaarg.end3096, %vaarg.end3083, %vaarg.end3065, %vaarg.end3047, %vaarg.end3017, %vaarg.end3004, %vaarg.end2991, %vaarg.end2978, %vaarg.end2965, %vaarg.end2952, %vaarg.end2939, %vaarg.end2926, %vaarg.end2905, %vaarg.end2887, %vaarg.end2874, %vaarg.end2853, %vaarg.end2839, %vaarg.end2826, %vaarg.end2812, %vaarg.end2799, %vaarg.end2786, %if.end2775, %vaarg.end2683, %if.end2672, %vaarg.end2621, %vaarg.end2608, %vaarg.end2592, %vaarg.end2576, %sw.bb2562, %sw.bb2561, %vaarg.end2558, %vaarg.end2542, %sw.bb2528, %sw.bb2527, %sw.bb2526, %sw.bb2525, %sw.bb2524, %sw.bb2523, %sw.bb2522, %if.end2512, %if.end2488, %vaarg.end2463, %vaarg.end2445, %vaarg.end2432, %vaarg.end2411, %vaarg.end2394, %vaarg.end2380, %vaarg.end2367, %vaarg.end2346, %sw.bb2335, %if.end2334, %vaarg.end2313, %vaarg.end2297, %vaarg.end2281, %vaarg.end2265, %vaarg.end2249, %vaarg.end2233, %vaarg.end2217, %vaarg.end2201, %vaarg.end2185, %vaarg.end2169, %vaarg.end2153, %vaarg.end2140, %vaarg.end2127, %vaarg.end2114, %vaarg.end2101, %vaarg.end2088, %vaarg.end2075, %if.end2064, %if.end2040, %vaarg.end2014, %if.end2003, %vaarg.end1981, %vaarg.end1968, %vaarg.end1954, %vaarg.end1941, %vaarg.end1928, %vaarg.end1912, %vaarg.end1896, %vaarg.end1880, %vaarg.end1858, %vaarg.end1845, %if.end1834, %if.end1811, %vaarg.end1783, %vaarg.end1770, %vaarg.end1757, %vaarg.end1744, %vaarg.end1731, %vaarg.end1715, %vaarg.end1699, %vaarg.end1683, %vaarg.end1661, %vaarg.end1648, %vaarg.end1634, %vaarg.end1620, %vaarg.end1606, %vaarg.end1592, %vaarg.end1579, %vaarg.end1561, %vaarg.end1534, %vaarg.end1521, %vaarg.end1508, %vaarg.end1495, %vaarg.end1481, %vaarg.end1468, %vaarg.end1455, %vaarg.end1437, %vaarg.end1423, %vaarg.end1405, %vaarg.end1387, %vaarg.end1369, %vaarg.end1348, %vaarg.end1332, %vaarg.end1319, %vaarg.end1306, %vaarg.end1293, %sw.epilog1279, %vaarg.end1257, %vaarg.end1244, %vaarg.end1228, %if.end1212, %if.then1179, %vaarg.end1159, %vaarg.end1141, %vaarg.end1128, %vaarg.end1112, %if.end1099, %if.then1074, %if.end1058, %if.end1042, %if.end1021, %if.then991, %if.then969, %vaarg.end946, %if.end934, %if.end912, %vaarg.end884, %vaarg.end868, %vaarg.end850, %vaarg.end837, %vaarg.end824, %vaarg.end811, %vaarg.end790, %vaarg.end762, %if.end749, %if.end715, %vaarg.end674, %if.end657, %if.end599, %vaarg.end573, %vaarg.end560, %vaarg.end542, %vaarg.end524, %vaarg.end506, %cond.end, %vaarg.end469, %sw.bb458, %sw.bb457, %vaarg.end454, %vaarg.end440, %vaarg.end422, %vaarg.end409, %vaarg.end392, %vaarg.end379, %vaarg.end362, %vaarg.end345, %vaarg.end332, %vaarg.end317, %vaarg.end304, %sw.epilog, %vaarg.end267, %if.end256, %vaarg.end222, %vaarg.end205, %vaarg.end188, %if.end, %vaarg.end149, %vaarg.end132, %vaarg.end115, %vaarg.end98, %vaarg.end85, %vaarg.end72, %vaarg.end56, %vaarg.end40, %vaarg.end25, %vaarg.end11, %vaarg.end
  %1969 = load i32, i32* %result, align 4, !dbg !5901
  store i32 %1969, i32* %retval, align 4, !dbg !5902
  br label %return, !dbg !5902

return:                                           ; preds = %sw.epilog3648, %sw.bb3615, %sw.bb3614, %if.then2511, %if.then2487, %if.then1211, %if.then1098, %if.then1057, %if.then904
  %1970 = load i32, i32* %retval, align 4, !dbg !5903
  ret i32 %1970, !dbg !5903
}

declare i32 @curlx_sltosi(i64) #3

declare %struct.curl_slist* @curl_slist_append(%struct.curl_slist*, i8*) #3

declare void @curl_slist_free_all(%struct.curl_slist*) #3

declare %struct.CookieInfo* @Curl_cookie_init(%struct.Curl_easy*, i8*, %struct.CookieInfo*, i1 zeroext) #3

declare i32 @Curl_strcasecompare(i8*, i8*) #3

declare void @Curl_cookie_clearall(%struct.CookieInfo*) #3

declare void @Curl_cookie_clearsess(%struct.CookieInfo*) #3

declare void @Curl_cookie_loadfiles(%struct.Curl_easy*) #3

declare i32 @curl_strnequal(i8*, i8*, i64) #3

declare %struct.Cookie* @Curl_cookie_add(%struct.Curl_easy*, %struct.CookieInfo*, i1 zeroext, i8*, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @setstropt_userpwd(i8* %option, i8** %userp, i8** %passwdp) #0 !dbg !2142 {
entry:
  %option.addr = alloca i8*, align 8
  %userp.addr = alloca i8**, align 8
  %passwdp.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %user = alloca i8*, align 8
  %passwd = alloca i8*, align 8
  store i8* %option, i8** %option.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %option.addr, metadata !5904, metadata !2256), !dbg !5905
  store i8** %userp, i8*** %userp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %userp.addr, metadata !5906, metadata !2256), !dbg !5907
  store i8** %passwdp, i8*** %passwdp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %passwdp.addr, metadata !5908, metadata !2256), !dbg !5909
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5910, metadata !2256), !dbg !5911
  store i32 0, i32* %result, align 4, !dbg !5911
  call void @llvm.dbg.declare(metadata i8** %user, metadata !5912, metadata !2256), !dbg !5913
  store i8* null, i8** %user, align 8, !dbg !5913
  call void @llvm.dbg.declare(metadata i8** %passwd, metadata !5914, metadata !2256), !dbg !5915
  store i8* null, i8** %passwd, align 8, !dbg !5915
  %0 = load i8*, i8** %option.addr, align 8, !dbg !5916
  %tobool = icmp ne i8* %0, null, !dbg !5916
  br i1 %tobool, label %if.then, label %if.end, !dbg !5918

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %option.addr, align 8, !dbg !5919
  %2 = load i8*, i8** %option.addr, align 8, !dbg !5921
  %call = call i64 @strlen(i8* %2) #7, !dbg !5922
  %3 = load i8**, i8*** %userp.addr, align 8, !dbg !5923
  %tobool1 = icmp ne i8** %3, null, !dbg !5923
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5923

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5924

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5926

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %user, %cond.true ], [ null, %cond.false ], !dbg !5928
  %4 = load i8**, i8*** %passwdp.addr, align 8, !dbg !5930
  %tobool2 = icmp ne i8** %4, null, !dbg !5930
  br i1 %tobool2, label %cond.true3, label %cond.false4, !dbg !5930

cond.true3:                                       ; preds = %cond.end
  br label %cond.end5, !dbg !5931

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5932

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i8** [ %passwd, %cond.true3 ], [ null, %cond.false4 ], !dbg !5933
  %call7 = call i32 @parse_login_details(i8* %1, i64 %call, i8** %cond, i8** %cond6, i8** null), !dbg !5934
  store i32 %call7, i32* %result, align 4, !dbg !5935
  br label %if.end, !dbg !5936

if.end:                                           ; preds = %cond.end5, %entry
  %5 = load i32, i32* %result, align 4, !dbg !5937
  %tobool8 = icmp ne i32 %5, 0, !dbg !5937
  br i1 %tobool8, label %if.end28, label %if.then9, !dbg !5939

if.then9:                                         ; preds = %if.end
  %6 = load i8**, i8*** %userp.addr, align 8, !dbg !5940
  %tobool10 = icmp ne i8** %6, null, !dbg !5940
  br i1 %tobool10, label %if.then11, label %if.end22, !dbg !5943

if.then11:                                        ; preds = %if.then9
  %7 = load i8*, i8** %user, align 8, !dbg !5944
  %tobool12 = icmp ne i8* %7, null, !dbg !5944
  br i1 %tobool12, label %if.end21, label %land.lhs.true, !dbg !5947

land.lhs.true:                                    ; preds = %if.then11
  %8 = load i8*, i8** %option.addr, align 8, !dbg !5948
  %tobool13 = icmp ne i8* %8, null, !dbg !5948
  br i1 %tobool13, label %land.lhs.true14, label %if.end21, !dbg !5950

land.lhs.true14:                                  ; preds = %land.lhs.true
  %9 = load i8*, i8** %option.addr, align 8, !dbg !5951
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5951
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5951
  %conv = sext i8 %10 to i32, !dbg !5951
  %cmp = icmp eq i32 %conv, 58, !dbg !5953
  br i1 %cmp, label %if.then16, label %if.end21, !dbg !5954

if.then16:                                        ; preds = %land.lhs.true14
  %11 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !5955
  %call17 = call i8* %11(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)), !dbg !5955
  store i8* %call17, i8** %user, align 8, !dbg !5957
  %12 = load i8*, i8** %user, align 8, !dbg !5958
  %tobool18 = icmp ne i8* %12, null, !dbg !5958
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !5960

if.then19:                                        ; preds = %if.then16
  store i32 27, i32* %result, align 4, !dbg !5961
  br label %if.end20, !dbg !5962

if.end20:                                         ; preds = %if.then19, %if.then16
  br label %if.end21, !dbg !5963

if.end21:                                         ; preds = %if.end20, %land.lhs.true14, %land.lhs.true, %if.then11
  br label %do.body, !dbg !5964

do.body:                                          ; preds = %if.end21
  %13 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5965
  %14 = load i8**, i8*** %userp.addr, align 8, !dbg !5965
  %15 = load i8*, i8** %14, align 8, !dbg !5965
  call void %13(i8* %15), !dbg !5965
  %16 = load i8**, i8*** %userp.addr, align 8, !dbg !5965
  store i8* null, i8** %16, align 8, !dbg !5965
  br label %do.end, !dbg !5965

do.end:                                           ; preds = %do.body
  %17 = load i8*, i8** %user, align 8, !dbg !5968
  %18 = load i8**, i8*** %userp.addr, align 8, !dbg !5969
  store i8* %17, i8** %18, align 8, !dbg !5970
  br label %if.end22, !dbg !5971

if.end22:                                         ; preds = %do.end, %if.then9
  %19 = load i8**, i8*** %passwdp.addr, align 8, !dbg !5972
  %tobool23 = icmp ne i8** %19, null, !dbg !5972
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !5974

if.then24:                                        ; preds = %if.end22
  br label %do.body25, !dbg !5975

do.body25:                                        ; preds = %if.then24
  %20 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5977
  %21 = load i8**, i8*** %passwdp.addr, align 8, !dbg !5977
  %22 = load i8*, i8** %21, align 8, !dbg !5977
  call void %20(i8* %22), !dbg !5977
  %23 = load i8**, i8*** %passwdp.addr, align 8, !dbg !5977
  store i8* null, i8** %23, align 8, !dbg !5977
  br label %do.end26, !dbg !5977

do.end26:                                         ; preds = %do.body25
  %24 = load i8*, i8** %passwd, align 8, !dbg !5980
  %25 = load i8**, i8*** %passwdp.addr, align 8, !dbg !5981
  store i8* %24, i8** %25, align 8, !dbg !5982
  br label %if.end27, !dbg !5983

if.end27:                                         ; preds = %do.end26, %if.end22
  br label %if.end28, !dbg !5984

if.end28:                                         ; preds = %if.end27, %if.end
  %26 = load i32, i32* %result, align 4, !dbg !5985
  ret i32 %26, !dbg !5986
}

declare zeroext i16 @curlx_sltous(i64) #3

declare void @Curl_failf(%struct.Curl_easy*, i8*, ...) #3

declare void @Curl_cookie_cleanup(%struct.CookieInfo*) #3

declare i32 @curlx_sltoui(i64) #3

declare i32 @Curl_set_dns_servers(%struct.Curl_easy*, i8*) #3

declare i32 @Curl_set_dns_interface(%struct.Curl_easy*, i8*) #3

declare i32 @Curl_set_dns_local_ip4(%struct.Curl_easy*, i8*) #3

declare i32 @Curl_set_dns_local_ip6(%struct.Curl_easy*, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_disconnect(%struct.connectdata* %conn, i1 zeroext %dead_connection) #0 !dbg !2109 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %dead_connection.addr = alloca i8, align 1
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5987, metadata !2256), !dbg !5988
  %frombool = zext i1 %dead_connection to i8
  store i8 %frombool, i8* %dead_connection.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dead_connection.addr, metadata !5989, metadata !2256), !dbg !5990
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5991, metadata !2256), !dbg !5992
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5993
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !5993
  br i1 %tobool, label %if.end, label %if.then, !dbg !5995

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5996
  br label %return, !dbg !5996

if.end:                                           ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5997
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 0, !dbg !5998
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !5998
  store %struct.Curl_easy* %2, %struct.Curl_easy** %data, align 8, !dbg !5999
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6000
  %tobool2 = icmp ne %struct.Curl_easy* %3, null, !dbg !6000
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6002

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !6003

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !6005

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !6008
  br label %return, !dbg !6008

if.end4:                                          ; preds = %if.end
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6009
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 43, !dbg !6011
  %close = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 0, !dbg !6012
  %5 = load i8, i8* %close, align 1, !dbg !6012
  %tobool5 = trunc i8 %5 to i1, !dbg !6012
  br i1 %tobool5, label %if.end11, label %land.lhs.true, !dbg !6013

land.lhs.true:                                    ; preds = %if.end4
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6014
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 55, !dbg !6015
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !6016
  %7 = load i64, i64* %size, align 8, !dbg !6016
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6017
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 56, !dbg !6018
  %size6 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !6019
  %9 = load i64, i64* %size6, align 8, !dbg !6019
  %add = add i64 %7, %9, !dbg !6020
  %tobool7 = icmp ne i64 %add, 0, !dbg !6020
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6021

if.then8:                                         ; preds = %land.lhs.true
  br label %do.body9, !dbg !6023

do.body9:                                         ; preds = %if.then8
  br label %do.end10, !dbg !6025

do.end10:                                         ; preds = %do.body9
  store i32 0, i32* %retval, align 4, !dbg !6028
  br label %return, !dbg !6028

if.end11:                                         ; preds = %land.lhs.true, %if.end4
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6029
  %dns_entry = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 6, !dbg !6031
  %11 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns_entry, align 8, !dbg !6031
  %cmp = icmp ne %struct.Curl_dns_entry* %11, null, !dbg !6032
  br i1 %cmp, label %if.then12, label %if.end15, !dbg !6033

if.then12:                                        ; preds = %if.end11
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6034
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6036
  %dns_entry13 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 6, !dbg !6037
  %14 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns_entry13, align 8, !dbg !6037
  call void @Curl_resolv_unlock(%struct.Curl_easy* %12, %struct.Curl_dns_entry* %14), !dbg !6038
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6039
  %dns_entry14 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 6, !dbg !6040
  store %struct.Curl_dns_entry* null, %struct.Curl_dns_entry** %dns_entry14, align 8, !dbg !6041
  br label %if.end15, !dbg !6042

if.end15:                                         ; preds = %if.then12, %if.end11
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6043
  call void @Curl_hostcache_prune(%struct.Curl_easy* %16), !dbg !6044
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6045
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 47, !dbg !6047
  %18 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6047
  %disconnect = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %18, i32 0, i32 12, !dbg !6048
  %19 = load i32 (%struct.connectdata*, i1)*, i32 (%struct.connectdata*, i1)** %disconnect, align 8, !dbg !6048
  %tobool16 = icmp ne i32 (%struct.connectdata*, i1)* %19, null, !dbg !6045
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !6049

if.then17:                                        ; preds = %if.end15
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6050
  %handler18 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 47, !dbg !6051
  %21 = load %struct.Curl_handler*, %struct.Curl_handler** %handler18, align 8, !dbg !6051
  %disconnect19 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %21, i32 0, i32 12, !dbg !6052
  %22 = load i32 (%struct.connectdata*, i1)*, i32 (%struct.connectdata*, i1)** %disconnect19, align 8, !dbg !6052
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6053
  %24 = load i8, i8* %dead_connection.addr, align 1, !dbg !6054
  %tobool20 = trunc i8 %24 to i1, !dbg !6054
  %call = call i32 %22(%struct.connectdata* %23, i1 zeroext %tobool20), !dbg !6050
  br label %if.end21, !dbg !6050

if.end21:                                         ; preds = %if.then17, %if.end15
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6055
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6056
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 5, !dbg !6057
  %27 = load i64, i64* %connection_id, align 8, !dbg !6057
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0), i64 %27), !dbg !6058
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6059
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 17, !dbg !6060
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !6061
  %29 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !6061
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6062
  call void @Curl_conncache_remove_conn(%struct.conncache* %29, %struct.connectdata* %30), !dbg !6063
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6064
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 12, !dbg !6065
  call void @free_fixed_hostname(%struct.hostname* %host), !dbg !6066
  %32 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6067
  %conn_to_host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 14, !dbg !6068
  call void @free_fixed_hostname(%struct.hostname* %conn_to_host), !dbg !6069
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6070
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 16, !dbg !6071
  %host22 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !6072
  call void @free_fixed_hostname(%struct.hostname* %host22), !dbg !6073
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6074
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 15, !dbg !6075
  %host23 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !6076
  call void @free_fixed_hostname(%struct.hostname* %host23), !dbg !6077
  br label %do.body24, !dbg !6078

do.body24:                                        ; preds = %if.end21
  br label %do.end25, !dbg !6079

do.end25:                                         ; preds = %do.body24
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6082
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 9, !dbg !6084
  %36 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !6084
  %call26 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %36, i32 3), !dbg !6085
  br i1 %call26, label %if.then27, label %if.end30, !dbg !6086

if.then27:                                        ; preds = %do.end25
  %37 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6087
  %send_pipe28 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 55, !dbg !6089
  call void @signalPipeClose(%struct.curl_llist* %send_pipe28, i1 zeroext true), !dbg !6090
  %38 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6091
  %recv_pipe29 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 56, !dbg !6092
  call void @signalPipeClose(%struct.curl_llist* %recv_pipe29, i1 zeroext true), !dbg !6093
  br label %if.end30, !dbg !6094

if.end30:                                         ; preds = %if.then27, %do.end25
  %39 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6095
  call void @conn_free(%struct.connectdata* %39), !dbg !6096
  store i32 0, i32* %retval, align 4, !dbg !6097
  br label %return, !dbg !6097

return:                                           ; preds = %if.end30, %do.end10, %do.end, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !6098
  ret i32 %40, !dbg !6098
}

declare void @Curl_resolv_unlock(%struct.Curl_easy*, %struct.Curl_dns_entry*) #3

declare void @Curl_hostcache_prune(%struct.Curl_easy*) #3

declare void @Curl_infof(%struct.Curl_easy*, i8*, ...) #3

declare void @Curl_conncache_remove_conn(%struct.conncache*, %struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define internal void @free_fixed_hostname(%struct.hostname* %host) #0 !dbg !2153 {
entry:
  %host.addr = alloca %struct.hostname*, align 8
  store %struct.hostname* %host, %struct.hostname** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hostname** %host.addr, metadata !6099, metadata !2256), !dbg !6100
  %0 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !6101
  ret void, !dbg !6102
}

declare zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @signalPipeClose(%struct.curl_llist* %pipeline, i1 zeroext %pipe_broke) #0 !dbg !2150 {
entry:
  %pipeline.addr = alloca %struct.curl_llist*, align 8
  %pipe_broke.addr = alloca i8, align 1
  %curr = alloca %struct.curl_llist_element*, align 8
  %next = alloca %struct.curl_llist_element*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.curl_llist* %pipeline, %struct.curl_llist** %pipeline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %pipeline.addr, metadata !6103, metadata !2256), !dbg !6104
  %frombool = zext i1 %pipe_broke to i8
  store i8 %frombool, i8* %pipe_broke.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pipe_broke.addr, metadata !6105, metadata !2256), !dbg !6106
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !6107, metadata !2256), !dbg !6108
  %0 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6109
  %tobool = icmp ne %struct.curl_llist* %0, null, !dbg !6109
  br i1 %tobool, label %if.end, label %if.then, !dbg !6111

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !6112

if.end:                                           ; preds = %entry
  %1 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6113
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %1, i32 0, i32 0, !dbg !6114
  %2 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !6114
  store %struct.curl_llist_element* %2, %struct.curl_llist_element** %curr, align 8, !dbg !6115
  br label %while.cond, !dbg !6116

while.cond:                                       ; preds = %if.end6, %if.end
  %3 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6117
  %tobool1 = icmp ne %struct.curl_llist_element* %3, null, !dbg !6119
  br i1 %tobool1, label %while.body, label %while.end, !dbg !6119

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %next, metadata !6120, metadata !2256), !dbg !6122
  %4 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6123
  %next2 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %4, i32 0, i32 2, !dbg !6124
  %5 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next2, align 8, !dbg !6124
  store %struct.curl_llist_element* %5, %struct.curl_llist_element** %next, align 8, !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !6125, metadata !2256), !dbg !6126
  %6 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6127
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %6, i32 0, i32 0, !dbg !6128
  %7 = load i8*, i8** %ptr, align 8, !dbg !6128
  %8 = bitcast i8* %7 to %struct.Curl_easy*, !dbg !6129
  store %struct.Curl_easy* %8, %struct.Curl_easy** %data, align 8, !dbg !6126
  %9 = load i8, i8* %pipe_broke.addr, align 1, !dbg !6130
  %tobool3 = trunc i8 %9 to i1, !dbg !6130
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6132

if.then4:                                         ; preds = %while.body
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6133
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 17, !dbg !6134
  %pipe_broke5 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 34, !dbg !6135
  store i8 1, i8* %pipe_broke5, align 1, !dbg !6136
  br label %if.end6, !dbg !6133

if.end6:                                          ; preds = %if.then4, %while.body
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6137
  call void @Curl_multi_handlePipeBreak(%struct.Curl_easy* %11), !dbg !6138
  %12 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6139
  %13 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6140
  %call = call i32 @Curl_llist_remove(%struct.curl_llist* %12, %struct.curl_llist_element* %13, i8* null), !dbg !6141
  %14 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !6142
  store %struct.curl_llist_element* %14, %struct.curl_llist_element** %curr, align 8, !dbg !6143
  br label %while.cond, !dbg !6144

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !6146
}

; Function Attrs: nounwind uwtable
define internal void @conn_free(%struct.connectdata* %conn) #0 !dbg !2149 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6147, metadata !2256), !dbg !6148
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6149
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !6149
  br i1 %tobool, label %if.end, label %if.then, !dbg !6151

if.then:                                          ; preds = %entry
  br label %return, !dbg !6152

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6153

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6154

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !6157

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !6158

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !6161

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !6162

do.end4:                                          ; preds = %do.body3
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6165
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 33, !dbg !6167
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 1, !dbg !6165
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6165
  %cmp = icmp ne i32 -1, %2, !dbg !6168
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !6169

if.then5:                                         ; preds = %do.end4
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6170
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6171
  %sock6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 33, !dbg !6172
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %sock6, i64 0, i64 1, !dbg !6171
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !6171
  %call = call i32 @Curl_closesocket(%struct.connectdata* %3, i32 %5), !dbg !6173
  br label %if.end8, !dbg !6173

if.end8:                                          ; preds = %if.then5, %do.end4
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6174
  %sock9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 33, !dbg !6176
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %sock9, i64 0, i64 0, !dbg !6174
  %7 = load i32, i32* %arrayidx10, align 8, !dbg !6174
  %cmp11 = icmp ne i32 -1, %7, !dbg !6177
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !6178

if.then12:                                        ; preds = %if.end8
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6179
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6180
  %sock13 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 33, !dbg !6181
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %sock13, i64 0, i64 0, !dbg !6180
  %10 = load i32, i32* %arrayidx14, align 8, !dbg !6180
  %call15 = call i32 @Curl_closesocket(%struct.connectdata* %8, i32 %10), !dbg !6182
  br label %if.end16, !dbg !6182

if.end16:                                         ; preds = %if.then12, %if.end8
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6183
  %tempsock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 34, !dbg !6185
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock, i64 0, i64 0, !dbg !6183
  %12 = load i32, i32* %arrayidx17, align 8, !dbg !6183
  %cmp18 = icmp ne i32 -1, %12, !dbg !6186
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !6187

if.then19:                                        ; preds = %if.end16
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6188
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6189
  %tempsock20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 34, !dbg !6190
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock20, i64 0, i64 0, !dbg !6189
  %15 = load i32, i32* %arrayidx21, align 8, !dbg !6189
  %call22 = call i32 @Curl_closesocket(%struct.connectdata* %13, i32 %15), !dbg !6191
  br label %if.end23, !dbg !6191

if.end23:                                         ; preds = %if.then19, %if.end16
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6192
  %tempsock24 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 34, !dbg !6194
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock24, i64 0, i64 1, !dbg !6192
  %17 = load i32, i32* %arrayidx25, align 4, !dbg !6192
  %cmp26 = icmp ne i32 -1, %17, !dbg !6195
  br i1 %cmp26, label %if.then27, label %if.end31, !dbg !6196

if.then27:                                        ; preds = %if.end23
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6197
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6198
  %tempsock28 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 34, !dbg !6199
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock28, i64 0, i64 1, !dbg !6198
  %20 = load i32, i32* %arrayidx29, align 4, !dbg !6198
  %call30 = call i32 @Curl_closesocket(%struct.connectdata* %18, i32 %20), !dbg !6200
  br label %if.end31, !dbg !6200

if.end31:                                         ; preds = %if.then27, %if.end23
  br label %do.body32, !dbg !6201

do.body32:                                        ; preds = %if.end31
  %21 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6202
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6202
  %user = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 25, !dbg !6202
  %23 = load i8*, i8** %user, align 8, !dbg !6202
  call void %21(i8* %23), !dbg !6202
  %24 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6202
  %user33 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %24, i32 0, i32 25, !dbg !6202
  store i8* null, i8** %user33, align 8, !dbg !6202
  br label %do.end34, !dbg !6202

do.end34:                                         ; preds = %do.body32
  br label %do.body35, !dbg !6205

do.body35:                                        ; preds = %do.end34
  %25 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6206
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6206
  %passwd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 26, !dbg !6206
  %27 = load i8*, i8** %passwd, align 8, !dbg !6206
  call void %25(i8* %27), !dbg !6206
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6206
  %passwd36 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 26, !dbg !6206
  store i8* null, i8** %passwd36, align 8, !dbg !6206
  br label %do.end37, !dbg !6206

do.end37:                                         ; preds = %do.body35
  br label %do.body38, !dbg !6209

do.body38:                                        ; preds = %do.end37
  %29 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6210
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6210
  %oauth_bearer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 28, !dbg !6210
  %31 = load i8*, i8** %oauth_bearer, align 8, !dbg !6210
  call void %29(i8* %31), !dbg !6210
  %32 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6210
  %oauth_bearer39 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 28, !dbg !6210
  store i8* null, i8** %oauth_bearer39, align 8, !dbg !6210
  br label %do.end40, !dbg !6210

do.end40:                                         ; preds = %do.body38
  br label %do.body41, !dbg !6213

do.body41:                                        ; preds = %do.end40
  %33 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6214
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6214
  %options = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 27, !dbg !6214
  %35 = load i8*, i8** %options, align 8, !dbg !6214
  call void %33(i8* %35), !dbg !6214
  %36 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6214
  %options42 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %36, i32 0, i32 27, !dbg !6214
  store i8* null, i8** %options42, align 8, !dbg !6214
  br label %do.end43, !dbg !6214

do.end43:                                         ; preds = %do.body41
  br label %do.body44, !dbg !6217

do.body44:                                        ; preds = %do.end43
  %37 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6218
  %38 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6218
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 16, !dbg !6218
  %user45 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 3, !dbg !6218
  %39 = load i8*, i8** %user45, align 8, !dbg !6218
  call void %37(i8* %39), !dbg !6218
  %40 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6218
  %http_proxy46 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %40, i32 0, i32 16, !dbg !6218
  %user47 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy46, i32 0, i32 3, !dbg !6218
  store i8* null, i8** %user47, align 8, !dbg !6218
  br label %do.end48, !dbg !6218

do.end48:                                         ; preds = %do.body44
  br label %do.body49, !dbg !6221

do.body49:                                        ; preds = %do.end48
  %41 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6222
  %42 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6222
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %42, i32 0, i32 15, !dbg !6222
  %user50 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 3, !dbg !6222
  %43 = load i8*, i8** %user50, align 8, !dbg !6222
  call void %41(i8* %43), !dbg !6222
  %44 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6222
  %socks_proxy51 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 15, !dbg !6222
  %user52 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy51, i32 0, i32 3, !dbg !6222
  store i8* null, i8** %user52, align 8, !dbg !6222
  br label %do.end53, !dbg !6222

do.end53:                                         ; preds = %do.body49
  br label %do.body54, !dbg !6225

do.body54:                                        ; preds = %do.end53
  %45 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6226
  %46 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6226
  %http_proxy55 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %46, i32 0, i32 16, !dbg !6226
  %passwd56 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy55, i32 0, i32 4, !dbg !6226
  %47 = load i8*, i8** %passwd56, align 8, !dbg !6226
  call void %45(i8* %47), !dbg !6226
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6226
  %http_proxy57 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 16, !dbg !6226
  %passwd58 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy57, i32 0, i32 4, !dbg !6226
  store i8* null, i8** %passwd58, align 8, !dbg !6226
  br label %do.end59, !dbg !6226

do.end59:                                         ; preds = %do.body54
  br label %do.body60, !dbg !6229

do.body60:                                        ; preds = %do.end59
  %49 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6230
  %50 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6230
  %socks_proxy61 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %50, i32 0, i32 15, !dbg !6230
  %passwd62 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy61, i32 0, i32 4, !dbg !6230
  %51 = load i8*, i8** %passwd62, align 8, !dbg !6230
  call void %49(i8* %51), !dbg !6230
  %52 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6230
  %socks_proxy63 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %52, i32 0, i32 15, !dbg !6230
  %passwd64 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy63, i32 0, i32 4, !dbg !6230
  store i8* null, i8** %passwd64, align 8, !dbg !6230
  br label %do.end65, !dbg !6230

do.end65:                                         ; preds = %do.body60
  br label %do.body66, !dbg !6233

do.body66:                                        ; preds = %do.end65
  %53 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6234
  %54 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6234
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %54, i32 0, i32 52, !dbg !6234
  %proxyuserpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 0, !dbg !6234
  %55 = load i8*, i8** %proxyuserpwd, align 8, !dbg !6234
  call void %53(i8* %55), !dbg !6234
  %56 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6234
  %allocptr67 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %56, i32 0, i32 52, !dbg !6234
  %proxyuserpwd68 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr67, i32 0, i32 0, !dbg !6234
  store i8* null, i8** %proxyuserpwd68, align 8, !dbg !6234
  br label %do.end69, !dbg !6234

do.end69:                                         ; preds = %do.body66
  br label %do.body70, !dbg !6237

do.body70:                                        ; preds = %do.end69
  %57 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6238
  %58 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6238
  %allocptr71 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %58, i32 0, i32 52, !dbg !6238
  %uagent = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr71, i32 0, i32 1, !dbg !6238
  %59 = load i8*, i8** %uagent, align 8, !dbg !6238
  call void %57(i8* %59), !dbg !6238
  %60 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6238
  %allocptr72 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %60, i32 0, i32 52, !dbg !6238
  %uagent73 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr72, i32 0, i32 1, !dbg !6238
  store i8* null, i8** %uagent73, align 8, !dbg !6238
  br label %do.end74, !dbg !6238

do.end74:                                         ; preds = %do.body70
  br label %do.body75, !dbg !6241

do.body75:                                        ; preds = %do.end74
  %61 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6242
  %62 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6242
  %allocptr76 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %62, i32 0, i32 52, !dbg !6242
  %userpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr76, i32 0, i32 3, !dbg !6242
  %63 = load i8*, i8** %userpwd, align 8, !dbg !6242
  call void %61(i8* %63), !dbg !6242
  %64 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6242
  %allocptr77 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %64, i32 0, i32 52, !dbg !6242
  %userpwd78 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr77, i32 0, i32 3, !dbg !6242
  store i8* null, i8** %userpwd78, align 8, !dbg !6242
  br label %do.end79, !dbg !6242

do.end79:                                         ; preds = %do.body75
  br label %do.body80, !dbg !6245

do.body80:                                        ; preds = %do.end79
  %65 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6246
  %66 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6246
  %allocptr81 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %66, i32 0, i32 52, !dbg !6246
  %accept_encoding = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr81, i32 0, i32 2, !dbg !6246
  %67 = load i8*, i8** %accept_encoding, align 8, !dbg !6246
  call void %65(i8* %67), !dbg !6246
  %68 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6246
  %allocptr82 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %68, i32 0, i32 52, !dbg !6246
  %accept_encoding83 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr82, i32 0, i32 2, !dbg !6246
  store i8* null, i8** %accept_encoding83, align 8, !dbg !6246
  br label %do.end84, !dbg !6246

do.end84:                                         ; preds = %do.body80
  br label %do.body85, !dbg !6249

do.body85:                                        ; preds = %do.end84
  %69 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6250
  %70 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6250
  %allocptr86 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %70, i32 0, i32 52, !dbg !6250
  %te = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr86, i32 0, i32 9, !dbg !6250
  %71 = load i8*, i8** %te, align 8, !dbg !6250
  call void %69(i8* %71), !dbg !6250
  %72 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6250
  %allocptr87 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %72, i32 0, i32 52, !dbg !6250
  %te88 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr87, i32 0, i32 9, !dbg !6250
  store i8* null, i8** %te88, align 8, !dbg !6250
  br label %do.end89, !dbg !6250

do.end89:                                         ; preds = %do.body85
  br label %do.body90, !dbg !6253

do.body90:                                        ; preds = %do.end89
  %73 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6254
  %74 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6254
  %allocptr91 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %74, i32 0, i32 52, !dbg !6254
  %rangeline = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr91, i32 0, i32 4, !dbg !6254
  %75 = load i8*, i8** %rangeline, align 8, !dbg !6254
  call void %73(i8* %75), !dbg !6254
  %76 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6254
  %allocptr92 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %76, i32 0, i32 52, !dbg !6254
  %rangeline93 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr92, i32 0, i32 4, !dbg !6254
  store i8* null, i8** %rangeline93, align 8, !dbg !6254
  br label %do.end94, !dbg !6254

do.end94:                                         ; preds = %do.body90
  br label %do.body95, !dbg !6257

do.body95:                                        ; preds = %do.end94
  %77 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6258
  %78 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6258
  %allocptr96 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 52, !dbg !6258
  %ref = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr96, i32 0, i32 5, !dbg !6258
  %79 = load i8*, i8** %ref, align 8, !dbg !6258
  call void %77(i8* %79), !dbg !6258
  %80 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6258
  %allocptr97 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %80, i32 0, i32 52, !dbg !6258
  %ref98 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr97, i32 0, i32 5, !dbg !6258
  store i8* null, i8** %ref98, align 8, !dbg !6258
  br label %do.end99, !dbg !6258

do.end99:                                         ; preds = %do.body95
  br label %do.body100, !dbg !6261

do.body100:                                       ; preds = %do.end99
  %81 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6262
  %82 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6262
  %allocptr101 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %82, i32 0, i32 52, !dbg !6262
  %host = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr101, i32 0, i32 6, !dbg !6262
  %83 = load i8*, i8** %host, align 8, !dbg !6262
  call void %81(i8* %83), !dbg !6262
  %84 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6262
  %allocptr102 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %84, i32 0, i32 52, !dbg !6262
  %host103 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr102, i32 0, i32 6, !dbg !6262
  store i8* null, i8** %host103, align 8, !dbg !6262
  br label %do.end104, !dbg !6262

do.end104:                                        ; preds = %do.body100
  br label %do.body105, !dbg !6265

do.body105:                                       ; preds = %do.end104
  %85 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6266
  %86 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6266
  %allocptr106 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %86, i32 0, i32 52, !dbg !6266
  %cookiehost = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr106, i32 0, i32 7, !dbg !6266
  %87 = load i8*, i8** %cookiehost, align 8, !dbg !6266
  call void %85(i8* %87), !dbg !6266
  %88 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6266
  %allocptr107 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %88, i32 0, i32 52, !dbg !6266
  %cookiehost108 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr107, i32 0, i32 7, !dbg !6266
  store i8* null, i8** %cookiehost108, align 8, !dbg !6266
  br label %do.end109, !dbg !6266

do.end109:                                        ; preds = %do.body105
  br label %do.body110, !dbg !6269

do.body110:                                       ; preds = %do.end109
  %89 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6270
  %90 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6270
  %allocptr111 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %90, i32 0, i32 52, !dbg !6270
  %rtsp_transport = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr111, i32 0, i32 8, !dbg !6270
  %91 = load i8*, i8** %rtsp_transport, align 8, !dbg !6270
  call void %89(i8* %91), !dbg !6270
  %92 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6270
  %allocptr112 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %92, i32 0, i32 52, !dbg !6270
  %rtsp_transport113 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr112, i32 0, i32 8, !dbg !6270
  store i8* null, i8** %rtsp_transport113, align 8, !dbg !6270
  br label %do.end114, !dbg !6270

do.end114:                                        ; preds = %do.body110
  br label %do.body115, !dbg !6273

do.body115:                                       ; preds = %do.end114
  %93 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6274
  %94 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6274
  %trailer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %94, i32 0, i32 63, !dbg !6274
  %95 = load i8*, i8** %trailer, align 8, !dbg !6274
  call void %93(i8* %95), !dbg !6274
  %96 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6274
  %trailer116 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %96, i32 0, i32 63, !dbg !6274
  store i8* null, i8** %trailer116, align 8, !dbg !6274
  br label %do.end117, !dbg !6274

do.end117:                                        ; preds = %do.body115
  br label %do.body118, !dbg !6277

do.body118:                                       ; preds = %do.end117
  %97 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6278
  %98 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6278
  %host119 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %98, i32 0, i32 12, !dbg !6278
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %host119, i32 0, i32 0, !dbg !6278
  %99 = load i8*, i8** %rawalloc, align 8, !dbg !6278
  call void %97(i8* %99), !dbg !6278
  %100 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6278
  %host120 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %100, i32 0, i32 12, !dbg !6278
  %rawalloc121 = getelementptr inbounds %struct.hostname, %struct.hostname* %host120, i32 0, i32 0, !dbg !6278
  store i8* null, i8** %rawalloc121, align 8, !dbg !6278
  br label %do.end122, !dbg !6278

do.end122:                                        ; preds = %do.body118
  br label %do.body123, !dbg !6281

do.body123:                                       ; preds = %do.end122
  %101 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6282
  %102 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6282
  %conn_to_host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %102, i32 0, i32 14, !dbg !6282
  %rawalloc124 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host, i32 0, i32 0, !dbg !6282
  %103 = load i8*, i8** %rawalloc124, align 8, !dbg !6282
  call void %101(i8* %103), !dbg !6282
  %104 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6282
  %conn_to_host125 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %104, i32 0, i32 14, !dbg !6282
  %rawalloc126 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host125, i32 0, i32 0, !dbg !6282
  store i8* null, i8** %rawalloc126, align 8, !dbg !6282
  br label %do.end127, !dbg !6282

do.end127:                                        ; preds = %do.body123
  br label %do.body128, !dbg !6285

do.body128:                                       ; preds = %do.end127
  %105 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6286
  %106 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6286
  %secondaryhostname = getelementptr inbounds %struct.connectdata, %struct.connectdata* %106, i32 0, i32 13, !dbg !6286
  %107 = load i8*, i8** %secondaryhostname, align 8, !dbg !6286
  call void %105(i8* %107), !dbg !6286
  %108 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6286
  %secondaryhostname129 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %108, i32 0, i32 13, !dbg !6286
  store i8* null, i8** %secondaryhostname129, align 8, !dbg !6286
  br label %do.end130, !dbg !6286

do.end130:                                        ; preds = %do.body128
  br label %do.body131, !dbg !6289

do.body131:                                       ; preds = %do.end130
  %109 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6290
  %110 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6290
  %http_proxy132 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %110, i32 0, i32 16, !dbg !6290
  %host133 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy132, i32 0, i32 0, !dbg !6290
  %rawalloc134 = getelementptr inbounds %struct.hostname, %struct.hostname* %host133, i32 0, i32 0, !dbg !6290
  %111 = load i8*, i8** %rawalloc134, align 8, !dbg !6290
  call void %109(i8* %111), !dbg !6290
  %112 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6290
  %http_proxy135 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %112, i32 0, i32 16, !dbg !6290
  %host136 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy135, i32 0, i32 0, !dbg !6290
  %rawalloc137 = getelementptr inbounds %struct.hostname, %struct.hostname* %host136, i32 0, i32 0, !dbg !6290
  store i8* null, i8** %rawalloc137, align 8, !dbg !6290
  br label %do.end138, !dbg !6290

do.end138:                                        ; preds = %do.body131
  br label %do.body139, !dbg !6293

do.body139:                                       ; preds = %do.end138
  %113 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6294
  %114 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6294
  %socks_proxy140 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %114, i32 0, i32 15, !dbg !6294
  %host141 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy140, i32 0, i32 0, !dbg !6294
  %rawalloc142 = getelementptr inbounds %struct.hostname, %struct.hostname* %host141, i32 0, i32 0, !dbg !6294
  %115 = load i8*, i8** %rawalloc142, align 8, !dbg !6294
  call void %113(i8* %115), !dbg !6294
  %116 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6294
  %socks_proxy143 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %116, i32 0, i32 15, !dbg !6294
  %host144 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy143, i32 0, i32 0, !dbg !6294
  %rawalloc145 = getelementptr inbounds %struct.hostname, %struct.hostname* %host144, i32 0, i32 0, !dbg !6294
  store i8* null, i8** %rawalloc145, align 8, !dbg !6294
  br label %do.end146, !dbg !6294

do.end146:                                        ; preds = %do.body139
  br label %do.body147, !dbg !6297

do.body147:                                       ; preds = %do.end146
  %117 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6298
  %118 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6298
  %master_buffer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %118, i32 0, i32 57, !dbg !6298
  %119 = load i8*, i8** %master_buffer, align 8, !dbg !6298
  call void %117(i8* %119), !dbg !6298
  %120 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6298
  %master_buffer148 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %120, i32 0, i32 57, !dbg !6298
  store i8* null, i8** %master_buffer148, align 8, !dbg !6298
  br label %do.end149, !dbg !6298

do.end149:                                        ; preds = %do.body147
  br label %do.body150, !dbg !6301

do.body150:                                       ; preds = %do.end149
  br label %do.end151, !dbg !6302

do.end151:                                        ; preds = %do.body150
  %121 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6305
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %121, i32 0, i32 55, !dbg !6306
  call void @Curl_llist_destroy(%struct.curl_llist* %send_pipe, i8* null), !dbg !6307
  %122 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6308
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %122, i32 0, i32 56, !dbg !6309
  call void @Curl_llist_destroy(%struct.curl_llist* %recv_pipe, i8* null), !dbg !6310
  br label %do.body152, !dbg !6311

do.body152:                                       ; preds = %do.end151
  %123 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6312
  %124 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6312
  %localdev = getelementptr inbounds %struct.connectdata, %struct.connectdata* %124, i32 0, i32 69, !dbg !6312
  %125 = load i8*, i8** %localdev, align 8, !dbg !6312
  call void %123(i8* %125), !dbg !6312
  %126 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6312
  %localdev153 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %126, i32 0, i32 69, !dbg !6312
  store i8* null, i8** %localdev153, align 8, !dbg !6312
  br label %do.end154, !dbg !6312

do.end154:                                        ; preds = %do.body152
  %127 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6315
  %ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %127, i32 0, i32 40, !dbg !6316
  call void @Curl_free_primary_ssl_config(%struct.ssl_primary_config* %ssl_config), !dbg !6317
  %128 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6318
  %proxy_ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %128, i32 0, i32 41, !dbg !6319
  call void @Curl_free_primary_ssl_config(%struct.ssl_primary_config* %proxy_ssl_config), !dbg !6320
  %129 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6321
  %130 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6321
  %131 = bitcast %struct.connectdata* %130 to i8*, !dbg !6321
  call void %129(i8* %131), !dbg !6321
  br label %return, !dbg !6322

return:                                           ; preds = %do.end154, %if.then
  ret void, !dbg !6323
}

; Function Attrs: nounwind uwtable
define i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %handle, %struct.curl_llist* %pipeline) #0 !dbg !2110 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.Curl_easy*, align 8
  %pipeline.addr = alloca %struct.curl_llist*, align 8
  %curr = alloca %struct.curl_llist_element*, align 8
  store %struct.Curl_easy* %handle, %struct.Curl_easy** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %handle.addr, metadata !6325, metadata !2256), !dbg !6326
  store %struct.curl_llist* %pipeline, %struct.curl_llist** %pipeline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %pipeline.addr, metadata !6327, metadata !2256), !dbg !6328
  %0 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6329
  %tobool = icmp ne %struct.curl_llist* %0, null, !dbg !6329
  br i1 %tobool, label %if.then, label %if.end3, !dbg !6331

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !6332, metadata !2256), !dbg !6334
  %1 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6335
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %1, i32 0, i32 0, !dbg !6336
  %2 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !6336
  store %struct.curl_llist_element* %2, %struct.curl_llist_element** %curr, align 8, !dbg !6337
  br label %while.cond, !dbg !6338

while.cond:                                       ; preds = %if.end, %if.then
  %3 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6339
  %tobool1 = icmp ne %struct.curl_llist_element* %3, null, !dbg !6341
  br i1 %tobool1, label %while.body, label %while.end, !dbg !6341

while.body:                                       ; preds = %while.cond
  %4 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6342
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %4, i32 0, i32 0, !dbg !6345
  %5 = load i8*, i8** %ptr, align 8, !dbg !6345
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !6346
  %7 = bitcast %struct.Curl_easy* %6 to i8*, !dbg !6346
  %cmp = icmp eq i8* %5, %7, !dbg !6347
  br i1 %cmp, label %if.then2, label %if.end, !dbg !6348

if.then2:                                         ; preds = %while.body
  %8 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !6349
  %9 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6351
  %call = call i32 @Curl_llist_remove(%struct.curl_llist* %8, %struct.curl_llist_element* %9, i8* null), !dbg !6352
  store i32 1, i32* %retval, align 4, !dbg !6353
  br label %return, !dbg !6353

if.end:                                           ; preds = %while.body
  %10 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6354
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %10, i32 0, i32 2, !dbg !6355
  %11 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !6355
  store %struct.curl_llist_element* %11, %struct.curl_llist_element** %curr, align 8, !dbg !6356
  br label %while.cond, !dbg !6357

while.end:                                        ; preds = %while.cond
  br label %if.end3, !dbg !6359

if.end3:                                          ; preds = %while.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !6360
  br label %return, !dbg !6360

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !6361
  ret i32 %12, !dbg !6361
}

declare i32 @Curl_llist_remove(%struct.curl_llist*, %struct.curl_llist_element*, i8*) #3

; Function Attrs: nounwind uwtable
define void @Curl_getoff_all_pipelines(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !2113 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %recv_head = alloca i8, align 1
  %send_head = alloca i8, align 1
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6362, metadata !2256), !dbg !6363
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6364, metadata !2256), !dbg !6365
  call void @llvm.dbg.declare(metadata i8* %recv_head, metadata !6366, metadata !2256), !dbg !6367
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6368
  %readchannel_inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 53, !dbg !6369
  %1 = load i8, i8* %readchannel_inuse, align 8, !dbg !6369
  %tobool = trunc i8 %1 to i1, !dbg !6369
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6370

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6371
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6372
  %call = call zeroext i1 @Curl_recvpipe_head(%struct.Curl_easy* %2, %struct.connectdata* %3), !dbg !6373
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %call, %land.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !6374
  store i8 %frombool, i8* %recv_head, align 1, !dbg !6374
  call void @llvm.dbg.declare(metadata i8* %send_head, metadata !6376, metadata !2256), !dbg !6377
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6378
  %writechannel_inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 54, !dbg !6379
  %6 = load i8, i8* %writechannel_inuse, align 1, !dbg !6379
  %tobool1 = trunc i8 %6 to i1, !dbg !6379
  br i1 %tobool1, label %land.rhs2, label %land.end4, !dbg !6380

land.rhs2:                                        ; preds = %land.end
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6381
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6382
  %call3 = call zeroext i1 @Curl_sendpipe_head(%struct.Curl_easy* %7, %struct.connectdata* %8), !dbg !6383
  br label %land.end4

land.end4:                                        ; preds = %land.rhs2, %land.end
  %9 = phi i1 [ false, %land.end ], [ %call3, %land.rhs2 ]
  %frombool5 = zext i1 %9 to i8, !dbg !6384
  store i8 %frombool5, i8* %send_head, align 1, !dbg !6384
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6385
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6387
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 56, !dbg !6388
  %call6 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %10, %struct.curl_llist* %recv_pipe), !dbg !6389
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6389
  br i1 %tobool7, label %land.lhs.true, label %if.end, !dbg !6390

land.lhs.true:                                    ; preds = %land.end4
  %12 = load i8, i8* %recv_head, align 1, !dbg !6391
  %tobool8 = trunc i8 %12 to i1, !dbg !6391
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6393

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6394
  call void @Curl_pipeline_leave_read(%struct.connectdata* %13), !dbg !6395
  br label %if.end, !dbg !6395

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end4
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6396
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6398
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 55, !dbg !6399
  %call9 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %14, %struct.curl_llist* %send_pipe), !dbg !6400
  %tobool10 = icmp ne i32 %call9, 0, !dbg !6400
  br i1 %tobool10, label %land.lhs.true11, label %if.end14, !dbg !6401

land.lhs.true11:                                  ; preds = %if.end
  %16 = load i8, i8* %send_head, align 1, !dbg !6402
  %tobool12 = trunc i8 %16 to i1, !dbg !6402
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6404

if.then13:                                        ; preds = %land.lhs.true11
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6405
  call void @Curl_pipeline_leave_write(%struct.connectdata* %17), !dbg !6406
  br label %if.end14, !dbg !6406

if.end14:                                         ; preds = %if.then13, %land.lhs.true11, %if.end
  ret void, !dbg !6407
}

declare zeroext i1 @Curl_recvpipe_head(%struct.Curl_easy*, %struct.connectdata*) #3

declare zeroext i1 @Curl_sendpipe_head(%struct.Curl_easy*, %struct.connectdata*) #3

declare void @Curl_pipeline_leave_read(%struct.connectdata*) #3

declare void @Curl_pipeline_leave_write(%struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define %struct.connectdata* @Curl_oldest_idle_connection(%struct.Curl_easy* %data) #0 !dbg !2116 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %bc = alloca %struct.conncache*, align 8
  %iter = alloca %struct.curl_hash_iterator, align 8
  %curr = alloca %struct.curl_llist_element*, align 8
  %he = alloca %struct.curl_hash_element*, align 8
  %highscore = alloca i64, align 8
  %score = alloca i64, align 8
  %now = alloca %struct.timeval, align 8
  %conn_candidate = alloca %struct.connectdata*, align 8
  %bundle = alloca %struct.connectbundle*, align 8
  %coerce = alloca %struct.timeval, align 8
  %conn = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6408, metadata !2256), !dbg !6409
  call void @llvm.dbg.declare(metadata %struct.conncache** %bc, metadata !6410, metadata !2256), !dbg !6411
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6412
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !6413
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !6414
  %1 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !6414
  store %struct.conncache* %1, %struct.conncache** %bc, align 8, !dbg !6411
  call void @llvm.dbg.declare(metadata %struct.curl_hash_iterator* %iter, metadata !6415, metadata !2256), !dbg !6421
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !6422, metadata !2256), !dbg !6423
  call void @llvm.dbg.declare(metadata %struct.curl_hash_element** %he, metadata !6424, metadata !2256), !dbg !6431
  call void @llvm.dbg.declare(metadata i64* %highscore, metadata !6432, metadata !2256), !dbg !6433
  store i64 -1, i64* %highscore, align 8, !dbg !6433
  call void @llvm.dbg.declare(metadata i64* %score, metadata !6434, metadata !2256), !dbg !6435
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !6436, metadata !2256), !dbg !6437
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_candidate, metadata !6438, metadata !2256), !dbg !6439
  store %struct.connectdata* null, %struct.connectdata** %conn_candidate, align 8, !dbg !6439
  call void @llvm.dbg.declare(metadata %struct.connectbundle** %bundle, metadata !6440, metadata !2256), !dbg !6441
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !6442
  %2 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !6442
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !6442
  %4 = extractvalue { i64, i64 } %call, 0, !dbg !6442
  store i64 %4, i64* %3, align 8, !dbg !6442
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !6442
  %6 = extractvalue { i64, i64 } %call, 1, !dbg !6442
  store i64 %6, i64* %5, align 8, !dbg !6442
  %7 = bitcast %struct.timeval* %now to i8*, !dbg !6442
  %8 = bitcast %struct.timeval* %coerce to i8*, !dbg !6442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 16, i32 8, i1 false), !dbg !6443
  %9 = load %struct.conncache*, %struct.conncache** %bc, align 8, !dbg !6445
  %hash = getelementptr inbounds %struct.conncache, %struct.conncache* %9, i32 0, i32 0, !dbg !6446
  call void @Curl_hash_start_iterate(%struct.curl_hash* %hash, %struct.curl_hash_iterator* %iter), !dbg !6447
  %call1 = call %struct.curl_hash_element* @Curl_hash_next_element(%struct.curl_hash_iterator* %iter), !dbg !6448
  store %struct.curl_hash_element* %call1, %struct.curl_hash_element** %he, align 8, !dbg !6449
  br label %while.cond, !dbg !6450

while.cond:                                       ; preds = %while.end, %entry
  %10 = load %struct.curl_hash_element*, %struct.curl_hash_element** %he, align 8, !dbg !6451
  %tobool = icmp ne %struct.curl_hash_element* %10, null, !dbg !6452
  br i1 %tobool, label %while.body, label %while.end12, !dbg !6452

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !6453, metadata !2256), !dbg !6455
  %11 = load %struct.curl_hash_element*, %struct.curl_hash_element** %he, align 8, !dbg !6456
  %ptr = getelementptr inbounds %struct.curl_hash_element, %struct.curl_hash_element* %11, i32 0, i32 0, !dbg !6457
  %12 = load i8*, i8** %ptr, align 8, !dbg !6457
  %13 = bitcast i8* %12 to %struct.connectbundle*, !dbg !6456
  store %struct.connectbundle* %13, %struct.connectbundle** %bundle, align 8, !dbg !6458
  %14 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !6459
  %conn_list = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %14, i32 0, i32 2, !dbg !6460
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %conn_list, i32 0, i32 0, !dbg !6461
  %15 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !6461
  store %struct.curl_llist_element* %15, %struct.curl_llist_element** %curr, align 8, !dbg !6462
  br label %while.cond2, !dbg !6463

while.cond2:                                      ; preds = %if.end10, %while.body
  %16 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6464
  %tobool3 = icmp ne %struct.curl_llist_element* %16, null, !dbg !6466
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !6466

while.body4:                                      ; preds = %while.cond2
  %17 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6467
  %ptr5 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %17, i32 0, i32 0, !dbg !6469
  %18 = load i8*, i8** %ptr5, align 8, !dbg !6469
  %19 = bitcast i8* %18 to %struct.connectdata*, !dbg !6467
  store %struct.connectdata* %19, %struct.connectdata** %conn, align 8, !dbg !6470
  %20 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6471
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 4, !dbg !6473
  %21 = load i8, i8* %inuse, align 8, !dbg !6473
  %tobool6 = trunc i8 %21 to i1, !dbg !6473
  br i1 %tobool6, label %if.end10, label %if.then, !dbg !6474

if.then:                                          ; preds = %while.body4
  %22 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6475
  %now7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 31, !dbg !6475
  %23 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !6475
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0, !dbg !6475
  %25 = load i64, i64* %24, align 8, !dbg !6475
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1, !dbg !6475
  %27 = load i64, i64* %26, align 8, !dbg !6475
  %28 = bitcast %struct.timeval* %now7 to { i64, i64 }*, !dbg !6475
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !6475
  %30 = load i64, i64* %29, align 8, !dbg !6475
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !6475
  %32 = load i64, i64* %31, align 8, !dbg !6475
  %call8 = call i64 @curlx_tvdiff(i64 %25, i64 %27, i64 %30, i64 %32), !dbg !6475
  store i64 %call8, i64* %score, align 8, !dbg !6477
  %33 = load i64, i64* %score, align 8, !dbg !6478
  %34 = load i64, i64* %highscore, align 8, !dbg !6480
  %cmp = icmp sgt i64 %33, %34, !dbg !6481
  br i1 %cmp, label %if.then9, label %if.end, !dbg !6482

if.then9:                                         ; preds = %if.then
  %35 = load i64, i64* %score, align 8, !dbg !6483
  store i64 %35, i64* %highscore, align 8, !dbg !6485
  %36 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6486
  store %struct.connectdata* %36, %struct.connectdata** %conn_candidate, align 8, !dbg !6487
  br label %if.end, !dbg !6488

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end10, !dbg !6489

if.end10:                                         ; preds = %if.end, %while.body4
  %37 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !6490
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %37, i32 0, i32 2, !dbg !6491
  %38 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !6491
  store %struct.curl_llist_element* %38, %struct.curl_llist_element** %curr, align 8, !dbg !6492
  br label %while.cond2, !dbg !6493

while.end:                                        ; preds = %while.cond2
  %call11 = call %struct.curl_hash_element* @Curl_hash_next_element(%struct.curl_hash_iterator* %iter), !dbg !6495
  store %struct.curl_hash_element* %call11, %struct.curl_hash_element** %he, align 8, !dbg !6496
  br label %while.cond, !dbg !6497

while.end12:                                      ; preds = %while.cond
  %39 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !6499
  ret %struct.connectdata* %39, !dbg !6500
}

declare { i64, i64 } @curlx_tvnow() #3

declare void @Curl_hash_start_iterate(%struct.curl_hash*, %struct.curl_hash_iterator*) #3

declare %struct.curl_hash_element* @Curl_hash_next_element(%struct.curl_hash_iterator*) #3

declare i64 @curlx_tvdiff(i64, i64, i64, i64) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_connected_proxy(%struct.connectdata* %conn, i32 %sockindex) #0 !dbg !2119 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %sockindex.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %host = alloca i8*, align 8
  %port = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6501, metadata !2256), !dbg !6502
  store i32 %sockindex, i32* %sockindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sockindex.addr, metadata !6503, metadata !2256), !dbg !6504
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6505, metadata !2256), !dbg !6506
  store i32 0, i32* %result, align 4, !dbg !6506
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6507
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 43, !dbg !6509
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 6, !dbg !6510
  %1 = load i8, i8* %socksproxy, align 1, !dbg !6510
  %tobool = trunc i8 %1 to i1, !dbg !6510
  br i1 %tobool, label %if.then, label %if.end, !dbg !6511

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %host, metadata !6512, metadata !2256), !dbg !6515
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6516
  %bits1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 43, !dbg !6517
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1, i32 0, i32 5, !dbg !6518
  %3 = load i8, i8* %httpproxy, align 1, !dbg !6518
  %tobool2 = trunc i8 %3 to i1, !dbg !6518
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !6516

cond.true:                                        ; preds = %if.then
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6519
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 16, !dbg !6520
  %host3 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !6521
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host3, i32 0, i32 2, !dbg !6522
  %5 = load i8*, i8** %name, align 8, !dbg !6522
  br label %cond.end16, !dbg !6523

cond.false:                                       ; preds = %if.then
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6525
  %bits4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 43, !dbg !6526
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits4, i32 0, i32 2, !dbg !6527
  %7 = load i8, i8* %conn_to_host, align 1, !dbg !6527
  %tobool5 = trunc i8 %7 to i1, !dbg !6527
  br i1 %tobool5, label %cond.true6, label %cond.false9, !dbg !6525

cond.true6:                                       ; preds = %cond.false
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6528
  %conn_to_host7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 14, !dbg !6529
  %name8 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host7, i32 0, i32 2, !dbg !6530
  %9 = load i8*, i8** %name8, align 8, !dbg !6530
  br label %cond.end14, !dbg !6531

cond.false9:                                      ; preds = %cond.false
  %10 = load i32, i32* %sockindex.addr, align 4, !dbg !6532
  %cmp = icmp eq i32 %10, 1, !dbg !6533
  br i1 %cmp, label %cond.true10, label %cond.false11, !dbg !6532

cond.true10:                                      ; preds = %cond.false9
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6534
  %secondaryhostname = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 13, !dbg !6535
  %12 = load i8*, i8** %secondaryhostname, align 8, !dbg !6535
  br label %cond.end, !dbg !6536

cond.false11:                                     ; preds = %cond.false9
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6537
  %host12 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 12, !dbg !6538
  %name13 = getelementptr inbounds %struct.hostname, %struct.hostname* %host12, i32 0, i32 2, !dbg !6539
  %14 = load i8*, i8** %name13, align 8, !dbg !6539
  br label %cond.end, !dbg !6540

cond.end:                                         ; preds = %cond.false11, %cond.true10
  %cond = phi i8* [ %12, %cond.true10 ], [ %14, %cond.false11 ], !dbg !6542
  br label %cond.end14, !dbg !6544

cond.end14:                                       ; preds = %cond.end, %cond.true6
  %cond15 = phi i8* [ %9, %cond.true6 ], [ %cond, %cond.end ], !dbg !6545
  br label %cond.end16, !dbg !6546

cond.end16:                                       ; preds = %cond.end14, %cond.true
  %cond17 = phi i8* [ %5, %cond.true ], [ %cond15, %cond.end14 ], !dbg !6547
  store i8* %cond17, i8** %host, align 8, !dbg !6548
  call void @llvm.dbg.declare(metadata i32* %port, metadata !6549, metadata !2256), !dbg !6551
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6552
  %bits18 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 43, !dbg !6553
  %httpproxy19 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits18, i32 0, i32 5, !dbg !6554
  %16 = load i8, i8* %httpproxy19, align 1, !dbg !6554
  %tobool20 = trunc i8 %16 to i1, !dbg !6554
  br i1 %tobool20, label %cond.true21, label %cond.false24, !dbg !6552

cond.true21:                                      ; preds = %cond.end16
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6555
  %http_proxy22 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 16, !dbg !6556
  %port23 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy22, i32 0, i32 1, !dbg !6557
  %18 = load i64, i64* %port23, align 8, !dbg !6557
  %conv = trunc i64 %18 to i32, !dbg !6558
  br label %cond.end40, !dbg !6559

cond.false24:                                     ; preds = %cond.end16
  %19 = load i32, i32* %sockindex.addr, align 4, !dbg !6560
  %cmp25 = icmp eq i32 %19, 1, !dbg !6561
  br i1 %cmp25, label %cond.true27, label %cond.false29, !dbg !6560

cond.true27:                                      ; preds = %cond.false24
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6562
  %secondary_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 20, !dbg !6563
  %21 = load i16, i16* %secondary_port, align 8, !dbg !6563
  %conv28 = zext i16 %21 to i32, !dbg !6562
  br label %cond.end38, !dbg !6564

cond.false29:                                     ; preds = %cond.false24
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6565
  %bits30 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 43, !dbg !6566
  %conn_to_port = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits30, i32 0, i32 3, !dbg !6567
  %23 = load i8, i8* %conn_to_port, align 1, !dbg !6567
  %tobool31 = trunc i8 %23 to i1, !dbg !6567
  br i1 %tobool31, label %cond.true33, label %cond.false35, !dbg !6565

cond.true33:                                      ; preds = %cond.false29
  %24 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6568
  %conn_to_port34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %24, i32 0, i32 19, !dbg !6569
  %25 = load i32, i32* %conn_to_port34, align 4, !dbg !6569
  br label %cond.end36, !dbg !6570

cond.false35:                                     ; preds = %cond.false29
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6571
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 18, !dbg !6572
  %27 = load i32, i32* %remote_port, align 8, !dbg !6572
  br label %cond.end36, !dbg !6573

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %25, %cond.true33 ], [ %27, %cond.false35 ], !dbg !6574
  br label %cond.end38, !dbg !6575

cond.end38:                                       ; preds = %cond.end36, %cond.true27
  %cond39 = phi i32 [ %conv28, %cond.true27 ], [ %cond37, %cond.end36 ], !dbg !6576
  br label %cond.end40, !dbg !6577

cond.end40:                                       ; preds = %cond.end38, %cond.true21
  %cond41 = phi i32 [ %conv, %cond.true21 ], [ %cond39, %cond.end38 ], !dbg !6578
  store i32 %cond41, i32* %port, align 4, !dbg !6579
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6580
  %bits42 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 43, !dbg !6581
  %socksproxy_connecting = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits42, i32 0, i32 32, !dbg !6582
  store i8 1, i8* %socksproxy_connecting, align 1, !dbg !6583
  %29 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6584
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %29, i32 0, i32 15, !dbg !6585
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 2, !dbg !6586
  %30 = load i32, i32* %proxytype, align 8, !dbg !6586
  switch i32 %30, label %sw.default [
    i32 5, label %sw.bb
    i32 7, label %sw.bb
    i32 4, label %sw.bb45
    i32 6, label %sw.bb45
  ], !dbg !6587

sw.bb:                                            ; preds = %cond.end40, %cond.end40
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6588
  %socks_proxy43 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 15, !dbg !6590
  %user = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy43, i32 0, i32 3, !dbg !6591
  %32 = load i8*, i8** %user, align 8, !dbg !6591
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6592
  %socks_proxy44 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 15, !dbg !6593
  %passwd = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy44, i32 0, i32 4, !dbg !6594
  %34 = load i8*, i8** %passwd, align 8, !dbg !6594
  %35 = load i8*, i8** %host, align 8, !dbg !6595
  %36 = load i32, i32* %port, align 4, !dbg !6596
  %37 = load i32, i32* %sockindex.addr, align 4, !dbg !6597
  %38 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6598
  %call = call i32 @Curl_SOCKS5(i8* %32, i8* %34, i8* %35, i32 %36, i32 %37, %struct.connectdata* %38), !dbg !6599
  store i32 %call, i32* %result, align 4, !dbg !6600
  br label %sw.epilog, !dbg !6601

sw.bb45:                                          ; preds = %cond.end40, %cond.end40
  %39 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6602
  %socks_proxy46 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %39, i32 0, i32 15, !dbg !6603
  %user47 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy46, i32 0, i32 3, !dbg !6604
  %40 = load i8*, i8** %user47, align 8, !dbg !6604
  %41 = load i8*, i8** %host, align 8, !dbg !6605
  %42 = load i32, i32* %port, align 4, !dbg !6606
  %43 = load i32, i32* %sockindex.addr, align 4, !dbg !6607
  %44 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6608
  %call48 = call i32 @Curl_SOCKS4(i8* %40, i8* %41, i32 %42, i32 %43, %struct.connectdata* %44), !dbg !6609
  store i32 %call48, i32* %result, align 4, !dbg !6610
  br label %sw.epilog, !dbg !6611

sw.default:                                       ; preds = %cond.end40
  %45 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6612
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %45, i32 0, i32 0, !dbg !6613
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6613
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %46, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)), !dbg !6614
  store i32 7, i32* %result, align 4, !dbg !6615
  br label %sw.epilog, !dbg !6616

sw.epilog:                                        ; preds = %sw.default, %sw.bb45, %sw.bb
  %47 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6617
  %bits49 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %47, i32 0, i32 43, !dbg !6618
  %socksproxy_connecting50 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits49, i32 0, i32 32, !dbg !6619
  store i8 0, i8* %socksproxy_connecting50, align 1, !dbg !6620
  br label %if.end, !dbg !6621

if.end:                                           ; preds = %sw.epilog, %entry
  %48 = load i32, i32* %result, align 4, !dbg !6622
  ret i32 %48, !dbg !6623
}

declare i32 @Curl_SOCKS5(i8*, i8*, i8*, i32, i32, %struct.connectdata*) #3

declare i32 @Curl_SOCKS4(i8*, i8*, i32, i32, %struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define void @Curl_verboseconnect(%struct.connectdata* %conn) #0 !dbg !2122 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6624, metadata !2256), !dbg !6625
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6626
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !6628
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6628
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 13, !dbg !6629
  %verbose = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 106, !dbg !6630
  %2 = load i8, i8* %verbose, align 8, !dbg !6630
  %tobool = trunc i8 %2 to i1, !dbg !6630
  br i1 %tobool, label %if.then, label %if.end, !dbg !6631

if.then:                                          ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6632
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 0, !dbg !6633
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !6633
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6634
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 43, !dbg !6635
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 6, !dbg !6636
  %6 = load i8, i8* %socksproxy, align 1, !dbg !6636
  %tobool2 = trunc i8 %6 to i1, !dbg !6636
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !6634

cond.true:                                        ; preds = %if.then
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6637
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 15, !dbg !6639
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !6640
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 3, !dbg !6641
  %8 = load i8*, i8** %dispname, align 8, !dbg !6641
  br label %cond.end19, !dbg !6642

cond.false:                                       ; preds = %if.then
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6643
  %bits3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 43, !dbg !6644
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits3, i32 0, i32 5, !dbg !6645
  %10 = load i8, i8* %httpproxy, align 1, !dbg !6645
  %tobool4 = trunc i8 %10 to i1, !dbg !6645
  br i1 %tobool4, label %cond.true5, label %cond.false8, !dbg !6643

cond.true5:                                       ; preds = %cond.false
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6646
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 16, !dbg !6647
  %host6 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !6648
  %dispname7 = getelementptr inbounds %struct.hostname, %struct.hostname* %host6, i32 0, i32 3, !dbg !6649
  %12 = load i8*, i8** %dispname7, align 8, !dbg !6649
  br label %cond.end17, !dbg !6650

cond.false8:                                      ; preds = %cond.false
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6651
  %bits9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 43, !dbg !6652
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits9, i32 0, i32 2, !dbg !6653
  %14 = load i8, i8* %conn_to_host, align 1, !dbg !6653
  %tobool10 = trunc i8 %14 to i1, !dbg !6653
  br i1 %tobool10, label %cond.true11, label %cond.false14, !dbg !6651

cond.true11:                                      ; preds = %cond.false8
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6654
  %conn_to_host12 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 14, !dbg !6655
  %dispname13 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host12, i32 0, i32 3, !dbg !6656
  %16 = load i8*, i8** %dispname13, align 8, !dbg !6656
  br label %cond.end, !dbg !6657

cond.false14:                                     ; preds = %cond.false8
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6658
  %host15 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 12, !dbg !6659
  %dispname16 = getelementptr inbounds %struct.hostname, %struct.hostname* %host15, i32 0, i32 3, !dbg !6660
  %18 = load i8*, i8** %dispname16, align 8, !dbg !6660
  br label %cond.end, !dbg !6661

cond.end:                                         ; preds = %cond.false14, %cond.true11
  %cond = phi i8* [ %16, %cond.true11 ], [ %18, %cond.false14 ], !dbg !6663
  br label %cond.end17, !dbg !6665

cond.end17:                                       ; preds = %cond.end, %cond.true5
  %cond18 = phi i8* [ %12, %cond.true5 ], [ %cond, %cond.end ], !dbg !6666
  br label %cond.end19, !dbg !6667

cond.end19:                                       ; preds = %cond.end17, %cond.true
  %cond20 = phi i8* [ %8, %cond.true ], [ %cond18, %cond.end17 ], !dbg !6668
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6669
  %ip_addr_str = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 9, !dbg !6670
  %arraydecay = getelementptr inbounds [46 x i8], [46 x i8]* %ip_addr_str, i32 0, i32 0, !dbg !6669
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6671
  %port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 17, !dbg !6672
  %21 = load i64, i64* %port, align 8, !dbg !6672
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6673
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 5, !dbg !6674
  %23 = load i64, i64* %connection_id, align 8, !dbg !6674
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i32 0, i32 0), i8* %cond20, i8* %arraydecay, i64 %21, i64 %23), !dbg !6675
  br label %if.end, !dbg !6675

if.end:                                           ; preds = %cond.end19, %entry
  ret void, !dbg !6676
}

; Function Attrs: nounwind uwtable
define i32 @Curl_protocol_getsock(%struct.connectdata* %conn, i32* %socks, i32 %numsocks) #0 !dbg !2125 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %socks.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6677, metadata !2256), !dbg !6678
  store i32* %socks, i32** %socks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %socks.addr, metadata !6679, metadata !2256), !dbg !6680
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !6681, metadata !2256), !dbg !6682
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6683
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 47, !dbg !6685
  %1 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6685
  %proto_getsock = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %1, i32 0, i32 8, !dbg !6686
  %2 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %proto_getsock, align 8, !dbg !6686
  %tobool = icmp ne i32 (%struct.connectdata*, i32*, i32)* %2, null, !dbg !6683
  br i1 %tobool, label %if.then, label %if.end, !dbg !6687

if.then:                                          ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6688
  %handler1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 47, !dbg !6689
  %4 = load %struct.Curl_handler*, %struct.Curl_handler** %handler1, align 8, !dbg !6689
  %proto_getsock2 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %4, i32 0, i32 8, !dbg !6690
  %5 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %proto_getsock2, align 8, !dbg !6690
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6691
  %7 = load i32*, i32** %socks.addr, align 8, !dbg !6692
  %8 = load i32, i32* %numsocks.addr, align 4, !dbg !6693
  %call = call i32 %5(%struct.connectdata* %6, i32* %7, i32 %8), !dbg !6688
  store i32 %call, i32* %retval, align 4, !dbg !6694
  br label %return, !dbg !6694

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6695
  br label %return, !dbg !6695

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6696
  ret i32 %9, !dbg !6696
}

; Function Attrs: nounwind uwtable
define i32 @Curl_doing_getsock(%struct.connectdata* %conn, i32* %socks, i32 %numsocks) #0 !dbg !2126 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %socks.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6697, metadata !2256), !dbg !6698
  store i32* %socks, i32** %socks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %socks.addr, metadata !6699, metadata !2256), !dbg !6700
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !6701, metadata !2256), !dbg !6702
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6703
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !6703
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6705

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6706
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 47, !dbg !6708
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6708
  %doing_getsock = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 9, !dbg !6709
  %3 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %doing_getsock, align 8, !dbg !6709
  %tobool1 = icmp ne i32 (%struct.connectdata*, i32*, i32)* %3, null, !dbg !6706
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6710

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6711
  %handler2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 47, !dbg !6712
  %5 = load %struct.Curl_handler*, %struct.Curl_handler** %handler2, align 8, !dbg !6712
  %doing_getsock3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %5, i32 0, i32 9, !dbg !6713
  %6 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %doing_getsock3, align 8, !dbg !6713
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6714
  %8 = load i32*, i32** %socks.addr, align 8, !dbg !6715
  %9 = load i32, i32* %numsocks.addr, align 4, !dbg !6716
  %call = call i32 %6(%struct.connectdata* %7, i32* %8, i32 %9), !dbg !6711
  store i32 %call, i32* %retval, align 4, !dbg !6717
  br label %return, !dbg !6717

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6718
  br label %return, !dbg !6718

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6719
  ret i32 %10, !dbg !6719
}

; Function Attrs: nounwind uwtable
define i32 @Curl_protocol_connecting(%struct.connectdata* %conn, i8* %done) #0 !dbg !2127 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6720, metadata !2256), !dbg !6721
  store i8* %done, i8** %done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %done.addr, metadata !6722, metadata !2256), !dbg !6723
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6724, metadata !2256), !dbg !6725
  store i32 0, i32* %result, align 4, !dbg !6725
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6726
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !6726
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6728

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6729
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 47, !dbg !6731
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6731
  %connecting = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 6, !dbg !6732
  %3 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connecting, align 8, !dbg !6732
  %tobool1 = icmp ne i32 (%struct.connectdata*, i8*)* %3, null, !dbg !6729
  br i1 %tobool1, label %if.then, label %if.else, !dbg !6733

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8*, i8** %done.addr, align 8, !dbg !6734
  store i8 0, i8* %4, align 1, !dbg !6736
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6737
  %handler2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 47, !dbg !6738
  %6 = load %struct.Curl_handler*, %struct.Curl_handler** %handler2, align 8, !dbg !6738
  %connecting3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %6, i32 0, i32 6, !dbg !6739
  %7 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connecting3, align 8, !dbg !6739
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6740
  %9 = load i8*, i8** %done.addr, align 8, !dbg !6741
  %call = call i32 %7(%struct.connectdata* %8, i8* %9), !dbg !6737
  store i32 %call, i32* %result, align 4, !dbg !6742
  br label %if.end, !dbg !6743

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load i8*, i8** %done.addr, align 8, !dbg !6744
  store i8 1, i8* %10, align 1, !dbg !6745
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %result, align 4, !dbg !6746
  ret i32 %11, !dbg !6747
}

; Function Attrs: nounwind uwtable
define i32 @Curl_protocol_doing(%struct.connectdata* %conn, i8* %done) #0 !dbg !2128 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6748, metadata !2256), !dbg !6749
  store i8* %done, i8** %done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %done.addr, metadata !6750, metadata !2256), !dbg !6751
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6752, metadata !2256), !dbg !6753
  store i32 0, i32* %result, align 4, !dbg !6753
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6754
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !6754
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6756

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6757
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 47, !dbg !6759
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6759
  %doing = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 7, !dbg !6760
  %3 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %doing, align 8, !dbg !6760
  %tobool1 = icmp ne i32 (%struct.connectdata*, i8*)* %3, null, !dbg !6757
  br i1 %tobool1, label %if.then, label %if.else, !dbg !6761

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8*, i8** %done.addr, align 8, !dbg !6762
  store i8 0, i8* %4, align 1, !dbg !6764
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6765
  %handler2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 47, !dbg !6766
  %6 = load %struct.Curl_handler*, %struct.Curl_handler** %handler2, align 8, !dbg !6766
  %doing3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %6, i32 0, i32 7, !dbg !6767
  %7 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %doing3, align 8, !dbg !6767
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6768
  %9 = load i8*, i8** %done.addr, align 8, !dbg !6769
  %call = call i32 %7(%struct.connectdata* %8, i8* %9), !dbg !6765
  store i32 %call, i32* %result, align 4, !dbg !6770
  br label %if.end, !dbg !6771

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load i8*, i8** %done.addr, align 8, !dbg !6772
  store i8 1, i8* %10, align 1, !dbg !6773
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %result, align 4, !dbg !6774
  ret i32 %11, !dbg !6775
}

; Function Attrs: nounwind uwtable
define i32 @Curl_protocol_connect(%struct.connectdata* %conn, i8* %protocol_done) #0 !dbg !2129 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %protocol_done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6776, metadata !2256), !dbg !6777
  store i8* %protocol_done, i8** %protocol_done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %protocol_done.addr, metadata !6778, metadata !2256), !dbg !6779
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6780, metadata !2256), !dbg !6781
  store i32 0, i32* %result, align 4, !dbg !6781
  %0 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6782
  store i8 0, i8* %0, align 1, !dbg !6783
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6784
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 43, !dbg !6786
  %tcpconnect = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 12, !dbg !6787
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %tcpconnect, i64 0, i64 0, !dbg !6784
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6784
  %tobool = trunc i8 %2 to i1, !dbg !6784
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !6788

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6789
  %bits1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !6791
  %protoconnstart = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1, i32 0, i32 13, !dbg !6792
  %4 = load i8, i8* %protoconnstart, align 1, !dbg !6792
  %tobool2 = trunc i8 %4 to i1, !dbg !6792
  br i1 %tobool2, label %if.then, label %if.end5, !dbg !6793

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6794
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 47, !dbg !6797
  %6 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6797
  %connecting = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %6, i32 0, i32 6, !dbg !6798
  %7 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connecting, align 8, !dbg !6798
  %tobool3 = icmp ne i32 (%struct.connectdata*, i8*)* %7, null, !dbg !6794
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6799

if.then4:                                         ; preds = %if.then
  %8 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6800
  store i8 1, i8* %8, align 1, !dbg !6801
  br label %if.end, !dbg !6802

if.end:                                           ; preds = %if.then4, %if.then
  store i32 0, i32* %retval, align 4, !dbg !6803
  br label %return, !dbg !6803

if.end5:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6804
  %bits6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 43, !dbg !6806
  %protoconnstart7 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits6, i32 0, i32 13, !dbg !6807
  %10 = load i8, i8* %protoconnstart7, align 1, !dbg !6807
  %tobool8 = trunc i8 %10 to i1, !dbg !6807
  br i1 %tobool8, label %if.end41, label %if.then9, !dbg !6808

if.then9:                                         ; preds = %if.end5
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6809
  %call = call i32 @Curl_proxy_connect(%struct.connectdata* %11, i32 0), !dbg !6811
  store i32 %call, i32* %result, align 4, !dbg !6812
  %12 = load i32, i32* %result, align 4, !dbg !6813
  %tobool10 = icmp ne i32 %12, 0, !dbg !6813
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6815

if.then11:                                        ; preds = %if.then9
  %13 = load i32, i32* %result, align 4, !dbg !6816
  store i32 %13, i32* %retval, align 4, !dbg !6817
  br label %return, !dbg !6817

if.end12:                                         ; preds = %if.then9
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6818
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 16, !dbg !6818
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 2, !dbg !6818
  %15 = load i32, i32* %proxytype, align 8, !dbg !6818
  %cmp = icmp eq i32 %15, 2, !dbg !6818
  br i1 %cmp, label %land.lhs.true13, label %if.end18, !dbg !6818

land.lhs.true13:                                  ; preds = %if.end12
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6820
  %bits14 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 43, !dbg !6820
  %proxy_ssl_connected = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits14, i32 0, i32 31, !dbg !6820
  %arrayidx15 = getelementptr inbounds [2 x i8], [2 x i8]* %proxy_ssl_connected, i64 0, i64 0, !dbg !6820
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !6820
  %tobool16 = trunc i8 %17 to i1, !dbg !6820
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !6820

if.then17:                                        ; preds = %land.lhs.true13
  store i32 0, i32* %retval, align 4, !dbg !6822
  br label %return, !dbg !6822

if.end18:                                         ; preds = %land.lhs.true13, %if.end12
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6823
  %bits19 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %18, i32 0, i32 43, !dbg !6825
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits19, i32 0, i32 15, !dbg !6826
  %19 = load i8, i8* %tunnel_proxy, align 1, !dbg !6826
  %tobool20 = trunc i8 %19 to i1, !dbg !6826
  br i1 %tobool20, label %land.lhs.true21, label %if.end28, !dbg !6827

land.lhs.true21:                                  ; preds = %if.end18
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6828
  %bits22 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 43, !dbg !6830
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits22, i32 0, i32 5, !dbg !6831
  %21 = load i8, i8* %httpproxy, align 1, !dbg !6831
  %tobool23 = trunc i8 %21 to i1, !dbg !6831
  br i1 %tobool23, label %land.lhs.true24, label %if.end28, !dbg !6832

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6833
  %tunnel_state = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 72, !dbg !6834
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state, i64 0, i64 0, !dbg !6833
  %23 = load i32, i32* %arrayidx25, align 8, !dbg !6833
  %cmp26 = icmp ne i32 %23, 2, !dbg !6835
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6836

if.then27:                                        ; preds = %land.lhs.true24
  store i32 0, i32* %retval, align 4, !dbg !6838
  br label %return, !dbg !6838

if.end28:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %if.end18
  %24 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6839
  %handler29 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %24, i32 0, i32 47, !dbg !6841
  %25 = load %struct.Curl_handler*, %struct.Curl_handler** %handler29, align 8, !dbg !6841
  %connect_it = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %25, i32 0, i32 5, !dbg !6842
  %26 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connect_it, align 8, !dbg !6842
  %tobool30 = icmp ne i32 (%struct.connectdata*, i8*)* %26, null, !dbg !6839
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !6843

if.then31:                                        ; preds = %if.end28
  %27 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6844
  %handler32 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %27, i32 0, i32 47, !dbg !6846
  %28 = load %struct.Curl_handler*, %struct.Curl_handler** %handler32, align 8, !dbg !6846
  %connect_it33 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %28, i32 0, i32 5, !dbg !6847
  %29 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connect_it33, align 8, !dbg !6847
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6848
  %31 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6849
  %call34 = call i32 %29(%struct.connectdata* %30, i8* %31), !dbg !6844
  store i32 %call34, i32* %result, align 4, !dbg !6850
  br label %if.end35, !dbg !6851

if.else:                                          ; preds = %if.end28
  %32 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6852
  store i8 1, i8* %32, align 1, !dbg !6853
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then31
  %33 = load i32, i32* %result, align 4, !dbg !6854
  %tobool36 = icmp ne i32 %33, 0, !dbg !6854
  br i1 %tobool36, label %if.end40, label %if.then37, !dbg !6856

if.then37:                                        ; preds = %if.end35
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6857
  %bits38 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 43, !dbg !6858
  %protoconnstart39 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits38, i32 0, i32 13, !dbg !6859
  store i8 1, i8* %protoconnstart39, align 1, !dbg !6860
  br label %if.end40, !dbg !6857

if.end40:                                         ; preds = %if.then37, %if.end35
  br label %if.end41, !dbg !6861

if.end41:                                         ; preds = %if.end40, %if.end5
  %35 = load i32, i32* %result, align 4, !dbg !6862
  store i32 %35, i32* %retval, align 4, !dbg !6863
  br label %return, !dbg !6863

return:                                           ; preds = %if.end41, %if.then27, %if.then17, %if.then11, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !6864
  ret i32 %36, !dbg !6864
}

declare i32 @Curl_proxy_connect(%struct.connectdata*, i32) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_setup_conn(%struct.connectdata* %conn, i8* %protocol_done) #0 !dbg !2131 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %protocol_done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  %coerce = alloca %struct.timeval, align 8
  %coerce34 = alloca %struct.timeval, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6865, metadata !2256), !dbg !6866
  store i8* %protocol_done, i8** %protocol_done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %protocol_done.addr, metadata !6867, metadata !2256), !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6869, metadata !2256), !dbg !6870
  store i32 0, i32* %result, align 4, !dbg !6870
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !6871, metadata !2256), !dbg !6872
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6873
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !6874
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !6874
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !6872
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6875
  call void @Curl_pgrsTime(%struct.Curl_easy* %2, i32 3), !dbg !6876
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6877
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 47, !dbg !6879
  %4 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6879
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %4, i32 0, i32 16, !dbg !6880
  %5 = load i32, i32* %flags, align 4, !dbg !6880
  %and = and i32 %5, 16, !dbg !6881
  %tobool = icmp ne i32 %and, 0, !dbg !6881
  br i1 %tobool, label %if.then, label %if.end, !dbg !6882

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6883
  store i8 1, i8* %6, align 1, !dbg !6885
  %7 = load i32, i32* %result, align 4, !dbg !6886
  store i32 %7, i32* %retval, align 4, !dbg !6887
  br label %return, !dbg !6887

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6888
  store i8 0, i8* %8, align 1, !dbg !6889
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6890
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 43, !dbg !6891
  %proxy_connect_closed = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 24, !dbg !6892
  store i8 0, i8* %proxy_connect_closed, align 1, !dbg !6893
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6894
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !6896
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !6897
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 36, !dbg !6894
  %11 = load i8*, i8** %arrayidx, align 8, !dbg !6894
  %tobool2 = icmp ne i8* %11, null, !dbg !6894
  br i1 %tobool2, label %if.then3, label %if.end16, !dbg !6898

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !6899

do.body:                                          ; preds = %if.then3
  %12 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6901
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6901
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 52, !dbg !6901
  %uagent = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 1, !dbg !6901
  %14 = load i8*, i8** %uagent, align 8, !dbg !6901
  call void %12(i8* %14), !dbg !6901
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6901
  %allocptr4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 52, !dbg !6901
  %uagent5 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr4, i32 0, i32 1, !dbg !6901
  store i8* null, i8** %uagent5, align 8, !dbg !6901
  br label %do.end, !dbg !6901

do.end:                                           ; preds = %do.body
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6904
  %set6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 13, !dbg !6905
  %str7 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set6, i32 0, i32 128, !dbg !6906
  %arrayidx8 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str7, i64 0, i64 36, !dbg !6904
  %17 = load i8*, i8** %arrayidx8, align 8, !dbg !6904
  %call = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* %17), !dbg !6907
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6908
  %allocptr9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %18, i32 0, i32 52, !dbg !6909
  %uagent10 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr9, i32 0, i32 1, !dbg !6910
  store i8* %call, i8** %uagent10, align 8, !dbg !6911
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6912
  %allocptr11 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 52, !dbg !6914
  %uagent12 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr11, i32 0, i32 1, !dbg !6915
  %20 = load i8*, i8** %uagent12, align 8, !dbg !6915
  %tobool13 = icmp ne i8* %20, null, !dbg !6912
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !6916

if.then14:                                        ; preds = %do.end
  store i32 27, i32* %retval, align 4, !dbg !6917
  br label %return, !dbg !6917

if.end15:                                         ; preds = %do.end
  br label %if.end16, !dbg !6918

if.end16:                                         ; preds = %if.end15, %if.end
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6919
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 12, !dbg !6920
  %headerbytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 6, !dbg !6921
  store i64 0, i64* %headerbytecount, align 8, !dbg !6922
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6923
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !6924
  %crlf_conversions = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 36, !dbg !6925
  store i64 0, i64* %crlf_conversions, align 8, !dbg !6926
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6927
  %now = getelementptr inbounds %struct.connectdata, %struct.connectdata* %23, i32 0, i32 31, !dbg !6928
  %call17 = call { i64, i64 } @curlx_tvnow(), !dbg !6929
  %24 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !6929
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !6929
  %26 = extractvalue { i64, i64 } %call17, 0, !dbg !6929
  store i64 %26, i64* %25, align 8, !dbg !6929
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !6929
  %28 = extractvalue { i64, i64 } %call17, 1, !dbg !6929
  store i64 %28, i64* %27, align 8, !dbg !6929
  %29 = bitcast %struct.timeval* %now to i8*, !dbg !6929
  %30 = bitcast %struct.timeval* %coerce to i8*, !dbg !6929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false), !dbg !6930
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6932
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 33, !dbg !6934
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 0, !dbg !6932
  %32 = load i32, i32* %arrayidx18, align 8, !dbg !6932
  %cmp = icmp eq i32 -1, %32, !dbg !6935
  br i1 %cmp, label %if.then19, label %if.else, !dbg !6936

if.then19:                                        ; preds = %if.end16
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6937
  %bits20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 43, !dbg !6939
  %tcpconnect = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits20, i32 0, i32 12, !dbg !6940
  %arrayidx21 = getelementptr inbounds [2 x i8], [2 x i8]* %tcpconnect, i64 0, i64 0, !dbg !6937
  store i8 0, i8* %arrayidx21, align 1, !dbg !6941
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6942
  %35 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6943
  %dns_entry = getelementptr inbounds %struct.connectdata, %struct.connectdata* %35, i32 0, i32 6, !dbg !6944
  %36 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns_entry, align 8, !dbg !6944
  %call22 = call i32 @Curl_connecthost(%struct.connectdata* %34, %struct.Curl_dns_entry* %36), !dbg !6945
  store i32 %call22, i32* %result, align 4, !dbg !6946
  %37 = load i32, i32* %result, align 4, !dbg !6947
  %tobool23 = icmp ne i32 %37, 0, !dbg !6947
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6949

if.then24:                                        ; preds = %if.then19
  %38 = load i32, i32* %result, align 4, !dbg !6950
  store i32 %38, i32* %retval, align 4, !dbg !6951
  br label %return, !dbg !6951

if.end25:                                         ; preds = %if.then19
  br label %if.end31, !dbg !6952

if.else:                                          ; preds = %if.end16
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6953
  call void @Curl_pgrsTime(%struct.Curl_easy* %39, i32 4), !dbg !6955
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6956
  call void @Curl_pgrsTime(%struct.Curl_easy* %40, i32 5), !dbg !6957
  %41 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6958
  %bits26 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %41, i32 0, i32 43, !dbg !6959
  %tcpconnect27 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits26, i32 0, i32 12, !dbg !6960
  %arrayidx28 = getelementptr inbounds [2 x i8], [2 x i8]* %tcpconnect27, i64 0, i64 0, !dbg !6958
  store i8 1, i8* %arrayidx28, align 1, !dbg !6961
  %42 = load i8*, i8** %protocol_done.addr, align 8, !dbg !6962
  store i8 1, i8* %42, align 1, !dbg !6963
  %43 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6964
  %44 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6965
  %sock29 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 33, !dbg !6966
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %sock29, i64 0, i64 0, !dbg !6965
  %45 = load i32, i32* %arrayidx30, align 8, !dbg !6965
  call void @Curl_updateconninfo(%struct.connectdata* %43, i32 %45), !dbg !6967
  %46 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6968
  call void @Curl_verboseconnect(%struct.connectdata* %46), !dbg !6969
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end25
  %47 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6970
  %now32 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %47, i32 0, i32 31, !dbg !6971
  %call33 = call { i64, i64 } @curlx_tvnow(), !dbg !6972
  %48 = bitcast %struct.timeval* %coerce34 to { i64, i64 }*, !dbg !6972
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0, !dbg !6972
  %50 = extractvalue { i64, i64 } %call33, 0, !dbg !6972
  store i64 %50, i64* %49, align 8, !dbg !6972
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1, !dbg !6972
  %52 = extractvalue { i64, i64 } %call33, 1, !dbg !6972
  store i64 %52, i64* %51, align 8, !dbg !6972
  %53 = bitcast %struct.timeval* %now32 to i8*, !dbg !6972
  %54 = bitcast %struct.timeval* %coerce34 to i8*, !dbg !6972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false), !dbg !6973
  %55 = load i32, i32* %result, align 4, !dbg !6974
  store i32 %55, i32* %retval, align 4, !dbg !6975
  br label %return, !dbg !6975

return:                                           ; preds = %if.end31, %if.then24, %if.then14, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !6976
  ret i32 %56, !dbg !6976
}

declare void @Curl_pgrsTime(%struct.Curl_easy*, i32) #3

declare i8* @curl_maprintf(i8*, ...) #3

declare i32 @Curl_connecthost(%struct.connectdata*, %struct.Curl_dns_entry*) #3

declare void @Curl_updateconninfo(%struct.connectdata*, i32) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_connect(%struct.Curl_easy* %data, %struct.connectdata** %in_connect, i8* %asyncp, i8* %protocol_done) #0 !dbg !2132 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %in_connect.addr = alloca %struct.connectdata**, align 8
  %asyncp.addr = alloca i8*, align 8
  %protocol_done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6977, metadata !2256), !dbg !6978
  store %struct.connectdata** %in_connect, %struct.connectdata*** %in_connect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %in_connect.addr, metadata !6979, metadata !2256), !dbg !6980
  store i8* %asyncp, i8** %asyncp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %asyncp.addr, metadata !6981, metadata !2256), !dbg !6982
  store i8* %protocol_done, i8** %protocol_done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %protocol_done.addr, metadata !6983, metadata !2256), !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6985, metadata !2256), !dbg !6986
  %0 = load i8*, i8** %asyncp.addr, align 8, !dbg !6987
  store i8 0, i8* %0, align 1, !dbg !6988
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6989
  %2 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !6990
  %3 = load i8*, i8** %asyncp.addr, align 8, !dbg !6991
  %call = call i32 @create_conn(%struct.Curl_easy* %1, %struct.connectdata** %2, i8* %3), !dbg !6992
  store i32 %call, i32* %result, align 4, !dbg !6993
  %4 = load i32, i32* %result, align 4, !dbg !6994
  %tobool = icmp ne i32 %4, 0, !dbg !6994
  br i1 %tobool, label %if.end9, label %if.then, !dbg !6996

if.then:                                          ; preds = %entry
  %5 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !6997
  %6 = load %struct.connectdata*, %struct.connectdata** %5, align 8, !dbg !7000
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 55, !dbg !7001
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !7002
  %7 = load i64, i64* %size, align 8, !dbg !7002
  %tobool1 = icmp ne i64 %7, 0, !dbg !7003
  br i1 %tobool1, label %if.then4, label %lor.lhs.false, !dbg !7004

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7005
  %9 = load %struct.connectdata*, %struct.connectdata** %8, align 8, !dbg !7007
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 56, !dbg !7008
  %size2 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !7009
  %10 = load i64, i64* %size2, align 8, !dbg !7009
  %tobool3 = icmp ne i64 %10, 0, !dbg !7010
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7011

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %11 = load i8*, i8** %protocol_done.addr, align 8, !dbg !7012
  store i8 1, i8* %11, align 1, !dbg !7013
  br label %if.end8, !dbg !7014

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i8*, i8** %asyncp.addr, align 8, !dbg !7015
  %13 = load i8, i8* %12, align 1, !dbg !7017
  %tobool5 = trunc i8 %13 to i1, !dbg !7017
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !7018

if.then6:                                         ; preds = %if.else
  %14 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7019
  %15 = load %struct.connectdata*, %struct.connectdata** %14, align 8, !dbg !7021
  %16 = load i8*, i8** %protocol_done.addr, align 8, !dbg !7022
  %call7 = call i32 @Curl_setup_conn(%struct.connectdata* %15, i8* %16), !dbg !7023
  store i32 %call7, i32* %result, align 4, !dbg !7024
  br label %if.end, !dbg !7025

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end9, !dbg !7026

if.end9:                                          ; preds = %if.end8, %entry
  %17 = load i32, i32* %result, align 4, !dbg !7027
  %cmp = icmp eq i32 %17, 89, !dbg !7029
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7030

if.then10:                                        ; preds = %if.end9
  %18 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7031
  store %struct.connectdata* null, %struct.connectdata** %18, align 8, !dbg !7033
  %19 = load i32, i32* %result, align 4, !dbg !7034
  store i32 %19, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

if.end11:                                         ; preds = %if.end9
  %20 = load i32, i32* %result, align 4, !dbg !7036
  %tobool12 = icmp ne i32 %20, 0, !dbg !7036
  br i1 %tobool12, label %land.lhs.true, label %if.end16, !dbg !7038

land.lhs.true:                                    ; preds = %if.end11
  %21 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7039
  %22 = load %struct.connectdata*, %struct.connectdata** %21, align 8, !dbg !7041
  %tobool13 = icmp ne %struct.connectdata* %22, null, !dbg !7041
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !7042

if.then14:                                        ; preds = %land.lhs.true
  %23 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7043
  %24 = load %struct.connectdata*, %struct.connectdata** %23, align 8, !dbg !7045
  %call15 = call i32 @Curl_disconnect(%struct.connectdata* %24, i1 zeroext false), !dbg !7046
  %25 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7047
  store %struct.connectdata* null, %struct.connectdata** %25, align 8, !dbg !7048
  br label %if.end16, !dbg !7049

if.end16:                                         ; preds = %if.then14, %land.lhs.true, %if.end11
  %26 = load i32, i32* %result, align 4, !dbg !7050
  store i32 %26, i32* %retval, align 4, !dbg !7051
  br label %return, !dbg !7051

return:                                           ; preds = %if.end16, %if.then10
  %27 = load i32, i32* %retval, align 4, !dbg !7052
  ret i32 %27, !dbg !7052
}

; Function Attrs: nounwind uwtable
define internal i32 @create_conn(%struct.Curl_easy* %data, %struct.connectdata** %in_connect, i8* %async) #0 !dbg !2157 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %in_connect.addr = alloca %struct.connectdata**, align 8
  %async.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %conn = alloca %struct.connectdata*, align 8
  %conn_temp = alloca %struct.connectdata*, align 8
  %urllen = alloca i64, align 8
  %user = alloca i8*, align 8
  %passwd = alloca i8*, align 8
  %options = alloca i8*, align 8
  %reuse = alloca i8, align 1
  %prot_missing = alloca i8, align 1
  %connections_available = alloca i8, align 1
  %force_reuse = alloca i8, align 1
  %waitpipe = alloca i8, align 1
  %max_host_connections = alloca i64, align 8
  %max_total_connections = alloca i64, align 8
  %reurl = alloca i8*, align 8
  %ch_lower = alloca i8*, align 8
  %path_q_sep = alloca i8*, align 8
  %done = alloca i8, align 1
  %pipelen = alloca i64, align 8
  %bundle472 = alloca %struct.connectbundle*, align 8
  %conn_candidate = alloca %struct.connectdata*, align 8
  %conn_candidate525 = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !7053, metadata !2256), !dbg !7054
  store %struct.connectdata** %in_connect, %struct.connectdata*** %in_connect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %in_connect.addr, metadata !7055, metadata !2256), !dbg !7056
  store i8* %async, i8** %async.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %async.addr, metadata !7057, metadata !2256), !dbg !7058
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7059, metadata !2256), !dbg !7060
  store i32 0, i32* %result, align 4, !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !7061, metadata !2256), !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_temp, metadata !7063, metadata !2256), !dbg !7064
  store %struct.connectdata* null, %struct.connectdata** %conn_temp, align 8, !dbg !7064
  call void @llvm.dbg.declare(metadata i64* %urllen, metadata !7065, metadata !2256), !dbg !7066
  call void @llvm.dbg.declare(metadata i8** %user, metadata !7067, metadata !2256), !dbg !7068
  store i8* null, i8** %user, align 8, !dbg !7068
  call void @llvm.dbg.declare(metadata i8** %passwd, metadata !7069, metadata !2256), !dbg !7070
  store i8* null, i8** %passwd, align 8, !dbg !7070
  call void @llvm.dbg.declare(metadata i8** %options, metadata !7071, metadata !2256), !dbg !7072
  store i8* null, i8** %options, align 8, !dbg !7072
  call void @llvm.dbg.declare(metadata i8* %reuse, metadata !7073, metadata !2256), !dbg !7074
  call void @llvm.dbg.declare(metadata i8* %prot_missing, metadata !7075, metadata !2256), !dbg !7076
  store i8 0, i8* %prot_missing, align 1, !dbg !7076
  call void @llvm.dbg.declare(metadata i8* %connections_available, metadata !7077, metadata !2256), !dbg !7078
  store i8 1, i8* %connections_available, align 1, !dbg !7078
  call void @llvm.dbg.declare(metadata i8* %force_reuse, metadata !7079, metadata !2256), !dbg !7080
  store i8 0, i8* %force_reuse, align 1, !dbg !7080
  call void @llvm.dbg.declare(metadata i8* %waitpipe, metadata !7081, metadata !2256), !dbg !7082
  store i8 0, i8* %waitpipe, align 1, !dbg !7082
  call void @llvm.dbg.declare(metadata i64* %max_host_connections, metadata !7083, metadata !2256), !dbg !7084
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7085
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 9, !dbg !7086
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !7086
  %call = call i64 @Curl_multi_max_host_connections(%struct.Curl_multi* %1), !dbg !7087
  store i64 %call, i64* %max_host_connections, align 8, !dbg !7084
  call void @llvm.dbg.declare(metadata i64* %max_total_connections, metadata !7088, metadata !2256), !dbg !7089
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7090
  %multi1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 9, !dbg !7091
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi1, align 8, !dbg !7091
  %call2 = call i64 @Curl_multi_max_total_connections(%struct.Curl_multi* %3), !dbg !7092
  store i64 %call2, i64* %max_total_connections, align 8, !dbg !7089
  %4 = load i8*, i8** %async.addr, align 8, !dbg !7093
  store i8 0, i8* %4, align 1, !dbg !7094
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7095
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 14, !dbg !7097
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 0, !dbg !7098
  %6 = load i8*, i8** %url, align 8, !dbg !7098
  %tobool = icmp ne i8* %6, null, !dbg !7095
  br i1 %tobool, label %if.end, label %if.then, !dbg !7099

if.then:                                          ; preds = %entry
  store i32 3, i32* %result, align 4, !dbg !7100
  br label %out, !dbg !7102

if.end:                                           ; preds = %entry
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7103
  %call3 = call %struct.connectdata* @allocate_conn(%struct.Curl_easy* %7), !dbg !7104
  store %struct.connectdata* %call3, %struct.connectdata** %conn, align 8, !dbg !7105
  %8 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7106
  %tobool4 = icmp ne %struct.connectdata* %8, null, !dbg !7106
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7108

if.then5:                                         ; preds = %if.end
  store i32 27, i32* %result, align 4, !dbg !7109
  br label %out, !dbg !7111

if.end6:                                          ; preds = %if.end
  %9 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7112
  %10 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7113
  store %struct.connectdata* %9, %struct.connectdata** %10, align 8, !dbg !7114
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7115
  %change7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 14, !dbg !7116
  %url8 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change7, i32 0, i32 0, !dbg !7117
  %12 = load i8*, i8** %url8, align 8, !dbg !7117
  %call9 = call i64 @strlen(i8* %12) #7, !dbg !7118
  store i64 %call9, i64* %urllen, align 8, !dbg !7119
  %13 = load i64, i64* %urllen, align 8, !dbg !7120
  %cmp = icmp ult i64 %13, 256, !dbg !7122
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7123

if.then10:                                        ; preds = %if.end6
  store i64 256, i64* %urllen, align 8, !dbg !7124
  br label %if.end11, !dbg !7125

if.end11:                                         ; preds = %if.then10, %if.end6
  br label %do.body, !dbg !7126

do.body:                                          ; preds = %if.end11
  %14 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7127
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7127
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 17, !dbg !7127
  %pathbuffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 37, !dbg !7127
  %16 = load i8*, i8** %pathbuffer, align 8, !dbg !7127
  call void %14(i8* %16), !dbg !7127
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7127
  %state12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 17, !dbg !7127
  %pathbuffer13 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state12, i32 0, i32 37, !dbg !7127
  store i8* null, i8** %pathbuffer13, align 8, !dbg !7127
  br label %do.end, !dbg !7127

do.end:                                           ; preds = %do.body
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7130
  %state14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 17, !dbg !7131
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state14, i32 0, i32 38, !dbg !7132
  store i8* null, i8** %path, align 8, !dbg !7133
  %19 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !7134
  %20 = load i64, i64* %urllen, align 8, !dbg !7134
  %add = add i64 %20, 2, !dbg !7134
  %call15 = call i8* %19(i64 %add), !dbg !7134
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7135
  %state16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 17, !dbg !7136
  %pathbuffer17 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state16, i32 0, i32 37, !dbg !7137
  store i8* %call15, i8** %pathbuffer17, align 8, !dbg !7138
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7139
  %state18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !7141
  %pathbuffer19 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state18, i32 0, i32 37, !dbg !7142
  %23 = load i8*, i8** %pathbuffer19, align 8, !dbg !7142
  %cmp20 = icmp eq i8* null, %23, !dbg !7143
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !7144

if.then21:                                        ; preds = %do.end
  store i32 27, i32* %result, align 4, !dbg !7145
  br label %out, !dbg !7147

if.end22:                                         ; preds = %do.end
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7148
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 17, !dbg !7149
  %pathbuffer24 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 37, !dbg !7150
  %25 = load i8*, i8** %pathbuffer24, align 8, !dbg !7150
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7151
  %state25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 17, !dbg !7152
  %path26 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state25, i32 0, i32 38, !dbg !7153
  store i8* %25, i8** %path26, align 8, !dbg !7154
  %27 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !7155
  %28 = load i64, i64* %urllen, align 8, !dbg !7155
  %add27 = add i64 %28, 2, !dbg !7155
  %call28 = call i8* %27(i64 %add27), !dbg !7155
  %29 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7156
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %29, i32 0, i32 12, !dbg !7157
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 0, !dbg !7158
  store i8* %call28, i8** %rawalloc, align 8, !dbg !7159
  %30 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7160
  %host29 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 12, !dbg !7162
  %rawalloc30 = getelementptr inbounds %struct.hostname, %struct.hostname* %host29, i32 0, i32 0, !dbg !7163
  %31 = load i8*, i8** %rawalloc30, align 8, !dbg !7163
  %cmp31 = icmp eq i8* null, %31, !dbg !7164
  br i1 %cmp31, label %if.then32, label %if.end41, !dbg !7165

if.then32:                                        ; preds = %if.end22
  br label %do.body33, !dbg !7166

do.body33:                                        ; preds = %if.then32
  %32 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7168
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7168
  %state34 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 17, !dbg !7168
  %pathbuffer35 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state34, i32 0, i32 37, !dbg !7168
  %34 = load i8*, i8** %pathbuffer35, align 8, !dbg !7168
  call void %32(i8* %34), !dbg !7168
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7168
  %state36 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 17, !dbg !7168
  %pathbuffer37 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state36, i32 0, i32 37, !dbg !7168
  store i8* null, i8** %pathbuffer37, align 8, !dbg !7168
  br label %do.end38, !dbg !7168

do.end38:                                         ; preds = %do.body33
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7171
  %state39 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %36, i32 0, i32 17, !dbg !7172
  %path40 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state39, i32 0, i32 38, !dbg !7173
  store i8* null, i8** %path40, align 8, !dbg !7174
  store i32 27, i32* %result, align 4, !dbg !7175
  br label %out, !dbg !7176

if.end41:                                         ; preds = %if.end22
  %37 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7177
  %host42 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 12, !dbg !7178
  %rawalloc43 = getelementptr inbounds %struct.hostname, %struct.hostname* %host42, i32 0, i32 0, !dbg !7179
  %38 = load i8*, i8** %rawalloc43, align 8, !dbg !7179
  %39 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7180
  %host44 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %39, i32 0, i32 12, !dbg !7181
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host44, i32 0, i32 2, !dbg !7182
  store i8* %38, i8** %name, align 8, !dbg !7183
  %40 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7184
  %host45 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %40, i32 0, i32 12, !dbg !7185
  %name46 = getelementptr inbounds %struct.hostname, %struct.hostname* %host45, i32 0, i32 2, !dbg !7186
  %41 = load i8*, i8** %name46, align 8, !dbg !7186
  %arrayidx = getelementptr inbounds i8, i8* %41, i64 0, !dbg !7184
  store i8 0, i8* %arrayidx, align 1, !dbg !7187
  %42 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !7188
  %call47 = call i8* %42(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)), !dbg !7188
  store i8* %call47, i8** %user, align 8, !dbg !7189
  %43 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !7190
  %call48 = call i8* %43(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)), !dbg !7190
  store i8* %call48, i8** %passwd, align 8, !dbg !7191
  %44 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !7192
  %call49 = call i8* %44(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)), !dbg !7192
  store i8* %call49, i8** %options, align 8, !dbg !7193
  %45 = load i8*, i8** %user, align 8, !dbg !7194
  %tobool50 = icmp ne i8* %45, null, !dbg !7194
  br i1 %tobool50, label %lor.lhs.false, label %if.then54, !dbg !7196

lor.lhs.false:                                    ; preds = %if.end41
  %46 = load i8*, i8** %passwd, align 8, !dbg !7197
  %tobool51 = icmp ne i8* %46, null, !dbg !7197
  br i1 %tobool51, label %lor.lhs.false52, label %if.then54, !dbg !7199

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %47 = load i8*, i8** %options, align 8, !dbg !7200
  %tobool53 = icmp ne i8* %47, null, !dbg !7200
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !7202

if.then54:                                        ; preds = %lor.lhs.false52, %lor.lhs.false, %if.end41
  store i32 27, i32* %result, align 4, !dbg !7203
  br label %out, !dbg !7205

if.end55:                                         ; preds = %lor.lhs.false52
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7206
  %49 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7207
  %call56 = call i32 @parseurlandfillconn(%struct.Curl_easy* %48, %struct.connectdata* %49, i8* %prot_missing, i8** %user, i8** %passwd, i8** %options), !dbg !7208
  store i32 %call56, i32* %result, align 4, !dbg !7209
  %50 = load i32, i32* %result, align 4, !dbg !7210
  %tobool57 = icmp ne i32 %50, 0, !dbg !7210
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !7212

if.then58:                                        ; preds = %if.end55
  br label %out, !dbg !7213

if.end59:                                         ; preds = %if.end55
  %51 = load i8, i8* %prot_missing, align 1, !dbg !7214
  %tobool60 = trunc i8 %51 to i1, !dbg !7214
  br i1 %tobool60, label %if.then61, label %if.end89, !dbg !7216

if.then61:                                        ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i8** %reurl, metadata !7217, metadata !2256), !dbg !7219
  call void @llvm.dbg.declare(metadata i8** %ch_lower, metadata !7220, metadata !2256), !dbg !7221
  %52 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7222
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %52, i32 0, i32 47, !dbg !7223
  %53 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !7223
  %scheme = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %53, i32 0, i32 0, !dbg !7224
  %54 = load i8*, i8** %scheme, align 8, !dbg !7224
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7225
  %change62 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %55, i32 0, i32 14, !dbg !7226
  %url63 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change62, i32 0, i32 0, !dbg !7227
  %56 = load i8*, i8** %url63, align 8, !dbg !7227
  %call64 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* %54, i8* %56), !dbg !7228
  store i8* %call64, i8** %reurl, align 8, !dbg !7229
  %57 = load i8*, i8** %reurl, align 8, !dbg !7230
  %tobool65 = icmp ne i8* %57, null, !dbg !7230
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !7232

if.then66:                                        ; preds = %if.then61
  store i32 27, i32* %result, align 4, !dbg !7233
  br label %out, !dbg !7235

if.end67:                                         ; preds = %if.then61
  %58 = load i8*, i8** %reurl, align 8, !dbg !7236
  store i8* %58, i8** %ch_lower, align 8, !dbg !7238
  br label %for.cond, !dbg !7239

for.cond:                                         ; preds = %for.inc, %if.end67
  %59 = load i8*, i8** %ch_lower, align 8, !dbg !7240
  %60 = load i8, i8* %59, align 1, !dbg !7243
  %conv = sext i8 %60 to i32, !dbg !7243
  %cmp68 = icmp ne i32 %conv, 58, !dbg !7244
  br i1 %cmp68, label %for.body, label %for.end, !dbg !7245

for.body:                                         ; preds = %for.cond
  %61 = load i8*, i8** %ch_lower, align 8, !dbg !7246
  %62 = load i8, i8* %61, align 1, !dbg !7246
  %conv70 = zext i8 %62 to i32, !dbg !7246
  %call71 = call i32 @tolower(i32 %conv70) #8, !dbg !7246
  %conv72 = trunc i32 %call71 to i8, !dbg !7247
  %63 = load i8*, i8** %ch_lower, align 8, !dbg !7248
  store i8 %conv72, i8* %63, align 1, !dbg !7249
  br label %for.inc, !dbg !7250

for.inc:                                          ; preds = %for.body
  %64 = load i8*, i8** %ch_lower, align 8, !dbg !7251
  %incdec.ptr = getelementptr inbounds i8, i8* %64, i32 1, !dbg !7251
  store i8* %incdec.ptr, i8** %ch_lower, align 8, !dbg !7251
  br label %for.cond, !dbg !7253

for.end:                                          ; preds = %for.cond
  %65 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7254
  %change73 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %65, i32 0, i32 14, !dbg !7256
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change73, i32 0, i32 1, !dbg !7257
  %66 = load i8, i8* %url_alloc, align 8, !dbg !7257
  %tobool74 = trunc i8 %66 to i1, !dbg !7257
  br i1 %tobool74, label %if.then75, label %if.end84, !dbg !7258

if.then75:                                        ; preds = %for.end
  br label %do.body76, !dbg !7259

do.body76:                                        ; preds = %if.then75
  %67 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7261
  %68 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7261
  %change77 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %68, i32 0, i32 14, !dbg !7261
  %url78 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change77, i32 0, i32 0, !dbg !7261
  %69 = load i8*, i8** %url78, align 8, !dbg !7261
  call void %67(i8* %69), !dbg !7261
  %70 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7261
  %change79 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %70, i32 0, i32 14, !dbg !7261
  %url80 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change79, i32 0, i32 0, !dbg !7261
  store i8* null, i8** %url80, align 8, !dbg !7261
  br label %do.end81, !dbg !7261

do.end81:                                         ; preds = %do.body76
  %71 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7264
  %change82 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %71, i32 0, i32 14, !dbg !7265
  %url_alloc83 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change82, i32 0, i32 1, !dbg !7266
  store i8 0, i8* %url_alloc83, align 8, !dbg !7267
  br label %if.end84, !dbg !7268

if.end84:                                         ; preds = %do.end81, %for.end
  %72 = load i8*, i8** %reurl, align 8, !dbg !7269
  %73 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7270
  %change85 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %73, i32 0, i32 14, !dbg !7271
  %url86 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change85, i32 0, i32 0, !dbg !7272
  store i8* %72, i8** %url86, align 8, !dbg !7273
  %74 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7274
  %change87 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %74, i32 0, i32 14, !dbg !7275
  %url_alloc88 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change87, i32 0, i32 1, !dbg !7276
  store i8 1, i8* %url_alloc88, align 8, !dbg !7277
  br label %if.end89, !dbg !7278

if.end89:                                         ; preds = %if.end84, %if.end59
  %75 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7279
  %given = getelementptr inbounds %struct.connectdata, %struct.connectdata* %75, i32 0, i32 48, !dbg !7281
  %76 = load %struct.Curl_handler*, %struct.Curl_handler** %given, align 8, !dbg !7281
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %76, i32 0, i32 16, !dbg !7282
  %77 = load i32, i32* %flags, align 4, !dbg !7282
  %and = and i32 %77, 64, !dbg !7283
  %tobool90 = icmp ne i32 %and, 0, !dbg !7283
  br i1 %tobool90, label %if.then91, label %if.end100, !dbg !7284

if.then91:                                        ; preds = %if.end89
  call void @llvm.dbg.declare(metadata i8** %path_q_sep, metadata !7285, metadata !2256), !dbg !7287
  %78 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7288
  %data92 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 0, !dbg !7289
  %79 = load %struct.Curl_easy*, %struct.Curl_easy** %data92, align 8, !dbg !7289
  %state93 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %79, i32 0, i32 17, !dbg !7290
  %path94 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state93, i32 0, i32 38, !dbg !7291
  %80 = load i8*, i8** %path94, align 8, !dbg !7291
  %call95 = call i8* @strchr(i8* %80, i32 63) #7, !dbg !7292
  store i8* %call95, i8** %path_q_sep, align 8, !dbg !7287
  %81 = load i8*, i8** %path_q_sep, align 8, !dbg !7293
  %tobool96 = icmp ne i8* %81, null, !dbg !7293
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !7295

if.then97:                                        ; preds = %if.then91
  %82 = load i8*, i8** %path_q_sep, align 8, !dbg !7296
  %arrayidx98 = getelementptr inbounds i8, i8* %82, i64 0, !dbg !7296
  store i8 0, i8* %arrayidx98, align 1, !dbg !7298
  br label %if.end99, !dbg !7299

if.end99:                                         ; preds = %if.then97, %if.then91
  br label %if.end100, !dbg !7300

if.end100:                                        ; preds = %if.end99, %if.end89
  %83 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7301
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %83, i32 0, i32 13, !dbg !7303
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !7304
  %arrayidx101 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 53, !dbg !7301
  %84 = load i8*, i8** %arrayidx101, align 8, !dbg !7301
  %tobool102 = icmp ne i8* %84, null, !dbg !7301
  br i1 %tobool102, label %if.then103, label %if.end112, !dbg !7305

if.then103:                                       ; preds = %if.end100
  %85 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !7306
  %86 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7306
  %set104 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %86, i32 0, i32 13, !dbg !7306
  %str105 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set104, i32 0, i32 128, !dbg !7306
  %arrayidx106 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str105, i64 0, i64 53, !dbg !7306
  %87 = load i8*, i8** %arrayidx106, align 8, !dbg !7306
  %call107 = call i8* %85(i8* %87), !dbg !7306
  %88 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7308
  %oauth_bearer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %88, i32 0, i32 28, !dbg !7309
  store i8* %call107, i8** %oauth_bearer, align 8, !dbg !7310
  %89 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7311
  %oauth_bearer108 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %89, i32 0, i32 28, !dbg !7313
  %90 = load i8*, i8** %oauth_bearer108, align 8, !dbg !7313
  %tobool109 = icmp ne i8* %90, null, !dbg !7311
  br i1 %tobool109, label %if.end111, label %if.then110, !dbg !7314

if.then110:                                       ; preds = %if.then103
  store i32 27, i32* %result, align 4, !dbg !7315
  br label %out, !dbg !7317

if.end111:                                        ; preds = %if.then103
  br label %if.end112, !dbg !7318

if.end112:                                        ; preds = %if.end111, %if.end100
  %91 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7319
  %call113 = call i32 @create_conn_helper_init_proxy(%struct.connectdata* %91), !dbg !7320
  store i32 %call113, i32* %result, align 4, !dbg !7321
  %92 = load i32, i32* %result, align 4, !dbg !7322
  %tobool114 = icmp ne i32 %92, 0, !dbg !7322
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !7324

if.then115:                                       ; preds = %if.end112
  br label %out, !dbg !7325

if.end116:                                        ; preds = %if.end112
  %93 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7326
  %given117 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %93, i32 0, i32 48, !dbg !7328
  %94 = load %struct.Curl_handler*, %struct.Curl_handler** %given117, align 8, !dbg !7328
  %flags118 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %94, i32 0, i32 16, !dbg !7329
  %95 = load i32, i32* %flags118, align 4, !dbg !7329
  %and119 = and i32 %95, 1, !dbg !7330
  %tobool120 = icmp ne i32 %and119, 0, !dbg !7330
  br i1 %tobool120, label %land.lhs.true, label %if.end125, !dbg !7331

land.lhs.true:                                    ; preds = %if.end116
  %96 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7332
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %96, i32 0, i32 43, !dbg !7334
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 5, !dbg !7335
  %97 = load i8, i8* %httpproxy, align 1, !dbg !7335
  %tobool121 = trunc i8 %97 to i1, !dbg !7335
  br i1 %tobool121, label %if.then123, label %if.end125, !dbg !7336

if.then123:                                       ; preds = %land.lhs.true
  %98 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7337
  %bits124 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %98, i32 0, i32 43, !dbg !7338
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits124, i32 0, i32 15, !dbg !7339
  store i8 1, i8* %tunnel_proxy, align 1, !dbg !7340
  br label %if.end125, !dbg !7337

if.end125:                                        ; preds = %if.then123, %land.lhs.true, %if.end116
  %99 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7341
  %100 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7342
  %call126 = call i32 @parse_remote_port(%struct.Curl_easy* %99, %struct.connectdata* %100), !dbg !7343
  store i32 %call126, i32* %result, align 4, !dbg !7344
  %101 = load i32, i32* %result, align 4, !dbg !7345
  %tobool127 = icmp ne i32 %101, 0, !dbg !7345
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !7347

if.then128:                                       ; preds = %if.end125
  br label %out, !dbg !7348

if.end129:                                        ; preds = %if.end125
  %102 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7349
  %103 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7350
  %call130 = call i32 @override_login(%struct.Curl_easy* %102, %struct.connectdata* %103, i8** %user, i8** %passwd, i8** %options), !dbg !7351
  store i32 %call130, i32* %result, align 4, !dbg !7352
  %104 = load i32, i32* %result, align 4, !dbg !7353
  %tobool131 = icmp ne i32 %104, 0, !dbg !7353
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !7355

if.then132:                                       ; preds = %if.end129
  br label %out, !dbg !7356

if.end133:                                        ; preds = %if.end129
  %105 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7357
  %106 = load i8*, i8** %user, align 8, !dbg !7358
  %107 = load i8*, i8** %passwd, align 8, !dbg !7359
  %108 = load i8*, i8** %options, align 8, !dbg !7360
  %call134 = call i32 @set_login(%struct.connectdata* %105, i8* %106, i8* %107, i8* %108), !dbg !7361
  store i32 %call134, i32* %result, align 4, !dbg !7362
  %109 = load i32, i32* %result, align 4, !dbg !7363
  %tobool135 = icmp ne i32 %109, 0, !dbg !7363
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !7365

if.then136:                                       ; preds = %if.end133
  br label %out, !dbg !7366

if.end137:                                        ; preds = %if.end133
  %110 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7367
  %111 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7368
  %112 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7369
  %set138 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %112, i32 0, i32 13, !dbg !7370
  %connect_to = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set138, i32 0, i32 68, !dbg !7371
  %113 = load %struct.curl_slist*, %struct.curl_slist** %connect_to, align 8, !dbg !7371
  %call139 = call i32 @parse_connect_to_slist(%struct.Curl_easy* %110, %struct.connectdata* %111, %struct.curl_slist* %113), !dbg !7372
  store i32 %call139, i32* %result, align 4, !dbg !7373
  %114 = load i32, i32* %result, align 4, !dbg !7374
  %tobool140 = icmp ne i32 %114, 0, !dbg !7374
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !7376

if.then141:                                       ; preds = %if.end137
  br label %out, !dbg !7377

if.end142:                                        ; preds = %if.end137
  %115 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7378
  %116 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7379
  %host143 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %116, i32 0, i32 12, !dbg !7380
  call void @fix_hostname(%struct.connectdata* %115, %struct.hostname* %host143), !dbg !7381
  %117 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7382
  %bits144 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %117, i32 0, i32 43, !dbg !7384
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits144, i32 0, i32 2, !dbg !7385
  %118 = load i8, i8* %conn_to_host, align 1, !dbg !7385
  %tobool145 = trunc i8 %118 to i1, !dbg !7385
  br i1 %tobool145, label %if.then146, label %if.end148, !dbg !7386

if.then146:                                       ; preds = %if.end142
  %119 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7387
  %120 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7388
  %conn_to_host147 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %120, i32 0, i32 14, !dbg !7389
  call void @fix_hostname(%struct.connectdata* %119, %struct.hostname* %conn_to_host147), !dbg !7390
  br label %if.end148, !dbg !7390

if.end148:                                        ; preds = %if.then146, %if.end142
  %121 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7391
  %bits149 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %121, i32 0, i32 43, !dbg !7393
  %httpproxy150 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits149, i32 0, i32 5, !dbg !7394
  %122 = load i8, i8* %httpproxy150, align 1, !dbg !7394
  %tobool151 = trunc i8 %122 to i1, !dbg !7394
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !7395

if.then152:                                       ; preds = %if.end148
  %123 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7396
  %124 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7397
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %124, i32 0, i32 16, !dbg !7398
  %host153 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !7399
  call void @fix_hostname(%struct.connectdata* %123, %struct.hostname* %host153), !dbg !7400
  br label %if.end154, !dbg !7400

if.end154:                                        ; preds = %if.then152, %if.end148
  %125 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7401
  %bits155 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %125, i32 0, i32 43, !dbg !7403
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits155, i32 0, i32 6, !dbg !7404
  %126 = load i8, i8* %socksproxy, align 1, !dbg !7404
  %tobool156 = trunc i8 %126 to i1, !dbg !7404
  br i1 %tobool156, label %if.then157, label %if.end159, !dbg !7405

if.then157:                                       ; preds = %if.end154
  %127 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7406
  %128 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7407
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %128, i32 0, i32 15, !dbg !7408
  %host158 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !7409
  call void @fix_hostname(%struct.connectdata* %127, %struct.hostname* %host158), !dbg !7410
  br label %if.end159, !dbg !7410

if.end159:                                        ; preds = %if.then157, %if.end154
  %129 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7411
  %bits160 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %129, i32 0, i32 43, !dbg !7413
  %conn_to_host161 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits160, i32 0, i32 2, !dbg !7414
  %130 = load i8, i8* %conn_to_host161, align 1, !dbg !7414
  %tobool162 = trunc i8 %130 to i1, !dbg !7414
  br i1 %tobool162, label %land.lhs.true164, label %if.end174, !dbg !7415

land.lhs.true164:                                 ; preds = %if.end159
  %131 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7416
  %conn_to_host165 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %131, i32 0, i32 14, !dbg !7416
  %name166 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host165, i32 0, i32 2, !dbg !7416
  %132 = load i8*, i8** %name166, align 8, !dbg !7416
  %133 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7416
  %host167 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %133, i32 0, i32 12, !dbg !7416
  %name168 = getelementptr inbounds %struct.hostname, %struct.hostname* %host167, i32 0, i32 2, !dbg !7416
  %134 = load i8*, i8** %name168, align 8, !dbg !7416
  %call169 = call i32 @Curl_strcasecompare(i8* %132, i8* %134), !dbg !7416
  %tobool170 = icmp ne i32 %call169, 0, !dbg !7416
  br i1 %tobool170, label %if.then171, label %if.end174, !dbg !7417

if.then171:                                       ; preds = %land.lhs.true164
  %135 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7419
  %bits172 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %135, i32 0, i32 43, !dbg !7421
  %conn_to_host173 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits172, i32 0, i32 2, !dbg !7422
  store i8 0, i8* %conn_to_host173, align 1, !dbg !7423
  br label %if.end174, !dbg !7424

if.end174:                                        ; preds = %if.then171, %land.lhs.true164, %if.end159
  %136 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7425
  %bits175 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %136, i32 0, i32 43, !dbg !7427
  %conn_to_port = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits175, i32 0, i32 3, !dbg !7428
  %137 = load i8, i8* %conn_to_port, align 1, !dbg !7428
  %tobool176 = trunc i8 %137 to i1, !dbg !7428
  br i1 %tobool176, label %land.lhs.true178, label %if.end185, !dbg !7429

land.lhs.true178:                                 ; preds = %if.end174
  %138 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7430
  %conn_to_port179 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %138, i32 0, i32 19, !dbg !7432
  %139 = load i32, i32* %conn_to_port179, align 4, !dbg !7432
  %140 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7433
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %140, i32 0, i32 18, !dbg !7434
  %141 = load i32, i32* %remote_port, align 8, !dbg !7434
  %cmp180 = icmp eq i32 %139, %141, !dbg !7435
  br i1 %cmp180, label %if.then182, label %if.end185, !dbg !7436

if.then182:                                       ; preds = %land.lhs.true178
  %142 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7437
  %bits183 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %142, i32 0, i32 43, !dbg !7439
  %conn_to_port184 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits183, i32 0, i32 3, !dbg !7440
  store i8 0, i8* %conn_to_port184, align 1, !dbg !7441
  br label %if.end185, !dbg !7442

if.end185:                                        ; preds = %if.then182, %land.lhs.true178, %if.end174
  %143 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7443
  %bits186 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %143, i32 0, i32 43, !dbg !7445
  %conn_to_host187 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits186, i32 0, i32 2, !dbg !7446
  %144 = load i8, i8* %conn_to_host187, align 1, !dbg !7446
  %tobool188 = trunc i8 %144 to i1, !dbg !7446
  br i1 %tobool188, label %land.lhs.true195, label %lor.lhs.false190, !dbg !7447

lor.lhs.false190:                                 ; preds = %if.end185
  %145 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7448
  %bits191 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %145, i32 0, i32 43, !dbg !7450
  %conn_to_port192 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits191, i32 0, i32 3, !dbg !7451
  %146 = load i8, i8* %conn_to_port192, align 1, !dbg !7451
  %tobool193 = trunc i8 %146 to i1, !dbg !7451
  br i1 %tobool193, label %land.lhs.true195, label %if.end203, !dbg !7452

land.lhs.true195:                                 ; preds = %lor.lhs.false190, %if.end185
  %147 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7453
  %bits196 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %147, i32 0, i32 43, !dbg !7454
  %httpproxy197 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits196, i32 0, i32 5, !dbg !7455
  %148 = load i8, i8* %httpproxy197, align 1, !dbg !7455
  %tobool198 = trunc i8 %148 to i1, !dbg !7455
  br i1 %tobool198, label %if.then200, label %if.end203, !dbg !7456

if.then200:                                       ; preds = %land.lhs.true195
  %149 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7458
  %bits201 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %149, i32 0, i32 43, !dbg !7459
  %tunnel_proxy202 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits201, i32 0, i32 15, !dbg !7460
  store i8 1, i8* %tunnel_proxy202, align 1, !dbg !7461
  br label %if.end203, !dbg !7458

if.end203:                                        ; preds = %if.then200, %land.lhs.true195, %lor.lhs.false190
  %150 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7462
  %call204 = call i32 @setup_connection_internals(%struct.connectdata* %150), !dbg !7463
  store i32 %call204, i32* %result, align 4, !dbg !7464
  %151 = load i32, i32* %result, align 4, !dbg !7465
  %tobool205 = icmp ne i32 %151, 0, !dbg !7465
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !7467

if.then206:                                       ; preds = %if.end203
  br label %out, !dbg !7468

if.end207:                                        ; preds = %if.end203
  %152 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7469
  %recv = getelementptr inbounds %struct.connectdata, %struct.connectdata* %152, i32 0, i32 36, !dbg !7470
  %arrayidx208 = getelementptr inbounds [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*]* %recv, i64 0, i64 0, !dbg !7469
  store i64 (%struct.connectdata*, i32, i8*, i64, i32*)* @Curl_recv_plain, i64 (%struct.connectdata*, i32, i8*, i64, i32*)** %arrayidx208, align 8, !dbg !7471
  %153 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7472
  %send = getelementptr inbounds %struct.connectdata, %struct.connectdata* %153, i32 0, i32 37, !dbg !7473
  %arrayidx209 = getelementptr inbounds [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*]* %send, i64 0, i64 0, !dbg !7472
  store i64 (%struct.connectdata*, i32, i8*, i64, i32*)* @Curl_send_plain, i64 (%struct.connectdata*, i32, i8*, i64, i32*)** %arrayidx209, align 8, !dbg !7474
  %154 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7475
  %recv210 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %154, i32 0, i32 36, !dbg !7476
  %arrayidx211 = getelementptr inbounds [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*]* %recv210, i64 0, i64 1, !dbg !7475
  store i64 (%struct.connectdata*, i32, i8*, i64, i32*)* @Curl_recv_plain, i64 (%struct.connectdata*, i32, i8*, i64, i32*)** %arrayidx211, align 8, !dbg !7477
  %155 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7478
  %send212 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %155, i32 0, i32 37, !dbg !7479
  %arrayidx213 = getelementptr inbounds [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*]* %send212, i64 0, i64 1, !dbg !7478
  store i64 (%struct.connectdata*, i32, i8*, i64, i32*)* @Curl_send_plain, i64 (%struct.connectdata*, i32, i8*, i64, i32*)** %arrayidx213, align 8, !dbg !7480
  %156 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7481
  %set214 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %156, i32 0, i32 13, !dbg !7482
  %tcp_fastopen = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set214, i32 0, i32 145, !dbg !7483
  %157 = load i8, i8* %tcp_fastopen, align 8, !dbg !7483
  %tobool215 = trunc i8 %157 to i1, !dbg !7483
  %158 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7484
  %bits216 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %158, i32 0, i32 43, !dbg !7485
  %tcp_fastopen217 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits216, i32 0, i32 28, !dbg !7486
  %frombool = zext i1 %tobool215 to i8, !dbg !7487
  store i8 %frombool, i8* %tcp_fastopen217, align 1, !dbg !7487
  %159 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7488
  %handler218 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %159, i32 0, i32 47, !dbg !7490
  %160 = load %struct.Curl_handler*, %struct.Curl_handler** %handler218, align 8, !dbg !7490
  %flags219 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %160, i32 0, i32 16, !dbg !7491
  %161 = load i32, i32* %flags219, align 4, !dbg !7491
  %and220 = and i32 %161, 16, !dbg !7492
  %tobool221 = icmp ne i32 %and220, 0, !dbg !7492
  br i1 %tobool221, label %if.then222, label %if.end245, !dbg !7493

if.then222:                                       ; preds = %if.end207
  call void @llvm.dbg.declare(metadata i8* %done, metadata !7494, metadata !2256), !dbg !7496
  br label %do.body223, !dbg !7497

do.body223:                                       ; preds = %if.then222
  br label %do.end224, !dbg !7498

do.end224:                                        ; preds = %do.body223
  %162 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7501
  %handler225 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %162, i32 0, i32 47, !dbg !7502
  %163 = load %struct.Curl_handler*, %struct.Curl_handler** %handler225, align 8, !dbg !7502
  %connect_it = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %163, i32 0, i32 5, !dbg !7503
  %164 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %connect_it, align 8, !dbg !7503
  %165 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7504
  %call226 = call i32 %164(%struct.connectdata* %165, i8* %done), !dbg !7501
  store i32 %call226, i32* %result, align 4, !dbg !7505
  %166 = load i32, i32* %result, align 4, !dbg !7506
  %tobool227 = icmp ne i32 %166, 0, !dbg !7506
  br i1 %tobool227, label %if.end243, label %if.then228, !dbg !7508

if.then228:                                       ; preds = %do.end224
  %167 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7509
  %168 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7511
  %data229 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %168, i32 0, i32 0, !dbg !7512
  store %struct.Curl_easy* %167, %struct.Curl_easy** %data229, align 8, !dbg !7513
  %169 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7514
  %bits230 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %169, i32 0, i32 43, !dbg !7515
  %tcpconnect = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits230, i32 0, i32 12, !dbg !7516
  %arrayidx231 = getelementptr inbounds [2 x i8], [2 x i8]* %tcpconnect, i64 0, i64 0, !dbg !7514
  store i8 1, i8* %arrayidx231, align 1, !dbg !7517
  %170 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7518
  %state232 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %170, i32 0, i32 17, !dbg !7519
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state232, i32 0, i32 0, !dbg !7520
  %171 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !7520
  %172 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7521
  %call233 = call i32 @Curl_conncache_add_conn(%struct.conncache* %171, %struct.connectdata* %172), !dbg !7522
  %173 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7523
  %call234 = call i32 @setup_range(%struct.Curl_easy* %173), !dbg !7524
  store i32 %call234, i32* %result, align 4, !dbg !7525
  %174 = load i32, i32* %result, align 4, !dbg !7526
  %tobool235 = icmp ne i32 %174, 0, !dbg !7526
  br i1 %tobool235, label %if.then236, label %if.end242, !dbg !7528

if.then236:                                       ; preds = %if.then228
  br label %do.body237, !dbg !7529

do.body237:                                       ; preds = %if.then236
  br label %do.end238, !dbg !7531

do.end238:                                        ; preds = %do.body237
  %175 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7534
  %handler239 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %175, i32 0, i32 47, !dbg !7535
  %176 = load %struct.Curl_handler*, %struct.Curl_handler** %handler239, align 8, !dbg !7535
  %done240 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %176, i32 0, i32 3, !dbg !7536
  %177 = load i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32, i1)** %done240, align 8, !dbg !7536
  %178 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7537
  %179 = load i32, i32* %result, align 4, !dbg !7538
  %call241 = call i32 %177(%struct.connectdata* %178, i32 %179, i1 zeroext false), !dbg !7534
  br label %out, !dbg !7539

if.end242:                                        ; preds = %if.then228
  %180 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7540
  call void @Curl_setup_transfer(%struct.connectdata* %180, i32 -1, i64 -1, i1 zeroext false, i64* null, i32 -1, i64* null), !dbg !7541
  br label %if.end243, !dbg !7542

if.end243:                                        ; preds = %if.end242, %do.end224
  %181 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7543
  %182 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7544
  %call244 = call i32 @Curl_init_do(%struct.Curl_easy* %181, %struct.connectdata* %182), !dbg !7545
  br label %out, !dbg !7546

if.end245:                                        ; preds = %if.end207
  %183 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7547
  %set246 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %183, i32 0, i32 13, !dbg !7548
  %str247 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set246, i32 0, i32 128, !dbg !7549
  %arrayidx248 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str247, i64 0, i64 26, !dbg !7547
  %184 = load i8*, i8** %arrayidx248, align 8, !dbg !7547
  %185 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7550
  %set249 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %185, i32 0, i32 13, !dbg !7551
  %ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set249, i32 0, i32 73, !dbg !7552
  %primary = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl, i32 0, i32 0, !dbg !7553
  %CApath = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary, i32 0, i32 5, !dbg !7554
  store i8* %184, i8** %CApath, align 8, !dbg !7555
  %186 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7556
  %set250 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %186, i32 0, i32 13, !dbg !7557
  %str251 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set250, i32 0, i32 128, !dbg !7558
  %arrayidx252 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str251, i64 0, i64 27, !dbg !7556
  %187 = load i8*, i8** %arrayidx252, align 8, !dbg !7556
  %188 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7559
  %set253 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %188, i32 0, i32 13, !dbg !7560
  %proxy_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set253, i32 0, i32 74, !dbg !7561
  %primary254 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl, i32 0, i32 0, !dbg !7562
  %CApath255 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary254, i32 0, i32 5, !dbg !7563
  store i8* %187, i8** %CApath255, align 8, !dbg !7564
  %189 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7565
  %set256 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %189, i32 0, i32 13, !dbg !7566
  %str257 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set256, i32 0, i32 128, !dbg !7567
  %arrayidx258 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str257, i64 0, i64 28, !dbg !7565
  %190 = load i8*, i8** %arrayidx258, align 8, !dbg !7565
  %191 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7568
  %set259 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %191, i32 0, i32 13, !dbg !7569
  %ssl260 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set259, i32 0, i32 73, !dbg !7570
  %primary261 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl260, i32 0, i32 0, !dbg !7571
  %CAfile = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary261, i32 0, i32 6, !dbg !7572
  store i8* %190, i8** %CAfile, align 8, !dbg !7573
  %192 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7574
  %set262 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %192, i32 0, i32 13, !dbg !7575
  %str263 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set262, i32 0, i32 128, !dbg !7576
  %arrayidx264 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str263, i64 0, i64 29, !dbg !7574
  %193 = load i8*, i8** %arrayidx264, align 8, !dbg !7574
  %194 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7577
  %set265 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %194, i32 0, i32 13, !dbg !7578
  %proxy_ssl266 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set265, i32 0, i32 74, !dbg !7579
  %primary267 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl266, i32 0, i32 0, !dbg !7580
  %CAfile268 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary267, i32 0, i32 6, !dbg !7581
  store i8* %193, i8** %CAfile268, align 8, !dbg !7582
  %195 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7583
  %set269 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %195, i32 0, i32 13, !dbg !7584
  %str270 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set269, i32 0, i32 128, !dbg !7585
  %arrayidx271 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str270, i64 0, i64 35, !dbg !7583
  %196 = load i8*, i8** %arrayidx271, align 8, !dbg !7583
  %197 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7586
  %set272 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %197, i32 0, i32 13, !dbg !7587
  %ssl273 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set272, i32 0, i32 73, !dbg !7588
  %primary274 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl273, i32 0, i32 0, !dbg !7589
  %random_file = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary274, i32 0, i32 8, !dbg !7590
  store i8* %196, i8** %random_file, align 8, !dbg !7591
  %198 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7592
  %set275 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %198, i32 0, i32 13, !dbg !7593
  %str276 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set275, i32 0, i32 128, !dbg !7594
  %arrayidx277 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str276, i64 0, i64 35, !dbg !7592
  %199 = load i8*, i8** %arrayidx277, align 8, !dbg !7592
  %200 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7595
  %set278 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %200, i32 0, i32 13, !dbg !7596
  %proxy_ssl279 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set278, i32 0, i32 74, !dbg !7597
  %primary280 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl279, i32 0, i32 0, !dbg !7598
  %random_file281 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary280, i32 0, i32 8, !dbg !7599
  store i8* %199, i8** %random_file281, align 8, !dbg !7600
  %201 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7601
  %set282 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %201, i32 0, i32 13, !dbg !7602
  %str283 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set282, i32 0, i32 128, !dbg !7603
  %arrayidx284 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str283, i64 0, i64 34, !dbg !7601
  %202 = load i8*, i8** %arrayidx284, align 8, !dbg !7601
  %203 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7604
  %set285 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %203, i32 0, i32 13, !dbg !7605
  %ssl286 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set285, i32 0, i32 73, !dbg !7606
  %primary287 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl286, i32 0, i32 0, !dbg !7607
  %egdsocket = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary287, i32 0, i32 9, !dbg !7608
  store i8* %202, i8** %egdsocket, align 8, !dbg !7609
  %204 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7610
  %set288 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %204, i32 0, i32 13, !dbg !7611
  %str289 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set288, i32 0, i32 128, !dbg !7612
  %arrayidx290 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str289, i64 0, i64 34, !dbg !7610
  %205 = load i8*, i8** %arrayidx290, align 8, !dbg !7610
  %206 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7613
  %set291 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %206, i32 0, i32 13, !dbg !7614
  %proxy_ssl292 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set291, i32 0, i32 74, !dbg !7615
  %primary293 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl292, i32 0, i32 0, !dbg !7616
  %egdsocket294 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary293, i32 0, i32 9, !dbg !7617
  store i8* %205, i8** %egdsocket294, align 8, !dbg !7618
  %207 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7619
  %set295 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %207, i32 0, i32 13, !dbg !7620
  %str296 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set295, i32 0, i32 128, !dbg !7621
  %arrayidx297 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str296, i64 0, i64 32, !dbg !7619
  %208 = load i8*, i8** %arrayidx297, align 8, !dbg !7619
  %209 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7622
  %set298 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %209, i32 0, i32 13, !dbg !7623
  %ssl299 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set298, i32 0, i32 73, !dbg !7624
  %primary300 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl299, i32 0, i32 0, !dbg !7625
  %cipher_list = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary300, i32 0, i32 10, !dbg !7626
  store i8* %208, i8** %cipher_list, align 8, !dbg !7627
  %210 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7628
  %set301 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %210, i32 0, i32 13, !dbg !7629
  %str302 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set301, i32 0, i32 128, !dbg !7630
  %arrayidx303 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str302, i64 0, i64 33, !dbg !7628
  %211 = load i8*, i8** %arrayidx303, align 8, !dbg !7628
  %212 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7631
  %set304 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %212, i32 0, i32 13, !dbg !7632
  %proxy_ssl305 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set304, i32 0, i32 74, !dbg !7633
  %primary306 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl305, i32 0, i32 0, !dbg !7634
  %cipher_list307 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary306, i32 0, i32 10, !dbg !7635
  store i8* %211, i8** %cipher_list307, align 8, !dbg !7636
  %213 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7637
  %set308 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %213, i32 0, i32 13, !dbg !7638
  %str309 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set308, i32 0, i32 128, !dbg !7639
  %arrayidx310 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str309, i64 0, i64 37, !dbg !7637
  %214 = load i8*, i8** %arrayidx310, align 8, !dbg !7637
  %215 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7640
  %set311 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %215, i32 0, i32 13, !dbg !7641
  %ssl312 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set311, i32 0, i32 73, !dbg !7642
  %CRLfile = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl312, i32 0, i32 4, !dbg !7643
  store i8* %214, i8** %CRLfile, align 8, !dbg !7644
  %216 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7645
  %set313 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %216, i32 0, i32 13, !dbg !7646
  %str314 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set313, i32 0, i32 128, !dbg !7647
  %arrayidx315 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str314, i64 0, i64 38, !dbg !7645
  %217 = load i8*, i8** %arrayidx315, align 8, !dbg !7645
  %218 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7648
  %set316 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %218, i32 0, i32 13, !dbg !7649
  %proxy_ssl317 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set316, i32 0, i32 74, !dbg !7650
  %CRLfile318 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl317, i32 0, i32 4, !dbg !7651
  store i8* %217, i8** %CRLfile318, align 8, !dbg !7652
  %219 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7653
  %set319 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %219, i32 0, i32 13, !dbg !7654
  %str320 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set319, i32 0, i32 128, !dbg !7655
  %arrayidx321 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str320, i64 0, i64 39, !dbg !7653
  %220 = load i8*, i8** %arrayidx321, align 8, !dbg !7653
  %221 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7656
  %set322 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %221, i32 0, i32 13, !dbg !7657
  %ssl323 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set322, i32 0, i32 73, !dbg !7658
  %issuercert = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl323, i32 0, i32 5, !dbg !7659
  store i8* %220, i8** %issuercert, align 8, !dbg !7660
  %222 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7661
  %set324 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %222, i32 0, i32 13, !dbg !7662
  %str325 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set324, i32 0, i32 128, !dbg !7663
  %arrayidx326 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str325, i64 0, i64 40, !dbg !7661
  %223 = load i8*, i8** %arrayidx326, align 8, !dbg !7661
  %224 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7664
  %set327 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %224, i32 0, i32 13, !dbg !7665
  %proxy_ssl328 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set327, i32 0, i32 74, !dbg !7666
  %issuercert329 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl328, i32 0, i32 5, !dbg !7667
  store i8* %223, i8** %issuercert329, align 8, !dbg !7668
  %225 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7669
  %set330 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %225, i32 0, i32 13, !dbg !7670
  %str331 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set330, i32 0, i32 128, !dbg !7671
  %arrayidx332 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str331, i64 0, i64 0, !dbg !7669
  %226 = load i8*, i8** %arrayidx332, align 8, !dbg !7669
  %227 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7672
  %set333 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %227, i32 0, i32 13, !dbg !7673
  %ssl334 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set333, i32 0, i32 73, !dbg !7674
  %cert = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl334, i32 0, i32 10, !dbg !7675
  store i8* %226, i8** %cert, align 8, !dbg !7676
  %228 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7677
  %set335 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %228, i32 0, i32 13, !dbg !7678
  %str336 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set335, i32 0, i32 128, !dbg !7679
  %arrayidx337 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str336, i64 0, i64 1, !dbg !7677
  %229 = load i8*, i8** %arrayidx337, align 8, !dbg !7677
  %230 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7680
  %set338 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %230, i32 0, i32 13, !dbg !7681
  %proxy_ssl339 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set338, i32 0, i32 74, !dbg !7682
  %cert340 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl339, i32 0, i32 10, !dbg !7683
  store i8* %229, i8** %cert340, align 8, !dbg !7684
  %231 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7685
  %set341 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %231, i32 0, i32 13, !dbg !7686
  %str342 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set341, i32 0, i32 128, !dbg !7687
  %arrayidx343 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str342, i64 0, i64 2, !dbg !7685
  %232 = load i8*, i8** %arrayidx343, align 8, !dbg !7685
  %233 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7688
  %set344 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %233, i32 0, i32 13, !dbg !7689
  %ssl345 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set344, i32 0, i32 73, !dbg !7690
  %cert_type = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl345, i32 0, i32 11, !dbg !7691
  store i8* %232, i8** %cert_type, align 8, !dbg !7692
  %234 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7693
  %set346 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %234, i32 0, i32 13, !dbg !7694
  %str347 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set346, i32 0, i32 128, !dbg !7695
  %arrayidx348 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str347, i64 0, i64 3, !dbg !7693
  %235 = load i8*, i8** %arrayidx348, align 8, !dbg !7693
  %236 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7696
  %set349 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %236, i32 0, i32 13, !dbg !7697
  %proxy_ssl350 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set349, i32 0, i32 74, !dbg !7698
  %cert_type351 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl350, i32 0, i32 11, !dbg !7699
  store i8* %235, i8** %cert_type351, align 8, !dbg !7700
  %237 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7701
  %set352 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %237, i32 0, i32 13, !dbg !7702
  %str353 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set352, i32 0, i32 128, !dbg !7703
  %arrayidx354 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str353, i64 0, i64 13, !dbg !7701
  %238 = load i8*, i8** %arrayidx354, align 8, !dbg !7701
  %239 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7704
  %set355 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %239, i32 0, i32 13, !dbg !7705
  %ssl356 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set355, i32 0, i32 73, !dbg !7706
  %key = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl356, i32 0, i32 12, !dbg !7707
  store i8* %238, i8** %key, align 8, !dbg !7708
  %240 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7709
  %set357 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %240, i32 0, i32 13, !dbg !7710
  %str358 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set357, i32 0, i32 128, !dbg !7711
  %arrayidx359 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str358, i64 0, i64 14, !dbg !7709
  %241 = load i8*, i8** %arrayidx359, align 8, !dbg !7709
  %242 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7712
  %set360 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %242, i32 0, i32 13, !dbg !7713
  %proxy_ssl361 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set360, i32 0, i32 74, !dbg !7714
  %key362 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl361, i32 0, i32 12, !dbg !7715
  store i8* %241, i8** %key362, align 8, !dbg !7716
  %243 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7717
  %set363 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %243, i32 0, i32 13, !dbg !7718
  %str364 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set363, i32 0, i32 128, !dbg !7719
  %arrayidx365 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str364, i64 0, i64 17, !dbg !7717
  %244 = load i8*, i8** %arrayidx365, align 8, !dbg !7717
  %245 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7720
  %set366 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %245, i32 0, i32 13, !dbg !7721
  %ssl367 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set366, i32 0, i32 73, !dbg !7722
  %key_type = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl367, i32 0, i32 13, !dbg !7723
  store i8* %244, i8** %key_type, align 8, !dbg !7724
  %246 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7725
  %set368 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %246, i32 0, i32 13, !dbg !7726
  %str369 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set368, i32 0, i32 128, !dbg !7727
  %arrayidx370 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str369, i64 0, i64 18, !dbg !7725
  %247 = load i8*, i8** %arrayidx370, align 8, !dbg !7725
  %248 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7728
  %set371 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %248, i32 0, i32 13, !dbg !7729
  %proxy_ssl372 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set371, i32 0, i32 74, !dbg !7730
  %key_type373 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl372, i32 0, i32 13, !dbg !7731
  store i8* %247, i8** %key_type373, align 8, !dbg !7732
  %249 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7733
  %set374 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %249, i32 0, i32 13, !dbg !7734
  %str375 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set374, i32 0, i32 128, !dbg !7735
  %arrayidx376 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str375, i64 0, i64 15, !dbg !7733
  %250 = load i8*, i8** %arrayidx376, align 8, !dbg !7733
  %251 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7736
  %set377 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %251, i32 0, i32 13, !dbg !7737
  %ssl378 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set377, i32 0, i32 73, !dbg !7738
  %key_passwd = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl378, i32 0, i32 14, !dbg !7739
  store i8* %250, i8** %key_passwd, align 8, !dbg !7740
  %252 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7741
  %set379 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %252, i32 0, i32 13, !dbg !7742
  %str380 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set379, i32 0, i32 128, !dbg !7743
  %arrayidx381 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str380, i64 0, i64 16, !dbg !7741
  %253 = load i8*, i8** %arrayidx381, align 8, !dbg !7741
  %254 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7744
  %set382 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %254, i32 0, i32 13, !dbg !7745
  %proxy_ssl383 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set382, i32 0, i32 74, !dbg !7746
  %key_passwd384 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl383, i32 0, i32 14, !dbg !7747
  store i8* %253, i8** %key_passwd384, align 8, !dbg !7748
  %255 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7749
  %set385 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %255, i32 0, i32 13, !dbg !7750
  %str386 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set385, i32 0, i32 128, !dbg !7751
  %arrayidx387 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str386, i64 0, i64 0, !dbg !7749
  %256 = load i8*, i8** %arrayidx387, align 8, !dbg !7749
  %257 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7752
  %set388 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %257, i32 0, i32 13, !dbg !7753
  %ssl389 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set388, i32 0, i32 73, !dbg !7754
  %primary390 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl389, i32 0, i32 0, !dbg !7755
  %clientcert = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary390, i32 0, i32 7, !dbg !7756
  store i8* %256, i8** %clientcert, align 8, !dbg !7757
  %258 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7758
  %set391 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %258, i32 0, i32 13, !dbg !7759
  %str392 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set391, i32 0, i32 128, !dbg !7760
  %arrayidx393 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str392, i64 0, i64 1, !dbg !7758
  %259 = load i8*, i8** %arrayidx393, align 8, !dbg !7758
  %260 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7761
  %set394 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %260, i32 0, i32 13, !dbg !7762
  %proxy_ssl395 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set394, i32 0, i32 74, !dbg !7763
  %primary396 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl395, i32 0, i32 0, !dbg !7764
  %clientcert397 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary396, i32 0, i32 7, !dbg !7765
  store i8* %259, i8** %clientcert397, align 8, !dbg !7766
  %261 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7767
  %set398 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %261, i32 0, i32 13, !dbg !7769
  %ssl399 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set398, i32 0, i32 73, !dbg !7770
  %primary400 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl399, i32 0, i32 0, !dbg !7771
  %262 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7772
  %ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %262, i32 0, i32 40, !dbg !7773
  %call401 = call zeroext i1 @Curl_clone_primary_ssl_config(%struct.ssl_primary_config* %primary400, %struct.ssl_primary_config* %ssl_config), !dbg !7774
  br i1 %call401, label %if.end403, label %if.then402, !dbg !7775

if.then402:                                       ; preds = %if.end245
  store i32 27, i32* %result, align 4, !dbg !7776
  br label %out, !dbg !7778

if.end403:                                        ; preds = %if.end245
  %263 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7779
  %set404 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %263, i32 0, i32 13, !dbg !7781
  %proxy_ssl405 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set404, i32 0, i32 74, !dbg !7782
  %primary406 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl405, i32 0, i32 0, !dbg !7783
  %264 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7784
  %proxy_ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %264, i32 0, i32 41, !dbg !7785
  %call407 = call zeroext i1 @Curl_clone_primary_ssl_config(%struct.ssl_primary_config* %primary406, %struct.ssl_primary_config* %proxy_ssl_config), !dbg !7786
  br i1 %call407, label %if.end409, label %if.then408, !dbg !7787

if.then408:                                       ; preds = %if.end403
  store i32 27, i32* %result, align 4, !dbg !7788
  br label %out, !dbg !7790

if.end409:                                        ; preds = %if.end403
  %265 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7791
  call void @prune_dead_connections(%struct.Curl_easy* %265), !dbg !7792
  %266 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7793
  %set410 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %266, i32 0, i32 13, !dbg !7795
  %reuse_fresh = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set410, i32 0, i32 109, !dbg !7796
  %267 = load i8, i8* %reuse_fresh, align 1, !dbg !7796
  %tobool411 = trunc i8 %267 to i1, !dbg !7796
  br i1 %tobool411, label %land.lhs.true413, label %if.else, !dbg !7797

land.lhs.true413:                                 ; preds = %if.end409
  %268 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7798
  %state414 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %268, i32 0, i32 17, !dbg !7800
  %this_is_a_follow = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state414, i32 0, i32 9, !dbg !7801
  %269 = load i8, i8* %this_is_a_follow, align 8, !dbg !7801
  %tobool415 = trunc i8 %269 to i1, !dbg !7801
  br i1 %tobool415, label %if.else, label %if.then416, !dbg !7802

if.then416:                                       ; preds = %land.lhs.true413
  store i8 0, i8* %reuse, align 1, !dbg !7803
  br label %if.end419, !dbg !7804

if.else:                                          ; preds = %land.lhs.true413, %if.end409
  %270 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7805
  %271 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7806
  %call417 = call zeroext i1 @ConnectionExists(%struct.Curl_easy* %270, %struct.connectdata* %271, %struct.connectdata** %conn_temp, i8* %force_reuse, i8* %waitpipe), !dbg !7807
  %frombool418 = zext i1 %call417 to i8, !dbg !7808
  store i8 %frombool418, i8* %reuse, align 1, !dbg !7808
  br label %if.end419

if.end419:                                        ; preds = %if.else, %if.then416
  %272 = load i8, i8* %reuse, align 1, !dbg !7809
  %tobool420 = trunc i8 %272 to i1, !dbg !7809
  br i1 %tobool420, label %land.lhs.true422, label %if.end444, !dbg !7811

land.lhs.true422:                                 ; preds = %if.end419
  %273 = load i8, i8* %force_reuse, align 1, !dbg !7812
  %tobool423 = trunc i8 %273 to i1, !dbg !7812
  br i1 %tobool423, label %if.end444, label %land.lhs.true424, !dbg !7814

land.lhs.true424:                                 ; preds = %land.lhs.true422
  %274 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7815
  %275 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7817
  %call425 = call zeroext i1 @IsPipeliningPossible(%struct.Curl_easy* %274, %struct.connectdata* %275), !dbg !7818
  br i1 %call425, label %if.then427, label %if.end444, !dbg !7819

if.then427:                                       ; preds = %land.lhs.true424
  call void @llvm.dbg.declare(metadata i64* %pipelen, metadata !7820, metadata !2256), !dbg !7822
  %276 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7823
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %276, i32 0, i32 55, !dbg !7824
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !7825
  %277 = load i64, i64* %size, align 8, !dbg !7825
  %278 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7826
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %278, i32 0, i32 56, !dbg !7827
  %size428 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !7828
  %279 = load i64, i64* %size428, align 8, !dbg !7828
  %add429 = add i64 %277, %279, !dbg !7829
  store i64 %add429, i64* %pipelen, align 8, !dbg !7822
  %280 = load i64, i64* %pipelen, align 8, !dbg !7830
  %cmp430 = icmp ugt i64 %280, 0, !dbg !7832
  br i1 %cmp430, label %if.then432, label %if.end443, !dbg !7833

if.then432:                                       ; preds = %if.then427
  %281 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7834
  %282 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7836
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %282, i32 0, i32 5, !dbg !7837
  %283 = load i64, i64* %connection_id, align 8, !dbg !7837
  %284 = load i64, i64* %pipelen, align 8, !dbg !7838
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %281, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i32 0, i32 0), i64 %283, i64 %284), !dbg !7839
  %285 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7840
  %bundle = getelementptr inbounds %struct.connectdata, %struct.connectdata* %285, i32 0, i32 73, !dbg !7842
  %286 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !7842
  %num_connections = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %286, i32 0, i32 1, !dbg !7843
  %287 = load i64, i64* %num_connections, align 8, !dbg !7843
  %288 = load i64, i64* %max_host_connections, align 8, !dbg !7844
  %cmp433 = icmp ult i64 %287, %288, !dbg !7845
  br i1 %cmp433, label %land.lhs.true435, label %if.end442, !dbg !7846

land.lhs.true435:                                 ; preds = %if.then432
  %289 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7847
  %state436 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %289, i32 0, i32 17, !dbg !7848
  %conn_cache437 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state436, i32 0, i32 0, !dbg !7849
  %290 = load %struct.conncache*, %struct.conncache** %conn_cache437, align 8, !dbg !7849
  %num_connections438 = getelementptr inbounds %struct.conncache, %struct.conncache* %290, i32 0, i32 1, !dbg !7850
  %291 = load i64, i64* %num_connections438, align 8, !dbg !7850
  %292 = load i64, i64* %max_total_connections, align 8, !dbg !7851
  %cmp439 = icmp ult i64 %291, %292, !dbg !7852
  br i1 %cmp439, label %if.then441, label %if.end442, !dbg !7853

if.then441:                                       ; preds = %land.lhs.true435
  store i8 0, i8* %reuse, align 1, !dbg !7855
  %293 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7857
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %293, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i32 0, i32 0)), !dbg !7858
  br label %if.end442, !dbg !7859

if.end442:                                        ; preds = %if.then441, %land.lhs.true435, %if.then432
  br label %if.end443, !dbg !7860

if.end443:                                        ; preds = %if.end442, %if.then427
  br label %if.end444, !dbg !7861

if.end444:                                        ; preds = %if.end443, %land.lhs.true424, %land.lhs.true422, %if.end419
  %294 = load i8, i8* %reuse, align 1, !dbg !7862
  %tobool445 = trunc i8 %294 to i1, !dbg !7862
  br i1 %tobool445, label %if.then446, label %if.else471, !dbg !7864

if.then446:                                       ; preds = %if.end444
  %295 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7865
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %295, i32 0, i32 4, !dbg !7867
  store i8 1, i8* %inuse, align 8, !dbg !7868
  %296 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7869
  %297 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7870
  call void @reuse_conn(%struct.connectdata* %296, %struct.connectdata* %297), !dbg !7871
  %298 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7872
  %299 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7872
  %300 = bitcast %struct.connectdata* %299 to i8*, !dbg !7872
  call void %298(i8* %300), !dbg !7872
  %301 = load %struct.connectdata*, %struct.connectdata** %conn_temp, align 8, !dbg !7873
  store %struct.connectdata* %301, %struct.connectdata** %conn, align 8, !dbg !7874
  %302 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7875
  %303 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !7876
  store %struct.connectdata* %302, %struct.connectdata** %303, align 8, !dbg !7877
  %304 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7878
  %305 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7879
  %connection_id447 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %305, i32 0, i32 5, !dbg !7880
  %306 = load i64, i64* %connection_id447, align 8, !dbg !7880
  %307 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7881
  %bits448 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %307, i32 0, i32 43, !dbg !7882
  %proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits448, i32 0, i32 4, !dbg !7883
  %308 = load i8, i8* %proxy, align 1, !dbg !7883
  %tobool449 = trunc i8 %308 to i1, !dbg !7883
  %cond = select i1 %tobool449, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), !dbg !7881
  %309 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7884
  %socks_proxy451 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %309, i32 0, i32 15, !dbg !7885
  %host452 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy451, i32 0, i32 0, !dbg !7886
  %name453 = getelementptr inbounds %struct.hostname, %struct.hostname* %host452, i32 0, i32 2, !dbg !7887
  %310 = load i8*, i8** %name453, align 8, !dbg !7887
  %tobool454 = icmp ne i8* %310, null, !dbg !7884
  br i1 %tobool454, label %cond.true, label %cond.false, !dbg !7884

cond.true:                                        ; preds = %if.then446
  %311 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7888
  %socks_proxy455 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %311, i32 0, i32 15, !dbg !7890
  %host456 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy455, i32 0, i32 0, !dbg !7891
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %host456, i32 0, i32 3, !dbg !7892
  %312 = load i8*, i8** %dispname, align 8, !dbg !7892
  br label %cond.end469, !dbg !7893

cond.false:                                       ; preds = %if.then446
  %313 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7894
  %http_proxy457 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %313, i32 0, i32 16, !dbg !7895
  %host458 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy457, i32 0, i32 0, !dbg !7896
  %name459 = getelementptr inbounds %struct.hostname, %struct.hostname* %host458, i32 0, i32 2, !dbg !7897
  %314 = load i8*, i8** %name459, align 8, !dbg !7897
  %tobool460 = icmp ne i8* %314, null, !dbg !7894
  br i1 %tobool460, label %cond.true461, label %cond.false465, !dbg !7894

cond.true461:                                     ; preds = %cond.false
  %315 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7898
  %http_proxy462 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %315, i32 0, i32 16, !dbg !7899
  %host463 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy462, i32 0, i32 0, !dbg !7900
  %dispname464 = getelementptr inbounds %struct.hostname, %struct.hostname* %host463, i32 0, i32 3, !dbg !7901
  %316 = load i8*, i8** %dispname464, align 8, !dbg !7901
  br label %cond.end, !dbg !7902

cond.false465:                                    ; preds = %cond.false
  %317 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7903
  %host466 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %317, i32 0, i32 12, !dbg !7904
  %dispname467 = getelementptr inbounds %struct.hostname, %struct.hostname* %host466, i32 0, i32 3, !dbg !7905
  %318 = load i8*, i8** %dispname467, align 8, !dbg !7905
  br label %cond.end, !dbg !7906

cond.end:                                         ; preds = %cond.false465, %cond.true461
  %cond468 = phi i8* [ %316, %cond.true461 ], [ %318, %cond.false465 ], !dbg !7908
  br label %cond.end469, !dbg !7910

cond.end469:                                      ; preds = %cond.end, %cond.true
  %cond470 = phi i8* [ %312, %cond.true ], [ %cond468, %cond.end ], !dbg !7911
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %304, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i32 0, i32 0), i64 %306, i8* %cond, i8* %cond470), !dbg !7912
  br label %if.end541, !dbg !7913

if.else471:                                       ; preds = %if.end444
  call void @llvm.dbg.declare(metadata %struct.connectbundle** %bundle472, metadata !7914, metadata !2256), !dbg !7916
  store %struct.connectbundle* null, %struct.connectbundle** %bundle472, align 8, !dbg !7916
  %319 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7917
  %handler473 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %319, i32 0, i32 47, !dbg !7919
  %320 = load %struct.Curl_handler*, %struct.Curl_handler** %handler473, align 8, !dbg !7919
  %flags474 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %320, i32 0, i32 16, !dbg !7920
  %321 = load i32, i32* %flags474, align 4, !dbg !7920
  %and475 = and i32 %321, 256, !dbg !7921
  %tobool476 = icmp ne i32 %and475, 0, !dbg !7921
  br i1 %tobool476, label %if.then477, label %if.end488, !dbg !7922

if.then477:                                       ; preds = %if.else471
  %322 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7923
  %set478 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %322, i32 0, i32 13, !dbg !7926
  %ssl_enable_alpn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set478, i32 0, i32 148, !dbg !7927
  %323 = load i8, i8* %ssl_enable_alpn, align 1, !dbg !7927
  %tobool479 = trunc i8 %323 to i1, !dbg !7927
  br i1 %tobool479, label %if.then480, label %if.end482, !dbg !7928

if.then480:                                       ; preds = %if.then477
  %324 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7929
  %bits481 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %324, i32 0, i32 43, !dbg !7930
  %tls_enable_alpn = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits481, i32 0, i32 30, !dbg !7931
  store i8 1, i8* %tls_enable_alpn, align 1, !dbg !7932
  br label %if.end482, !dbg !7929

if.end482:                                        ; preds = %if.then480, %if.then477
  %325 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7933
  %set483 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %325, i32 0, i32 13, !dbg !7935
  %ssl_enable_npn = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set483, i32 0, i32 147, !dbg !7936
  %326 = load i8, i8* %ssl_enable_npn, align 8, !dbg !7936
  %tobool484 = trunc i8 %326 to i1, !dbg !7936
  br i1 %tobool484, label %if.then485, label %if.end487, !dbg !7937

if.then485:                                       ; preds = %if.end482
  %327 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7938
  %bits486 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %327, i32 0, i32 43, !dbg !7939
  %tls_enable_npn = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits486, i32 0, i32 29, !dbg !7940
  store i8 1, i8* %tls_enable_npn, align 1, !dbg !7941
  br label %if.end487, !dbg !7938

if.end487:                                        ; preds = %if.then485, %if.end482
  br label %if.end488, !dbg !7942

if.end488:                                        ; preds = %if.end487, %if.else471
  %328 = load i8, i8* %waitpipe, align 1, !dbg !7943
  %tobool489 = trunc i8 %328 to i1, !dbg !7943
  br i1 %tobool489, label %if.then490, label %if.else491, !dbg !7945

if.then490:                                       ; preds = %if.end488
  store i8 0, i8* %connections_available, align 1, !dbg !7946
  br label %if.end495, !dbg !7947

if.else491:                                       ; preds = %if.end488
  %329 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !7948
  %330 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7949
  %state492 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %330, i32 0, i32 17, !dbg !7950
  %conn_cache493 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state492, i32 0, i32 0, !dbg !7951
  %331 = load %struct.conncache*, %struct.conncache** %conn_cache493, align 8, !dbg !7951
  %call494 = call %struct.connectbundle* @Curl_conncache_find_bundle(%struct.connectdata* %329, %struct.conncache* %331), !dbg !7952
  store %struct.connectbundle* %call494, %struct.connectbundle** %bundle472, align 8, !dbg !7953
  br label %if.end495

if.end495:                                        ; preds = %if.else491, %if.then490
  %332 = load i64, i64* %max_host_connections, align 8, !dbg !7954
  %cmp496 = icmp ugt i64 %332, 0, !dbg !7956
  br i1 %cmp496, label %land.lhs.true498, label %if.end512, !dbg !7957

land.lhs.true498:                                 ; preds = %if.end495
  %333 = load %struct.connectbundle*, %struct.connectbundle** %bundle472, align 8, !dbg !7958
  %tobool499 = icmp ne %struct.connectbundle* %333, null, !dbg !7958
  br i1 %tobool499, label %land.lhs.true500, label %if.end512, !dbg !7960

land.lhs.true500:                                 ; preds = %land.lhs.true498
  %334 = load %struct.connectbundle*, %struct.connectbundle** %bundle472, align 8, !dbg !7961
  %num_connections501 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %334, i32 0, i32 1, !dbg !7962
  %335 = load i64, i64* %num_connections501, align 8, !dbg !7962
  %336 = load i64, i64* %max_host_connections, align 8, !dbg !7963
  %cmp502 = icmp uge i64 %335, %336, !dbg !7964
  br i1 %cmp502, label %if.then504, label %if.end512, !dbg !7965

if.then504:                                       ; preds = %land.lhs.true500
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_candidate, metadata !7967, metadata !2256), !dbg !7969
  %337 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7970
  %338 = load %struct.connectbundle*, %struct.connectbundle** %bundle472, align 8, !dbg !7971
  %call505 = call %struct.connectdata* @find_oldest_idle_connection_in_bundle(%struct.Curl_easy* %337, %struct.connectbundle* %338), !dbg !7972
  store %struct.connectdata* %call505, %struct.connectdata** %conn_candidate, align 8, !dbg !7973
  %339 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !7974
  %tobool506 = icmp ne %struct.connectdata* %339, null, !dbg !7974
  br i1 %tobool506, label %if.then507, label %if.else510, !dbg !7976

if.then507:                                       ; preds = %if.then504
  %340 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7977
  %341 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !7979
  %data508 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %341, i32 0, i32 0, !dbg !7980
  store %struct.Curl_easy* %340, %struct.Curl_easy** %data508, align 8, !dbg !7981
  %342 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !7982
  %call509 = call i32 @Curl_disconnect(%struct.connectdata* %342, i1 zeroext false), !dbg !7983
  br label %if.end511, !dbg !7984

if.else510:                                       ; preds = %if.then504
  %343 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7985
  %344 = load i64, i64* %max_host_connections, align 8, !dbg !7987
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %343, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i32 0, i32 0), i64 %344), !dbg !7988
  store i8 0, i8* %connections_available, align 1, !dbg !7989
  br label %if.end511

if.end511:                                        ; preds = %if.else510, %if.then507
  br label %if.end512, !dbg !7990

if.end512:                                        ; preds = %if.end511, %land.lhs.true500, %land.lhs.true498, %if.end495
  %345 = load i8, i8* %connections_available, align 1, !dbg !7991
  %tobool513 = trunc i8 %345 to i1, !dbg !7991
  br i1 %tobool513, label %land.lhs.true515, label %if.end533, !dbg !7993

land.lhs.true515:                                 ; preds = %if.end512
  %346 = load i64, i64* %max_total_connections, align 8, !dbg !7994
  %cmp516 = icmp ugt i64 %346, 0, !dbg !7995
  br i1 %cmp516, label %land.lhs.true518, label %if.end533, !dbg !7996

land.lhs.true518:                                 ; preds = %land.lhs.true515
  %347 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7997
  %state519 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %347, i32 0, i32 17, !dbg !7998
  %conn_cache520 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state519, i32 0, i32 0, !dbg !7999
  %348 = load %struct.conncache*, %struct.conncache** %conn_cache520, align 8, !dbg !7999
  %num_connections521 = getelementptr inbounds %struct.conncache, %struct.conncache* %348, i32 0, i32 1, !dbg !8000
  %349 = load i64, i64* %num_connections521, align 8, !dbg !8000
  %350 = load i64, i64* %max_total_connections, align 8, !dbg !8001
  %cmp522 = icmp uge i64 %349, %350, !dbg !8002
  br i1 %cmp522, label %if.then524, label %if.end533, !dbg !8003

if.then524:                                       ; preds = %land.lhs.true518
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_candidate525, metadata !8005, metadata !2256), !dbg !8007
  %351 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8008
  %call526 = call %struct.connectdata* @Curl_oldest_idle_connection(%struct.Curl_easy* %351), !dbg !8009
  store %struct.connectdata* %call526, %struct.connectdata** %conn_candidate525, align 8, !dbg !8010
  %352 = load %struct.connectdata*, %struct.connectdata** %conn_candidate525, align 8, !dbg !8011
  %tobool527 = icmp ne %struct.connectdata* %352, null, !dbg !8011
  br i1 %tobool527, label %if.then528, label %if.else531, !dbg !8013

if.then528:                                       ; preds = %if.then524
  %353 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8014
  %354 = load %struct.connectdata*, %struct.connectdata** %conn_candidate525, align 8, !dbg !8016
  %data529 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %354, i32 0, i32 0, !dbg !8017
  store %struct.Curl_easy* %353, %struct.Curl_easy** %data529, align 8, !dbg !8018
  %355 = load %struct.connectdata*, %struct.connectdata** %conn_candidate525, align 8, !dbg !8019
  %call530 = call i32 @Curl_disconnect(%struct.connectdata* %355, i1 zeroext false), !dbg !8020
  br label %if.end532, !dbg !8021

if.else531:                                       ; preds = %if.then524
  %356 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8022
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %356, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i32 0, i32 0)), !dbg !8024
  store i8 0, i8* %connections_available, align 1, !dbg !8025
  br label %if.end532

if.end532:                                        ; preds = %if.else531, %if.then528
  br label %if.end533, !dbg !8026

if.end533:                                        ; preds = %if.end532, %land.lhs.true518, %land.lhs.true515, %if.end512
  %357 = load i8, i8* %connections_available, align 1, !dbg !8027
  %tobool534 = trunc i8 %357 to i1, !dbg !8027
  br i1 %tobool534, label %if.else536, label %if.then535, !dbg !8029

if.then535:                                       ; preds = %if.end533
  %358 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8030
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %358, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i32 0, i32 0)), !dbg !8032
  %359 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8033
  call void @conn_free(%struct.connectdata* %359), !dbg !8034
  %360 = load %struct.connectdata**, %struct.connectdata*** %in_connect.addr, align 8, !dbg !8035
  store %struct.connectdata* null, %struct.connectdata** %360, align 8, !dbg !8036
  store i32 89, i32* %result, align 4, !dbg !8037
  br label %out, !dbg !8038

if.else536:                                       ; preds = %if.end533
  %361 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8039
  %state537 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %361, i32 0, i32 17, !dbg !8041
  %conn_cache538 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state537, i32 0, i32 0, !dbg !8042
  %362 = load %struct.conncache*, %struct.conncache** %conn_cache538, align 8, !dbg !8042
  %363 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8043
  %call539 = call i32 @Curl_conncache_add_conn(%struct.conncache* %362, %struct.connectdata* %363), !dbg !8044
  br label %if.end540

if.end540:                                        ; preds = %if.else536
  br label %if.end541

if.end541:                                        ; preds = %if.end540, %cond.end469
  %364 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8045
  %inuse542 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %364, i32 0, i32 4, !dbg !8046
  store i8 1, i8* %inuse542, align 8, !dbg !8047
  %365 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8048
  %366 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8049
  %call543 = call i32 @Curl_init_do(%struct.Curl_easy* %365, %struct.connectdata* %366), !dbg !8050
  %367 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8051
  %call544 = call i32 @setup_range(%struct.Curl_easy* %367), !dbg !8052
  store i32 %call544, i32* %result, align 4, !dbg !8053
  %368 = load i32, i32* %result, align 4, !dbg !8054
  %tobool545 = icmp ne i32 %368, 0, !dbg !8054
  br i1 %tobool545, label %if.then546, label %if.end547, !dbg !8056

if.then546:                                       ; preds = %if.end541
  br label %out, !dbg !8057

if.end547:                                        ; preds = %if.end541
  %369 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8058
  %set548 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %369, i32 0, i32 13, !dbg !8059
  %seek_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set548, i32 0, i32 16, !dbg !8060
  %370 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** %seek_func, align 8, !dbg !8060
  %371 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8061
  %seek_func549 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %371, i32 0, i32 60, !dbg !8062
  store i32 (i8*, i64, i32)* %370, i32 (i8*, i64, i32)** %seek_func549, align 8, !dbg !8063
  %372 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8064
  %set550 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %372, i32 0, i32 13, !dbg !8065
  %seek_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set550, i32 0, i32 36, !dbg !8066
  %373 = load i8*, i8** %seek_client, align 8, !dbg !8066
  %374 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8067
  %seek_client551 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %374, i32 0, i32 61, !dbg !8068
  store i8* %373, i8** %seek_client551, align 8, !dbg !8069
  %375 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8070
  %376 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8071
  %377 = load i8*, i8** %async.addr, align 8, !dbg !8072
  %call552 = call i32 @resolve_server(%struct.Curl_easy* %375, %struct.connectdata* %376, i8* %377), !dbg !8073
  store i32 %call552, i32* %result, align 4, !dbg !8074
  br label %out, !dbg !8075

out:                                              ; preds = %if.end547, %if.then546, %if.then535, %if.then408, %if.then402, %if.end243, %do.end238, %if.then206, %if.then141, %if.then136, %if.then132, %if.then128, %if.then115, %if.then110, %if.then66, %if.then58, %if.then54, %do.end38, %if.then21, %if.then5, %if.then
  %378 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8076
  %379 = load i8*, i8** %options, align 8, !dbg !8076
  call void %378(i8* %379), !dbg !8076
  %380 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8077
  %381 = load i8*, i8** %passwd, align 8, !dbg !8077
  call void %380(i8* %381), !dbg !8077
  %382 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8078
  %383 = load i8*, i8** %user, align 8, !dbg !8078
  call void %382(i8* %383), !dbg !8078
  %384 = load i32, i32* %result, align 4, !dbg !8079
  ret i32 %384, !dbg !8080
}

; Function Attrs: nounwind uwtable
define i32 @Curl_init_do(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !2136 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %k = alloca %struct.SingleRequest*, align 8
  %coerce = alloca %struct.timeval, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8081, metadata !2256), !dbg !8082
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !8083, metadata !2256), !dbg !8084
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k, metadata !8085, metadata !2256), !dbg !8087
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8088
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 12, !dbg !8089
  store %struct.SingleRequest* %req, %struct.SingleRequest** %k, align 8, !dbg !8087
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8090
  %tobool = icmp ne %struct.connectdata* %1, null, !dbg !8090
  br i1 %tobool, label %if.then, label %if.end, !dbg !8092

if.then:                                          ; preds = %entry
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8093
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 43, !dbg !8094
  %do_more = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 11, !dbg !8095
  store i8 0, i8* %do_more, align 1, !dbg !8096
  br label %if.end, !dbg !8093

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8097
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 17, !dbg !8098
  %done = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 49, !dbg !8099
  store i8 0, i8* %done, align 8, !dbg !8100
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8101
  %state1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 17, !dbg !8102
  %expect100header = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1, i32 0, i32 33, !dbg !8103
  store i8 0, i8* %expect100header, align 8, !dbg !8104
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8105
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 13, !dbg !8107
  %opt_no_body = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 103, !dbg !8108
  %6 = load i8, i8* %opt_no_body, align 8, !dbg !8108
  %tobool2 = trunc i8 %6 to i1, !dbg !8108
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8109

if.then3:                                         ; preds = %if.end
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8110
  %set4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !8111
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set4, i32 0, i32 71, !dbg !8112
  store i32 5, i32* %httpreq, align 8, !dbg !8113
  br label %if.end11, !dbg !8110

if.else:                                          ; preds = %if.end
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8114
  %set5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !8116
  %httpreq6 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set5, i32 0, i32 71, !dbg !8117
  %9 = load i32, i32* %httpreq6, align 8, !dbg !8117
  %cmp = icmp eq i32 5, %9, !dbg !8118
  br i1 %cmp, label %if.then7, label %if.end10, !dbg !8119

if.then7:                                         ; preds = %if.else
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8120
  %set8 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !8121
  %httpreq9 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set8, i32 0, i32 71, !dbg !8122
  store i32 1, i32* %httpreq9, align 8, !dbg !8123
  br label %if.end10, !dbg !8120

if.end10:                                         ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then3
  %11 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8124
  %start = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %11, i32 0, i32 8, !dbg !8125
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !8126
  %12 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !8126
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !8126
  %14 = extractvalue { i64, i64 } %call, 0, !dbg !8126
  store i64 %14, i64* %13, align 8, !dbg !8126
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !8126
  %16 = extractvalue { i64, i64 } %call, 1, !dbg !8126
  store i64 %16, i64* %15, align 8, !dbg !8126
  %17 = bitcast %struct.timeval* %start to i8*, !dbg !8126
  %18 = bitcast %struct.timeval* %coerce to i8*, !dbg !8126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false), !dbg !8127
  %19 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8129
  %now = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %19, i32 0, i32 9, !dbg !8130
  %20 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8131
  %start12 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %20, i32 0, i32 8, !dbg !8132
  %21 = bitcast %struct.timeval* %now to i8*, !dbg !8132
  %22 = bitcast %struct.timeval* %start12 to i8*, !dbg !8132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 8, i1 false), !dbg !8132
  %23 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8133
  %header = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %23, i32 0, i32 10, !dbg !8134
  store i8 1, i8* %header, align 8, !dbg !8135
  %24 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8136
  %bytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %24, i32 0, i32 4, !dbg !8137
  store i64 0, i64* %bytecount, align 8, !dbg !8138
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8139
  %state13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 17, !dbg !8140
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state13, i32 0, i32 6, !dbg !8141
  %26 = load i8*, i8** %buffer, align 8, !dbg !8141
  %27 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8142
  %buf = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %27, i32 0, i32 28, !dbg !8143
  store i8* %26, i8** %buf, align 8, !dbg !8144
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8145
  %state14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 17, !dbg !8146
  %uploadbuffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state14, i32 0, i32 7, !dbg !8147
  %arraydecay = getelementptr inbounds [16385 x i8], [16385 x i8]* %uploadbuffer, i32 0, i32 0, !dbg !8145
  %29 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8148
  %uploadbuf = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %29, i32 0, i32 29, !dbg !8149
  store i8* %arraydecay, i8** %uploadbuf, align 8, !dbg !8150
  %30 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8151
  %state15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %30, i32 0, i32 17, !dbg !8152
  %headerbuff = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state15, i32 0, i32 4, !dbg !8153
  %31 = load i8*, i8** %headerbuff, align 8, !dbg !8153
  %32 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8154
  %hbufp = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %32, i32 0, i32 13, !dbg !8155
  store i8* %31, i8** %hbufp, align 8, !dbg !8156
  %33 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8157
  %ignorebody = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %33, i32 0, i32 33, !dbg !8158
  store i8 0, i8* %ignorebody, align 1, !dbg !8159
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8160
  call void @Curl_speedinit(%struct.Curl_easy* %34), !dbg !8161
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8162
  call void @Curl_pgrsSetUploadCounter(%struct.Curl_easy* %35, i64 0), !dbg !8163
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8164
  call void @Curl_pgrsSetDownloadCounter(%struct.Curl_easy* %36, i64 0), !dbg !8165
  ret i32 0, !dbg !8166
}

declare void @Curl_speedinit(%struct.Curl_easy*) #3

declare void @Curl_pgrsSetUploadCounter(%struct.Curl_easy*, i64) #3

declare void @Curl_pgrsSetDownloadCounter(%struct.Curl_easy*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @parse_login_details(i8* %login, i64 %len, i8** %userp, i8** %passwdp, i8** %optionsp) #0 !dbg !2145 {
entry:
  %login.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %userp.addr = alloca i8**, align 8
  %passwdp.addr = alloca i8**, align 8
  %optionsp.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %ubuf = alloca i8*, align 8
  %pbuf = alloca i8*, align 8
  %obuf = alloca i8*, align 8
  %psep = alloca i8*, align 8
  %osep = alloca i8*, align 8
  %ulen = alloca i64, align 8
  %plen = alloca i64, align 8
  %olen = alloca i64, align 8
  store i8* %login, i8** %login.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %login.addr, metadata !8167, metadata !2256), !dbg !8168
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8169, metadata !2256), !dbg !8170
  store i8** %userp, i8*** %userp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %userp.addr, metadata !8171, metadata !2256), !dbg !8172
  store i8** %passwdp, i8*** %passwdp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %passwdp.addr, metadata !8173, metadata !2256), !dbg !8174
  store i8** %optionsp, i8*** %optionsp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %optionsp.addr, metadata !8175, metadata !2256), !dbg !8176
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8177, metadata !2256), !dbg !8178
  store i32 0, i32* %result, align 4, !dbg !8178
  call void @llvm.dbg.declare(metadata i8** %ubuf, metadata !8179, metadata !2256), !dbg !8180
  store i8* null, i8** %ubuf, align 8, !dbg !8180
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8181, metadata !2256), !dbg !8182
  store i8* null, i8** %pbuf, align 8, !dbg !8182
  call void @llvm.dbg.declare(metadata i8** %obuf, metadata !8183, metadata !2256), !dbg !8184
  store i8* null, i8** %obuf, align 8, !dbg !8184
  call void @llvm.dbg.declare(metadata i8** %psep, metadata !8185, metadata !2256), !dbg !8186
  store i8* null, i8** %psep, align 8, !dbg !8186
  call void @llvm.dbg.declare(metadata i8** %osep, metadata !8187, metadata !2256), !dbg !8188
  store i8* null, i8** %osep, align 8, !dbg !8188
  call void @llvm.dbg.declare(metadata i64* %ulen, metadata !8189, metadata !2256), !dbg !8190
  call void @llvm.dbg.declare(metadata i64* %plen, metadata !8191, metadata !2256), !dbg !8192
  call void @llvm.dbg.declare(metadata i64* %olen, metadata !8193, metadata !2256), !dbg !8194
  %0 = load i8**, i8*** %passwdp.addr, align 8, !dbg !8195
  %tobool = icmp ne i8** %0, null, !dbg !8195
  br i1 %tobool, label %if.then, label %if.end2, !dbg !8197

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %login.addr, align 8, !dbg !8198
  %call = call i8* @strchr(i8* %1, i32 58) #7, !dbg !8200
  store i8* %call, i8** %psep, align 8, !dbg !8201
  %2 = load i8*, i8** %psep, align 8, !dbg !8202
  %3 = load i8*, i8** %login.addr, align 8, !dbg !8204
  %4 = load i64, i64* %len.addr, align 8, !dbg !8205
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !8206
  %cmp = icmp uge i8* %2, %add.ptr, !dbg !8207
  br i1 %cmp, label %if.then1, label %if.end, !dbg !8208

if.then1:                                         ; preds = %if.then
  store i8* null, i8** %psep, align 8, !dbg !8209
  br label %if.end, !dbg !8210

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end2, !dbg !8211

if.end2:                                          ; preds = %if.end, %entry
  %5 = load i8**, i8*** %optionsp.addr, align 8, !dbg !8212
  %tobool3 = icmp ne i8** %5, null, !dbg !8212
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !8214

if.then4:                                         ; preds = %if.end2
  %6 = load i8*, i8** %login.addr, align 8, !dbg !8215
  %call5 = call i8* @strchr(i8* %6, i32 59) #7, !dbg !8217
  store i8* %call5, i8** %osep, align 8, !dbg !8218
  %7 = load i8*, i8** %osep, align 8, !dbg !8219
  %8 = load i8*, i8** %login.addr, align 8, !dbg !8221
  %9 = load i64, i64* %len.addr, align 8, !dbg !8222
  %add.ptr6 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !8223
  %cmp7 = icmp uge i8* %7, %add.ptr6, !dbg !8224
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8225

if.then8:                                         ; preds = %if.then4
  store i8* null, i8** %osep, align 8, !dbg !8226
  br label %if.end9, !dbg !8227

if.end9:                                          ; preds = %if.then8, %if.then4
  br label %if.end10, !dbg !8228

if.end10:                                         ; preds = %if.end9, %if.end2
  %10 = load i8*, i8** %psep, align 8, !dbg !8229
  %tobool11 = icmp ne i8* %10, null, !dbg !8229
  br i1 %tobool11, label %cond.true, label %cond.false18, !dbg !8229

cond.true:                                        ; preds = %if.end10
  %11 = load i8*, i8** %osep, align 8, !dbg !8230
  %tobool12 = icmp ne i8* %11, null, !dbg !8230
  br i1 %tobool12, label %land.lhs.true, label %cond.false, !dbg !8231

land.lhs.true:                                    ; preds = %cond.true
  %12 = load i8*, i8** %psep, align 8, !dbg !8232
  %13 = load i8*, i8** %osep, align 8, !dbg !8234
  %cmp13 = icmp ugt i8* %12, %13, !dbg !8235
  br i1 %cmp13, label %cond.true14, label %cond.false, !dbg !8236

cond.true14:                                      ; preds = %land.lhs.true
  %14 = load i8*, i8** %osep, align 8, !dbg !8237
  %15 = load i8*, i8** %login.addr, align 8, !dbg !8239
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64, !dbg !8240
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64, !dbg !8240
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8240
  br label %cond.end, !dbg !8241

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %16 = load i8*, i8** %psep, align 8, !dbg !8242
  %17 = load i8*, i8** %login.addr, align 8, !dbg !8244
  %sub.ptr.lhs.cast15 = ptrtoint i8* %16 to i64, !dbg !8245
  %sub.ptr.rhs.cast16 = ptrtoint i8* %17 to i64, !dbg !8245
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !8245
  br label %cond.end, !dbg !8246

cond.end:                                         ; preds = %cond.false, %cond.true14
  %cond = phi i64 [ %sub.ptr.sub, %cond.true14 ], [ %sub.ptr.sub17, %cond.false ], !dbg !8247
  br label %cond.end27, !dbg !8249

cond.false18:                                     ; preds = %if.end10
  %18 = load i8*, i8** %osep, align 8, !dbg !8250
  %tobool19 = icmp ne i8* %18, null, !dbg !8250
  br i1 %tobool19, label %cond.true20, label %cond.false24, !dbg !8250

cond.true20:                                      ; preds = %cond.false18
  %19 = load i8*, i8** %osep, align 8, !dbg !8251
  %20 = load i8*, i8** %login.addr, align 8, !dbg !8252
  %sub.ptr.lhs.cast21 = ptrtoint i8* %19 to i64, !dbg !8253
  %sub.ptr.rhs.cast22 = ptrtoint i8* %20 to i64, !dbg !8253
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !8253
  br label %cond.end25, !dbg !8254

cond.false24:                                     ; preds = %cond.false18
  %21 = load i64, i64* %len.addr, align 8, !dbg !8255
  br label %cond.end25, !dbg !8256

cond.end25:                                       ; preds = %cond.false24, %cond.true20
  %cond26 = phi i64 [ %sub.ptr.sub23, %cond.true20 ], [ %21, %cond.false24 ], !dbg !8257
  br label %cond.end27, !dbg !8258

cond.end27:                                       ; preds = %cond.end25, %cond.end
  %cond28 = phi i64 [ %cond, %cond.end ], [ %cond26, %cond.end25 ], !dbg !8259
  store i64 %cond28, i64* %ulen, align 8, !dbg !8260
  %22 = load i8*, i8** %psep, align 8, !dbg !8261
  %tobool29 = icmp ne i8* %22, null, !dbg !8261
  br i1 %tobool29, label %cond.true30, label %cond.false45, !dbg !8261

cond.true30:                                      ; preds = %cond.end27
  %23 = load i8*, i8** %osep, align 8, !dbg !8262
  %tobool31 = icmp ne i8* %23, null, !dbg !8262
  br i1 %tobool31, label %land.lhs.true32, label %cond.false38, !dbg !8263

land.lhs.true32:                                  ; preds = %cond.true30
  %24 = load i8*, i8** %osep, align 8, !dbg !8264
  %25 = load i8*, i8** %psep, align 8, !dbg !8265
  %cmp33 = icmp ugt i8* %24, %25, !dbg !8266
  br i1 %cmp33, label %cond.true34, label %cond.false38, !dbg !8267

cond.true34:                                      ; preds = %land.lhs.true32
  %26 = load i8*, i8** %osep, align 8, !dbg !8268
  %27 = load i8*, i8** %psep, align 8, !dbg !8269
  %sub.ptr.lhs.cast35 = ptrtoint i8* %26 to i64, !dbg !8270
  %sub.ptr.rhs.cast36 = ptrtoint i8* %27 to i64, !dbg !8270
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !8270
  br label %cond.end43, !dbg !8271

cond.false38:                                     ; preds = %land.lhs.true32, %cond.true30
  %28 = load i8*, i8** %login.addr, align 8, !dbg !8272
  %29 = load i64, i64* %len.addr, align 8, !dbg !8273
  %add.ptr39 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !8274
  %30 = load i8*, i8** %psep, align 8, !dbg !8275
  %sub.ptr.lhs.cast40 = ptrtoint i8* %add.ptr39 to i64, !dbg !8276
  %sub.ptr.rhs.cast41 = ptrtoint i8* %30 to i64, !dbg !8276
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !8276
  br label %cond.end43, !dbg !8277

cond.end43:                                       ; preds = %cond.false38, %cond.true34
  %cond44 = phi i64 [ %sub.ptr.sub37, %cond.true34 ], [ %sub.ptr.sub42, %cond.false38 ], !dbg !8278
  %sub = sub i64 %cond44, 1, !dbg !8279
  br label %cond.end46, !dbg !8280

cond.false45:                                     ; preds = %cond.end27
  br label %cond.end46, !dbg !8281

cond.end46:                                       ; preds = %cond.false45, %cond.end43
  %cond47 = phi i64 [ %sub, %cond.end43 ], [ 0, %cond.false45 ], !dbg !8282
  store i64 %cond47, i64* %plen, align 8, !dbg !8283
  %31 = load i8*, i8** %osep, align 8, !dbg !8284
  %tobool48 = icmp ne i8* %31, null, !dbg !8284
  br i1 %tobool48, label %cond.true49, label %cond.false65, !dbg !8284

cond.true49:                                      ; preds = %cond.end46
  %32 = load i8*, i8** %psep, align 8, !dbg !8285
  %tobool50 = icmp ne i8* %32, null, !dbg !8285
  br i1 %tobool50, label %land.lhs.true51, label %cond.false57, !dbg !8286

land.lhs.true51:                                  ; preds = %cond.true49
  %33 = load i8*, i8** %psep, align 8, !dbg !8287
  %34 = load i8*, i8** %osep, align 8, !dbg !8288
  %cmp52 = icmp ugt i8* %33, %34, !dbg !8289
  br i1 %cmp52, label %cond.true53, label %cond.false57, !dbg !8290

cond.true53:                                      ; preds = %land.lhs.true51
  %35 = load i8*, i8** %psep, align 8, !dbg !8291
  %36 = load i8*, i8** %osep, align 8, !dbg !8292
  %sub.ptr.lhs.cast54 = ptrtoint i8* %35 to i64, !dbg !8293
  %sub.ptr.rhs.cast55 = ptrtoint i8* %36 to i64, !dbg !8293
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !8293
  br label %cond.end62, !dbg !8294

cond.false57:                                     ; preds = %land.lhs.true51, %cond.true49
  %37 = load i8*, i8** %login.addr, align 8, !dbg !8295
  %38 = load i64, i64* %len.addr, align 8, !dbg !8296
  %add.ptr58 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !8297
  %39 = load i8*, i8** %osep, align 8, !dbg !8298
  %sub.ptr.lhs.cast59 = ptrtoint i8* %add.ptr58 to i64, !dbg !8299
  %sub.ptr.rhs.cast60 = ptrtoint i8* %39 to i64, !dbg !8299
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60, !dbg !8299
  br label %cond.end62, !dbg !8300

cond.end62:                                       ; preds = %cond.false57, %cond.true53
  %cond63 = phi i64 [ %sub.ptr.sub56, %cond.true53 ], [ %sub.ptr.sub61, %cond.false57 ], !dbg !8301
  %sub64 = sub i64 %cond63, 1, !dbg !8302
  br label %cond.end66, !dbg !8303

cond.false65:                                     ; preds = %cond.end46
  br label %cond.end66, !dbg !8304

cond.end66:                                       ; preds = %cond.false65, %cond.end62
  %cond67 = phi i64 [ %sub64, %cond.end62 ], [ 0, %cond.false65 ], !dbg !8305
  store i64 %cond67, i64* %olen, align 8, !dbg !8306
  %40 = load i8**, i8*** %userp.addr, align 8, !dbg !8307
  %tobool68 = icmp ne i8** %40, null, !dbg !8307
  br i1 %tobool68, label %land.lhs.true69, label %if.end76, !dbg !8309

land.lhs.true69:                                  ; preds = %cond.end66
  %41 = load i64, i64* %ulen, align 8, !dbg !8310
  %tobool70 = icmp ne i64 %41, 0, !dbg !8310
  br i1 %tobool70, label %if.then71, label %if.end76, !dbg !8312

if.then71:                                        ; preds = %land.lhs.true69
  %42 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !8313
  %43 = load i64, i64* %ulen, align 8, !dbg !8313
  %add = add i64 %43, 1, !dbg !8313
  %call72 = call i8* %42(i64 %add), !dbg !8313
  store i8* %call72, i8** %ubuf, align 8, !dbg !8315
  %44 = load i8*, i8** %ubuf, align 8, !dbg !8316
  %tobool73 = icmp ne i8* %44, null, !dbg !8316
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !8318

if.then74:                                        ; preds = %if.then71
  store i32 27, i32* %result, align 4, !dbg !8319
  br label %if.end75, !dbg !8320

if.end75:                                         ; preds = %if.then74, %if.then71
  br label %if.end76, !dbg !8321

if.end76:                                         ; preds = %if.end75, %land.lhs.true69, %cond.end66
  %45 = load i32, i32* %result, align 4, !dbg !8322
  %tobool77 = icmp ne i32 %45, 0, !dbg !8322
  br i1 %tobool77, label %if.end88, label %land.lhs.true78, !dbg !8324

land.lhs.true78:                                  ; preds = %if.end76
  %46 = load i8**, i8*** %passwdp.addr, align 8, !dbg !8325
  %tobool79 = icmp ne i8** %46, null, !dbg !8325
  br i1 %tobool79, label %land.lhs.true80, label %if.end88, !dbg !8327

land.lhs.true80:                                  ; preds = %land.lhs.true78
  %47 = load i64, i64* %plen, align 8, !dbg !8328
  %tobool81 = icmp ne i64 %47, 0, !dbg !8328
  br i1 %tobool81, label %if.then82, label %if.end88, !dbg !8330

if.then82:                                        ; preds = %land.lhs.true80
  %48 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !8331
  %49 = load i64, i64* %plen, align 8, !dbg !8331
  %add83 = add i64 %49, 1, !dbg !8331
  %call84 = call i8* %48(i64 %add83), !dbg !8331
  store i8* %call84, i8** %pbuf, align 8, !dbg !8333
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8334
  %tobool85 = icmp ne i8* %50, null, !dbg !8334
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !8336

if.then86:                                        ; preds = %if.then82
  %51 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8337
  %52 = load i8*, i8** %ubuf, align 8, !dbg !8337
  call void %51(i8* %52), !dbg !8337
  store i32 27, i32* %result, align 4, !dbg !8339
  br label %if.end87, !dbg !8340

if.end87:                                         ; preds = %if.then86, %if.then82
  br label %if.end88, !dbg !8341

if.end88:                                         ; preds = %if.end87, %land.lhs.true80, %land.lhs.true78, %if.end76
  %53 = load i32, i32* %result, align 4, !dbg !8342
  %tobool89 = icmp ne i32 %53, 0, !dbg !8342
  br i1 %tobool89, label %if.end100, label %land.lhs.true90, !dbg !8344

land.lhs.true90:                                  ; preds = %if.end88
  %54 = load i8**, i8*** %optionsp.addr, align 8, !dbg !8345
  %tobool91 = icmp ne i8** %54, null, !dbg !8345
  br i1 %tobool91, label %land.lhs.true92, label %if.end100, !dbg !8347

land.lhs.true92:                                  ; preds = %land.lhs.true90
  %55 = load i64, i64* %olen, align 8, !dbg !8348
  %tobool93 = icmp ne i64 %55, 0, !dbg !8348
  br i1 %tobool93, label %if.then94, label %if.end100, !dbg !8350

if.then94:                                        ; preds = %land.lhs.true92
  %56 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !8351
  %57 = load i64, i64* %olen, align 8, !dbg !8351
  %add95 = add i64 %57, 1, !dbg !8351
  %call96 = call i8* %56(i64 %add95), !dbg !8351
  store i8* %call96, i8** %obuf, align 8, !dbg !8353
  %58 = load i8*, i8** %obuf, align 8, !dbg !8354
  %tobool97 = icmp ne i8* %58, null, !dbg !8354
  br i1 %tobool97, label %if.end99, label %if.then98, !dbg !8356

if.then98:                                        ; preds = %if.then94
  %59 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8357
  %60 = load i8*, i8** %pbuf, align 8, !dbg !8357
  call void %59(i8* %60), !dbg !8357
  %61 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8359
  %62 = load i8*, i8** %ubuf, align 8, !dbg !8359
  call void %61(i8* %62), !dbg !8359
  store i32 27, i32* %result, align 4, !dbg !8360
  br label %if.end99, !dbg !8361

if.end99:                                         ; preds = %if.then98, %if.then94
  br label %if.end100, !dbg !8362

if.end100:                                        ; preds = %if.end99, %land.lhs.true92, %land.lhs.true90, %if.end88
  %63 = load i32, i32* %result, align 4, !dbg !8363
  %tobool101 = icmp ne i32 %63, 0, !dbg !8363
  br i1 %tobool101, label %if.end120, label %if.then102, !dbg !8365

if.then102:                                       ; preds = %if.end100
  %64 = load i8*, i8** %ubuf, align 8, !dbg !8366
  %tobool103 = icmp ne i8* %64, null, !dbg !8366
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !8369

if.then104:                                       ; preds = %if.then102
  %65 = load i8*, i8** %ubuf, align 8, !dbg !8370
  %66 = load i8*, i8** %login.addr, align 8, !dbg !8372
  %67 = load i64, i64* %ulen, align 8, !dbg !8373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 %67, i32 1, i1 false), !dbg !8374
  %68 = load i64, i64* %ulen, align 8, !dbg !8375
  %69 = load i8*, i8** %ubuf, align 8, !dbg !8376
  %arrayidx = getelementptr inbounds i8, i8* %69, i64 %68, !dbg !8376
  store i8 0, i8* %arrayidx, align 1, !dbg !8377
  br label %do.body, !dbg !8378

do.body:                                          ; preds = %if.then104
  %70 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8379
  %71 = load i8**, i8*** %userp.addr, align 8, !dbg !8379
  %72 = load i8*, i8** %71, align 8, !dbg !8379
  call void %70(i8* %72), !dbg !8379
  %73 = load i8**, i8*** %userp.addr, align 8, !dbg !8379
  store i8* null, i8** %73, align 8, !dbg !8379
  br label %do.end, !dbg !8379

do.end:                                           ; preds = %do.body
  %74 = load i8*, i8** %ubuf, align 8, !dbg !8382
  %75 = load i8**, i8*** %userp.addr, align 8, !dbg !8383
  store i8* %74, i8** %75, align 8, !dbg !8384
  br label %if.end105, !dbg !8385

if.end105:                                        ; preds = %do.end, %if.then102
  %76 = load i8*, i8** %pbuf, align 8, !dbg !8386
  %tobool106 = icmp ne i8* %76, null, !dbg !8386
  br i1 %tobool106, label %if.then107, label %if.end112, !dbg !8388

if.then107:                                       ; preds = %if.end105
  %77 = load i8*, i8** %pbuf, align 8, !dbg !8389
  %78 = load i8*, i8** %psep, align 8, !dbg !8391
  %add.ptr108 = getelementptr inbounds i8, i8* %78, i64 1, !dbg !8392
  %79 = load i64, i64* %plen, align 8, !dbg !8393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %add.ptr108, i64 %79, i32 1, i1 false), !dbg !8394
  %80 = load i64, i64* %plen, align 8, !dbg !8395
  %81 = load i8*, i8** %pbuf, align 8, !dbg !8396
  %arrayidx109 = getelementptr inbounds i8, i8* %81, i64 %80, !dbg !8396
  store i8 0, i8* %arrayidx109, align 1, !dbg !8397
  br label %do.body110, !dbg !8398

do.body110:                                       ; preds = %if.then107
  %82 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8399
  %83 = load i8**, i8*** %passwdp.addr, align 8, !dbg !8399
  %84 = load i8*, i8** %83, align 8, !dbg !8399
  call void %82(i8* %84), !dbg !8399
  %85 = load i8**, i8*** %passwdp.addr, align 8, !dbg !8399
  store i8* null, i8** %85, align 8, !dbg !8399
  br label %do.end111, !dbg !8399

do.end111:                                        ; preds = %do.body110
  %86 = load i8*, i8** %pbuf, align 8, !dbg !8402
  %87 = load i8**, i8*** %passwdp.addr, align 8, !dbg !8403
  store i8* %86, i8** %87, align 8, !dbg !8404
  br label %if.end112, !dbg !8405

if.end112:                                        ; preds = %do.end111, %if.end105
  %88 = load i8*, i8** %obuf, align 8, !dbg !8406
  %tobool113 = icmp ne i8* %88, null, !dbg !8406
  br i1 %tobool113, label %if.then114, label %if.end119, !dbg !8408

if.then114:                                       ; preds = %if.end112
  %89 = load i8*, i8** %obuf, align 8, !dbg !8409
  %90 = load i8*, i8** %osep, align 8, !dbg !8411
  %add.ptr115 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !8412
  %91 = load i64, i64* %olen, align 8, !dbg !8413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %add.ptr115, i64 %91, i32 1, i1 false), !dbg !8414
  %92 = load i64, i64* %olen, align 8, !dbg !8415
  %93 = load i8*, i8** %obuf, align 8, !dbg !8416
  %arrayidx116 = getelementptr inbounds i8, i8* %93, i64 %92, !dbg !8416
  store i8 0, i8* %arrayidx116, align 1, !dbg !8417
  br label %do.body117, !dbg !8418

do.body117:                                       ; preds = %if.then114
  %94 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8419
  %95 = load i8**, i8*** %optionsp.addr, align 8, !dbg !8419
  %96 = load i8*, i8** %95, align 8, !dbg !8419
  call void %94(i8* %96), !dbg !8419
  %97 = load i8**, i8*** %optionsp.addr, align 8, !dbg !8419
  store i8* null, i8** %97, align 8, !dbg !8419
  br label %do.end118, !dbg !8419

do.end118:                                        ; preds = %do.body117
  %98 = load i8*, i8** %obuf, align 8, !dbg !8422
  %99 = load i8**, i8*** %optionsp.addr, align 8, !dbg !8423
  store i8* %98, i8** %99, align 8, !dbg !8424
  br label %if.end119, !dbg !8425

if.end119:                                        ; preds = %do.end118, %if.end112
  br label %if.end120, !dbg !8426

if.end120:                                        ; preds = %if.end119, %if.end100
  %100 = load i32, i32* %result, align 4, !dbg !8427
  ret i32 %100, !dbg !8428
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

declare i32 @Curl_closesocket(%struct.connectdata*, i32) #3

declare void @Curl_free_primary_ssl_config(%struct.ssl_primary_config*) #3

declare void @Curl_multi_handlePipeBreak(%struct.Curl_easy*) #3

declare i64 @Curl_multi_max_host_connections(%struct.Curl_multi*) #3

declare i64 @Curl_multi_max_total_connections(%struct.Curl_multi*) #3

; Function Attrs: nounwind uwtable
define internal %struct.connectdata* @allocate_conn(%struct.Curl_easy* %data) #0 !dbg !2160 {
entry:
  %retval = alloca %struct.connectdata*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn = alloca %struct.connectdata*, align 8
  %coerce = alloca %struct.timeval, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8429, metadata !2256), !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !8431, metadata !2256), !dbg !8432
  %0 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !8433
  %call = call i8* %0(i64 1, i64 1680), !dbg !8433
  %1 = bitcast i8* %call to %struct.connectdata*, !dbg !8433
  store %struct.connectdata* %1, %struct.connectdata** %conn, align 8, !dbg !8432
  %2 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8434
  %tobool = icmp ne %struct.connectdata* %2, null, !dbg !8434
  br i1 %tobool, label %if.end, label %if.then, !dbg !8436

if.then:                                          ; preds = %entry
  store %struct.connectdata* null, %struct.connectdata** %retval, align 8, !dbg !8437
  br label %return, !dbg !8437

if.end:                                           ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8438
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 47, !dbg !8439
  store %struct.Curl_handler* @Curl_handler_dummy, %struct.Curl_handler** %handler, align 8, !dbg !8440
  %4 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8441
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 33, !dbg !8442
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 0, !dbg !8441
  store i32 -1, i32* %arrayidx, align 8, !dbg !8443
  %5 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8444
  %sock1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 33, !dbg !8445
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %sock1, i64 0, i64 1, !dbg !8444
  store i32 -1, i32* %arrayidx2, align 4, !dbg !8446
  %6 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8447
  %tempsock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 34, !dbg !8448
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock, i64 0, i64 0, !dbg !8447
  store i32 -1, i32* %arrayidx3, align 8, !dbg !8449
  %7 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8450
  %tempsock4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 34, !dbg !8451
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock4, i64 0, i64 1, !dbg !8450
  store i32 -1, i32* %arrayidx5, align 4, !dbg !8452
  %8 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8453
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 5, !dbg !8454
  store i64 -1, i64* %connection_id, align 8, !dbg !8455
  %9 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8456
  %port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 17, !dbg !8457
  store i64 -1, i64* %port, align 8, !dbg !8458
  %10 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8459
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 18, !dbg !8460
  store i32 -1, i32* %remote_port, align 8, !dbg !8461
  %11 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8462
  call void @Curl_conncontrol(%struct.connectdata* %11, i32 1), !dbg !8462
  %12 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8463
  %created = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 32, !dbg !8464
  %call6 = call { i64, i64 } @curlx_tvnow(), !dbg !8465
  %13 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !8465
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !8465
  %15 = extractvalue { i64, i64 } %call6, 0, !dbg !8465
  store i64 %15, i64* %14, align 8, !dbg !8465
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !8465
  %17 = extractvalue { i64, i64 } %call6, 1, !dbg !8465
  store i64 %17, i64* %16, align 8, !dbg !8465
  %18 = bitcast %struct.timeval* %created to i8*, !dbg !8465
  %19 = bitcast %struct.timeval* %coerce to i8*, !dbg !8465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 16, i32 8, i1 false), !dbg !8466
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8468
  %21 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8469
  %data7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 0, !dbg !8470
  store %struct.Curl_easy* %20, %struct.Curl_easy** %data7, align 8, !dbg !8471
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8472
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 13, !dbg !8473
  %proxytype = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 76, !dbg !8474
  %23 = load i32, i32* %proxytype, align 8, !dbg !8474
  %24 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8475
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %24, i32 0, i32 16, !dbg !8476
  %proxytype8 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 2, !dbg !8477
  store i32 %23, i32* %proxytype8, align 8, !dbg !8478
  %25 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8479
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %25, i32 0, i32 15, !dbg !8480
  %proxytype9 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 2, !dbg !8481
  store i32 4, i32* %proxytype9, align 8, !dbg !8482
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8483
  %set10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 13, !dbg !8484
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set10, i32 0, i32 128, !dbg !8485
  %arrayidx11 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 21, !dbg !8483
  %27 = load i8*, i8** %arrayidx11, align 8, !dbg !8483
  %tobool12 = icmp ne i8* %27, null, !dbg !8483
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !8486

land.rhs:                                         ; preds = %if.end
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8487
  %set13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 13, !dbg !8488
  %str14 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set13, i32 0, i32 128, !dbg !8489
  %arrayidx15 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str14, i64 0, i64 21, !dbg !8487
  %29 = load i8*, i8** %arrayidx15, align 8, !dbg !8487
  %30 = load i8, i8* %29, align 1, !dbg !8490
  %conv = sext i8 %30 to i32, !dbg !8490
  %tobool16 = icmp ne i32 %conv, 0, !dbg !8491
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %31 = phi i1 [ false, %if.end ], [ %tobool16, %land.rhs ]
  %cond = select i1 %31, i32 1, i32 0, !dbg !8492
  %tobool17 = icmp ne i32 %cond, 0, !dbg !8492
  %32 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8494
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 43, !dbg !8495
  %proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 4, !dbg !8496
  %frombool = zext i1 %tobool17 to i8, !dbg !8497
  store i8 %frombool, i8* %proxy, align 1, !dbg !8497
  %33 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8498
  %bits18 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 43, !dbg !8499
  %proxy19 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits18, i32 0, i32 4, !dbg !8500
  %34 = load i8, i8* %proxy19, align 1, !dbg !8500
  %tobool20 = trunc i8 %34 to i1, !dbg !8500
  br i1 %tobool20, label %land.rhs22, label %land.end34, !dbg !8501

land.rhs22:                                       ; preds = %land.end
  %35 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8502
  %http_proxy23 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %35, i32 0, i32 16, !dbg !8503
  %proxytype24 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy23, i32 0, i32 2, !dbg !8504
  %36 = load i32, i32* %proxytype24, align 8, !dbg !8504
  %cmp = icmp eq i32 %36, 0, !dbg !8505
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8506

lor.lhs.false:                                    ; preds = %land.rhs22
  %37 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8507
  %http_proxy26 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 16, !dbg !8508
  %proxytype27 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy26, i32 0, i32 2, !dbg !8509
  %38 = load i32, i32* %proxytype27, align 8, !dbg !8509
  %cmp28 = icmp eq i32 %38, 1, !dbg !8510
  br i1 %cmp28, label %lor.end, label %lor.rhs, !dbg !8511

lor.rhs:                                          ; preds = %lor.lhs.false
  %39 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8512
  %http_proxy30 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %39, i32 0, i32 16, !dbg !8513
  %proxytype31 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy30, i32 0, i32 2, !dbg !8514
  %40 = load i32, i32* %proxytype31, align 8, !dbg !8514
  %cmp32 = icmp eq i32 %40, 2, !dbg !8515
  br label %lor.end, !dbg !8516

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs22
  %41 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs22 ], [ %cmp32, %lor.rhs ]
  br label %land.end34

land.end34:                                       ; preds = %lor.end, %land.end
  %42 = phi i1 [ false, %land.end ], [ %41, %lor.end ]
  %cond35 = select i1 %42, i32 1, i32 0, !dbg !8517
  %tobool36 = icmp ne i32 %cond35, 0, !dbg !8517
  %43 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8518
  %bits37 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %43, i32 0, i32 43, !dbg !8519
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits37, i32 0, i32 5, !dbg !8520
  %frombool38 = zext i1 %tobool36 to i8, !dbg !8521
  store i8 %frombool38, i8* %httpproxy, align 1, !dbg !8521
  %44 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8522
  %bits39 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 43, !dbg !8523
  %proxy40 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits39, i32 0, i32 4, !dbg !8524
  %45 = load i8, i8* %proxy40, align 1, !dbg !8524
  %tobool41 = trunc i8 %45 to i1, !dbg !8524
  br i1 %tobool41, label %land.rhs43, label %land.end47, !dbg !8525

land.rhs43:                                       ; preds = %land.end34
  %46 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8526
  %bits44 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %46, i32 0, i32 43, !dbg !8527
  %httpproxy45 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits44, i32 0, i32 5, !dbg !8528
  %47 = load i8, i8* %httpproxy45, align 1, !dbg !8528
  %tobool46 = trunc i8 %47 to i1, !dbg !8528
  %lnot = xor i1 %tobool46, true, !dbg !8529
  br label %land.end47

land.end47:                                       ; preds = %land.rhs43, %land.end34
  %48 = phi i1 [ false, %land.end34 ], [ %lnot, %land.rhs43 ]
  %cond48 = select i1 %48, i32 1, i32 0, !dbg !8530
  %tobool49 = icmp ne i32 %cond48, 0, !dbg !8530
  %49 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8531
  %bits50 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %49, i32 0, i32 43, !dbg !8532
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits50, i32 0, i32 6, !dbg !8533
  %frombool51 = zext i1 %tobool49 to i8, !dbg !8534
  store i8 %frombool51, i8* %socksproxy, align 1, !dbg !8534
  %50 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8535
  %set52 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %50, i32 0, i32 13, !dbg !8537
  %str53 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set52, i32 0, i32 128, !dbg !8538
  %arrayidx54 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str53, i64 0, i64 22, !dbg !8535
  %51 = load i8*, i8** %arrayidx54, align 8, !dbg !8535
  %tobool55 = icmp ne i8* %51, null, !dbg !8535
  br i1 %tobool55, label %land.lhs.true, label %if.end66, !dbg !8539

land.lhs.true:                                    ; preds = %land.end47
  %52 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8540
  %set56 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %52, i32 0, i32 13, !dbg !8542
  %str57 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set56, i32 0, i32 128, !dbg !8543
  %arrayidx58 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str57, i64 0, i64 22, !dbg !8540
  %53 = load i8*, i8** %arrayidx58, align 8, !dbg !8540
  %54 = load i8, i8* %53, align 1, !dbg !8544
  %conv59 = sext i8 %54 to i32, !dbg !8544
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !8544
  br i1 %tobool60, label %if.then61, label %if.end66, !dbg !8545

if.then61:                                        ; preds = %land.lhs.true
  %55 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8546
  %bits62 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %55, i32 0, i32 43, !dbg !8548
  %proxy63 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits62, i32 0, i32 4, !dbg !8549
  store i8 1, i8* %proxy63, align 1, !dbg !8550
  %56 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8551
  %bits64 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %56, i32 0, i32 43, !dbg !8552
  %socksproxy65 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits64, i32 0, i32 6, !dbg !8553
  store i8 1, i8* %socksproxy65, align 1, !dbg !8554
  br label %if.end66, !dbg !8555

if.end66:                                         ; preds = %if.then61, %land.lhs.true, %land.end47
  %57 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8556
  %set67 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %57, i32 0, i32 13, !dbg !8557
  %str68 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set67, i32 0, i32 128, !dbg !8558
  %arrayidx69 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str68, i64 0, i64 44, !dbg !8556
  %58 = load i8*, i8** %arrayidx69, align 8, !dbg !8556
  %tobool70 = icmp ne i8* %58, null, !dbg !8559
  %cond71 = select i1 %tobool70, i32 1, i32 0, !dbg !8559
  %tobool72 = icmp ne i32 %cond71, 0, !dbg !8559
  %59 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8560
  %bits73 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %59, i32 0, i32 43, !dbg !8561
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits73, i32 0, i32 8, !dbg !8562
  %frombool74 = zext i1 %tobool72 to i8, !dbg !8563
  store i8 %frombool74, i8* %proxy_user_passwd, align 1, !dbg !8563
  %60 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8564
  %set75 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %60, i32 0, i32 13, !dbg !8565
  %tunnel_thru_httpproxy = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set75, i32 0, i32 89, !dbg !8566
  %61 = load i8, i8* %tunnel_thru_httpproxy, align 2, !dbg !8566
  %tobool76 = trunc i8 %61 to i1, !dbg !8566
  %62 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8567
  %bits77 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %62, i32 0, i32 43, !dbg !8568
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits77, i32 0, i32 15, !dbg !8569
  %frombool78 = zext i1 %tobool76 to i8, !dbg !8570
  store i8 %frombool78, i8* %tunnel_proxy, align 1, !dbg !8570
  %63 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8571
  %set79 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %63, i32 0, i32 13, !dbg !8572
  %str80 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set79, i32 0, i32 128, !dbg !8573
  %arrayidx81 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str80, i64 0, i64 41, !dbg !8571
  %64 = load i8*, i8** %arrayidx81, align 8, !dbg !8571
  %tobool82 = icmp ne i8* %64, null, !dbg !8574
  %cond83 = select i1 %tobool82, i32 1, i32 0, !dbg !8574
  %tobool84 = icmp ne i32 %cond83, 0, !dbg !8574
  %65 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8575
  %bits85 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %65, i32 0, i32 43, !dbg !8576
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits85, i32 0, i32 7, !dbg !8577
  %frombool86 = zext i1 %tobool84 to i8, !dbg !8578
  store i8 %frombool86, i8* %user_passwd, align 1, !dbg !8578
  %66 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8579
  %set87 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %66, i32 0, i32 13, !dbg !8580
  %ftp_use_epsv = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set87, i32 0, i32 110, !dbg !8581
  %67 = load i8, i8* %ftp_use_epsv, align 4, !dbg !8581
  %tobool88 = trunc i8 %67 to i1, !dbg !8581
  %68 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8582
  %bits89 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %68, i32 0, i32 43, !dbg !8583
  %ftp_use_epsv90 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits89, i32 0, i32 18, !dbg !8584
  %frombool91 = zext i1 %tobool88 to i8, !dbg !8585
  store i8 %frombool91, i8* %ftp_use_epsv90, align 1, !dbg !8585
  %69 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8586
  %set92 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %69, i32 0, i32 13, !dbg !8587
  %ftp_use_eprt = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set92, i32 0, i32 111, !dbg !8588
  %70 = load i8, i8* %ftp_use_eprt, align 1, !dbg !8588
  %tobool93 = trunc i8 %70 to i1, !dbg !8588
  %71 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8589
  %bits94 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 43, !dbg !8590
  %ftp_use_eprt95 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits94, i32 0, i32 19, !dbg !8591
  %frombool96 = zext i1 %tobool93 to i8, !dbg !8592
  store i8 %frombool96, i8* %ftp_use_eprt95, align 1, !dbg !8592
  %72 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8593
  %set97 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %72, i32 0, i32 13, !dbg !8594
  %ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set97, i32 0, i32 73, !dbg !8595
  %primary = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl, i32 0, i32 0, !dbg !8596
  %verifystatus = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary, i32 0, i32 4, !dbg !8597
  %73 = load i8, i8* %verifystatus, align 2, !dbg !8597
  %tobool98 = trunc i8 %73 to i1, !dbg !8597
  %74 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8598
  %ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %74, i32 0, i32 40, !dbg !8599
  %verifystatus99 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %ssl_config, i32 0, i32 4, !dbg !8600
  %frombool100 = zext i1 %tobool98 to i8, !dbg !8601
  store i8 %frombool100, i8* %verifystatus99, align 2, !dbg !8601
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8602
  %set101 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %75, i32 0, i32 13, !dbg !8603
  %ssl102 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set101, i32 0, i32 73, !dbg !8604
  %primary103 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl102, i32 0, i32 0, !dbg !8605
  %verifypeer = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary103, i32 0, i32 2, !dbg !8606
  %76 = load i8, i8* %verifypeer, align 8, !dbg !8606
  %tobool104 = trunc i8 %76 to i1, !dbg !8606
  %77 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8607
  %ssl_config105 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %77, i32 0, i32 40, !dbg !8608
  %verifypeer106 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %ssl_config105, i32 0, i32 2, !dbg !8609
  %frombool107 = zext i1 %tobool104 to i8, !dbg !8610
  store i8 %frombool107, i8* %verifypeer106, align 8, !dbg !8610
  %78 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8611
  %set108 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %78, i32 0, i32 13, !dbg !8612
  %ssl109 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set108, i32 0, i32 73, !dbg !8613
  %primary110 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %ssl109, i32 0, i32 0, !dbg !8614
  %verifyhost = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary110, i32 0, i32 3, !dbg !8615
  %79 = load i8, i8* %verifyhost, align 1, !dbg !8615
  %tobool111 = trunc i8 %79 to i1, !dbg !8615
  %80 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8616
  %ssl_config112 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %80, i32 0, i32 40, !dbg !8617
  %verifyhost113 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %ssl_config112, i32 0, i32 3, !dbg !8618
  %frombool114 = zext i1 %tobool111 to i8, !dbg !8619
  store i8 %frombool114, i8* %verifyhost113, align 1, !dbg !8619
  %81 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8620
  %set115 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %81, i32 0, i32 13, !dbg !8621
  %proxy_ssl = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set115, i32 0, i32 74, !dbg !8622
  %primary116 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl, i32 0, i32 0, !dbg !8623
  %verifystatus117 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary116, i32 0, i32 4, !dbg !8624
  %82 = load i8, i8* %verifystatus117, align 2, !dbg !8624
  %tobool118 = trunc i8 %82 to i1, !dbg !8624
  %83 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8625
  %proxy_ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %83, i32 0, i32 41, !dbg !8626
  %verifystatus119 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %proxy_ssl_config, i32 0, i32 4, !dbg !8627
  %frombool120 = zext i1 %tobool118 to i8, !dbg !8628
  store i8 %frombool120, i8* %verifystatus119, align 2, !dbg !8628
  %84 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8629
  %set121 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %84, i32 0, i32 13, !dbg !8630
  %proxy_ssl122 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set121, i32 0, i32 74, !dbg !8631
  %primary123 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl122, i32 0, i32 0, !dbg !8632
  %verifypeer124 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary123, i32 0, i32 2, !dbg !8633
  %85 = load i8, i8* %verifypeer124, align 8, !dbg !8633
  %tobool125 = trunc i8 %85 to i1, !dbg !8633
  %86 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8634
  %proxy_ssl_config126 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %86, i32 0, i32 41, !dbg !8635
  %verifypeer127 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %proxy_ssl_config126, i32 0, i32 2, !dbg !8636
  %frombool128 = zext i1 %tobool125 to i8, !dbg !8637
  store i8 %frombool128, i8* %verifypeer127, align 8, !dbg !8637
  %87 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8638
  %set129 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %87, i32 0, i32 13, !dbg !8639
  %proxy_ssl130 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set129, i32 0, i32 74, !dbg !8640
  %primary131 = getelementptr inbounds %struct.ssl_config_data, %struct.ssl_config_data* %proxy_ssl130, i32 0, i32 0, !dbg !8641
  %verifyhost132 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %primary131, i32 0, i32 3, !dbg !8642
  %88 = load i8, i8* %verifyhost132, align 1, !dbg !8642
  %tobool133 = trunc i8 %88 to i1, !dbg !8642
  %89 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8643
  %proxy_ssl_config134 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %89, i32 0, i32 41, !dbg !8644
  %verifyhost135 = getelementptr inbounds %struct.ssl_primary_config, %struct.ssl_primary_config* %proxy_ssl_config134, i32 0, i32 3, !dbg !8645
  %frombool136 = zext i1 %tobool133 to i8, !dbg !8646
  store i8 %frombool136, i8* %verifyhost135, align 1, !dbg !8646
  %90 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8647
  %set137 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %90, i32 0, i32 13, !dbg !8648
  %ipver = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set137, i32 0, i32 81, !dbg !8649
  %91 = load i64, i64* %ipver, align 8, !dbg !8649
  %92 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8650
  %ip_version = getelementptr inbounds %struct.connectdata, %struct.connectdata* %92, i32 0, i32 49, !dbg !8651
  store i64 %91, i64* %ip_version, align 8, !dbg !8652
  %93 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8653
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %93, i32 0, i32 9, !dbg !8655
  %94 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !8655
  %call138 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %94, i32 1), !dbg !8656
  br i1 %call138, label %land.lhs.true140, label %if.end149, !dbg !8657

land.lhs.true140:                                 ; preds = %if.end66
  %95 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8658
  %master_buffer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %95, i32 0, i32 57, !dbg !8659
  %96 = load i8*, i8** %master_buffer, align 8, !dbg !8659
  %tobool141 = icmp ne i8* %96, null, !dbg !8658
  br i1 %tobool141, label %if.end149, label %if.then142, !dbg !8660

if.then142:                                       ; preds = %land.lhs.true140
  %97 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !8661
  %call143 = call i8* %97(i64 16384, i64 1), !dbg !8661
  %98 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8663
  %master_buffer144 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %98, i32 0, i32 57, !dbg !8664
  store i8* %call143, i8** %master_buffer144, align 8, !dbg !8665
  %99 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8666
  %master_buffer145 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %99, i32 0, i32 57, !dbg !8668
  %100 = load i8*, i8** %master_buffer145, align 8, !dbg !8668
  %tobool146 = icmp ne i8* %100, null, !dbg !8666
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !8669

if.then147:                                       ; preds = %if.then142
  br label %error, !dbg !8670

if.end148:                                        ; preds = %if.then142
  br label %if.end149, !dbg !8671

if.end149:                                        ; preds = %if.end148, %land.lhs.true140, %if.end66
  %101 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8672
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %101, i32 0, i32 55, !dbg !8673
  call void @Curl_llist_init(%struct.curl_llist* %send_pipe, void (i8*, i8*)* @llist_dtor), !dbg !8674
  %102 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8675
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %102, i32 0, i32 56, !dbg !8676
  call void @Curl_llist_init(%struct.curl_llist* %recv_pipe, void (i8*, i8*)* @llist_dtor), !dbg !8677
  %103 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8678
  %set150 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %103, i32 0, i32 13, !dbg !8680
  %str151 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set150, i32 0, i32 128, !dbg !8681
  %arrayidx152 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str151, i64 0, i64 8, !dbg !8678
  %104 = load i8*, i8** %arrayidx152, align 8, !dbg !8678
  %tobool153 = icmp ne i8* %104, null, !dbg !8678
  br i1 %tobool153, label %if.then154, label %if.end163, !dbg !8682

if.then154:                                       ; preds = %if.end149
  %105 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !8683
  %106 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8683
  %set155 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %106, i32 0, i32 13, !dbg !8683
  %str156 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set155, i32 0, i32 128, !dbg !8683
  %arrayidx157 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str156, i64 0, i64 8, !dbg !8683
  %107 = load i8*, i8** %arrayidx157, align 8, !dbg !8683
  %call158 = call i8* %105(i8* %107), !dbg !8683
  %108 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8685
  %localdev = getelementptr inbounds %struct.connectdata, %struct.connectdata* %108, i32 0, i32 69, !dbg !8686
  store i8* %call158, i8** %localdev, align 8, !dbg !8687
  %109 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8688
  %localdev159 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %109, i32 0, i32 69, !dbg !8690
  %110 = load i8*, i8** %localdev159, align 8, !dbg !8690
  %tobool160 = icmp ne i8* %110, null, !dbg !8688
  br i1 %tobool160, label %if.end162, label %if.then161, !dbg !8691

if.then161:                                       ; preds = %if.then154
  br label %error, !dbg !8692

if.end162:                                        ; preds = %if.then154
  br label %if.end163, !dbg !8693

if.end163:                                        ; preds = %if.end162, %if.end149
  %111 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8694
  %set164 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %111, i32 0, i32 13, !dbg !8695
  %localportrange = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set164, i32 0, i32 19, !dbg !8696
  %112 = load i32, i32* %localportrange, align 4, !dbg !8696
  %113 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8697
  %localportrange165 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %113, i32 0, i32 71, !dbg !8698
  store i32 %112, i32* %localportrange165, align 4, !dbg !8699
  %114 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8700
  %set166 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %114, i32 0, i32 13, !dbg !8701
  %localport = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set166, i32 0, i32 18, !dbg !8702
  %115 = load i16, i16* %localport, align 8, !dbg !8702
  %116 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8703
  %localport167 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %116, i32 0, i32 70, !dbg !8704
  store i16 %115, i16* %localport167, align 8, !dbg !8705
  %117 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8706
  %set168 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %117, i32 0, i32 13, !dbg !8707
  %fclosesocket = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set168, i32 0, i32 34, !dbg !8708
  %118 = load i32 (i8*, i32)*, i32 (i8*, i32)** %fclosesocket, align 8, !dbg !8708
  %119 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8709
  %fclosesocket169 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %119, i32 0, i32 2, !dbg !8710
  store i32 (i8*, i32)* %118, i32 (i8*, i32)** %fclosesocket169, align 8, !dbg !8711
  %120 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8712
  %set170 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %120, i32 0, i32 13, !dbg !8713
  %closesocket_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set170, i32 0, i32 35, !dbg !8714
  %121 = load i8*, i8** %closesocket_client, align 8, !dbg !8714
  %122 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8715
  %closesocket_client171 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %122, i32 0, i32 3, !dbg !8716
  store i8* %121, i8** %closesocket_client171, align 8, !dbg !8717
  %123 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8718
  store %struct.connectdata* %123, %struct.connectdata** %retval, align 8, !dbg !8719
  br label %return, !dbg !8719

error:                                            ; preds = %if.then161, %if.then147
  %124 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8720
  %send_pipe172 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %124, i32 0, i32 55, !dbg !8721
  call void @Curl_llist_destroy(%struct.curl_llist* %send_pipe172, i8* null), !dbg !8722
  %125 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8723
  %recv_pipe173 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %125, i32 0, i32 56, !dbg !8724
  call void @Curl_llist_destroy(%struct.curl_llist* %recv_pipe173, i8* null), !dbg !8725
  %126 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8726
  %127 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8726
  %master_buffer174 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %127, i32 0, i32 57, !dbg !8726
  %128 = load i8*, i8** %master_buffer174, align 8, !dbg !8726
  call void %126(i8* %128), !dbg !8726
  %129 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8727
  %130 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8727
  %localdev175 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %130, i32 0, i32 69, !dbg !8727
  %131 = load i8*, i8** %localdev175, align 8, !dbg !8727
  call void %129(i8* %131), !dbg !8727
  %132 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8728
  %133 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !8728
  %134 = bitcast %struct.connectdata* %133 to i8*, !dbg !8728
  call void %132(i8* %134), !dbg !8728
  store %struct.connectdata* null, %struct.connectdata** %retval, align 8, !dbg !8729
  br label %return, !dbg !8729

return:                                           ; preds = %error, %if.end163, %if.then
  %135 = load %struct.connectdata*, %struct.connectdata** %retval, align 8, !dbg !8730
  ret %struct.connectdata* %135, !dbg !8730
}

; Function Attrs: nounwind uwtable
define internal i32 @parseurlandfillconn(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %prot_missing, i8** %userp, i8** %passwdp, i8** %optionsp) #0 !dbg !2162 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %prot_missing.addr = alloca i8*, align 8
  %userp.addr = alloca i8**, align 8
  %passwdp.addr = alloca i8**, align 8
  %optionsp.addr = alloca i8**, align 8
  %at = alloca i8*, align 8
  %fragment = alloca i8*, align 8
  %path = alloca i8*, align 8
  %query = alloca i8*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %protop = alloca i8*, align 8
  %result = alloca i32, align 4
  %rebuild_url = alloca i8, align 1
  %url_has_scheme = alloca i8, align 1
  %protobuf = alloca [16 x i8], align 16
  %path_has_drive = alloca i8, align 1
  %ptr = alloca i8*, align 8
  %slashbuf = alloca [4 x i8], align 1
  %s = alloca i64, align 8
  %hostlen = alloca i64, align 8
  %pathlen = alloca i64, align 8
  %newp = alloca i8*, align 8
  %reurl = alloca i8*, align 8
  %plen = alloca i64, align 8
  %urllen = alloca i64, align 8
  %prefixlen = alloca i64, align 8
  %percent = alloca i8*, align 8
  %identifier_offset = alloca i32, align 4
  %endp = alloca i8*, align 8
  %scope = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8731, metadata !2256), !dbg !8732
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !8733, metadata !2256), !dbg !8734
  store i8* %prot_missing, i8** %prot_missing.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prot_missing.addr, metadata !8735, metadata !2256), !dbg !8736
  store i8** %userp, i8*** %userp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %userp.addr, metadata !8737, metadata !2256), !dbg !8738
  store i8** %passwdp, i8*** %passwdp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %passwdp.addr, metadata !8739, metadata !2256), !dbg !8740
  store i8** %optionsp, i8*** %optionsp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %optionsp.addr, metadata !8741, metadata !2256), !dbg !8742
  call void @llvm.dbg.declare(metadata i8** %at, metadata !8743, metadata !2256), !dbg !8744
  call void @llvm.dbg.declare(metadata i8** %fragment, metadata !8745, metadata !2256), !dbg !8746
  call void @llvm.dbg.declare(metadata i8** %path, metadata !8747, metadata !2256), !dbg !8748
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8749
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !8750
  %path1 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 38, !dbg !8751
  %1 = load i8*, i8** %path1, align 8, !dbg !8751
  store i8* %1, i8** %path, align 8, !dbg !8748
  call void @llvm.dbg.declare(metadata i8** %query, metadata !8752, metadata !2256), !dbg !8753
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8754, metadata !2256), !dbg !8755
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8756, metadata !2256), !dbg !8757
  call void @llvm.dbg.declare(metadata i8** %protop, metadata !8758, metadata !2256), !dbg !8759
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i8** %protop, align 8, !dbg !8759
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8760, metadata !2256), !dbg !8761
  call void @llvm.dbg.declare(metadata i8* %rebuild_url, metadata !8762, metadata !2256), !dbg !8763
  store i8 0, i8* %rebuild_url, align 1, !dbg !8763
  call void @llvm.dbg.declare(metadata i8* %url_has_scheme, metadata !8764, metadata !2256), !dbg !8765
  store i8 0, i8* %url_has_scheme, align 1, !dbg !8765
  call void @llvm.dbg.declare(metadata [16 x i8]* %protobuf, metadata !8766, metadata !2256), !dbg !8770
  %2 = load i8*, i8** %prot_missing.addr, align 8, !dbg !8771
  store i8 0, i8* %2, align 1, !dbg !8772
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8773
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 14, !dbg !8775
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 0, !dbg !8776
  %4 = load i8*, i8** %url, align 8, !dbg !8776
  %call = call i8* @strpbrk(i8* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0)) #7, !dbg !8777
  %tobool = icmp ne i8* %call, null, !dbg !8777
  br i1 %tobool, label %if.then, label %if.end, !dbg !8778

if.then:                                          ; preds = %entry
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8779
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i32 0, i32 0)), !dbg !8781
  store i32 3, i32* %retval, align 4, !dbg !8782
  br label %return, !dbg !8782

if.end:                                           ; preds = %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8783
  %change2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 14, !dbg !8785
  %url3 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change2, i32 0, i32 0, !dbg !8786
  %7 = load i8*, i8** %url3, align 8, !dbg !8786
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !8783
  %8 = load i8, i8* %arrayidx, align 1, !dbg !8783
  %conv = sext i8 %8 to i32, !dbg !8783
  %cmp = icmp eq i32 %conv, 58, !dbg !8787
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !8788

if.then5:                                         ; preds = %if.end
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8789
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i32 0, i32 0)), !dbg !8791
  store i32 3, i32* %retval, align 4, !dbg !8792
  br label %return, !dbg !8792

if.end6:                                          ; preds = %if.end
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8793
  %change7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 14, !dbg !8795
  %url8 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change7, i32 0, i32 0, !dbg !8796
  %11 = load i8*, i8** %url8, align 8, !dbg !8796
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !8793
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !8793
  %conv10 = sext i8 %12 to i32, !dbg !8793
  %cmp11 = icmp sle i32 97, %conv10, !dbg !8797
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false, !dbg !8798

land.lhs.true:                                    ; preds = %if.end6
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8799
  %change13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 14, !dbg !8801
  %url14 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change13, i32 0, i32 0, !dbg !8802
  %14 = load i8*, i8** %url14, align 8, !dbg !8802
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !8799
  %15 = load i8, i8* %arrayidx15, align 1, !dbg !8799
  %conv16 = sext i8 %15 to i32, !dbg !8799
  %cmp17 = icmp sle i32 %conv16, 122, !dbg !8803
  br i1 %cmp17, label %land.lhs.true32, label %lor.lhs.false, !dbg !8804

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end6
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8805
  %change19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 14, !dbg !8806
  %url20 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change19, i32 0, i32 0, !dbg !8807
  %17 = load i8*, i8** %url20, align 8, !dbg !8807
  %arrayidx21 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !8805
  %18 = load i8, i8* %arrayidx21, align 1, !dbg !8805
  %conv22 = sext i8 %18 to i32, !dbg !8805
  %cmp23 = icmp sle i32 65, %conv22, !dbg !8808
  br i1 %cmp23, label %land.lhs.true25, label %if.else, !dbg !8809

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8810
  %change26 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %19, i32 0, i32 14, !dbg !8811
  %url27 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change26, i32 0, i32 0, !dbg !8812
  %20 = load i8*, i8** %url27, align 8, !dbg !8812
  %arrayidx28 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !8810
  %21 = load i8, i8* %arrayidx28, align 1, !dbg !8810
  %conv29 = sext i8 %21 to i32, !dbg !8810
  %cmp30 = icmp sle i32 %conv29, 90, !dbg !8813
  br i1 %cmp30, label %land.lhs.true32, label %if.else, !dbg !8814

land.lhs.true32:                                  ; preds = %land.lhs.true25, %land.lhs.true
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8815
  %change33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 14, !dbg !8816
  %url34 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change33, i32 0, i32 0, !dbg !8817
  %23 = load i8*, i8** %url34, align 8, !dbg !8817
  %arrayidx35 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !8815
  %24 = load i8, i8* %arrayidx35, align 1, !dbg !8815
  %conv36 = sext i8 %24 to i32, !dbg !8815
  %cmp37 = icmp eq i32 %conv36, 58, !dbg !8818
  br i1 %cmp37, label %land.lhs.true39, label %if.else, !dbg !8819

land.lhs.true39:                                  ; preds = %land.lhs.true32
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8820
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 13, !dbg !8821
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !8822
  %arrayidx40 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 7, !dbg !8820
  %26 = load i8*, i8** %arrayidx40, align 8, !dbg !8820
  %tobool41 = icmp ne i8* %26, null, !dbg !8820
  br i1 %tobool41, label %land.lhs.true42, label %if.else, !dbg !8823

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %27 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8824
  %set43 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %27, i32 0, i32 13, !dbg !8824
  %str44 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set43, i32 0, i32 128, !dbg !8824
  %arrayidx45 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str44, i64 0, i64 7, !dbg !8824
  %28 = load i8*, i8** %arrayidx45, align 8, !dbg !8824
  %call46 = call i32 @Curl_strcasecompare(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0)), !dbg !8824
  %tobool47 = icmp ne i32 %call46, 0, !dbg !8824
  br i1 %tobool47, label %if.then48, label %if.else, !dbg !8825

if.then48:                                        ; preds = %land.lhs.true42
  br label %if.end74, !dbg !8827

if.else:                                          ; preds = %land.lhs.true42, %land.lhs.true39, %land.lhs.true32, %land.lhs.true25, %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !8829
  br label %for.cond, !dbg !8832

for.cond:                                         ; preds = %for.inc, %if.else
  %29 = load i32, i32* %i, align 4, !dbg !8833
  %cmp49 = icmp slt i32 %29, 16, !dbg !8836
  br i1 %cmp49, label %land.rhs, label %land.end, !dbg !8837

land.rhs:                                         ; preds = %for.cond
  %30 = load i32, i32* %i, align 4, !dbg !8838
  %idxprom = sext i32 %30 to i64, !dbg !8840
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8840
  %change51 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 14, !dbg !8841
  %url52 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change51, i32 0, i32 0, !dbg !8842
  %32 = load i8*, i8** %url52, align 8, !dbg !8842
  %arrayidx53 = getelementptr inbounds i8, i8* %32, i64 %idxprom, !dbg !8840
  %33 = load i8, i8* %arrayidx53, align 1, !dbg !8840
  %conv54 = sext i8 %33 to i32, !dbg !8840
  %tobool55 = icmp ne i32 %conv54, 0, !dbg !8843
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %34 = phi i1 [ false, %for.cond ], [ %tobool55, %land.rhs ]
  br i1 %34, label %for.body, label %for.end, !dbg !8844

for.body:                                         ; preds = %land.end
  %35 = load i32, i32* %i, align 4, !dbg !8846
  %idxprom56 = sext i32 %35 to i64, !dbg !8849
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8849
  %change57 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %36, i32 0, i32 14, !dbg !8850
  %url58 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change57, i32 0, i32 0, !dbg !8851
  %37 = load i8*, i8** %url58, align 8, !dbg !8851
  %arrayidx59 = getelementptr inbounds i8, i8* %37, i64 %idxprom56, !dbg !8849
  %38 = load i8, i8* %arrayidx59, align 1, !dbg !8849
  %conv60 = sext i8 %38 to i32, !dbg !8849
  %cmp61 = icmp eq i32 %conv60, 47, !dbg !8852
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !8853

if.then63:                                        ; preds = %for.body
  br label %for.end, !dbg !8854

if.end64:                                         ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !8855
  %idxprom65 = sext i32 %39 to i64, !dbg !8857
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8857
  %change66 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 14, !dbg !8858
  %url67 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change66, i32 0, i32 0, !dbg !8859
  %41 = load i8*, i8** %url67, align 8, !dbg !8859
  %arrayidx68 = getelementptr inbounds i8, i8* %41, i64 %idxprom65, !dbg !8857
  %42 = load i8, i8* %arrayidx68, align 1, !dbg !8857
  %conv69 = sext i8 %42 to i32, !dbg !8857
  %cmp70 = icmp eq i32 %conv69, 58, !dbg !8860
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !8861

if.then72:                                        ; preds = %if.end64
  store i8 1, i8* %url_has_scheme, align 1, !dbg !8862
  br label %for.end, !dbg !8864

if.end73:                                         ; preds = %if.end64
  br label %for.inc, !dbg !8865

for.inc:                                          ; preds = %if.end73
  %43 = load i32, i32* %i, align 4, !dbg !8866
  %inc = add nsw i32 %43, 1, !dbg !8866
  store i32 %inc, i32* %i, align 4, !dbg !8866
  br label %for.cond, !dbg !8868

for.end:                                          ; preds = %if.then72, %if.then63, %land.end
  br label %if.end74

if.end74:                                         ; preds = %for.end, %if.then48
  %44 = load i8, i8* %url_has_scheme, align 1, !dbg !8869
  %tobool75 = trunc i8 %44 to i1, !dbg !8869
  br i1 %tobool75, label %land.lhs.true77, label %lor.lhs.false82, !dbg !8871

land.lhs.true77:                                  ; preds = %if.end74
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8872
  %change78 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 14, !dbg !8872
  %url79 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change78, i32 0, i32 0, !dbg !8872
  %46 = load i8*, i8** %url79, align 8, !dbg !8872
  %call80 = call i32 @Curl_strncasecompare(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i64 5), !dbg !8872
  %tobool81 = icmp ne i32 %call80, 0, !dbg !8872
  br i1 %tobool81, label %if.then95, label %lor.lhs.false82, !dbg !8874

lor.lhs.false82:                                  ; preds = %land.lhs.true77, %if.end74
  %47 = load i8, i8* %url_has_scheme, align 1, !dbg !8875
  %tobool83 = trunc i8 %47 to i1, !dbg !8875
  br i1 %tobool83, label %if.else204, label %land.lhs.true84, !dbg !8876

land.lhs.true84:                                  ; preds = %lor.lhs.false82
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8877
  %set85 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 13, !dbg !8878
  %str86 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set85, i32 0, i32 128, !dbg !8879
  %arrayidx87 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str86, i64 0, i64 7, !dbg !8877
  %49 = load i8*, i8** %arrayidx87, align 8, !dbg !8877
  %tobool88 = icmp ne i8* %49, null, !dbg !8877
  br i1 %tobool88, label %land.lhs.true89, label %if.else204, !dbg !8880

land.lhs.true89:                                  ; preds = %land.lhs.true84
  %50 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8881
  %set90 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %50, i32 0, i32 13, !dbg !8881
  %str91 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set90, i32 0, i32 128, !dbg !8881
  %arrayidx92 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str91, i64 0, i64 7, !dbg !8881
  %51 = load i8*, i8** %arrayidx92, align 8, !dbg !8881
  %call93 = call i32 @Curl_strcasecompare(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0)), !dbg !8881
  %tobool94 = icmp ne i32 %call93, 0, !dbg !8881
  br i1 %tobool94, label %if.then95, label %if.else204, !dbg !8882

if.then95:                                        ; preds = %land.lhs.true89, %land.lhs.true77
  call void @llvm.dbg.declare(metadata i8* %path_has_drive, metadata !8883, metadata !2256), !dbg !8885
  store i8 0, i8* %path_has_drive, align 1, !dbg !8885
  %52 = load i8, i8* %url_has_scheme, align 1, !dbg !8886
  %tobool96 = trunc i8 %52 to i1, !dbg !8886
  br i1 %tobool96, label %if.then97, label %if.else101, !dbg !8888

if.then97:                                        ; preds = %if.then95
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8889
  %change98 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %53, i32 0, i32 14, !dbg !8890
  %url99 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change98, i32 0, i32 0, !dbg !8891
  %54 = load i8*, i8** %url99, align 8, !dbg !8891
  %55 = load i8*, i8** %path, align 8, !dbg !8892
  %call100 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %54, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i8* %55) #8, !dbg !8893
  store i32 %call100, i32* %rc, align 4, !dbg !8894
  br label %if.end105, !dbg !8895

if.else101:                                       ; preds = %if.then95
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8896
  %change102 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %56, i32 0, i32 14, !dbg !8897
  %url103 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change102, i32 0, i32 0, !dbg !8898
  %57 = load i8*, i8** %url103, align 8, !dbg !8898
  %58 = load i8*, i8** %path, align 8, !dbg !8899
  %call104 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* %58) #8, !dbg !8900
  store i32 %call104, i32* %rc, align 4, !dbg !8901
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %59 = load i32, i32* %rc, align 4, !dbg !8902
  %cmp106 = icmp ne i32 %59, 1, !dbg !8904
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !8905

if.then108:                                       ; preds = %if.end105
  %60 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8906
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0)), !dbg !8908
  store i32 3, i32* %retval, align 4, !dbg !8909
  br label %return, !dbg !8909

if.end109:                                        ; preds = %if.end105
  %61 = load i8, i8* %url_has_scheme, align 1, !dbg !8910
  %tobool110 = trunc i8 %61 to i1, !dbg !8910
  br i1 %tobool110, label %land.lhs.true112, label %if.end125, !dbg !8912

land.lhs.true112:                                 ; preds = %if.end109
  %62 = load i8*, i8** %path, align 8, !dbg !8913
  %arrayidx113 = getelementptr inbounds i8, i8* %62, i64 0, !dbg !8913
  %63 = load i8, i8* %arrayidx113, align 1, !dbg !8913
  %conv114 = sext i8 %63 to i32, !dbg !8913
  %cmp115 = icmp eq i32 %conv114, 47, !dbg !8915
  br i1 %cmp115, label %land.lhs.true117, label %if.end125, !dbg !8916

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %64 = load i8*, i8** %path, align 8, !dbg !8917
  %arrayidx118 = getelementptr inbounds i8, i8* %64, i64 1, !dbg !8917
  %65 = load i8, i8* %arrayidx118, align 1, !dbg !8917
  %conv119 = sext i8 %65 to i32, !dbg !8917
  %cmp120 = icmp eq i32 %conv119, 47, !dbg !8919
  br i1 %cmp120, label %if.then122, label %if.end125, !dbg !8920

if.then122:                                       ; preds = %land.lhs.true117
  %66 = load i8*, i8** %path, align 8, !dbg !8921
  %67 = load i8*, i8** %path, align 8, !dbg !8923
  %add.ptr = getelementptr inbounds i8, i8* %67, i64 2, !dbg !8924
  %68 = load i8*, i8** %path, align 8, !dbg !8925
  %add.ptr123 = getelementptr inbounds i8, i8* %68, i64 2, !dbg !8926
  %call124 = call i64 @strlen(i8* %add.ptr123) #7, !dbg !8927
  %add = add i64 %call124, 1, !dbg !8928
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %66, i8* %add.ptr, i64 %add, i32 1, i1 false), !dbg !8929
  br label %if.end125, !dbg !8931

if.end125:                                        ; preds = %if.then122, %land.lhs.true117, %land.lhs.true112, %if.end109
  %69 = load i8*, i8** %path, align 8, !dbg !8932
  %arrayidx126 = getelementptr inbounds i8, i8* %69, i64 0, !dbg !8932
  %70 = load i8, i8* %arrayidx126, align 1, !dbg !8932
  %conv127 = sext i8 %70 to i32, !dbg !8932
  %cmp128 = icmp sle i32 97, %conv127, !dbg !8933
  br i1 %cmp128, label %land.lhs.true130, label %lor.lhs.false135, !dbg !8934

land.lhs.true130:                                 ; preds = %if.end125
  %71 = load i8*, i8** %path, align 8, !dbg !8935
  %arrayidx131 = getelementptr inbounds i8, i8* %71, i64 0, !dbg !8935
  %72 = load i8, i8* %arrayidx131, align 1, !dbg !8935
  %conv132 = sext i8 %72 to i32, !dbg !8935
  %cmp133 = icmp sle i32 %conv132, 122, !dbg !8937
  br i1 %cmp133, label %land.rhs145, label %lor.lhs.false135, !dbg !8938

lor.lhs.false135:                                 ; preds = %land.lhs.true130, %if.end125
  %73 = load i8*, i8** %path, align 8, !dbg !8939
  %arrayidx136 = getelementptr inbounds i8, i8* %73, i64 0, !dbg !8939
  %74 = load i8, i8* %arrayidx136, align 1, !dbg !8939
  %conv137 = sext i8 %74 to i32, !dbg !8939
  %cmp138 = icmp sle i32 65, %conv137, !dbg !8940
  br i1 %cmp138, label %land.lhs.true140, label %land.end150, !dbg !8941

land.lhs.true140:                                 ; preds = %lor.lhs.false135
  %75 = load i8*, i8** %path, align 8, !dbg !8942
  %arrayidx141 = getelementptr inbounds i8, i8* %75, i64 0, !dbg !8942
  %76 = load i8, i8* %arrayidx141, align 1, !dbg !8942
  %conv142 = sext i8 %76 to i32, !dbg !8942
  %cmp143 = icmp sle i32 %conv142, 90, !dbg !8943
  br i1 %cmp143, label %land.rhs145, label %land.end150, !dbg !8944

land.rhs145:                                      ; preds = %land.lhs.true140, %land.lhs.true130
  %77 = load i8*, i8** %path, align 8, !dbg !8945
  %arrayidx146 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !8945
  %78 = load i8, i8* %arrayidx146, align 1, !dbg !8945
  %conv147 = sext i8 %78 to i32, !dbg !8945
  %cmp148 = icmp eq i32 %conv147, 58, !dbg !8947
  br label %land.end150

land.end150:                                      ; preds = %land.rhs145, %land.lhs.true140, %lor.lhs.false135
  %79 = phi i1 [ false, %land.lhs.true140 ], [ false, %lor.lhs.false135 ], [ %cmp148, %land.rhs145 ]
  %frombool = zext i1 %79 to i8, !dbg !8948
  store i8 %frombool, i8* %path_has_drive, align 1, !dbg !8948
  %80 = load i8*, i8** %path, align 8, !dbg !8949
  %arrayidx151 = getelementptr inbounds i8, i8* %80, i64 0, !dbg !8949
  %81 = load i8, i8* %arrayidx151, align 1, !dbg !8949
  %conv152 = sext i8 %81 to i32, !dbg !8949
  %cmp153 = icmp ne i32 %conv152, 47, !dbg !8951
  br i1 %cmp153, label %land.lhs.true155, label %if.end200, !dbg !8952

land.lhs.true155:                                 ; preds = %land.end150
  %82 = load i8, i8* %path_has_drive, align 1, !dbg !8953
  %tobool156 = trunc i8 %82 to i1, !dbg !8953
  br i1 %tobool156, label %if.end200, label %if.then157, !dbg !8955

if.then157:                                       ; preds = %land.lhs.true155
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !8956, metadata !2256), !dbg !8958
  %83 = load i8*, i8** %path, align 8, !dbg !8959
  %call158 = call i32 @curl_strnequal(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* %83, i64 10), !dbg !8959
  %tobool159 = icmp ne i32 %call158, 0, !dbg !8959
  br i1 %tobool159, label %if.end164, label %land.lhs.true160, !dbg !8961

land.lhs.true160:                                 ; preds = %if.then157
  %84 = load i8*, i8** %path, align 8, !dbg !8962
  %call161 = call i32 @curl_strnequal(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* %84, i64 10), !dbg !8962
  %tobool162 = icmp ne i32 %call161, 0, !dbg !8962
  br i1 %tobool162, label %if.end164, label %if.then163, !dbg !8963

if.then163:                                       ; preds = %land.lhs.true160
  %85 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8965
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %85, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.32, i32 0, i32 0)), !dbg !8967
  store i32 3, i32* %retval, align 4, !dbg !8968
  br label %return, !dbg !8968

if.end164:                                        ; preds = %land.lhs.true160, %if.then157
  %86 = load i8*, i8** %path, align 8, !dbg !8969
  %arrayidx165 = getelementptr inbounds i8, i8* %86, i64 9, !dbg !8969
  store i8* %arrayidx165, i8** %ptr, align 8, !dbg !8970
  %87 = load i8*, i8** %ptr, align 8, !dbg !8971
  %arrayidx166 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !8971
  %88 = load i8, i8* %arrayidx166, align 1, !dbg !8971
  %conv167 = sext i8 %88 to i32, !dbg !8971
  %cmp168 = icmp eq i32 47, %conv167, !dbg !8973
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !8974

if.then170:                                       ; preds = %if.end164
  %89 = load i8*, i8** %ptr, align 8, !dbg !8975
  %incdec.ptr = getelementptr inbounds i8, i8* %89, i32 1, !dbg !8975
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !8975
  br label %if.end171, !dbg !8976

if.end171:                                        ; preds = %if.then170, %if.end164
  %90 = load i8*, i8** %path, align 8, !dbg !8977
  %91 = load i8*, i8** %ptr, align 8, !dbg !8978
  %92 = load i8*, i8** %ptr, align 8, !dbg !8979
  %call172 = call i64 @strlen(i8* %92) #7, !dbg !8980
  %add173 = add i64 %call172, 1, !dbg !8981
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %90, i8* %91, i64 %add173, i32 1, i1 false), !dbg !8982
  %93 = load i8*, i8** %path, align 8, !dbg !8983
  %arrayidx174 = getelementptr inbounds i8, i8* %93, i64 0, !dbg !8983
  %94 = load i8, i8* %arrayidx174, align 1, !dbg !8983
  %conv175 = sext i8 %94 to i32, !dbg !8983
  %cmp176 = icmp sle i32 97, %conv175, !dbg !8984
  br i1 %cmp176, label %land.lhs.true178, label %lor.lhs.false183, !dbg !8985

land.lhs.true178:                                 ; preds = %if.end171
  %95 = load i8*, i8** %path, align 8, !dbg !8986
  %arrayidx179 = getelementptr inbounds i8, i8* %95, i64 0, !dbg !8986
  %96 = load i8, i8* %arrayidx179, align 1, !dbg !8986
  %conv180 = sext i8 %96 to i32, !dbg !8986
  %cmp181 = icmp sle i32 %conv180, 122, !dbg !8987
  br i1 %cmp181, label %land.rhs193, label %lor.lhs.false183, !dbg !8988

lor.lhs.false183:                                 ; preds = %land.lhs.true178, %if.end171
  %97 = load i8*, i8** %path, align 8, !dbg !8989
  %arrayidx184 = getelementptr inbounds i8, i8* %97, i64 0, !dbg !8989
  %98 = load i8, i8* %arrayidx184, align 1, !dbg !8989
  %conv185 = sext i8 %98 to i32, !dbg !8989
  %cmp186 = icmp sle i32 65, %conv185, !dbg !8990
  br i1 %cmp186, label %land.lhs.true188, label %land.end198, !dbg !8991

land.lhs.true188:                                 ; preds = %lor.lhs.false183
  %99 = load i8*, i8** %path, align 8, !dbg !8992
  %arrayidx189 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !8992
  %100 = load i8, i8* %arrayidx189, align 1, !dbg !8992
  %conv190 = sext i8 %100 to i32, !dbg !8992
  %cmp191 = icmp sle i32 %conv190, 90, !dbg !8993
  br i1 %cmp191, label %land.rhs193, label %land.end198, !dbg !8994

land.rhs193:                                      ; preds = %land.lhs.true188, %land.lhs.true178
  %101 = load i8*, i8** %path, align 8, !dbg !8995
  %arrayidx194 = getelementptr inbounds i8, i8* %101, i64 1, !dbg !8995
  %102 = load i8, i8* %arrayidx194, align 1, !dbg !8995
  %conv195 = sext i8 %102 to i32, !dbg !8995
  %cmp196 = icmp eq i32 %conv195, 58, !dbg !8997
  br label %land.end198

land.end198:                                      ; preds = %land.rhs193, %land.lhs.true188, %lor.lhs.false183
  %103 = phi i1 [ false, %land.lhs.true188 ], [ false, %lor.lhs.false183 ], [ %cmp196, %land.rhs193 ]
  %frombool199 = zext i1 %103 to i8, !dbg !8998
  store i8 %frombool199, i8* %path_has_drive, align 1, !dbg !8998
  br label %if.end200, !dbg !8999

if.end200:                                        ; preds = %land.end198, %land.lhs.true155, %land.end150
  %104 = load i8, i8* %path_has_drive, align 1, !dbg !9000
  %tobool201 = trunc i8 %104 to i1, !dbg !9000
  br i1 %tobool201, label %if.then202, label %if.end203, !dbg !9002

if.then202:                                       ; preds = %if.end200
  %105 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9003
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %105, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.33, i32 0, i32 0)), !dbg !9005
  store i32 3, i32* %retval, align 4, !dbg !9006
  br label %return, !dbg !9006

if.end203:                                        ; preds = %if.end200
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i8** %protop, align 8, !dbg !9007
  br label %if.end304, !dbg !9008

if.else204:                                       ; preds = %land.lhs.true89, %land.lhs.true84, %lor.lhs.false82
  call void @llvm.dbg.declare(metadata [4 x i8]* %slashbuf, metadata !9009, metadata !2256), !dbg !9012
  %106 = load i8*, i8** %path, align 8, !dbg !9013
  %arrayidx205 = getelementptr inbounds i8, i8* %106, i64 0, !dbg !9013
  store i8 0, i8* %arrayidx205, align 1, !dbg !9014
  %107 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9015
  %change206 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %107, i32 0, i32 14, !dbg !9016
  %url207 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change206, i32 0, i32 0, !dbg !9017
  %108 = load i8*, i8** %url207, align 8, !dbg !9017
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %protobuf, i32 0, i32 0, !dbg !9018
  %arraydecay208 = getelementptr inbounds [4 x i8], [4 x i8]* %slashbuf, i32 0, i32 0, !dbg !9019
  %109 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9020
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %109, i32 0, i32 12, !dbg !9021
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !9022
  %110 = load i8*, i8** %name, align 8, !dbg !9022
  %111 = load i8*, i8** %path, align 8, !dbg !9023
  %call209 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %108, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0), i8* %arraydecay, i8* %arraydecay208, i8* %110, i8* %111) #8, !dbg !9024
  store i32 %call209, i32* %rc, align 4, !dbg !9025
  %112 = load i32, i32* %rc, align 4, !dbg !9026
  %cmp210 = icmp eq i32 2, %112, !dbg !9028
  br i1 %cmp210, label %if.then212, label %if.end213, !dbg !9029

if.then212:                                       ; preds = %if.else204
  %113 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9030
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %113, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0)), !dbg !9032
  store i32 3, i32* %retval, align 4, !dbg !9033
  br label %return, !dbg !9033

if.end213:                                        ; preds = %if.else204
  %114 = load i32, i32* %rc, align 4, !dbg !9034
  %cmp214 = icmp sgt i32 3, %114, !dbg !9036
  br i1 %cmp214, label %if.then216, label %if.else274, !dbg !9037

if.then216:                                       ; preds = %if.end213
  %115 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9038
  %change217 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %115, i32 0, i32 14, !dbg !9040
  %url218 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change217, i32 0, i32 0, !dbg !9041
  %116 = load i8*, i8** %url218, align 8, !dbg !9041
  %117 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9042
  %host219 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %117, i32 0, i32 12, !dbg !9043
  %name220 = getelementptr inbounds %struct.hostname, %struct.hostname* %host219, i32 0, i32 2, !dbg !9044
  %118 = load i8*, i8** %name220, align 8, !dbg !9044
  %119 = load i8*, i8** %path, align 8, !dbg !9045
  %call221 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0), i8* %118, i8* %119) #8, !dbg !9046
  store i32 %call221, i32* %rc, align 4, !dbg !9047
  %120 = load i32, i32* %rc, align 4, !dbg !9048
  %cmp222 = icmp sgt i32 1, %120, !dbg !9050
  br i1 %cmp222, label %if.then224, label %if.end225, !dbg !9051

if.then224:                                       ; preds = %if.then216
  %121 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9052
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %121, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0)), !dbg !9055
  store i32 3, i32* %retval, align 4, !dbg !9056
  br label %return, !dbg !9056

if.end225:                                        ; preds = %if.then216
  %122 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9057
  %set226 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %122, i32 0, i32 13, !dbg !9058
  %str227 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set226, i32 0, i32 128, !dbg !9059
  %arrayidx228 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str227, i64 0, i64 7, !dbg !9057
  %123 = load i8*, i8** %arrayidx228, align 8, !dbg !9057
  store i8* %123, i8** %protop, align 8, !dbg !9060
  %124 = load i8*, i8** %protop, align 8, !dbg !9061
  %tobool229 = icmp ne i8* %124, null, !dbg !9061
  br i1 %tobool229, label %if.end273, label %if.then230, !dbg !9063

if.then230:                                       ; preds = %if.end225
  %125 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9064
  %host231 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %125, i32 0, i32 12, !dbg !9064
  %name232 = getelementptr inbounds %struct.hostname, %struct.hostname* %host231, i32 0, i32 2, !dbg !9064
  %126 = load i8*, i8** %name232, align 8, !dbg !9064
  %call233 = call i32 @curl_strnequal(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i8* %126, i64 4), !dbg !9064
  %tobool234 = icmp ne i32 %call233, 0, !dbg !9064
  br i1 %tobool234, label %if.then235, label %if.else236, !dbg !9067

if.then235:                                       ; preds = %if.then230
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i8** %protop, align 8, !dbg !9068
  br label %if.end272, !dbg !9069

if.else236:                                       ; preds = %if.then230
  %127 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9070
  %host237 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %127, i32 0, i32 12, !dbg !9070
  %name238 = getelementptr inbounds %struct.hostname, %struct.hostname* %host237, i32 0, i32 2, !dbg !9070
  %128 = load i8*, i8** %name238, align 8, !dbg !9070
  %call239 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i8* %128, i64 5), !dbg !9070
  %tobool240 = icmp ne i32 %call239, 0, !dbg !9070
  br i1 %tobool240, label %if.then241, label %if.else242, !dbg !9072

if.then241:                                       ; preds = %if.else236
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8** %protop, align 8, !dbg !9073
  br label %if.end271, !dbg !9074

if.else242:                                       ; preds = %if.else236
  %129 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9075
  %host243 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %129, i32 0, i32 12, !dbg !9075
  %name244 = getelementptr inbounds %struct.hostname, %struct.hostname* %host243, i32 0, i32 2, !dbg !9075
  %130 = load i8*, i8** %name244, align 8, !dbg !9075
  %call245 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i8* %130, i64 5), !dbg !9075
  %tobool246 = icmp ne i32 %call245, 0, !dbg !9075
  br i1 %tobool246, label %if.then247, label %if.else248, !dbg !9077

if.then247:                                       ; preds = %if.else242
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i8** %protop, align 8, !dbg !9078
  br label %if.end270, !dbg !9079

if.else248:                                       ; preds = %if.else242
  %131 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9080
  %host249 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %131, i32 0, i32 12, !dbg !9080
  %name250 = getelementptr inbounds %struct.hostname, %struct.hostname* %host249, i32 0, i32 2, !dbg !9080
  %132 = load i8*, i8** %name250, align 8, !dbg !9080
  %call251 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i8* %132, i64 5), !dbg !9080
  %tobool252 = icmp ne i32 %call251, 0, !dbg !9080
  br i1 %tobool252, label %if.then253, label %if.else254, !dbg !9082

if.then253:                                       ; preds = %if.else248
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i8** %protop, align 8, !dbg !9083
  br label %if.end269, !dbg !9084

if.else254:                                       ; preds = %if.else248
  %133 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9085
  %host255 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %133, i32 0, i32 12, !dbg !9085
  %name256 = getelementptr inbounds %struct.hostname, %struct.hostname* %host255, i32 0, i32 2, !dbg !9085
  %134 = load i8*, i8** %name256, align 8, !dbg !9085
  %call257 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i8* %134, i64 5), !dbg !9085
  %tobool258 = icmp ne i32 %call257, 0, !dbg !9085
  br i1 %tobool258, label %if.then259, label %if.else260, !dbg !9087

if.then259:                                       ; preds = %if.else254
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8** %protop, align 8, !dbg !9088
  br label %if.end268, !dbg !9089

if.else260:                                       ; preds = %if.else254
  %135 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9090
  %host261 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %135, i32 0, i32 12, !dbg !9090
  %name262 = getelementptr inbounds %struct.hostname, %struct.hostname* %host261, i32 0, i32 2, !dbg !9090
  %136 = load i8*, i8** %name262, align 8, !dbg !9090
  %call263 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i8* %136, i64 5), !dbg !9090
  %tobool264 = icmp ne i32 %call263, 0, !dbg !9090
  br i1 %tobool264, label %if.then265, label %if.else266, !dbg !9092

if.then265:                                       ; preds = %if.else260
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8** %protop, align 8, !dbg !9093
  br label %if.end267, !dbg !9094

if.else266:                                       ; preds = %if.else260
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8** %protop, align 8, !dbg !9095
  br label %if.end267

if.end267:                                        ; preds = %if.else266, %if.then265
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then259
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then253
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then247
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then241
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then235
  br label %if.end273, !dbg !9096

if.end273:                                        ; preds = %if.end272, %if.end225
  %137 = load i8*, i8** %prot_missing.addr, align 8, !dbg !9097
  store i8 1, i8* %137, align 1, !dbg !9098
  br label %if.end303, !dbg !9099

if.else274:                                       ; preds = %if.end213
  call void @llvm.dbg.declare(metadata i64* %s, metadata !9100, metadata !2256), !dbg !9102
  %arraydecay275 = getelementptr inbounds [4 x i8], [4 x i8]* %slashbuf, i32 0, i32 0, !dbg !9103
  %call276 = call i64 @strlen(i8* %arraydecay275) #7, !dbg !9104
  store i64 %call276, i64* %s, align 8, !dbg !9102
  %arraydecay277 = getelementptr inbounds [16 x i8], [16 x i8]* %protobuf, i32 0, i32 0, !dbg !9105
  store i8* %arraydecay277, i8** %protop, align 8, !dbg !9106
  %138 = load i64, i64* %s, align 8, !dbg !9107
  %cmp278 = icmp ne i64 %138, 2, !dbg !9109
  br i1 %cmp278, label %if.then280, label %if.end302, !dbg !9110

if.then280:                                       ; preds = %if.else274
  %139 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9111
  %140 = load i64, i64* %s, align 8, !dbg !9113
  %141 = load i64, i64* %s, align 8, !dbg !9114
  %cmp281 = icmp ugt i64 %141, 1, !dbg !9115
  %cond = select i1 %cmp281, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !9114
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %139, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.50, i32 0, i32 0), i64 %140, i8* %cond), !dbg !9116
  %142 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9117
  %change283 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %142, i32 0, i32 14, !dbg !9119
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change283, i32 0, i32 1, !dbg !9120
  %143 = load i8, i8* %url_alloc, align 8, !dbg !9120
  %tobool284 = trunc i8 %143 to i1, !dbg !9120
  br i1 %tobool284, label %if.then285, label %if.end288, !dbg !9121

if.then285:                                       ; preds = %if.then280
  %144 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9122
  %145 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9122
  %change286 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %145, i32 0, i32 14, !dbg !9122
  %url287 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change286, i32 0, i32 0, !dbg !9122
  %146 = load i8*, i8** %url287, align 8, !dbg !9122
  call void %144(i8* %146), !dbg !9122
  br label %if.end288, !dbg !9122

if.end288:                                        ; preds = %if.then285, %if.then280
  %arraydecay289 = getelementptr inbounds [16 x i8], [16 x i8]* %protobuf, i32 0, i32 0, !dbg !9123
  %147 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9124
  %host290 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %147, i32 0, i32 12, !dbg !9125
  %name291 = getelementptr inbounds %struct.hostname, %struct.hostname* %host290, i32 0, i32 2, !dbg !9126
  %148 = load i8*, i8** %name291, align 8, !dbg !9126
  %149 = load i8*, i8** %path, align 8, !dbg !9127
  %call292 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* %arraydecay289, i8* %148, i8* %149), !dbg !9128
  %150 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9129
  %change293 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %150, i32 0, i32 14, !dbg !9130
  %url294 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change293, i32 0, i32 0, !dbg !9131
  store i8* %call292, i8** %url294, align 8, !dbg !9132
  %151 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9133
  %change295 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %151, i32 0, i32 14, !dbg !9135
  %url296 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change295, i32 0, i32 0, !dbg !9136
  %152 = load i8*, i8** %url296, align 8, !dbg !9136
  %tobool297 = icmp ne i8* %152, null, !dbg !9133
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !9137

if.then298:                                       ; preds = %if.end288
  store i32 27, i32* %retval, align 4, !dbg !9138
  br label %return, !dbg !9138

if.end299:                                        ; preds = %if.end288
  %153 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9139
  %change300 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %153, i32 0, i32 14, !dbg !9140
  %url_alloc301 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change300, i32 0, i32 1, !dbg !9141
  store i8 1, i8* %url_alloc301, align 8, !dbg !9142
  br label %if.end302, !dbg !9143

if.end302:                                        ; preds = %if.end299, %if.else274
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.end273
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.end203
  %154 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9144
  %host305 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %154, i32 0, i32 12, !dbg !9145
  %name306 = getelementptr inbounds %struct.hostname, %struct.hostname* %host305, i32 0, i32 2, !dbg !9146
  %155 = load i8*, i8** %name306, align 8, !dbg !9146
  %call307 = call i8* @strchr(i8* %155, i32 64) #7, !dbg !9147
  store i8* %call307, i8** %at, align 8, !dbg !9148
  %156 = load i8*, i8** %at, align 8, !dbg !9149
  %tobool308 = icmp ne i8* %156, null, !dbg !9149
  br i1 %tobool308, label %if.then309, label %if.else312, !dbg !9151

if.then309:                                       ; preds = %if.end304
  %157 = load i8*, i8** %at, align 8, !dbg !9152
  %add.ptr310 = getelementptr inbounds i8, i8* %157, i64 1, !dbg !9153
  %call311 = call i8* @strchr(i8* %add.ptr310, i32 63) #7, !dbg !9154
  store i8* %call311, i8** %query, align 8, !dbg !9155
  br label %if.end316, !dbg !9156

if.else312:                                       ; preds = %if.end304
  %158 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9157
  %host313 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %158, i32 0, i32 12, !dbg !9158
  %name314 = getelementptr inbounds %struct.hostname, %struct.hostname* %host313, i32 0, i32 2, !dbg !9159
  %159 = load i8*, i8** %name314, align 8, !dbg !9159
  %call315 = call i8* @strchr(i8* %159, i32 63) #7, !dbg !9160
  store i8* %call315, i8** %query, align 8, !dbg !9161
  br label %if.end316

if.end316:                                        ; preds = %if.else312, %if.then309
  %160 = load i8*, i8** %query, align 8, !dbg !9162
  %tobool317 = icmp ne i8* %160, null, !dbg !9162
  br i1 %tobool317, label %if.then318, label %if.else326, !dbg !9164

if.then318:                                       ; preds = %if.end316
  call void @llvm.dbg.declare(metadata i64* %hostlen, metadata !9165, metadata !2256), !dbg !9167
  %161 = load i8*, i8** %query, align 8, !dbg !9168
  %call319 = call i64 @strlen(i8* %161) #7, !dbg !9169
  store i64 %call319, i64* %hostlen, align 8, !dbg !9167
  call void @llvm.dbg.declare(metadata i64* %pathlen, metadata !9170, metadata !2256), !dbg !9171
  %162 = load i8*, i8** %path, align 8, !dbg !9172
  %call320 = call i64 @strlen(i8* %162) #7, !dbg !9173
  store i64 %call320, i64* %pathlen, align 8, !dbg !9171
  %163 = load i8*, i8** %path, align 8, !dbg !9174
  %164 = load i64, i64* %hostlen, align 8, !dbg !9175
  %add.ptr321 = getelementptr inbounds i8, i8* %163, i64 %164, !dbg !9176
  %add.ptr322 = getelementptr inbounds i8, i8* %add.ptr321, i64 1, !dbg !9177
  %165 = load i8*, i8** %path, align 8, !dbg !9178
  %166 = load i64, i64* %pathlen, align 8, !dbg !9179
  %add323 = add i64 %166, 1, !dbg !9180
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr322, i8* %165, i64 %add323, i32 1, i1 false), !dbg !9181
  %167 = load i8*, i8** %path, align 8, !dbg !9182
  %add.ptr324 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !9183
  %168 = load i8*, i8** %query, align 8, !dbg !9184
  %169 = load i64, i64* %hostlen, align 8, !dbg !9185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr324, i8* %168, i64 %169, i32 1, i1 false), !dbg !9186
  %170 = load i8*, i8** %path, align 8, !dbg !9187
  %arrayidx325 = getelementptr inbounds i8, i8* %170, i64 0, !dbg !9187
  store i8 47, i8* %arrayidx325, align 1, !dbg !9188
  store i8 1, i8* %rebuild_url, align 1, !dbg !9189
  %171 = load i8*, i8** %query, align 8, !dbg !9190
  store i8 0, i8* %171, align 1, !dbg !9191
  br label %if.end332, !dbg !9192

if.else326:                                       ; preds = %if.end316
  %172 = load i8*, i8** %path, align 8, !dbg !9193
  %arrayidx327 = getelementptr inbounds i8, i8* %172, i64 0, !dbg !9193
  %173 = load i8, i8* %arrayidx327, align 1, !dbg !9193
  %tobool328 = icmp ne i8 %173, 0, !dbg !9193
  br i1 %tobool328, label %if.end331, label %if.then329, !dbg !9195

if.then329:                                       ; preds = %if.else326
  %174 = load i8*, i8** %path, align 8, !dbg !9196
  %call330 = call i8* @strcpy(i8* %174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0)) #8, !dbg !9198
  store i8 1, i8* %rebuild_url, align 1, !dbg !9199
  br label %if.end331, !dbg !9200

if.end331:                                        ; preds = %if.then329, %if.else326
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then318
  %175 = load i8*, i8** %path, align 8, !dbg !9201
  %arrayidx333 = getelementptr inbounds i8, i8* %175, i64 0, !dbg !9201
  %176 = load i8, i8* %arrayidx333, align 1, !dbg !9201
  %conv334 = sext i8 %176 to i32, !dbg !9201
  %cmp335 = icmp ne i32 %conv334, 47, !dbg !9203
  br i1 %cmp335, label %if.then337, label %if.else342, !dbg !9204

if.then337:                                       ; preds = %if.end332
  %177 = load i8*, i8** %path, align 8, !dbg !9205
  %arrayidx338 = getelementptr inbounds i8, i8* %177, i64 1, !dbg !9205
  %178 = load i8*, i8** %path, align 8, !dbg !9207
  %179 = load i8*, i8** %path, align 8, !dbg !9208
  %call339 = call i64 @strlen(i8* %179) #7, !dbg !9209
  %add340 = add i64 %call339, 1, !dbg !9210
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %arrayidx338, i8* %178, i64 %add340, i32 1, i1 false), !dbg !9211
  %180 = load i8*, i8** %path, align 8, !dbg !9213
  %arrayidx341 = getelementptr inbounds i8, i8* %180, i64 0, !dbg !9213
  store i8 47, i8* %arrayidx341, align 1, !dbg !9214
  store i8 1, i8* %rebuild_url, align 1, !dbg !9215
  br label %if.end361, !dbg !9216

if.else342:                                       ; preds = %if.end332
  %181 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9217
  %set343 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %181, i32 0, i32 13, !dbg !9219
  %path_as_is = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set343, i32 0, i32 149, !dbg !9220
  %182 = load i8, i8* %path_as_is, align 2, !dbg !9220
  %tobool344 = trunc i8 %182 to i1, !dbg !9220
  br i1 %tobool344, label %if.end360, label %if.then345, !dbg !9221

if.then345:                                       ; preds = %if.else342
  call void @llvm.dbg.declare(metadata i8** %newp, metadata !9222, metadata !2256), !dbg !9224
  %183 = load i8*, i8** %path, align 8, !dbg !9225
  %call346 = call i8* @Curl_dedotdotify(i8* %183), !dbg !9226
  store i8* %call346, i8** %newp, align 8, !dbg !9224
  %184 = load i8*, i8** %newp, align 8, !dbg !9227
  %tobool347 = icmp ne i8* %184, null, !dbg !9227
  br i1 %tobool347, label %if.end349, label %if.then348, !dbg !9229

if.then348:                                       ; preds = %if.then345
  store i32 27, i32* %retval, align 4, !dbg !9230
  br label %return, !dbg !9230

if.end349:                                        ; preds = %if.then345
  %185 = load i8*, i8** %newp, align 8, !dbg !9231
  %186 = load i8*, i8** %path, align 8, !dbg !9233
  %call350 = call i32 @strcmp(i8* %185, i8* %186) #7, !dbg !9234
  %tobool351 = icmp ne i32 %call350, 0, !dbg !9234
  br i1 %tobool351, label %if.then352, label %if.else358, !dbg !9235

if.then352:                                       ; preds = %if.end349
  store i8 1, i8* %rebuild_url, align 1, !dbg !9236
  %187 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9238
  %188 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9238
  %state353 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %188, i32 0, i32 17, !dbg !9238
  %pathbuffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state353, i32 0, i32 37, !dbg !9238
  %189 = load i8*, i8** %pathbuffer, align 8, !dbg !9238
  call void %187(i8* %189), !dbg !9238
  %190 = load i8*, i8** %newp, align 8, !dbg !9239
  %191 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9240
  %state354 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %191, i32 0, i32 17, !dbg !9241
  %pathbuffer355 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state354, i32 0, i32 37, !dbg !9242
  store i8* %190, i8** %pathbuffer355, align 8, !dbg !9243
  %192 = load i8*, i8** %newp, align 8, !dbg !9244
  %193 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9245
  %state356 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %193, i32 0, i32 17, !dbg !9246
  %path357 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state356, i32 0, i32 38, !dbg !9247
  store i8* %192, i8** %path357, align 8, !dbg !9248
  %194 = load i8*, i8** %newp, align 8, !dbg !9249
  store i8* %194, i8** %path, align 8, !dbg !9250
  br label %if.end359, !dbg !9251

if.else358:                                       ; preds = %if.end349
  %195 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9252
  %196 = load i8*, i8** %newp, align 8, !dbg !9252
  call void %195(i8* %196), !dbg !9252
  br label %if.end359

if.end359:                                        ; preds = %if.else358, %if.then352
  br label %if.end360, !dbg !9253

if.end360:                                        ; preds = %if.end359, %if.else342
  br label %if.end361

if.end361:                                        ; preds = %if.end360, %if.then337
  %197 = load i8, i8* %rebuild_url, align 1, !dbg !9254
  %tobool362 = trunc i8 %197 to i1, !dbg !9254
  br i1 %tobool362, label %if.then363, label %if.end401, !dbg !9256

if.then363:                                       ; preds = %if.end361
  call void @llvm.dbg.declare(metadata i8** %reurl, metadata !9257, metadata !2256), !dbg !9259
  call void @llvm.dbg.declare(metadata i64* %plen, metadata !9260, metadata !2256), !dbg !9261
  %198 = load i8*, i8** %path, align 8, !dbg !9262
  %call364 = call i64 @strlen(i8* %198) #7, !dbg !9263
  store i64 %call364, i64* %plen, align 8, !dbg !9261
  call void @llvm.dbg.declare(metadata i64* %urllen, metadata !9264, metadata !2256), !dbg !9265
  %199 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9266
  %change365 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %199, i32 0, i32 14, !dbg !9267
  %url366 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change365, i32 0, i32 0, !dbg !9268
  %200 = load i8*, i8** %url366, align 8, !dbg !9268
  %call367 = call i64 @strlen(i8* %200) #7, !dbg !9269
  store i64 %call367, i64* %urllen, align 8, !dbg !9265
  call void @llvm.dbg.declare(metadata i64* %prefixlen, metadata !9270, metadata !2256), !dbg !9271
  %201 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9272
  %host368 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %201, i32 0, i32 12, !dbg !9273
  %name369 = getelementptr inbounds %struct.hostname, %struct.hostname* %host368, i32 0, i32 2, !dbg !9274
  %202 = load i8*, i8** %name369, align 8, !dbg !9274
  %call370 = call i64 @strlen(i8* %202) #7, !dbg !9275
  store i64 %call370, i64* %prefixlen, align 8, !dbg !9271
  %203 = load i8*, i8** %prot_missing.addr, align 8, !dbg !9276
  %204 = load i8, i8* %203, align 1, !dbg !9278
  %tobool371 = trunc i8 %204 to i1, !dbg !9278
  br i1 %tobool371, label %if.end376, label %if.then372, !dbg !9279

if.then372:                                       ; preds = %if.then363
  %205 = load i8*, i8** %protop, align 8, !dbg !9280
  %call373 = call i64 @strlen(i8* %205) #7, !dbg !9281
  %add374 = add i64 %call373, 3, !dbg !9282
  %206 = load i64, i64* %prefixlen, align 8, !dbg !9283
  %add375 = add i64 %206, %add374, !dbg !9283
  store i64 %add375, i64* %prefixlen, align 8, !dbg !9283
  br label %if.end376, !dbg !9284

if.end376:                                        ; preds = %if.then372, %if.then363
  %207 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !9285
  %208 = load i64, i64* %urllen, align 8, !dbg !9285
  %add377 = add i64 %208, 2, !dbg !9285
  %call378 = call i8* %207(i64 %add377), !dbg !9285
  store i8* %call378, i8** %reurl, align 8, !dbg !9286
  %209 = load i8*, i8** %reurl, align 8, !dbg !9287
  %tobool379 = icmp ne i8* %209, null, !dbg !9287
  br i1 %tobool379, label %if.end381, label %if.then380, !dbg !9289

if.then380:                                       ; preds = %if.end376
  store i32 27, i32* %retval, align 4, !dbg !9290
  br label %return, !dbg !9290

if.end381:                                        ; preds = %if.end376
  %210 = load i8*, i8** %reurl, align 8, !dbg !9291
  %211 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9292
  %change382 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %211, i32 0, i32 14, !dbg !9293
  %url383 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change382, i32 0, i32 0, !dbg !9294
  %212 = load i8*, i8** %url383, align 8, !dbg !9294
  %213 = load i64, i64* %prefixlen, align 8, !dbg !9295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %212, i64 %213, i32 1, i1 false), !dbg !9296
  %214 = load i64, i64* %prefixlen, align 8, !dbg !9297
  %215 = load i8*, i8** %reurl, align 8, !dbg !9298
  %arrayidx384 = getelementptr inbounds i8, i8* %215, i64 %214, !dbg !9298
  %216 = load i8*, i8** %path, align 8, !dbg !9299
  %217 = load i64, i64* %plen, align 8, !dbg !9300
  %add385 = add i64 %217, 1, !dbg !9301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx384, i8* %216, i64 %add385, i32 1, i1 false), !dbg !9302
  %218 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9303
  %change386 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %218, i32 0, i32 14, !dbg !9305
  %url_alloc387 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change386, i32 0, i32 1, !dbg !9306
  %219 = load i8, i8* %url_alloc387, align 8, !dbg !9306
  %tobool388 = trunc i8 %219 to i1, !dbg !9306
  br i1 %tobool388, label %if.then389, label %if.end396, !dbg !9307

if.then389:                                       ; preds = %if.end381
  br label %do.body, !dbg !9308

do.body:                                          ; preds = %if.then389
  %220 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9310
  %221 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9310
  %change390 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %221, i32 0, i32 14, !dbg !9310
  %url391 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change390, i32 0, i32 0, !dbg !9310
  %222 = load i8*, i8** %url391, align 8, !dbg !9310
  call void %220(i8* %222), !dbg !9310
  %223 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9310
  %change392 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %223, i32 0, i32 14, !dbg !9310
  %url393 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change392, i32 0, i32 0, !dbg !9310
  store i8* null, i8** %url393, align 8, !dbg !9310
  br label %do.end, !dbg !9310

do.end:                                           ; preds = %do.body
  %224 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9313
  %change394 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %224, i32 0, i32 14, !dbg !9314
  %url_alloc395 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change394, i32 0, i32 1, !dbg !9315
  store i8 0, i8* %url_alloc395, align 8, !dbg !9316
  br label %if.end396, !dbg !9317

if.end396:                                        ; preds = %do.end, %if.end381
  %225 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9318
  %226 = load i8*, i8** %reurl, align 8, !dbg !9319
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %225, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), i8* %226), !dbg !9320
  %227 = load i8*, i8** %reurl, align 8, !dbg !9321
  %228 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9322
  %change397 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %228, i32 0, i32 14, !dbg !9323
  %url398 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change397, i32 0, i32 0, !dbg !9324
  store i8* %227, i8** %url398, align 8, !dbg !9325
  %229 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9326
  %change399 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %229, i32 0, i32 14, !dbg !9327
  %url_alloc400 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change399, i32 0, i32 1, !dbg !9328
  store i8 1, i8* %url_alloc400, align 8, !dbg !9329
  br label %if.end401, !dbg !9330

if.end401:                                        ; preds = %if.end396, %if.end361
  %230 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9331
  %231 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9332
  %232 = load i8*, i8** %protop, align 8, !dbg !9333
  %call402 = call i32 @findprotocol(%struct.Curl_easy* %230, %struct.connectdata* %231, i8* %232), !dbg !9334
  store i32 %call402, i32* %result, align 4, !dbg !9335
  %233 = load i32, i32* %result, align 4, !dbg !9336
  %tobool403 = icmp ne i32 %233, 0, !dbg !9336
  br i1 %tobool403, label %if.then404, label %if.end405, !dbg !9338

if.then404:                                       ; preds = %if.end401
  %234 = load i32, i32* %result, align 4, !dbg !9339
  store i32 %234, i32* %retval, align 4, !dbg !9340
  br label %return, !dbg !9340

if.end405:                                        ; preds = %if.end401
  %235 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9341
  %236 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9342
  %237 = load i8**, i8*** %userp.addr, align 8, !dbg !9343
  %238 = load i8**, i8*** %passwdp.addr, align 8, !dbg !9344
  %239 = load i8**, i8*** %optionsp.addr, align 8, !dbg !9345
  %call406 = call i32 @parse_url_login(%struct.Curl_easy* %235, %struct.connectdata* %236, i8** %237, i8** %238, i8** %239), !dbg !9346
  store i32 %call406, i32* %result, align 4, !dbg !9347
  %240 = load i32, i32* %result, align 4, !dbg !9348
  %tobool407 = icmp ne i32 %240, 0, !dbg !9348
  br i1 %tobool407, label %if.then408, label %if.end409, !dbg !9350

if.then408:                                       ; preds = %if.end405
  %241 = load i32, i32* %result, align 4, !dbg !9351
  store i32 %241, i32* %retval, align 4, !dbg !9352
  br label %return, !dbg !9352

if.end409:                                        ; preds = %if.end405
  %242 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9353
  %host410 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %242, i32 0, i32 12, !dbg !9355
  %name411 = getelementptr inbounds %struct.hostname, %struct.hostname* %host410, i32 0, i32 2, !dbg !9356
  %243 = load i8*, i8** %name411, align 8, !dbg !9356
  %arrayidx412 = getelementptr inbounds i8, i8* %243, i64 0, !dbg !9353
  %244 = load i8, i8* %arrayidx412, align 1, !dbg !9353
  %conv413 = sext i8 %244 to i32, !dbg !9353
  %cmp414 = icmp eq i32 %conv413, 91, !dbg !9357
  br i1 %cmp414, label %if.then416, label %if.end439, !dbg !9358

if.then416:                                       ; preds = %if.end409
  call void @llvm.dbg.declare(metadata i8** %percent, metadata !9359, metadata !2256), !dbg !9361
  %245 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9362
  %host417 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %245, i32 0, i32 12, !dbg !9363
  %name418 = getelementptr inbounds %struct.hostname, %struct.hostname* %host417, i32 0, i32 2, !dbg !9364
  %246 = load i8*, i8** %name418, align 8, !dbg !9364
  %call419 = call i8* @strchr(i8* %246, i32 37) #7, !dbg !9365
  store i8* %call419, i8** %percent, align 8, !dbg !9361
  %247 = load i8*, i8** %percent, align 8, !dbg !9366
  %tobool420 = icmp ne i8* %247, null, !dbg !9366
  br i1 %tobool420, label %if.then421, label %if.end438, !dbg !9368

if.then421:                                       ; preds = %if.then416
  call void @llvm.dbg.declare(metadata i32* %identifier_offset, metadata !9369, metadata !2256), !dbg !9371
  store i32 3, i32* %identifier_offset, align 4, !dbg !9371
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !9372, metadata !2256), !dbg !9373
  call void @llvm.dbg.declare(metadata i64* %scope, metadata !9374, metadata !2256), !dbg !9375
  %248 = load i8*, i8** %percent, align 8, !dbg !9376
  %call422 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i8* %248, i64 3) #7, !dbg !9378
  %cmp423 = icmp ne i32 %call422, 0, !dbg !9379
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !9380

if.then425:                                       ; preds = %if.then421
  %249 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9381
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %249, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.56, i32 0, i32 0)), !dbg !9383
  store i32 1, i32* %identifier_offset, align 4, !dbg !9384
  br label %if.end426, !dbg !9385

if.end426:                                        ; preds = %if.then425, %if.then421
  %250 = load i8*, i8** %percent, align 8, !dbg !9386
  %251 = load i32, i32* %identifier_offset, align 4, !dbg !9387
  %idx.ext = zext i32 %251 to i64, !dbg !9388
  %add.ptr427 = getelementptr inbounds i8, i8* %250, i64 %idx.ext, !dbg !9388
  %call428 = call i64 @strtoul(i8* %add.ptr427, i8** %endp, i32 10) #8, !dbg !9389
  store i64 %call428, i64* %scope, align 8, !dbg !9390
  %252 = load i8*, i8** %endp, align 8, !dbg !9391
  %253 = load i8, i8* %252, align 1, !dbg !9393
  %conv429 = sext i8 %253 to i32, !dbg !9393
  %cmp430 = icmp eq i32 %conv429, 93, !dbg !9394
  br i1 %cmp430, label %if.then432, label %if.else436, !dbg !9395

if.then432:                                       ; preds = %if.end426
  %254 = load i8*, i8** %percent, align 8, !dbg !9396
  %255 = load i8*, i8** %endp, align 8, !dbg !9398
  %256 = load i8*, i8** %endp, align 8, !dbg !9399
  %call433 = call i64 @strlen(i8* %256) #7, !dbg !9400
  %add434 = add i64 %call433, 1, !dbg !9401
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %254, i8* %255, i64 %add434, i32 1, i1 false), !dbg !9402
  %257 = load i64, i64* %scope, align 8, !dbg !9404
  %conv435 = trunc i64 %257 to i32, !dbg !9405
  %258 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9406
  %scope_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %258, i32 0, i32 10, !dbg !9407
  store i32 %conv435, i32* %scope_id, align 8, !dbg !9408
  br label %if.end437, !dbg !9409

if.else436:                                       ; preds = %if.end426
  %259 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9410
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %259, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.57, i32 0, i32 0)), !dbg !9412
  br label %if.end437

if.end437:                                        ; preds = %if.else436, %if.then432
  br label %if.end438, !dbg !9413

if.end438:                                        ; preds = %if.end437, %if.then416
  br label %if.end439, !dbg !9414

if.end439:                                        ; preds = %if.end438, %if.end409
  %260 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9415
  %set440 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %260, i32 0, i32 13, !dbg !9417
  %scope_id441 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set440, i32 0, i32 129, !dbg !9418
  %261 = load i32, i32* %scope_id441, align 8, !dbg !9418
  %tobool442 = icmp ne i32 %261, 0, !dbg !9415
  br i1 %tobool442, label %if.then443, label %if.end447, !dbg !9419

if.then443:                                       ; preds = %if.end439
  %262 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9420
  %set444 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %262, i32 0, i32 13, !dbg !9421
  %scope_id445 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set444, i32 0, i32 129, !dbg !9422
  %263 = load i32, i32* %scope_id445, align 8, !dbg !9422
  %264 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9423
  %scope_id446 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %264, i32 0, i32 10, !dbg !9424
  store i32 %263, i32* %scope_id446, align 8, !dbg !9425
  br label %if.end447, !dbg !9423

if.end447:                                        ; preds = %if.then443, %if.end439
  %265 = load i8*, i8** %path, align 8, !dbg !9426
  %call448 = call i8* @strchr(i8* %265, i32 35) #7, !dbg !9427
  store i8* %call448, i8** %fragment, align 8, !dbg !9428
  %266 = load i8*, i8** %fragment, align 8, !dbg !9429
  %tobool449 = icmp ne i8* %266, null, !dbg !9429
  br i1 %tobool449, label %if.then450, label %if.end457, !dbg !9431

if.then450:                                       ; preds = %if.end447
  %267 = load i8*, i8** %fragment, align 8, !dbg !9432
  store i8 0, i8* %267, align 1, !dbg !9434
  %268 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9435
  %change451 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %268, i32 0, i32 14, !dbg !9436
  %url452 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change451, i32 0, i32 0, !dbg !9437
  %269 = load i8*, i8** %url452, align 8, !dbg !9437
  %call453 = call i8* @strchr(i8* %269, i32 35) #7, !dbg !9438
  store i8* %call453, i8** %fragment, align 8, !dbg !9439
  %270 = load i8*, i8** %fragment, align 8, !dbg !9440
  %tobool454 = icmp ne i8* %270, null, !dbg !9440
  br i1 %tobool454, label %if.then455, label %if.end456, !dbg !9442

if.then455:                                       ; preds = %if.then450
  %271 = load i8*, i8** %fragment, align 8, !dbg !9443
  store i8 0, i8* %271, align 1, !dbg !9444
  br label %if.end456, !dbg !9445

if.end456:                                        ; preds = %if.then455, %if.then450
  br label %if.end457, !dbg !9446

if.end457:                                        ; preds = %if.end456, %if.end447
  store i32 0, i32* %retval, align 4, !dbg !9447
  br label %return, !dbg !9447

return:                                           ; preds = %if.end457, %if.then408, %if.then404, %if.then380, %if.then348, %if.then298, %if.then224, %if.then212, %if.then202, %if.then163, %if.then108, %if.then5, %if.then
  %272 = load i32, i32* %retval, align 4, !dbg !9448
  ret i32 %272, !dbg !9448
}

; Function Attrs: nounwind
declare i32 @tolower(i32) #5

; Function Attrs: nounwind uwtable
define internal i32 @create_conn_helper_init_proxy(%struct.connectdata* %conn) #0 !dbg !2171 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxy = alloca i8*, align 8
  %socksproxy = alloca i8*, align 8
  %no_proxy = alloca i8*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !9449, metadata !2256), !dbg !9450
  call void @llvm.dbg.declare(metadata i8** %proxy, metadata !9451, metadata !2256), !dbg !9452
  store i8* null, i8** %proxy, align 8, !dbg !9452
  call void @llvm.dbg.declare(metadata i8** %socksproxy, metadata !9453, metadata !2256), !dbg !9454
  store i8* null, i8** %socksproxy, align 8, !dbg !9454
  call void @llvm.dbg.declare(metadata i8** %no_proxy, metadata !9455, metadata !2256), !dbg !9456
  store i8* null, i8** %no_proxy, align 8, !dbg !9456
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9457, metadata !2256), !dbg !9458
  store i32 0, i32* %result, align 4, !dbg !9458
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !9459, metadata !2256), !dbg !9460
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9461
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !9462
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !9462
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !9460
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9463
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 43, !dbg !9465
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 8, !dbg !9466
  %3 = load i8, i8* %proxy_user_passwd, align 1, !dbg !9466
  %tobool = trunc i8 %3 to i1, !dbg !9466
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9467

if.then:                                          ; preds = %entry
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9468
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9470
  %call = call i32 @parse_proxy_auth(%struct.Curl_easy* %4, %struct.connectdata* %5), !dbg !9471
  store i32 %call, i32* %result, align 4, !dbg !9472
  %6 = load i32, i32* %result, align 4, !dbg !9473
  %tobool2 = icmp ne i32 %6, 0, !dbg !9473
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9475

if.then3:                                         ; preds = %if.then
  br label %out, !dbg !9476

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !9477

if.end4:                                          ; preds = %if.end, %entry
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9478
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !9480
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !9481
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 21, !dbg !9478
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !9478
  %tobool5 = icmp ne i8* %8, null, !dbg !9478
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !9482

if.then6:                                         ; preds = %if.end4
  %9 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !9483
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9483
  %set7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !9483
  %str8 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set7, i32 0, i32 128, !dbg !9483
  %arrayidx9 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str8, i64 0, i64 21, !dbg !9483
  %11 = load i8*, i8** %arrayidx9, align 8, !dbg !9483
  %call10 = call i8* %9(i8* %11), !dbg !9483
  store i8* %call10, i8** %proxy, align 8, !dbg !9485
  %12 = load i8*, i8** %proxy, align 8, !dbg !9486
  %cmp = icmp eq i8* null, %12, !dbg !9488
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !9489

if.then11:                                        ; preds = %if.then6
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9490
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0)), !dbg !9492
  store i32 27, i32* %result, align 4, !dbg !9493
  br label %out, !dbg !9494

if.end12:                                         ; preds = %if.then6
  br label %if.end13, !dbg !9495

if.end13:                                         ; preds = %if.end12, %if.end4
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9496
  %set14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 13, !dbg !9498
  %str15 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set14, i32 0, i32 128, !dbg !9499
  %arrayidx16 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str15, i64 0, i64 22, !dbg !9496
  %15 = load i8*, i8** %arrayidx16, align 8, !dbg !9496
  %tobool17 = icmp ne i8* %15, null, !dbg !9496
  br i1 %tobool17, label %if.then18, label %if.end26, !dbg !9500

if.then18:                                        ; preds = %if.end13
  %16 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !9501
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9501
  %set19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !9501
  %str20 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set19, i32 0, i32 128, !dbg !9501
  %arrayidx21 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str20, i64 0, i64 22, !dbg !9501
  %18 = load i8*, i8** %arrayidx21, align 8, !dbg !9501
  %call22 = call i8* %16(i8* %18), !dbg !9501
  store i8* %call22, i8** %socksproxy, align 8, !dbg !9503
  %19 = load i8*, i8** %socksproxy, align 8, !dbg !9504
  %cmp23 = icmp eq i8* null, %19, !dbg !9506
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !9507

if.then24:                                        ; preds = %if.then18
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9508
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0)), !dbg !9510
  store i32 27, i32* %result, align 4, !dbg !9511
  br label %out, !dbg !9512

if.end25:                                         ; preds = %if.then18
  br label %if.end26, !dbg !9513

if.end26:                                         ; preds = %if.end25, %if.end13
  %call27 = call i8* @curl_getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0)), !dbg !9514
  store i8* %call27, i8** %no_proxy, align 8, !dbg !9515
  %21 = load i8*, i8** %no_proxy, align 8, !dbg !9516
  %tobool28 = icmp ne i8* %21, null, !dbg !9516
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !9518

if.then29:                                        ; preds = %if.end26
  %call30 = call i8* @curl_getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0)), !dbg !9519
  store i8* %call30, i8** %no_proxy, align 8, !dbg !9520
  br label %if.end31, !dbg !9521

if.end31:                                         ; preds = %if.then29, %if.end26
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9522
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 12, !dbg !9524
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !9525
  %23 = load i8*, i8** %name, align 8, !dbg !9525
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9526
  %set32 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 13, !dbg !9527
  %str33 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set32, i32 0, i32 128, !dbg !9528
  %arrayidx34 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str33, i64 0, i64 46, !dbg !9526
  %25 = load i8*, i8** %arrayidx34, align 8, !dbg !9526
  %call35 = call zeroext i1 @check_noproxy(i8* %23, i8* %25), !dbg !9529
  br i1 %call35, label %if.then43, label %lor.lhs.false, !dbg !9530

lor.lhs.false:                                    ; preds = %if.end31
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9531
  %set36 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 13, !dbg !9532
  %str37 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set36, i32 0, i32 128, !dbg !9533
  %arrayidx38 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str37, i64 0, i64 46, !dbg !9531
  %27 = load i8*, i8** %arrayidx38, align 8, !dbg !9531
  %tobool39 = icmp ne i8* %27, null, !dbg !9531
  br i1 %tobool39, label %if.else, label %land.lhs.true, !dbg !9534

land.lhs.true:                                    ; preds = %lor.lhs.false
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9535
  %host40 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 12, !dbg !9536
  %name41 = getelementptr inbounds %struct.hostname, %struct.hostname* %host40, i32 0, i32 2, !dbg !9537
  %29 = load i8*, i8** %name41, align 8, !dbg !9537
  %30 = load i8*, i8** %no_proxy, align 8, !dbg !9538
  %call42 = call zeroext i1 @check_noproxy(i8* %29, i8* %30), !dbg !9539
  br i1 %call42, label %if.then43, label %if.else, !dbg !9540

if.then43:                                        ; preds = %land.lhs.true, %if.end31
  br label %do.body, !dbg !9542

do.body:                                          ; preds = %if.then43
  %31 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9544
  %32 = load i8*, i8** %proxy, align 8, !dbg !9544
  call void %31(i8* %32), !dbg !9544
  store i8* null, i8** %proxy, align 8, !dbg !9544
  br label %do.end, !dbg !9544

do.end:                                           ; preds = %do.body
  br label %do.body44, !dbg !9547

do.body44:                                        ; preds = %do.end
  %33 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9548
  %34 = load i8*, i8** %socksproxy, align 8, !dbg !9548
  call void %33(i8* %34), !dbg !9548
  store i8* null, i8** %socksproxy, align 8, !dbg !9548
  br label %do.end45, !dbg !9548

do.end45:                                         ; preds = %do.body44
  br label %if.end52, !dbg !9551

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %35 = load i8*, i8** %proxy, align 8, !dbg !9552
  %tobool46 = icmp ne i8* %35, null, !dbg !9552
  br i1 %tobool46, label %if.end51, label %land.lhs.true47, !dbg !9554

land.lhs.true47:                                  ; preds = %if.else
  %36 = load i8*, i8** %socksproxy, align 8, !dbg !9555
  %tobool48 = icmp ne i8* %36, null, !dbg !9555
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !9557

if.then49:                                        ; preds = %land.lhs.true47
  %37 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9558
  %call50 = call i8* @detect_proxy(%struct.connectdata* %37), !dbg !9559
  store i8* %call50, i8** %proxy, align 8, !dbg !9560
  br label %if.end51, !dbg !9561

if.end51:                                         ; preds = %if.then49, %land.lhs.true47, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %do.end45
  br label %do.body53, !dbg !9562

do.body53:                                        ; preds = %if.end52
  %38 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9563
  %39 = load i8*, i8** %no_proxy, align 8, !dbg !9563
  call void %38(i8* %39), !dbg !9563
  store i8* null, i8** %no_proxy, align 8, !dbg !9563
  br label %do.end54, !dbg !9563

do.end54:                                         ; preds = %do.body53
  %40 = load i8*, i8** %proxy, align 8, !dbg !9566
  %tobool55 = icmp ne i8* %40, null, !dbg !9566
  br i1 %tobool55, label %land.lhs.true56, label %if.end61, !dbg !9568

land.lhs.true56:                                  ; preds = %do.end54
  %41 = load i8*, i8** %proxy, align 8, !dbg !9569
  %42 = load i8, i8* %41, align 1, !dbg !9571
  %tobool57 = icmp ne i8 %42, 0, !dbg !9571
  br i1 %tobool57, label %lor.lhs.false58, label %if.then60, !dbg !9572

lor.lhs.false58:                                  ; preds = %land.lhs.true56
  %43 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9573
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %43, i32 0, i32 47, !dbg !9575
  %44 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !9575
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %44, i32 0, i32 16, !dbg !9576
  %45 = load i32, i32* %flags, align 4, !dbg !9576
  %and = and i32 %45, 16, !dbg !9577
  %tobool59 = icmp ne i32 %and, 0, !dbg !9577
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9578

if.then60:                                        ; preds = %lor.lhs.false58, %land.lhs.true56
  %46 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9579
  %47 = load i8*, i8** %proxy, align 8, !dbg !9579
  call void %46(i8* %47), !dbg !9579
  store i8* null, i8** %proxy, align 8, !dbg !9581
  br label %if.end61, !dbg !9582

if.end61:                                         ; preds = %if.then60, %lor.lhs.false58, %do.end54
  %48 = load i8*, i8** %socksproxy, align 8, !dbg !9583
  %tobool62 = icmp ne i8* %48, null, !dbg !9583
  br i1 %tobool62, label %land.lhs.true63, label %if.end71, !dbg !9585

land.lhs.true63:                                  ; preds = %if.end61
  %49 = load i8*, i8** %socksproxy, align 8, !dbg !9586
  %50 = load i8, i8* %49, align 1, !dbg !9588
  %tobool64 = icmp ne i8 %50, 0, !dbg !9588
  br i1 %tobool64, label %lor.lhs.false65, label %if.then70, !dbg !9589

lor.lhs.false65:                                  ; preds = %land.lhs.true63
  %51 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9590
  %handler66 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %51, i32 0, i32 47, !dbg !9591
  %52 = load %struct.Curl_handler*, %struct.Curl_handler** %handler66, align 8, !dbg !9591
  %flags67 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %52, i32 0, i32 16, !dbg !9592
  %53 = load i32, i32* %flags67, align 4, !dbg !9592
  %and68 = and i32 %53, 16, !dbg !9593
  %tobool69 = icmp ne i32 %and68, 0, !dbg !9593
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !9594

if.then70:                                        ; preds = %lor.lhs.false65, %land.lhs.true63
  %54 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9596
  %55 = load i8*, i8** %socksproxy, align 8, !dbg !9596
  call void %54(i8* %55), !dbg !9596
  store i8* null, i8** %socksproxy, align 8, !dbg !9598
  br label %if.end71, !dbg !9599

if.end71:                                         ; preds = %if.then70, %lor.lhs.false65, %if.end61
  %56 = load i8*, i8** %proxy, align 8, !dbg !9600
  %tobool72 = icmp ne i8* %56, null, !dbg !9600
  br i1 %tobool72, label %if.then75, label %lor.lhs.false73, !dbg !9602

lor.lhs.false73:                                  ; preds = %if.end71
  %57 = load i8*, i8** %socksproxy, align 8, !dbg !9603
  %tobool74 = icmp ne i8* %57, null, !dbg !9603
  br i1 %tobool74, label %if.then75, label %if.else153, !dbg !9605

if.then75:                                        ; preds = %lor.lhs.false73, %if.end71
  %58 = load i8*, i8** %proxy, align 8, !dbg !9606
  %tobool76 = icmp ne i8* %58, null, !dbg !9606
  br i1 %tobool76, label %if.then77, label %if.end84, !dbg !9609

if.then77:                                        ; preds = %if.then75
  %59 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9610
  %60 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9612
  %61 = load i8*, i8** %proxy, align 8, !dbg !9613
  %62 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9614
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %62, i32 0, i32 16, !dbg !9615
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 2, !dbg !9616
  %63 = load i32, i32* %proxytype, align 8, !dbg !9616
  %call78 = call i32 @parse_proxy(%struct.Curl_easy* %59, %struct.connectdata* %60, i8* %61, i32 %63), !dbg !9617
  store i32 %call78, i32* %result, align 4, !dbg !9618
  br label %do.body79, !dbg !9619

do.body79:                                        ; preds = %if.then77
  %64 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9620
  %65 = load i8*, i8** %proxy, align 8, !dbg !9620
  call void %64(i8* %65), !dbg !9620
  store i8* null, i8** %proxy, align 8, !dbg !9620
  br label %do.end80, !dbg !9620

do.end80:                                         ; preds = %do.body79
  %66 = load i32, i32* %result, align 4, !dbg !9623
  %tobool81 = icmp ne i32 %66, 0, !dbg !9623
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !9625

if.then82:                                        ; preds = %do.end80
  br label %out, !dbg !9626

if.end83:                                         ; preds = %do.end80
  br label %if.end84, !dbg !9627

if.end84:                                         ; preds = %if.end83, %if.then75
  %67 = load i8*, i8** %socksproxy, align 8, !dbg !9628
  %tobool85 = icmp ne i8* %67, null, !dbg !9628
  br i1 %tobool85, label %if.then86, label %if.end94, !dbg !9630

if.then86:                                        ; preds = %if.end84
  %68 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !9631
  %69 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9633
  %70 = load i8*, i8** %socksproxy, align 8, !dbg !9634
  %71 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9635
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 15, !dbg !9636
  %proxytype87 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 2, !dbg !9637
  %72 = load i32, i32* %proxytype87, align 8, !dbg !9637
  %call88 = call i32 @parse_proxy(%struct.Curl_easy* %68, %struct.connectdata* %69, i8* %70, i32 %72), !dbg !9638
  store i32 %call88, i32* %result, align 4, !dbg !9639
  br label %do.body89, !dbg !9640

do.body89:                                        ; preds = %if.then86
  %73 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9641
  %74 = load i8*, i8** %socksproxy, align 8, !dbg !9641
  call void %73(i8* %74), !dbg !9641
  store i8* null, i8** %socksproxy, align 8, !dbg !9641
  br label %do.end90, !dbg !9641

do.end90:                                         ; preds = %do.body89
  %75 = load i32, i32* %result, align 4, !dbg !9644
  %tobool91 = icmp ne i32 %75, 0, !dbg !9644
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !9646

if.then92:                                        ; preds = %do.end90
  br label %out, !dbg !9647

if.end93:                                         ; preds = %do.end90
  br label %if.end94, !dbg !9648

if.end94:                                         ; preds = %if.end93, %if.end84
  %76 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9649
  %http_proxy95 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %76, i32 0, i32 16, !dbg !9651
  %host96 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy95, i32 0, i32 0, !dbg !9652
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %host96, i32 0, i32 0, !dbg !9653
  %77 = load i8*, i8** %rawalloc, align 8, !dbg !9653
  %tobool97 = icmp ne i8* %77, null, !dbg !9649
  br i1 %tobool97, label %if.then98, label %if.else109, !dbg !9654

if.then98:                                        ; preds = %if.end94
  %78 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9655
  %handler99 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 47, !dbg !9658
  %79 = load %struct.Curl_handler*, %struct.Curl_handler** %handler99, align 8, !dbg !9658
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %79, i32 0, i32 15, !dbg !9659
  %80 = load i32, i32* %protocol, align 8, !dbg !9659
  %and100 = and i32 %80, 3, !dbg !9660
  %tobool101 = icmp ne i32 %and100, 0, !dbg !9660
  br i1 %tobool101, label %if.end107, label %land.lhs.true102, !dbg !9661

land.lhs.true102:                                 ; preds = %if.then98
  %81 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9662
  %bits103 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %81, i32 0, i32 43, !dbg !9663
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits103, i32 0, i32 15, !dbg !9664
  %82 = load i8, i8* %tunnel_proxy, align 1, !dbg !9664
  %tobool104 = trunc i8 %82 to i1, !dbg !9664
  br i1 %tobool104, label %if.end107, label %if.then105, !dbg !9665

if.then105:                                       ; preds = %land.lhs.true102
  %83 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9667
  %handler106 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %83, i32 0, i32 47, !dbg !9668
  store %struct.Curl_handler* @Curl_handler_http, %struct.Curl_handler** %handler106, align 8, !dbg !9669
  br label %if.end107, !dbg !9667

if.end107:                                        ; preds = %if.then105, %land.lhs.true102, %if.then98
  %84 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9670
  %bits108 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %84, i32 0, i32 43, !dbg !9671
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits108, i32 0, i32 5, !dbg !9672
  store i8 1, i8* %httpproxy, align 1, !dbg !9673
  br label %if.end114, !dbg !9674

if.else109:                                       ; preds = %if.end94
  %85 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9675
  %bits110 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %85, i32 0, i32 43, !dbg !9677
  %httpproxy111 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits110, i32 0, i32 5, !dbg !9678
  store i8 0, i8* %httpproxy111, align 1, !dbg !9679
  %86 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9680
  %bits112 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %86, i32 0, i32 43, !dbg !9681
  %tunnel_proxy113 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits112, i32 0, i32 15, !dbg !9682
  store i8 0, i8* %tunnel_proxy113, align 1, !dbg !9683
  br label %if.end114

if.end114:                                        ; preds = %if.else109, %if.end107
  %87 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9684
  %socks_proxy115 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %87, i32 0, i32 15, !dbg !9686
  %host116 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy115, i32 0, i32 0, !dbg !9687
  %rawalloc117 = getelementptr inbounds %struct.hostname, %struct.hostname* %host116, i32 0, i32 0, !dbg !9688
  %88 = load i8*, i8** %rawalloc117, align 8, !dbg !9688
  %tobool118 = icmp ne i8* %88, null, !dbg !9684
  br i1 %tobool118, label %if.then119, label %if.else149, !dbg !9689

if.then119:                                       ; preds = %if.end114
  %89 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9690
  %http_proxy120 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %89, i32 0, i32 16, !dbg !9693
  %host121 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy120, i32 0, i32 0, !dbg !9694
  %rawalloc122 = getelementptr inbounds %struct.hostname, %struct.hostname* %host121, i32 0, i32 0, !dbg !9695
  %90 = load i8*, i8** %rawalloc122, align 8, !dbg !9695
  %tobool123 = icmp ne i8* %90, null, !dbg !9690
  br i1 %tobool123, label %if.end146, label %if.then124, !dbg !9696

if.then124:                                       ; preds = %if.then119
  %91 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9697
  %socks_proxy125 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %91, i32 0, i32 15, !dbg !9700
  %user = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy125, i32 0, i32 3, !dbg !9701
  %92 = load i8*, i8** %user, align 8, !dbg !9701
  %tobool126 = icmp ne i8* %92, null, !dbg !9697
  br i1 %tobool126, label %if.end145, label %if.then127, !dbg !9702

if.then127:                                       ; preds = %if.then124
  %93 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9703
  %http_proxy128 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %93, i32 0, i32 16, !dbg !9705
  %user129 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy128, i32 0, i32 3, !dbg !9706
  %94 = load i8*, i8** %user129, align 8, !dbg !9706
  %95 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9707
  %socks_proxy130 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %95, i32 0, i32 15, !dbg !9708
  %user131 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy130, i32 0, i32 3, !dbg !9709
  store i8* %94, i8** %user131, align 8, !dbg !9710
  %96 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9711
  %http_proxy132 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %96, i32 0, i32 16, !dbg !9712
  %user133 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy132, i32 0, i32 3, !dbg !9713
  store i8* null, i8** %user133, align 8, !dbg !9714
  br label %do.body134, !dbg !9715

do.body134:                                       ; preds = %if.then127
  %97 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9716
  %98 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9716
  %socks_proxy135 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %98, i32 0, i32 15, !dbg !9716
  %passwd = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy135, i32 0, i32 4, !dbg !9716
  %99 = load i8*, i8** %passwd, align 8, !dbg !9716
  call void %97(i8* %99), !dbg !9716
  %100 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9716
  %socks_proxy136 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %100, i32 0, i32 15, !dbg !9716
  %passwd137 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy136, i32 0, i32 4, !dbg !9716
  store i8* null, i8** %passwd137, align 8, !dbg !9716
  br label %do.end138, !dbg !9716

do.end138:                                        ; preds = %do.body134
  %101 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9719
  %http_proxy139 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %101, i32 0, i32 16, !dbg !9720
  %passwd140 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy139, i32 0, i32 4, !dbg !9721
  %102 = load i8*, i8** %passwd140, align 8, !dbg !9721
  %103 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9722
  %socks_proxy141 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %103, i32 0, i32 15, !dbg !9723
  %passwd142 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy141, i32 0, i32 4, !dbg !9724
  store i8* %102, i8** %passwd142, align 8, !dbg !9725
  %104 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9726
  %http_proxy143 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %104, i32 0, i32 16, !dbg !9727
  %passwd144 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy143, i32 0, i32 4, !dbg !9728
  store i8* null, i8** %passwd144, align 8, !dbg !9729
  br label %if.end145, !dbg !9730

if.end145:                                        ; preds = %do.end138, %if.then124
  br label %if.end146, !dbg !9731

if.end146:                                        ; preds = %if.end145, %if.then119
  %105 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9732
  %bits147 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %105, i32 0, i32 43, !dbg !9733
  %socksproxy148 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits147, i32 0, i32 6, !dbg !9734
  store i8 1, i8* %socksproxy148, align 1, !dbg !9735
  br label %if.end152, !dbg !9736

if.else149:                                       ; preds = %if.end114
  %106 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9737
  %bits150 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %106, i32 0, i32 43, !dbg !9738
  %socksproxy151 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits150, i32 0, i32 6, !dbg !9739
  store i8 0, i8* %socksproxy151, align 1, !dbg !9740
  br label %if.end152

if.end152:                                        ; preds = %if.else149, %if.end146
  br label %if.end158, !dbg !9741

if.else153:                                       ; preds = %lor.lhs.false73
  %107 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9742
  %bits154 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %107, i32 0, i32 43, !dbg !9744
  %socksproxy155 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits154, i32 0, i32 6, !dbg !9745
  store i8 0, i8* %socksproxy155, align 1, !dbg !9746
  %108 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9747
  %bits156 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %108, i32 0, i32 43, !dbg !9748
  %httpproxy157 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits156, i32 0, i32 5, !dbg !9749
  store i8 0, i8* %httpproxy157, align 1, !dbg !9750
  br label %if.end158

if.end158:                                        ; preds = %if.else153, %if.end152
  %109 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9751
  %bits159 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %109, i32 0, i32 43, !dbg !9752
  %httpproxy160 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits159, i32 0, i32 5, !dbg !9753
  %110 = load i8, i8* %httpproxy160, align 1, !dbg !9753
  %tobool161 = trunc i8 %110 to i1, !dbg !9753
  br i1 %tobool161, label %lor.end, label %lor.rhs, !dbg !9754

lor.rhs:                                          ; preds = %if.end158
  %111 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9755
  %bits162 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %111, i32 0, i32 43, !dbg !9756
  %socksproxy163 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits162, i32 0, i32 6, !dbg !9757
  %112 = load i8, i8* %socksproxy163, align 1, !dbg !9757
  %tobool164 = trunc i8 %112 to i1, !dbg !9757
  br label %lor.end, !dbg !9758

lor.end:                                          ; preds = %lor.rhs, %if.end158
  %113 = phi i1 [ true, %if.end158 ], [ %tobool164, %lor.rhs ]
  %114 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9759
  %bits165 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %114, i32 0, i32 43, !dbg !9760
  %proxy166 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits165, i32 0, i32 4, !dbg !9761
  %frombool = zext i1 %113 to i8, !dbg !9762
  store i8 %frombool, i8* %proxy166, align 1, !dbg !9762
  %115 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9763
  %bits167 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %115, i32 0, i32 43, !dbg !9765
  %proxy168 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits167, i32 0, i32 4, !dbg !9766
  %116 = load i8, i8* %proxy168, align 1, !dbg !9766
  %tobool169 = trunc i8 %116 to i1, !dbg !9766
  br i1 %tobool169, label %if.end181, label %if.then170, !dbg !9767

if.then170:                                       ; preds = %lor.end
  %117 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9768
  %bits171 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %117, i32 0, i32 43, !dbg !9770
  %proxy172 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits171, i32 0, i32 4, !dbg !9771
  store i8 0, i8* %proxy172, align 1, !dbg !9772
  %118 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9773
  %bits173 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %118, i32 0, i32 43, !dbg !9774
  %httpproxy174 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits173, i32 0, i32 5, !dbg !9775
  store i8 0, i8* %httpproxy174, align 1, !dbg !9776
  %119 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9777
  %bits175 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %119, i32 0, i32 43, !dbg !9778
  %socksproxy176 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits175, i32 0, i32 6, !dbg !9779
  store i8 0, i8* %socksproxy176, align 1, !dbg !9780
  %120 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9781
  %bits177 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %120, i32 0, i32 43, !dbg !9782
  %proxy_user_passwd178 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits177, i32 0, i32 8, !dbg !9783
  store i8 0, i8* %proxy_user_passwd178, align 1, !dbg !9784
  %121 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9785
  %bits179 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %121, i32 0, i32 43, !dbg !9786
  %tunnel_proxy180 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits179, i32 0, i32 15, !dbg !9787
  store i8 0, i8* %tunnel_proxy180, align 1, !dbg !9788
  br label %if.end181, !dbg !9789

if.end181:                                        ; preds = %if.then170, %lor.end
  br label %out, !dbg !9790

out:                                              ; preds = %if.end181, %if.then92, %if.then82, %if.then24, %if.then11, %if.then3
  %122 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9792
  %123 = load i8*, i8** %socksproxy, align 8, !dbg !9792
  call void %122(i8* %123), !dbg !9792
  %124 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9793
  %125 = load i8*, i8** %proxy, align 8, !dbg !9793
  call void %124(i8* %125), !dbg !9793
  %126 = load i32, i32* %result, align 4, !dbg !9794
  ret i32 %126, !dbg !9795
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_remote_port(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !2182 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %portptr = alloca i8*, align 8
  %endbracket = alloca i8, align 1
  %url = alloca i8*, align 8
  %type = alloca [12 x i8], align 1
  %rest = alloca i8*, align 8
  %port = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !9796, metadata !2256), !dbg !9797
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !9798, metadata !2256), !dbg !9799
  call void @llvm.dbg.declare(metadata i8** %portptr, metadata !9800, metadata !2256), !dbg !9801
  call void @llvm.dbg.declare(metadata i8* %endbracket, metadata !9802, metadata !2256), !dbg !9803
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9804
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 12, !dbg !9806
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !9807
  %1 = load i8*, i8** %name, align 8, !dbg !9807
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i32 0, i32 0), i8* %endbracket) #8, !dbg !9808
  %cmp = icmp eq i32 1, %call, !dbg !9809
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9810

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %endbracket, align 1, !dbg !9811
  %conv = sext i8 %2 to i32, !dbg !9811
  %cmp1 = icmp eq i32 93, %conv, !dbg !9812
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9813

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9815
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !9817
  %ipv6_ip = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 9, !dbg !9818
  store i8 1, i8* %ipv6_ip, align 1, !dbg !9819
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9820
  %host3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 12, !dbg !9821
  %name4 = getelementptr inbounds %struct.hostname, %struct.hostname* %host3, i32 0, i32 2, !dbg !9822
  %5 = load i8*, i8** %name4, align 8, !dbg !9823
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9823
  store i8* %incdec.ptr, i8** %name4, align 8, !dbg !9823
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9824
  %host5 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 12, !dbg !9825
  %name6 = getelementptr inbounds %struct.hostname, %struct.hostname* %host5, i32 0, i32 2, !dbg !9826
  %7 = load i8*, i8** %name6, align 8, !dbg !9826
  %call7 = call i8* @strchr(i8* %7, i32 93) #7, !dbg !9827
  store i8* %call7, i8** %portptr, align 8, !dbg !9828
  %8 = load i8*, i8** %portptr, align 8, !dbg !9829
  %tobool = icmp ne i8* %8, null, !dbg !9829
  br i1 %tobool, label %if.then8, label %if.end14, !dbg !9831

if.then8:                                         ; preds = %if.then
  %9 = load i8*, i8** %portptr, align 8, !dbg !9832
  %incdec.ptr9 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9832
  store i8* %incdec.ptr9, i8** %portptr, align 8, !dbg !9832
  store i8 0, i8* %9, align 1, !dbg !9834
  %10 = load i8*, i8** %portptr, align 8, !dbg !9835
  %11 = load i8, i8* %10, align 1, !dbg !9837
  %conv10 = sext i8 %11 to i32, !dbg !9837
  %cmp11 = icmp ne i32 58, %conv10, !dbg !9838
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !9839

if.then13:                                        ; preds = %if.then8
  store i8* null, i8** %portptr, align 8, !dbg !9840
  br label %if.end, !dbg !9841

if.end:                                           ; preds = %if.then13, %if.then8
  br label %if.end14, !dbg !9842

if.end14:                                         ; preds = %if.end, %if.then
  br label %if.end18, !dbg !9843

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9844
  %host15 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 12, !dbg !9846
  %name16 = getelementptr inbounds %struct.hostname, %struct.hostname* %host15, i32 0, i32 2, !dbg !9847
  %13 = load i8*, i8** %name16, align 8, !dbg !9847
  %call17 = call i8* @strchr(i8* %13, i32 58) #7, !dbg !9848
  store i8* %call17, i8** %portptr, align 8, !dbg !9849
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end14
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9850
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 13, !dbg !9852
  %use_port = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 8, !dbg !9853
  %15 = load i64, i64* %use_port, align 8, !dbg !9853
  %tobool19 = icmp ne i64 %15, 0, !dbg !9850
  br i1 %tobool19, label %land.lhs.true20, label %if.else83, !dbg !9854

land.lhs.true20:                                  ; preds = %if.end18
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9855
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 17, !dbg !9857
  %allow_port = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 20, !dbg !9858
  %17 = load i8, i8* %allow_port, align 8, !dbg !9858
  %tobool21 = trunc i8 %17 to i1, !dbg !9858
  br i1 %tobool21, label %if.then23, label %if.else83, !dbg !9859

if.then23:                                        ; preds = %land.lhs.true20
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9860
  %set24 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 13, !dbg !9862
  %use_port25 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set24, i32 0, i32 8, !dbg !9863
  %19 = load i64, i64* %use_port25, align 8, !dbg !9863
  %conv26 = trunc i64 %19 to i16, !dbg !9864
  %conv27 = zext i16 %conv26 to i32, !dbg !9864
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9865
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 18, !dbg !9866
  store i32 %conv27, i32* %remote_port, align 8, !dbg !9867
  %21 = load i8*, i8** %portptr, align 8, !dbg !9868
  %tobool28 = icmp ne i8* %21, null, !dbg !9868
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9870

if.then29:                                        ; preds = %if.then23
  %22 = load i8*, i8** %portptr, align 8, !dbg !9871
  store i8 0, i8* %22, align 1, !dbg !9872
  br label %if.end30, !dbg !9873

if.end30:                                         ; preds = %if.then29, %if.then23
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9874
  %bits31 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %23, i32 0, i32 43, !dbg !9876
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits31, i32 0, i32 5, !dbg !9877
  %24 = load i8, i8* %httpproxy, align 1, !dbg !9877
  %tobool32 = trunc i8 %24 to i1, !dbg !9877
  br i1 %tobool32, label %if.then33, label %if.end82, !dbg !9878

if.then33:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata i8** %url, metadata !9879, metadata !2256), !dbg !9881
  call void @llvm.dbg.declare(metadata [12 x i8]* %type, metadata !9882, metadata !2256), !dbg !9886
  %25 = bitcast [12 x i8]* %type to i8*, !dbg !9886
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 12, i32 1, i1 false), !dbg !9886
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9887
  %bits34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 43, !dbg !9889
  %type_set = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits34, i32 0, i32 26, !dbg !9890
  %27 = load i8, i8* %type_set, align 1, !dbg !9890
  %tobool35 = trunc i8 %27 to i1, !dbg !9890
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !9891

if.then36:                                        ; preds = %if.then33
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %type, i32 0, i32 0, !dbg !9892
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9893
  %set37 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 13, !dbg !9894
  %prefer_ascii = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set37, i32 0, i32 90, !dbg !9895
  %29 = load i8, i8* %prefer_ascii, align 1, !dbg !9895
  %tobool38 = trunc i8 %29 to i1, !dbg !9895
  br i1 %tobool38, label %cond.true, label %cond.false, !dbg !9893

cond.true:                                        ; preds = %if.then36
  br label %cond.end, !dbg !9896

cond.false:                                       ; preds = %if.then36
  %30 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9898
  %set40 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %30, i32 0, i32 13, !dbg !9899
  %ftp_list_only = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set40, i32 0, i32 92, !dbg !9900
  %31 = load i8, i8* %ftp_list_only, align 1, !dbg !9900
  %tobool41 = trunc i8 %31 to i1, !dbg !9900
  %cond = select i1 %tobool41, i32 68, i32 73, !dbg !9898
  br label %cond.end, !dbg !9901

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond43 = phi i32 [ 65, %cond.true ], [ %cond, %cond.false ], !dbg !9903
  %call44 = call i32 (i8*, i64, i8*, ...) @curl_msnprintf(i8* %arraydecay, i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i32 0, i32 0), i32 %cond43), !dbg !9905
  br label %if.end45, !dbg !9905

if.end45:                                         ; preds = %cond.end, %if.then33
  %32 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9906
  %given = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 48, !dbg !9907
  %33 = load %struct.Curl_handler*, %struct.Curl_handler** %given, align 8, !dbg !9907
  %scheme = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %33, i32 0, i32 0, !dbg !9908
  %34 = load i8*, i8** %scheme, align 8, !dbg !9908
  %35 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9909
  %bits46 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %35, i32 0, i32 43, !dbg !9910
  %ipv6_ip47 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits46, i32 0, i32 9, !dbg !9911
  %36 = load i8, i8* %ipv6_ip47, align 1, !dbg !9911
  %tobool48 = trunc i8 %36 to i1, !dbg !9911
  %cond50 = select i1 %tobool48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !9909
  %37 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9912
  %host51 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 12, !dbg !9913
  %name52 = getelementptr inbounds %struct.hostname, %struct.hostname* %host51, i32 0, i32 2, !dbg !9914
  %38 = load i8*, i8** %name52, align 8, !dbg !9914
  %39 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9915
  %bits53 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %39, i32 0, i32 43, !dbg !9916
  %ipv6_ip54 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits53, i32 0, i32 9, !dbg !9917
  %40 = load i8, i8* %ipv6_ip54, align 1, !dbg !9917
  %tobool55 = trunc i8 %40 to i1, !dbg !9917
  %cond57 = select i1 %tobool55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !9915
  %41 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !9918
  %remote_port58 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %41, i32 0, i32 18, !dbg !9919
  %42 = load i32, i32* %remote_port58, align 8, !dbg !9919
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9920
  %state59 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %43, i32 0, i32 17, !dbg !9921
  %slash_removed = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state59, i32 0, i32 39, !dbg !9922
  %44 = load i8, i8* %slash_removed, align 8, !dbg !9922
  %tobool60 = trunc i8 %44 to i1, !dbg !9922
  %cond62 = select i1 %tobool60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !9920
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9923
  %state63 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 17, !dbg !9924
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state63, i32 0, i32 38, !dbg !9925
  %46 = load i8*, i8** %path, align 8, !dbg !9925
  %arraydecay64 = getelementptr inbounds [12 x i8], [12 x i8]* %type, i32 0, i32 0, !dbg !9926
  %call65 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.81, i32 0, i32 0), i8* %34, i8* %cond50, i8* %38, i8* %cond57, i32 %42, i8* %cond62, i8* %46, i8* %arraydecay64), !dbg !9927
  store i8* %call65, i8** %url, align 8, !dbg !9928
  %47 = load i8*, i8** %url, align 8, !dbg !9929
  %tobool66 = icmp ne i8* %47, null, !dbg !9929
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !9931

if.then67:                                        ; preds = %if.end45
  store i32 27, i32* %retval, align 4, !dbg !9932
  br label %return, !dbg !9932

if.end68:                                         ; preds = %if.end45
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9933
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 14, !dbg !9935
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 1, !dbg !9936
  %49 = load i8, i8* %url_alloc, align 8, !dbg !9936
  %tobool69 = trunc i8 %49 to i1, !dbg !9936
  br i1 %tobool69, label %if.then70, label %if.end77, !dbg !9937

if.then70:                                        ; preds = %if.end68
  br label %do.body, !dbg !9938

do.body:                                          ; preds = %if.then70
  %50 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !9940
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9940
  %change71 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 14, !dbg !9940
  %url72 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change71, i32 0, i32 0, !dbg !9940
  %52 = load i8*, i8** %url72, align 8, !dbg !9940
  call void %50(i8* %52), !dbg !9940
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9940
  %change73 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %53, i32 0, i32 14, !dbg !9940
  %url74 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change73, i32 0, i32 0, !dbg !9940
  store i8* null, i8** %url74, align 8, !dbg !9940
  br label %do.end, !dbg !9940

do.end:                                           ; preds = %do.body
  %54 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9943
  %change75 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %54, i32 0, i32 14, !dbg !9944
  %url_alloc76 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change75, i32 0, i32 1, !dbg !9945
  store i8 0, i8* %url_alloc76, align 8, !dbg !9946
  br label %if.end77, !dbg !9947

if.end77:                                         ; preds = %do.end, %if.end68
  %55 = load i8*, i8** %url, align 8, !dbg !9948
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9949
  %change78 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %56, i32 0, i32 14, !dbg !9950
  %url79 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change78, i32 0, i32 0, !dbg !9951
  store i8* %55, i8** %url79, align 8, !dbg !9952
  %57 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9953
  %change80 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %57, i32 0, i32 14, !dbg !9954
  %url_alloc81 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change80, i32 0, i32 1, !dbg !9955
  store i8 1, i8* %url_alloc81, align 8, !dbg !9956
  br label %if.end82, !dbg !9957

if.end82:                                         ; preds = %if.end77, %if.end30
  br label %if.end108, !dbg !9958

if.else83:                                        ; preds = %land.lhs.true20, %if.end18
  %58 = load i8*, i8** %portptr, align 8, !dbg !9959
  %tobool84 = icmp ne i8* %58, null, !dbg !9959
  br i1 %tobool84, label %if.then85, label %if.end107, !dbg !9961

if.then85:                                        ; preds = %if.else83
  call void @llvm.dbg.declare(metadata i8** %rest, metadata !9962, metadata !2256), !dbg !9964
  call void @llvm.dbg.declare(metadata i64* %port, metadata !9965, metadata !2256), !dbg !9966
  %59 = load i8*, i8** %portptr, align 8, !dbg !9967
  %add.ptr = getelementptr inbounds i8, i8* %59, i64 1, !dbg !9968
  %call86 = call i64 @strtol(i8* %add.ptr, i8** %rest, i32 10) #8, !dbg !9969
  store i64 %call86, i64* %port, align 8, !dbg !9970
  %60 = load i64, i64* %port, align 8, !dbg !9971
  %cmp87 = icmp slt i64 %60, 0, !dbg !9973
  br i1 %cmp87, label %if.then91, label %lor.lhs.false, !dbg !9974

lor.lhs.false:                                    ; preds = %if.then85
  %61 = load i64, i64* %port, align 8, !dbg !9975
  %cmp89 = icmp sgt i64 %61, 65535, !dbg !9977
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !9978

if.then91:                                        ; preds = %lor.lhs.false, %if.then85
  %62 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9979
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %62, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)), !dbg !9981
  store i32 3, i32* %retval, align 4, !dbg !9982
  br label %return, !dbg !9982

if.end92:                                         ; preds = %lor.lhs.false
  %63 = load i8*, i8** %rest, align 8, !dbg !9983
  %arrayidx = getelementptr inbounds i8, i8* %63, i64 0, !dbg !9983
  %64 = load i8, i8* %arrayidx, align 1, !dbg !9983
  %tobool93 = icmp ne i8 %64, 0, !dbg !9983
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !9985

if.then94:                                        ; preds = %if.end92
  %65 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !9986
  %66 = load i8*, i8** %rest, align 8, !dbg !9988
  %arrayidx95 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !9988
  %67 = load i8, i8* %arrayidx95, align 1, !dbg !9988
  %conv96 = sext i8 %67 to i32, !dbg !9988
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %65, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i32 0, i32 0), i32 %conv96), !dbg !9989
  store i32 3, i32* %retval, align 4, !dbg !9990
  br label %return, !dbg !9990

if.end97:                                         ; preds = %if.end92
  %68 = load i8*, i8** %rest, align 8, !dbg !9991
  %69 = load i8*, i8** %portptr, align 8, !dbg !9993
  %arrayidx98 = getelementptr inbounds i8, i8* %69, i64 1, !dbg !9993
  %cmp99 = icmp ne i8* %68, %arrayidx98, !dbg !9994
  br i1 %cmp99, label %if.then101, label %if.else105, !dbg !9995

if.then101:                                       ; preds = %if.end97
  %70 = load i8*, i8** %portptr, align 8, !dbg !9996
  store i8 0, i8* %70, align 1, !dbg !9998
  %71 = load i64, i64* %port, align 8, !dbg !9999
  %call102 = call zeroext i16 @curlx_ultous(i64 %71), !dbg !10000
  %conv103 = zext i16 %call102 to i32, !dbg !10000
  %72 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10001
  %remote_port104 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %72, i32 0, i32 18, !dbg !10002
  store i32 %conv103, i32* %remote_port104, align 8, !dbg !10003
  br label %if.end106, !dbg !10004

if.else105:                                       ; preds = %if.end97
  %73 = load i8*, i8** %portptr, align 8, !dbg !10005
  store i8 0, i8* %73, align 1, !dbg !10007
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then101
  br label %if.end107, !dbg !10008

if.end107:                                        ; preds = %if.end106, %if.else83
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end82
  %74 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10009
  %remote_port109 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %74, i32 0, i32 18, !dbg !10011
  %75 = load i32, i32* %remote_port109, align 8, !dbg !10011
  %cmp110 = icmp slt i32 %75, 0, !dbg !10012
  br i1 %cmp110, label %if.then112, label %if.end117, !dbg !10013

if.then112:                                       ; preds = %if.end108
  %76 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10014
  %given113 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %76, i32 0, i32 48, !dbg !10015
  %77 = load %struct.Curl_handler*, %struct.Curl_handler** %given113, align 8, !dbg !10015
  %defport = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %77, i32 0, i32 14, !dbg !10016
  %78 = load i64, i64* %defport, align 8, !dbg !10016
  %conv114 = trunc i64 %78 to i16, !dbg !10017
  %conv115 = zext i16 %conv114 to i32, !dbg !10017
  %79 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10018
  %remote_port116 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %79, i32 0, i32 18, !dbg !10019
  store i32 %conv115, i32* %remote_port116, align 8, !dbg !10020
  br label %if.end117, !dbg !10018

if.end117:                                        ; preds = %if.then112, %if.end108
  store i32 0, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

return:                                           ; preds = %if.end117, %if.then94, %if.then91, %if.then67
  %80 = load i32, i32* %retval, align 4, !dbg !10022
  ret i32 %80, !dbg !10022
}

; Function Attrs: nounwind uwtable
define internal i32 @override_login(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8** %userp, i8** %passwdp, i8** %optionsp) #0 !dbg !2183 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %userp.addr = alloca i8**, align 8
  %passwdp.addr = alloca i8**, align 8
  %optionsp.addr = alloca i8**, align 8
  %ret = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !10023, metadata !2256), !dbg !10024
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !10025, metadata !2256), !dbg !10026
  store i8** %userp, i8*** %userp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %userp.addr, metadata !10027, metadata !2256), !dbg !10028
  store i8** %passwdp, i8*** %passwdp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %passwdp.addr, metadata !10029, metadata !2256), !dbg !10030
  store i8** %optionsp, i8*** %optionsp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %optionsp.addr, metadata !10031, metadata !2256), !dbg !10032
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10033
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 13, !dbg !10035
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !10036
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 41, !dbg !10033
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !10033
  %tobool = icmp ne i8* %1, null, !dbg !10033
  br i1 %tobool, label %if.then, label %if.end6, !dbg !10037

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !10038
  %3 = load i8**, i8*** %userp.addr, align 8, !dbg !10038
  %4 = load i8*, i8** %3, align 8, !dbg !10038
  call void %2(i8* %4), !dbg !10038
  %5 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10040
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10040
  %set1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 13, !dbg !10040
  %str2 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1, i32 0, i32 128, !dbg !10040
  %arrayidx3 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2, i64 0, i64 41, !dbg !10040
  %7 = load i8*, i8** %arrayidx3, align 8, !dbg !10040
  %call = call i8* %5(i8* %7), !dbg !10040
  %8 = load i8**, i8*** %userp.addr, align 8, !dbg !10041
  store i8* %call, i8** %8, align 8, !dbg !10042
  %9 = load i8**, i8*** %userp.addr, align 8, !dbg !10043
  %10 = load i8*, i8** %9, align 8, !dbg !10045
  %tobool4 = icmp ne i8* %10, null, !dbg !10045
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !10046

if.then5:                                         ; preds = %if.then
  store i32 27, i32* %retval, align 4, !dbg !10047
  br label %return, !dbg !10047

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !10048

if.end6:                                          ; preds = %if.end, %entry
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10049
  %set7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 13, !dbg !10051
  %str8 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set7, i32 0, i32 128, !dbg !10052
  %arrayidx9 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str8, i64 0, i64 42, !dbg !10049
  %12 = load i8*, i8** %arrayidx9, align 8, !dbg !10049
  %tobool10 = icmp ne i8* %12, null, !dbg !10049
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !10053

if.then11:                                        ; preds = %if.end6
  %13 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !10054
  %14 = load i8**, i8*** %passwdp.addr, align 8, !dbg !10054
  %15 = load i8*, i8** %14, align 8, !dbg !10054
  call void %13(i8* %15), !dbg !10054
  %16 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10056
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10056
  %set12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !10056
  %str13 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set12, i32 0, i32 128, !dbg !10056
  %arrayidx14 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str13, i64 0, i64 42, !dbg !10056
  %18 = load i8*, i8** %arrayidx14, align 8, !dbg !10056
  %call15 = call i8* %16(i8* %18), !dbg !10056
  %19 = load i8**, i8*** %passwdp.addr, align 8, !dbg !10057
  store i8* %call15, i8** %19, align 8, !dbg !10058
  %20 = load i8**, i8*** %passwdp.addr, align 8, !dbg !10059
  %21 = load i8*, i8** %20, align 8, !dbg !10061
  %tobool16 = icmp ne i8* %21, null, !dbg !10061
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !10062

if.then17:                                        ; preds = %if.then11
  store i32 27, i32* %retval, align 4, !dbg !10063
  br label %return, !dbg !10063

if.end18:                                         ; preds = %if.then11
  br label %if.end19, !dbg !10064

if.end19:                                         ; preds = %if.end18, %if.end6
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10065
  %set20 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 13, !dbg !10067
  %str21 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set20, i32 0, i32 128, !dbg !10068
  %arrayidx22 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str21, i64 0, i64 43, !dbg !10065
  %23 = load i8*, i8** %arrayidx22, align 8, !dbg !10065
  %tobool23 = icmp ne i8* %23, null, !dbg !10065
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !10069

if.then24:                                        ; preds = %if.end19
  %24 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !10070
  %25 = load i8**, i8*** %optionsp.addr, align 8, !dbg !10070
  %26 = load i8*, i8** %25, align 8, !dbg !10070
  call void %24(i8* %26), !dbg !10070
  %27 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10072
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10072
  %set25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 13, !dbg !10072
  %str26 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set25, i32 0, i32 128, !dbg !10072
  %arrayidx27 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str26, i64 0, i64 43, !dbg !10072
  %29 = load i8*, i8** %arrayidx27, align 8, !dbg !10072
  %call28 = call i8* %27(i8* %29), !dbg !10072
  %30 = load i8**, i8*** %optionsp.addr, align 8, !dbg !10073
  store i8* %call28, i8** %30, align 8, !dbg !10074
  %31 = load i8**, i8*** %optionsp.addr, align 8, !dbg !10075
  %32 = load i8*, i8** %31, align 8, !dbg !10077
  %tobool29 = icmp ne i8* %32, null, !dbg !10077
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10078

if.then30:                                        ; preds = %if.then24
  store i32 27, i32* %retval, align 4, !dbg !10079
  br label %return, !dbg !10079

if.end31:                                         ; preds = %if.then24
  br label %if.end32, !dbg !10080

if.end32:                                         ; preds = %if.end31, %if.end19
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10081
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 43, !dbg !10082
  %netrc = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 21, !dbg !10083
  store i8 0, i8* %netrc, align 1, !dbg !10084
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10085
  %set33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 13, !dbg !10087
  %use_netrc = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set33, i32 0, i32 105, !dbg !10088
  %35 = load i32, i32* %use_netrc, align 4, !dbg !10088
  %cmp = icmp ne i32 %35, 0, !dbg !10089
  br i1 %cmp, label %if.then34, label %if.end51, !dbg !10090

if.then34:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10091, metadata !2256), !dbg !10093
  %36 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10094
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %36, i32 0, i32 12, !dbg !10095
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !10096
  %37 = load i8*, i8** %name, align 8, !dbg !10096
  %38 = load i8**, i8*** %userp.addr, align 8, !dbg !10097
  %39 = load i8**, i8*** %passwdp.addr, align 8, !dbg !10098
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10099
  %set35 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 13, !dbg !10100
  %str36 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set35, i32 0, i32 128, !dbg !10101
  %arrayidx37 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str36, i64 0, i64 20, !dbg !10099
  %41 = load i8*, i8** %arrayidx37, align 8, !dbg !10099
  %call38 = call i32 @Curl_parsenetrc(i8* %37, i8** %38, i8** %39, i8* %41), !dbg !10102
  store i32 %call38, i32* %ret, align 4, !dbg !10093
  %42 = load i32, i32* %ret, align 4, !dbg !10103
  %cmp39 = icmp sgt i32 %42, 0, !dbg !10105
  br i1 %cmp39, label %if.then40, label %if.else, !dbg !10106

if.then40:                                        ; preds = %if.then34
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10107
  %44 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10109
  %host41 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 12, !dbg !10110
  %name42 = getelementptr inbounds %struct.hostname, %struct.hostname* %host41, i32 0, i32 2, !dbg !10111
  %45 = load i8*, i8** %name42, align 8, !dbg !10111
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %43, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.86, i32 0, i32 0), i8* %45), !dbg !10112
  br label %if.end50, !dbg !10113

if.else:                                          ; preds = %if.then34
  %46 = load i32, i32* %ret, align 4, !dbg !10114
  %cmp43 = icmp slt i32 %46, 0, !dbg !10116
  br i1 %cmp43, label %if.then44, label %if.else45, !dbg !10117

if.then44:                                        ; preds = %if.else
  store i32 27, i32* %retval, align 4, !dbg !10118
  br label %return, !dbg !10118

if.else45:                                        ; preds = %if.else
  %47 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10120
  %bits46 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %47, i32 0, i32 43, !dbg !10122
  %netrc47 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits46, i32 0, i32 21, !dbg !10123
  store i8 1, i8* %netrc47, align 1, !dbg !10124
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10125
  %bits48 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 43, !dbg !10126
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits48, i32 0, i32 7, !dbg !10127
  store i8 1, i8* %user_passwd, align 1, !dbg !10128
  br label %if.end49

if.end49:                                         ; preds = %if.else45
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then40
  br label %if.end51, !dbg !10129

if.end51:                                         ; preds = %if.end50, %if.end32
  store i32 0, i32* %retval, align 4, !dbg !10130
  br label %return, !dbg !10130

return:                                           ; preds = %if.end51, %if.then44, %if.then30, %if.then17, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !10131
  ret i32 %49, !dbg !10131
}

; Function Attrs: nounwind uwtable
define internal i32 @set_login(%struct.connectdata* %conn, i8* %user, i8* %passwd, i8* %options) #0 !dbg !2184 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %user.addr = alloca i8*, align 8
  %passwd.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !10132, metadata !2256), !dbg !10133
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !10134, metadata !2256), !dbg !10135
  store i8* %passwd, i8** %passwd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %passwd.addr, metadata !10136, metadata !2256), !dbg !10137
  store i8* %options, i8** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !10138, metadata !2256), !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10140, metadata !2256), !dbg !10141
  store i32 0, i32* %result, align 4, !dbg !10141
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10142
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 47, !dbg !10144
  %1 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !10144
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %1, i32 0, i32 16, !dbg !10145
  %2 = load i32, i32* %flags, align 4, !dbg !10145
  %and = and i32 %2, 32, !dbg !10146
  %tobool = icmp ne i32 %and, 0, !dbg !10146
  br i1 %tobool, label %land.lhs.true, label %if.else9, !dbg !10147

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10148
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !10150
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 7, !dbg !10151
  %4 = load i8, i8* %user_passwd, align 1, !dbg !10151
  %tobool1 = trunc i8 %4 to i1, !dbg !10151
  br i1 %tobool1, label %if.else9, label %if.then, !dbg !10152

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10153
  %call = call i8* %5(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0)), !dbg !10153
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10155
  %user2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 25, !dbg !10156
  store i8* %call, i8** %user2, align 8, !dbg !10157
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10158
  %user3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 25, !dbg !10160
  %8 = load i8*, i8** %user3, align 8, !dbg !10160
  %tobool4 = icmp ne i8* %8, null, !dbg !10158
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10161

if.then5:                                         ; preds = %if.then
  %9 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10162
  %call6 = call i8* %9(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i32 0)), !dbg !10162
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10163
  %passwd7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 26, !dbg !10164
  store i8* %call6, i8** %passwd7, align 8, !dbg !10165
  br label %if.end, !dbg !10163

if.else:                                          ; preds = %if.then
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10166
  %passwd8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 26, !dbg !10167
  store i8* null, i8** %passwd8, align 8, !dbg !10168
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end20, !dbg !10169

if.else9:                                         ; preds = %land.lhs.true, %entry
  %12 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10170
  %13 = load i8*, i8** %user.addr, align 8, !dbg !10170
  %call10 = call i8* %12(i8* %13), !dbg !10170
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10172
  %user11 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 25, !dbg !10173
  store i8* %call10, i8** %user11, align 8, !dbg !10174
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10175
  %user12 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 25, !dbg !10177
  %16 = load i8*, i8** %user12, align 8, !dbg !10177
  %tobool13 = icmp ne i8* %16, null, !dbg !10175
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !10178

if.then14:                                        ; preds = %if.else9
  %17 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10179
  %18 = load i8*, i8** %passwd.addr, align 8, !dbg !10179
  %call15 = call i8* %17(i8* %18), !dbg !10179
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10180
  %passwd16 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 26, !dbg !10181
  store i8* %call15, i8** %passwd16, align 8, !dbg !10182
  br label %if.end19, !dbg !10180

if.else17:                                        ; preds = %if.else9
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10183
  %passwd18 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 26, !dbg !10184
  store i8* null, i8** %passwd18, align 8, !dbg !10185
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then14
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end
  %21 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10186
  %user21 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 25, !dbg !10188
  %22 = load i8*, i8** %user21, align 8, !dbg !10188
  %tobool22 = icmp ne i8* %22, null, !dbg !10186
  br i1 %tobool22, label %lor.lhs.false, label %if.then25, !dbg !10189

lor.lhs.false:                                    ; preds = %if.end20
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10190
  %passwd23 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %23, i32 0, i32 26, !dbg !10192
  %24 = load i8*, i8** %passwd23, align 8, !dbg !10192
  %tobool24 = icmp ne i8* %24, null, !dbg !10190
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !10193

if.then25:                                        ; preds = %lor.lhs.false, %if.end20
  store i32 27, i32* %result, align 4, !dbg !10194
  br label %if.end26, !dbg !10195

if.end26:                                         ; preds = %if.then25, %lor.lhs.false
  %25 = load i32, i32* %result, align 4, !dbg !10196
  %tobool27 = icmp ne i32 %25, 0, !dbg !10196
  br i1 %tobool27, label %if.end37, label %land.lhs.true28, !dbg !10198

land.lhs.true28:                                  ; preds = %if.end26
  %26 = load i8*, i8** %options.addr, align 8, !dbg !10199
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 0, !dbg !10199
  %27 = load i8, i8* %arrayidx, align 1, !dbg !10199
  %conv = sext i8 %27 to i32, !dbg !10199
  %tobool29 = icmp ne i32 %conv, 0, !dbg !10199
  br i1 %tobool29, label %if.then30, label %if.end37, !dbg !10201

if.then30:                                        ; preds = %land.lhs.true28
  %28 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10202
  %29 = load i8*, i8** %options.addr, align 8, !dbg !10202
  %call31 = call i8* %28(i8* %29), !dbg !10202
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10204
  %options32 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 27, !dbg !10205
  store i8* %call31, i8** %options32, align 8, !dbg !10206
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10207
  %options33 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 27, !dbg !10209
  %32 = load i8*, i8** %options33, align 8, !dbg !10209
  %tobool34 = icmp ne i8* %32, null, !dbg !10207
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !10210

if.then35:                                        ; preds = %if.then30
  store i32 27, i32* %result, align 4, !dbg !10211
  br label %if.end36, !dbg !10212

if.end36:                                         ; preds = %if.then35, %if.then30
  br label %if.end37, !dbg !10213

if.end37:                                         ; preds = %if.end36, %land.lhs.true28, %if.end26
  %33 = load i32, i32* %result, align 4, !dbg !10214
  ret i32 %33, !dbg !10215
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_connect_to_slist(%struct.Curl_easy* %data, %struct.connectdata* %conn, %struct.curl_slist* %conn_to_host) #0 !dbg !2187 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %conn_to_host.addr = alloca %struct.curl_slist*, align 8
  %result = alloca i32, align 4
  %host = alloca i8*, align 8
  %port = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !10216, metadata !2256), !dbg !10217
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !10218, metadata !2256), !dbg !10219
  store %struct.curl_slist* %conn_to_host, %struct.curl_slist** %conn_to_host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %conn_to_host.addr, metadata !10220, metadata !2256), !dbg !10221
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10222, metadata !2256), !dbg !10223
  store i32 0, i32* %result, align 4, !dbg !10223
  call void @llvm.dbg.declare(metadata i8** %host, metadata !10224, metadata !2256), !dbg !10225
  store i8* null, i8** %host, align 8, !dbg !10225
  call void @llvm.dbg.declare(metadata i32* %port, metadata !10226, metadata !2256), !dbg !10227
  store i32 -1, i32* %port, align 4, !dbg !10227
  br label %while.cond, !dbg !10228

while.cond:                                       ; preds = %if.end22, %entry
  %0 = load %struct.curl_slist*, %struct.curl_slist** %conn_to_host.addr, align 8, !dbg !10229
  %tobool = icmp ne %struct.curl_slist* %0, null, !dbg !10229
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !10231

land.lhs.true:                                    ; preds = %while.cond
  %1 = load i8*, i8** %host, align 8, !dbg !10232
  %tobool1 = icmp ne i8* %1, null, !dbg !10232
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !10234

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load i32, i32* %port, align 4, !dbg !10235
  %cmp = icmp eq i32 %2, -1, !dbg !10237
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %3 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %3, label %while.body, label %while.end, !dbg !10238

while.body:                                       ; preds = %land.end
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10240
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10242
  %6 = load %struct.curl_slist*, %struct.curl_slist** %conn_to_host.addr, align 8, !dbg !10243
  %data2 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %6, i32 0, i32 0, !dbg !10244
  %7 = load i8*, i8** %data2, align 8, !dbg !10244
  %call = call i32 @parse_connect_to_string(%struct.Curl_easy* %4, %struct.connectdata* %5, i8* %7, i8** %host, i32* %port), !dbg !10245
  store i32 %call, i32* %result, align 4, !dbg !10246
  %8 = load i32, i32* %result, align 4, !dbg !10247
  %tobool3 = icmp ne i32 %8, 0, !dbg !10247
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10249

if.then:                                          ; preds = %while.body
  %9 = load i32, i32* %result, align 4, !dbg !10250
  store i32 %9, i32* %retval, align 4, !dbg !10251
  br label %return, !dbg !10251

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %host, align 8, !dbg !10252
  %tobool4 = icmp ne i8* %10, null, !dbg !10252
  br i1 %tobool4, label %land.lhs.true5, label %if.else, !dbg !10254

land.lhs.true5:                                   ; preds = %if.end
  %11 = load i8*, i8** %host, align 8, !dbg !10255
  %12 = load i8, i8* %11, align 1, !dbg !10257
  %conv = sext i8 %12 to i32, !dbg !10257
  %tobool6 = icmp ne i32 %conv, 0, !dbg !10257
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !10258

if.then7:                                         ; preds = %land.lhs.true5
  %13 = load i8*, i8** %host, align 8, !dbg !10259
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10261
  %conn_to_host8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 14, !dbg !10262
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host8, i32 0, i32 0, !dbg !10263
  store i8* %13, i8** %rawalloc, align 8, !dbg !10264
  %15 = load i8*, i8** %host, align 8, !dbg !10265
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10266
  %conn_to_host9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 14, !dbg !10267
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host9, i32 0, i32 2, !dbg !10268
  store i8* %15, i8** %name, align 8, !dbg !10269
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10270
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 43, !dbg !10271
  %conn_to_host10 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 2, !dbg !10272
  store i8 1, i8* %conn_to_host10, align 1, !dbg !10273
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10274
  %19 = load i8*, i8** %host, align 8, !dbg !10275
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %18, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.89, i32 0, i32 0), i8* %19), !dbg !10276
  br label %if.end13, !dbg !10277

if.else:                                          ; preds = %land.lhs.true5, %if.end
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10278
  %bits11 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 43, !dbg !10280
  %conn_to_host12 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits11, i32 0, i32 2, !dbg !10281
  store i8 0, i8* %conn_to_host12, align 1, !dbg !10282
  br label %do.body, !dbg !10283

do.body:                                          ; preds = %if.else
  %21 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !10284
  %22 = load i8*, i8** %host, align 8, !dbg !10284
  call void %21(i8* %22), !dbg !10284
  store i8* null, i8** %host, align 8, !dbg !10284
  br label %do.end, !dbg !10284

do.end:                                           ; preds = %do.body
  br label %if.end13

if.end13:                                         ; preds = %do.end, %if.then7
  %23 = load i32, i32* %port, align 4, !dbg !10287
  %cmp14 = icmp sge i32 %23, 0, !dbg !10289
  br i1 %cmp14, label %if.then16, label %if.else19, !dbg !10290

if.then16:                                        ; preds = %if.end13
  %24 = load i32, i32* %port, align 4, !dbg !10291
  %25 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10293
  %conn_to_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %25, i32 0, i32 19, !dbg !10294
  store i32 %24, i32* %conn_to_port, align 4, !dbg !10295
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10296
  %bits17 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 43, !dbg !10297
  %conn_to_port18 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits17, i32 0, i32 3, !dbg !10298
  store i8 1, i8* %conn_to_port18, align 1, !dbg !10299
  %27 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10300
  %28 = load i32, i32* %port, align 4, !dbg !10301
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i32 0, i32 0), i32 %28), !dbg !10302
  br label %if.end22, !dbg !10303

if.else19:                                        ; preds = %if.end13
  %29 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10304
  %bits20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %29, i32 0, i32 43, !dbg !10306
  %conn_to_port21 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits20, i32 0, i32 3, !dbg !10307
  store i8 0, i8* %conn_to_port21, align 1, !dbg !10308
  store i32 -1, i32* %port, align 4, !dbg !10309
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then16
  %30 = load %struct.curl_slist*, %struct.curl_slist** %conn_to_host.addr, align 8, !dbg !10310
  %next = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %30, i32 0, i32 1, !dbg !10311
  %31 = load %struct.curl_slist*, %struct.curl_slist** %next, align 8, !dbg !10311
  store %struct.curl_slist* %31, %struct.curl_slist** %conn_to_host.addr, align 8, !dbg !10312
  br label %while.cond, !dbg !10313

while.end:                                        ; preds = %land.end
  %32 = load i32, i32* %result, align 4, !dbg !10315
  store i32 %32, i32* %retval, align 4, !dbg !10316
  br label %return, !dbg !10316

return:                                           ; preds = %while.end, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !10317
  ret i32 %33, !dbg !10317
}

; Function Attrs: nounwind uwtable
define internal void @fix_hostname(%struct.connectdata* %conn, %struct.hostname* %host) #0 !dbg !2196 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %host.addr = alloca %struct.hostname*, align 8
  %len = alloca i64, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !10318, metadata !2256), !dbg !10319
  store %struct.hostname* %host, %struct.hostname** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hostname** %host.addr, metadata !10320, metadata !2256), !dbg !10321
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10322, metadata !2256), !dbg !10323
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !10324, metadata !2256), !dbg !10325
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10326
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !10327
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !10327
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !10325
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !10328
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10329
  %4 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10330
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %4, i32 0, i32 2, !dbg !10331
  %5 = load i8*, i8** %name, align 8, !dbg !10331
  %6 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10332
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %6, i32 0, i32 3, !dbg !10333
  store i8* %5, i8** %dispname, align 8, !dbg !10334
  %7 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10335
  %name2 = getelementptr inbounds %struct.hostname, %struct.hostname* %7, i32 0, i32 2, !dbg !10336
  %8 = load i8*, i8** %name2, align 8, !dbg !10336
  %call = call i64 @strlen(i8* %8) #7, !dbg !10337
  store i64 %call, i64* %len, align 8, !dbg !10338
  %9 = load i64, i64* %len, align 8, !dbg !10339
  %tobool = icmp ne i64 %9, 0, !dbg !10339
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10341

land.lhs.true:                                    ; preds = %entry
  %10 = load i64, i64* %len, align 8, !dbg !10342
  %sub = sub i64 %10, 1, !dbg !10344
  %11 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10345
  %name3 = getelementptr inbounds %struct.hostname, %struct.hostname* %11, i32 0, i32 2, !dbg !10346
  %12 = load i8*, i8** %name3, align 8, !dbg !10346
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %sub, !dbg !10345
  %13 = load i8, i8* %arrayidx, align 1, !dbg !10345
  %conv = sext i8 %13 to i32, !dbg !10345
  %cmp = icmp eq i32 %conv, 46, !dbg !10347
  br i1 %cmp, label %if.then, label %if.end, !dbg !10348

if.then:                                          ; preds = %land.lhs.true
  %14 = load i64, i64* %len, align 8, !dbg !10349
  %sub5 = sub i64 %14, 1, !dbg !10350
  %15 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10351
  %name6 = getelementptr inbounds %struct.hostname, %struct.hostname* %15, i32 0, i32 2, !dbg !10352
  %16 = load i8*, i8** %name6, align 8, !dbg !10352
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i64 %sub5, !dbg !10351
  store i8 0, i8* %arrayidx7, align 1, !dbg !10353
  br label %if.end, !dbg !10351

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.hostname*, %struct.hostname** %host.addr, align 8, !dbg !10354
  %name8 = getelementptr inbounds %struct.hostname, %struct.hostname* %17, i32 0, i32 2, !dbg !10356
  %18 = load i8*, i8** %name8, align 8, !dbg !10356
  %call9 = call zeroext i1 @is_ASCII_name(i8* %18), !dbg !10357
  br i1 %call9, label %if.end11, label %if.then10, !dbg !10358

if.then10:                                        ; preds = %if.end
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !10359
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %19, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.93, i32 0, i32 0)), !dbg !10361
  br label %if.end11, !dbg !10362

if.end11:                                         ; preds = %if.then10, %if.end
  ret void, !dbg !10363
}

; Function Attrs: nounwind uwtable
define internal i32 @setup_connection_internals(%struct.connectdata* %conn) #0 !dbg !2202 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %p = alloca %struct.Curl_handler*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !10364, metadata !2256), !dbg !10365
  call void @llvm.dbg.declare(metadata %struct.Curl_handler** %p, metadata !10366, metadata !2256), !dbg !10367
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10368, metadata !2256), !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !10370, metadata !2256), !dbg !10371
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10372
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !10373
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !10373
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !10371
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !10374
  call void @Curl_free_request_state(%struct.Curl_easy* %2), !dbg !10375
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !10376
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 12, !dbg !10377
  %4 = bitcast %struct.SingleRequest* %req to i8*, !dbg !10378
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 312, i32 8, i1 false), !dbg !10378
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !10379
  %req2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 12, !dbg !10380
  %maxdownload = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req2, i32 0, i32 2, !dbg !10381
  store i64 -1, i64* %maxdownload, align 8, !dbg !10382
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10383
  %socktype = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 11, !dbg !10384
  store i32 1, i32* %socktype, align 4, !dbg !10385
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10386
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 47, !dbg !10387
  %8 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !10387
  store %struct.Curl_handler* %8, %struct.Curl_handler** %p, align 8, !dbg !10388
  %9 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !10389
  %setup_connection = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %9, i32 0, i32 1, !dbg !10391
  %10 = load i32 (%struct.connectdata*)*, i32 (%struct.connectdata*)** %setup_connection, align 8, !dbg !10391
  %tobool = icmp ne i32 (%struct.connectdata*)* %10, null, !dbg !10389
  br i1 %tobool, label %if.then, label %if.end7, !dbg !10392

if.then:                                          ; preds = %entry
  %11 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !10393
  %setup_connection3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %11, i32 0, i32 1, !dbg !10395
  %12 = load i32 (%struct.connectdata*)*, i32 (%struct.connectdata*)** %setup_connection3, align 8, !dbg !10395
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10396
  %call = call i32 %12(%struct.connectdata* %13), !dbg !10397
  store i32 %call, i32* %result, align 4, !dbg !10398
  %14 = load i32, i32* %result, align 4, !dbg !10399
  %tobool4 = icmp ne i32 %14, 0, !dbg !10399
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10401

if.then5:                                         ; preds = %if.then
  %15 = load i32, i32* %result, align 4, !dbg !10402
  store i32 %15, i32* %retval, align 4, !dbg !10403
  br label %return, !dbg !10403

if.end:                                           ; preds = %if.then
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10404
  %handler6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 47, !dbg !10405
  %17 = load %struct.Curl_handler*, %struct.Curl_handler** %handler6, align 8, !dbg !10405
  store %struct.Curl_handler* %17, %struct.Curl_handler** %p, align 8, !dbg !10406
  br label %if.end7, !dbg !10407

if.end7:                                          ; preds = %if.end, %entry
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10408
  %port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %18, i32 0, i32 17, !dbg !10410
  %19 = load i64, i64* %port, align 8, !dbg !10410
  %cmp = icmp slt i64 %19, 0, !dbg !10411
  br i1 %cmp, label %if.then8, label %if.end10, !dbg !10412

if.then8:                                         ; preds = %if.end7
  %20 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !10413
  %defport = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %20, i32 0, i32 14, !dbg !10414
  %21 = load i64, i64* %defport, align 8, !dbg !10414
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !10415
  %port9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %22, i32 0, i32 17, !dbg !10416
  store i64 %21, i64* %port9, align 8, !dbg !10417
  br label %if.end10, !dbg !10415

if.end10:                                         ; preds = %if.then8, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !10418
  br label %return, !dbg !10418

return:                                           ; preds = %if.end10, %if.then5
  %23 = load i32, i32* %retval, align 4, !dbg !10419
  ret i32 %23, !dbg !10419
}

declare i64 @Curl_recv_plain(%struct.connectdata*, i32, i8*, i64, i32*) #3

declare i64 @Curl_send_plain(%struct.connectdata*, i32, i8*, i64, i32*) #3

declare i32 @Curl_conncache_add_conn(%struct.conncache*, %struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define internal i32 @setup_range(%struct.Curl_easy* %data) #0 !dbg !2203 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %s = alloca %struct.UrlState*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !10420, metadata !2256), !dbg !10421
  call void @llvm.dbg.declare(metadata %struct.UrlState** %s, metadata !10422, metadata !2256), !dbg !10424
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10425
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !10426
  store %struct.UrlState* %state, %struct.UrlState** %s, align 8, !dbg !10424
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10427
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 13, !dbg !10428
  %set_resume_from = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 53, !dbg !10429
  %2 = load i64, i64* %set_resume_from, align 8, !dbg !10429
  %3 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10430
  %resume_from = getelementptr inbounds %struct.UrlState, %struct.UrlState* %3, i32 0, i32 43, !dbg !10431
  store i64 %2, i64* %resume_from, align 8, !dbg !10432
  %4 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10433
  %resume_from1 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %4, i32 0, i32 43, !dbg !10435
  %5 = load i64, i64* %resume_from1, align 8, !dbg !10435
  %tobool = icmp ne i64 %5, 0, !dbg !10433
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10436

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10437
  %set2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 13, !dbg !10439
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set2, i32 0, i32 128, !dbg !10440
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 23, !dbg !10437
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !10437
  %tobool3 = icmp ne i8* %7, null, !dbg !10437
  br i1 %tobool3, label %if.then, label %if.else25, !dbg !10441

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10442
  %rangestringalloc = getelementptr inbounds %struct.UrlState, %struct.UrlState* %8, i32 0, i32 41, !dbg !10445
  %9 = load i8, i8* %rangestringalloc, align 2, !dbg !10445
  %tobool4 = trunc i8 %9 to i1, !dbg !10445
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10446

if.then5:                                         ; preds = %if.then
  %10 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !10447
  %11 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10447
  %range = getelementptr inbounds %struct.UrlState, %struct.UrlState* %11, i32 0, i32 42, !dbg !10447
  %12 = load i8*, i8** %range, align 8, !dbg !10447
  call void %10(i8* %12), !dbg !10447
  br label %if.end, !dbg !10447

if.end:                                           ; preds = %if.then5, %if.then
  %13 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10448
  %resume_from6 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %13, i32 0, i32 43, !dbg !10450
  %14 = load i64, i64* %resume_from6, align 8, !dbg !10450
  %tobool7 = icmp ne i64 %14, 0, !dbg !10448
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10451

if.then8:                                         ; preds = %if.end
  %15 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10452
  %resume_from9 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %15, i32 0, i32 43, !dbg !10453
  %16 = load i64, i64* %resume_from9, align 8, !dbg !10453
  %call = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i32 0, i32 0), i64 %16), !dbg !10454
  %17 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10455
  %range10 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %17, i32 0, i32 42, !dbg !10456
  store i8* %call, i8** %range10, align 8, !dbg !10457
  br label %if.end16, !dbg !10455

if.else:                                          ; preds = %if.end
  %18 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !10458
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10458
  %set11 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %19, i32 0, i32 13, !dbg !10458
  %str12 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set11, i32 0, i32 128, !dbg !10458
  %arrayidx13 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str12, i64 0, i64 23, !dbg !10458
  %20 = load i8*, i8** %arrayidx13, align 8, !dbg !10458
  %call14 = call i8* %18(i8* %20), !dbg !10458
  %21 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10459
  %range15 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %21, i32 0, i32 42, !dbg !10460
  store i8* %call14, i8** %range15, align 8, !dbg !10461
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then8
  %22 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10462
  %range17 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %22, i32 0, i32 42, !dbg !10463
  %23 = load i8*, i8** %range17, align 8, !dbg !10463
  %tobool18 = icmp ne i8* %23, null, !dbg !10464
  %cond = select i1 %tobool18, i32 1, i32 0, !dbg !10464
  %tobool19 = icmp ne i32 %cond, 0, !dbg !10464
  %24 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10465
  %rangestringalloc20 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %24, i32 0, i32 41, !dbg !10466
  %frombool = zext i1 %tobool19 to i8, !dbg !10467
  store i8 %frombool, i8* %rangestringalloc20, align 2, !dbg !10467
  %25 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10468
  %range21 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %25, i32 0, i32 42, !dbg !10470
  %26 = load i8*, i8** %range21, align 8, !dbg !10470
  %tobool22 = icmp ne i8* %26, null, !dbg !10468
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !10471

if.then23:                                        ; preds = %if.end16
  store i32 27, i32* %retval, align 4, !dbg !10472
  br label %return, !dbg !10472

if.end24:                                         ; preds = %if.end16
  %27 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10473
  %use_range = getelementptr inbounds %struct.UrlState, %struct.UrlState* %27, i32 0, i32 40, !dbg !10474
  store i8 1, i8* %use_range, align 1, !dbg !10475
  br label %if.end27, !dbg !10476

if.else25:                                        ; preds = %lor.lhs.false
  %28 = load %struct.UrlState*, %struct.UrlState** %s, align 8, !dbg !10477
  %use_range26 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %28, i32 0, i32 40, !dbg !10478
  store i8 0, i8* %use_range26, align 1, !dbg !10479
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !10480
  br label %return, !dbg !10480

return:                                           ; preds = %if.end27, %if.then23
  %29 = load i32, i32* %retval, align 4, !dbg !10481
  ret i32 %29, !dbg !10481
}

declare void @Curl_setup_transfer(%struct.connectdata*, i32, i64, i1 zeroext, i64*, i32, i64*) #3

declare zeroext i1 @Curl_clone_primary_ssl_config(%struct.ssl_primary_config*, %struct.ssl_primary_config*) #3

; Function Attrs: nounwind uwtable
define internal void @prune_dead_connections(%struct.Curl_easy* %data) #0 !dbg !2204 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %now = alloca %struct.timeval, align 8
  %elapsed = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !10482, metadata !2256), !dbg !10483
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !10484, metadata !2256), !dbg !10485
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !10486
  %0 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !10486
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !10486
  %2 = extractvalue { i64, i64 } %call, 0, !dbg !10486
  store i64 %2, i64* %1, align 8, !dbg !10486
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !10486
  %4 = extractvalue { i64, i64 } %call, 1, !dbg !10486
  store i64 %4, i64* %3, align 8, !dbg !10486
  call void @llvm.dbg.declare(metadata i64* %elapsed, metadata !10487, metadata !2256), !dbg !10488
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10489
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 17, !dbg !10489
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !10489
  %6 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !10489
  %last_cleanup = getelementptr inbounds %struct.conncache, %struct.conncache* %6, i32 0, i32 3, !dbg !10489
  %7 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !10489
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !10489
  %9 = load i64, i64* %8, align 8, !dbg !10489
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !10489
  %11 = load i64, i64* %10, align 8, !dbg !10489
  %12 = bitcast %struct.timeval* %last_cleanup to { i64, i64 }*, !dbg !10489
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !10489
  %14 = load i64, i64* %13, align 8, !dbg !10489
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !10489
  %16 = load i64, i64* %15, align 8, !dbg !10489
  %call1 = call i64 @curlx_tvdiff(i64 %9, i64 %11, i64 %14, i64 %16), !dbg !10489
  store i64 %call1, i64* %elapsed, align 8, !dbg !10488
  %17 = load i64, i64* %elapsed, align 8, !dbg !10490
  %cmp = icmp sge i64 %17, 1000, !dbg !10492
  br i1 %cmp, label %if.then, label %if.end, !dbg !10493

if.then:                                          ; preds = %entry
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10494
  %state2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 17, !dbg !10496
  %conn_cache3 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2, i32 0, i32 0, !dbg !10497
  %19 = load %struct.conncache*, %struct.conncache** %conn_cache3, align 8, !dbg !10497
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10498
  %21 = bitcast %struct.Curl_easy* %20 to i8*, !dbg !10498
  call void @Curl_conncache_foreach(%struct.conncache* %19, i8* %21, i32 (%struct.connectdata*, i8*)* @call_disconnect_if_dead), !dbg !10499
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10500
  %state4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !10501
  %conn_cache5 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state4, i32 0, i32 0, !dbg !10502
  %23 = load %struct.conncache*, %struct.conncache** %conn_cache5, align 8, !dbg !10502
  %last_cleanup6 = getelementptr inbounds %struct.conncache, %struct.conncache* %23, i32 0, i32 3, !dbg !10503
  %24 = bitcast %struct.timeval* %last_cleanup6 to i8*, !dbg !10504
  %25 = bitcast %struct.timeval* %now to i8*, !dbg !10504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false), !dbg !10504
  br label %if.end, !dbg !10505

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10506
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @ConnectionExists(%struct.Curl_easy* %data, %struct.connectdata* %needle, %struct.connectdata** %usethis, i8* %force_reuse, i8* %waitpipe) #0 !dbg !2214 {
entry:
  %retval = alloca i1, align 1
  %data.addr = alloca %struct.Curl_easy*, align 8
  %needle.addr = alloca %struct.connectdata*, align 8
  %usethis.addr = alloca %struct.connectdata**, align 8
  %force_reuse.addr = alloca i8*, align 8
  %waitpipe.addr = alloca i8*, align 8
  %check = alloca %struct.connectdata*, align 8
  %chosen = alloca %struct.connectdata*, align 8
  %foundPendingCandidate = alloca i8, align 1
  %canPipeline = alloca i8, align 1
  %bundle = alloca %struct.connectbundle*, align 8
  %max_pipe_len = alloca i64, align 8
  %best_pipe_len = alloca i64, align 8
  %curr = alloca %struct.curl_llist_element*, align 8
  %match = alloca i8, align 1
  %pipeLen = alloca i64, align 8
  %sh = alloca %struct.Curl_easy*, align 8
  %rh = alloca %struct.Curl_easy*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !10507, metadata !2256), !dbg !10508
  store %struct.connectdata* %needle, %struct.connectdata** %needle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %needle.addr, metadata !10509, metadata !2256), !dbg !10510
  store %struct.connectdata** %usethis, %struct.connectdata*** %usethis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %usethis.addr, metadata !10511, metadata !2256), !dbg !10512
  store i8* %force_reuse, i8** %force_reuse.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %force_reuse.addr, metadata !10513, metadata !2256), !dbg !10514
  store i8* %waitpipe, i8** %waitpipe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %waitpipe.addr, metadata !10515, metadata !2256), !dbg !10516
  call void @llvm.dbg.declare(metadata %struct.connectdata** %check, metadata !10517, metadata !2256), !dbg !10518
  call void @llvm.dbg.declare(metadata %struct.connectdata** %chosen, metadata !10519, metadata !2256), !dbg !10520
  store %struct.connectdata* null, %struct.connectdata** %chosen, align 8, !dbg !10520
  call void @llvm.dbg.declare(metadata i8* %foundPendingCandidate, metadata !10521, metadata !2256), !dbg !10522
  store i8 0, i8* %foundPendingCandidate, align 1, !dbg !10522
  call void @llvm.dbg.declare(metadata i8* %canPipeline, metadata !10523, metadata !2256), !dbg !10524
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10525
  %1 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10526
  %call = call zeroext i1 @IsPipeliningPossible(%struct.Curl_easy* %0, %struct.connectdata* %1), !dbg !10527
  %frombool = zext i1 %call to i8, !dbg !10524
  store i8 %frombool, i8* %canPipeline, align 1, !dbg !10524
  call void @llvm.dbg.declare(metadata %struct.connectbundle** %bundle, metadata !10528, metadata !2256), !dbg !10529
  %2 = load i8*, i8** %force_reuse.addr, align 8, !dbg !10530
  store i8 0, i8* %2, align 1, !dbg !10531
  %3 = load i8*, i8** %waitpipe.addr, align 8, !dbg !10532
  store i8 0, i8* %3, align 1, !dbg !10533
  %4 = load i8, i8* %canPipeline, align 1, !dbg !10534
  %tobool = trunc i8 %4 to i1, !dbg !10534
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10536

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10537
  %6 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10539
  %call1 = call zeroext i1 @Curl_pipeline_site_blacklisted(%struct.Curl_easy* %5, %struct.connectdata* %6), !dbg !10540
  br i1 %call1, label %if.then, label %if.end, !dbg !10541

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %canPipeline, align 1, !dbg !10542
  br label %if.end, !dbg !10544

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10545
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10546
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 17, !dbg !10547
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !10548
  %9 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !10548
  %call2 = call %struct.connectbundle* @Curl_conncache_find_bundle(%struct.connectdata* %7, %struct.conncache* %9), !dbg !10549
  store %struct.connectbundle* %call2, %struct.connectbundle** %bundle, align 8, !dbg !10550
  %10 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10551
  %tobool3 = icmp ne %struct.connectbundle* %10, null, !dbg !10551
  br i1 %tobool3, label %if.then4, label %if.end383, !dbg !10553

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %max_pipe_len, metadata !10554, metadata !2256), !dbg !10556
  %11 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10557
  %multiuse = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %11, i32 0, i32 0, !dbg !10558
  %12 = load i32, i32* %multiuse, align 8, !dbg !10558
  %cmp = icmp ne i32 %12, 2, !dbg !10559
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10560

cond.true:                                        ; preds = %if.then4
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10561
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 9, !dbg !10562
  %14 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !10562
  %call5 = call i64 @max_pipeline_length(%struct.Curl_multi* %14), !dbg !10563
  br label %cond.end, !dbg !10564

cond.false:                                       ; preds = %if.then4
  br label %cond.end, !dbg !10566

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call5, %cond.true ], [ 0, %cond.false ], !dbg !10568
  store i64 %cond, i64* %max_pipe_len, align 8, !dbg !10570
  call void @llvm.dbg.declare(metadata i64* %best_pipe_len, metadata !10571, metadata !2256), !dbg !10572
  %15 = load i64, i64* %max_pipe_len, align 8, !dbg !10573
  store i64 %15, i64* %best_pipe_len, align 8, !dbg !10572
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !10574, metadata !2256), !dbg !10575
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10576
  %17 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10577
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 43, !dbg !10578
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 2, !dbg !10579
  %18 = load i8, i8* %conn_to_host, align 1, !dbg !10579
  %tobool6 = trunc i8 %18 to i1, !dbg !10579
  br i1 %tobool6, label %cond.true7, label %cond.false9, !dbg !10577

cond.true7:                                       ; preds = %cond.end
  %19 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10580
  %conn_to_host8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 14, !dbg !10581
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host8, i32 0, i32 2, !dbg !10582
  %20 = load i8*, i8** %name, align 8, !dbg !10582
  br label %cond.end11, !dbg !10583

cond.false9:                                      ; preds = %cond.end
  %21 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10584
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 12, !dbg !10585
  %name10 = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !10586
  %22 = load i8*, i8** %name10, align 8, !dbg !10586
  br label %cond.end11, !dbg !10587

cond.end11:                                       ; preds = %cond.false9, %cond.true7
  %cond12 = phi i8* [ %20, %cond.true7 ], [ %22, %cond.false9 ], !dbg !10588
  %23 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10589
  %24 = bitcast %struct.connectbundle* %23 to i8*, !dbg !10590
  %25 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10591
  %multiuse13 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %25, i32 0, i32 0, !dbg !10592
  %26 = load i32, i32* %multiuse13, align 8, !dbg !10592
  %cmp14 = icmp eq i32 %26, 1, !dbg !10593
  br i1 %cmp14, label %cond.true15, label %cond.false16, !dbg !10591

cond.true15:                                      ; preds = %cond.end11
  br label %cond.end20, !dbg !10594

cond.false16:                                     ; preds = %cond.end11
  %27 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10595
  %multiuse17 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %27, i32 0, i32 0, !dbg !10596
  %28 = load i32, i32* %multiuse17, align 8, !dbg !10596
  %cmp18 = icmp eq i32 %28, 2, !dbg !10597
  %cond19 = select i1 %cmp18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), !dbg !10595
  br label %cond.end20, !dbg !10598

cond.end20:                                       ; preds = %cond.false16, %cond.true15
  %cond21 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), %cond.true15 ], [ %cond19, %cond.false16 ], !dbg !10599
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.96, i32 0, i32 0), i8* %cond12, i8* %24, i8* %cond21), !dbg !10600
  %29 = load i8, i8* %canPipeline, align 1, !dbg !10601
  %tobool22 = trunc i8 %29 to i1, !dbg !10601
  br i1 %tobool22, label %if.then23, label %if.end48, !dbg !10603

if.then23:                                        ; preds = %cond.end20
  %30 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10604
  %multiuse24 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %30, i32 0, i32 0, !dbg !10607
  %31 = load i32, i32* %multiuse24, align 8, !dbg !10607
  %cmp25 = icmp sle i32 %31, 0, !dbg !10608
  br i1 %cmp25, label %if.then26, label %if.end33, !dbg !10609

if.then26:                                        ; preds = %if.then23
  %32 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10610
  %multiuse27 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %32, i32 0, i32 0, !dbg !10613
  %33 = load i32, i32* %multiuse27, align 8, !dbg !10613
  %cmp28 = icmp eq i32 %33, 0, !dbg !10614
  br i1 %cmp28, label %land.lhs.true29, label %if.end32, !dbg !10615

land.lhs.true29:                                  ; preds = %if.then26
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10616
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 13, !dbg !10618
  %pipewait = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 150, !dbg !10619
  %35 = load i8, i8* %pipewait, align 1, !dbg !10619
  %tobool30 = trunc i8 %35 to i1, !dbg !10619
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10620

if.then31:                                        ; preds = %land.lhs.true29
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10621
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %36, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i32 0, i32 0)), !dbg !10623
  %37 = load i8*, i8** %waitpipe.addr, align 8, !dbg !10624
  store i8 1, i8* %37, align 1, !dbg !10625
  store i1 false, i1* %retval, align 1, !dbg !10626
  br label %return, !dbg !10626

if.end32:                                         ; preds = %land.lhs.true29, %if.then26
  %38 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10627
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %38, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.101, i32 0, i32 0)), !dbg !10628
  store i8 0, i8* %canPipeline, align 1, !dbg !10629
  br label %if.end33, !dbg !10630

if.end33:                                         ; preds = %if.end32, %if.then23
  %39 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10631
  %multiuse34 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %39, i32 0, i32 0, !dbg !10633
  %40 = load i32, i32* %multiuse34, align 8, !dbg !10633
  %cmp35 = icmp eq i32 %40, 1, !dbg !10634
  br i1 %cmp35, label %land.lhs.true36, label %if.else, !dbg !10635

land.lhs.true36:                                  ; preds = %if.end33
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10636
  %multi37 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %41, i32 0, i32 9, !dbg !10637
  %42 = load %struct.Curl_multi*, %struct.Curl_multi** %multi37, align 8, !dbg !10637
  %call38 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %42, i32 1), !dbg !10638
  br i1 %call38, label %if.else, label %if.then39, !dbg !10639

if.then39:                                        ; preds = %land.lhs.true36
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10641
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %43, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.102, i32 0, i32 0)), !dbg !10643
  store i8 0, i8* %canPipeline, align 1, !dbg !10644
  br label %if.end47, !dbg !10645

if.else:                                          ; preds = %land.lhs.true36, %if.end33
  %44 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10646
  %multiuse40 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %44, i32 0, i32 0, !dbg !10648
  %45 = load i32, i32* %multiuse40, align 8, !dbg !10648
  %cmp41 = icmp eq i32 %45, 2, !dbg !10649
  br i1 %cmp41, label %land.lhs.true42, label %if.end46, !dbg !10650

land.lhs.true42:                                  ; preds = %if.else
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10651
  %multi43 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 9, !dbg !10652
  %47 = load %struct.Curl_multi*, %struct.Curl_multi** %multi43, align 8, !dbg !10652
  %call44 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %47, i32 2), !dbg !10653
  br i1 %call44, label %if.end46, label %if.then45, !dbg !10654

if.then45:                                        ; preds = %land.lhs.true42
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10656
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %48, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i32 0, i32 0)), !dbg !10658
  store i8 0, i8* %canPipeline, align 1, !dbg !10659
  br label %if.end46, !dbg !10660

if.end46:                                         ; preds = %if.then45, %land.lhs.true42, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then39
  br label %if.end48, !dbg !10661

if.end48:                                         ; preds = %if.end47, %cond.end20
  %49 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !10662
  %conn_list = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %49, i32 0, i32 2, !dbg !10663
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %conn_list, i32 0, i32 0, !dbg !10664
  %50 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !10664
  store %struct.curl_llist_element* %50, %struct.curl_llist_element** %curr, align 8, !dbg !10665
  br label %while.cond, !dbg !10666

while.cond:                                       ; preds = %if.end382, %if.then376, %if.then370, %if.then367, %do.end349, %do.end, %if.then266, %if.then251, %if.then223, %if.then214, %if.then208, %if.then203, %if.then197, %if.then184, %if.then173, %if.then165, %if.then154, %if.then142, %if.then133, %if.then112, %if.end97, %if.then86, %if.then79, %if.then73, %if.then61, %if.then51, %if.end48
  %51 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !10667
  %tobool49 = icmp ne %struct.curl_llist_element* %51, null, !dbg !10668
  br i1 %tobool49, label %while.body, label %while.end, !dbg !10668

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %match, metadata !10669, metadata !2256), !dbg !10671
  store i8 0, i8* %match, align 1, !dbg !10671
  call void @llvm.dbg.declare(metadata i64* %pipeLen, metadata !10672, metadata !2256), !dbg !10673
  %52 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !10674
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %52, i32 0, i32 0, !dbg !10675
  %53 = load i8*, i8** %ptr, align 8, !dbg !10675
  %54 = bitcast i8* %53 to %struct.connectdata*, !dbg !10674
  store %struct.connectdata* %54, %struct.connectdata** %check, align 8, !dbg !10676
  %55 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !10677
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %55, i32 0, i32 2, !dbg !10678
  %56 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !10678
  store %struct.curl_llist_element* %56, %struct.curl_llist_element** %curr, align 8, !dbg !10679
  %57 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10680
  %58 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10682
  %call50 = call zeroext i1 @disconnect_if_dead(%struct.connectdata* %57, %struct.Curl_easy* %58), !dbg !10683
  br i1 %call50, label %if.then51, label %if.end52, !dbg !10684

if.then51:                                        ; preds = %while.body
  br label %while.cond, !dbg !10685

if.end52:                                         ; preds = %while.body
  %59 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10686
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %59, i32 0, i32 55, !dbg !10687
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !10688
  %60 = load i64, i64* %size, align 8, !dbg !10688
  %61 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10689
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %61, i32 0, i32 56, !dbg !10690
  %size53 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !10691
  %62 = load i64, i64* %size53, align 8, !dbg !10691
  %add = add i64 %60, %62, !dbg !10692
  store i64 %add, i64* %pipeLen, align 8, !dbg !10693
  %63 = load i8, i8* %canPipeline, align 1, !dbg !10694
  %tobool54 = trunc i8 %63 to i1, !dbg !10694
  br i1 %tobool54, label %if.then55, label %if.else84, !dbg !10696

if.then55:                                        ; preds = %if.end52
  %64 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10697
  %bits56 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %64, i32 0, i32 43, !dbg !10700
  %protoconnstart = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits56, i32 0, i32 13, !dbg !10701
  %65 = load i8, i8* %protoconnstart, align 1, !dbg !10701
  %tobool57 = trunc i8 %65 to i1, !dbg !10701
  br i1 %tobool57, label %land.lhs.true58, label %if.end62, !dbg !10702

land.lhs.true58:                                  ; preds = %if.then55
  %66 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10703
  %bits59 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %66, i32 0, i32 43, !dbg !10705
  %close = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits59, i32 0, i32 0, !dbg !10706
  %67 = load i8, i8* %close, align 1, !dbg !10706
  %tobool60 = trunc i8 %67 to i1, !dbg !10706
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !10707

if.then61:                                        ; preds = %land.lhs.true58
  br label %while.cond, !dbg !10708

if.end62:                                         ; preds = %land.lhs.true58, %if.then55
  %68 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10709
  %bits63 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %68, i32 0, i32 43, !dbg !10711
  %multiplex = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits63, i32 0, i32 27, !dbg !10712
  %69 = load i8, i8* %multiplex, align 1, !dbg !10712
  %tobool64 = trunc i8 %69 to i1, !dbg !10712
  br i1 %tobool64, label %if.end83, label %if.then65, !dbg !10713

if.then65:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %sh, metadata !10714, metadata !2256), !dbg !10716
  %70 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10717
  %send_pipe66 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %70, i32 0, i32 55, !dbg !10718
  %call67 = call %struct.Curl_easy* @gethandleathead(%struct.curl_llist* %send_pipe66), !dbg !10719
  store %struct.Curl_easy* %call67, %struct.Curl_easy** %sh, align 8, !dbg !10716
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %rh, metadata !10720, metadata !2256), !dbg !10721
  %71 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10722
  %recv_pipe68 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 56, !dbg !10723
  %call69 = call %struct.Curl_easy* @gethandleathead(%struct.curl_llist* %recv_pipe68), !dbg !10724
  store %struct.Curl_easy* %call69, %struct.Curl_easy** %rh, align 8, !dbg !10721
  %72 = load %struct.Curl_easy*, %struct.Curl_easy** %sh, align 8, !dbg !10725
  %tobool70 = icmp ne %struct.Curl_easy* %72, null, !dbg !10725
  br i1 %tobool70, label %if.then71, label %if.else75, !dbg !10727

if.then71:                                        ; preds = %if.then65
  %73 = load %struct.Curl_easy*, %struct.Curl_easy** %sh, align 8, !dbg !10728
  %74 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10731
  %call72 = call zeroext i1 @IsPipeliningPossible(%struct.Curl_easy* %73, %struct.connectdata* %74), !dbg !10732
  br i1 %call72, label %if.end74, label %if.then73, !dbg !10733

if.then73:                                        ; preds = %if.then71
  br label %while.cond, !dbg !10734

if.end74:                                         ; preds = %if.then71
  br label %if.end82, !dbg !10735

if.else75:                                        ; preds = %if.then65
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %rh, align 8, !dbg !10736
  %tobool76 = icmp ne %struct.Curl_easy* %75, null, !dbg !10736
  br i1 %tobool76, label %if.then77, label %if.end81, !dbg !10738

if.then77:                                        ; preds = %if.else75
  %76 = load %struct.Curl_easy*, %struct.Curl_easy** %rh, align 8, !dbg !10739
  %77 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10742
  %call78 = call zeroext i1 @IsPipeliningPossible(%struct.Curl_easy* %76, %struct.connectdata* %77), !dbg !10743
  br i1 %call78, label %if.end80, label %if.then79, !dbg !10744

if.then79:                                        ; preds = %if.then77
  br label %while.cond, !dbg !10745

if.end80:                                         ; preds = %if.then77
  br label %if.end81, !dbg !10746

if.end81:                                         ; preds = %if.end80, %if.else75
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end74
  br label %if.end83, !dbg !10747

if.end83:                                         ; preds = %if.end82, %if.end62
  br label %if.end99, !dbg !10748

if.else84:                                        ; preds = %if.end52
  %78 = load i64, i64* %pipeLen, align 8, !dbg !10749
  %cmp85 = icmp ugt i64 %78, 0, !dbg !10752
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !10753

if.then86:                                        ; preds = %if.else84
  br label %while.cond, !dbg !10754

if.end87:                                         ; preds = %if.else84
  %79 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10756
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %79, i32 0, i32 33, !dbg !10758
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 0, !dbg !10756
  %80 = load i32, i32* %arrayidx, align 8, !dbg !10756
  %cmp88 = icmp eq i32 %80, -1, !dbg !10759
  br i1 %cmp88, label %if.then92, label %lor.lhs.false, !dbg !10760

lor.lhs.false:                                    ; preds = %if.end87
  %81 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10761
  %bits89 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %81, i32 0, i32 43, !dbg !10762
  %close90 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits89, i32 0, i32 0, !dbg !10763
  %82 = load i8, i8* %close90, align 1, !dbg !10763
  %tobool91 = trunc i8 %82 to i1, !dbg !10763
  br i1 %tobool91, label %if.then92, label %if.end98, !dbg !10764

if.then92:                                        ; preds = %lor.lhs.false, %if.end87
  %83 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10766
  %bits93 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %83, i32 0, i32 43, !dbg !10769
  %close94 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits93, i32 0, i32 0, !dbg !10770
  %84 = load i8, i8* %close94, align 1, !dbg !10770
  %tobool95 = trunc i8 %84 to i1, !dbg !10770
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !10771

if.then96:                                        ; preds = %if.then92
  store i8 1, i8* %foundPendingCandidate, align 1, !dbg !10772
  br label %if.end97, !dbg !10773

if.end97:                                         ; preds = %if.then96, %if.then92
  %85 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !10774
  %86 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10775
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %86, i32 0, i32 5, !dbg !10776
  %87 = load i64, i64* %connection_id, align 8, !dbg !10776
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %85, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.104, i32 0, i32 0), i64 %87), !dbg !10777
  br label %while.cond, !dbg !10778

if.end98:                                         ; preds = %lor.lhs.false
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.end83
  %88 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10779
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %88, i32 0, i32 47, !dbg !10781
  %89 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !10781
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %89, i32 0, i32 16, !dbg !10782
  %90 = load i32, i32* %flags, align 4, !dbg !10782
  %and = and i32 %90, 1, !dbg !10783
  %91 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10784
  %handler100 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %91, i32 0, i32 47, !dbg !10785
  %92 = load %struct.Curl_handler*, %struct.Curl_handler** %handler100, align 8, !dbg !10785
  %flags101 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %92, i32 0, i32 16, !dbg !10786
  %93 = load i32, i32* %flags101, align 4, !dbg !10786
  %and102 = and i32 %93, 1, !dbg !10787
  %cmp103 = icmp ne i32 %and, %and102, !dbg !10788
  br i1 %cmp103, label %if.then104, label %if.end114, !dbg !10789

if.then104:                                       ; preds = %if.end99
  %94 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10790
  %handler105 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %94, i32 0, i32 47, !dbg !10792
  %95 = load %struct.Curl_handler*, %struct.Curl_handler** %handler105, align 8, !dbg !10792
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %95, i32 0, i32 15, !dbg !10793
  %96 = load i32, i32* %protocol, align 8, !dbg !10793
  %call106 = call i32 @get_protocol_family(i32 %96), !dbg !10794
  %97 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10795
  %handler107 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %97, i32 0, i32 47, !dbg !10796
  %98 = load %struct.Curl_handler*, %struct.Curl_handler** %handler107, align 8, !dbg !10796
  %protocol108 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %98, i32 0, i32 15, !dbg !10797
  %99 = load i32, i32* %protocol108, align 8, !dbg !10797
  %cmp109 = icmp ne i32 %call106, %99, !dbg !10798
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110, !dbg !10799

lor.lhs.false110:                                 ; preds = %if.then104
  %100 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10800
  %tls_upgraded = getelementptr inbounds %struct.connectdata, %struct.connectdata* %100, i32 0, i32 42, !dbg !10802
  %101 = load i8, i8* %tls_upgraded, align 8, !dbg !10802
  %tobool111 = trunc i8 %101 to i1, !dbg !10802
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !10803

if.then112:                                       ; preds = %lor.lhs.false110, %if.then104
  br label %while.cond, !dbg !10805

if.end113:                                        ; preds = %lor.lhs.false110
  br label %if.end114, !dbg !10806

if.end114:                                        ; preds = %if.end113, %if.end99
  %102 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10808
  %bits115 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %102, i32 0, i32 43, !dbg !10810
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits115, i32 0, i32 5, !dbg !10811
  %103 = load i8, i8* %httpproxy, align 1, !dbg !10811
  %tobool116 = trunc i8 %103 to i1, !dbg !10811
  %conv = zext i1 %tobool116 to i32, !dbg !10808
  %104 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10812
  %bits117 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %104, i32 0, i32 43, !dbg !10813
  %httpproxy118 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits117, i32 0, i32 5, !dbg !10814
  %105 = load i8, i8* %httpproxy118, align 1, !dbg !10814
  %tobool119 = trunc i8 %105 to i1, !dbg !10814
  %conv120 = zext i1 %tobool119 to i32, !dbg !10812
  %cmp121 = icmp ne i32 %conv, %conv120, !dbg !10815
  br i1 %cmp121, label %if.then133, label %lor.lhs.false123, !dbg !10816

lor.lhs.false123:                                 ; preds = %if.end114
  %106 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10817
  %bits124 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %106, i32 0, i32 43, !dbg !10818
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits124, i32 0, i32 6, !dbg !10819
  %107 = load i8, i8* %socksproxy, align 1, !dbg !10819
  %tobool125 = trunc i8 %107 to i1, !dbg !10819
  %conv126 = zext i1 %tobool125 to i32, !dbg !10817
  %108 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10820
  %bits127 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %108, i32 0, i32 43, !dbg !10821
  %socksproxy128 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits127, i32 0, i32 6, !dbg !10822
  %109 = load i8, i8* %socksproxy128, align 1, !dbg !10822
  %tobool129 = trunc i8 %109 to i1, !dbg !10822
  %conv130 = zext i1 %tobool129 to i32, !dbg !10820
  %cmp131 = icmp ne i32 %conv126, %conv130, !dbg !10823
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !10824

if.then133:                                       ; preds = %lor.lhs.false123, %if.end114
  br label %while.cond, !dbg !10826

if.end134:                                        ; preds = %lor.lhs.false123
  %110 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10827
  %bits135 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %110, i32 0, i32 43, !dbg !10829
  %socksproxy136 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits135, i32 0, i32 6, !dbg !10830
  %111 = load i8, i8* %socksproxy136, align 1, !dbg !10830
  %tobool137 = trunc i8 %111 to i1, !dbg !10830
  br i1 %tobool137, label %land.lhs.true139, label %if.end143, !dbg !10831

land.lhs.true139:                                 ; preds = %if.end134
  %112 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10832
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %112, i32 0, i32 15, !dbg !10834
  %113 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10835
  %socks_proxy140 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %113, i32 0, i32 15, !dbg !10836
  %call141 = call zeroext i1 @proxy_info_matches(%struct.proxy_info* %socks_proxy, %struct.proxy_info* %socks_proxy140), !dbg !10837
  br i1 %call141, label %if.end143, label %if.then142, !dbg !10838

if.then142:                                       ; preds = %land.lhs.true139
  br label %while.cond, !dbg !10839

if.end143:                                        ; preds = %land.lhs.true139, %if.end134
  %114 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10840
  %bits144 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %114, i32 0, i32 43, !dbg !10842
  %conn_to_host145 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits144, i32 0, i32 2, !dbg !10843
  %115 = load i8, i8* %conn_to_host145, align 1, !dbg !10843
  %tobool146 = trunc i8 %115 to i1, !dbg !10843
  %conv147 = zext i1 %tobool146 to i32, !dbg !10840
  %116 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10844
  %bits148 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %116, i32 0, i32 43, !dbg !10845
  %conn_to_host149 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits148, i32 0, i32 2, !dbg !10846
  %117 = load i8, i8* %conn_to_host149, align 1, !dbg !10846
  %tobool150 = trunc i8 %117 to i1, !dbg !10846
  %conv151 = zext i1 %tobool150 to i32, !dbg !10844
  %cmp152 = icmp ne i32 %conv147, %conv151, !dbg !10847
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !10848

if.then154:                                       ; preds = %if.end143
  br label %while.cond, !dbg !10849

if.end155:                                        ; preds = %if.end143
  %118 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10850
  %bits156 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %118, i32 0, i32 43, !dbg !10852
  %conn_to_port = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits156, i32 0, i32 3, !dbg !10853
  %119 = load i8, i8* %conn_to_port, align 1, !dbg !10853
  %tobool157 = trunc i8 %119 to i1, !dbg !10853
  %conv158 = zext i1 %tobool157 to i32, !dbg !10850
  %120 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10854
  %bits159 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %120, i32 0, i32 43, !dbg !10855
  %conn_to_port160 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits159, i32 0, i32 3, !dbg !10856
  %121 = load i8, i8* %conn_to_port160, align 1, !dbg !10856
  %tobool161 = trunc i8 %121 to i1, !dbg !10856
  %conv162 = zext i1 %tobool161 to i32, !dbg !10854
  %cmp163 = icmp ne i32 %conv158, %conv162, !dbg !10857
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !10858

if.then165:                                       ; preds = %if.end155
  br label %while.cond, !dbg !10859

if.end166:                                        ; preds = %if.end155
  %122 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10860
  %bits167 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %122, i32 0, i32 43, !dbg !10862
  %httpproxy168 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits167, i32 0, i32 5, !dbg !10863
  %123 = load i8, i8* %httpproxy168, align 1, !dbg !10863
  %tobool169 = trunc i8 %123 to i1, !dbg !10863
  br i1 %tobool169, label %if.then170, label %if.end218, !dbg !10864

if.then170:                                       ; preds = %if.end166
  %124 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10865
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %124, i32 0, i32 16, !dbg !10868
  %125 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10869
  %http_proxy171 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %125, i32 0, i32 16, !dbg !10870
  %call172 = call zeroext i1 @proxy_info_matches(%struct.proxy_info* %http_proxy, %struct.proxy_info* %http_proxy171), !dbg !10871
  br i1 %call172, label %if.end174, label %if.then173, !dbg !10872

if.then173:                                       ; preds = %if.then170
  br label %while.cond, !dbg !10873

if.end174:                                        ; preds = %if.then170
  %126 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10874
  %bits175 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %126, i32 0, i32 43, !dbg !10876
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits175, i32 0, i32 15, !dbg !10877
  %127 = load i8, i8* %tunnel_proxy, align 1, !dbg !10877
  %tobool176 = trunc i8 %127 to i1, !dbg !10877
  %conv177 = zext i1 %tobool176 to i32, !dbg !10874
  %128 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10878
  %bits178 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %128, i32 0, i32 43, !dbg !10879
  %tunnel_proxy179 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits178, i32 0, i32 15, !dbg !10880
  %129 = load i8, i8* %tunnel_proxy179, align 1, !dbg !10880
  %tobool180 = trunc i8 %129 to i1, !dbg !10880
  %conv181 = zext i1 %tobool180 to i32, !dbg !10878
  %cmp182 = icmp ne i32 %conv177, %conv181, !dbg !10881
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !10882

if.then184:                                       ; preds = %if.end174
  br label %while.cond, !dbg !10883

if.end185:                                        ; preds = %if.end174
  %130 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10884
  %http_proxy186 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %130, i32 0, i32 16, !dbg !10886
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy186, i32 0, i32 2, !dbg !10887
  %131 = load i32, i32* %proxytype, align 8, !dbg !10887
  %cmp187 = icmp eq i32 %131, 2, !dbg !10888
  br i1 %cmp187, label %if.then189, label %if.end217, !dbg !10889

if.then189:                                       ; preds = %if.end185
  %132 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10890
  %handler190 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %132, i32 0, i32 47, !dbg !10893
  %133 = load %struct.Curl_handler*, %struct.Curl_handler** %handler190, align 8, !dbg !10893
  %flags191 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %133, i32 0, i32 16, !dbg !10894
  %134 = load i32, i32* %flags191, align 4, !dbg !10894
  %and192 = and i32 %134, 1, !dbg !10895
  %tobool193 = icmp ne i32 %and192, 0, !dbg !10895
  br i1 %tobool193, label %if.then194, label %if.else205, !dbg !10896

if.then194:                                       ; preds = %if.then189
  %135 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10897
  %proxy_ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %135, i32 0, i32 41, !dbg !10900
  %136 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10901
  %proxy_ssl_config195 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %136, i32 0, i32 41, !dbg !10902
  %call196 = call zeroext i1 @Curl_ssl_config_matches(%struct.ssl_primary_config* %proxy_ssl_config, %struct.ssl_primary_config* %proxy_ssl_config195), !dbg !10903
  br i1 %call196, label %if.end198, label %if.then197, !dbg !10904

if.then197:                                       ; preds = %if.then194
  br label %while.cond, !dbg !10905

if.end198:                                        ; preds = %if.then194
  %137 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10906
  %proxy_ssl = getelementptr inbounds %struct.connectdata, %struct.connectdata* %137, i32 0, i32 39, !dbg !10908
  %arrayidx199 = getelementptr inbounds [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data]* %proxy_ssl, i64 0, i64 0, !dbg !10906
  %state200 = getelementptr inbounds %struct.ssl_connect_data, %struct.ssl_connect_data* %arrayidx199, i32 0, i32 1, !dbg !10909
  %138 = load i32, i32* %state200, align 4, !dbg !10909
  %cmp201 = icmp ne i32 %138, 2, !dbg !10910
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !10911

if.then203:                                       ; preds = %if.end198
  br label %while.cond, !dbg !10912

if.end204:                                        ; preds = %if.end198
  br label %if.end216, !dbg !10913

if.else205:                                       ; preds = %if.then189
  %139 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10914
  %ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %139, i32 0, i32 40, !dbg !10917
  %140 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10918
  %ssl_config206 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %140, i32 0, i32 40, !dbg !10919
  %call207 = call zeroext i1 @Curl_ssl_config_matches(%struct.ssl_primary_config* %ssl_config, %struct.ssl_primary_config* %ssl_config206), !dbg !10920
  br i1 %call207, label %if.end209, label %if.then208, !dbg !10921

if.then208:                                       ; preds = %if.else205
  br label %while.cond, !dbg !10922

if.end209:                                        ; preds = %if.else205
  %141 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10923
  %ssl = getelementptr inbounds %struct.connectdata, %struct.connectdata* %141, i32 0, i32 38, !dbg !10925
  %arrayidx210 = getelementptr inbounds [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data]* %ssl, i64 0, i64 0, !dbg !10923
  %state211 = getelementptr inbounds %struct.ssl_connect_data, %struct.ssl_connect_data* %arrayidx210, i32 0, i32 1, !dbg !10926
  %142 = load i32, i32* %state211, align 4, !dbg !10926
  %cmp212 = icmp ne i32 %142, 2, !dbg !10927
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !10928

if.then214:                                       ; preds = %if.end209
  br label %while.cond, !dbg !10929

if.end215:                                        ; preds = %if.end209
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end204
  br label %if.end217, !dbg !10930

if.end217:                                        ; preds = %if.end216, %if.end185
  br label %if.end218, !dbg !10931

if.end218:                                        ; preds = %if.end217, %if.end166
  %143 = load i8, i8* %canPipeline, align 1, !dbg !10932
  %tobool219 = trunc i8 %143 to i1, !dbg !10932
  br i1 %tobool219, label %if.end224, label %land.lhs.true220, !dbg !10934

land.lhs.true220:                                 ; preds = %if.end218
  %144 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10935
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %144, i32 0, i32 4, !dbg !10937
  %145 = load i8, i8* %inuse, align 8, !dbg !10937
  %tobool221 = trunc i8 %145 to i1, !dbg !10937
  br i1 %tobool221, label %if.then223, label %if.end224, !dbg !10938

if.then223:                                       ; preds = %land.lhs.true220
  br label %while.cond, !dbg !10939

if.end224:                                        ; preds = %land.lhs.true220, %if.end218
  %146 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10940
  %localdev = getelementptr inbounds %struct.connectdata, %struct.connectdata* %146, i32 0, i32 69, !dbg !10942
  %147 = load i8*, i8** %localdev, align 8, !dbg !10942
  %tobool225 = icmp ne i8* %147, null, !dbg !10940
  br i1 %tobool225, label %if.then229, label %lor.lhs.false226, !dbg !10943

lor.lhs.false226:                                 ; preds = %if.end224
  %148 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10944
  %localport = getelementptr inbounds %struct.connectdata, %struct.connectdata* %148, i32 0, i32 70, !dbg !10946
  %149 = load i16, i16* %localport, align 8, !dbg !10946
  %conv227 = zext i16 %149 to i32, !dbg !10944
  %tobool228 = icmp ne i32 %conv227, 0, !dbg !10944
  br i1 %tobool228, label %if.then229, label %if.end253, !dbg !10947

if.then229:                                       ; preds = %lor.lhs.false226, %if.end224
  %150 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10948
  %localport230 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %150, i32 0, i32 70, !dbg !10951
  %151 = load i16, i16* %localport230, align 8, !dbg !10951
  %conv231 = zext i16 %151 to i32, !dbg !10948
  %152 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10952
  %localport232 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %152, i32 0, i32 70, !dbg !10953
  %153 = load i16, i16* %localport232, align 8, !dbg !10953
  %conv233 = zext i16 %153 to i32, !dbg !10952
  %cmp234 = icmp ne i32 %conv231, %conv233, !dbg !10954
  br i1 %cmp234, label %if.then251, label %lor.lhs.false236, !dbg !10955

lor.lhs.false236:                                 ; preds = %if.then229
  %154 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10956
  %localportrange = getelementptr inbounds %struct.connectdata, %struct.connectdata* %154, i32 0, i32 71, !dbg !10957
  %155 = load i32, i32* %localportrange, align 4, !dbg !10957
  %156 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10958
  %localportrange237 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %156, i32 0, i32 71, !dbg !10959
  %157 = load i32, i32* %localportrange237, align 4, !dbg !10959
  %cmp238 = icmp ne i32 %155, %157, !dbg !10960
  br i1 %cmp238, label %if.then251, label %lor.lhs.false240, !dbg !10961

lor.lhs.false240:                                 ; preds = %lor.lhs.false236
  %158 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10962
  %localdev241 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %158, i32 0, i32 69, !dbg !10963
  %159 = load i8*, i8** %localdev241, align 8, !dbg !10963
  %tobool242 = icmp ne i8* %159, null, !dbg !10962
  br i1 %tobool242, label %land.lhs.true243, label %if.end252, !dbg !10964

land.lhs.true243:                                 ; preds = %lor.lhs.false240
  %160 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10965
  %localdev244 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %160, i32 0, i32 69, !dbg !10966
  %161 = load i8*, i8** %localdev244, align 8, !dbg !10966
  %tobool245 = icmp ne i8* %161, null, !dbg !10965
  br i1 %tobool245, label %lor.lhs.false246, label %if.then251, !dbg !10967

lor.lhs.false246:                                 ; preds = %land.lhs.true243
  %162 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10968
  %localdev247 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %162, i32 0, i32 69, !dbg !10970
  %163 = load i8*, i8** %localdev247, align 8, !dbg !10970
  %164 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10971
  %localdev248 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %164, i32 0, i32 69, !dbg !10972
  %165 = load i8*, i8** %localdev248, align 8, !dbg !10972
  %call249 = call i32 @strcmp(i8* %163, i8* %165) #7, !dbg !10973
  %tobool250 = icmp ne i32 %call249, 0, !dbg !10973
  br i1 %tobool250, label %if.then251, label %if.end252, !dbg !10974

if.then251:                                       ; preds = %lor.lhs.false246, %land.lhs.true243, %lor.lhs.false236, %if.then229
  br label %while.cond, !dbg !10976

if.end252:                                        ; preds = %lor.lhs.false246, %lor.lhs.false240
  br label %if.end253, !dbg !10977

if.end253:                                        ; preds = %if.end252, %lor.lhs.false226
  %166 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10978
  %handler254 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %166, i32 0, i32 47, !dbg !10980
  %167 = load %struct.Curl_handler*, %struct.Curl_handler** %handler254, align 8, !dbg !10980
  %flags255 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %167, i32 0, i32 16, !dbg !10981
  %168 = load i32, i32* %flags255, align 4, !dbg !10981
  %and256 = and i32 %168, 128, !dbg !10982
  %tobool257 = icmp ne i32 %and256, 0, !dbg !10982
  br i1 %tobool257, label %if.end268, label %if.then258, !dbg !10983

if.then258:                                       ; preds = %if.end253
  %169 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10984
  %user = getelementptr inbounds %struct.connectdata, %struct.connectdata* %169, i32 0, i32 25, !dbg !10987
  %170 = load i8*, i8** %user, align 8, !dbg !10987
  %171 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10988
  %user259 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %171, i32 0, i32 25, !dbg !10989
  %172 = load i8*, i8** %user259, align 8, !dbg !10989
  %call260 = call i32 @strcmp(i8* %170, i8* %172) #7, !dbg !10990
  %tobool261 = icmp ne i32 %call260, 0, !dbg !10990
  br i1 %tobool261, label %if.then266, label %lor.lhs.false262, !dbg !10991

lor.lhs.false262:                                 ; preds = %if.then258
  %173 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !10992
  %passwd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %173, i32 0, i32 26, !dbg !10993
  %174 = load i8*, i8** %passwd, align 8, !dbg !10993
  %175 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !10994
  %passwd263 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %175, i32 0, i32 26, !dbg !10995
  %176 = load i8*, i8** %passwd263, align 8, !dbg !10995
  %call264 = call i32 @strcmp(i8* %174, i8* %176) #7, !dbg !10996
  %tobool265 = icmp ne i32 %call264, 0, !dbg !10996
  br i1 %tobool265, label %if.then266, label %if.end267, !dbg !10997

if.then266:                                       ; preds = %lor.lhs.false262, %if.then258
  br label %while.cond, !dbg !10999

if.end267:                                        ; preds = %lor.lhs.false262
  br label %if.end268, !dbg !11001

if.end268:                                        ; preds = %if.end267, %if.end253
  %177 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11002
  %bits269 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %177, i32 0, i32 43, !dbg !11004
  %httpproxy270 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits269, i32 0, i32 5, !dbg !11005
  %178 = load i8, i8* %httpproxy270, align 1, !dbg !11005
  %tobool271 = trunc i8 %178 to i1, !dbg !11005
  br i1 %tobool271, label %lor.lhs.false272, label %if.then282, !dbg !11006

lor.lhs.false272:                                 ; preds = %if.end268
  %179 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11007
  %handler273 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %179, i32 0, i32 47, !dbg !11009
  %180 = load %struct.Curl_handler*, %struct.Curl_handler** %handler273, align 8, !dbg !11009
  %flags274 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %180, i32 0, i32 16, !dbg !11010
  %181 = load i32, i32* %flags274, align 4, !dbg !11010
  %and275 = and i32 %181, 1, !dbg !11011
  %tobool276 = icmp ne i32 %and275, 0, !dbg !11011
  br i1 %tobool276, label %if.then282, label %lor.lhs.false277, !dbg !11012

lor.lhs.false277:                                 ; preds = %lor.lhs.false272
  %182 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11013
  %bits278 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %182, i32 0, i32 43, !dbg !11014
  %tunnel_proxy279 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits278, i32 0, i32 15, !dbg !11015
  %183 = load i8, i8* %tunnel_proxy279, align 1, !dbg !11015
  %tobool280 = trunc i8 %183 to i1, !dbg !11015
  br i1 %tobool280, label %if.then282, label %if.else353, !dbg !11016

if.then282:                                       ; preds = %lor.lhs.false277, %lor.lhs.false272, %if.end268
  %184 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11018
  %handler283 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %184, i32 0, i32 47, !dbg !11018
  %185 = load %struct.Curl_handler*, %struct.Curl_handler** %handler283, align 8, !dbg !11018
  %scheme = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %185, i32 0, i32 0, !dbg !11018
  %186 = load i8*, i8** %scheme, align 8, !dbg !11018
  %187 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11018
  %handler284 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %187, i32 0, i32 47, !dbg !11018
  %188 = load %struct.Curl_handler*, %struct.Curl_handler** %handler284, align 8, !dbg !11018
  %scheme285 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %188, i32 0, i32 0, !dbg !11018
  %189 = load i8*, i8** %scheme285, align 8, !dbg !11018
  %call286 = call i32 @Curl_strcasecompare(i8* %186, i8* %189), !dbg !11018
  %tobool287 = icmp ne i32 %call286, 0, !dbg !11018
  br i1 %tobool287, label %land.lhs.true300, label %lor.lhs.false288, !dbg !11021

lor.lhs.false288:                                 ; preds = %if.then282
  %190 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11022
  %handler289 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %190, i32 0, i32 47, !dbg !11023
  %191 = load %struct.Curl_handler*, %struct.Curl_handler** %handler289, align 8, !dbg !11023
  %protocol290 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %191, i32 0, i32 15, !dbg !11024
  %192 = load i32, i32* %protocol290, align 8, !dbg !11024
  %call291 = call i32 @get_protocol_family(i32 %192), !dbg !11025
  %193 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11026
  %handler292 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %193, i32 0, i32 47, !dbg !11027
  %194 = load %struct.Curl_handler*, %struct.Curl_handler** %handler292, align 8, !dbg !11027
  %protocol293 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %194, i32 0, i32 15, !dbg !11028
  %195 = load i32, i32* %protocol293, align 8, !dbg !11028
  %cmp294 = icmp eq i32 %call291, %195, !dbg !11029
  br i1 %cmp294, label %land.lhs.true296, label %if.end352, !dbg !11030

land.lhs.true296:                                 ; preds = %lor.lhs.false288
  %196 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11031
  %tls_upgraded297 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %196, i32 0, i32 42, !dbg !11033
  %197 = load i8, i8* %tls_upgraded297, align 8, !dbg !11033
  %tobool298 = trunc i8 %197 to i1, !dbg !11033
  br i1 %tobool298, label %land.lhs.true300, label %if.end352, !dbg !11034

land.lhs.true300:                                 ; preds = %land.lhs.true296, %if.then282
  %198 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11035
  %bits301 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %198, i32 0, i32 43, !dbg !11036
  %conn_to_host302 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits301, i32 0, i32 2, !dbg !11037
  %199 = load i8, i8* %conn_to_host302, align 1, !dbg !11037
  %tobool303 = trunc i8 %199 to i1, !dbg !11037
  br i1 %tobool303, label %lor.lhs.false304, label %land.lhs.true311, !dbg !11038

lor.lhs.false304:                                 ; preds = %land.lhs.true300
  %200 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11039
  %conn_to_host305 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %200, i32 0, i32 14, !dbg !11039
  %name306 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host305, i32 0, i32 2, !dbg !11039
  %201 = load i8*, i8** %name306, align 8, !dbg !11039
  %202 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11039
  %conn_to_host307 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %202, i32 0, i32 14, !dbg !11039
  %name308 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host307, i32 0, i32 2, !dbg !11039
  %203 = load i8*, i8** %name308, align 8, !dbg !11039
  %call309 = call i32 @Curl_strcasecompare(i8* %201, i8* %203), !dbg !11039
  %tobool310 = icmp ne i32 %call309, 0, !dbg !11039
  br i1 %tobool310, label %land.lhs.true311, label %if.end352, !dbg !11040

land.lhs.true311:                                 ; preds = %lor.lhs.false304, %land.lhs.true300
  %204 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11041
  %bits312 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %204, i32 0, i32 43, !dbg !11042
  %conn_to_port313 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits312, i32 0, i32 3, !dbg !11043
  %205 = load i8, i8* %conn_to_port313, align 1, !dbg !11043
  %tobool314 = trunc i8 %205 to i1, !dbg !11043
  br i1 %tobool314, label %lor.lhs.false315, label %land.lhs.true320, !dbg !11044

lor.lhs.false315:                                 ; preds = %land.lhs.true311
  %206 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11045
  %conn_to_port316 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %206, i32 0, i32 19, !dbg !11046
  %207 = load i32, i32* %conn_to_port316, align 4, !dbg !11046
  %208 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11047
  %conn_to_port317 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %208, i32 0, i32 19, !dbg !11048
  %209 = load i32, i32* %conn_to_port317, align 4, !dbg !11048
  %cmp318 = icmp eq i32 %207, %209, !dbg !11049
  br i1 %cmp318, label %land.lhs.true320, label %if.end352, !dbg !11050

land.lhs.true320:                                 ; preds = %lor.lhs.false315, %land.lhs.true311
  %210 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11051
  %host321 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %210, i32 0, i32 12, !dbg !11051
  %name322 = getelementptr inbounds %struct.hostname, %struct.hostname* %host321, i32 0, i32 2, !dbg !11051
  %211 = load i8*, i8** %name322, align 8, !dbg !11051
  %212 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11051
  %host323 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %212, i32 0, i32 12, !dbg !11051
  %name324 = getelementptr inbounds %struct.hostname, %struct.hostname* %host323, i32 0, i32 2, !dbg !11051
  %213 = load i8*, i8** %name324, align 8, !dbg !11051
  %call325 = call i32 @Curl_strcasecompare(i8* %211, i8* %213), !dbg !11051
  %tobool326 = icmp ne i32 %call325, 0, !dbg !11051
  br i1 %tobool326, label %land.lhs.true327, label %if.end352, !dbg !11052

land.lhs.true327:                                 ; preds = %land.lhs.true320
  %214 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11053
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %214, i32 0, i32 18, !dbg !11054
  %215 = load i32, i32* %remote_port, align 8, !dbg !11054
  %216 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11055
  %remote_port328 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %216, i32 0, i32 18, !dbg !11056
  %217 = load i32, i32* %remote_port328, align 8, !dbg !11056
  %cmp329 = icmp eq i32 %215, %217, !dbg !11057
  br i1 %cmp329, label %if.then331, label %if.end352, !dbg !11058

if.then331:                                       ; preds = %land.lhs.true327
  %218 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11060
  %handler332 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %218, i32 0, i32 47, !dbg !11063
  %219 = load %struct.Curl_handler*, %struct.Curl_handler** %handler332, align 8, !dbg !11063
  %flags333 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %219, i32 0, i32 16, !dbg !11064
  %220 = load i32, i32* %flags333, align 4, !dbg !11064
  %and334 = and i32 %220, 1, !dbg !11065
  %tobool335 = icmp ne i32 %and334, 0, !dbg !11065
  br i1 %tobool335, label %if.then336, label %if.end351, !dbg !11066

if.then336:                                       ; preds = %if.then331
  %221 = load %struct.connectdata*, %struct.connectdata** %needle.addr, align 8, !dbg !11067
  %ssl_config337 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %221, i32 0, i32 40, !dbg !11070
  %222 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11071
  %ssl_config338 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %222, i32 0, i32 40, !dbg !11072
  %call339 = call zeroext i1 @Curl_ssl_config_matches(%struct.ssl_primary_config* %ssl_config337, %struct.ssl_primary_config* %ssl_config338), !dbg !11073
  br i1 %call339, label %if.end341, label %if.then340, !dbg !11074

if.then340:                                       ; preds = %if.then336
  br label %do.body, !dbg !11075

do.body:                                          ; preds = %if.then340
  br label %do.end, !dbg !11077

do.end:                                           ; preds = %do.body
  br label %while.cond, !dbg !11080

if.end341:                                        ; preds = %if.then336
  %223 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11081
  %ssl342 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %223, i32 0, i32 38, !dbg !11083
  %arrayidx343 = getelementptr inbounds [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data]* %ssl342, i64 0, i64 0, !dbg !11081
  %state344 = getelementptr inbounds %struct.ssl_connect_data, %struct.ssl_connect_data* %arrayidx343, i32 0, i32 1, !dbg !11084
  %224 = load i32, i32* %state344, align 4, !dbg !11084
  %cmp345 = icmp ne i32 %224, 2, !dbg !11085
  br i1 %cmp345, label %if.then347, label %if.end350, !dbg !11086

if.then347:                                       ; preds = %if.end341
  store i8 1, i8* %foundPendingCandidate, align 1, !dbg !11087
  br label %do.body348, !dbg !11089

do.body348:                                       ; preds = %if.then347
  br label %do.end349, !dbg !11090

do.end349:                                        ; preds = %do.body348
  br label %while.cond, !dbg !11093

if.end350:                                        ; preds = %if.end341
  br label %if.end351, !dbg !11094

if.end351:                                        ; preds = %if.end350, %if.then331
  store i8 1, i8* %match, align 1, !dbg !11095
  br label %if.end352, !dbg !11096

if.end352:                                        ; preds = %if.end351, %land.lhs.true327, %land.lhs.true320, %lor.lhs.false315, %lor.lhs.false304, %land.lhs.true296, %lor.lhs.false288
  br label %if.end354, !dbg !11097

if.else353:                                       ; preds = %lor.lhs.false277
  store i8 1, i8* %match, align 1, !dbg !11098
  br label %if.end354

if.end354:                                        ; preds = %if.else353, %if.end352
  %225 = load i8, i8* %match, align 1, !dbg !11100
  %tobool355 = trunc i8 %225 to i1, !dbg !11100
  br i1 %tobool355, label %if.then356, label %if.end382, !dbg !11102

if.then356:                                       ; preds = %if.end354
  %226 = load i8, i8* %canPipeline, align 1, !dbg !11103
  %tobool357 = trunc i8 %226 to i1, !dbg !11103
  br i1 %tobool357, label %if.then358, label %if.else380, !dbg !11106

if.then358:                                       ; preds = %if.then356
  %227 = load i64, i64* %pipeLen, align 8, !dbg !11107
  %cmp359 = icmp eq i64 %227, 0, !dbg !11110
  br i1 %cmp359, label %if.then361, label %if.end362, !dbg !11111

if.then361:                                       ; preds = %if.then358
  %228 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11112
  store %struct.connectdata* %228, %struct.connectdata** %chosen, align 8, !dbg !11114
  br label %while.end, !dbg !11115

if.end362:                                        ; preds = %if.then358
  %229 = load i64, i64* %max_pipe_len, align 8, !dbg !11116
  %tobool363 = icmp ne i64 %229, 0, !dbg !11116
  br i1 %tobool363, label %land.lhs.true364, label %if.end368, !dbg !11118

land.lhs.true364:                                 ; preds = %if.end362
  %230 = load i64, i64* %pipeLen, align 8, !dbg !11119
  %231 = load i64, i64* %max_pipe_len, align 8, !dbg !11121
  %cmp365 = icmp uge i64 %230, %231, !dbg !11122
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !11123

if.then367:                                       ; preds = %land.lhs.true364
  %232 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11124
  %233 = load i64, i64* %pipeLen, align 8, !dbg !11126
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %232, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.105, i32 0, i32 0), i64 %233), !dbg !11127
  br label %while.cond, !dbg !11128

if.end368:                                        ; preds = %land.lhs.true364, %if.end362
  %234 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11129
  %235 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11131
  %call369 = call zeroext i1 @Curl_pipeline_penalized(%struct.Curl_easy* %234, %struct.connectdata* %235), !dbg !11132
  br i1 %call369, label %if.then370, label %if.end371, !dbg !11133

if.then370:                                       ; preds = %if.end368
  %236 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11134
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %236, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.106, i32 0, i32 0)), !dbg !11136
  br label %while.cond, !dbg !11137

if.end371:                                        ; preds = %if.end368
  %237 = load i64, i64* %max_pipe_len, align 8, !dbg !11138
  %tobool372 = icmp ne i64 %237, 0, !dbg !11138
  br i1 %tobool372, label %if.then373, label %if.else378, !dbg !11140

if.then373:                                       ; preds = %if.end371
  %238 = load i64, i64* %pipeLen, align 8, !dbg !11141
  %239 = load i64, i64* %best_pipe_len, align 8, !dbg !11144
  %cmp374 = icmp ult i64 %238, %239, !dbg !11145
  br i1 %cmp374, label %if.then376, label %if.end377, !dbg !11146

if.then376:                                       ; preds = %if.then373
  %240 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11147
  store %struct.connectdata* %240, %struct.connectdata** %chosen, align 8, !dbg !11149
  %241 = load i64, i64* %pipeLen, align 8, !dbg !11150
  store i64 %241, i64* %best_pipe_len, align 8, !dbg !11151
  br label %while.cond, !dbg !11152

if.end377:                                        ; preds = %if.then373
  br label %if.end379, !dbg !11153

if.else378:                                       ; preds = %if.end371
  %242 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11154
  store %struct.connectdata* %242, %struct.connectdata** %chosen, align 8, !dbg !11156
  %243 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11157
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %243, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i32 0, i32 0)), !dbg !11158
  br label %while.end, !dbg !11159

if.end379:                                        ; preds = %if.end377
  br label %if.end381, !dbg !11160

if.else380:                                       ; preds = %if.then356
  %244 = load %struct.connectdata*, %struct.connectdata** %check, align 8, !dbg !11161
  store %struct.connectdata* %244, %struct.connectdata** %chosen, align 8, !dbg !11163
  br label %while.end, !dbg !11164

if.end381:                                        ; preds = %if.end379
  br label %if.end382, !dbg !11165

if.end382:                                        ; preds = %if.end381, %if.end354
  br label %while.cond, !dbg !11166

while.end:                                        ; preds = %if.else380, %if.else378, %if.then361, %while.cond
  br label %if.end383, !dbg !11167

if.end383:                                        ; preds = %while.end, %if.end
  %245 = load %struct.connectdata*, %struct.connectdata** %chosen, align 8, !dbg !11168
  %tobool384 = icmp ne %struct.connectdata* %245, null, !dbg !11168
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !11170

if.then385:                                       ; preds = %if.end383
  %246 = load %struct.connectdata*, %struct.connectdata** %chosen, align 8, !dbg !11171
  %247 = load %struct.connectdata**, %struct.connectdata*** %usethis.addr, align 8, !dbg !11173
  store %struct.connectdata* %246, %struct.connectdata** %247, align 8, !dbg !11174
  store i1 true, i1* %retval, align 1, !dbg !11175
  br label %return, !dbg !11175

if.end386:                                        ; preds = %if.end383
  %248 = load i8, i8* %foundPendingCandidate, align 1, !dbg !11176
  %tobool387 = trunc i8 %248 to i1, !dbg !11176
  br i1 %tobool387, label %land.lhs.true389, label %if.end395, !dbg !11178

land.lhs.true389:                                 ; preds = %if.end386
  %249 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11179
  %set390 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %249, i32 0, i32 13, !dbg !11181
  %pipewait391 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set390, i32 0, i32 150, !dbg !11182
  %250 = load i8, i8* %pipewait391, align 1, !dbg !11182
  %tobool392 = trunc i8 %250 to i1, !dbg !11182
  br i1 %tobool392, label %if.then394, label %if.end395, !dbg !11183

if.then394:                                       ; preds = %land.lhs.true389
  %251 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11184
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %251, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.108, i32 0, i32 0)), !dbg !11186
  %252 = load i8*, i8** %waitpipe.addr, align 8, !dbg !11187
  store i8 1, i8* %252, align 1, !dbg !11188
  br label %if.end395, !dbg !11189

if.end395:                                        ; preds = %if.then394, %land.lhs.true389, %if.end386
  store i1 false, i1* %retval, align 1, !dbg !11190
  br label %return, !dbg !11190

return:                                           ; preds = %if.end395, %if.then385, %if.then31
  %253 = load i1, i1* %retval, align 1, !dbg !11191
  ret i1 %253, !dbg !11191
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @IsPipeliningPossible(%struct.Curl_easy* %handle, %struct.connectdata* %conn) #0 !dbg !2231 {
entry:
  %retval = alloca i1, align 1
  %handle.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %handle, %struct.Curl_easy** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %handle.addr, metadata !11192, metadata !2256), !dbg !11193
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11194, metadata !2256), !dbg !11195
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11196
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 47, !dbg !11198
  %1 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !11198
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %1, i32 0, i32 15, !dbg !11199
  %2 = load i32, i32* %protocol, align 8, !dbg !11199
  %and = and i32 %2, 3, !dbg !11200
  %tobool = icmp ne i32 %and, 0, !dbg !11200
  br i1 %tobool, label %land.lhs.true, label %if.end21, !dbg !11201

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11202
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !11203
  %protoconnstart = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 13, !dbg !11204
  %4 = load i8, i8* %protoconnstart, align 1, !dbg !11204
  %tobool1 = trunc i8 %4 to i1, !dbg !11204
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !11205

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11206
  %bits2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 43, !dbg !11208
  %close = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits2, i32 0, i32 0, !dbg !11209
  %6 = load i8, i8* %close, align 1, !dbg !11209
  %tobool3 = trunc i8 %6 to i1, !dbg !11209
  br i1 %tobool3, label %if.end21, label %if.then, !dbg !11210

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11212
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 9, !dbg !11215
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !11215
  %call = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %8, i32 1), !dbg !11216
  br i1 %call, label %land.lhs.true4, label %if.end, !dbg !11217

land.lhs.true4:                                   ; preds = %if.then
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11218
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 13, !dbg !11219
  %httpversion = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 72, !dbg !11220
  %10 = load i64, i64* %httpversion, align 8, !dbg !11220
  %cmp = icmp ne i64 %10, 1, !dbg !11221
  br i1 %cmp, label %land.lhs.true5, label %if.end, !dbg !11222

land.lhs.true5:                                   ; preds = %land.lhs.true4
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11223
  %set6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 13, !dbg !11224
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set6, i32 0, i32 71, !dbg !11225
  %12 = load i32, i32* %httpreq, align 8, !dbg !11225
  %cmp7 = icmp eq i32 %12, 1, !dbg !11226
  br i1 %cmp7, label %if.then12, label %lor.lhs.false8, !dbg !11227

lor.lhs.false8:                                   ; preds = %land.lhs.true5
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11228
  %set9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 13, !dbg !11229
  %httpreq10 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set9, i32 0, i32 71, !dbg !11230
  %14 = load i32, i32* %httpreq10, align 8, !dbg !11230
  %cmp11 = icmp eq i32 %14, 5, !dbg !11231
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !11232

if.then12:                                        ; preds = %lor.lhs.false8, %land.lhs.true5
  store i1 true, i1* %retval, align 1, !dbg !11234
  br label %return, !dbg !11234

if.end:                                           ; preds = %lor.lhs.false8, %land.lhs.true4, %if.then
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11235
  %multi13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 9, !dbg !11237
  %16 = load %struct.Curl_multi*, %struct.Curl_multi** %multi13, align 8, !dbg !11237
  %call14 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %16, i32 2), !dbg !11238
  br i1 %call14, label %land.lhs.true15, label %if.end20, !dbg !11239

land.lhs.true15:                                  ; preds = %if.end
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %handle.addr, align 8, !dbg !11240
  %set16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !11241
  %httpversion17 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set16, i32 0, i32 72, !dbg !11242
  %18 = load i64, i64* %httpversion17, align 8, !dbg !11242
  %cmp18 = icmp sge i64 %18, 3, !dbg !11243
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11244

if.then19:                                        ; preds = %land.lhs.true15
  store i1 true, i1* %retval, align 1, !dbg !11245
  br label %return, !dbg !11245

if.end20:                                         ; preds = %land.lhs.true15, %if.end
  br label %if.end21, !dbg !11246

if.end21:                                         ; preds = %if.end20, %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !11247
  br label %return, !dbg !11247

return:                                           ; preds = %if.end21, %if.then19, %if.then12
  %19 = load i1, i1* %retval, align 1, !dbg !11248
  ret i1 %19, !dbg !11248
}

; Function Attrs: nounwind uwtable
define internal void @reuse_conn(%struct.connectdata* %old_conn, %struct.connectdata* %conn) #0 !dbg !2236 {
entry:
  %old_conn.addr = alloca %struct.connectdata*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.connectdata* %old_conn, %struct.connectdata** %old_conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %old_conn.addr, metadata !11249, metadata !2256), !dbg !11250
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11251, metadata !2256), !dbg !11252
  %0 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11253
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 16, !dbg !11254
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !11255
  call void @free_fixed_hostname(%struct.hostname* %host), !dbg !11256
  %1 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11257
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 15, !dbg !11258
  %host1 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !11259
  call void @free_fixed_hostname(%struct.hostname* %host1), !dbg !11260
  %2 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11261
  %3 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11261
  %http_proxy2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 16, !dbg !11261
  %host3 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy2, i32 0, i32 0, !dbg !11261
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %host3, i32 0, i32 0, !dbg !11261
  %4 = load i8*, i8** %rawalloc, align 8, !dbg !11261
  call void %2(i8* %4), !dbg !11261
  %5 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11262
  %6 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11262
  %socks_proxy4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 15, !dbg !11262
  %host5 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy4, i32 0, i32 0, !dbg !11262
  %rawalloc6 = getelementptr inbounds %struct.hostname, %struct.hostname* %host5, i32 0, i32 0, !dbg !11262
  %7 = load i8*, i8** %rawalloc6, align 8, !dbg !11262
  call void %5(i8* %7), !dbg !11262
  %8 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11263
  %ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 40, !dbg !11264
  call void @Curl_free_primary_ssl_config(%struct.ssl_primary_config* %ssl_config), !dbg !11265
  %9 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11266
  %proxy_ssl_config = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 41, !dbg !11267
  call void @Curl_free_primary_ssl_config(%struct.ssl_primary_config* %proxy_ssl_config), !dbg !11268
  %10 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11269
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 0, !dbg !11270
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !11270
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11271
  %data7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 0, !dbg !11272
  store %struct.Curl_easy* %11, %struct.Curl_easy** %data7, align 8, !dbg !11273
  %13 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11274
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 43, !dbg !11275
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 7, !dbg !11276
  %14 = load i8, i8* %user_passwd, align 1, !dbg !11276
  %tobool = trunc i8 %14 to i1, !dbg !11276
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11277
  %bits8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 43, !dbg !11278
  %user_passwd9 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits8, i32 0, i32 7, !dbg !11279
  %frombool = zext i1 %tobool to i8, !dbg !11280
  store i8 %frombool, i8* %user_passwd9, align 1, !dbg !11280
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11281
  %bits10 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 43, !dbg !11283
  %user_passwd11 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits10, i32 0, i32 7, !dbg !11284
  %17 = load i8, i8* %user_passwd11, align 1, !dbg !11284
  %tobool12 = trunc i8 %17 to i1, !dbg !11284
  br i1 %tobool12, label %if.then, label %if.end, !dbg !11285

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11286

do.body:                                          ; preds = %if.then
  %18 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11288
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11288
  %user = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 25, !dbg !11288
  %20 = load i8*, i8** %user, align 8, !dbg !11288
  call void %18(i8* %20), !dbg !11288
  %21 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11288
  %user13 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 25, !dbg !11288
  store i8* null, i8** %user13, align 8, !dbg !11288
  br label %do.end, !dbg !11288

do.end:                                           ; preds = %do.body
  br label %do.body14, !dbg !11291

do.body14:                                        ; preds = %do.end
  %22 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11292
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11292
  %passwd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %23, i32 0, i32 26, !dbg !11292
  %24 = load i8*, i8** %passwd, align 8, !dbg !11292
  call void %22(i8* %24), !dbg !11292
  %25 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11292
  %passwd15 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %25, i32 0, i32 26, !dbg !11292
  store i8* null, i8** %passwd15, align 8, !dbg !11292
  br label %do.end16, !dbg !11292

do.end16:                                         ; preds = %do.body14
  %26 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11295
  %user17 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 25, !dbg !11296
  %27 = load i8*, i8** %user17, align 8, !dbg !11296
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11297
  %user18 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 25, !dbg !11298
  store i8* %27, i8** %user18, align 8, !dbg !11299
  %29 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11300
  %passwd19 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %29, i32 0, i32 26, !dbg !11301
  %30 = load i8*, i8** %passwd19, align 8, !dbg !11301
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11302
  %passwd20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 26, !dbg !11303
  store i8* %30, i8** %passwd20, align 8, !dbg !11304
  %32 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11305
  %user21 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 25, !dbg !11306
  store i8* null, i8** %user21, align 8, !dbg !11307
  %33 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11308
  %passwd22 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 26, !dbg !11309
  store i8* null, i8** %passwd22, align 8, !dbg !11310
  br label %if.end, !dbg !11311

if.end:                                           ; preds = %do.end16, %entry
  %34 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11312
  %bits23 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 43, !dbg !11313
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits23, i32 0, i32 8, !dbg !11314
  %35 = load i8, i8* %proxy_user_passwd, align 1, !dbg !11314
  %tobool24 = trunc i8 %35 to i1, !dbg !11314
  %36 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11315
  %bits25 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %36, i32 0, i32 43, !dbg !11316
  %proxy_user_passwd26 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits25, i32 0, i32 8, !dbg !11317
  %frombool27 = zext i1 %tobool24 to i8, !dbg !11318
  store i8 %frombool27, i8* %proxy_user_passwd26, align 1, !dbg !11318
  %37 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11319
  %bits28 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 43, !dbg !11321
  %proxy_user_passwd29 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits28, i32 0, i32 8, !dbg !11322
  %38 = load i8, i8* %proxy_user_passwd29, align 1, !dbg !11322
  %tobool30 = trunc i8 %38 to i1, !dbg !11322
  br i1 %tobool30, label %if.then31, label %if.end80, !dbg !11323

if.then31:                                        ; preds = %if.end
  br label %do.body32, !dbg !11324

do.body32:                                        ; preds = %if.then31
  %39 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11326
  %40 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11326
  %http_proxy33 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %40, i32 0, i32 16, !dbg !11326
  %user34 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy33, i32 0, i32 3, !dbg !11326
  %41 = load i8*, i8** %user34, align 8, !dbg !11326
  call void %39(i8* %41), !dbg !11326
  %42 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11326
  %http_proxy35 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %42, i32 0, i32 16, !dbg !11326
  %user36 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy35, i32 0, i32 3, !dbg !11326
  store i8* null, i8** %user36, align 8, !dbg !11326
  br label %do.end37, !dbg !11326

do.end37:                                         ; preds = %do.body32
  br label %do.body38, !dbg !11329

do.body38:                                        ; preds = %do.end37
  %43 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11330
  %44 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11330
  %socks_proxy39 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 15, !dbg !11330
  %user40 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy39, i32 0, i32 3, !dbg !11330
  %45 = load i8*, i8** %user40, align 8, !dbg !11330
  call void %43(i8* %45), !dbg !11330
  %46 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11330
  %socks_proxy41 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %46, i32 0, i32 15, !dbg !11330
  %user42 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy41, i32 0, i32 3, !dbg !11330
  store i8* null, i8** %user42, align 8, !dbg !11330
  br label %do.end43, !dbg !11330

do.end43:                                         ; preds = %do.body38
  br label %do.body44, !dbg !11333

do.body44:                                        ; preds = %do.end43
  %47 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11334
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11334
  %http_proxy45 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 16, !dbg !11334
  %passwd46 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy45, i32 0, i32 4, !dbg !11334
  %49 = load i8*, i8** %passwd46, align 8, !dbg !11334
  call void %47(i8* %49), !dbg !11334
  %50 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11334
  %http_proxy47 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %50, i32 0, i32 16, !dbg !11334
  %passwd48 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy47, i32 0, i32 4, !dbg !11334
  store i8* null, i8** %passwd48, align 8, !dbg !11334
  br label %do.end49, !dbg !11334

do.end49:                                         ; preds = %do.body44
  br label %do.body50, !dbg !11337

do.body50:                                        ; preds = %do.end49
  %51 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11338
  %52 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11338
  %socks_proxy51 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %52, i32 0, i32 15, !dbg !11338
  %passwd52 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy51, i32 0, i32 4, !dbg !11338
  %53 = load i8*, i8** %passwd52, align 8, !dbg !11338
  call void %51(i8* %53), !dbg !11338
  %54 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11338
  %socks_proxy53 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %54, i32 0, i32 15, !dbg !11338
  %passwd54 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy53, i32 0, i32 4, !dbg !11338
  store i8* null, i8** %passwd54, align 8, !dbg !11338
  br label %do.end55, !dbg !11338

do.end55:                                         ; preds = %do.body50
  %55 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11341
  %http_proxy56 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %55, i32 0, i32 16, !dbg !11342
  %user57 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy56, i32 0, i32 3, !dbg !11343
  %56 = load i8*, i8** %user57, align 8, !dbg !11343
  %57 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11344
  %http_proxy58 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %57, i32 0, i32 16, !dbg !11345
  %user59 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy58, i32 0, i32 3, !dbg !11346
  store i8* %56, i8** %user59, align 8, !dbg !11347
  %58 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11348
  %socks_proxy60 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %58, i32 0, i32 15, !dbg !11349
  %user61 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy60, i32 0, i32 3, !dbg !11350
  %59 = load i8*, i8** %user61, align 8, !dbg !11350
  %60 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11351
  %socks_proxy62 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %60, i32 0, i32 15, !dbg !11352
  %user63 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy62, i32 0, i32 3, !dbg !11353
  store i8* %59, i8** %user63, align 8, !dbg !11354
  %61 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11355
  %http_proxy64 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %61, i32 0, i32 16, !dbg !11356
  %passwd65 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy64, i32 0, i32 4, !dbg !11357
  %62 = load i8*, i8** %passwd65, align 8, !dbg !11357
  %63 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11358
  %http_proxy66 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %63, i32 0, i32 16, !dbg !11359
  %passwd67 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy66, i32 0, i32 4, !dbg !11360
  store i8* %62, i8** %passwd67, align 8, !dbg !11361
  %64 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11362
  %socks_proxy68 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %64, i32 0, i32 15, !dbg !11363
  %passwd69 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy68, i32 0, i32 4, !dbg !11364
  %65 = load i8*, i8** %passwd69, align 8, !dbg !11364
  %66 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11365
  %socks_proxy70 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %66, i32 0, i32 15, !dbg !11366
  %passwd71 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy70, i32 0, i32 4, !dbg !11367
  store i8* %65, i8** %passwd71, align 8, !dbg !11368
  %67 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11369
  %http_proxy72 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %67, i32 0, i32 16, !dbg !11370
  %user73 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy72, i32 0, i32 3, !dbg !11371
  store i8* null, i8** %user73, align 8, !dbg !11372
  %68 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11373
  %socks_proxy74 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %68, i32 0, i32 15, !dbg !11374
  %user75 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy74, i32 0, i32 3, !dbg !11375
  store i8* null, i8** %user75, align 8, !dbg !11376
  %69 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11377
  %http_proxy76 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %69, i32 0, i32 16, !dbg !11378
  %passwd77 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy76, i32 0, i32 4, !dbg !11379
  store i8* null, i8** %passwd77, align 8, !dbg !11380
  %70 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11381
  %socks_proxy78 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %70, i32 0, i32 15, !dbg !11382
  %passwd79 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy78, i32 0, i32 4, !dbg !11383
  store i8* null, i8** %passwd79, align 8, !dbg !11384
  br label %if.end80, !dbg !11385

if.end80:                                         ; preds = %do.end55, %if.end
  %71 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11386
  %host81 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 12, !dbg !11387
  call void @free_fixed_hostname(%struct.hostname* %host81), !dbg !11388
  %72 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11389
  %conn_to_host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %72, i32 0, i32 14, !dbg !11390
  call void @free_fixed_hostname(%struct.hostname* %conn_to_host), !dbg !11391
  br label %do.body82, !dbg !11392

do.body82:                                        ; preds = %if.end80
  %73 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11393
  %74 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11393
  %host83 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %74, i32 0, i32 12, !dbg !11393
  %rawalloc84 = getelementptr inbounds %struct.hostname, %struct.hostname* %host83, i32 0, i32 0, !dbg !11393
  %75 = load i8*, i8** %rawalloc84, align 8, !dbg !11393
  call void %73(i8* %75), !dbg !11393
  %76 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11393
  %host85 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %76, i32 0, i32 12, !dbg !11393
  %rawalloc86 = getelementptr inbounds %struct.hostname, %struct.hostname* %host85, i32 0, i32 0, !dbg !11393
  store i8* null, i8** %rawalloc86, align 8, !dbg !11393
  br label %do.end87, !dbg !11393

do.end87:                                         ; preds = %do.body82
  br label %do.body88, !dbg !11396

do.body88:                                        ; preds = %do.end87
  %77 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11397
  %78 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11397
  %conn_to_host89 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 14, !dbg !11397
  %rawalloc90 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host89, i32 0, i32 0, !dbg !11397
  %79 = load i8*, i8** %rawalloc90, align 8, !dbg !11397
  call void %77(i8* %79), !dbg !11397
  %80 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11397
  %conn_to_host91 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %80, i32 0, i32 14, !dbg !11397
  %rawalloc92 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host91, i32 0, i32 0, !dbg !11397
  store i8* null, i8** %rawalloc92, align 8, !dbg !11397
  br label %do.end93, !dbg !11397

do.end93:                                         ; preds = %do.body88
  %81 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11400
  %host94 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %81, i32 0, i32 12, !dbg !11401
  %82 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11402
  %host95 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %82, i32 0, i32 12, !dbg !11403
  %83 = bitcast %struct.hostname* %host94 to i8*, !dbg !11403
  %84 = bitcast %struct.hostname* %host95 to i8*, !dbg !11403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 32, i32 8, i1 false), !dbg !11403
  %85 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11404
  %bits96 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %85, i32 0, i32 43, !dbg !11405
  %conn_to_host97 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits96, i32 0, i32 2, !dbg !11406
  %86 = load i8, i8* %conn_to_host97, align 1, !dbg !11406
  %tobool98 = trunc i8 %86 to i1, !dbg !11406
  %87 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11407
  %bits99 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %87, i32 0, i32 43, !dbg !11408
  %conn_to_host100 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits99, i32 0, i32 2, !dbg !11409
  %frombool101 = zext i1 %tobool98 to i8, !dbg !11410
  store i8 %frombool101, i8* %conn_to_host100, align 1, !dbg !11410
  %88 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11411
  %conn_to_host102 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %88, i32 0, i32 14, !dbg !11412
  %89 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11413
  %conn_to_host103 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %89, i32 0, i32 14, !dbg !11414
  %90 = bitcast %struct.hostname* %conn_to_host102 to i8*, !dbg !11414
  %91 = bitcast %struct.hostname* %conn_to_host103 to i8*, !dbg !11414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 32, i32 8, i1 false), !dbg !11414
  %92 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11415
  %bits104 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %92, i32 0, i32 43, !dbg !11416
  %conn_to_port = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits104, i32 0, i32 3, !dbg !11417
  %93 = load i8, i8* %conn_to_port, align 1, !dbg !11417
  %tobool105 = trunc i8 %93 to i1, !dbg !11417
  %94 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11418
  %bits106 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %94, i32 0, i32 43, !dbg !11419
  %conn_to_port107 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits106, i32 0, i32 3, !dbg !11420
  %frombool108 = zext i1 %tobool105 to i8, !dbg !11421
  store i8 %frombool108, i8* %conn_to_port107, align 1, !dbg !11421
  %95 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11422
  %conn_to_port109 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %95, i32 0, i32 19, !dbg !11423
  %96 = load i32, i32* %conn_to_port109, align 4, !dbg !11423
  %97 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11424
  %conn_to_port110 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %97, i32 0, i32 19, !dbg !11425
  store i32 %96, i32* %conn_to_port110, align 4, !dbg !11426
  %98 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11427
  call void @Curl_persistconninfo(%struct.connectdata* %98), !dbg !11428
  br label %do.body111, !dbg !11429

do.body111:                                       ; preds = %do.end93
  br label %do.end112, !dbg !11430

do.end112:                                        ; preds = %do.body111
  %99 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11433
  %bits113 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %99, i32 0, i32 43, !dbg !11434
  %reuse = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits113, i32 0, i32 1, !dbg !11435
  store i8 1, i8* %reuse, align 1, !dbg !11436
  br label %do.body114, !dbg !11437

do.body114:                                       ; preds = %do.end112
  %100 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11438
  %101 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11438
  %user115 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %101, i32 0, i32 25, !dbg !11438
  %102 = load i8*, i8** %user115, align 8, !dbg !11438
  call void %100(i8* %102), !dbg !11438
  %103 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11438
  %user116 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %103, i32 0, i32 25, !dbg !11438
  store i8* null, i8** %user116, align 8, !dbg !11438
  br label %do.end117, !dbg !11438

do.end117:                                        ; preds = %do.body114
  br label %do.body118, !dbg !11441

do.body118:                                       ; preds = %do.end117
  %104 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11442
  %105 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11442
  %passwd119 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %105, i32 0, i32 26, !dbg !11442
  %106 = load i8*, i8** %passwd119, align 8, !dbg !11442
  call void %104(i8* %106), !dbg !11442
  %107 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11442
  %passwd120 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %107, i32 0, i32 26, !dbg !11442
  store i8* null, i8** %passwd120, align 8, !dbg !11442
  br label %do.end121, !dbg !11442

do.end121:                                        ; preds = %do.body118
  br label %do.body122, !dbg !11445

do.body122:                                       ; preds = %do.end121
  %108 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11446
  %109 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11446
  %http_proxy123 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %109, i32 0, i32 16, !dbg !11446
  %user124 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy123, i32 0, i32 3, !dbg !11446
  %110 = load i8*, i8** %user124, align 8, !dbg !11446
  call void %108(i8* %110), !dbg !11446
  %111 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11446
  %http_proxy125 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %111, i32 0, i32 16, !dbg !11446
  %user126 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy125, i32 0, i32 3, !dbg !11446
  store i8* null, i8** %user126, align 8, !dbg !11446
  br label %do.end127, !dbg !11446

do.end127:                                        ; preds = %do.body122
  br label %do.body128, !dbg !11449

do.body128:                                       ; preds = %do.end127
  %112 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11450
  %113 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11450
  %socks_proxy129 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %113, i32 0, i32 15, !dbg !11450
  %user130 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy129, i32 0, i32 3, !dbg !11450
  %114 = load i8*, i8** %user130, align 8, !dbg !11450
  call void %112(i8* %114), !dbg !11450
  %115 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11450
  %socks_proxy131 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %115, i32 0, i32 15, !dbg !11450
  %user132 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy131, i32 0, i32 3, !dbg !11450
  store i8* null, i8** %user132, align 8, !dbg !11450
  br label %do.end133, !dbg !11450

do.end133:                                        ; preds = %do.body128
  br label %do.body134, !dbg !11453

do.body134:                                       ; preds = %do.end133
  %116 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11454
  %117 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11454
  %http_proxy135 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %117, i32 0, i32 16, !dbg !11454
  %passwd136 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy135, i32 0, i32 4, !dbg !11454
  %118 = load i8*, i8** %passwd136, align 8, !dbg !11454
  call void %116(i8* %118), !dbg !11454
  %119 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11454
  %http_proxy137 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %119, i32 0, i32 16, !dbg !11454
  %passwd138 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy137, i32 0, i32 4, !dbg !11454
  store i8* null, i8** %passwd138, align 8, !dbg !11454
  br label %do.end139, !dbg !11454

do.end139:                                        ; preds = %do.body134
  br label %do.body140, !dbg !11457

do.body140:                                       ; preds = %do.end139
  %120 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11458
  %121 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11458
  %socks_proxy141 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %121, i32 0, i32 15, !dbg !11458
  %passwd142 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy141, i32 0, i32 4, !dbg !11458
  %122 = load i8*, i8** %passwd142, align 8, !dbg !11458
  call void %120(i8* %122), !dbg !11458
  %123 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11458
  %socks_proxy143 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %123, i32 0, i32 15, !dbg !11458
  %passwd144 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy143, i32 0, i32 4, !dbg !11458
  store i8* null, i8** %passwd144, align 8, !dbg !11458
  br label %do.end145, !dbg !11458

do.end145:                                        ; preds = %do.body140
  br label %do.body146, !dbg !11461

do.body146:                                       ; preds = %do.end145
  %124 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11462
  %125 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11462
  %localdev = getelementptr inbounds %struct.connectdata, %struct.connectdata* %125, i32 0, i32 69, !dbg !11462
  %126 = load i8*, i8** %localdev, align 8, !dbg !11462
  call void %124(i8* %126), !dbg !11462
  %127 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11462
  %localdev147 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %127, i32 0, i32 69, !dbg !11462
  store i8* null, i8** %localdev147, align 8, !dbg !11462
  br label %do.end148, !dbg !11462

do.end148:                                        ; preds = %do.body146
  %128 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11465
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %128, i32 0, i32 55, !dbg !11466
  call void @Curl_llist_destroy(%struct.curl_llist* %send_pipe, i8* null), !dbg !11467
  %129 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11468
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %129, i32 0, i32 56, !dbg !11469
  call void @Curl_llist_destroy(%struct.curl_llist* %recv_pipe, i8* null), !dbg !11470
  br label %do.body149, !dbg !11471

do.body149:                                       ; preds = %do.end148
  %130 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11472
  %131 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11472
  %master_buffer = getelementptr inbounds %struct.connectdata, %struct.connectdata* %131, i32 0, i32 57, !dbg !11472
  %132 = load i8*, i8** %master_buffer, align 8, !dbg !11472
  call void %130(i8* %132), !dbg !11472
  %133 = load %struct.connectdata*, %struct.connectdata** %old_conn.addr, align 8, !dbg !11472
  %master_buffer150 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %133, i32 0, i32 57, !dbg !11472
  store i8* null, i8** %master_buffer150, align 8, !dbg !11472
  br label %do.end151, !dbg !11472

do.end151:                                        ; preds = %do.body149
  ret void, !dbg !11475
}

declare %struct.connectbundle* @Curl_conncache_find_bundle(%struct.connectdata*, %struct.conncache*) #3

; Function Attrs: nounwind uwtable
define internal %struct.connectdata* @find_oldest_idle_connection_in_bundle(%struct.Curl_easy* %data, %struct.connectbundle* %bundle) #0 !dbg !2239 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %bundle.addr = alloca %struct.connectbundle*, align 8
  %curr = alloca %struct.curl_llist_element*, align 8
  %highscore = alloca i64, align 8
  %score = alloca i64, align 8
  %now = alloca %struct.timeval, align 8
  %conn_candidate = alloca %struct.connectdata*, align 8
  %conn = alloca %struct.connectdata*, align 8
  %coerce = alloca %struct.timeval, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !11476, metadata !2256), !dbg !11477
  store %struct.connectbundle* %bundle, %struct.connectbundle** %bundle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectbundle** %bundle.addr, metadata !11478, metadata !2256), !dbg !11479
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !11480, metadata !2256), !dbg !11481
  call void @llvm.dbg.declare(metadata i64* %highscore, metadata !11482, metadata !2256), !dbg !11483
  store i64 -1, i64* %highscore, align 8, !dbg !11483
  call void @llvm.dbg.declare(metadata i64* %score, metadata !11484, metadata !2256), !dbg !11485
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !11486, metadata !2256), !dbg !11487
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_candidate, metadata !11488, metadata !2256), !dbg !11489
  store %struct.connectdata* null, %struct.connectdata** %conn_candidate, align 8, !dbg !11489
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !11490, metadata !2256), !dbg !11491
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11492
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !11493
  %1 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !11493
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !11493
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !11493
  store i64 %3, i64* %2, align 8, !dbg !11493
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !11493
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !11493
  store i64 %5, i64* %4, align 8, !dbg !11493
  %6 = bitcast %struct.timeval* %now to i8*, !dbg !11493
  %7 = bitcast %struct.timeval* %coerce to i8*, !dbg !11493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 16, i32 8, i1 false), !dbg !11494
  %8 = load %struct.connectbundle*, %struct.connectbundle** %bundle.addr, align 8, !dbg !11496
  %conn_list = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %8, i32 0, i32 2, !dbg !11497
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %conn_list, i32 0, i32 0, !dbg !11498
  %9 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !11498
  store %struct.curl_llist_element* %9, %struct.curl_llist_element** %curr, align 8, !dbg !11499
  br label %while.cond, !dbg !11500

while.cond:                                       ; preds = %if.end5, %entry
  %10 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !11501
  %tobool = icmp ne %struct.curl_llist_element* %10, null, !dbg !11502
  br i1 %tobool, label %while.body, label %while.end, !dbg !11502

while.body:                                       ; preds = %while.cond
  %11 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !11503
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %11, i32 0, i32 0, !dbg !11505
  %12 = load i8*, i8** %ptr, align 8, !dbg !11505
  %13 = bitcast i8* %12 to %struct.connectdata*, !dbg !11503
  store %struct.connectdata* %13, %struct.connectdata** %conn, align 8, !dbg !11506
  %14 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !11507
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 4, !dbg !11509
  %15 = load i8, i8* %inuse, align 8, !dbg !11509
  %tobool1 = trunc i8 %15 to i1, !dbg !11509
  br i1 %tobool1, label %if.end5, label %if.then, !dbg !11510

if.then:                                          ; preds = %while.body
  %16 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !11511
  %now2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 31, !dbg !11511
  %17 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !11511
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !11511
  %19 = load i64, i64* %18, align 8, !dbg !11511
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !11511
  %21 = load i64, i64* %20, align 8, !dbg !11511
  %22 = bitcast %struct.timeval* %now2 to { i64, i64 }*, !dbg !11511
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !11511
  %24 = load i64, i64* %23, align 8, !dbg !11511
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !11511
  %26 = load i64, i64* %25, align 8, !dbg !11511
  %call3 = call i64 @curlx_tvdiff(i64 %19, i64 %21, i64 %24, i64 %26), !dbg !11511
  store i64 %call3, i64* %score, align 8, !dbg !11513
  %27 = load i64, i64* %score, align 8, !dbg !11514
  %28 = load i64, i64* %highscore, align 8, !dbg !11516
  %cmp = icmp sgt i64 %27, %28, !dbg !11517
  br i1 %cmp, label %if.then4, label %if.end, !dbg !11518

if.then4:                                         ; preds = %if.then
  %29 = load i64, i64* %score, align 8, !dbg !11519
  store i64 %29, i64* %highscore, align 8, !dbg !11521
  %30 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !11522
  store %struct.connectdata* %30, %struct.connectdata** %conn_candidate, align 8, !dbg !11523
  br label %if.end, !dbg !11524

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !11525

if.end5:                                          ; preds = %if.end, %while.body
  %31 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !11526
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %31, i32 0, i32 2, !dbg !11527
  %32 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !11527
  store %struct.curl_llist_element* %32, %struct.curl_llist_element** %curr, align 8, !dbg !11528
  br label %while.cond, !dbg !11529

while.end:                                        ; preds = %while.cond
  %33 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !11531
  ret %struct.connectdata* %33, !dbg !11532
}

; Function Attrs: nounwind uwtable
define internal i32 @resolve_server(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %async) #0 !dbg !2242 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %async.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %timeout_ms = alloca i64, align 8
  %rc = alloca i32, align 4
  %hostaddr = alloca %struct.Curl_dns_entry*, align 8
  %connhost = alloca %struct.hostname*, align 8
  %host33 = alloca %struct.hostname*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !11533, metadata !2256), !dbg !11534
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11535, metadata !2256), !dbg !11536
  store i8* %async, i8** %async.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %async.addr, metadata !11537, metadata !2256), !dbg !11538
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11539, metadata !2256), !dbg !11540
  store i32 0, i32* %result, align 4, !dbg !11540
  call void @llvm.dbg.declare(metadata i64* %timeout_ms, metadata !11541, metadata !2256), !dbg !11542
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11543
  %call = call i64 @Curl_timeleft(%struct.Curl_easy* %0, %struct.timeval* null, i1 zeroext true), !dbg !11544
  store i64 %call, i64* %timeout_ms, align 8, !dbg !11542
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11545
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 43, !dbg !11547
  %reuse = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 1, !dbg !11548
  %2 = load i8, i8* %reuse, align 1, !dbg !11548
  %tobool = trunc i8 %2 to i1, !dbg !11548
  br i1 %tobool, label %if.then, label %if.else, !dbg !11549

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %async.addr, align 8, !dbg !11550
  store i8 0, i8* %3, align 1, !dbg !11551
  br label %if.end58, !dbg !11552

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11553, metadata !2256), !dbg !11555
  call void @llvm.dbg.declare(metadata %struct.Curl_dns_entry** %hostaddr, metadata !11556, metadata !2256), !dbg !11557
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11558
  %bits1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 43, !dbg !11560
  %proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1, i32 0, i32 4, !dbg !11561
  %5 = load i8, i8* %proxy, align 1, !dbg !11561
  %tobool2 = trunc i8 %5 to i1, !dbg !11561
  br i1 %tobool2, label %if.else32, label %if.then3, !dbg !11562

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.hostname** %connhost, metadata !11563, metadata !2256), !dbg !11565
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11566
  %bits4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 43, !dbg !11568
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits4, i32 0, i32 2, !dbg !11569
  %7 = load i8, i8* %conn_to_host, align 1, !dbg !11569
  %tobool5 = trunc i8 %7 to i1, !dbg !11569
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !11570

if.then6:                                         ; preds = %if.then3
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11571
  %conn_to_host7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 14, !dbg !11572
  store %struct.hostname* %conn_to_host7, %struct.hostname** %connhost, align 8, !dbg !11573
  br label %if.end, !dbg !11574

if.else8:                                         ; preds = %if.then3
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11575
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 12, !dbg !11576
  store %struct.hostname* %host, %struct.hostname** %connhost, align 8, !dbg !11577
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then6
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11578
  %bits9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 43, !dbg !11580
  %conn_to_port = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits9, i32 0, i32 3, !dbg !11581
  %11 = load i8, i8* %conn_to_port, align 1, !dbg !11581
  %tobool10 = trunc i8 %11 to i1, !dbg !11581
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !11582

if.then11:                                        ; preds = %if.end
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11583
  %conn_to_port12 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 19, !dbg !11584
  %13 = load i32, i32* %conn_to_port12, align 4, !dbg !11584
  %conv = sext i32 %13 to i64, !dbg !11583
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11585
  %port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 17, !dbg !11586
  store i64 %conv, i64* %port, align 8, !dbg !11587
  br label %if.end16, !dbg !11585

if.else13:                                        ; preds = %if.end
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11588
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %15, i32 0, i32 18, !dbg !11589
  %16 = load i32, i32* %remote_port, align 8, !dbg !11589
  %conv14 = sext i32 %16 to i64, !dbg !11588
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11590
  %port15 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 17, !dbg !11591
  store i64 %conv14, i64* %port15, align 8, !dbg !11592
  br label %if.end16

if.end16:                                         ; preds = %if.else13, %if.then11
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11593
  %19 = load %struct.hostname*, %struct.hostname** %connhost, align 8, !dbg !11594
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %19, i32 0, i32 2, !dbg !11595
  %20 = load i8*, i8** %name, align 8, !dbg !11595
  %21 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11596
  %port17 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 17, !dbg !11597
  %22 = load i64, i64* %port17, align 8, !dbg !11597
  %conv18 = trunc i64 %22 to i32, !dbg !11598
  %23 = load i64, i64* %timeout_ms, align 8, !dbg !11599
  %call19 = call i32 @Curl_resolv_timeout(%struct.connectdata* %18, i8* %20, i32 %conv18, %struct.Curl_dns_entry** %hostaddr, i64 %23), !dbg !11600
  store i32 %call19, i32* %rc, align 4, !dbg !11601
  %24 = load i32, i32* %rc, align 4, !dbg !11602
  %cmp = icmp eq i32 %24, 1, !dbg !11604
  br i1 %cmp, label %if.then21, label %if.else22, !dbg !11605

if.then21:                                        ; preds = %if.end16
  %25 = load i8*, i8** %async.addr, align 8, !dbg !11606
  store i8 1, i8* %25, align 1, !dbg !11607
  br label %if.end31, !dbg !11608

if.else22:                                        ; preds = %if.end16
  %26 = load i32, i32* %rc, align 4, !dbg !11609
  %cmp23 = icmp eq i32 %26, -2, !dbg !11611
  br i1 %cmp23, label %if.then25, label %if.else26, !dbg !11612

if.then25:                                        ; preds = %if.else22
  store i32 28, i32* %result, align 4, !dbg !11613
  br label %if.end30, !dbg !11614

if.else26:                                        ; preds = %if.else22
  %27 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %hostaddr, align 8, !dbg !11615
  %tobool27 = icmp ne %struct.Curl_dns_entry* %27, null, !dbg !11615
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !11617

if.then28:                                        ; preds = %if.else26
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11618
  %29 = load %struct.hostname*, %struct.hostname** %connhost, align 8, !dbg !11620
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %29, i32 0, i32 3, !dbg !11621
  %30 = load i8*, i8** %dispname, align 8, !dbg !11621
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.109, i32 0, i32 0), i8* %30), !dbg !11622
  store i32 6, i32* %result, align 4, !dbg !11623
  br label %if.end29, !dbg !11624

if.end29:                                         ; preds = %if.then28, %if.else26
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then25
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then21
  br label %if.end57, !dbg !11625

if.else32:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.hostname** %host33, metadata !11626, metadata !2256), !dbg !11629
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11630
  %bits34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 43, !dbg !11631
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits34, i32 0, i32 6, !dbg !11632
  %32 = load i8, i8* %socksproxy, align 1, !dbg !11632
  %tobool35 = trunc i8 %32 to i1, !dbg !11632
  br i1 %tobool35, label %cond.true, label %cond.false, !dbg !11630

cond.true:                                        ; preds = %if.else32
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11633
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 15, !dbg !11634
  %host37 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !11635
  br label %cond.end, !dbg !11636

cond.false:                                       ; preds = %if.else32
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11638
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 16, !dbg !11639
  %host38 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !11640
  br label %cond.end, !dbg !11641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hostname* [ %host37, %cond.true ], [ %host38, %cond.false ], !dbg !11643
  store %struct.hostname* %cond, %struct.hostname** %host33, align 8, !dbg !11645
  %35 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11646
  %36 = load %struct.hostname*, %struct.hostname** %host33, align 8, !dbg !11647
  %name39 = getelementptr inbounds %struct.hostname, %struct.hostname* %36, i32 0, i32 2, !dbg !11648
  %37 = load i8*, i8** %name39, align 8, !dbg !11648
  %38 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11649
  %port40 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 17, !dbg !11650
  %39 = load i64, i64* %port40, align 8, !dbg !11650
  %conv41 = trunc i64 %39 to i32, !dbg !11651
  %40 = load i64, i64* %timeout_ms, align 8, !dbg !11652
  %call42 = call i32 @Curl_resolv_timeout(%struct.connectdata* %35, i8* %37, i32 %conv41, %struct.Curl_dns_entry** %hostaddr, i64 %40), !dbg !11653
  store i32 %call42, i32* %rc, align 4, !dbg !11654
  %41 = load i32, i32* %rc, align 4, !dbg !11655
  %cmp43 = icmp eq i32 %41, 1, !dbg !11657
  br i1 %cmp43, label %if.then45, label %if.else46, !dbg !11658

if.then45:                                        ; preds = %cond.end
  %42 = load i8*, i8** %async.addr, align 8, !dbg !11659
  store i8 1, i8* %42, align 1, !dbg !11660
  br label %if.end56, !dbg !11661

if.else46:                                        ; preds = %cond.end
  %43 = load i32, i32* %rc, align 4, !dbg !11662
  %cmp47 = icmp eq i32 %43, -2, !dbg !11664
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !11665

if.then49:                                        ; preds = %if.else46
  store i32 28, i32* %result, align 4, !dbg !11666
  br label %if.end55, !dbg !11667

if.else50:                                        ; preds = %if.else46
  %44 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %hostaddr, align 8, !dbg !11668
  %tobool51 = icmp ne %struct.Curl_dns_entry* %44, null, !dbg !11668
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !11670

if.then52:                                        ; preds = %if.else50
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11671
  %46 = load %struct.hostname*, %struct.hostname** %host33, align 8, !dbg !11673
  %dispname53 = getelementptr inbounds %struct.hostname, %struct.hostname* %46, i32 0, i32 3, !dbg !11674
  %47 = load i8*, i8** %dispname53, align 8, !dbg !11674
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.110, i32 0, i32 0), i8* %47), !dbg !11675
  store i32 5, i32* %result, align 4, !dbg !11676
  br label %if.end54, !dbg !11677

if.end54:                                         ; preds = %if.then52, %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then45
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end31
  br label %do.body, !dbg !11678

do.body:                                          ; preds = %if.end57
  br label %do.end, !dbg !11679

do.end:                                           ; preds = %do.body
  %48 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %hostaddr, align 8, !dbg !11682
  %49 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11683
  %dns_entry = getelementptr inbounds %struct.connectdata, %struct.connectdata* %49, i32 0, i32 6, !dbg !11684
  store %struct.Curl_dns_entry* %48, %struct.Curl_dns_entry** %dns_entry, align 8, !dbg !11685
  br label %if.end58

if.end58:                                         ; preds = %do.end, %if.then
  %50 = load i32, i32* %result, align 4, !dbg !11686
  ret i32 %50, !dbg !11687
}

declare void @Curl_conncontrol(%struct.connectdata*, i32) #3

declare void @Curl_llist_init(%struct.curl_llist*, void (i8*, i8*)*) #3

; Function Attrs: nounwind uwtable
define internal void @llist_dtor(i8* %user, i8* %element) #0 !dbg !2161 {
entry:
  %user.addr = alloca i8*, align 8
  %element.addr = alloca i8*, align 8
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !11688, metadata !2256), !dbg !11689
  store i8* %element, i8** %element.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %element.addr, metadata !11690, metadata !2256), !dbg !11691
  %0 = load i8*, i8** %user.addr, align 8, !dbg !11692
  %1 = load i8*, i8** %element.addr, align 8, !dbg !11693
  ret void, !dbg !11694
}

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #4

declare i32 @Curl_strncasecompare(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #5

declare i8* @Curl_dedotdotify(i8*) #3

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @findprotocol(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %protostr) #0 !dbg !2165 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %protostr.addr = alloca i8*, align 8
  %pp = alloca %struct.Curl_handler**, align 8
  %p = alloca %struct.Curl_handler*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !11695, metadata !2256), !dbg !11696
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11697, metadata !2256), !dbg !11698
  store i8* %protostr, i8** %protostr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %protostr.addr, metadata !11699, metadata !2256), !dbg !11700
  call void @llvm.dbg.declare(metadata %struct.Curl_handler*** %pp, metadata !11701, metadata !2256), !dbg !11703
  call void @llvm.dbg.declare(metadata %struct.Curl_handler** %p, metadata !11704, metadata !2256), !dbg !11705
  store %struct.Curl_handler** getelementptr inbounds ([4 x %struct.Curl_handler*], [4 x %struct.Curl_handler*]* @protocols, i32 0, i32 0), %struct.Curl_handler*** %pp, align 8, !dbg !11706
  br label %for.cond, !dbg !11708

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.Curl_handler**, %struct.Curl_handler*** %pp, align 8, !dbg !11709
  %1 = load %struct.Curl_handler*, %struct.Curl_handler** %0, align 8, !dbg !11712
  store %struct.Curl_handler* %1, %struct.Curl_handler** %p, align 8, !dbg !11713
  %cmp = icmp ne %struct.Curl_handler* %1, null, !dbg !11714
  br i1 %cmp, label %for.body, label %for.end, !dbg !11715

for.body:                                         ; preds = %for.cond
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !11716
  %scheme = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 0, !dbg !11716
  %3 = load i8*, i8** %scheme, align 8, !dbg !11716
  %4 = load i8*, i8** %protostr.addr, align 8, !dbg !11716
  %call = call i32 @Curl_strcasecompare(i8* %3, i8* %4), !dbg !11716
  %tobool = icmp ne i32 %call, 0, !dbg !11716
  br i1 %tobool, label %if.then, label %if.end12, !dbg !11719

if.then:                                          ; preds = %for.body
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11720
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 13, !dbg !11723
  %allowed_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 130, !dbg !11724
  %6 = load i64, i64* %allowed_protocols, align 8, !dbg !11724
  %7 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !11725
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %7, i32 0, i32 15, !dbg !11726
  %8 = load i32, i32* %protocol, align 8, !dbg !11726
  %conv = zext i32 %8 to i64, !dbg !11725
  %and = and i64 %6, %conv, !dbg !11727
  %tobool1 = icmp ne i64 %and, 0, !dbg !11727
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !11728

if.then2:                                         ; preds = %if.then
  br label %for.end, !dbg !11729

if.end:                                           ; preds = %if.then
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11730
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 17, !dbg !11732
  %this_is_a_follow = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 9, !dbg !11733
  %10 = load i8, i8* %this_is_a_follow, align 8, !dbg !11733
  %tobool3 = trunc i8 %10 to i1, !dbg !11733
  br i1 %tobool3, label %land.lhs.true, label %if.end11, !dbg !11734

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11735
  %set5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 13, !dbg !11736
  %redir_protocols = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set5, i32 0, i32 131, !dbg !11737
  %12 = load i64, i64* %redir_protocols, align 8, !dbg !11737
  %13 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !11738
  %protocol6 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %13, i32 0, i32 15, !dbg !11739
  %14 = load i32, i32* %protocol6, align 8, !dbg !11739
  %conv7 = zext i32 %14 to i64, !dbg !11738
  %and8 = and i64 %12, %conv7, !dbg !11740
  %tobool9 = icmp ne i64 %and8, 0, !dbg !11740
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11741

if.then10:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !11743

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %15 = load %struct.Curl_handler*, %struct.Curl_handler** %p, align 8, !dbg !11744
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11745
  %given = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 48, !dbg !11746
  store %struct.Curl_handler* %15, %struct.Curl_handler** %given, align 8, !dbg !11747
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11748
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 47, !dbg !11749
  store %struct.Curl_handler* %15, %struct.Curl_handler** %handler, align 8, !dbg !11750
  store i32 0, i32* %retval, align 4, !dbg !11751
  br label %return, !dbg !11751

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !11752

for.inc:                                          ; preds = %if.end12
  %18 = load %struct.Curl_handler**, %struct.Curl_handler*** %pp, align 8, !dbg !11753
  %incdec.ptr = getelementptr inbounds %struct.Curl_handler*, %struct.Curl_handler** %18, i32 1, !dbg !11753
  store %struct.Curl_handler** %incdec.ptr, %struct.Curl_handler*** %pp, align 8, !dbg !11753
  br label %for.cond, !dbg !11755

for.end:                                          ; preds = %if.then10, %if.then2, %for.cond
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11756
  %20 = load i8*, i8** %protostr.addr, align 8, !dbg !11757
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i32 0, i32 0), i8* %20), !dbg !11758
  store i32 1, i32* %retval, align 4, !dbg !11759
  br label %return, !dbg !11759

return:                                           ; preds = %for.end, %if.end11
  %21 = load i32, i32* %retval, align 4, !dbg !11760
  ret i32 %21, !dbg !11760
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_url_login(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8** %user, i8** %passwd, i8** %options) #0 !dbg !2168 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %user.addr = alloca i8**, align 8
  %passwd.addr = alloca i8**, align 8
  %options.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %userp = alloca i8*, align 8
  %passwdp = alloca i8*, align 8
  %optionsp = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %login = alloca i8*, align 8
  %newname = alloca i8*, align 8
  %newpasswd = alloca i8*, align 8
  %newoptions = alloca i8*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !11761, metadata !2256), !dbg !11762
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11763, metadata !2256), !dbg !11764
  store i8** %user, i8*** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %user.addr, metadata !11765, metadata !2256), !dbg !11766
  store i8** %passwd, i8*** %passwd.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %passwd.addr, metadata !11767, metadata !2256), !dbg !11768
  store i8** %options, i8*** %options.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %options.addr, metadata !11769, metadata !2256), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11771, metadata !2256), !dbg !11772
  store i32 0, i32* %result, align 4, !dbg !11772
  call void @llvm.dbg.declare(metadata i8** %userp, metadata !11773, metadata !2256), !dbg !11774
  store i8* null, i8** %userp, align 8, !dbg !11774
  call void @llvm.dbg.declare(metadata i8** %passwdp, metadata !11775, metadata !2256), !dbg !11776
  store i8* null, i8** %passwdp, align 8, !dbg !11776
  call void @llvm.dbg.declare(metadata i8** %optionsp, metadata !11777, metadata !2256), !dbg !11778
  store i8* null, i8** %optionsp, align 8, !dbg !11778
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11779, metadata !2256), !dbg !11780
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11781
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 12, !dbg !11782
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !11783
  %1 = load i8*, i8** %name, align 8, !dbg !11783
  %call = call i8* @strchr(i8* %1, i32 64) #7, !dbg !11784
  store i8* %call, i8** %ptr, align 8, !dbg !11780
  call void @llvm.dbg.declare(metadata i8** %login, metadata !11785, metadata !2256), !dbg !11786
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11787
  %host1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 12, !dbg !11788
  %name2 = getelementptr inbounds %struct.hostname, %struct.hostname* %host1, i32 0, i32 2, !dbg !11789
  %3 = load i8*, i8** %name2, align 8, !dbg !11789
  store i8* %3, i8** %login, align 8, !dbg !11786
  br label %do.body, !dbg !11790

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11791

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !11794

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !11795

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !11798

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !11799

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11802

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !11803

do.end8:                                          ; preds = %do.body7
  %4 = load i8*, i8** %ptr, align 8, !dbg !11806
  %tobool = icmp ne i8* %4, null, !dbg !11806
  br i1 %tobool, label %if.end, label %if.then, !dbg !11808

if.then:                                          ; preds = %do.end8
  br label %out, !dbg !11809

if.end:                                           ; preds = %do.end8
  %5 = load i8*, i8** %ptr, align 8, !dbg !11810
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11810
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !11810
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11811
  %host9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 12, !dbg !11812
  %name10 = getelementptr inbounds %struct.hostname, %struct.hostname* %host9, i32 0, i32 2, !dbg !11813
  store i8* %incdec.ptr, i8** %name10, align 8, !dbg !11814
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11815
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !11817
  %use_netrc = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 105, !dbg !11818
  %8 = load i32, i32* %use_netrc, align 4, !dbg !11818
  %cmp = icmp eq i32 %8, 2, !dbg !11819
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !11820

if.then11:                                        ; preds = %if.end
  br label %out, !dbg !11821

if.end12:                                         ; preds = %if.end
  %9 = load i8*, i8** %login, align 8, !dbg !11822
  %10 = load i8*, i8** %ptr, align 8, !dbg !11823
  %11 = load i8*, i8** %login, align 8, !dbg !11824
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !11825
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64, !dbg !11825
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11825
  %sub = sub nsw i64 %sub.ptr.sub, 1, !dbg !11826
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11827
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 47, !dbg !11828
  %13 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !11828
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %13, i32 0, i32 16, !dbg !11829
  %14 = load i32, i32* %flags, align 4, !dbg !11829
  %and = and i32 %14, 1024, !dbg !11830
  %tobool13 = icmp ne i32 %and, 0, !dbg !11830
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !11831

cond.true:                                        ; preds = %if.end12
  br label %cond.end, !dbg !11832

cond.false:                                       ; preds = %if.end12
  br label %cond.end, !dbg !11834

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %optionsp, %cond.true ], [ null, %cond.false ], !dbg !11836
  %call14 = call i32 @parse_login_details(i8* %9, i64 %sub, i8** %userp, i8** %passwdp, i8** %cond), !dbg !11838
  store i32 %call14, i32* %result, align 4, !dbg !11839
  %15 = load i32, i32* %result, align 4, !dbg !11840
  %tobool15 = icmp ne i32 %15, 0, !dbg !11840
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !11842

if.then16:                                        ; preds = %cond.end
  br label %out, !dbg !11843

if.end17:                                         ; preds = %cond.end
  %16 = load i8*, i8** %userp, align 8, !dbg !11844
  %tobool18 = icmp ne i8* %16, null, !dbg !11844
  br i1 %tobool18, label %if.then19, label %if.end25, !dbg !11846

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i8** %newname, metadata !11847, metadata !2256), !dbg !11849
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11850
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 43, !dbg !11851
  %userpwd_in_url = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 22, !dbg !11852
  store i8 1, i8* %userpwd_in_url, align 1, !dbg !11853
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11854
  %bits20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %18, i32 0, i32 43, !dbg !11855
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits20, i32 0, i32 7, !dbg !11856
  store i8 1, i8* %user_passwd, align 1, !dbg !11857
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11858
  %20 = load i8*, i8** %userp, align 8, !dbg !11859
  %call21 = call i32 @Curl_urldecode(%struct.Curl_easy* %19, i8* %20, i64 0, i8** %newname, i64* null, i1 zeroext false), !dbg !11860
  store i32 %call21, i32* %result, align 4, !dbg !11861
  %21 = load i32, i32* %result, align 4, !dbg !11862
  %tobool22 = icmp ne i32 %21, 0, !dbg !11862
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !11864

if.then23:                                        ; preds = %if.then19
  br label %out, !dbg !11865

if.end24:                                         ; preds = %if.then19
  %22 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11867
  %23 = load i8**, i8*** %user.addr, align 8, !dbg !11867
  %24 = load i8*, i8** %23, align 8, !dbg !11867
  call void %22(i8* %24), !dbg !11867
  %25 = load i8*, i8** %newname, align 8, !dbg !11868
  %26 = load i8**, i8*** %user.addr, align 8, !dbg !11869
  store i8* %25, i8** %26, align 8, !dbg !11870
  br label %if.end25, !dbg !11871

if.end25:                                         ; preds = %if.end24, %if.end17
  %27 = load i8*, i8** %passwdp, align 8, !dbg !11872
  %tobool26 = icmp ne i8* %27, null, !dbg !11872
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !11874

if.then27:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i8** %newpasswd, metadata !11875, metadata !2256), !dbg !11877
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11878
  %29 = load i8*, i8** %passwdp, align 8, !dbg !11879
  %call28 = call i32 @Curl_urldecode(%struct.Curl_easy* %28, i8* %29, i64 0, i8** %newpasswd, i64* null, i1 zeroext false), !dbg !11880
  store i32 %call28, i32* %result, align 4, !dbg !11881
  %30 = load i32, i32* %result, align 4, !dbg !11882
  %tobool29 = icmp ne i32 %30, 0, !dbg !11882
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !11884

if.then30:                                        ; preds = %if.then27
  br label %out, !dbg !11885

if.end31:                                         ; preds = %if.then27
  %31 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11887
  %32 = load i8**, i8*** %passwd.addr, align 8, !dbg !11887
  %33 = load i8*, i8** %32, align 8, !dbg !11887
  call void %31(i8* %33), !dbg !11887
  %34 = load i8*, i8** %newpasswd, align 8, !dbg !11888
  %35 = load i8**, i8*** %passwd.addr, align 8, !dbg !11889
  store i8* %34, i8** %35, align 8, !dbg !11890
  br label %if.end32, !dbg !11891

if.end32:                                         ; preds = %if.end31, %if.end25
  %36 = load i8*, i8** %optionsp, align 8, !dbg !11892
  %tobool33 = icmp ne i8* %36, null, !dbg !11892
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !11894

if.then34:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i8** %newoptions, metadata !11895, metadata !2256), !dbg !11897
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11898
  %38 = load i8*, i8** %optionsp, align 8, !dbg !11899
  %call35 = call i32 @Curl_urldecode(%struct.Curl_easy* %37, i8* %38, i64 0, i8** %newoptions, i64* null, i1 zeroext false), !dbg !11900
  store i32 %call35, i32* %result, align 4, !dbg !11901
  %39 = load i32, i32* %result, align 4, !dbg !11902
  %tobool36 = icmp ne i32 %39, 0, !dbg !11902
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !11904

if.then37:                                        ; preds = %if.then34
  br label %out, !dbg !11905

if.end38:                                         ; preds = %if.then34
  %40 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11907
  %41 = load i8**, i8*** %options.addr, align 8, !dbg !11907
  %42 = load i8*, i8** %41, align 8, !dbg !11907
  call void %40(i8* %42), !dbg !11907
  %43 = load i8*, i8** %newoptions, align 8, !dbg !11908
  %44 = load i8**, i8*** %options.addr, align 8, !dbg !11909
  store i8* %43, i8** %44, align 8, !dbg !11910
  br label %if.end39, !dbg !11911

if.end39:                                         ; preds = %if.end38, %if.end32
  br label %out, !dbg !11912

out:                                              ; preds = %if.end39, %if.then37, %if.then30, %if.then23, %if.then16, %if.then11, %if.then
  %45 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11914
  %46 = load i8*, i8** %userp, align 8, !dbg !11914
  call void %45(i8* %46), !dbg !11914
  %47 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11915
  %48 = load i8*, i8** %passwdp, align 8, !dbg !11915
  call void %47(i8* %48), !dbg !11915
  %49 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !11916
  %50 = load i8*, i8** %optionsp, align 8, !dbg !11916
  call void %49(i8* %50), !dbg !11916
  %51 = load i32, i32* %result, align 4, !dbg !11917
  ret i32 %51, !dbg !11918
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #5

declare i32 @Curl_urldecode(%struct.Curl_easy*, i8*, i64, i8**, i64*, i1 zeroext) #3

; Function Attrs: nounwind uwtable
define internal i32 @parse_proxy_auth(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !2172 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxyuser = alloca [256 x i8], align 16
  %proxypasswd = alloca [256 x i8], align 16
  %result = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !11919, metadata !2256), !dbg !11920
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !11921, metadata !2256), !dbg !11922
  call void @llvm.dbg.declare(metadata [256 x i8]* %proxyuser, metadata !11923, metadata !2256), !dbg !11924
  %0 = bitcast [256 x i8]* %proxyuser to i8*, !dbg !11924
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 256, i32 16, i1 false), !dbg !11924
  call void @llvm.dbg.declare(metadata [256 x i8]* %proxypasswd, metadata !11925, metadata !2256), !dbg !11926
  %1 = bitcast [256 x i8]* %proxypasswd to i8*, !dbg !11926
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 256, i32 16, i1 false), !dbg !11926
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11927, metadata !2256), !dbg !11928
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11929
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 13, !dbg !11931
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 128, !dbg !11932
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 44, !dbg !11929
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !11929
  %cmp = icmp ne i8* %3, null, !dbg !11933
  br i1 %cmp, label %if.then, label %if.end, !dbg !11934

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %proxyuser, i32 0, i32 0, !dbg !11935
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11937
  %set1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 13, !dbg !11938
  %str2 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1, i32 0, i32 128, !dbg !11939
  %arrayidx3 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str2, i64 0, i64 44, !dbg !11937
  %5 = load i8*, i8** %arrayidx3, align 8, !dbg !11937
  %call = call i8* @strncpy(i8* %arraydecay, i8* %5, i64 256) #8, !dbg !11940
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* %proxyuser, i64 0, i64 255, !dbg !11941
  store i8 0, i8* %arrayidx4, align 1, !dbg !11942
  br label %if.end, !dbg !11943

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11944
  %set5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 13, !dbg !11946
  %str6 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set5, i32 0, i32 128, !dbg !11947
  %arrayidx7 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str6, i64 0, i64 45, !dbg !11944
  %7 = load i8*, i8** %arrayidx7, align 8, !dbg !11944
  %cmp8 = icmp ne i8* %7, null, !dbg !11948
  br i1 %cmp8, label %if.then9, label %if.end16, !dbg !11949

if.then9:                                         ; preds = %if.end
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %proxypasswd, i32 0, i32 0, !dbg !11950
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11952
  %set11 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !11953
  %str12 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set11, i32 0, i32 128, !dbg !11954
  %arrayidx13 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str12, i64 0, i64 45, !dbg !11952
  %9 = load i8*, i8** %arrayidx13, align 8, !dbg !11952
  %call14 = call i8* @strncpy(i8* %arraydecay10, i8* %9, i64 256) #8, !dbg !11955
  %arrayidx15 = getelementptr inbounds [256 x i8], [256 x i8]* %proxypasswd, i64 0, i64 255, !dbg !11956
  store i8 0, i8* %arrayidx15, align 1, !dbg !11957
  br label %if.end16, !dbg !11958

if.end16:                                         ; preds = %if.then9, %if.end
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11959
  %arraydecay17 = getelementptr inbounds [256 x i8], [256 x i8]* %proxyuser, i32 0, i32 0, !dbg !11960
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11961
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 16, !dbg !11962
  %user = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 3, !dbg !11963
  %call18 = call i32 @Curl_urldecode(%struct.Curl_easy* %10, i8* %arraydecay17, i64 0, i8** %user, i64* null, i1 zeroext false), !dbg !11964
  store i32 %call18, i32* %result, align 4, !dbg !11965
  %12 = load i32, i32* %result, align 4, !dbg !11966
  %tobool = icmp ne i32 %12, 0, !dbg !11966
  br i1 %tobool, label %if.end23, label %if.then19, !dbg !11968

if.then19:                                        ; preds = %if.end16
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !11969
  %arraydecay20 = getelementptr inbounds [256 x i8], [256 x i8]* %proxypasswd, i32 0, i32 0, !dbg !11970
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !11971
  %http_proxy21 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 16, !dbg !11972
  %passwd = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy21, i32 0, i32 4, !dbg !11973
  %call22 = call i32 @Curl_urldecode(%struct.Curl_easy* %13, i8* %arraydecay20, i64 0, i8** %passwd, i64* null, i1 zeroext false), !dbg !11974
  store i32 %call22, i32* %result, align 4, !dbg !11975
  br label %if.end23, !dbg !11976

if.end23:                                         ; preds = %if.then19, %if.end16
  %15 = load i32, i32* %result, align 4, !dbg !11977
  ret i32 %15, !dbg !11978
}

declare i8* @curl_getenv(i8*) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @check_noproxy(i8* %name, i8* %no_proxy) #0 !dbg !2173 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  %no_proxy.addr = alloca i8*, align 8
  %tok_start = alloca i64, align 8
  %tok_end = alloca i64, align 8
  %separator = alloca i8*, align 8
  %no_proxy_len = alloca i64, align 8
  %namelen = alloca i64, align 8
  %endptr = alloca i8*, align 8
  %checkn = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11979, metadata !2256), !dbg !11980
  store i8* %no_proxy, i8** %no_proxy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %no_proxy.addr, metadata !11981, metadata !2256), !dbg !11982
  call void @llvm.dbg.declare(metadata i64* %tok_start, metadata !11983, metadata !2256), !dbg !11984
  call void @llvm.dbg.declare(metadata i64* %tok_end, metadata !11985, metadata !2256), !dbg !11986
  call void @llvm.dbg.declare(metadata i8** %separator, metadata !11987, metadata !2256), !dbg !11988
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i8** %separator, align 8, !dbg !11988
  call void @llvm.dbg.declare(metadata i64* %no_proxy_len, metadata !11989, metadata !2256), !dbg !11990
  call void @llvm.dbg.declare(metadata i64* %namelen, metadata !11991, metadata !2256), !dbg !11992
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !11993, metadata !2256), !dbg !11994
  %0 = load i8*, i8** %no_proxy.addr, align 8, !dbg !11995
  %tobool = icmp ne i8* %0, null, !dbg !11995
  br i1 %tobool, label %land.lhs.true, label %if.end64, !dbg !11997

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %no_proxy.addr, align 8, !dbg !11998
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11998
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11998
  %conv = sext i8 %2 to i32, !dbg !11998
  %tobool1 = icmp ne i32 %conv, 0, !dbg !11998
  br i1 %tobool1, label %if.then, label %if.end64, !dbg !12000

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12001
  %call = call i32 @Curl_strcasecompare(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i32 0, i32 0), i8* %3), !dbg !12001
  %tobool2 = icmp ne i32 %call, 0, !dbg !12001
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !12004

if.then3:                                         ; preds = %if.then
  store i1 true, i1* %retval, align 1, !dbg !12005
  br label %return, !dbg !12005

if.end:                                           ; preds = %if.then
  %4 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12007
  %call4 = call i64 @strlen(i8* %4) #7, !dbg !12008
  store i64 %call4, i64* %no_proxy_len, align 8, !dbg !12009
  %5 = load i8*, i8** %name.addr, align 8, !dbg !12010
  %call5 = call i8* @strchr(i8* %5, i32 58) #7, !dbg !12011
  store i8* %call5, i8** %endptr, align 8, !dbg !12012
  %6 = load i8*, i8** %endptr, align 8, !dbg !12013
  %tobool6 = icmp ne i8* %6, null, !dbg !12013
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !12015

if.then7:                                         ; preds = %if.end
  %7 = load i8*, i8** %endptr, align 8, !dbg !12016
  %8 = load i8*, i8** %name.addr, align 8, !dbg !12017
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !12018
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64, !dbg !12018
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12018
  store i64 %sub.ptr.sub, i64* %namelen, align 8, !dbg !12019
  br label %if.end9, !dbg !12020

if.else:                                          ; preds = %if.end
  %9 = load i8*, i8** %name.addr, align 8, !dbg !12021
  %call8 = call i64 @strlen(i8* %9) #7, !dbg !12022
  store i64 %call8, i64* %namelen, align 8, !dbg !12023
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  store i64 0, i64* %tok_start, align 8, !dbg !12024
  br label %for.cond, !dbg !12026

for.cond:                                         ; preds = %for.inc62, %if.end9
  %10 = load i64, i64* %tok_start, align 8, !dbg !12027
  %11 = load i64, i64* %no_proxy_len, align 8, !dbg !12030
  %cmp = icmp ult i64 %10, %11, !dbg !12031
  br i1 %cmp, label %for.body, label %for.end63, !dbg !12032

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !12033

while.cond:                                       ; preds = %while.body, %for.body
  %12 = load i64, i64* %tok_start, align 8, !dbg !12035
  %13 = load i64, i64* %no_proxy_len, align 8, !dbg !12037
  %cmp11 = icmp ult i64 %12, %13, !dbg !12038
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !12039

land.rhs:                                         ; preds = %while.cond
  %14 = load i8*, i8** %separator, align 8, !dbg !12040
  %15 = load i64, i64* %tok_start, align 8, !dbg !12041
  %16 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12042
  %arrayidx13 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !12042
  %17 = load i8, i8* %arrayidx13, align 1, !dbg !12042
  %conv14 = sext i8 %17 to i32, !dbg !12042
  %call15 = call i8* @strchr(i8* %14, i32 %conv14) #7, !dbg !12043
  %cmp16 = icmp ne i8* %call15, null, !dbg !12044
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp16, %land.rhs ]
  br i1 %18, label %while.body, label %while.end, !dbg !12045

while.body:                                       ; preds = %land.end
  %19 = load i64, i64* %tok_start, align 8, !dbg !12047
  %inc = add i64 %19, 1, !dbg !12047
  store i64 %inc, i64* %tok_start, align 8, !dbg !12047
  br label %while.cond, !dbg !12049

while.end:                                        ; preds = %land.end
  %20 = load i64, i64* %tok_start, align 8, !dbg !12051
  %21 = load i64, i64* %no_proxy_len, align 8, !dbg !12053
  %cmp18 = icmp eq i64 %20, %21, !dbg !12054
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !12055

if.then20:                                        ; preds = %while.end
  br label %for.end63, !dbg !12056

if.end21:                                         ; preds = %while.end
  %22 = load i64, i64* %tok_start, align 8, !dbg !12057
  store i64 %22, i64* %tok_end, align 8, !dbg !12059
  br label %for.cond22, !dbg !12060

for.cond22:                                       ; preds = %for.inc, %if.end21
  %23 = load i64, i64* %tok_end, align 8, !dbg !12061
  %24 = load i64, i64* %no_proxy_len, align 8, !dbg !12064
  %cmp23 = icmp ult i64 %23, %24, !dbg !12065
  br i1 %cmp23, label %land.rhs25, label %land.end31, !dbg !12066

land.rhs25:                                       ; preds = %for.cond22
  %25 = load i8*, i8** %separator, align 8, !dbg !12067
  %26 = load i64, i64* %tok_end, align 8, !dbg !12068
  %27 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12069
  %arrayidx26 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !12069
  %28 = load i8, i8* %arrayidx26, align 1, !dbg !12069
  %conv27 = sext i8 %28 to i32, !dbg !12069
  %call28 = call i8* @strchr(i8* %25, i32 %conv27) #7, !dbg !12070
  %cmp29 = icmp eq i8* %call28, null, !dbg !12071
  br label %land.end31

land.end31:                                       ; preds = %land.rhs25, %for.cond22
  %29 = phi i1 [ false, %for.cond22 ], [ %cmp29, %land.rhs25 ]
  br i1 %29, label %for.body32, label %for.end, !dbg !12072

for.body32:                                       ; preds = %land.end31
  br label %for.inc, !dbg !12074

for.inc:                                          ; preds = %for.body32
  %30 = load i64, i64* %tok_end, align 8, !dbg !12076
  %inc33 = add i64 %30, 1, !dbg !12076
  store i64 %inc33, i64* %tok_end, align 8, !dbg !12076
  br label %for.cond22, !dbg !12077

for.end:                                          ; preds = %land.end31
  %31 = load i64, i64* %tok_start, align 8, !dbg !12079
  %32 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12081
  %arrayidx34 = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !12081
  %33 = load i8, i8* %arrayidx34, align 1, !dbg !12081
  %conv35 = sext i8 %33 to i32, !dbg !12081
  %cmp36 = icmp eq i32 %conv35, 46, !dbg !12082
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !12083

if.then38:                                        ; preds = %for.end
  %34 = load i64, i64* %tok_start, align 8, !dbg !12084
  %inc39 = add i64 %34, 1, !dbg !12084
  store i64 %inc39, i64* %tok_start, align 8, !dbg !12084
  br label %if.end40, !dbg !12084

if.end40:                                         ; preds = %if.then38, %for.end
  %35 = load i64, i64* %tok_end, align 8, !dbg !12085
  %36 = load i64, i64* %tok_start, align 8, !dbg !12087
  %sub = sub i64 %35, %36, !dbg !12088
  %37 = load i64, i64* %namelen, align 8, !dbg !12089
  %cmp41 = icmp ule i64 %sub, %37, !dbg !12090
  br i1 %cmp41, label %if.then43, label %if.end61, !dbg !12091

if.then43:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i8** %checkn, metadata !12092, metadata !2256), !dbg !12094
  %38 = load i8*, i8** %name.addr, align 8, !dbg !12095
  %39 = load i64, i64* %namelen, align 8, !dbg !12096
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !12097
  %40 = load i64, i64* %tok_end, align 8, !dbg !12098
  %41 = load i64, i64* %tok_start, align 8, !dbg !12099
  %sub44 = sub i64 %40, %41, !dbg !12100
  %idx.neg = sub i64 0, %sub44, !dbg !12101
  %add.ptr45 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !12101
  store i8* %add.ptr45, i8** %checkn, align 8, !dbg !12094
  %42 = load i8*, i8** %no_proxy.addr, align 8, !dbg !12102
  %43 = load i64, i64* %tok_start, align 8, !dbg !12102
  %add.ptr46 = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !12102
  %44 = load i8*, i8** %checkn, align 8, !dbg !12102
  %45 = load i64, i64* %tok_end, align 8, !dbg !12102
  %46 = load i64, i64* %tok_start, align 8, !dbg !12102
  %sub47 = sub i64 %45, %46, !dbg !12102
  %call48 = call i32 @Curl_strncasecompare(i8* %add.ptr46, i8* %44, i64 %sub47), !dbg !12102
  %tobool49 = icmp ne i32 %call48, 0, !dbg !12102
  br i1 %tobool49, label %if.then50, label %if.end60, !dbg !12104

if.then50:                                        ; preds = %if.then43
  %47 = load i64, i64* %tok_end, align 8, !dbg !12105
  %48 = load i64, i64* %tok_start, align 8, !dbg !12108
  %sub51 = sub i64 %47, %48, !dbg !12109
  %49 = load i64, i64* %namelen, align 8, !dbg !12110
  %cmp52 = icmp eq i64 %sub51, %49, !dbg !12111
  br i1 %cmp52, label %if.then58, label %lor.lhs.false, !dbg !12112

lor.lhs.false:                                    ; preds = %if.then50
  %50 = load i8*, i8** %checkn, align 8, !dbg !12113
  %add.ptr54 = getelementptr inbounds i8, i8* %50, i64 -1, !dbg !12115
  %51 = load i8, i8* %add.ptr54, align 1, !dbg !12116
  %conv55 = sext i8 %51 to i32, !dbg !12116
  %cmp56 = icmp eq i32 %conv55, 46, !dbg !12117
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !12118

if.then58:                                        ; preds = %lor.lhs.false, %if.then50
  store i1 true, i1* %retval, align 1, !dbg !12119
  br label %return, !dbg !12119

if.end59:                                         ; preds = %lor.lhs.false
  br label %if.end60, !dbg !12121

if.end60:                                         ; preds = %if.end59, %if.then43
  br label %if.end61, !dbg !12122

if.end61:                                         ; preds = %if.end60, %if.end40
  br label %for.inc62, !dbg !12123

for.inc62:                                        ; preds = %if.end61
  %52 = load i64, i64* %tok_end, align 8, !dbg !12124
  %add = add i64 %52, 1, !dbg !12126
  store i64 %add, i64* %tok_start, align 8, !dbg !12127
  br label %for.cond, !dbg !12128

for.end63:                                        ; preds = %if.then20, %for.cond
  br label %if.end64, !dbg !12129

if.end64:                                         ; preds = %for.end63, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !12130
  br label %return, !dbg !12130

return:                                           ; preds = %if.end64, %if.then58, %if.then3
  %53 = load i1, i1* %retval, align 1, !dbg !12131
  ret i1 %53, !dbg !12131
}

; Function Attrs: nounwind uwtable
define internal i8* @detect_proxy(%struct.connectdata* %conn) #0 !dbg !2176 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxy = alloca i8*, align 8
  %proxy_env = alloca [128 x i8], align 16
  %protop = alloca i8*, align 8
  %envp = alloca i8*, align 8
  %prox = alloca i8*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !12132, metadata !2256), !dbg !12133
  call void @llvm.dbg.declare(metadata i8** %proxy, metadata !12134, metadata !2256), !dbg !12135
  store i8* null, i8** %proxy, align 8, !dbg !12135
  call void @llvm.dbg.declare(metadata [128 x i8]* %proxy_env, metadata !12136, metadata !2256), !dbg !12140
  call void @llvm.dbg.declare(metadata i8** %protop, metadata !12141, metadata !2256), !dbg !12142
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12143
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 47, !dbg !12144
  %1 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !12144
  %scheme = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %1, i32 0, i32 0, !dbg !12145
  %2 = load i8*, i8** %scheme, align 8, !dbg !12145
  store i8* %2, i8** %protop, align 8, !dbg !12142
  call void @llvm.dbg.declare(metadata i8** %envp, metadata !12146, metadata !2256), !dbg !12147
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12148
  store i8* %arraydecay, i8** %envp, align 8, !dbg !12147
  call void @llvm.dbg.declare(metadata i8** %prox, metadata !12149, metadata !2256), !dbg !12150
  br label %while.cond, !dbg !12151

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i8*, i8** %protop, align 8, !dbg !12152
  %4 = load i8, i8* %3, align 1, !dbg !12154
  %tobool = icmp ne i8 %4, 0, !dbg !12155
  br i1 %tobool, label %while.body, label %while.end, !dbg !12155

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %protop, align 8, !dbg !12156
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12156
  store i8* %incdec.ptr, i8** %protop, align 8, !dbg !12156
  %6 = load i8, i8* %5, align 1, !dbg !12157
  %conv = sext i8 %6 to i32, !dbg !12158
  %call = call i32 @tolower(i32 %conv) #8, !dbg !12159
  %conv1 = trunc i32 %call to i8, !dbg !12160
  %7 = load i8*, i8** %envp, align 8, !dbg !12161
  %incdec.ptr2 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12161
  store i8* %incdec.ptr2, i8** %envp, align 8, !dbg !12161
  store i8 %conv1, i8* %7, align 1, !dbg !12162
  br label %while.cond, !dbg !12163

while.end:                                        ; preds = %while.cond
  %8 = load i8*, i8** %envp, align 8, !dbg !12165
  %call3 = call i8* @strcpy(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0)) #8, !dbg !12166
  %arraydecay4 = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12167
  %call5 = call i8* @curl_getenv(i8* %arraydecay4), !dbg !12168
  store i8* %call5, i8** %prox, align 8, !dbg !12169
  %9 = load i8*, i8** %prox, align 8, !dbg !12170
  %tobool6 = icmp ne i8* %9, null, !dbg !12170
  br i1 %tobool6, label %if.end, label %land.lhs.true, !dbg !12172

land.lhs.true:                                    ; preds = %while.end
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12173
  %call8 = call i32 @Curl_strcasecompare(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), i8* %arraydecay7), !dbg !12173
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12173
  br i1 %tobool9, label %if.end, label %if.then, !dbg !12175

if.then:                                          ; preds = %land.lhs.true
  %arraydecay10 = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12176
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12178
  call void @Curl_strntoupper(i8* %arraydecay10, i8* %arraydecay11, i64 128), !dbg !12179
  %arraydecay12 = getelementptr inbounds [128 x i8], [128 x i8]* %proxy_env, i32 0, i32 0, !dbg !12180
  %call13 = call i8* @curl_getenv(i8* %arraydecay12), !dbg !12181
  store i8* %call13, i8** %prox, align 8, !dbg !12182
  br label %if.end, !dbg !12183

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.end
  %10 = load i8*, i8** %prox, align 8, !dbg !12184
  %tobool14 = icmp ne i8* %10, null, !dbg !12184
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !12186

if.then15:                                        ; preds = %if.end
  %11 = load i8*, i8** %prox, align 8, !dbg !12187
  store i8* %11, i8** %proxy, align 8, !dbg !12188
  br label %if.end21, !dbg !12189

if.else:                                          ; preds = %if.end
  %call16 = call i8* @curl_getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0)), !dbg !12190
  store i8* %call16, i8** %proxy, align 8, !dbg !12192
  %12 = load i8*, i8** %proxy, align 8, !dbg !12193
  %tobool17 = icmp ne i8* %12, null, !dbg !12193
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !12195

if.then18:                                        ; preds = %if.else
  %call19 = call i8* @curl_getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0)), !dbg !12196
  store i8* %call19, i8** %proxy, align 8, !dbg !12197
  br label %if.end20, !dbg !12198

if.end20:                                         ; preds = %if.then18, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then15
  %13 = load i8*, i8** %proxy, align 8, !dbg !12199
  ret i8* %13, !dbg !12200
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_proxy(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %proxy, i32 %proxytype) #0 !dbg !2179 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxy.addr = alloca i8*, align 8
  %proxytype.addr = alloca i32, align 4
  %prox_portno = alloca i8*, align 8
  %endofprot = alloca i8*, align 8
  %proxyptr = alloca i8*, align 8
  %portptr = alloca i8*, align 8
  %atsign = alloca i8*, align 8
  %port = alloca i64, align 8
  %proxyuser = alloca i8*, align 8
  %proxypasswd = alloca i8*, align 8
  %sockstype = alloca i8, align 1
  %result = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %proxyinfo = alloca %struct.proxy_info*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !12201, metadata !2256), !dbg !12202
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !12203, metadata !2256), !dbg !12204
  store i8* %proxy, i8** %proxy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %proxy.addr, metadata !12205, metadata !2256), !dbg !12206
  store i32 %proxytype, i32* %proxytype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proxytype.addr, metadata !12207, metadata !2256), !dbg !12208
  call void @llvm.dbg.declare(metadata i8** %prox_portno, metadata !12209, metadata !2256), !dbg !12210
  call void @llvm.dbg.declare(metadata i8** %endofprot, metadata !12211, metadata !2256), !dbg !12212
  call void @llvm.dbg.declare(metadata i8** %proxyptr, metadata !12213, metadata !2256), !dbg !12214
  call void @llvm.dbg.declare(metadata i8** %portptr, metadata !12215, metadata !2256), !dbg !12216
  call void @llvm.dbg.declare(metadata i8** %atsign, metadata !12217, metadata !2256), !dbg !12218
  call void @llvm.dbg.declare(metadata i64* %port, metadata !12219, metadata !2256), !dbg !12220
  store i64 -1, i64* %port, align 8, !dbg !12220
  call void @llvm.dbg.declare(metadata i8** %proxyuser, metadata !12221, metadata !2256), !dbg !12222
  store i8* null, i8** %proxyuser, align 8, !dbg !12222
  call void @llvm.dbg.declare(metadata i8** %proxypasswd, metadata !12223, metadata !2256), !dbg !12224
  store i8* null, i8** %proxypasswd, align 8, !dbg !12224
  call void @llvm.dbg.declare(metadata i8* %sockstype, metadata !12225, metadata !2256), !dbg !12226
  %0 = load i8*, i8** %proxy.addr, align 8, !dbg !12227
  %call = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0)) #7, !dbg !12228
  store i8* %call, i8** %endofprot, align 8, !dbg !12229
  %1 = load i8*, i8** %endofprot, align 8, !dbg !12230
  %tobool = icmp ne i8* %1, null, !dbg !12230
  br i1 %tobool, label %if.then, label %if.else31, !dbg !12232

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %endofprot, align 8, !dbg !12233
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 3, !dbg !12235
  store i8* %add.ptr, i8** %proxyptr, align 8, !dbg !12236
  %3 = load i8*, i8** %proxy.addr, align 8, !dbg !12237
  %call1 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* %3, i64 5), !dbg !12237
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12237
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !12239

if.then3:                                         ; preds = %if.then
  store i32 2, i32* %proxytype.addr, align 4, !dbg !12240
  br label %if.end30, !dbg !12241

if.else:                                          ; preds = %if.then
  %4 = load i8*, i8** %proxy.addr, align 8, !dbg !12242
  %call4 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* %4, i64 7), !dbg !12242
  %tobool5 = icmp ne i32 %call4, 0, !dbg !12242
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !12244

if.then6:                                         ; preds = %if.else
  store i32 7, i32* %proxytype.addr, align 4, !dbg !12245
  br label %if.end29, !dbg !12246

if.else7:                                         ; preds = %if.else
  %5 = load i8*, i8** %proxy.addr, align 8, !dbg !12247
  %call8 = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0), i8* %5, i64 6), !dbg !12247
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12247
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !12249

if.then10:                                        ; preds = %if.else7
  store i32 5, i32* %proxytype.addr, align 4, !dbg !12250
  br label %if.end28, !dbg !12251

if.else11:                                        ; preds = %if.else7
  %6 = load i8*, i8** %proxy.addr, align 8, !dbg !12252
  %call12 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), i8* %6, i64 7), !dbg !12252
  %tobool13 = icmp ne i32 %call12, 0, !dbg !12252
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !12254

if.then14:                                        ; preds = %if.else11
  store i32 6, i32* %proxytype.addr, align 4, !dbg !12255
  br label %if.end27, !dbg !12256

if.else15:                                        ; preds = %if.else11
  %7 = load i8*, i8** %proxy.addr, align 8, !dbg !12257
  %call16 = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* %7, i64 6), !dbg !12257
  %tobool17 = icmp ne i32 %call16, 0, !dbg !12257
  br i1 %tobool17, label %if.then20, label %lor.lhs.false, !dbg !12259

lor.lhs.false:                                    ; preds = %if.else15
  %8 = load i8*, i8** %proxy.addr, align 8, !dbg !12260
  %call18 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8* %8, i64 5), !dbg !12260
  %tobool19 = icmp ne i32 %call18, 0, !dbg !12260
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !12262

if.then20:                                        ; preds = %lor.lhs.false, %if.else15
  store i32 4, i32* %proxytype.addr, align 4, !dbg !12263
  br label %if.end26, !dbg !12264

if.else21:                                        ; preds = %lor.lhs.false
  %9 = load i8*, i8** %proxy.addr, align 8, !dbg !12265
  %call22 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* %9, i64 5), !dbg !12265
  %tobool23 = icmp ne i32 %call22, 0, !dbg !12265
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !12267

if.then24:                                        ; preds = %if.else21
  br label %if.end, !dbg !12268

if.else25:                                        ; preds = %if.else21
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12269
  %11 = load i8*, i8** %proxy.addr, align 8, !dbg !12271
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i32 0, i32 0), i8* %11), !dbg !12272
  store i32 7, i32* %retval, align 4, !dbg !12273
  br label %return, !dbg !12273

if.end:                                           ; preds = %if.then24
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then14
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then10
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then6
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then3
  br label %if.end32, !dbg !12274

if.else31:                                        ; preds = %entry
  %12 = load i8*, i8** %proxy.addr, align 8, !dbg !12275
  store i8* %12, i8** %proxyptr, align 8, !dbg !12276
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  %13 = load i32, i32* %proxytype.addr, align 4, !dbg !12277
  %cmp = icmp eq i32 %13, 2, !dbg !12279
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !12280

if.then33:                                        ; preds = %if.end32
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12281
  %15 = load i8*, i8** %proxy.addr, align 8, !dbg !12283
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %14, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.77, i32 0, i32 0), i8* %15), !dbg !12284
  store i32 4, i32* %retval, align 4, !dbg !12285
  br label %return, !dbg !12285

if.end34:                                         ; preds = %if.end32
  %16 = load i32, i32* %proxytype.addr, align 4, !dbg !12286
  %cmp35 = icmp eq i32 %16, 7, !dbg !12287
  br i1 %cmp35, label %lor.end, label %lor.lhs.false36, !dbg !12288

lor.lhs.false36:                                  ; preds = %if.end34
  %17 = load i32, i32* %proxytype.addr, align 4, !dbg !12289
  %cmp37 = icmp eq i32 %17, 5, !dbg !12290
  br i1 %cmp37, label %lor.end, label %lor.lhs.false38, !dbg !12291

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %18 = load i32, i32* %proxytype.addr, align 4, !dbg !12292
  %cmp39 = icmp eq i32 %18, 6, !dbg !12293
  br i1 %cmp39, label %lor.end, label %lor.rhs, !dbg !12294

lor.rhs:                                          ; preds = %lor.lhs.false38
  %19 = load i32, i32* %proxytype.addr, align 4, !dbg !12295
  %cmp40 = icmp eq i32 %19, 4, !dbg !12296
  br label %lor.end, !dbg !12297

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false38, %lor.lhs.false36, %if.end34
  %20 = phi i1 [ true, %lor.lhs.false38 ], [ true, %lor.lhs.false36 ], [ true, %if.end34 ], [ %cmp40, %lor.rhs ]
  %frombool = zext i1 %20 to i8, !dbg !12299
  store i8 %frombool, i8* %sockstype, align 1, !dbg !12299
  %21 = load i8*, i8** %proxyptr, align 8, !dbg !12300
  %call41 = call i8* @strchr(i8* %21, i32 64) #7, !dbg !12301
  store i8* %call41, i8** %atsign, align 8, !dbg !12302
  %22 = load i8*, i8** %atsign, align 8, !dbg !12303
  %tobool42 = icmp ne i8* %22, null, !dbg !12303
  br i1 %tobool42, label %if.then43, label %if.end49, !dbg !12305

if.then43:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12306, metadata !2256), !dbg !12308
  %23 = load i8*, i8** %proxyptr, align 8, !dbg !12309
  %24 = load i8*, i8** %atsign, align 8, !dbg !12310
  %25 = load i8*, i8** %proxyptr, align 8, !dbg !12311
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64, !dbg !12312
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64, !dbg !12312
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12312
  %call44 = call i32 @parse_login_details(i8* %23, i64 %sub.ptr.sub, i8** %proxyuser, i8** %proxypasswd, i8** null), !dbg !12313
  store i32 %call44, i32* %result, align 4, !dbg !12308
  %26 = load i32, i32* %result, align 4, !dbg !12314
  %tobool45 = icmp ne i32 %26, 0, !dbg !12314
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !12316

if.then46:                                        ; preds = %if.then43
  %27 = load i32, i32* %result, align 4, !dbg !12317
  store i32 %27, i32* %retval, align 4, !dbg !12318
  br label %return, !dbg !12318

if.end47:                                         ; preds = %if.then43
  %28 = load i8*, i8** %atsign, align 8, !dbg !12319
  %add.ptr48 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !12320
  store i8* %add.ptr48, i8** %proxyptr, align 8, !dbg !12321
  br label %if.end49, !dbg !12322

if.end49:                                         ; preds = %if.end47, %lor.end
  %29 = load i8*, i8** %proxyptr, align 8, !dbg !12323
  store i8* %29, i8** %portptr, align 8, !dbg !12324
  %30 = load i8*, i8** %proxyptr, align 8, !dbg !12325
  %31 = load i8, i8* %30, align 1, !dbg !12327
  %conv = sext i8 %31 to i32, !dbg !12327
  %cmp50 = icmp eq i32 %conv, 91, !dbg !12328
  br i1 %cmp50, label %if.then52, label %if.end126, !dbg !12329

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !12330, metadata !2256), !dbg !12332
  %32 = load i8*, i8** %proxyptr, align 8, !dbg !12333
  %incdec.ptr = getelementptr inbounds i8, i8* %32, i32 1, !dbg !12333
  store i8* %incdec.ptr, i8** %proxyptr, align 8, !dbg !12333
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !12332
  br label %while.cond, !dbg !12334

while.cond:                                       ; preds = %while.body, %if.then52
  %33 = load i8*, i8** %ptr, align 8, !dbg !12335
  %34 = load i8, i8* %33, align 1, !dbg !12337
  %conv53 = sext i8 %34 to i32, !dbg !12337
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !12337
  br i1 %tobool54, label %land.rhs, label %land.end, !dbg !12338

land.rhs:                                         ; preds = %while.cond
  %35 = load i8*, i8** %ptr, align 8, !dbg !12339
  %36 = load i8, i8* %35, align 1, !dbg !12339
  %conv55 = zext i8 %36 to i32, !dbg !12339
  %idxprom = sext i32 %conv55 to i64, !dbg !12339
  %call56 = call i16** @__ctype_b_loc() #1, !dbg !12339
  %37 = load i16*, i16** %call56, align 8, !dbg !12339
  %arrayidx = getelementptr inbounds i16, i16* %37, i64 %idxprom, !dbg !12339
  %38 = load i16, i16* %arrayidx, align 2, !dbg !12339
  %conv57 = zext i16 %38 to i32, !dbg !12339
  %and = and i32 %conv57, 4096, !dbg !12339
  %tobool58 = icmp ne i32 %and, 0, !dbg !12339
  br i1 %tobool58, label %lor.end67, label %lor.lhs.false59, !dbg !12341

lor.lhs.false59:                                  ; preds = %land.rhs
  %39 = load i8*, i8** %ptr, align 8, !dbg !12342
  %40 = load i8, i8* %39, align 1, !dbg !12344
  %conv60 = sext i8 %40 to i32, !dbg !12344
  %cmp61 = icmp eq i32 %conv60, 58, !dbg !12345
  br i1 %cmp61, label %lor.end67, label %lor.rhs63, !dbg !12346

lor.rhs63:                                        ; preds = %lor.lhs.false59
  %41 = load i8*, i8** %ptr, align 8, !dbg !12347
  %42 = load i8, i8* %41, align 1, !dbg !12349
  %conv64 = sext i8 %42 to i32, !dbg !12349
  %cmp65 = icmp eq i32 %conv64, 46, !dbg !12350
  br label %lor.end67, !dbg !12351

lor.end67:                                        ; preds = %lor.rhs63, %lor.lhs.false59, %land.rhs
  %43 = phi i1 [ true, %lor.lhs.false59 ], [ true, %land.rhs ], [ %cmp65, %lor.rhs63 ]
  br label %land.end

land.end:                                         ; preds = %lor.end67, %while.cond
  %44 = phi i1 [ false, %while.cond ], [ %43, %lor.end67 ]
  br i1 %44, label %while.body, label %while.end, !dbg !12352

while.body:                                       ; preds = %land.end
  %45 = load i8*, i8** %ptr, align 8, !dbg !12354
  %incdec.ptr68 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !12354
  store i8* %incdec.ptr68, i8** %ptr, align 8, !dbg !12354
  br label %while.cond, !dbg !12355

while.end:                                        ; preds = %land.end
  %46 = load i8*, i8** %ptr, align 8, !dbg !12357
  %47 = load i8, i8* %46, align 1, !dbg !12359
  %conv69 = sext i8 %47 to i32, !dbg !12359
  %cmp70 = icmp eq i32 %conv69, 37, !dbg !12360
  br i1 %cmp70, label %if.then72, label %if.end118, !dbg !12361

if.then72:                                        ; preds = %while.end
  %48 = load i8*, i8** %ptr, align 8, !dbg !12362
  %call73 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i8* %48, i64 3) #7, !dbg !12365
  %tobool74 = icmp ne i32 %call73, 0, !dbg !12365
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !12366

if.then75:                                        ; preds = %if.then72
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12367
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %49, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.56, i32 0, i32 0)), !dbg !12368
  br label %if.end76, !dbg !12368

if.end76:                                         ; preds = %if.then75, %if.then72
  %50 = load i8*, i8** %ptr, align 8, !dbg !12369
  %incdec.ptr77 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !12369
  store i8* %incdec.ptr77, i8** %ptr, align 8, !dbg !12369
  br label %while.cond78, !dbg !12370

while.cond78:                                     ; preds = %while.body115, %if.end76
  %51 = load i8*, i8** %ptr, align 8, !dbg !12371
  %52 = load i8, i8* %51, align 1, !dbg !12373
  %conv79 = sext i8 %52 to i32, !dbg !12373
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !12373
  br i1 %tobool80, label %land.rhs81, label %land.end114, !dbg !12374

land.rhs81:                                       ; preds = %while.cond78
  %53 = load i8*, i8** %ptr, align 8, !dbg !12375
  %54 = load i8, i8* %53, align 1, !dbg !12375
  %conv82 = zext i8 %54 to i32, !dbg !12375
  %idxprom83 = sext i32 %conv82 to i64, !dbg !12375
  %call84 = call i16** @__ctype_b_loc() #1, !dbg !12375
  %55 = load i16*, i16** %call84, align 8, !dbg !12375
  %arrayidx85 = getelementptr inbounds i16, i16* %55, i64 %idxprom83, !dbg !12375
  %56 = load i16, i16* %arrayidx85, align 2, !dbg !12375
  %conv86 = zext i16 %56 to i32, !dbg !12375
  %and87 = and i32 %conv86, 1024, !dbg !12375
  %tobool88 = icmp ne i32 %and87, 0, !dbg !12375
  br i1 %tobool88, label %lor.end113, label %lor.lhs.false89, !dbg !12377

lor.lhs.false89:                                  ; preds = %land.rhs81
  %57 = load i8*, i8** %ptr, align 8, !dbg !12378
  %58 = load i8, i8* %57, align 1, !dbg !12378
  %conv90 = zext i8 %58 to i32, !dbg !12378
  %idxprom91 = sext i32 %conv90 to i64, !dbg !12378
  %call92 = call i16** @__ctype_b_loc() #1, !dbg !12378
  %59 = load i16*, i16** %call92, align 8, !dbg !12378
  %arrayidx93 = getelementptr inbounds i16, i16* %59, i64 %idxprom91, !dbg !12378
  %60 = load i16, i16* %arrayidx93, align 2, !dbg !12378
  %conv94 = zext i16 %60 to i32, !dbg !12378
  %and95 = and i32 %conv94, 4096, !dbg !12378
  %tobool96 = icmp ne i32 %and95, 0, !dbg !12378
  br i1 %tobool96, label %lor.end113, label %lor.lhs.false97, !dbg !12380

lor.lhs.false97:                                  ; preds = %lor.lhs.false89
  %61 = load i8*, i8** %ptr, align 8, !dbg !12381
  %62 = load i8, i8* %61, align 1, !dbg !12383
  %conv98 = sext i8 %62 to i32, !dbg !12383
  %cmp99 = icmp eq i32 %conv98, 45, !dbg !12384
  br i1 %cmp99, label %lor.end113, label %lor.lhs.false101, !dbg !12385

lor.lhs.false101:                                 ; preds = %lor.lhs.false97
  %63 = load i8*, i8** %ptr, align 8, !dbg !12386
  %64 = load i8, i8* %63, align 1, !dbg !12387
  %conv102 = sext i8 %64 to i32, !dbg !12387
  %cmp103 = icmp eq i32 %conv102, 46, !dbg !12388
  br i1 %cmp103, label %lor.end113, label %lor.lhs.false105, !dbg !12389

lor.lhs.false105:                                 ; preds = %lor.lhs.false101
  %65 = load i8*, i8** %ptr, align 8, !dbg !12390
  %66 = load i8, i8* %65, align 1, !dbg !12391
  %conv106 = sext i8 %66 to i32, !dbg !12391
  %cmp107 = icmp eq i32 %conv106, 95, !dbg !12392
  br i1 %cmp107, label %lor.end113, label %lor.rhs109, !dbg !12393

lor.rhs109:                                       ; preds = %lor.lhs.false105
  %67 = load i8*, i8** %ptr, align 8, !dbg !12394
  %68 = load i8, i8* %67, align 1, !dbg !12395
  %conv110 = sext i8 %68 to i32, !dbg !12395
  %cmp111 = icmp eq i32 %conv110, 126, !dbg !12396
  br label %lor.end113, !dbg !12397

lor.end113:                                       ; preds = %lor.rhs109, %lor.lhs.false105, %lor.lhs.false101, %lor.lhs.false97, %lor.lhs.false89, %land.rhs81
  %69 = phi i1 [ true, %lor.lhs.false105 ], [ true, %lor.lhs.false101 ], [ true, %lor.lhs.false97 ], [ true, %lor.lhs.false89 ], [ true, %land.rhs81 ], [ %cmp111, %lor.rhs109 ]
  br label %land.end114

land.end114:                                      ; preds = %lor.end113, %while.cond78
  %70 = phi i1 [ false, %while.cond78 ], [ %69, %lor.end113 ]
  br i1 %70, label %while.body115, label %while.end117, !dbg !12398

while.body115:                                    ; preds = %land.end114
  %71 = load i8*, i8** %ptr, align 8, !dbg !12400
  %incdec.ptr116 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !12400
  store i8* %incdec.ptr116, i8** %ptr, align 8, !dbg !12400
  br label %while.cond78, !dbg !12401

while.end117:                                     ; preds = %land.end114
  br label %if.end118, !dbg !12403

if.end118:                                        ; preds = %while.end117, %while.end
  %72 = load i8*, i8** %ptr, align 8, !dbg !12404
  %73 = load i8, i8* %72, align 1, !dbg !12406
  %conv119 = sext i8 %73 to i32, !dbg !12406
  %cmp120 = icmp eq i32 %conv119, 93, !dbg !12407
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !12408

if.then122:                                       ; preds = %if.end118
  %74 = load i8*, i8** %ptr, align 8, !dbg !12409
  %incdec.ptr123 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !12409
  store i8* %incdec.ptr123, i8** %ptr, align 8, !dbg !12409
  store i8 0, i8* %74, align 1, !dbg !12410
  br label %if.end125, !dbg !12411

if.else124:                                       ; preds = %if.end118
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12412
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %75, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.57, i32 0, i32 0)), !dbg !12413
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then122
  %76 = load i8*, i8** %ptr, align 8, !dbg !12414
  store i8* %76, i8** %portptr, align 8, !dbg !12415
  br label %if.end126, !dbg !12416

if.end126:                                        ; preds = %if.end125, %if.end49
  %77 = load i8*, i8** %portptr, align 8, !dbg !12417
  %call127 = call i8* @strchr(i8* %77, i32 58) #7, !dbg !12418
  store i8* %call127, i8** %prox_portno, align 8, !dbg !12419
  %78 = load i8*, i8** %prox_portno, align 8, !dbg !12420
  %tobool128 = icmp ne i8* %78, null, !dbg !12420
  br i1 %tobool128, label %if.then129, label %if.else153, !dbg !12422

if.then129:                                       ; preds = %if.end126
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !12423, metadata !2256), !dbg !12425
  store i8* null, i8** %endp, align 8, !dbg !12425
  %79 = load i8*, i8** %prox_portno, align 8, !dbg !12426
  store i8 0, i8* %79, align 1, !dbg !12427
  %80 = load i8*, i8** %prox_portno, align 8, !dbg !12428
  %incdec.ptr130 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !12428
  store i8* %incdec.ptr130, i8** %prox_portno, align 8, !dbg !12428
  %81 = load i8*, i8** %prox_portno, align 8, !dbg !12429
  %call131 = call i64 @strtol(i8* %81, i8** %endp, i32 10) #8, !dbg !12430
  store i64 %call131, i64* %port, align 8, !dbg !12431
  %82 = load i8*, i8** %endp, align 8, !dbg !12432
  %tobool132 = icmp ne i8* %82, null, !dbg !12432
  br i1 %tobool132, label %land.lhs.true, label %lor.lhs.false143, !dbg !12434

land.lhs.true:                                    ; preds = %if.then129
  %83 = load i8*, i8** %endp, align 8, !dbg !12435
  %84 = load i8, i8* %83, align 1, !dbg !12437
  %conv133 = sext i8 %84 to i32, !dbg !12437
  %tobool134 = icmp ne i32 %conv133, 0, !dbg !12437
  br i1 %tobool134, label %land.lhs.true135, label %lor.lhs.false143, !dbg !12438

land.lhs.true135:                                 ; preds = %land.lhs.true
  %85 = load i8*, i8** %endp, align 8, !dbg !12439
  %86 = load i8, i8* %85, align 1, !dbg !12441
  %conv136 = sext i8 %86 to i32, !dbg !12441
  %cmp137 = icmp ne i32 %conv136, 47, !dbg !12442
  br i1 %cmp137, label %land.lhs.true139, label %lor.lhs.false143, !dbg !12443

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %87 = load i8*, i8** %endp, align 8, !dbg !12444
  %88 = load i8, i8* %87, align 1, !dbg !12446
  %conv140 = sext i8 %88 to i32, !dbg !12446
  %cmp141 = icmp ne i32 %conv140, 32, !dbg !12447
  br i1 %cmp141, label %if.then149, label %lor.lhs.false143, !dbg !12448

lor.lhs.false143:                                 ; preds = %land.lhs.true139, %land.lhs.true135, %land.lhs.true, %if.then129
  %89 = load i64, i64* %port, align 8, !dbg !12449
  %cmp144 = icmp slt i64 %89, 0, !dbg !12450
  br i1 %cmp144, label %if.then149, label %lor.lhs.false146, !dbg !12451

lor.lhs.false146:                                 ; preds = %lor.lhs.false143
  %90 = load i64, i64* %port, align 8, !dbg !12452
  %cmp147 = icmp sgt i64 %90, 65535, !dbg !12453
  br i1 %cmp147, label %if.then149, label %if.else150, !dbg !12454

if.then149:                                       ; preds = %lor.lhs.false146, %lor.lhs.false143, %land.lhs.true139
  %91 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12456
  %92 = load i8*, i8** %prox_portno, align 8, !dbg !12458
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.78, i32 0, i32 0), i8* %92), !dbg !12459
  br label %if.end152, !dbg !12460

if.else150:                                       ; preds = %lor.lhs.false146
  %93 = load i64, i64* %port, align 8, !dbg !12461
  %94 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12462
  %port151 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %94, i32 0, i32 17, !dbg !12463
  store i64 %93, i64* %port151, align 8, !dbg !12464
  br label %if.end152

if.end152:                                        ; preds = %if.else150, %if.then149
  br label %if.end175, !dbg !12465

if.else153:                                       ; preds = %if.end126
  %95 = load i8*, i8** %proxyptr, align 8, !dbg !12466
  %arrayidx154 = getelementptr inbounds i8, i8* %95, i64 0, !dbg !12466
  %96 = load i8, i8* %arrayidx154, align 1, !dbg !12466
  %conv155 = sext i8 %96 to i32, !dbg !12466
  %cmp156 = icmp eq i32 %conv155, 47, !dbg !12469
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !12470

if.then158:                                       ; preds = %if.else153
  store i32 5, i32* %retval, align 4, !dbg !12471
  br label %return, !dbg !12471

if.end159:                                        ; preds = %if.else153
  %97 = load i8*, i8** %proxyptr, align 8, !dbg !12472
  %call160 = call i8* @strchr(i8* %97, i32 47) #7, !dbg !12473
  store i8* %call160, i8** %atsign, align 8, !dbg !12474
  %98 = load i8*, i8** %atsign, align 8, !dbg !12475
  %tobool161 = icmp ne i8* %98, null, !dbg !12475
  br i1 %tobool161, label %if.then162, label %if.end163, !dbg !12477

if.then162:                                       ; preds = %if.end159
  %99 = load i8*, i8** %atsign, align 8, !dbg !12478
  store i8 0, i8* %99, align 1, !dbg !12479
  br label %if.end163, !dbg !12480

if.end163:                                        ; preds = %if.then162, %if.end159
  %100 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12481
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %100, i32 0, i32 13, !dbg !12483
  %proxyport = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 3, !dbg !12484
  %101 = load i64, i64* %proxyport, align 8, !dbg !12484
  %tobool164 = icmp ne i64 %101, 0, !dbg !12481
  br i1 %tobool164, label %if.then165, label %if.else168, !dbg !12485

if.then165:                                       ; preds = %if.end163
  %102 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12486
  %set166 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %102, i32 0, i32 13, !dbg !12487
  %proxyport167 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set166, i32 0, i32 3, !dbg !12488
  %103 = load i64, i64* %proxyport167, align 8, !dbg !12488
  store i64 %103, i64* %port, align 8, !dbg !12489
  br label %if.end174, !dbg !12490

if.else168:                                       ; preds = %if.end163
  %104 = load i32, i32* %proxytype.addr, align 4, !dbg !12491
  %cmp169 = icmp eq i32 %104, 2, !dbg !12494
  br i1 %cmp169, label %if.then171, label %if.else172, !dbg !12495

if.then171:                                       ; preds = %if.else168
  store i64 443, i64* %port, align 8, !dbg !12496
  br label %if.end173, !dbg !12497

if.else172:                                       ; preds = %if.else168
  store i64 1080, i64* %port, align 8, !dbg !12498
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then171
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end152
  %105 = load i8*, i8** %proxyptr, align 8, !dbg !12499
  %106 = load i8, i8* %105, align 1, !dbg !12501
  %tobool176 = icmp ne i8 %106, 0, !dbg !12501
  br i1 %tobool176, label %if.then177, label %if.end250, !dbg !12502

if.then177:                                       ; preds = %if.end175
  call void @llvm.dbg.declare(metadata %struct.proxy_info** %proxyinfo, metadata !12503, metadata !2256), !dbg !12506
  %107 = load i8, i8* %sockstype, align 1, !dbg !12507
  %tobool178 = trunc i8 %107 to i1, !dbg !12507
  br i1 %tobool178, label %cond.true, label %cond.false, !dbg !12507

cond.true:                                        ; preds = %if.then177
  %108 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12508
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %108, i32 0, i32 15, !dbg !12510
  br label %cond.end, !dbg !12511

cond.false:                                       ; preds = %if.then177
  %109 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12512
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %109, i32 0, i32 16, !dbg !12514
  br label %cond.end, !dbg !12515

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.proxy_info* [ %socks_proxy, %cond.true ], [ %http_proxy, %cond.false ], !dbg !12516
  store %struct.proxy_info* %cond, %struct.proxy_info** %proxyinfo, align 8, !dbg !12506
  %110 = load i32, i32* %proxytype.addr, align 4, !dbg !12518
  %111 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12519
  %proxytype180 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %111, i32 0, i32 2, !dbg !12520
  store i32 %110, i32* %proxytype180, align 8, !dbg !12521
  %112 = load i8*, i8** %proxyuser, align 8, !dbg !12522
  %tobool181 = icmp ne i8* %112, null, !dbg !12522
  br i1 %tobool181, label %if.then182, label %if.end215, !dbg !12524

if.then182:                                       ; preds = %cond.end
  br label %do.body, !dbg !12525

do.body:                                          ; preds = %if.then182
  %113 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12527
  %114 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12527
  %user = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %114, i32 0, i32 3, !dbg !12527
  %115 = load i8*, i8** %user, align 8, !dbg !12527
  call void %113(i8* %115), !dbg !12527
  %116 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12527
  %user183 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %116, i32 0, i32 3, !dbg !12527
  store i8* null, i8** %user183, align 8, !dbg !12527
  br label %do.end, !dbg !12527

do.end:                                           ; preds = %do.body
  %117 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12530
  %118 = load i8*, i8** %proxyuser, align 8, !dbg !12531
  %call184 = call i8* @curl_easy_unescape(%struct.Curl_easy* %117, i8* %118, i32 0, i32* null), !dbg !12532
  %119 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12533
  %user185 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %119, i32 0, i32 3, !dbg !12534
  store i8* %call184, i8** %user185, align 8, !dbg !12535
  br label %do.body186, !dbg !12536

do.body186:                                       ; preds = %do.end
  %120 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12537
  %121 = load i8*, i8** %proxyuser, align 8, !dbg !12537
  call void %120(i8* %121), !dbg !12537
  store i8* null, i8** %proxyuser, align 8, !dbg !12537
  br label %do.end187, !dbg !12537

do.end187:                                        ; preds = %do.body186
  %122 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12540
  %user188 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %122, i32 0, i32 3, !dbg !12542
  %123 = load i8*, i8** %user188, align 8, !dbg !12542
  %tobool189 = icmp ne i8* %123, null, !dbg !12540
  br i1 %tobool189, label %if.end193, label %if.then190, !dbg !12543

if.then190:                                       ; preds = %do.end187
  br label %do.body191, !dbg !12544

do.body191:                                       ; preds = %if.then190
  %124 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12546
  %125 = load i8*, i8** %proxypasswd, align 8, !dbg !12546
  call void %124(i8* %125), !dbg !12546
  store i8* null, i8** %proxypasswd, align 8, !dbg !12546
  br label %do.end192, !dbg !12546

do.end192:                                        ; preds = %do.body191
  store i32 27, i32* %retval, align 4, !dbg !12549
  br label %return, !dbg !12549

if.end193:                                        ; preds = %do.end187
  br label %do.body194, !dbg !12550

do.body194:                                       ; preds = %if.end193
  %126 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12551
  %127 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12551
  %passwd = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %127, i32 0, i32 4, !dbg !12551
  %128 = load i8*, i8** %passwd, align 8, !dbg !12551
  call void %126(i8* %128), !dbg !12551
  %129 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12551
  %passwd195 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %129, i32 0, i32 4, !dbg !12551
  store i8* null, i8** %passwd195, align 8, !dbg !12551
  br label %do.end196, !dbg !12551

do.end196:                                        ; preds = %do.body194
  %130 = load i8*, i8** %proxypasswd, align 8, !dbg !12554
  %tobool197 = icmp ne i8* %130, null, !dbg !12554
  br i1 %tobool197, label %land.lhs.true198, label %if.else205, !dbg !12556

land.lhs.true198:                                 ; preds = %do.end196
  %131 = load i8*, i8** %proxypasswd, align 8, !dbg !12557
  %call199 = call i64 @strlen(i8* %131) #7, !dbg !12559
  %cmp200 = icmp ult i64 %call199, 256, !dbg !12560
  br i1 %cmp200, label %if.then202, label %if.else205, !dbg !12561

if.then202:                                       ; preds = %land.lhs.true198
  %132 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12562
  %133 = load i8*, i8** %proxypasswd, align 8, !dbg !12563
  %call203 = call i8* @curl_easy_unescape(%struct.Curl_easy* %132, i8* %133, i32 0, i32* null), !dbg !12564
  %134 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12565
  %passwd204 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %134, i32 0, i32 4, !dbg !12566
  store i8* %call203, i8** %passwd204, align 8, !dbg !12567
  br label %if.end208, !dbg !12565

if.else205:                                       ; preds = %land.lhs.true198, %do.end196
  %135 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !12568
  %call206 = call i8* %135(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0)), !dbg !12568
  %136 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12569
  %passwd207 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %136, i32 0, i32 4, !dbg !12570
  store i8* %call206, i8** %passwd207, align 8, !dbg !12571
  br label %if.end208

if.end208:                                        ; preds = %if.else205, %if.then202
  br label %do.body209, !dbg !12572

do.body209:                                       ; preds = %if.end208
  %137 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12573
  %138 = load i8*, i8** %proxypasswd, align 8, !dbg !12573
  call void %137(i8* %138), !dbg !12573
  store i8* null, i8** %proxypasswd, align 8, !dbg !12573
  br label %do.end210, !dbg !12573

do.end210:                                        ; preds = %do.body209
  %139 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12576
  %passwd211 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %139, i32 0, i32 4, !dbg !12578
  %140 = load i8*, i8** %passwd211, align 8, !dbg !12578
  %tobool212 = icmp ne i8* %140, null, !dbg !12576
  br i1 %tobool212, label %if.end214, label %if.then213, !dbg !12579

if.then213:                                       ; preds = %do.end210
  store i32 27, i32* %retval, align 4, !dbg !12580
  br label %return, !dbg !12580

if.end214:                                        ; preds = %do.end210
  %141 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12581
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %141, i32 0, i32 43, !dbg !12582
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 8, !dbg !12583
  store i8 1, i8* %proxy_user_passwd, align 1, !dbg !12584
  br label %if.end215, !dbg !12585

if.end215:                                        ; preds = %if.end214, %cond.end
  %142 = load i64, i64* %port, align 8, !dbg !12586
  %cmp216 = icmp sge i64 %142, 0, !dbg !12588
  br i1 %cmp216, label %if.then218, label %if.end232, !dbg !12589

if.then218:                                       ; preds = %if.end215
  %143 = load i64, i64* %port, align 8, !dbg !12590
  %144 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12592
  %port219 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %144, i32 0, i32 1, !dbg !12593
  store i64 %143, i64* %port219, align 8, !dbg !12594
  %145 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12595
  %port220 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %145, i32 0, i32 17, !dbg !12597
  %146 = load i64, i64* %port220, align 8, !dbg !12597
  %cmp221 = icmp slt i64 %146, 0, !dbg !12598
  br i1 %cmp221, label %if.then229, label %lor.lhs.false223, !dbg !12599

lor.lhs.false223:                                 ; preds = %if.then218
  %147 = load i8, i8* %sockstype, align 1, !dbg !12600
  %tobool224 = trunc i8 %147 to i1, !dbg !12600
  br i1 %tobool224, label %if.then229, label %lor.lhs.false226, !dbg !12602

lor.lhs.false226:                                 ; preds = %lor.lhs.false223
  %148 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12603
  %socks_proxy227 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %148, i32 0, i32 15, !dbg !12605
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy227, i32 0, i32 0, !dbg !12606
  %rawalloc = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 0, !dbg !12607
  %149 = load i8*, i8** %rawalloc, align 8, !dbg !12607
  %tobool228 = icmp ne i8* %149, null, !dbg !12603
  br i1 %tobool228, label %if.end231, label %if.then229, !dbg !12608

if.then229:                                       ; preds = %lor.lhs.false226, %lor.lhs.false223, %if.then218
  %150 = load i64, i64* %port, align 8, !dbg !12609
  %151 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12610
  %port230 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %151, i32 0, i32 17, !dbg !12611
  store i64 %150, i64* %port230, align 8, !dbg !12612
  br label %if.end231, !dbg !12610

if.end231:                                        ; preds = %if.then229, %lor.lhs.false226
  br label %if.end232, !dbg !12613

if.end232:                                        ; preds = %if.end231, %if.end215
  br label %do.body233, !dbg !12614

do.body233:                                       ; preds = %if.end232
  %152 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12615
  %153 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12615
  %host234 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %153, i32 0, i32 0, !dbg !12615
  %rawalloc235 = getelementptr inbounds %struct.hostname, %struct.hostname* %host234, i32 0, i32 0, !dbg !12615
  %154 = load i8*, i8** %rawalloc235, align 8, !dbg !12615
  call void %152(i8* %154), !dbg !12615
  %155 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12615
  %host236 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %155, i32 0, i32 0, !dbg !12615
  %rawalloc237 = getelementptr inbounds %struct.hostname, %struct.hostname* %host236, i32 0, i32 0, !dbg !12615
  store i8* null, i8** %rawalloc237, align 8, !dbg !12615
  br label %do.end238, !dbg !12615

do.end238:                                        ; preds = %do.body233
  %156 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !12618
  %157 = load i8*, i8** %proxyptr, align 8, !dbg !12618
  %call239 = call i8* %156(i8* %157), !dbg !12618
  %158 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12619
  %host240 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %158, i32 0, i32 0, !dbg !12620
  %rawalloc241 = getelementptr inbounds %struct.hostname, %struct.hostname* %host240, i32 0, i32 0, !dbg !12621
  store i8* %call239, i8** %rawalloc241, align 8, !dbg !12622
  %159 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12623
  %host242 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %159, i32 0, i32 0, !dbg !12624
  %rawalloc243 = getelementptr inbounds %struct.hostname, %struct.hostname* %host242, i32 0, i32 0, !dbg !12625
  %160 = load i8*, i8** %rawalloc243, align 8, !dbg !12625
  %161 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12626
  %host244 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %161, i32 0, i32 0, !dbg !12627
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host244, i32 0, i32 2, !dbg !12628
  store i8* %160, i8** %name, align 8, !dbg !12629
  %162 = load %struct.proxy_info*, %struct.proxy_info** %proxyinfo, align 8, !dbg !12630
  %host245 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %162, i32 0, i32 0, !dbg !12632
  %rawalloc246 = getelementptr inbounds %struct.hostname, %struct.hostname* %host245, i32 0, i32 0, !dbg !12633
  %163 = load i8*, i8** %rawalloc246, align 8, !dbg !12633
  %tobool247 = icmp ne i8* %163, null, !dbg !12630
  br i1 %tobool247, label %if.end249, label %if.then248, !dbg !12634

if.then248:                                       ; preds = %do.end238
  store i32 27, i32* %retval, align 4, !dbg !12635
  br label %return, !dbg !12635

if.end249:                                        ; preds = %do.end238
  br label %if.end250, !dbg !12636

if.end250:                                        ; preds = %if.end249, %if.end175
  br label %do.body251, !dbg !12637

do.body251:                                       ; preds = %if.end250
  %164 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12638
  %165 = load i8*, i8** %proxyuser, align 8, !dbg !12638
  call void %164(i8* %165), !dbg !12638
  store i8* null, i8** %proxyuser, align 8, !dbg !12638
  br label %do.end252, !dbg !12638

do.end252:                                        ; preds = %do.body251
  br label %do.body253, !dbg !12641

do.body253:                                       ; preds = %do.end252
  %166 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12642
  %167 = load i8*, i8** %proxypasswd, align 8, !dbg !12642
  call void %166(i8* %167), !dbg !12642
  store i8* null, i8** %proxypasswd, align 8, !dbg !12642
  br label %do.end254, !dbg !12642

do.end254:                                        ; preds = %do.body253
  store i32 0, i32* %retval, align 4, !dbg !12645
  br label %return, !dbg !12645

return:                                           ; preds = %do.end254, %if.then248, %if.then213, %do.end192, %if.then158, %if.then46, %if.then33, %if.else25
  %168 = load i32, i32* %retval, align 4, !dbg !12646
  ret i32 %168, !dbg !12646
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #5

declare void @Curl_strntoupper(i8*, i8*, i64) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #5

declare i8* @curl_easy_unescape(%struct.Curl_easy*, i8*, i32, i32*) #3

declare i32 @curl_msnprintf(i8*, i64, i8*, ...) #3

declare zeroext i16 @curlx_ultous(i64) #3

declare i32 @Curl_parsenetrc(i8*, i8**, i8**, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @parse_connect_to_string(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %conn_to_host, i8** %host_result, i32* %port_result) #0 !dbg !2190 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %conn_to_host.addr = alloca i8*, align 8
  %host_result.addr = alloca i8**, align 8
  %port_result.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %host_match = alloca i32, align 4
  %port_match = alloca i32, align 4
  %hostname_to_match_len = alloca i64, align 8
  %hostname_to_match = alloca i8*, align 8
  %ptr_next = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %port_to_match = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !12647, metadata !2256), !dbg !12648
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !12649, metadata !2256), !dbg !12650
  store i8* %conn_to_host, i8** %conn_to_host.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %conn_to_host.addr, metadata !12651, metadata !2256), !dbg !12652
  store i8** %host_result, i8*** %host_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %host_result.addr, metadata !12653, metadata !2256), !dbg !12654
  store i32* %port_result, i32** %port_result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %port_result.addr, metadata !12655, metadata !2256), !dbg !12656
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12657, metadata !2256), !dbg !12658
  store i32 0, i32* %result, align 4, !dbg !12658
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !12659, metadata !2256), !dbg !12660
  %0 = load i8*, i8** %conn_to_host.addr, align 8, !dbg !12661
  store i8* %0, i8** %ptr, align 8, !dbg !12660
  call void @llvm.dbg.declare(metadata i32* %host_match, metadata !12662, metadata !2256), !dbg !12663
  store i32 0, i32* %host_match, align 4, !dbg !12663
  call void @llvm.dbg.declare(metadata i32* %port_match, metadata !12664, metadata !2256), !dbg !12665
  store i32 0, i32* %port_match, align 4, !dbg !12665
  %1 = load i8**, i8*** %host_result.addr, align 8, !dbg !12666
  store i8* null, i8** %1, align 8, !dbg !12667
  %2 = load i32*, i32** %port_result.addr, align 8, !dbg !12668
  store i32 -1, i32* %2, align 4, !dbg !12669
  %3 = load i8*, i8** %ptr, align 8, !dbg !12670
  %4 = load i8, i8* %3, align 1, !dbg !12672
  %conv = sext i8 %4 to i32, !dbg !12672
  %cmp = icmp eq i32 %conv, 58, !dbg !12673
  br i1 %cmp, label %if.then, label %if.else, !dbg !12674

if.then:                                          ; preds = %entry
  store i32 1, i32* %host_match, align 4, !dbg !12675
  %5 = load i8*, i8** %ptr, align 8, !dbg !12677
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12677
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !12677
  br label %if.end17, !dbg !12678

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %hostname_to_match_len, metadata !12679, metadata !2256), !dbg !12681
  call void @llvm.dbg.declare(metadata i8** %hostname_to_match, metadata !12682, metadata !2256), !dbg !12683
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12684
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 43, !dbg !12685
  %ipv6_ip = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 9, !dbg !12686
  %7 = load i8, i8* %ipv6_ip, align 1, !dbg !12686
  %tobool = trunc i8 %7 to i1, !dbg !12686
  %cond = select i1 %tobool, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !12684
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12687
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 12, !dbg !12688
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !12689
  %9 = load i8*, i8** %name, align 8, !dbg !12689
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12690
  %bits3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 43, !dbg !12691
  %ipv6_ip4 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits3, i32 0, i32 9, !dbg !12692
  %11 = load i8, i8* %ipv6_ip4, align 1, !dbg !12692
  %tobool5 = trunc i8 %11 to i1, !dbg !12692
  %cond7 = select i1 %tobool5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), !dbg !12690
  %call = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i8* %cond, i8* %9, i8* %cond7), !dbg !12693
  store i8* %call, i8** %hostname_to_match, align 8, !dbg !12683
  %12 = load i8*, i8** %hostname_to_match, align 8, !dbg !12694
  %tobool8 = icmp ne i8* %12, null, !dbg !12694
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !12696

if.then9:                                         ; preds = %if.else
  store i32 27, i32* %retval, align 4, !dbg !12697
  br label %return, !dbg !12697

if.end:                                           ; preds = %if.else
  %13 = load i8*, i8** %hostname_to_match, align 8, !dbg !12698
  %call10 = call i64 @strlen(i8* %13) #7, !dbg !12699
  store i64 %call10, i64* %hostname_to_match_len, align 8, !dbg !12700
  %14 = load i8*, i8** %ptr, align 8, !dbg !12701
  %15 = load i8*, i8** %hostname_to_match, align 8, !dbg !12701
  %16 = load i64, i64* %hostname_to_match_len, align 8, !dbg !12701
  %call11 = call i32 @Curl_strncasecompare(i8* %14, i8* %15, i64 %16), !dbg !12701
  store i32 %call11, i32* %host_match, align 4, !dbg !12702
  %17 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12703
  %18 = load i8*, i8** %hostname_to_match, align 8, !dbg !12703
  call void %17(i8* %18), !dbg !12703
  %19 = load i64, i64* %hostname_to_match_len, align 8, !dbg !12704
  %20 = load i8*, i8** %ptr, align 8, !dbg !12705
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %19, !dbg !12705
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !12705
  %21 = load i32, i32* %host_match, align 4, !dbg !12706
  %tobool12 = icmp ne i32 %21, 0, !dbg !12706
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !12707

land.rhs:                                         ; preds = %if.end
  %22 = load i8*, i8** %ptr, align 8, !dbg !12708
  %23 = load i8, i8* %22, align 1, !dbg !12710
  %conv13 = sext i8 %23 to i32, !dbg !12710
  %cmp14 = icmp eq i32 %conv13, 58, !dbg !12711
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %24 = phi i1 [ false, %if.end ], [ %cmp14, %land.rhs ]
  %land.ext = zext i1 %24 to i32, !dbg !12712
  store i32 %land.ext, i32* %host_match, align 4, !dbg !12714
  %25 = load i8*, i8** %ptr, align 8, !dbg !12715
  %incdec.ptr16 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !12715
  store i8* %incdec.ptr16, i8** %ptr, align 8, !dbg !12715
  br label %if.end17

if.end17:                                         ; preds = %land.end, %if.then
  %26 = load i32, i32* %host_match, align 4, !dbg !12716
  %tobool18 = icmp ne i32 %26, 0, !dbg !12716
  br i1 %tobool18, label %if.then19, label %if.end40, !dbg !12718

if.then19:                                        ; preds = %if.end17
  %27 = load i8*, i8** %ptr, align 8, !dbg !12719
  %28 = load i8, i8* %27, align 1, !dbg !12722
  %conv20 = sext i8 %28 to i32, !dbg !12722
  %cmp21 = icmp eq i32 %conv20, 58, !dbg !12723
  br i1 %cmp21, label %if.then23, label %if.else25, !dbg !12724

if.then23:                                        ; preds = %if.then19
  store i32 1, i32* %port_match, align 4, !dbg !12725
  %29 = load i8*, i8** %ptr, align 8, !dbg !12727
  %incdec.ptr24 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !12727
  store i8* %incdec.ptr24, i8** %ptr, align 8, !dbg !12727
  br label %if.end39, !dbg !12728

if.else25:                                        ; preds = %if.then19
  call void @llvm.dbg.declare(metadata i8** %ptr_next, metadata !12729, metadata !2256), !dbg !12731
  %30 = load i8*, i8** %ptr, align 8, !dbg !12732
  %call26 = call i8* @strchr(i8* %30, i32 58) #7, !dbg !12733
  store i8* %call26, i8** %ptr_next, align 8, !dbg !12731
  %31 = load i8*, i8** %ptr_next, align 8, !dbg !12734
  %tobool27 = icmp ne i8* %31, null, !dbg !12734
  br i1 %tobool27, label %if.then28, label %if.end38, !dbg !12736

if.then28:                                        ; preds = %if.else25
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !12737, metadata !2256), !dbg !12739
  store i8* null, i8** %endp, align 8, !dbg !12739
  call void @llvm.dbg.declare(metadata i64* %port_to_match, metadata !12740, metadata !2256), !dbg !12741
  %32 = load i8*, i8** %ptr, align 8, !dbg !12742
  %call29 = call i64 @strtol(i8* %32, i8** %endp, i32 10) #8, !dbg !12743
  store i64 %call29, i64* %port_to_match, align 8, !dbg !12741
  %33 = load i8*, i8** %endp, align 8, !dbg !12744
  %34 = load i8*, i8** %ptr_next, align 8, !dbg !12746
  %cmp30 = icmp eq i8* %33, %34, !dbg !12747
  br i1 %cmp30, label %land.lhs.true, label %if.end37, !dbg !12748

land.lhs.true:                                    ; preds = %if.then28
  %35 = load i64, i64* %port_to_match, align 8, !dbg !12749
  %36 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !12751
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %36, i32 0, i32 18, !dbg !12752
  %37 = load i32, i32* %remote_port, align 8, !dbg !12752
  %conv32 = sext i32 %37 to i64, !dbg !12751
  %cmp33 = icmp eq i64 %35, %conv32, !dbg !12753
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !12754

if.then35:                                        ; preds = %land.lhs.true
  store i32 1, i32* %port_match, align 4, !dbg !12755
  %38 = load i8*, i8** %ptr_next, align 8, !dbg !12757
  %add.ptr36 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !12758
  store i8* %add.ptr36, i8** %ptr, align 8, !dbg !12759
  br label %if.end37, !dbg !12760

if.end37:                                         ; preds = %if.then35, %land.lhs.true, %if.then28
  br label %if.end38, !dbg !12761

if.end38:                                         ; preds = %if.end37, %if.else25
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then23
  br label %if.end40, !dbg !12762

if.end40:                                         ; preds = %if.end39, %if.end17
  %39 = load i32, i32* %host_match, align 4, !dbg !12763
  %tobool41 = icmp ne i32 %39, 0, !dbg !12763
  br i1 %tobool41, label %land.lhs.true42, label %if.end46, !dbg !12765

land.lhs.true42:                                  ; preds = %if.end40
  %40 = load i32, i32* %port_match, align 4, !dbg !12766
  %tobool43 = icmp ne i32 %40, 0, !dbg !12766
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !12768

if.then44:                                        ; preds = %land.lhs.true42
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12769
  %42 = load i8*, i8** %ptr, align 8, !dbg !12771
  %43 = load i8**, i8*** %host_result.addr, align 8, !dbg !12772
  %44 = load i32*, i32** %port_result.addr, align 8, !dbg !12773
  %call45 = call i32 @parse_connect_to_host_port(%struct.Curl_easy* %41, i8* %42, i8** %43, i32* %44), !dbg !12774
  store i32 %call45, i32* %result, align 4, !dbg !12775
  br label %if.end46, !dbg !12776

if.end46:                                         ; preds = %if.then44, %land.lhs.true42, %if.end40
  %45 = load i32, i32* %result, align 4, !dbg !12777
  store i32 %45, i32* %retval, align 4, !dbg !12778
  br label %return, !dbg !12778

return:                                           ; preds = %if.end46, %if.then9
  %46 = load i32, i32* %retval, align 4, !dbg !12779
  ret i32 %46, !dbg !12779
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_connect_to_host_port(%struct.Curl_easy* %data, i8* %host, i8** %hostname_result, i32* %port_result) #0 !dbg !2193 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %host.addr = alloca i8*, align 8
  %hostname_result.addr = alloca i8**, align 8
  %port_result.addr = alloca i32*, align 8
  %host_dup = alloca i8*, align 8
  %hostptr = alloca i8*, align 8
  %host_portno = alloca i8*, align 8
  %portptr = alloca i8*, align 8
  %port = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %portparse = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !12780, metadata !2256), !dbg !12781
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %host.addr, metadata !12782, metadata !2256), !dbg !12783
  store i8** %hostname_result, i8*** %hostname_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %hostname_result.addr, metadata !12784, metadata !2256), !dbg !12785
  store i32* %port_result, i32** %port_result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %port_result.addr, metadata !12786, metadata !2256), !dbg !12787
  call void @llvm.dbg.declare(metadata i8** %host_dup, metadata !12788, metadata !2256), !dbg !12789
  call void @llvm.dbg.declare(metadata i8** %hostptr, metadata !12790, metadata !2256), !dbg !12791
  call void @llvm.dbg.declare(metadata i8** %host_portno, metadata !12792, metadata !2256), !dbg !12793
  call void @llvm.dbg.declare(metadata i8** %portptr, metadata !12794, metadata !2256), !dbg !12795
  call void @llvm.dbg.declare(metadata i32* %port, metadata !12796, metadata !2256), !dbg !12797
  store i32 -1, i32* %port, align 4, !dbg !12797
  %0 = load i8**, i8*** %hostname_result.addr, align 8, !dbg !12798
  store i8* null, i8** %0, align 8, !dbg !12799
  %1 = load i32*, i32** %port_result.addr, align 8, !dbg !12800
  store i32 -1, i32* %1, align 4, !dbg !12801
  %2 = load i8*, i8** %host.addr, align 8, !dbg !12802
  %tobool = icmp ne i8* %2, null, !dbg !12802
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12804

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %host.addr, align 8, !dbg !12805
  %4 = load i8, i8* %3, align 1, !dbg !12807
  %tobool1 = icmp ne i8 %4, 0, !dbg !12807
  br i1 %tobool1, label %if.end, label %if.then, !dbg !12808

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12809
  br label %return, !dbg !12809

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !12810
  %6 = load i8*, i8** %host.addr, align 8, !dbg !12810
  %call = call i8* %5(i8* %6), !dbg !12810
  store i8* %call, i8** %host_dup, align 8, !dbg !12811
  %7 = load i8*, i8** %host_dup, align 8, !dbg !12812
  %tobool2 = icmp ne i8* %7, null, !dbg !12812
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12814

if.then3:                                         ; preds = %if.end
  store i32 27, i32* %retval, align 4, !dbg !12815
  br label %return, !dbg !12815

if.end4:                                          ; preds = %if.end
  %8 = load i8*, i8** %host_dup, align 8, !dbg !12816
  store i8* %8, i8** %hostptr, align 8, !dbg !12817
  %9 = load i8*, i8** %hostptr, align 8, !dbg !12818
  store i8* %9, i8** %portptr, align 8, !dbg !12819
  %10 = load i8*, i8** %hostptr, align 8, !dbg !12820
  %11 = load i8, i8* %10, align 1, !dbg !12822
  %conv = sext i8 %11 to i32, !dbg !12822
  %cmp = icmp eq i32 %conv, 91, !dbg !12823
  br i1 %cmp, label %if.then6, label %if.end77, !dbg !12824

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !12825, metadata !2256), !dbg !12827
  %12 = load i8*, i8** %hostptr, align 8, !dbg !12828
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !12828
  store i8* %incdec.ptr, i8** %hostptr, align 8, !dbg !12828
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !12827
  br label %while.cond, !dbg !12829

while.cond:                                       ; preds = %while.body, %if.then6
  %13 = load i8*, i8** %ptr, align 8, !dbg !12830
  %14 = load i8, i8* %13, align 1, !dbg !12832
  %conv7 = sext i8 %14 to i32, !dbg !12832
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !12832
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !12833

land.rhs:                                         ; preds = %while.cond
  %15 = load i8*, i8** %ptr, align 8, !dbg !12834
  %16 = load i8, i8* %15, align 1, !dbg !12834
  %conv9 = zext i8 %16 to i32, !dbg !12834
  %idxprom = sext i32 %conv9 to i64, !dbg !12834
  %call10 = call i16** @__ctype_b_loc() #1, !dbg !12834
  %17 = load i16*, i16** %call10, align 8, !dbg !12834
  %arrayidx = getelementptr inbounds i16, i16* %17, i64 %idxprom, !dbg !12834
  %18 = load i16, i16* %arrayidx, align 2, !dbg !12834
  %conv11 = zext i16 %18 to i32, !dbg !12834
  %and = and i32 %conv11, 4096, !dbg !12834
  %tobool12 = icmp ne i32 %and, 0, !dbg !12834
  br i1 %tobool12, label %lor.end, label %lor.lhs.false13, !dbg !12836

lor.lhs.false13:                                  ; preds = %land.rhs
  %19 = load i8*, i8** %ptr, align 8, !dbg !12837
  %20 = load i8, i8* %19, align 1, !dbg !12839
  %conv14 = sext i8 %20 to i32, !dbg !12839
  %cmp15 = icmp eq i32 %conv14, 58, !dbg !12840
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !12841

lor.rhs:                                          ; preds = %lor.lhs.false13
  %21 = load i8*, i8** %ptr, align 8, !dbg !12842
  %22 = load i8, i8* %21, align 1, !dbg !12844
  %conv17 = sext i8 %22 to i32, !dbg !12844
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !12845
  br label %lor.end, !dbg !12846

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false13, %land.rhs
  %23 = phi i1 [ true, %lor.lhs.false13 ], [ true, %land.rhs ], [ %cmp18, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %24 = phi i1 [ false, %while.cond ], [ %23, %lor.end ]
  br i1 %24, label %while.body, label %while.end, !dbg !12847

while.body:                                       ; preds = %land.end
  %25 = load i8*, i8** %ptr, align 8, !dbg !12849
  %incdec.ptr20 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !12849
  store i8* %incdec.ptr20, i8** %ptr, align 8, !dbg !12849
  br label %while.cond, !dbg !12850

while.end:                                        ; preds = %land.end
  %26 = load i8*, i8** %ptr, align 8, !dbg !12852
  %27 = load i8, i8* %26, align 1, !dbg !12854
  %conv21 = sext i8 %27 to i32, !dbg !12854
  %cmp22 = icmp eq i32 %conv21, 37, !dbg !12855
  br i1 %cmp22, label %if.then24, label %if.end70, !dbg !12856

if.then24:                                        ; preds = %while.end
  %28 = load i8*, i8** %ptr, align 8, !dbg !12857
  %call25 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i8* %28, i64 3) #7, !dbg !12860
  %tobool26 = icmp ne i32 %call25, 0, !dbg !12860
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !12861

if.then27:                                        ; preds = %if.then24
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12862
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %29, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.56, i32 0, i32 0)), !dbg !12863
  br label %if.end28, !dbg !12863

if.end28:                                         ; preds = %if.then27, %if.then24
  %30 = load i8*, i8** %ptr, align 8, !dbg !12864
  %incdec.ptr29 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !12864
  store i8* %incdec.ptr29, i8** %ptr, align 8, !dbg !12864
  br label %while.cond30, !dbg !12865

while.cond30:                                     ; preds = %while.body67, %if.end28
  %31 = load i8*, i8** %ptr, align 8, !dbg !12866
  %32 = load i8, i8* %31, align 1, !dbg !12868
  %conv31 = sext i8 %32 to i32, !dbg !12868
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !12868
  br i1 %tobool32, label %land.rhs33, label %land.end66, !dbg !12869

land.rhs33:                                       ; preds = %while.cond30
  %33 = load i8*, i8** %ptr, align 8, !dbg !12870
  %34 = load i8, i8* %33, align 1, !dbg !12870
  %conv34 = zext i8 %34 to i32, !dbg !12870
  %idxprom35 = sext i32 %conv34 to i64, !dbg !12870
  %call36 = call i16** @__ctype_b_loc() #1, !dbg !12870
  %35 = load i16*, i16** %call36, align 8, !dbg !12870
  %arrayidx37 = getelementptr inbounds i16, i16* %35, i64 %idxprom35, !dbg !12870
  %36 = load i16, i16* %arrayidx37, align 2, !dbg !12870
  %conv38 = zext i16 %36 to i32, !dbg !12870
  %and39 = and i32 %conv38, 1024, !dbg !12870
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12870
  br i1 %tobool40, label %lor.end65, label %lor.lhs.false41, !dbg !12872

lor.lhs.false41:                                  ; preds = %land.rhs33
  %37 = load i8*, i8** %ptr, align 8, !dbg !12873
  %38 = load i8, i8* %37, align 1, !dbg !12873
  %conv42 = zext i8 %38 to i32, !dbg !12873
  %idxprom43 = sext i32 %conv42 to i64, !dbg !12873
  %call44 = call i16** @__ctype_b_loc() #1, !dbg !12873
  %39 = load i16*, i16** %call44, align 8, !dbg !12873
  %arrayidx45 = getelementptr inbounds i16, i16* %39, i64 %idxprom43, !dbg !12873
  %40 = load i16, i16* %arrayidx45, align 2, !dbg !12873
  %conv46 = zext i16 %40 to i32, !dbg !12873
  %and47 = and i32 %conv46, 4096, !dbg !12873
  %tobool48 = icmp ne i32 %and47, 0, !dbg !12873
  br i1 %tobool48, label %lor.end65, label %lor.lhs.false49, !dbg !12875

lor.lhs.false49:                                  ; preds = %lor.lhs.false41
  %41 = load i8*, i8** %ptr, align 8, !dbg !12876
  %42 = load i8, i8* %41, align 1, !dbg !12878
  %conv50 = sext i8 %42 to i32, !dbg !12878
  %cmp51 = icmp eq i32 %conv50, 45, !dbg !12879
  br i1 %cmp51, label %lor.end65, label %lor.lhs.false53, !dbg !12880

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %43 = load i8*, i8** %ptr, align 8, !dbg !12881
  %44 = load i8, i8* %43, align 1, !dbg !12882
  %conv54 = sext i8 %44 to i32, !dbg !12882
  %cmp55 = icmp eq i32 %conv54, 46, !dbg !12883
  br i1 %cmp55, label %lor.end65, label %lor.lhs.false57, !dbg !12884

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %45 = load i8*, i8** %ptr, align 8, !dbg !12885
  %46 = load i8, i8* %45, align 1, !dbg !12886
  %conv58 = sext i8 %46 to i32, !dbg !12886
  %cmp59 = icmp eq i32 %conv58, 95, !dbg !12887
  br i1 %cmp59, label %lor.end65, label %lor.rhs61, !dbg !12888

lor.rhs61:                                        ; preds = %lor.lhs.false57
  %47 = load i8*, i8** %ptr, align 8, !dbg !12889
  %48 = load i8, i8* %47, align 1, !dbg !12890
  %conv62 = sext i8 %48 to i32, !dbg !12890
  %cmp63 = icmp eq i32 %conv62, 126, !dbg !12891
  br label %lor.end65, !dbg !12892

lor.end65:                                        ; preds = %lor.rhs61, %lor.lhs.false57, %lor.lhs.false53, %lor.lhs.false49, %lor.lhs.false41, %land.rhs33
  %49 = phi i1 [ true, %lor.lhs.false57 ], [ true, %lor.lhs.false53 ], [ true, %lor.lhs.false49 ], [ true, %lor.lhs.false41 ], [ true, %land.rhs33 ], [ %cmp63, %lor.rhs61 ]
  br label %land.end66

land.end66:                                       ; preds = %lor.end65, %while.cond30
  %50 = phi i1 [ false, %while.cond30 ], [ %49, %lor.end65 ]
  br i1 %50, label %while.body67, label %while.end69, !dbg !12893

while.body67:                                     ; preds = %land.end66
  %51 = load i8*, i8** %ptr, align 8, !dbg !12895
  %incdec.ptr68 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !12895
  store i8* %incdec.ptr68, i8** %ptr, align 8, !dbg !12895
  br label %while.cond30, !dbg !12896

while.end69:                                      ; preds = %land.end66
  br label %if.end70, !dbg !12898

if.end70:                                         ; preds = %while.end69, %while.end
  %52 = load i8*, i8** %ptr, align 8, !dbg !12899
  %53 = load i8, i8* %52, align 1, !dbg !12901
  %conv71 = sext i8 %53 to i32, !dbg !12901
  %cmp72 = icmp eq i32 %conv71, 93, !dbg !12902
  br i1 %cmp72, label %if.then74, label %if.else, !dbg !12903

if.then74:                                        ; preds = %if.end70
  %54 = load i8*, i8** %ptr, align 8, !dbg !12904
  %incdec.ptr75 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !12904
  store i8* %incdec.ptr75, i8** %ptr, align 8, !dbg !12904
  store i8 0, i8* %54, align 1, !dbg !12905
  br label %if.end76, !dbg !12906

if.else:                                          ; preds = %if.end70
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12907
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %55, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.57, i32 0, i32 0)), !dbg !12908
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then74
  %56 = load i8*, i8** %ptr, align 8, !dbg !12909
  store i8* %56, i8** %portptr, align 8, !dbg !12910
  br label %if.end77, !dbg !12911

if.end77:                                         ; preds = %if.end76, %if.end4
  %57 = load i8*, i8** %portptr, align 8, !dbg !12912
  %call78 = call i8* @strchr(i8* %57, i32 58) #7, !dbg !12913
  store i8* %call78, i8** %host_portno, align 8, !dbg !12914
  %58 = load i8*, i8** %host_portno, align 8, !dbg !12915
  %tobool79 = icmp ne i8* %58, null, !dbg !12915
  br i1 %tobool79, label %if.then80, label %if.end99, !dbg !12917

if.then80:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !12918, metadata !2256), !dbg !12920
  store i8* null, i8** %endp, align 8, !dbg !12920
  %59 = load i8*, i8** %host_portno, align 8, !dbg !12921
  store i8 0, i8* %59, align 1, !dbg !12922
  %60 = load i8*, i8** %host_portno, align 8, !dbg !12923
  %incdec.ptr81 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !12923
  store i8* %incdec.ptr81, i8** %host_portno, align 8, !dbg !12923
  %61 = load i8*, i8** %host_portno, align 8, !dbg !12924
  %62 = load i8, i8* %61, align 1, !dbg !12926
  %tobool82 = icmp ne i8 %62, 0, !dbg !12926
  br i1 %tobool82, label %if.then83, label %if.end98, !dbg !12927

if.then83:                                        ; preds = %if.then80
  call void @llvm.dbg.declare(metadata i64* %portparse, metadata !12928, metadata !2256), !dbg !12930
  %63 = load i8*, i8** %host_portno, align 8, !dbg !12931
  %call84 = call i64 @strtol(i8* %63, i8** %endp, i32 10) #8, !dbg !12932
  store i64 %call84, i64* %portparse, align 8, !dbg !12930
  %64 = load i8*, i8** %endp, align 8, !dbg !12933
  %tobool85 = icmp ne i8* %64, null, !dbg !12933
  br i1 %tobool85, label %land.lhs.true, label %lor.lhs.false88, !dbg !12935

land.lhs.true:                                    ; preds = %if.then83
  %65 = load i8*, i8** %endp, align 8, !dbg !12936
  %66 = load i8, i8* %65, align 1, !dbg !12938
  %conv86 = sext i8 %66 to i32, !dbg !12938
  %tobool87 = icmp ne i32 %conv86, 0, !dbg !12938
  br i1 %tobool87, label %if.then94, label %lor.lhs.false88, !dbg !12939

lor.lhs.false88:                                  ; preds = %land.lhs.true, %if.then83
  %67 = load i64, i64* %portparse, align 8, !dbg !12940
  %cmp89 = icmp slt i64 %67, 0, !dbg !12942
  br i1 %cmp89, label %if.then94, label %lor.lhs.false91, !dbg !12943

lor.lhs.false91:                                  ; preds = %lor.lhs.false88
  %68 = load i64, i64* %portparse, align 8, !dbg !12944
  %cmp92 = icmp sgt i64 %68, 65535, !dbg !12946
  br i1 %cmp92, label %if.then94, label %if.else95, !dbg !12947

if.then94:                                        ; preds = %lor.lhs.false91, %lor.lhs.false88, %land.lhs.true
  %69 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !12948
  %70 = load i8*, i8** %host_portno, align 8, !dbg !12950
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %69, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i32 0, i32 0), i8* %70), !dbg !12951
  store i8* null, i8** %hostptr, align 8, !dbg !12952
  store i32 -1, i32* %port, align 4, !dbg !12953
  br label %if.end97, !dbg !12954

if.else95:                                        ; preds = %lor.lhs.false91
  %71 = load i64, i64* %portparse, align 8, !dbg !12955
  %conv96 = trunc i64 %71 to i32, !dbg !12956
  store i32 %conv96, i32* %port, align 4, !dbg !12957
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.then94
  br label %if.end98, !dbg !12958

if.end98:                                         ; preds = %if.end97, %if.then80
  br label %if.end99, !dbg !12959

if.end99:                                         ; preds = %if.end98, %if.end77
  %72 = load i8*, i8** %hostptr, align 8, !dbg !12960
  %tobool100 = icmp ne i8* %72, null, !dbg !12960
  br i1 %tobool100, label %if.then101, label %if.end106, !dbg !12962

if.then101:                                       ; preds = %if.end99
  %73 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !12963
  %74 = load i8*, i8** %hostptr, align 8, !dbg !12963
  %call102 = call i8* %73(i8* %74), !dbg !12963
  %75 = load i8**, i8*** %hostname_result.addr, align 8, !dbg !12965
  store i8* %call102, i8** %75, align 8, !dbg !12966
  %76 = load i8**, i8*** %hostname_result.addr, align 8, !dbg !12967
  %77 = load i8*, i8** %76, align 8, !dbg !12969
  %tobool103 = icmp ne i8* %77, null, !dbg !12969
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !12970

if.then104:                                       ; preds = %if.then101
  %78 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12971
  %79 = load i8*, i8** %host_dup, align 8, !dbg !12971
  call void %78(i8* %79), !dbg !12971
  store i32 27, i32* %retval, align 4, !dbg !12973
  br label %return, !dbg !12973

if.end105:                                        ; preds = %if.then101
  br label %if.end106, !dbg !12974

if.end106:                                        ; preds = %if.end105, %if.end99
  %80 = load i32, i32* %port, align 4, !dbg !12975
  %81 = load i32*, i32** %port_result.addr, align 8, !dbg !12976
  store i32 %80, i32* %81, align 4, !dbg !12977
  %82 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !12978
  %83 = load i8*, i8** %host_dup, align 8, !dbg !12978
  call void %82(i8* %83), !dbg !12978
  store i32 0, i32* %retval, align 4, !dbg !12979
  br label %return, !dbg !12979

return:                                           ; preds = %if.end106, %if.then104, %if.then3, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !12980
  ret i32 %84, !dbg !12980
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @is_ASCII_name(i8* %hostname) #0 !dbg !2199 {
entry:
  %retval = alloca i1, align 1
  %hostname.addr = alloca i8*, align 8
  %ch = alloca i8*, align 8
  store i8* %hostname, i8** %hostname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hostname.addr, metadata !12981, metadata !2256), !dbg !12982
  call void @llvm.dbg.declare(metadata i8** %ch, metadata !12983, metadata !2256), !dbg !12984
  %0 = load i8*, i8** %hostname.addr, align 8, !dbg !12985
  store i8* %0, i8** %ch, align 8, !dbg !12984
  br label %while.cond, !dbg !12986

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i8*, i8** %ch, align 8, !dbg !12987
  %2 = load i8, i8* %1, align 1, !dbg !12989
  %tobool = icmp ne i8 %2, 0, !dbg !12990
  br i1 %tobool, label %while.body, label %while.end, !dbg !12990

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %ch, align 8, !dbg !12991
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !12991
  store i8* %incdec.ptr, i8** %ch, align 8, !dbg !12991
  %4 = load i8, i8* %3, align 1, !dbg !12994
  %conv = zext i8 %4 to i32, !dbg !12994
  %and = and i32 %conv, 128, !dbg !12995
  %tobool1 = icmp ne i32 %and, 0, !dbg !12995
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12996

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !12997
  br label %return, !dbg !12997

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !12998

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !13000
  br label %return, !dbg !13000

return:                                           ; preds = %while.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !13001
  ret i1 %5, !dbg !13001
}

declare void @Curl_conncache_foreach(%struct.conncache*, i8*, i32 (%struct.connectdata*, i8*)*) #3

; Function Attrs: nounwind uwtable
define internal i32 @call_disconnect_if_dead(%struct.connectdata* %conn, i8* %param) #0 !dbg !2205 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %param.addr = alloca i8*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !13002, metadata !2256), !dbg !13003
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !13004, metadata !2256), !dbg !13005
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !13006, metadata !2256), !dbg !13007
  %0 = load i8*, i8** %param.addr, align 8, !dbg !13008
  %1 = bitcast i8* %0 to %struct.Curl_easy*, !dbg !13009
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !13007
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13010
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !13011
  %call = call zeroext i1 @disconnect_if_dead(%struct.connectdata* %2, %struct.Curl_easy* %3), !dbg !13012
  ret i32 0, !dbg !13013
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @disconnect_if_dead(%struct.connectdata* %conn, %struct.Curl_easy* %data) #0 !dbg !2208 {
entry:
  %retval = alloca i1, align 1
  %conn.addr = alloca %struct.connectdata*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %pipeLen = alloca i64, align 8
  %dead = alloca i8, align 1
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !13014, metadata !2256), !dbg !13015
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !13016, metadata !2256), !dbg !13017
  call void @llvm.dbg.declare(metadata i64* %pipeLen, metadata !13018, metadata !2256), !dbg !13019
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13020
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 55, !dbg !13021
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !13022
  %1 = load i64, i64* %size, align 8, !dbg !13022
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13023
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 56, !dbg !13024
  %size1 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !13025
  %3 = load i64, i64* %size1, align 8, !dbg !13025
  %add = add i64 %1, %3, !dbg !13026
  store i64 %add, i64* %pipeLen, align 8, !dbg !13019
  %4 = load i64, i64* %pipeLen, align 8, !dbg !13027
  %tobool = icmp ne i64 %4, 0, !dbg !13027
  br i1 %tobool, label %if.end10, label %land.lhs.true, !dbg !13029

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13030
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 4, !dbg !13032
  %6 = load i8, i8* %inuse, align 8, !dbg !13032
  %tobool2 = trunc i8 %6 to i1, !dbg !13032
  br i1 %tobool2, label %if.end10, label %if.then, !dbg !13033

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %dead, metadata !13034, metadata !2256), !dbg !13036
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13037
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 47, !dbg !13039
  %8 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !13039
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %8, i32 0, i32 15, !dbg !13040
  %9 = load i32, i32* %protocol, align 8, !dbg !13040
  %and = and i32 %9, 262144, !dbg !13041
  %tobool3 = icmp ne i32 %and, 0, !dbg !13041
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !13042

if.then4:                                         ; preds = %if.then
  store i8 1, i8* %dead, align 1, !dbg !13043
  br label %if.end, !dbg !13044

if.else:                                          ; preds = %if.then
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13045
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 33, !dbg !13046
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 0, !dbg !13045
  %11 = load i32, i32* %arrayidx, align 8, !dbg !13045
  %call = call zeroext i1 @SocketIsDead(i32 %11), !dbg !13047
  %frombool = zext i1 %call to i8, !dbg !13048
  store i8 %frombool, i8* %dead, align 1, !dbg !13048
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %12 = load i8, i8* %dead, align 1, !dbg !13049
  %tobool5 = trunc i8 %12 to i1, !dbg !13049
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !13051

if.then6:                                         ; preds = %if.end
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !13052
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13054
  %data7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 0, !dbg !13055
  store %struct.Curl_easy* %13, %struct.Curl_easy** %data7, align 8, !dbg !13056
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !13057
  %16 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13058
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %16, i32 0, i32 5, !dbg !13059
  %17 = load i64, i64* %connection_id, align 8, !dbg !13059
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %15, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.95, i32 0, i32 0), i64 %17), !dbg !13060
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !13061
  %call8 = call i32 @Curl_disconnect(%struct.connectdata* %18, i1 zeroext true), !dbg !13062
  store i1 true, i1* %retval, align 1, !dbg !13063
  br label %return, !dbg !13063

if.end9:                                          ; preds = %if.end
  br label %if.end10, !dbg !13064

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !13065
  br label %return, !dbg !13065

return:                                           ; preds = %if.end10, %if.then6
  %19 = load i1, i1* %retval, align 1, !dbg !13066
  ret i1 %19, !dbg !13066
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @SocketIsDead(i32 %sock) #0 !dbg !2211 {
entry:
  %sock.addr = alloca i32, align 4
  %sval = alloca i32, align 4
  %ret_val = alloca i8, align 1
  store i32 %sock, i32* %sock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sock.addr, metadata !13067, metadata !2256), !dbg !13068
  call void @llvm.dbg.declare(metadata i32* %sval, metadata !13069, metadata !2256), !dbg !13070
  call void @llvm.dbg.declare(metadata i8* %ret_val, metadata !13071, metadata !2256), !dbg !13072
  store i8 1, i8* %ret_val, align 1, !dbg !13072
  %0 = load i32, i32* %sock.addr, align 4, !dbg !13073
  %call = call i32 @Curl_socket_check(i32 %0, i32 -1, i32 -1, i64 0), !dbg !13073
  store i32 %call, i32* %sval, align 4, !dbg !13074
  %1 = load i32, i32* %sval, align 4, !dbg !13075
  %cmp = icmp eq i32 %1, 0, !dbg !13077
  br i1 %cmp, label %if.then, label %if.end, !dbg !13078

if.then:                                          ; preds = %entry
  store i8 0, i8* %ret_val, align 1, !dbg !13079
  br label %if.end, !dbg !13080

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %ret_val, align 1, !dbg !13081
  %tobool = trunc i8 %2 to i1, !dbg !13081
  ret i1 %tobool, !dbg !13082
}

declare i32 @Curl_socket_check(i32, i32, i32, i64) #3

declare zeroext i1 @Curl_pipeline_site_blacklisted(%struct.Curl_easy*, %struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define internal i64 @max_pipeline_length(%struct.Curl_multi* %multi) #0 !dbg !2217 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !13083, metadata !2256), !dbg !13084
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !13085
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !13085
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13085

cond.true:                                        ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !13086
  %max_pipeline_length = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 21, !dbg !13088
  %2 = load i64, i64* %max_pipeline_length, align 8, !dbg !13088
  br label %cond.end, !dbg !13089

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !13092
  ret i64 %cond, !dbg !13094
}

; Function Attrs: nounwind uwtable
define internal %struct.Curl_easy* @gethandleathead(%struct.curl_llist* %pipeline) #0 !dbg !2220 {
entry:
  %retval = alloca %struct.Curl_easy*, align 8
  %pipeline.addr = alloca %struct.curl_llist*, align 8
  %curr = alloca %struct.curl_llist_element*, align 8
  store %struct.curl_llist* %pipeline, %struct.curl_llist** %pipeline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %pipeline.addr, metadata !13095, metadata !2256), !dbg !13096
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %curr, metadata !13097, metadata !2256), !dbg !13098
  %0 = load %struct.curl_llist*, %struct.curl_llist** %pipeline.addr, align 8, !dbg !13099
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %0, i32 0, i32 0, !dbg !13100
  %1 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !13100
  store %struct.curl_llist_element* %1, %struct.curl_llist_element** %curr, align 8, !dbg !13098
  %2 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !13101
  %tobool = icmp ne %struct.curl_llist_element* %2, null, !dbg !13101
  br i1 %tobool, label %if.then, label %if.end, !dbg !13103

if.then:                                          ; preds = %entry
  %3 = load %struct.curl_llist_element*, %struct.curl_llist_element** %curr, align 8, !dbg !13104
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %3, i32 0, i32 0, !dbg !13106
  %4 = load i8*, i8** %ptr, align 8, !dbg !13106
  %5 = bitcast i8* %4 to %struct.Curl_easy*, !dbg !13107
  store %struct.Curl_easy* %5, %struct.Curl_easy** %retval, align 8, !dbg !13108
  br label %return, !dbg !13108

if.end:                                           ; preds = %entry
  store %struct.Curl_easy* null, %struct.Curl_easy** %retval, align 8, !dbg !13109
  br label %return, !dbg !13109

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %retval, align 8, !dbg !13110
  ret %struct.Curl_easy* %6, !dbg !13110
}

; Function Attrs: nounwind uwtable
define internal i32 @get_protocol_family(i32 %protocol) #0 !dbg !2223 {
entry:
  %protocol.addr = alloca i32, align 4
  %family = alloca i32, align 4
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !13111, metadata !2256), !dbg !13112
  call void @llvm.dbg.declare(metadata i32* %family, metadata !13113, metadata !2256), !dbg !13114
  %0 = load i32, i32* %protocol.addr, align 4, !dbg !13115
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
    i32 8, label %sw.bb1
    i32 16, label %sw.bb2
    i32 32, label %sw.bb3
    i32 64, label %sw.bb4
    i32 128, label %sw.bb5
    i32 256, label %sw.bb5
    i32 512, label %sw.bb6
    i32 1024, label %sw.bb7
    i32 2048, label %sw.bb8
    i32 4096, label %sw.bb9
    i32 8192, label %sw.bb9
    i32 16384, label %sw.bb10
    i32 32768, label %sw.bb10
    i32 65536, label %sw.bb11
    i32 131072, label %sw.bb11
    i32 262144, label %sw.bb12
    i32 524288, label %sw.bb13
    i32 8388608, label %sw.bb13
    i32 1048576, label %sw.bb14
    i32 16777216, label %sw.bb14
    i32 2097152, label %sw.bb15
    i32 4194304, label %sw.bb16
    i32 33554432, label %sw.bb17
    i32 67108864, label %sw.bb18
    i32 134217728, label %sw.bb18
  ], !dbg !13116

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %family, align 4, !dbg !13117
  br label %sw.epilog, !dbg !13119

sw.bb1:                                           ; preds = %entry, %entry
  store i32 4, i32* %family, align 4, !dbg !13120
  br label %sw.epilog, !dbg !13121

sw.bb2:                                           ; preds = %entry
  store i32 16, i32* %family, align 4, !dbg !13122
  br label %sw.epilog, !dbg !13123

sw.bb3:                                           ; preds = %entry
  store i32 32, i32* %family, align 4, !dbg !13124
  br label %sw.epilog, !dbg !13125

sw.bb4:                                           ; preds = %entry
  store i32 64, i32* %family, align 4, !dbg !13126
  br label %sw.epilog, !dbg !13127

sw.bb5:                                           ; preds = %entry, %entry
  store i32 128, i32* %family, align 4, !dbg !13128
  br label %sw.epilog, !dbg !13129

sw.bb6:                                           ; preds = %entry
  store i32 512, i32* %family, align 4, !dbg !13130
  br label %sw.epilog, !dbg !13131

sw.bb7:                                           ; preds = %entry
  store i32 1024, i32* %family, align 4, !dbg !13132
  br label %sw.epilog, !dbg !13133

sw.bb8:                                           ; preds = %entry
  store i32 2048, i32* %family, align 4, !dbg !13134
  br label %sw.epilog, !dbg !13135

sw.bb9:                                           ; preds = %entry, %entry
  store i32 4096, i32* %family, align 4, !dbg !13136
  br label %sw.epilog, !dbg !13137

sw.bb10:                                          ; preds = %entry, %entry
  store i32 16384, i32* %family, align 4, !dbg !13138
  br label %sw.epilog, !dbg !13139

sw.bb11:                                          ; preds = %entry, %entry
  store i32 65536, i32* %family, align 4, !dbg !13140
  br label %sw.epilog, !dbg !13141

sw.bb12:                                          ; preds = %entry
  store i32 262144, i32* %family, align 4, !dbg !13142
  br label %sw.epilog, !dbg !13143

sw.bb13:                                          ; preds = %entry, %entry
  store i32 524288, i32* %family, align 4, !dbg !13144
  br label %sw.epilog, !dbg !13145

sw.bb14:                                          ; preds = %entry, %entry
  store i32 1048576, i32* %family, align 4, !dbg !13146
  br label %sw.epilog, !dbg !13147

sw.bb15:                                          ; preds = %entry
  store i32 2097152, i32* %family, align 4, !dbg !13148
  br label %sw.epilog, !dbg !13149

sw.bb16:                                          ; preds = %entry
  store i32 4194304, i32* %family, align 4, !dbg !13150
  br label %sw.epilog, !dbg !13151

sw.bb17:                                          ; preds = %entry
  store i32 33554432, i32* %family, align 4, !dbg !13152
  br label %sw.epilog, !dbg !13153

sw.bb18:                                          ; preds = %entry, %entry
  store i32 67108864, i32* %family, align 4, !dbg !13154
  br label %sw.epilog, !dbg !13155

sw.default:                                       ; preds = %entry
  store i32 0, i32* %family, align 4, !dbg !13156
  br label %sw.epilog, !dbg !13157

sw.epilog:                                        ; preds = %sw.default, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %family, align 4, !dbg !13158
  ret i32 %1, !dbg !13159
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @proxy_info_matches(%struct.proxy_info* %data, %struct.proxy_info* %needle) #0 !dbg !2226 {
entry:
  %retval = alloca i1, align 1
  %data.addr = alloca %struct.proxy_info*, align 8
  %needle.addr = alloca %struct.proxy_info*, align 8
  store %struct.proxy_info* %data, %struct.proxy_info** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.proxy_info** %data.addr, metadata !13160, metadata !2256), !dbg !13161
  store %struct.proxy_info* %needle, %struct.proxy_info** %needle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.proxy_info** %needle.addr, metadata !13162, metadata !2256), !dbg !13163
  %0 = load %struct.proxy_info*, %struct.proxy_info** %data.addr, align 8, !dbg !13164
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %0, i32 0, i32 2, !dbg !13166
  %1 = load i32, i32* %proxytype, align 8, !dbg !13166
  %2 = load %struct.proxy_info*, %struct.proxy_info** %needle.addr, align 8, !dbg !13167
  %proxytype1 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %2, i32 0, i32 2, !dbg !13168
  %3 = load i32, i32* %proxytype1, align 8, !dbg !13168
  %cmp = icmp eq i32 %1, %3, !dbg !13169
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13170

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.proxy_info*, %struct.proxy_info** %data.addr, align 8, !dbg !13171
  %port = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %4, i32 0, i32 1, !dbg !13172
  %5 = load i64, i64* %port, align 8, !dbg !13172
  %6 = load %struct.proxy_info*, %struct.proxy_info** %needle.addr, align 8, !dbg !13173
  %port2 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %6, i32 0, i32 1, !dbg !13174
  %7 = load i64, i64* %port2, align 8, !dbg !13174
  %cmp3 = icmp eq i64 %5, %7, !dbg !13175
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !13176

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.proxy_info*, %struct.proxy_info** %data.addr, align 8, !dbg !13177
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %8, i32 0, i32 0, !dbg !13178
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !13179
  %9 = load i8*, i8** %name, align 8, !dbg !13179
  %10 = load %struct.proxy_info*, %struct.proxy_info** %needle.addr, align 8, !dbg !13180
  %host5 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %10, i32 0, i32 0, !dbg !13181
  %name6 = getelementptr inbounds %struct.hostname, %struct.hostname* %host5, i32 0, i32 2, !dbg !13182
  %11 = load i8*, i8** %name6, align 8, !dbg !13182
  %call = call i32 @Curl_safe_strcasecompare(i8* %9, i8* %11), !dbg !13183
  %tobool = icmp ne i32 %call, 0, !dbg !13183
  br i1 %tobool, label %if.then, label %if.end, !dbg !13184

if.then:                                          ; preds = %land.lhs.true4
  store i1 true, i1* %retval, align 1, !dbg !13186
  br label %return, !dbg !13186

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !13187
  br label %return, !dbg !13187

return:                                           ; preds = %if.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !13188
  ret i1 %12, !dbg !13188
}

declare zeroext i1 @Curl_ssl_config_matches(%struct.ssl_primary_config*, %struct.ssl_primary_config*) #3

declare zeroext i1 @Curl_pipeline_penalized(%struct.Curl_easy*, %struct.connectdata*) #3

declare i32 @Curl_safe_strcasecompare(i8*, i8*) #3

declare void @Curl_persistconninfo(%struct.connectdata*) #3

declare i64 @Curl_timeleft(%struct.Curl_easy*, %struct.timeval*, i1 zeroext) #3

declare i32 @Curl_resolv_timeout(%struct.connectdata*, i8*, i32, %struct.Curl_dns_entry**, i64) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2252, !2253}
!llvm.ident = !{!2254}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2076, subprograms: !2079, globals: !2245)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/url.c", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2 = !{!3, !14, !24, !120, !126, !134, !173, !192, !212, !227, !244, !252, !266, !299, !368, !466, !476, !567, !584, !591, !730, !746, !758, !855, !865, !913, !931, !937, !963, !978, !987, !995, !1024, !1225, !1277, !1716, !1775, !2025, !2034, !2049, !2064}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 31, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http_chunks.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13}
!6 = !DIEnumerator(name: "CHUNK_HEX", value: 0)
!7 = !DIEnumerator(name: "CHUNK_LF", value: 1)
!8 = !DIEnumerator(name: "CHUNK_DATA", value: 2)
!9 = !DIEnumerator(name: "CHUNK_POSTLF", value: 3)
!10 = !DIEnumerator(name: "CHUNK_STOP", value: 4)
!11 = !DIEnumerator(name: "CHUNK_TRAILER", value: 5)
!12 = !DIEnumerator(name: "CHUNK_TRAILER_CR", value: 6)
!13 = !DIEnumerator(name: "CHUNK_TRAILER_POSTCR", value: 7)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 644, size: 32, align: 32, elements: !16)
!15 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!16 = !{!17, !18, !19, !20, !21, !22, !23}
!17 = !DIEnumerator(name: "CURLPROXY_HTTP", value: 0)
!18 = !DIEnumerator(name: "CURLPROXY_HTTP_1_0", value: 1)
!19 = !DIEnumerator(name: "CURLPROXY_HTTPS", value: 2)
!20 = !DIEnumerator(name: "CURLPROXY_SOCKS4", value: 4)
!21 = !DIEnumerator(name: "CURLPROXY_SOCKS5", value: 5)
!22 = !DIEnumerator(name: "CURLPROXY_SOCKS4A", value: 6)
!23 = !DIEnumerator(name: "CURLPROXY_SOCKS5_HOSTNAME", value: 7)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 434, size: 32, align: 32, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119}
!26 = !DIEnumerator(name: "CURLE_OK", value: 0)
!27 = !DIEnumerator(name: "CURLE_UNSUPPORTED_PROTOCOL", value: 1)
!28 = !DIEnumerator(name: "CURLE_FAILED_INIT", value: 2)
!29 = !DIEnumerator(name: "CURLE_URL_MALFORMAT", value: 3)
!30 = !DIEnumerator(name: "CURLE_NOT_BUILT_IN", value: 4)
!31 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_PROXY", value: 5)
!32 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_HOST", value: 6)
!33 = !DIEnumerator(name: "CURLE_COULDNT_CONNECT", value: 7)
!34 = !DIEnumerator(name: "CURLE_WEIRD_SERVER_REPLY", value: 8)
!35 = !DIEnumerator(name: "CURLE_REMOTE_ACCESS_DENIED", value: 9)
!36 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_FAILED", value: 10)
!37 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASS_REPLY", value: 11)
!38 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_TIMEOUT", value: 12)
!39 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASV_REPLY", value: 13)
!40 = !DIEnumerator(name: "CURLE_FTP_WEIRD_227_FORMAT", value: 14)
!41 = !DIEnumerator(name: "CURLE_FTP_CANT_GET_HOST", value: 15)
!42 = !DIEnumerator(name: "CURLE_HTTP2", value: 16)
!43 = !DIEnumerator(name: "CURLE_FTP_COULDNT_SET_TYPE", value: 17)
!44 = !DIEnumerator(name: "CURLE_PARTIAL_FILE", value: 18)
!45 = !DIEnumerator(name: "CURLE_FTP_COULDNT_RETR_FILE", value: 19)
!46 = !DIEnumerator(name: "CURLE_OBSOLETE20", value: 20)
!47 = !DIEnumerator(name: "CURLE_QUOTE_ERROR", value: 21)
!48 = !DIEnumerator(name: "CURLE_HTTP_RETURNED_ERROR", value: 22)
!49 = !DIEnumerator(name: "CURLE_WRITE_ERROR", value: 23)
!50 = !DIEnumerator(name: "CURLE_OBSOLETE24", value: 24)
!51 = !DIEnumerator(name: "CURLE_UPLOAD_FAILED", value: 25)
!52 = !DIEnumerator(name: "CURLE_READ_ERROR", value: 26)
!53 = !DIEnumerator(name: "CURLE_OUT_OF_MEMORY", value: 27)
!54 = !DIEnumerator(name: "CURLE_OPERATION_TIMEDOUT", value: 28)
!55 = !DIEnumerator(name: "CURLE_OBSOLETE29", value: 29)
!56 = !DIEnumerator(name: "CURLE_FTP_PORT_FAILED", value: 30)
!57 = !DIEnumerator(name: "CURLE_FTP_COULDNT_USE_REST", value: 31)
!58 = !DIEnumerator(name: "CURLE_OBSOLETE32", value: 32)
!59 = !DIEnumerator(name: "CURLE_RANGE_ERROR", value: 33)
!60 = !DIEnumerator(name: "CURLE_HTTP_POST_ERROR", value: 34)
!61 = !DIEnumerator(name: "CURLE_SSL_CONNECT_ERROR", value: 35)
!62 = !DIEnumerator(name: "CURLE_BAD_DOWNLOAD_RESUME", value: 36)
!63 = !DIEnumerator(name: "CURLE_FILE_COULDNT_READ_FILE", value: 37)
!64 = !DIEnumerator(name: "CURLE_LDAP_CANNOT_BIND", value: 38)
!65 = !DIEnumerator(name: "CURLE_LDAP_SEARCH_FAILED", value: 39)
!66 = !DIEnumerator(name: "CURLE_OBSOLETE40", value: 40)
!67 = !DIEnumerator(name: "CURLE_FUNCTION_NOT_FOUND", value: 41)
!68 = !DIEnumerator(name: "CURLE_ABORTED_BY_CALLBACK", value: 42)
!69 = !DIEnumerator(name: "CURLE_BAD_FUNCTION_ARGUMENT", value: 43)
!70 = !DIEnumerator(name: "CURLE_OBSOLETE44", value: 44)
!71 = !DIEnumerator(name: "CURLE_INTERFACE_FAILED", value: 45)
!72 = !DIEnumerator(name: "CURLE_OBSOLETE46", value: 46)
!73 = !DIEnumerator(name: "CURLE_TOO_MANY_REDIRECTS", value: 47)
!74 = !DIEnumerator(name: "CURLE_UNKNOWN_OPTION", value: 48)
!75 = !DIEnumerator(name: "CURLE_TELNET_OPTION_SYNTAX", value: 49)
!76 = !DIEnumerator(name: "CURLE_OBSOLETE50", value: 50)
!77 = !DIEnumerator(name: "CURLE_PEER_FAILED_VERIFICATION", value: 51)
!78 = !DIEnumerator(name: "CURLE_GOT_NOTHING", value: 52)
!79 = !DIEnumerator(name: "CURLE_SSL_ENGINE_NOTFOUND", value: 53)
!80 = !DIEnumerator(name: "CURLE_SSL_ENGINE_SETFAILED", value: 54)
!81 = !DIEnumerator(name: "CURLE_SEND_ERROR", value: 55)
!82 = !DIEnumerator(name: "CURLE_RECV_ERROR", value: 56)
!83 = !DIEnumerator(name: "CURLE_OBSOLETE57", value: 57)
!84 = !DIEnumerator(name: "CURLE_SSL_CERTPROBLEM", value: 58)
!85 = !DIEnumerator(name: "CURLE_SSL_CIPHER", value: 59)
!86 = !DIEnumerator(name: "CURLE_SSL_CACERT", value: 60)
!87 = !DIEnumerator(name: "CURLE_BAD_CONTENT_ENCODING", value: 61)
!88 = !DIEnumerator(name: "CURLE_LDAP_INVALID_URL", value: 62)
!89 = !DIEnumerator(name: "CURLE_FILESIZE_EXCEEDED", value: 63)
!90 = !DIEnumerator(name: "CURLE_USE_SSL_FAILED", value: 64)
!91 = !DIEnumerator(name: "CURLE_SEND_FAIL_REWIND", value: 65)
!92 = !DIEnumerator(name: "CURLE_SSL_ENGINE_INITFAILED", value: 66)
!93 = !DIEnumerator(name: "CURLE_LOGIN_DENIED", value: 67)
!94 = !DIEnumerator(name: "CURLE_TFTP_NOTFOUND", value: 68)
!95 = !DIEnumerator(name: "CURLE_TFTP_PERM", value: 69)
!96 = !DIEnumerator(name: "CURLE_REMOTE_DISK_FULL", value: 70)
!97 = !DIEnumerator(name: "CURLE_TFTP_ILLEGAL", value: 71)
!98 = !DIEnumerator(name: "CURLE_TFTP_UNKNOWNID", value: 72)
!99 = !DIEnumerator(name: "CURLE_REMOTE_FILE_EXISTS", value: 73)
!100 = !DIEnumerator(name: "CURLE_TFTP_NOSUCHUSER", value: 74)
!101 = !DIEnumerator(name: "CURLE_CONV_FAILED", value: 75)
!102 = !DIEnumerator(name: "CURLE_CONV_REQD", value: 76)
!103 = !DIEnumerator(name: "CURLE_SSL_CACERT_BADFILE", value: 77)
!104 = !DIEnumerator(name: "CURLE_REMOTE_FILE_NOT_FOUND", value: 78)
!105 = !DIEnumerator(name: "CURLE_SSH", value: 79)
!106 = !DIEnumerator(name: "CURLE_SSL_SHUTDOWN_FAILED", value: 80)
!107 = !DIEnumerator(name: "CURLE_AGAIN", value: 81)
!108 = !DIEnumerator(name: "CURLE_SSL_CRL_BADFILE", value: 82)
!109 = !DIEnumerator(name: "CURLE_SSL_ISSUER_ERROR", value: 83)
!110 = !DIEnumerator(name: "CURLE_FTP_PRET_FAILED", value: 84)
!111 = !DIEnumerator(name: "CURLE_RTSP_CSEQ_ERROR", value: 85)
!112 = !DIEnumerator(name: "CURLE_RTSP_SESSION_ERROR", value: 86)
!113 = !DIEnumerator(name: "CURLE_FTP_BAD_FILE_LIST", value: 87)
!114 = !DIEnumerator(name: "CURLE_CHUNK_FAILED", value: 88)
!115 = !DIEnumerator(name: "CURLE_NO_CONNECTION_AVAILABLE", value: 89)
!116 = !DIEnumerator(name: "CURLE_SSL_PINNEDPUBKEYNOTMATCH", value: 90)
!117 = !DIEnumerator(name: "CURLE_SSL_INVALIDCERTSTATUS", value: 91)
!118 = !DIEnumerator(name: "CURLE_HTTP2_STREAM", value: 92)
!119 = !DIEnumerator(name: "CURL_LAST", value: 93)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 267, size: 32, align: 32, elements: !122)
!121 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/urldata.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "ssl_connection_none", value: 0)
!124 = !DIEnumerator(name: "ssl_connection_negotiating", value: 1)
!125 = !DIEnumerator(name: "ssl_connection_complete", value: 2)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 258, size: 32, align: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132, !133}
!128 = !DIEnumerator(name: "ssl_connect_1", value: 0)
!129 = !DIEnumerator(name: "ssl_connect_2", value: 1)
!130 = !DIEnumerator(name: "ssl_connect_2_reading", value: 2)
!131 = !DIEnumerator(name: "ssl_connect_2_writing", value: 3)
!132 = !DIEnumerator(name: "ssl_connect_3", value: 4)
!133 = !DIEnumerator(name: "ssl_connect_done", value: 5)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !135, line: 42, size: 32, align: 32, elements: !136)
!135 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ftp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!137 = !DIEnumerator(name: "FTP_STOP", value: 0)
!138 = !DIEnumerator(name: "FTP_WAIT220", value: 1)
!139 = !DIEnumerator(name: "FTP_AUTH", value: 2)
!140 = !DIEnumerator(name: "FTP_USER", value: 3)
!141 = !DIEnumerator(name: "FTP_PASS", value: 4)
!142 = !DIEnumerator(name: "FTP_ACCT", value: 5)
!143 = !DIEnumerator(name: "FTP_PBSZ", value: 6)
!144 = !DIEnumerator(name: "FTP_PROT", value: 7)
!145 = !DIEnumerator(name: "FTP_CCC", value: 8)
!146 = !DIEnumerator(name: "FTP_PWD", value: 9)
!147 = !DIEnumerator(name: "FTP_SYST", value: 10)
!148 = !DIEnumerator(name: "FTP_NAMEFMT", value: 11)
!149 = !DIEnumerator(name: "FTP_QUOTE", value: 12)
!150 = !DIEnumerator(name: "FTP_RETR_PREQUOTE", value: 13)
!151 = !DIEnumerator(name: "FTP_STOR_PREQUOTE", value: 14)
!152 = !DIEnumerator(name: "FTP_POSTQUOTE", value: 15)
!153 = !DIEnumerator(name: "FTP_CWD", value: 16)
!154 = !DIEnumerator(name: "FTP_MKD", value: 17)
!155 = !DIEnumerator(name: "FTP_MDTM", value: 18)
!156 = !DIEnumerator(name: "FTP_TYPE", value: 19)
!157 = !DIEnumerator(name: "FTP_LIST_TYPE", value: 20)
!158 = !DIEnumerator(name: "FTP_RETR_TYPE", value: 21)
!159 = !DIEnumerator(name: "FTP_STOR_TYPE", value: 22)
!160 = !DIEnumerator(name: "FTP_SIZE", value: 23)
!161 = !DIEnumerator(name: "FTP_RETR_SIZE", value: 24)
!162 = !DIEnumerator(name: "FTP_STOR_SIZE", value: 25)
!163 = !DIEnumerator(name: "FTP_REST", value: 26)
!164 = !DIEnumerator(name: "FTP_RETR_REST", value: 27)
!165 = !DIEnumerator(name: "FTP_PORT", value: 28)
!166 = !DIEnumerator(name: "FTP_PRET", value: 29)
!167 = !DIEnumerator(name: "FTP_PASV", value: 30)
!168 = !DIEnumerator(name: "FTP_LIST", value: 31)
!169 = !DIEnumerator(name: "FTP_RETR", value: 32)
!170 = !DIEnumerator(name: "FTP_STOR", value: 33)
!171 = !DIEnumerator(name: "FTP_QUIT", value: 34)
!172 = !DIEnumerator(name: "FTP_LAST", value: 35)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !174, line: 31, size: 32, align: 32, elements: !175)
!174 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/imap.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!176 = !DIEnumerator(name: "IMAP_STOP", value: 0)
!177 = !DIEnumerator(name: "IMAP_SERVERGREET", value: 1)
!178 = !DIEnumerator(name: "IMAP_CAPABILITY", value: 2)
!179 = !DIEnumerator(name: "IMAP_STARTTLS", value: 3)
!180 = !DIEnumerator(name: "IMAP_UPGRADETLS", value: 4)
!181 = !DIEnumerator(name: "IMAP_AUTHENTICATE", value: 5)
!182 = !DIEnumerator(name: "IMAP_LOGIN", value: 6)
!183 = !DIEnumerator(name: "IMAP_LIST", value: 7)
!184 = !DIEnumerator(name: "IMAP_SELECT", value: 8)
!185 = !DIEnumerator(name: "IMAP_FETCH", value: 9)
!186 = !DIEnumerator(name: "IMAP_FETCH_FINAL", value: 10)
!187 = !DIEnumerator(name: "IMAP_APPEND", value: 11)
!188 = !DIEnumerator(name: "IMAP_APPEND_FINAL", value: 12)
!189 = !DIEnumerator(name: "IMAP_SEARCH", value: 13)
!190 = !DIEnumerator(name: "IMAP_LOGOUT", value: 14)
!191 = !DIEnumerator(name: "IMAP_LAST", value: 15)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 58, size: 32, align: 32, elements: !194)
!193 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_sasl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!194 = !{!195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!195 = !DIEnumerator(name: "SASL_STOP", value: 0)
!196 = !DIEnumerator(name: "SASL_PLAIN", value: 1)
!197 = !DIEnumerator(name: "SASL_LOGIN", value: 2)
!198 = !DIEnumerator(name: "SASL_LOGIN_PASSWD", value: 3)
!199 = !DIEnumerator(name: "SASL_EXTERNAL", value: 4)
!200 = !DIEnumerator(name: "SASL_CRAMMD5", value: 5)
!201 = !DIEnumerator(name: "SASL_DIGESTMD5", value: 6)
!202 = !DIEnumerator(name: "SASL_DIGESTMD5_RESP", value: 7)
!203 = !DIEnumerator(name: "SASL_NTLM", value: 8)
!204 = !DIEnumerator(name: "SASL_NTLM_TYPE2MSG", value: 9)
!205 = !DIEnumerator(name: "SASL_GSSAPI", value: 10)
!206 = !DIEnumerator(name: "SASL_GSSAPI_TOKEN", value: 11)
!207 = !DIEnumerator(name: "SASL_GSSAPI_NO_DATA", value: 12)
!208 = !DIEnumerator(name: "SASL_OAUTH2", value: 13)
!209 = !DIEnumerator(name: "SASL_OAUTH2_RESP", value: 14)
!210 = !DIEnumerator(name: "SASL_CANCEL", value: 15)
!211 = !DIEnumerator(name: "SASL_FINAL", value: 16)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !213, line: 31, size: 32, align: 32, elements: !214)
!213 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pop3.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226}
!215 = !DIEnumerator(name: "POP3_STOP", value: 0)
!216 = !DIEnumerator(name: "POP3_SERVERGREET", value: 1)
!217 = !DIEnumerator(name: "POP3_CAPA", value: 2)
!218 = !DIEnumerator(name: "POP3_STARTTLS", value: 3)
!219 = !DIEnumerator(name: "POP3_UPGRADETLS", value: 4)
!220 = !DIEnumerator(name: "POP3_AUTH", value: 5)
!221 = !DIEnumerator(name: "POP3_APOP", value: 6)
!222 = !DIEnumerator(name: "POP3_USER", value: 7)
!223 = !DIEnumerator(name: "POP3_PASS", value: 8)
!224 = !DIEnumerator(name: "POP3_COMMAND", value: 9)
!225 = !DIEnumerator(name: "POP3_QUIT", value: 10)
!226 = !DIEnumerator(name: "POP3_LAST", value: 11)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 31, size: 32, align: 32, elements: !229)
!228 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smtp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!229 = !{!230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243}
!230 = !DIEnumerator(name: "SMTP_STOP", value: 0)
!231 = !DIEnumerator(name: "SMTP_SERVERGREET", value: 1)
!232 = !DIEnumerator(name: "SMTP_EHLO", value: 2)
!233 = !DIEnumerator(name: "SMTP_HELO", value: 3)
!234 = !DIEnumerator(name: "SMTP_STARTTLS", value: 4)
!235 = !DIEnumerator(name: "SMTP_UPGRADETLS", value: 5)
!236 = !DIEnumerator(name: "SMTP_AUTH", value: 6)
!237 = !DIEnumerator(name: "SMTP_COMMAND", value: 7)
!238 = !DIEnumerator(name: "SMTP_MAIL", value: 8)
!239 = !DIEnumerator(name: "SMTP_RCPT", value: 9)
!240 = !DIEnumerator(name: "SMTP_DATA", value: 10)
!241 = !DIEnumerator(name: "SMTP_POSTDATA", value: 11)
!242 = !DIEnumerator(name: "SMTP_QUIT", value: 12)
!243 = !DIEnumerator(name: "SMTP_LAST", value: 13)
!244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "smb_conn_state", file: !245, line: 25, size: 32, align: 32, elements: !246)
!245 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smb.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIEnumerator(name: "SMB_NOT_CONNECTED", value: 0)
!248 = !DIEnumerator(name: "SMB_CONNECTING", value: 1)
!249 = !DIEnumerator(name: "SMB_NEGOTIATE", value: 2)
!250 = !DIEnumerator(name: "SMB_SETUP", value: 3)
!251 = !DIEnumerator(name: "SMB_CONNECTED", value: 4)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !253, file: !121, line: 1133, size: 32, align: 32, elements: !1712)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectdata", file: !121, line: 895, size: 13440, align: 64, elements: !254)
!254 = !{!255, !1293, !1305, !1306, !1307, !1308, !1309, !1335, !1336, !1340, !1341, !1342, !1343, !1350, !1351, !1352, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1379, !1380, !1382, !1389, !1395, !1404, !1405, !1406, !1407, !1408, !1444, !1445, !1446, !1447, !1501, !1502, !1503, !1504, !1505, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1531, !1532, !1533, !1534, !1697, !1698, !1699, !1700, !1701, !1702, !1704, !1711}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !253, file: !121, line: 899, baseType: !256, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64, align: 64)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_easy", file: !121, line: 1801, size: 160192, align: 64, elements: !258)
!258 = !{!259, !260, !261, !263, !288, !290, !313, !319, !320, !374, !450, !451, !551, !621, !1081, !1090, !1091, !1127, !1219, !1242, !1272, !1292}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !257, file: !121, line: 1803, baseType: !256, size: 64, align: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !257, file: !121, line: 1804, baseType: !256, size: 64, align: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "easy_conn", scope: !257, file: !121, line: 1806, baseType: !262, size: 64, align: 64, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !257, file: !121, line: 1808, baseType: !264, size: 32, align: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMstate", file: !265, line: 59, baseType: !266)
!265 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/multihandle.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 35, size: 32, align: 32, elements: !267)
!267 = !{!268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287}
!268 = !DIEnumerator(name: "CURLM_STATE_INIT", value: 0)
!269 = !DIEnumerator(name: "CURLM_STATE_CONNECT_PEND", value: 1)
!270 = !DIEnumerator(name: "CURLM_STATE_CONNECT", value: 2)
!271 = !DIEnumerator(name: "CURLM_STATE_WAITRESOLVE", value: 3)
!272 = !DIEnumerator(name: "CURLM_STATE_WAITCONNECT", value: 4)
!273 = !DIEnumerator(name: "CURLM_STATE_WAITPROXYCONNECT", value: 5)
!274 = !DIEnumerator(name: "CURLM_STATE_SENDPROTOCONNECT", value: 6)
!275 = !DIEnumerator(name: "CURLM_STATE_PROTOCONNECT", value: 7)
!276 = !DIEnumerator(name: "CURLM_STATE_WAITDO", value: 8)
!277 = !DIEnumerator(name: "CURLM_STATE_DO", value: 9)
!278 = !DIEnumerator(name: "CURLM_STATE_DOING", value: 10)
!279 = !DIEnumerator(name: "CURLM_STATE_DO_MORE", value: 11)
!280 = !DIEnumerator(name: "CURLM_STATE_DO_DONE", value: 12)
!281 = !DIEnumerator(name: "CURLM_STATE_WAITPERFORM", value: 13)
!282 = !DIEnumerator(name: "CURLM_STATE_PERFORM", value: 14)
!283 = !DIEnumerator(name: "CURLM_STATE_TOOFAST", value: 15)
!284 = !DIEnumerator(name: "CURLM_STATE_DONE", value: 16)
!285 = !DIEnumerator(name: "CURLM_STATE_COMPLETED", value: 17)
!286 = !DIEnumerator(name: "CURLM_STATE_MSGSENT", value: 18)
!287 = !DIEnumerator(name: "CURLM_STATE_LAST", value: 19)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !257, file: !121, line: 1809, baseType: !289, size: 32, align: 32, offset: 224)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLcode", file: !15, line: 561, baseType: !24)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !257, file: !121, line: 1811, baseType: !291, size: 192, align: 64, offset: 256)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_message", file: !265, line: 27, size: 192, align: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "extmsg", scope: !291, file: !265, line: 29, baseType: !294, size: 192, align: 64)
!294 = !DICompositeType(tag: DW_TAG_structure_type, name: "CURLMsg", file: !295, line: 93, size: 192, align: 64, elements: !296)
!295 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/multi.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!296 = !{!297, !304, !307}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !294, file: !295, line: 94, baseType: !298, size: 32, align: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMSG", file: !295, line: 91, baseType: !299)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !295, line: 86, size: 32, align: 32, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIEnumerator(name: "CURLMSG_NONE", value: 0)
!302 = !DIEnumerator(name: "CURLMSG_DONE", value: 1)
!303 = !DIEnumerator(name: "CURLMSG_LAST", value: 2)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "easy_handle", scope: !294, file: !295, line: 95, baseType: !305, size: 64, align: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURL", file: !15, line: 100, baseType: !257)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !294, file: !295, line: 99, baseType: !308, size: 64, align: 64, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_union_type, scope: !294, file: !295, line: 96, size: 64, align: 64, elements: !309)
!309 = !{!310, !312}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "whatever", scope: !308, file: !295, line: 97, baseType: !311, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !308, file: !295, line: 98, baseType: !289, size: 32, align: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "sockets", scope: !257, file: !121, line: 1817, baseType: !314, size: 160, align: 32, offset: 448)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 160, align: 32, elements: !317)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_t", file: !15, line: 131, baseType: !316)
!316 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!317 = !{!318}
!318 = !DISubrange(count: 5)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "numsocks", scope: !257, file: !121, line: 1818, baseType: !316, size: 32, align: 32, offset: 608)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "dns", scope: !257, file: !121, line: 1820, baseType: !321, size: 128, align: 64, offset: 640)
!321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Names", file: !121, line: 1781, size: 128, align: 64, elements: !322)
!322 = !{!323, !367}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !321, file: !121, line: 1782, baseType: !324, size: 64, align: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_hash", file: !326, line: 46, size: 384, align: 64, elements: !327)
!326 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hash.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!327 = !{!328, !350, !355, !360, !365, !366}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !325, file: !326, line: 47, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist", file: !331, line: 37, size: 256, align: 64, elements: !332)
!331 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/llist.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!332 = !{!333, !340, !341, !346}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !330, file: !331, line: 38, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist_element", file: !331, line: 30, size: 192, align: 64, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !335, file: !331, line: 31, baseType: !311, size: 64, align: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !331, line: 33, baseType: !334, size: 64, align: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !335, file: !331, line: 34, baseType: !334, size: 64, align: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !330, file: !331, line: 39, baseType: !334, size: 64, align: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !330, file: !331, line: 41, baseType: !342, size: 64, align: 64, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_llist_dtor", file: !331, line: 28, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{null, !311, !311}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !331, line: 43, baseType: !347, size: 64, align: 64, offset: 192)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !348, line: 62, baseType: !349)
!348 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!349 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "hash_func", scope: !325, file: !326, line: 50, baseType: !351, size: 64, align: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_function", file: !326, line: 32, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!347, !311, !347, !347}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "comp_func", scope: !325, file: !326, line: 53, baseType: !356, size: 64, align: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "comp_function", file: !326, line: 39, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64, align: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!347, !311, !347, !311, !347}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !325, file: !326, line: 54, baseType: !361, size: 64, align: 64, offset: 192)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_hash_dtor", file: !326, line: 44, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64, align: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{null, !311}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !325, file: !326, line: 55, baseType: !316, size: 32, align: 32, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !325, file: !326, line: 56, baseType: !347, size: 64, align: 64, offset: 320)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hostcachetype", scope: !321, file: !121, line: 1788, baseType: !368, size: 32, align: 32, offset: 64)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !321, file: !121, line: 1783, size: 32, align: 32, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIEnumerator(name: "HCACHE_NONE", value: 0)
!371 = !DIEnumerator(name: "HCACHE_GLOBAL", value: 1)
!372 = !DIEnumerator(name: "HCACHE_MULTI", value: 2)
!373 = !DIEnumerator(name: "HCACHE_SHARED", value: 3)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !257, file: !121, line: 1821, baseType: !375, size: 64, align: 64, offset: 768)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64, align: 64)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_multi", file: !265, line: 70, size: 3840, align: 64, elements: !377)
!377 = !{!378, !380, !381, !382, !383, !384, !385, !386, !391, !392, !399, !400, !401, !420, !421, !422, !424, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !448, !449}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !376, file: !265, line: 73, baseType: !379, size: 64, align: 64)
!379 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "easyp", scope: !376, file: !265, line: 76, baseType: !256, size: 64, align: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "easylp", scope: !376, file: !265, line: 77, baseType: !256, size: 64, align: 64, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "num_easy", scope: !376, file: !265, line: 79, baseType: !316, size: 32, align: 32, offset: 192)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "num_alive", scope: !376, file: !265, line: 80, baseType: !316, size: 32, align: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "msglist", scope: !376, file: !265, line: 83, baseType: !330, size: 256, align: 64, offset: 256)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !376, file: !265, line: 85, baseType: !330, size: 256, align: 64, offset: 512)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "socket_cb", scope: !376, file: !265, line: 89, baseType: !387, size: 64, align: 64, offset: 768)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_callback", file: !295, line: 268, baseType: !388)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{!316, !305, !315, !316, !311, !311}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "socket_userp", scope: !376, file: !265, line: 90, baseType: !311, size: 64, align: 64, offset: 832)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "push_cb", scope: !376, file: !265, line: 93, baseType: !393, size: 64, align: 64, offset: 896)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_push_callback", file: !295, line: 429, baseType: !394)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!316, !305, !305, !347, !397, !311}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, align: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_pushheaders", file: !295, line: 422, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "push_userp", scope: !376, file: !265, line: 94, baseType: !311, size: 64, align: 64, offset: 960)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !376, file: !265, line: 97, baseType: !325, size: 384, align: 64, offset: 1024)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "timetree", scope: !376, file: !265, line: 101, baseType: !402, size: 64, align: 64, offset: 1408)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64, align: 64)
!403 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_tree", file: !404, line: 26, size: 448, align: 64, elements: !405)
!404 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/splay.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!405 = !{!406, !407, !408, !409, !410, !419}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !403, file: !404, line: 27, baseType: !402, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "larger", scope: !403, file: !404, line: 28, baseType: !402, size: 64, align: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "samen", scope: !403, file: !404, line: 29, baseType: !402, size: 64, align: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "samep", scope: !403, file: !404, line: 30, baseType: !402, size: 64, align: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !403, file: !404, line: 31, baseType: !411, size: 128, align: 64, offset: 256)
!411 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !412, line: 30, size: 128, align: 64, elements: !413)
!412 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !411, file: !412, line: 32, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !416, line: 139, baseType: !379)
!416 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !411, file: !412, line: 33, baseType: !418, size: 64, align: 64, offset: 64)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !416, line: 141, baseType: !379)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !403, file: !404, line: 32, baseType: !311, size: 64, align: 64, offset: 384)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sockhash", scope: !376, file: !265, line: 106, baseType: !325, size: 384, align: 64, offset: 1472)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining", scope: !376, file: !265, line: 109, baseType: !379, size: 64, align: 64, offset: 1856)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "recheckstate", scope: !376, file: !265, line: 111, baseType: !423, size: 8, align: 8, offset: 1920)
!423 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !376, file: !265, line: 114, baseType: !425, size: 640, align: 64, offset: 1984)
!425 = !DICompositeType(tag: DW_TAG_structure_type, name: "conncache", file: !426, line: 26, size: 640, align: 64, elements: !427)
!426 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/conncache.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!427 = !{!428, !429, !430, !431}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !425, file: !426, line: 27, baseType: !325, size: 384, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !425, file: !426, line: 28, baseType: !347, size: 64, align: 64, offset: 384)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next_connection_id", scope: !425, file: !426, line: 29, baseType: !379, size: 64, align: 64, offset: 448)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "last_cleanup", scope: !425, file: !426, line: 30, baseType: !411, size: 128, align: 64, offset: 512)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "closure_handle", scope: !376, file: !265, line: 118, baseType: !256, size: 64, align: 64, offset: 2624)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !376, file: !265, line: 120, baseType: !379, size: 64, align: 64, offset: 2688)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_connections", scope: !376, file: !265, line: 123, baseType: !379, size: 64, align: 64, offset: 2752)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_connections", scope: !376, file: !265, line: 126, baseType: !379, size: 64, align: 64, offset: 2816)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "max_pipeline_length", scope: !376, file: !265, line: 129, baseType: !379, size: 64, align: 64, offset: 2880)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "content_length_penalty_size", scope: !376, file: !265, line: 132, baseType: !379, size: 64, align: 64, offset: 2944)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_length_penalty_size", scope: !376, file: !265, line: 137, baseType: !379, size: 64, align: 64, offset: 3008)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_site_bl", scope: !376, file: !265, line: 141, baseType: !330, size: 256, align: 64, offset: 3072)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_server_bl", scope: !376, file: !265, line: 144, baseType: !330, size: 256, align: 64, offset: 3328)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "timer_cb", scope: !376, file: !265, line: 148, baseType: !442, size: 64, align: 64, offset: 3584)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_multi_timer_callback", file: !295, line: 285, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!316, !446, !379, !311}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLM", file: !295, line: 56, baseType: !376)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "timer_userp", scope: !376, file: !265, line: 149, baseType: !311, size: 64, align: 64, offset: 3648)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "timer_lastcall", scope: !376, file: !265, line: 150, baseType: !411, size: 128, align: 64, offset: 3712)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "multi_easy", scope: !257, file: !121, line: 1824, baseType: !375, size: 64, align: 64, offset: 832)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "share", scope: !257, file: !121, line: 1827, baseType: !452, size: 64, align: 64, offset: 896)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64, align: 64)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_share", file: !454, line: 39, size: 896, align: 64, elements: !455)
!454 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/share.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!455 = !{!456, !458, !460, !482, !487, !488, !489, !520, !549, !550}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !453, file: !454, line: 40, baseType: !457, size: 32, align: 32)
!457 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !453, file: !454, line: 41, baseType: !459, size: 32, align: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !457)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "lockfunc", scope: !453, file: !454, line: 43, baseType: !461, size: 64, align: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_function", file: !15, line: 2365, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{null, !305, !465, !475, !311}
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_data", file: !15, line: 2355, baseType: !466)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2343, size: 32, align: 32, elements: !467)
!467 = !{!468, !469, !470, !471, !472, !473, !474}
!468 = !DIEnumerator(name: "CURL_LOCK_DATA_NONE", value: 0)
!469 = !DIEnumerator(name: "CURL_LOCK_DATA_SHARE", value: 1)
!470 = !DIEnumerator(name: "CURL_LOCK_DATA_COOKIE", value: 2)
!471 = !DIEnumerator(name: "CURL_LOCK_DATA_DNS", value: 3)
!472 = !DIEnumerator(name: "CURL_LOCK_DATA_SSL_SESSION", value: 4)
!473 = !DIEnumerator(name: "CURL_LOCK_DATA_CONNECT", value: 5)
!474 = !DIEnumerator(name: "CURL_LOCK_DATA_LAST", value: 6)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_access", file: !15, line: 2363, baseType: !476)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2358, size: 32, align: 32, elements: !477)
!477 = !{!478, !479, !480, !481}
!478 = !DIEnumerator(name: "CURL_LOCK_ACCESS_NONE", value: 0)
!479 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SHARED", value: 1)
!480 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SINGLE", value: 2)
!481 = !DIEnumerator(name: "CURL_LOCK_ACCESS_LAST", value: 3)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "unlockfunc", scope: !453, file: !454, line: 44, baseType: !483, size: 64, align: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_unlock_function", file: !15, line: 2369, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64, align: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{null, !305, !465, !311}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "clientdata", scope: !453, file: !454, line: 45, baseType: !311, size: 64, align: 64, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !453, file: !454, line: 47, baseType: !325, size: 384, align: 64, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !453, file: !454, line: 49, baseType: !490, size: 64, align: 64, offset: 640)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "CookieInfo", file: !492, line: 48, size: 320, align: 64, elements: !493)
!492 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/cookie.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!493 = !{!494, !516, !517, !518, !519}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !491, file: !492, line: 50, baseType: !495, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cookie", file: !492, line: 28, size: 768, align: 64, elements: !497)
!497 = !{!498, !499, !502, !503, !504, !505, !506, !509, !510, !511, !512, !513, !514, !515}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !496, file: !492, line: 29, baseType: !495, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !496, file: !492, line: 30, baseType: !500, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64, align: 64)
!501 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !496, file: !492, line: 31, baseType: !500, size: 64, align: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !496, file: !492, line: 32, baseType: !500, size: 64, align: 64, offset: 192)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "spath", scope: !496, file: !492, line: 33, baseType: !500, size: 64, align: 64, offset: 256)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !496, file: !492, line: 34, baseType: !500, size: 64, align: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !496, file: !492, line: 35, baseType: !507, size: 64, align: 64, offset: 384)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_off_t", file: !508, line: 216, baseType: !379)
!508 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curlbuild.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!509 = !DIDerivedType(tag: DW_TAG_member, name: "expirestr", scope: !496, file: !492, line: 36, baseType: !500, size: 64, align: 64, offset: 448)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "tailmatch", scope: !496, file: !492, line: 37, baseType: !423, size: 8, align: 8, offset: 512)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !496, file: !492, line: 40, baseType: !500, size: 64, align: 64, offset: 576)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "maxage", scope: !496, file: !492, line: 41, baseType: !500, size: 64, align: 64, offset: 640)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "secure", scope: !496, file: !492, line: 43, baseType: !423, size: 8, align: 8, offset: 704)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "livecookie", scope: !496, file: !492, line: 44, baseType: !423, size: 8, align: 8, offset: 712)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "httponly", scope: !496, file: !492, line: 45, baseType: !423, size: 8, align: 8, offset: 720)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !491, file: !492, line: 52, baseType: !500, size: 64, align: 64, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !491, file: !492, line: 53, baseType: !423, size: 8, align: 8, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "numcookies", scope: !491, file: !492, line: 54, baseType: !379, size: 64, align: 64, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "newsession", scope: !491, file: !492, line: 55, baseType: !423, size: 8, align: 8, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "sslsession", scope: !453, file: !454, line: 52, baseType: !521, size: 64, align: 64, offset: 704)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64, align: 64)
!522 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_ssl_session", file: !121, line: 397, size: 1088, align: 64, elements: !523)
!523 = !{!524, !525, !526, !529, !530, !531, !532, !533, !534}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !121, line: 398, baseType: !500, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !522, file: !121, line: 399, baseType: !500, size: 64, align: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !522, file: !121, line: 400, baseType: !527, size: 64, align: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !522, file: !121, line: 401, baseType: !311, size: 64, align: 64, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "idsize", scope: !522, file: !121, line: 402, baseType: !347, size: 64, align: 64, offset: 256)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "age", scope: !522, file: !121, line: 403, baseType: !379, size: 64, align: 64, offset: 320)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !522, file: !121, line: 404, baseType: !316, size: 32, align: 32, offset: 384)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !522, file: !121, line: 405, baseType: !316, size: 32, align: 32, offset: 416)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !522, file: !121, line: 406, baseType: !535, size: 640, align: 64, offset: 448)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_primary_config", file: !121, line: 351, size: 640, align: 64, elements: !536)
!536 = !{!537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !535, file: !121, line: 352, baseType: !379, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "version_max", scope: !535, file: !121, line: 353, baseType: !379, size: 64, align: 64, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "verifypeer", scope: !535, file: !121, line: 354, baseType: !423, size: 8, align: 8, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "verifyhost", scope: !535, file: !121, line: 355, baseType: !423, size: 8, align: 8, offset: 136)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "verifystatus", scope: !535, file: !121, line: 356, baseType: !423, size: 8, align: 8, offset: 144)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "CApath", scope: !535, file: !121, line: 357, baseType: !500, size: 64, align: 64, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "CAfile", scope: !535, file: !121, line: 358, baseType: !500, size: 64, align: 64, offset: 256)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "clientcert", scope: !535, file: !121, line: 359, baseType: !500, size: 64, align: 64, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "random_file", scope: !535, file: !121, line: 360, baseType: !500, size: 64, align: 64, offset: 384)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "egdsocket", scope: !535, file: !121, line: 361, baseType: !500, size: 64, align: 64, offset: 448)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list", scope: !535, file: !121, line: 362, baseType: !500, size: 64, align: 64, offset: 512)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !535, file: !121, line: 363, baseType: !423, size: 8, align: 8, offset: 576)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !453, file: !454, line: 53, baseType: !347, size: 64, align: 64, offset: 768)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !453, file: !454, line: 54, baseType: !379, size: 64, align: 64, offset: 832)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !257, file: !121, line: 1828, baseType: !552, size: 2496, align: 64, offset: 960)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "SingleRequest", file: !121, line: 658, size: 2496, align: 64, elements: !553)
!553 = !{!554, !555, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !590, !597, !598, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !615, !616, !617, !618, !619, !620}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !552, file: !121, line: 659, baseType: !507, size: 64, align: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "bytecountp", scope: !552, file: !121, line: 660, baseType: !556, size: 64, align: 64, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64, align: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "maxdownload", scope: !552, file: !121, line: 662, baseType: !507, size: 64, align: 64, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecountp", scope: !552, file: !121, line: 664, baseType: !556, size: 64, align: 64, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "bytecount", scope: !552, file: !121, line: 666, baseType: !507, size: 64, align: 64, offset: 256)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecount", scope: !552, file: !121, line: 667, baseType: !507, size: 64, align: 64, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "headerbytecount", scope: !552, file: !121, line: 669, baseType: !379, size: 64, align: 64, offset: 384)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "deductheadercount", scope: !552, file: !121, line: 670, baseType: !379, size: 64, align: 64, offset: 448)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !552, file: !121, line: 676, baseType: !411, size: 128, align: 64, offset: 512)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !552, file: !121, line: 677, baseType: !411, size: 128, align: 64, offset: 640)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !552, file: !121, line: 678, baseType: !423, size: 8, align: 8, offset: 768)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "badheader", scope: !552, file: !121, line: 684, baseType: !567, size: 32, align: 32, offset: 800)
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !552, file: !121, line: 679, size: 32, align: 32, elements: !568)
!568 = !{!569, !570, !571}
!569 = !DIEnumerator(name: "HEADER_NORMAL", value: 0)
!570 = !DIEnumerator(name: "HEADER_PARTHEADER", value: 1)
!571 = !DIEnumerator(name: "HEADER_ALLBAD", value: 2)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "headerline", scope: !552, file: !121, line: 686, baseType: !316, size: 32, align: 32, offset: 832)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "hbufp", scope: !552, file: !121, line: 688, baseType: !500, size: 64, align: 64, offset: 896)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "hbuflen", scope: !552, file: !121, line: 689, baseType: !347, size: 64, align: 64, offset: 960)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !552, file: !121, line: 690, baseType: !500, size: 64, align: 64, offset: 1024)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "str_start", scope: !552, file: !121, line: 691, baseType: !500, size: 64, align: 64, offset: 1088)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "end_ptr", scope: !552, file: !121, line: 692, baseType: !500, size: 64, align: 64, offset: 1152)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !552, file: !121, line: 693, baseType: !500, size: 64, align: 64, offset: 1216)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "content_range", scope: !552, file: !121, line: 694, baseType: !423, size: 8, align: 8, offset: 1280)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !552, file: !121, line: 695, baseType: !507, size: 64, align: 64, offset: 1344)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !552, file: !121, line: 697, baseType: !316, size: 32, align: 32, offset: 1408)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "start100", scope: !552, file: !121, line: 699, baseType: !411, size: 128, align: 64, offset: 1472)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "exp100", scope: !552, file: !121, line: 700, baseType: !584, size: 32, align: 32, offset: 1600)
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expect100", file: !121, line: 636, size: 32, align: 32, elements: !585)
!585 = !{!586, !587, !588, !589}
!586 = !DIEnumerator(name: "EXP100_SEND_DATA", value: 0)
!587 = !DIEnumerator(name: "EXP100_AWAITING_CONTINUE", value: 1)
!588 = !DIEnumerator(name: "EXP100_SENDING_REQUEST", value: 2)
!589 = !DIEnumerator(name: "EXP100_FAILED", value: 3)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "upgr101", scope: !552, file: !121, line: 701, baseType: !591, size: 32, align: 32, offset: 1632)
!591 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "upgrade101", file: !121, line: 644, size: 32, align: 32, elements: !592)
!592 = !{!593, !594, !595, !596}
!593 = !DIEnumerator(name: "UPGR101_INIT", value: 0)
!594 = !DIEnumerator(name: "UPGR101_REQUESTED", value: 1)
!595 = !DIEnumerator(name: "UPGR101_RECEIVED", value: 2)
!596 = !DIEnumerator(name: "UPGR101_WORKING", value: 3)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "auto_decoding", scope: !552, file: !121, line: 703, baseType: !316, size: 32, align: 32, offset: 1664)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "timeofdoc", scope: !552, file: !121, line: 715, baseType: !599, size: 64, align: 64, offset: 1728)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !600, line: 75, baseType: !415)
!600 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!601 = !DIDerivedType(tag: DW_TAG_member, name: "bodywrites", scope: !552, file: !121, line: 716, baseType: !379, size: 64, align: 64, offset: 1792)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !552, file: !121, line: 718, baseType: !500, size: 64, align: 64, offset: 1856)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuf", scope: !552, file: !121, line: 719, baseType: !500, size: 64, align: 64, offset: 1920)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !552, file: !121, line: 720, baseType: !315, size: 32, align: 32, offset: 1984)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "keepon", scope: !552, file: !121, line: 722, baseType: !316, size: 32, align: 32, offset: 2016)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "upload_done", scope: !552, file: !121, line: 724, baseType: !423, size: 8, align: 8, offset: 2048)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ignorebody", scope: !552, file: !121, line: 727, baseType: !423, size: 8, align: 8, offset: 2056)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !552, file: !121, line: 728, baseType: !423, size: 8, align: 8, offset: 2064)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !552, file: !121, line: 731, baseType: !500, size: 64, align: 64, offset: 2112)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "newurl", scope: !552, file: !121, line: 733, baseType: !500, size: 64, align: 64, offset: 2176)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "upload_present", scope: !552, file: !121, line: 738, baseType: !612, size: 64, align: 64, offset: 2240)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !613, line: 109, baseType: !614)
!613 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !416, line: 172, baseType: !379)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "upload_fromhere", scope: !552, file: !121, line: 744, baseType: !500, size: 64, align: 64, offset: 2304)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !552, file: !121, line: 746, baseType: !423, size: 8, align: 8, offset: 2368)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "upload_chunky", scope: !552, file: !121, line: 747, baseType: !423, size: 8, align: 8, offset: 2376)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "getheader", scope: !552, file: !121, line: 749, baseType: !423, size: 8, align: 8, offset: 2384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "forbidchunk", scope: !552, file: !121, line: 751, baseType: !423, size: 8, align: 8, offset: 2392)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "protop", scope: !552, file: !121, line: 755, baseType: !311, size: 64, align: 64, offset: 2432)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !257, file: !121, line: 1829, baseType: !622, size: 13760, align: 64, offset: 3456)
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "UserDefined", file: !121, line: 1558, size: 13760, align: 64, elements: !623)
!623 = !{!624, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !699, !700, !701, !702, !707, !708, !709, !711, !712, !713, !719, !724, !740, !752, !763, !764, !787, !788, !793, !794, !795, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !822, !823, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !862, !863, !875, !876, !898, !899, !903, !905, !906, !907, !908, !909, !910, !911, !918, !919, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !969, !970, !971, !972, !973, !974, !975, !976, !985, !993, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1017, !1018, !1019, !1020, !1021, !1022, !1039, !1040, !1041, !1048, !1053, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1080}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !622, file: !121, line: 1559, baseType: !625, size: 64, align: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64, align: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !627, line: 48, baseType: !628)
!627 = !DIFile(filename: "/usr/include/stdio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !629, line: 245, size: 1728, align: 64, elements: !630)
!629 = !DIFile(filename: "/usr/include/libio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !651, !652, !653, !654, !656, !658, !660, !664, !667, !669, !670, !671, !672, !673, !674, !675}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !628, file: !629, line: 246, baseType: !316, size: 32, align: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !628, file: !629, line: 251, baseType: !500, size: 64, align: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !628, file: !629, line: 252, baseType: !500, size: 64, align: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !628, file: !629, line: 253, baseType: !500, size: 64, align: 64, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !628, file: !629, line: 254, baseType: !500, size: 64, align: 64, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !628, file: !629, line: 255, baseType: !500, size: 64, align: 64, offset: 320)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !628, file: !629, line: 256, baseType: !500, size: 64, align: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !628, file: !629, line: 257, baseType: !500, size: 64, align: 64, offset: 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !628, file: !629, line: 258, baseType: !500, size: 64, align: 64, offset: 512)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !628, file: !629, line: 260, baseType: !500, size: 64, align: 64, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !628, file: !629, line: 261, baseType: !500, size: 64, align: 64, offset: 640)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !628, file: !629, line: 262, baseType: !500, size: 64, align: 64, offset: 704)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !628, file: !629, line: 264, baseType: !644, size: 64, align: 64, offset: 768)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64, align: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !629, line: 160, size: 192, align: 64, elements: !646)
!646 = !{!647, !648, !650}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !645, file: !629, line: 161, baseType: !644, size: 64, align: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !645, file: !629, line: 162, baseType: !649, size: 64, align: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !645, file: !629, line: 166, baseType: !316, size: 32, align: 32, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !628, file: !629, line: 266, baseType: !649, size: 64, align: 64, offset: 832)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !628, file: !629, line: 268, baseType: !316, size: 32, align: 32, offset: 896)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !628, file: !629, line: 272, baseType: !316, size: 32, align: 32, offset: 928)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !628, file: !629, line: 274, baseType: !655, size: 64, align: 64, offset: 960)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !416, line: 131, baseType: !379)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !628, file: !629, line: 278, baseType: !657, size: 16, align: 16, offset: 1024)
!657 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !628, file: !629, line: 279, baseType: !659, size: 8, align: 8, offset: 1040)
!659 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !628, file: !629, line: 280, baseType: !661, size: 8, align: 8, offset: 1048)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 8, align: 8, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !628, file: !629, line: 284, baseType: !665, size: 64, align: 64, offset: 1088)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64, align: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !629, line: 154, baseType: null)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !628, file: !629, line: 293, baseType: !668, size: 64, align: 64, offset: 1152)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !416, line: 132, baseType: !379)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !628, file: !629, line: 302, baseType: !311, size: 64, align: 64, offset: 1216)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !628, file: !629, line: 303, baseType: !311, size: 64, align: 64, offset: 1280)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !628, file: !629, line: 304, baseType: !311, size: 64, align: 64, offset: 1344)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !628, file: !629, line: 305, baseType: !311, size: 64, align: 64, offset: 1408)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !628, file: !629, line: 306, baseType: !347, size: 64, align: 64, offset: 1472)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !628, file: !629, line: 308, baseType: !316, size: 32, align: 32, offset: 1536)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !628, file: !629, line: 310, baseType: !676, size: 160, align: 8, offset: 1568)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, align: 8, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 20)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "debugdata", scope: !622, file: !121, line: 1560, baseType: !311, size: 64, align: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuffer", scope: !622, file: !121, line: 1561, baseType: !500, size: 64, align: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "proxyport", scope: !622, file: !121, line: 1562, baseType: !379, size: 64, align: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !622, file: !121, line: 1565, baseType: !311, size: 64, align: 64, offset: 256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "in_set", scope: !622, file: !121, line: 1566, baseType: !311, size: 64, align: 64, offset: 320)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "writeheader", scope: !622, file: !121, line: 1567, baseType: !311, size: 64, align: 64, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_out", scope: !622, file: !121, line: 1568, baseType: !311, size: 64, align: 64, offset: 448)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "use_port", scope: !622, file: !121, line: 1569, baseType: !379, size: 64, align: 64, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "httpauth", scope: !622, file: !121, line: 1570, baseType: !349, size: 64, align: 64, offset: 576)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauth", scope: !622, file: !121, line: 1571, baseType: !349, size: 64, align: 64, offset: 640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "followlocation", scope: !622, file: !121, line: 1572, baseType: !379, size: 64, align: 64, offset: 704)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "maxredirs", scope: !622, file: !121, line: 1573, baseType: !379, size: 64, align: 64, offset: 768)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "keep_post", scope: !622, file: !121, line: 1576, baseType: !316, size: 32, align: 32, offset: 832)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "free_referer", scope: !622, file: !121, line: 1578, baseType: !423, size: 8, align: 8, offset: 864)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "postfields", scope: !622, file: !121, line: 1580, baseType: !311, size: 64, align: 64, offset: 896)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !622, file: !121, line: 1581, baseType: !695, size: 64, align: 64, offset: 960)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_seek_callback", file: !15, line: 324, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64, align: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!316, !311, !507, !316}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "postfieldsize", scope: !622, file: !121, line: 1582, baseType: !507, size: 64, align: 64, offset: 1024)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !622, file: !121, line: 1585, baseType: !657, size: 16, align: 16, offset: 1088)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !622, file: !121, line: 1586, baseType: !316, size: 32, align: 32, offset: 1120)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_func", scope: !622, file: !121, line: 1588, baseType: !703, size: 64, align: 64, offset: 1152)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_write_callback", file: !15, line: 223, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64, align: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!347, !500, !347, !347, !311}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_header", scope: !622, file: !121, line: 1589, baseType: !703, size: 64, align: 64, offset: 1216)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_rtp", scope: !622, file: !121, line: 1590, baseType: !703, size: 64, align: 64, offset: 1280)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func_set", scope: !622, file: !121, line: 1591, baseType: !710, size: 64, align: 64, offset: 1344)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_read_callback", file: !15, line: 335, baseType: !704)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "is_fread_set", scope: !622, file: !121, line: 1592, baseType: !316, size: 32, align: 32, offset: 1408)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "is_fwrite_set", scope: !622, file: !121, line: 1593, baseType: !316, size: 32, align: 32, offset: 1440)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "fprogress", scope: !622, file: !121, line: 1594, baseType: !714, size: 64, align: 64, offset: 1472)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_progress_callback", file: !15, line: 183, baseType: !715)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64, align: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!316, !311, !718, !718, !718, !718}
!718 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "fxferinfo", scope: !622, file: !121, line: 1595, baseType: !720, size: 64, align: 64, offset: 1536)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_xferinfo_callback", file: !15, line: 191, baseType: !721)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64, align: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!316, !311, !507, !507, !507, !507}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fdebug", scope: !622, file: !121, line: 1596, baseType: !725, size: 64, align: 64, offset: 1600)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_debug_callback", file: !15, line: 420, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64, align: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!316, !305, !729, !500, !347, !311}
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_infotype", file: !15, line: 418, baseType: !730)
!730 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 409, size: 32, align: 32, elements: !731)
!731 = !{!732, !733, !734, !735, !736, !737, !738, !739}
!732 = !DIEnumerator(name: "CURLINFO_TEXT", value: 0)
!733 = !DIEnumerator(name: "CURLINFO_HEADER_IN", value: 1)
!734 = !DIEnumerator(name: "CURLINFO_HEADER_OUT", value: 2)
!735 = !DIEnumerator(name: "CURLINFO_DATA_IN", value: 3)
!736 = !DIEnumerator(name: "CURLINFO_DATA_OUT", value: 4)
!737 = !DIEnumerator(name: "CURLINFO_SSL_DATA_IN", value: 5)
!738 = !DIEnumerator(name: "CURLINFO_SSL_DATA_OUT", value: 6)
!739 = !DIEnumerator(name: "CURLINFO_END", value: 7)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_func", scope: !622, file: !121, line: 1597, baseType: !741, size: 64, align: 64, offset: 1664)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ioctl_callback", file: !15, line: 388, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64, align: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!745, !305, !316, !311}
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlioerr", file: !15, line: 380, baseType: !746)
!746 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 375, size: 32, align: 32, elements: !747)
!747 = !{!748, !749, !750, !751}
!748 = !DIEnumerator(name: "CURLIOE_OK", value: 0)
!749 = !DIEnumerator(name: "CURLIOE_UNKNOWNCMD", value: 1)
!750 = !DIEnumerator(name: "CURLIOE_FAILRESTART", value: 2)
!751 = !DIEnumerator(name: "CURLIOE_LAST", value: 3)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "fsockopt", scope: !622, file: !121, line: 1598, baseType: !753, size: 64, align: 64, offset: 1728)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sockopt_callback", file: !15, line: 353, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64, align: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!316, !311, !315, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlsocktype", file: !15, line: 344, baseType: !758)
!758 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 340, size: 32, align: 32, elements: !759)
!759 = !{!760, !761, !762}
!760 = !DIEnumerator(name: "CURLSOCKTYPE_IPCXN", value: 0)
!761 = !DIEnumerator(name: "CURLSOCKTYPE_ACCEPT", value: 1)
!762 = !DIEnumerator(name: "CURLSOCKTYPE_LAST", value: 2)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "sockopt_client", scope: !622, file: !121, line: 1599, baseType: !311, size: 64, align: 64, offset: 1792)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "fopensocket", scope: !622, file: !121, line: 1600, baseType: !765, size: 64, align: 64, offset: 1856)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_opensocket_callback", file: !15, line: 368, baseType: !766)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64, align: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{!315, !311, !757, !769}
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64, align: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_sockaddr", file: !15, line: 357, size: 256, align: 32, elements: !771)
!771 = !{!772, !773, !774, !775, !776}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !770, file: !15, line: 358, baseType: !316, size: 32, align: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !770, file: !15, line: 359, baseType: !316, size: 32, align: 32, offset: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !770, file: !15, line: 360, baseType: !316, size: 32, align: 32, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "addrlen", scope: !770, file: !15, line: 361, baseType: !457, size: 32, align: 32, offset: 96)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !770, file: !15, line: 364, baseType: !777, size: 128, align: 16, offset: 128)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !778, line: 149, size: 128, align: 16, elements: !779)
!778 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!779 = !{!780, !783}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !777, file: !778, line: 151, baseType: !781, size: 16, align: 16)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !782, line: 28, baseType: !657)
!782 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!783 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !777, file: !778, line: 152, baseType: !784, size: 112, align: 8, offset: 16)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 112, align: 8, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 14)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "opensocket_client", scope: !622, file: !121, line: 1603, baseType: !311, size: 64, align: 64, offset: 1920)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !622, file: !121, line: 1604, baseType: !789, size: 64, align: 64, offset: 1984)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_closesocket_callback", file: !15, line: 373, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64, align: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!316, !311, !315}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !622, file: !121, line: 1606, baseType: !311, size: 64, align: 64, offset: 2048)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !622, file: !121, line: 1608, baseType: !311, size: 64, align: 64, offset: 2112)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "convfromnetwork", scope: !622, file: !121, line: 1611, baseType: !796, size: 64, align: 64, offset: 2176)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_conv_callback", file: !15, line: 637, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64, align: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!289, !500, !347}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "convtonetwork", scope: !622, file: !121, line: 1613, baseType: !796, size: 64, align: 64, offset: 2240)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "convfromutf8", scope: !622, file: !121, line: 1615, baseType: !796, size: 64, align: 64, offset: 2304)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "progress_client", scope: !622, file: !121, line: 1617, baseType: !311, size: 64, align: 64, offset: 2368)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_client", scope: !622, file: !121, line: 1618, baseType: !311, size: 64, align: 64, offset: 2432)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !622, file: !121, line: 1619, baseType: !379, size: 64, align: 64, offset: 2496)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "connecttimeout", scope: !622, file: !121, line: 1620, baseType: !379, size: 64, align: 64, offset: 2560)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "accepttimeout", scope: !622, file: !121, line: 1621, baseType: !379, size: 64, align: 64, offset: 2624)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "server_response_timeout", scope: !622, file: !121, line: 1622, baseType: !379, size: 64, align: 64, offset: 2688)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_blksize", scope: !622, file: !121, line: 1623, baseType: !379, size: 64, align: 64, offset: 2752)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_no_options", scope: !622, file: !121, line: 1624, baseType: !423, size: 8, align: 8, offset: 2816)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "filesize", scope: !622, file: !121, line: 1625, baseType: !507, size: 64, align: 64, offset: 2880)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_limit", scope: !622, file: !121, line: 1626, baseType: !379, size: 64, align: 64, offset: 2944)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_time", scope: !622, file: !121, line: 1627, baseType: !379, size: 64, align: 64, offset: 3008)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_speed", scope: !622, file: !121, line: 1628, baseType: !507, size: 64, align: 64, offset: 3072)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_speed", scope: !622, file: !121, line: 1629, baseType: !507, size: 64, align: 64, offset: 3136)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "set_resume_from", scope: !622, file: !121, line: 1631, baseType: !507, size: 64, align: 64, offset: 3200)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !622, file: !121, line: 1632, baseType: !817, size: 64, align: 64, offset: 3264)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64, align: 64)
!818 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_slist", file: !15, line: 2176, size: 128, align: 64, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !818, file: !15, line: 2177, baseType: !500, size: 64, align: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !818, file: !15, line: 2178, baseType: !817, size: 64, align: 64, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "proxyheaders", scope: !622, file: !121, line: 1633, baseType: !817, size: 64, align: 64, offset: 3328)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "httppost", scope: !622, file: !121, line: 1634, baseType: !824, size: 64, align: 64, offset: 3392)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64, align: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_httppost", file: !15, line: 137, size: 896, align: 64, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !825, file: !15, line: 138, baseType: !824, size: 64, align: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !825, file: !15, line: 139, baseType: !500, size: 64, align: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "namelength", scope: !825, file: !15, line: 140, baseType: !379, size: 64, align: 64, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !825, file: !15, line: 141, baseType: !500, size: 64, align: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "contentslength", scope: !825, file: !15, line: 142, baseType: !379, size: 64, align: 64, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !825, file: !15, line: 144, baseType: !500, size: 64, align: 64, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "bufferlength", scope: !825, file: !15, line: 145, baseType: !379, size: 64, align: 64, offset: 384)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !825, file: !15, line: 146, baseType: !500, size: 64, align: 64, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "contentheader", scope: !825, file: !15, line: 147, baseType: !817, size: 64, align: 64, offset: 512)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "more", scope: !825, file: !15, line: 148, baseType: !824, size: 64, align: 64, offset: 576)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !825, file: !15, line: 151, baseType: !379, size: 64, align: 64, offset: 640)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "showfilename", scope: !825, file: !15, line: 171, baseType: !500, size: 64, align: 64, offset: 704)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "userp", scope: !825, file: !15, line: 174, baseType: !311, size: 64, align: 64, offset: 768)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "contentlen", scope: !825, file: !15, line: 176, baseType: !507, size: 64, align: 64, offset: 832)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "sep_headers", scope: !622, file: !121, line: 1635, baseType: !423, size: 8, align: 8, offset: 3456)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "cookiesession", scope: !622, file: !121, line: 1636, baseType: !423, size: 8, align: 8, offset: 3464)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "crlf", scope: !622, file: !121, line: 1637, baseType: !423, size: 8, align: 8, offset: 3472)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !622, file: !121, line: 1638, baseType: !817, size: 64, align: 64, offset: 3520)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "postquote", scope: !622, file: !121, line: 1639, baseType: !817, size: 64, align: 64, offset: 3584)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "prequote", scope: !622, file: !121, line: 1640, baseType: !817, size: 64, align: 64, offset: 3648)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "source_quote", scope: !622, file: !121, line: 1641, baseType: !817, size: 64, align: 64, offset: 3712)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "source_prequote", scope: !622, file: !121, line: 1642, baseType: !817, size: 64, align: 64, offset: 3776)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "source_postquote", scope: !622, file: !121, line: 1644, baseType: !817, size: 64, align: 64, offset: 3840)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "telnet_options", scope: !622, file: !121, line: 1646, baseType: !817, size: 64, align: 64, offset: 3904)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !622, file: !121, line: 1647, baseType: !817, size: 64, align: 64, offset: 3968)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "connect_to", scope: !622, file: !121, line: 1649, baseType: !817, size: 64, align: 64, offset: 4032)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "timecondition", scope: !622, file: !121, line: 1651, baseType: !854, size: 32, align: 32, offset: 4096)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_TimeCond", file: !15, line: 1929, baseType: !855)
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 1921, size: 32, align: 32, elements: !856)
!856 = !{!857, !858, !859, !860, !861}
!857 = !DIEnumerator(name: "CURL_TIMECOND_NONE", value: 0)
!858 = !DIEnumerator(name: "CURL_TIMECOND_IFMODSINCE", value: 1)
!859 = !DIEnumerator(name: "CURL_TIMECOND_IFUNMODSINCE", value: 2)
!860 = !DIEnumerator(name: "CURL_TIMECOND_LASTMOD", value: 3)
!861 = !DIEnumerator(name: "CURL_TIMECOND_LAST", value: 4)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "timevalue", scope: !622, file: !121, line: 1652, baseType: !599, size: 64, align: 64, offset: 4160)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "httpreq", scope: !622, file: !121, line: 1653, baseType: !864, size: 32, align: 32, offset: 4224)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_HttpReq", file: !121, line: 1249, baseType: !865)
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 1240, size: 32, align: 32, elements: !866)
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874}
!867 = !DIEnumerator(name: "HTTPREQ_NONE", value: 0)
!868 = !DIEnumerator(name: "HTTPREQ_GET", value: 1)
!869 = !DIEnumerator(name: "HTTPREQ_POST", value: 2)
!870 = !DIEnumerator(name: "HTTPREQ_POST_FORM", value: 3)
!871 = !DIEnumerator(name: "HTTPREQ_PUT", value: 4)
!872 = !DIEnumerator(name: "HTTPREQ_HEAD", value: 5)
!873 = !DIEnumerator(name: "HTTPREQ_CUSTOM", value: 6)
!874 = !DIEnumerator(name: "HTTPREQ_LAST", value: 7)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !622, file: !121, line: 1654, baseType: !379, size: 64, align: 64, offset: 4288)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !622, file: !121, line: 1656, baseType: !877, size: 1408, align: 64, offset: 4352)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_config_data", file: !121, line: 366, size: 1408, align: 64, elements: !878)
!878 = !{!879, !880, !881, !882, !883, !884, !885, !890, !891, !892, !893, !894, !895, !896, !897}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !877, file: !121, line: 367, baseType: !535, size: 640, align: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "enable_beast", scope: !877, file: !121, line: 368, baseType: !423, size: 8, align: 8, offset: 640)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "no_revoke", scope: !877, file: !121, line: 370, baseType: !423, size: 8, align: 8, offset: 648)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "certverifyresult", scope: !877, file: !121, line: 371, baseType: !379, size: 64, align: 64, offset: 704)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "CRLfile", scope: !877, file: !121, line: 372, baseType: !500, size: 64, align: 64, offset: 768)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "issuercert", scope: !877, file: !121, line: 373, baseType: !500, size: 64, align: 64, offset: 832)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctx", scope: !877, file: !121, line: 374, baseType: !886, size: 64, align: 64, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ssl_ctx_callback", file: !15, line: 639, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64, align: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!289, !305, !311, !311}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctxp", scope: !877, file: !121, line: 375, baseType: !311, size: 64, align: 64, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !877, file: !121, line: 376, baseType: !423, size: 8, align: 8, offset: 1024)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "falsestart", scope: !877, file: !121, line: 377, baseType: !423, size: 8, align: 8, offset: 1032)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !877, file: !121, line: 379, baseType: !500, size: 64, align: 64, offset: 1088)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "cert_type", scope: !877, file: !121, line: 380, baseType: !500, size: 64, align: 64, offset: 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !877, file: !121, line: 381, baseType: !500, size: 64, align: 64, offset: 1216)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !877, file: !121, line: 382, baseType: !500, size: 64, align: 64, offset: 1280)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "key_passwd", scope: !877, file: !121, line: 383, baseType: !500, size: 64, align: 64, offset: 1344)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !622, file: !121, line: 1657, baseType: !877, size: 1408, align: 64, offset: 5760)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "general_ssl", scope: !622, file: !121, line: 1658, baseType: !900, size: 64, align: 64, offset: 7168)
!900 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_general_config", file: !121, line: 392, size: 64, align: 64, elements: !901)
!901 = !{!902}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !900, file: !121, line: 393, baseType: !347, size: 64, align: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !622, file: !121, line: 1659, baseType: !904, size: 32, align: 32, offset: 7232)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_proxytype", file: !15, line: 657, baseType: !14)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "dns_cache_timeout", scope: !622, file: !121, line: 1660, baseType: !379, size: 64, align: 64, offset: 7296)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !622, file: !121, line: 1661, baseType: !379, size: 64, align: 64, offset: 7360)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !622, file: !121, line: 1662, baseType: !311, size: 64, align: 64, offset: 7424)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "http200aliases", scope: !622, file: !121, line: 1664, baseType: !817, size: 64, align: 64, offset: 7488)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "ipver", scope: !622, file: !121, line: 1666, baseType: !379, size: 64, align: 64, offset: 7552)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "max_filesize", scope: !622, file: !121, line: 1669, baseType: !507, size: 64, align: 64, offset: 7616)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_filemethod", scope: !622, file: !121, line: 1671, baseType: !912, size: 32, align: 32, offset: 7680)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpfile", file: !135, line: 98, baseType: !913)
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !135, line: 93, size: 32, align: 32, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIEnumerator(name: "FTPFILE_MULTICWD", value: 1)
!916 = !DIEnumerator(name: "FTPFILE_NOCWD", value: 2)
!917 = !DIEnumerator(name: "FTPFILE_SINGLECWD", value: 3)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_create_missing_dirs", scope: !622, file: !121, line: 1673, baseType: !316, size: 32, align: 32, offset: 7712)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc", scope: !622, file: !121, line: 1677, baseType: !920, size: 64, align: 64, offset: 7744)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sshkeycallback", file: !15, line: 739, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!316, !305, !924, !924, !937, !311}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_khkey", file: !15, line: 711, size: 192, align: 64, elements: !927)
!927 = !{!928, !929, !930}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !926, file: !15, line: 712, baseType: !527, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !926, file: !15, line: 714, baseType: !347, size: 64, align: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !926, file: !15, line: 715, baseType: !931, size: 32, align: 32, offset: 128)
!931 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khtype", file: !15, line: 704, size: 32, align: 32, elements: !932)
!932 = !{!933, !934, !935, !936}
!933 = !DIEnumerator(name: "CURLKHTYPE_UNKNOWN", value: 0)
!934 = !DIEnumerator(name: "CURLKHTYPE_RSA1", value: 1)
!935 = !DIEnumerator(name: "CURLKHTYPE_RSA", value: 2)
!936 = !DIEnumerator(name: "CURLKHTYPE_DSS", value: 3)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khmatch", file: !15, line: 731, size: 32, align: 32, elements: !938)
!938 = !{!939, !940, !941, !942}
!939 = !DIEnumerator(name: "CURLKHMATCH_OK", value: 0)
!940 = !DIEnumerator(name: "CURLKHMATCH_MISMATCH", value: 1)
!941 = !DIEnumerator(name: "CURLKHMATCH_MISSING", value: 2)
!942 = !DIEnumerator(name: "CURLKHMATCH_LAST", value: 3)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc_userp", scope: !622, file: !121, line: 1678, baseType: !311, size: 64, align: 64, offset: 7808)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "printhost", scope: !622, file: !121, line: 1684, baseType: !423, size: 8, align: 8, offset: 7872)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "get_filetime", scope: !622, file: !121, line: 1685, baseType: !423, size: 8, align: 8, offset: 7880)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_thru_httpproxy", scope: !622, file: !121, line: 1686, baseType: !423, size: 8, align: 8, offset: 7888)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_ascii", scope: !622, file: !121, line: 1687, baseType: !423, size: 8, align: 8, offset: 7896)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_append", scope: !622, file: !121, line: 1688, baseType: !423, size: 8, align: 8, offset: 7904)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_list_only", scope: !622, file: !121, line: 1689, baseType: !423, size: 8, align: 8, offset: 7912)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_port", scope: !622, file: !121, line: 1690, baseType: !423, size: 8, align: 8, offset: 7920)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "hide_progress", scope: !622, file: !121, line: 1691, baseType: !423, size: 8, align: 8, offset: 7928)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "http_fail_on_error", scope: !622, file: !121, line: 1692, baseType: !423, size: 8, align: 8, offset: 7936)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "http_keep_sending_on_error", scope: !622, file: !121, line: 1693, baseType: !423, size: 8, align: 8, offset: 7944)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "http_follow_location", scope: !622, file: !121, line: 1694, baseType: !423, size: 8, align: 8, offset: 7952)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "http_transfer_encoding", scope: !622, file: !121, line: 1695, baseType: !423, size: 8, align: 8, offset: 7960)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "http_disable_hostname_check_before_authentication", scope: !622, file: !121, line: 1696, baseType: !423, size: 8, align: 8, offset: 7968)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "include_header", scope: !622, file: !121, line: 1697, baseType: !423, size: 8, align: 8, offset: 7976)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "http_set_referer", scope: !622, file: !121, line: 1698, baseType: !423, size: 8, align: 8, offset: 7984)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "http_auto_referer", scope: !622, file: !121, line: 1699, baseType: !423, size: 8, align: 8, offset: 7992)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "opt_no_body", scope: !622, file: !121, line: 1700, baseType: !423, size: 8, align: 8, offset: 8000)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !622, file: !121, line: 1701, baseType: !423, size: 8, align: 8, offset: 8008)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "use_netrc", scope: !622, file: !121, line: 1703, baseType: !963, size: 32, align: 32, offset: 8032)
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CURL_NETRC_OPTION", file: !15, line: 1867, size: 32, align: 32, elements: !964)
!964 = !{!965, !966, !967, !968}
!965 = !DIEnumerator(name: "CURL_NETRC_IGNORED", value: 0)
!966 = !DIEnumerator(name: "CURL_NETRC_OPTIONAL", value: 1)
!967 = !DIEnumerator(name: "CURL_NETRC_REQUIRED", value: 2)
!968 = !DIEnumerator(name: "CURL_NETRC_LAST", value: 3)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !622, file: !121, line: 1704, baseType: !423, size: 8, align: 8, offset: 8064)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "krb", scope: !622, file: !121, line: 1705, baseType: !423, size: 8, align: 8, offset: 8072)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_forbid", scope: !622, file: !121, line: 1706, baseType: !423, size: 8, align: 8, offset: 8080)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_fresh", scope: !622, file: !121, line: 1707, baseType: !423, size: 8, align: 8, offset: 8088)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !622, file: !121, line: 1708, baseType: !423, size: 8, align: 8, offset: 8096)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !622, file: !121, line: 1709, baseType: !423, size: 8, align: 8, offset: 8104)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_pret", scope: !622, file: !121, line: 1710, baseType: !423, size: 8, align: 8, offset: 8112)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "use_ssl", scope: !622, file: !121, line: 1712, baseType: !977, size: 32, align: 32, offset: 8128)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_usessl", file: !15, line: 752, baseType: !978)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 746, size: 32, align: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984}
!980 = !DIEnumerator(name: "CURLUSESSL_NONE", value: 0)
!981 = !DIEnumerator(name: "CURLUSESSL_TRY", value: 1)
!982 = !DIEnumerator(name: "CURLUSESSL_CONTROL", value: 2)
!983 = !DIEnumerator(name: "CURLUSESSL_ALL", value: 3)
!984 = !DIEnumerator(name: "CURLUSESSL_LAST", value: 4)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ftpsslauth", scope: !622, file: !121, line: 1714, baseType: !986, size: 32, align: 32, offset: 8160)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpauth", file: !15, line: 795, baseType: !987)
!987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 790, size: 32, align: 32, elements: !988)
!988 = !{!989, !990, !991, !992}
!989 = !DIEnumerator(name: "CURLFTPAUTH_DEFAULT", value: 0)
!990 = !DIEnumerator(name: "CURLFTPAUTH_SSL", value: 1)
!991 = !DIEnumerator(name: "CURLFTPAUTH_TLS", value: 2)
!992 = !DIEnumerator(name: "CURLFTPAUTH_LAST", value: 3)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_ccc", scope: !622, file: !121, line: 1715, baseType: !994, size: 32, align: 32, offset: 8192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpccc", file: !15, line: 787, baseType: !995)
!995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 782, size: 32, align: 32, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "CURLFTPSSL_CCC_NONE", value: 0)
!998 = !DIEnumerator(name: "CURLFTPSSL_CCC_PASSIVE", value: 1)
!999 = !DIEnumerator(name: "CURLFTPSSL_CCC_ACTIVE", value: 2)
!1000 = !DIEnumerator(name: "CURLFTPSSL_CCC_LAST", value: 3)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "no_signal", scope: !622, file: !121, line: 1716, baseType: !423, size: 8, align: 8, offset: 8224)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "global_dns_cache", scope: !622, file: !121, line: 1717, baseType: !423, size: 8, align: 8, offset: 8232)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_nodelay", scope: !622, file: !121, line: 1718, baseType: !423, size: 8, align: 8, offset: 8240)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !622, file: !121, line: 1719, baseType: !423, size: 8, align: 8, offset: 8248)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_skip_ip", scope: !622, file: !121, line: 1720, baseType: !423, size: 8, align: 8, offset: 8256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "connect_only", scope: !622, file: !121, line: 1722, baseType: !423, size: 8, align: 8, offset: 8264)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_auth_types", scope: !622, file: !121, line: 1723, baseType: !379, size: 64, align: 64, offset: 8320)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "http_te_skip", scope: !622, file: !121, line: 1724, baseType: !423, size: 8, align: 8, offset: 8384)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "http_ce_skip", scope: !622, file: !121, line: 1726, baseType: !423, size: 8, align: 8, offset: 8392)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "new_file_perms", scope: !622, file: !121, line: 1728, baseType: !379, size: 64, align: 64, offset: 8448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "new_directory_perms", scope: !622, file: !121, line: 1729, baseType: !379, size: 64, align: 64, offset: 8512)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_transfer_mode", scope: !622, file: !121, line: 1730, baseType: !423, size: 8, align: 8, offset: 8576)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !622, file: !121, line: 1732, baseType: !1014, size: 3584, align: 64, offset: 8640)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 3584, align: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DISubrange(count: 56)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !622, file: !121, line: 1733, baseType: !457, size: 32, align: 32, offset: 12224)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_protocols", scope: !622, file: !121, line: 1734, baseType: !379, size: 64, align: 64, offset: 12288)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "redir_protocols", scope: !622, file: !121, line: 1735, baseType: !379, size: 64, align: 64, offset: 12352)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mail_rcpt", scope: !622, file: !121, line: 1739, baseType: !817, size: 64, align: 64, offset: 12416)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sasl_ir", scope: !622, file: !121, line: 1740, baseType: !423, size: 8, align: 8, offset: 12480)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "rtspreq", scope: !622, file: !121, line: 1742, baseType: !1023, size: 32, align: 32, offset: 12512)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_RtspReq", file: !121, line: 1265, baseType: !1024)
!1024 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 1251, size: 32, align: 32, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038}
!1026 = !DIEnumerator(name: "RTSPREQ_NONE", value: 0)
!1027 = !DIEnumerator(name: "RTSPREQ_OPTIONS", value: 1)
!1028 = !DIEnumerator(name: "RTSPREQ_DESCRIBE", value: 2)
!1029 = !DIEnumerator(name: "RTSPREQ_ANNOUNCE", value: 3)
!1030 = !DIEnumerator(name: "RTSPREQ_SETUP", value: 4)
!1031 = !DIEnumerator(name: "RTSPREQ_PLAY", value: 5)
!1032 = !DIEnumerator(name: "RTSPREQ_PAUSE", value: 6)
!1033 = !DIEnumerator(name: "RTSPREQ_TEARDOWN", value: 7)
!1034 = !DIEnumerator(name: "RTSPREQ_GET_PARAMETER", value: 8)
!1035 = !DIEnumerator(name: "RTSPREQ_SET_PARAMETER", value: 9)
!1036 = !DIEnumerator(name: "RTSPREQ_RECORD", value: 10)
!1037 = !DIEnumerator(name: "RTSPREQ_RECEIVE", value: 11)
!1038 = !DIEnumerator(name: "RTSPREQ_LAST", value: 12)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !622, file: !121, line: 1743, baseType: !379, size: 64, align: 64, offset: 12544)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "wildcardmatch", scope: !622, file: !121, line: 1744, baseType: !423, size: 8, align: 8, offset: 12608)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_bgn", scope: !622, file: !121, line: 1745, baseType: !1042, size: 64, align: 64, offset: 12672)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_bgn_callback", file: !15, line: 292, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!379, !1046, !311, !316}
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_end", scope: !622, file: !121, line: 1747, baseType: !1049, size: 64, align: 64, offset: 12736)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_end_callback", file: !15, line: 306, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!379, !311}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch", scope: !622, file: !121, line: 1749, baseType: !1054, size: 64, align: 64, offset: 12800)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_fnmatch_callback", file: !15, line: 315, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!316, !311, !527, !527}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch_data", scope: !622, file: !121, line: 1751, baseType: !311, size: 64, align: 64, offset: 12864)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gssapi_delegation", scope: !622, file: !121, line: 1753, baseType: !379, size: 64, align: 64, offset: 12928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepalive", scope: !622, file: !121, line: 1756, baseType: !423, size: 8, align: 8, offset: 12992)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepidle", scope: !622, file: !121, line: 1757, baseType: !379, size: 64, align: 64, offset: 13056)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepintvl", scope: !622, file: !121, line: 1758, baseType: !379, size: 64, align: 64, offset: 13120)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !622, file: !121, line: 1759, baseType: !423, size: 8, align: 8, offset: 13184)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !622, file: !121, line: 1761, baseType: !347, size: 64, align: 64, offset: 13248)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_npn", scope: !622, file: !121, line: 1763, baseType: !423, size: 8, align: 8, offset: 13312)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_alpn", scope: !622, file: !121, line: 1764, baseType: !423, size: 8, align: 8, offset: 13320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "path_as_is", scope: !622, file: !121, line: 1765, baseType: !423, size: 8, align: 8, offset: 13328)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pipewait", scope: !622, file: !121, line: 1766, baseType: !423, size: 8, align: 8, offset: 13336)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "expect_100_timeout", scope: !622, file: !121, line: 1768, baseType: !379, size: 64, align: 64, offset: 13376)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_connect_headers", scope: !622, file: !121, line: 1769, baseType: !423, size: 8, align: 8, offset: 13440)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !622, file: !121, line: 1772, baseType: !256, size: 64, align: 64, offset: 13504)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !622, file: !121, line: 1773, baseType: !423, size: 8, align: 8, offset: 13568)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !622, file: !121, line: 1774, baseType: !316, size: 32, align: 32, offset: 13600)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "stream_dependents", scope: !622, file: !121, line: 1776, baseType: !1075, size: 64, align: 64, offset: 13632)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_http2_dep", file: !121, line: 1292, size: 128, align: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1076, file: !121, line: 1293, baseType: !1075, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1076, file: !121, line: 1294, baseType: !256, size: 64, align: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_unix_socket", scope: !622, file: !121, line: 1778, baseType: !423, size: 8, align: 8, offset: 13696)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !257, file: !121, line: 1830, baseType: !1082, size: 384, align: 64, offset: 17216)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicStatic", file: !121, line: 1444, size: 384, align: 64, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087, !1088, !1089}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1082, file: !121, line: 1445, baseType: !500, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "url_alloc", scope: !1082, file: !121, line: 1446, baseType: !423, size: 8, align: 8, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "referer", scope: !1082, file: !121, line: 1447, baseType: !500, size: 64, align: 64, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "referer_alloc", scope: !1082, file: !121, line: 1448, baseType: !423, size: 8, align: 8, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "cookielist", scope: !1082, file: !121, line: 1449, baseType: !817, size: 64, align: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !1082, file: !121, line: 1451, baseType: !817, size: 64, align: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !257, file: !121, line: 1831, baseType: !490, size: 64, align: 64, offset: 17600)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !257, file: !121, line: 1835, baseType: !1092, size: 3200, align: 64, offset: 17664)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "Progress", file: !121, line: 1195, size: 3200, align: 64, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1124, !1126}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "lastshow", scope: !1092, file: !121, line: 1196, baseType: !599, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "size_dl", scope: !1092, file: !121, line: 1198, baseType: !507, size: 64, align: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "size_ul", scope: !1092, file: !121, line: 1199, baseType: !507, size: 64, align: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "downloaded", scope: !1092, file: !121, line: 1200, baseType: !507, size: 64, align: 64, offset: 192)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "uploaded", scope: !1092, file: !121, line: 1201, baseType: !507, size: 64, align: 64, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1092, file: !121, line: 1203, baseType: !507, size: 64, align: 64, offset: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1092, file: !121, line: 1205, baseType: !423, size: 8, align: 8, offset: 384)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1092, file: !121, line: 1206, baseType: !316, size: 32, align: 32, offset: 416)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !121, line: 1207, baseType: !316, size: 32, align: 32, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "timespent", scope: !1092, file: !121, line: 1209, baseType: !718, size: 64, align: 64, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "dlspeed", scope: !1092, file: !121, line: 1211, baseType: !507, size: 64, align: 64, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ulspeed", scope: !1092, file: !121, line: 1212, baseType: !507, size: 64, align: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "t_nslookup", scope: !1092, file: !121, line: 1214, baseType: !718, size: 64, align: 64, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "t_connect", scope: !1092, file: !121, line: 1215, baseType: !718, size: 64, align: 64, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "t_appconnect", scope: !1092, file: !121, line: 1216, baseType: !718, size: 64, align: 64, offset: 832)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "t_pretransfer", scope: !1092, file: !121, line: 1217, baseType: !718, size: 64, align: 64, offset: 896)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "t_starttransfer", scope: !1092, file: !121, line: 1218, baseType: !718, size: 64, align: 64, offset: 960)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "t_redirect", scope: !1092, file: !121, line: 1219, baseType: !718, size: 64, align: 64, offset: 1024)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1092, file: !121, line: 1221, baseType: !411, size: 128, align: 64, offset: 1088)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "t_startsingle", scope: !1092, file: !121, line: 1222, baseType: !411, size: 128, align: 64, offset: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "t_startop", scope: !1092, file: !121, line: 1223, baseType: !411, size: 128, align: 64, offset: 1344)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "t_acceptdata", scope: !1092, file: !121, line: 1224, baseType: !411, size: 128, align: 64, offset: 1472)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_start", scope: !1092, file: !121, line: 1227, baseType: !411, size: 128, align: 64, offset: 1600)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_size", scope: !1092, file: !121, line: 1228, baseType: !507, size: 64, align: 64, offset: 1728)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_start", scope: !1092, file: !121, line: 1230, baseType: !411, size: 128, align: 64, offset: 1792)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_size", scope: !1092, file: !121, line: 1231, baseType: !507, size: 64, align: 64, offset: 1920)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "speeder", scope: !1092, file: !121, line: 1235, baseType: !1121, size: 384, align: 64, offset: 1984)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 384, align: 64, elements: !1122)
!1122 = !{!1123}
!1123 = !DISubrange(count: 6)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_time", scope: !1092, file: !121, line: 1236, baseType: !1125, size: 768, align: 64, offset: 2368)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 768, align: 64, elements: !1122)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_c", scope: !1092, file: !121, line: 1237, baseType: !316, size: 32, align: 32, offset: 3136)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !257, file: !121, line: 1836, baseType: !1128, size: 136640, align: 64, offset: 20864)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "UrlState", file: !121, line: 1310, size: 136640, align: 64, elements: !1129)
!1129 = !{!1130, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1158, !1159, !1160, !1161, !1165, !1166, !1178, !1179, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !1128, file: !121, line: 1313, baseType: !1131, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "multi_owned_by_easy", scope: !1128, file: !121, line: 1318, baseType: !423, size: 8, align: 8, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "keeps_speed", scope: !1128, file: !121, line: 1321, baseType: !411, size: 128, align: 64, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lastconnect", scope: !1128, file: !121, line: 1323, baseType: !262, size: 64, align: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "headerbuff", scope: !1128, file: !121, line: 1325, baseType: !500, size: 64, align: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "headersize", scope: !1128, file: !121, line: 1326, baseType: !347, size: 64, align: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1128, file: !121, line: 1328, baseType: !500, size: 64, align: 64, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuffer", scope: !1128, file: !121, line: 1329, baseType: !1139, size: 131080, align: 8, offset: 512)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 131080, align: 8, elements: !1140)
!1140 = !{!1141}
!1141 = !DISubrange(count: 16385)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1128, file: !121, line: 1330, baseType: !507, size: 64, align: 64, offset: 131648)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "this_is_a_follow", scope: !1128, file: !121, line: 1332, baseType: !423, size: 8, align: 8, offset: 131712)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "first_host", scope: !1128, file: !121, line: 1334, baseType: !500, size: 64, align: 64, offset: 131776)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "first_remote_port", scope: !1128, file: !121, line: 1340, baseType: !316, size: 32, align: 32, offset: 131840)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !1128, file: !121, line: 1341, baseType: !521, size: 64, align: 64, offset: 131904)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !1128, file: !121, line: 1342, baseType: !379, size: 64, align: 64, offset: 131968)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "tempcount", scope: !1128, file: !121, line: 1343, baseType: !457, size: 32, align: 32, offset: 132032)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "tempwrite", scope: !1128, file: !121, line: 1344, baseType: !1150, size: 576, align: 64, offset: 132096)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 576, align: 64, elements: !1156)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "tempbuf", file: !121, line: 1302, size: 192, align: 64, elements: !1152)
!1152 = !{!1153, !1154, !1155}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1151, file: !121, line: 1303, baseType: !500, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1151, file: !121, line: 1305, baseType: !347, size: 64, align: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1151, file: !121, line: 1306, baseType: !316, size: 32, align: 32, offset: 128)
!1156 = !{!1157}
!1157 = !DISubrange(count: 3)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1128, file: !121, line: 1345, baseType: !500, size: 64, align: 64, offset: 132672)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuf", scope: !1128, file: !121, line: 1346, baseType: !423, size: 8, align: 8, offset: 132736)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "os_errno", scope: !1128, file: !121, line: 1349, baseType: !316, size: 32, align: 32, offset: 132768)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "prev_signal", scope: !1128, file: !121, line: 1352, baseType: !1162, size: 64, align: 64, offset: 132800)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !316}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "allow_port", scope: !1128, file: !121, line: 1354, baseType: !423, size: 8, align: 8, offset: 132864)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !1128, file: !121, line: 1356, baseType: !1167, size: 512, align: 64, offset: 132928)
!1167 = !DICompositeType(tag: DW_TAG_structure_type, name: "digestdata", file: !121, line: 410, size: 512, align: 64, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !1167, file: !121, line: 416, baseType: !500, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cnonce", scope: !1167, file: !121, line: 417, baseType: !500, size: 64, align: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !1167, file: !121, line: 418, baseType: !500, size: 64, align: 64, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !1167, file: !121, line: 419, baseType: !316, size: 32, align: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "stale", scope: !1167, file: !121, line: 420, baseType: !423, size: 8, align: 8, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1167, file: !121, line: 421, baseType: !500, size: 64, align: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "qop", scope: !1167, file: !121, line: 422, baseType: !500, size: 64, align: 64, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm", scope: !1167, file: !121, line: 423, baseType: !500, size: 64, align: 64, offset: 384)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1167, file: !121, line: 424, baseType: !316, size: 32, align: 32, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "proxydigest", scope: !1128, file: !121, line: 1357, baseType: !1167, size: 512, align: 64, offset: 133440)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "authhost", scope: !1128, file: !121, line: 1364, baseType: !1180, size: 256, align: 64, offset: 133952)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "auth", file: !121, line: 1278, size: 256, align: 64, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "want", scope: !1180, file: !121, line: 1279, baseType: !349, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "picked", scope: !1180, file: !121, line: 1281, baseType: !349, size: 64, align: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !1180, file: !121, line: 1282, baseType: !349, size: 64, align: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1180, file: !121, line: 1284, baseType: !423, size: 8, align: 8, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "multipass", scope: !1180, file: !121, line: 1286, baseType: !423, size: 8, align: 8, offset: 200)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "iestyle", scope: !1180, file: !121, line: 1288, baseType: !423, size: 8, align: 8, offset: 208)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "authproxy", scope: !1128, file: !121, line: 1365, baseType: !1180, size: 256, align: 64, offset: 134208)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "authproblem", scope: !1128, file: !121, line: 1367, baseType: !423, size: 8, align: 8, offset: 134464)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !1128, file: !121, line: 1369, baseType: !311, size: 64, align: 64, offset: 134528)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "expiretime", scope: !1128, file: !121, line: 1375, baseType: !411, size: 128, align: 64, offset: 134592)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "timenode", scope: !1128, file: !121, line: 1376, baseType: !403, size: 448, align: 64, offset: 134720)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutlist", scope: !1128, file: !121, line: 1377, baseType: !330, size: 256, align: 64, offset: 135168)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "most_recent_ftp_entrypath", scope: !1128, file: !121, line: 1380, baseType: !500, size: 64, align: 64, offset: 135424)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_trying_alternative", scope: !1128, file: !121, line: 1383, baseType: !423, size: 8, align: 8, offset: 135488)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1128, file: !121, line: 1385, baseType: !316, size: 32, align: 32, offset: 135520)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "expect100header", scope: !1128, file: !121, line: 1387, baseType: !423, size: 8, align: 8, offset: 135552)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_broke", scope: !1128, file: !121, line: 1389, baseType: !423, size: 8, align: 8, offset: 135560)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_had_trailing_cr", scope: !1128, file: !121, line: 1397, baseType: !423, size: 8, align: 8, offset: 135568)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "crlf_conversions", scope: !1128, file: !121, line: 1399, baseType: !507, size: 64, align: 64, offset: 135616)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pathbuffer", scope: !1128, file: !121, line: 1401, baseType: !500, size: 64, align: 64, offset: 135680)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1128, file: !121, line: 1402, baseType: !500, size: 64, align: 64, offset: 135744)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "slash_removed", scope: !1128, file: !121, line: 1404, baseType: !423, size: 8, align: 8, offset: 135808)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "use_range", scope: !1128, file: !121, line: 1406, baseType: !423, size: 8, align: 8, offset: 135816)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rangestringalloc", scope: !1128, file: !121, line: 1407, baseType: !423, size: 8, align: 8, offset: 135824)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1128, file: !121, line: 1409, baseType: !500, size: 64, align: 64, offset: 135872)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "resume_from", scope: !1128, file: !121, line: 1411, baseType: !507, size: 64, align: 64, offset: 135936)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_client_CSeq", scope: !1128, file: !121, line: 1414, baseType: !379, size: 64, align: 64, offset: 136000)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_server_CSeq", scope: !1128, file: !121, line: 1415, baseType: !379, size: 64, align: 64, offset: 136064)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_CSeq_recv", scope: !1128, file: !121, line: 1416, baseType: !379, size: 64, align: 64, offset: 136128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "infilesize", scope: !1128, file: !121, line: 1418, baseType: !507, size: 64, align: 64, offset: 136192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "drain", scope: !1128, file: !121, line: 1421, baseType: !347, size: 64, align: 64, offset: 136256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1128, file: !121, line: 1424, baseType: !423, size: 8, align: 8, offset: 136320)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func", scope: !1128, file: !121, line: 1428, baseType: !710, size: 64, align: 64, offset: 136384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1128, file: !121, line: 1429, baseType: !311, size: 64, align: 64, offset: 136448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !1128, file: !121, line: 1431, baseType: !256, size: 64, align: 64, offset: 136512)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !1128, file: !121, line: 1432, baseType: !423, size: 8, align: 8, offset: 136576)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !1128, file: !121, line: 1433, baseType: !316, size: 32, align: 32, offset: 136608)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !257, file: !121, line: 1838, baseType: !1220, size: 640, align: 64, offset: 157504)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "WildcardData", file: !1221, line: 46, size: 640, align: 64, elements: !1222)
!1221 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/wildcard.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1222 = !{!1223, !1235, !1236, !1237, !1238, !1239, !1241}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1220, file: !1221, line: 47, baseType: !1224, size: 32, align: 32)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_states", file: !1221, line: 41, baseType: !1225)
!1225 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1221, line: 30, size: 32, align: 32, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1227 = !DIEnumerator(name: "CURLWC_CLEAR", value: 0)
!1228 = !DIEnumerator(name: "CURLWC_INIT", value: 1)
!1229 = !DIEnumerator(name: "CURLWC_MATCHING", value: 2)
!1230 = !DIEnumerator(name: "CURLWC_DOWNLOADING", value: 3)
!1231 = !DIEnumerator(name: "CURLWC_CLEAN", value: 4)
!1232 = !DIEnumerator(name: "CURLWC_SKIP", value: 5)
!1233 = !DIEnumerator(name: "CURLWC_ERROR", value: 6)
!1234 = !DIEnumerator(name: "CURLWC_DONE", value: 7)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1220, file: !1221, line: 48, baseType: !500, size: 64, align: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !1220, file: !1221, line: 49, baseType: !500, size: 64, align: 64, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !1220, file: !1221, line: 50, baseType: !330, size: 256, align: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1220, file: !1221, line: 51, baseType: !311, size: 64, align: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_dtor", scope: !1220, file: !1221, line: 52, baseType: !1240, size: 64, align: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_tmp_dtor", file: !1221, line: 43, baseType: !362)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "customptr", scope: !1220, file: !1221, line: 53, baseType: !311, size: 64, align: 64, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !257, file: !121, line: 1839, baseType: !1243, size: 1856, align: 64, offset: 158144)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "PureInfo", file: !121, line: 1154, size: 1856, align: 64, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1261, !1262, !1263, !1264, !1265, !1266}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !1243, file: !121, line: 1155, baseType: !316, size: 32, align: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxycode", scope: !1243, file: !121, line: 1156, baseType: !316, size: 32, align: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1243, file: !121, line: 1157, baseType: !316, size: 32, align: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "filetime", scope: !1243, file: !121, line: 1158, baseType: !379, size: 64, align: 64, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "timecond", scope: !1243, file: !121, line: 1162, baseType: !423, size: 8, align: 8, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !1243, file: !121, line: 1164, baseType: !379, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "request_size", scope: !1243, file: !121, line: 1165, baseType: !379, size: 64, align: 64, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauthavail", scope: !1243, file: !121, line: 1166, baseType: !349, size: 64, align: 64, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "httpauthavail", scope: !1243, file: !121, line: 1167, baseType: !349, size: 64, align: 64, offset: 448)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "numconnects", scope: !1243, file: !121, line: 1168, baseType: !379, size: 64, align: 64, offset: 512)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !1243, file: !121, line: 1169, baseType: !500, size: 64, align: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "wouldredirect", scope: !1243, file: !121, line: 1170, baseType: !500, size: 64, align: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_ip", scope: !1243, file: !121, line: 1180, baseType: !1258, size: 368, align: 8, offset: 704)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 368, align: 8, elements: !1259)
!1259 = !{!1260}
!1260 = !DISubrange(count: 46)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_port", scope: !1243, file: !121, line: 1181, baseType: !379, size: 64, align: 64, offset: 1088)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_ip", scope: !1243, file: !121, line: 1183, baseType: !1258, size: 368, align: 8, offset: 1152)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_port", scope: !1243, file: !121, line: 1184, baseType: !379, size: 64, align: 64, offset: 1536)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "conn_scheme", scope: !1243, file: !121, line: 1186, baseType: !527, size: 64, align: 64, offset: 1600)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "conn_protocol", scope: !1243, file: !121, line: 1187, baseType: !457, size: 32, align: 32, offset: 1664)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "certs", scope: !1243, file: !121, line: 1189, baseType: !1267, size: 128, align: 64, offset: 1728)
!1267 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_certinfo", file: !15, line: 2214, size: 128, align: 64, elements: !1268)
!1268 = !{!1269, !1270}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_certs", scope: !1267, file: !15, line: 2215, baseType: !316, size: 32, align: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !1267, file: !15, line: 2216, baseType: !1271, size: 64, align: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tsi", scope: !257, file: !121, line: 1840, baseType: !1273, size: 128, align: 64, offset: 160000)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_tlssessioninfo", file: !15, line: 2245, size: 128, align: 64, elements: !1274)
!1274 = !{!1275, !1291}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "backend", scope: !1273, file: !15, line: 2246, baseType: !1276, size: 32, align: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sslbackend", file: !15, line: 2235, baseType: !1277)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2222, size: 32, align: 32, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1279 = !DIEnumerator(name: "CURLSSLBACKEND_NONE", value: 0)
!1280 = !DIEnumerator(name: "CURLSSLBACKEND_OPENSSL", value: 1)
!1281 = !DIEnumerator(name: "CURLSSLBACKEND_GNUTLS", value: 2)
!1282 = !DIEnumerator(name: "CURLSSLBACKEND_NSS", value: 3)
!1283 = !DIEnumerator(name: "CURLSSLBACKEND_OBSOLETE4", value: 4)
!1284 = !DIEnumerator(name: "CURLSSLBACKEND_GSKIT", value: 5)
!1285 = !DIEnumerator(name: "CURLSSLBACKEND_POLARSSL", value: 6)
!1286 = !DIEnumerator(name: "CURLSSLBACKEND_CYASSL", value: 7)
!1287 = !DIEnumerator(name: "CURLSSLBACKEND_SCHANNEL", value: 8)
!1288 = !DIEnumerator(name: "CURLSSLBACKEND_DARWINSSL", value: 9)
!1289 = !DIEnumerator(name: "CURLSSLBACKEND_AXTLS", value: 10)
!1290 = !DIEnumerator(name: "CURLSSLBACKEND_MBEDTLS", value: 11)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "internals", scope: !1273, file: !15, line: 2247, baseType: !311, size: 64, align: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !257, file: !121, line: 1847, baseType: !457, size: 32, align: 32, offset: 160128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !253, file: !121, line: 904, baseType: !1294, size: 384, align: 64, offset: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_chunker", file: !4, line: 82, size: 384, align: 64, elements: !1295)
!1295 = !{!1296, !1300, !1301, !1303, !1304}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hexbuffer", scope: !1294, file: !4, line: 83, baseType: !1297, size: 136, align: 8)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 136, align: 8, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 17)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hexindex", scope: !1294, file: !4, line: 84, baseType: !316, size: 32, align: 32, offset: 160)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1294, file: !4, line: 85, baseType: !1302, size: 32, align: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChunkyState", file: !4, line: 66, baseType: !3)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "datasize", scope: !1294, file: !4, line: 86, baseType: !507, size: 64, align: 64, offset: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dataleft", scope: !1294, file: !4, line: 87, baseType: !347, size: 64, align: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !253, file: !121, line: 906, baseType: !789, size: 64, align: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !253, file: !121, line: 907, baseType: !311, size: 64, align: 64, offset: 512)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !253, file: !121, line: 909, baseType: !423, size: 8, align: 8, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "connection_id", scope: !253, file: !121, line: 915, baseType: !379, size: 64, align: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dns_entry", scope: !253, file: !121, line: 922, baseType: !1310, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_dns_entry", file: !1312, line: 66, size: 192, align: 64, elements: !1313)
!1312 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hostip.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1313 = !{!1314, !1333, !1334}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1311, file: !1312, line: 67, baseType: !1315, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_addrinfo", file: !1317, line: 61, baseType: !1318)
!1317 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_addrinfo.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_addrinfo", file: !1317, line: 51, size: 384, align: 64, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1328, !1329, !1331}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !1318, file: !1317, line: 52, baseType: !316, size: 32, align: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !1318, file: !1317, line: 53, baseType: !316, size: 32, align: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !1318, file: !1317, line: 54, baseType: !316, size: 32, align: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !1318, file: !1317, line: 55, baseType: !316, size: 32, align: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !1318, file: !1317, line: 56, baseType: !1325, size: 32, align: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socklen_t", file: !508, line: 186, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !778, line: 33, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !416, line: 189, baseType: !457)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !1318, file: !1317, line: 57, baseType: !500, size: 64, align: 64, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !1318, file: !1317, line: 58, baseType: !1330, size: 64, align: 64, offset: 256)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !1318, file: !1317, line: 59, baseType: !1332, size: 64, align: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1311, file: !1312, line: 69, baseType: !599, size: 64, align: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1311, file: !1312, line: 71, baseType: !379, size: 64, align: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !253, file: !121, line: 927, baseType: !1315, size: 64, align: 64, offset: 768)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr", scope: !253, file: !121, line: 928, baseType: !1337, size: 128, align: 64, offset: 832)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 128, align: 64, elements: !1338)
!1338 = !{!1339}
!1339 = !DISubrange(count: 2)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr_str", scope: !253, file: !121, line: 933, baseType: !1258, size: 368, align: 8, offset: 960)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !253, file: !121, line: 935, baseType: !457, size: 32, align: 32, offset: 1344)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !253, file: !121, line: 937, baseType: !316, size: 32, align: 32, offset: 1376)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !253, file: !121, line: 939, baseType: !1344, size: 256, align: 64, offset: 1408)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "hostname", file: !121, line: 581, size: 256, align: 64, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "rawalloc", scope: !1344, file: !121, line: 582, baseType: !500, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "encalloc", scope: !1344, file: !121, line: 583, baseType: !500, size: 64, align: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1344, file: !121, line: 584, baseType: !500, size: 64, align: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "dispname", scope: !1344, file: !121, line: 585, baseType: !527, size: 64, align: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "secondaryhostname", scope: !253, file: !121, line: 940, baseType: !500, size: 64, align: 64, offset: 1664)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !253, file: !121, line: 941, baseType: !1344, size: 256, align: 64, offset: 1728)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "socks_proxy", scope: !253, file: !121, line: 944, baseType: !1353, size: 512, align: 64, offset: 1984)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "proxy_info", file: !121, line: 883, size: 512, align: 64, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1353, file: !121, line: 884, baseType: !1344, size: 256, align: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1353, file: !121, line: 885, baseType: !379, size: 64, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !1353, file: !121, line: 886, baseType: !904, size: 32, align: 32, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1353, file: !121, line: 887, baseType: !500, size: 64, align: 64, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !1353, file: !121, line: 888, baseType: !500, size: 64, align: 64, offset: 448)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "http_proxy", scope: !253, file: !121, line: 945, baseType: !1353, size: 512, align: 64, offset: 2496)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !253, file: !121, line: 947, baseType: !379, size: 64, align: 64, offset: 3008)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !253, file: !121, line: 948, baseType: !316, size: 32, align: 32, offset: 3072)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !253, file: !121, line: 949, baseType: !316, size: 32, align: 32, offset: 3104)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_port", scope: !253, file: !121, line: 951, baseType: !657, size: 16, align: 16, offset: 3136)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "primary_ip", scope: !253, file: !121, line: 961, baseType: !1258, size: 368, align: 8, offset: 3152)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "primary_port", scope: !253, file: !121, line: 962, baseType: !379, size: 64, align: 64, offset: 3520)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !253, file: !121, line: 968, baseType: !1258, size: 368, align: 8, offset: 3584)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !253, file: !121, line: 969, baseType: !379, size: 64, align: 64, offset: 3968)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !253, file: !121, line: 971, baseType: !500, size: 64, align: 64, offset: 4032)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !253, file: !121, line: 972, baseType: !500, size: 64, align: 64, offset: 4096)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !253, file: !121, line: 973, baseType: !500, size: 64, align: 64, offset: 4160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "oauth_bearer", scope: !253, file: !121, line: 975, baseType: !500, size: 64, align: 64, offset: 4224)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !253, file: !121, line: 977, baseType: !316, size: 32, align: 32, offset: 4288)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !253, file: !121, line: 978, baseType: !316, size: 32, align: 32, offset: 4320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !253, file: !121, line: 980, baseType: !411, size: 128, align: 64, offset: 4352)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "created", scope: !253, file: !121, line: 981, baseType: !411, size: 128, align: 64, offset: 4480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !253, file: !121, line: 982, baseType: !1378, size: 64, align: 32, offset: 4608)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 64, align: 32, elements: !1338)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tempsock", scope: !253, file: !121, line: 984, baseType: !1378, size: 64, align: 32, offset: 4672)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sock_accepted", scope: !253, file: !121, line: 985, baseType: !1381, size: 16, align: 8, offset: 4736)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 16, align: 8, elements: !1338)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !253, file: !121, line: 987, baseType: !1383, size: 128, align: 64, offset: 4800)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 128, align: 64, elements: !1338)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_recv", file: !121, line: 863, baseType: !1386)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!612, !262, !316, !500, !347, !1388}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64, align: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !253, file: !121, line: 988, baseType: !1390, size: 128, align: 64, offset: 4928)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 128, align: 64, elements: !1338)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_send", file: !121, line: 856, baseType: !1393)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!612, !262, !316, !1046, !347, !1388}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !253, file: !121, line: 993, baseType: !1396, size: 192, align: 32, offset: 5056)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 192, align: 32, elements: !1338)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_connect_data", file: !121, line: 274, size: 96, align: 32, elements: !1398)
!1398 = !{!1399, !1400, !1402}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1397, file: !121, line: 278, baseType: !423, size: 8, align: 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1397, file: !121, line: 279, baseType: !1401, size: 32, align: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connection_state", file: !121, line: 271, baseType: !120)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "connecting_state", scope: !1397, file: !121, line: 280, baseType: !1403, size: 32, align: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connect_state", file: !121, line: 265, baseType: !126)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !253, file: !121, line: 994, baseType: !1396, size: 192, align: 32, offset: 5248)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !253, file: !121, line: 995, baseType: !535, size: 640, align: 64, offset: 5440)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_config", scope: !253, file: !121, line: 996, baseType: !535, size: 640, align: 64, offset: 6080)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tls_upgraded", scope: !253, file: !121, line: 997, baseType: !423, size: 8, align: 8, offset: 6720)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !253, file: !121, line: 999, baseType: !1409, size: 280, align: 8, offset: 6728)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "ConnectBits", file: !121, line: 514, size: 280, align: 8, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1409, file: !121, line: 516, baseType: !423, size: 8, align: 8)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "reuse", scope: !1409, file: !121, line: 517, baseType: !423, size: 8, align: 8, offset: 8)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !1409, file: !121, line: 518, baseType: !423, size: 8, align: 8, offset: 16)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !1409, file: !121, line: 520, baseType: !423, size: 8, align: 8, offset: 24)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1409, file: !121, line: 522, baseType: !423, size: 8, align: 8, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxy", scope: !1409, file: !121, line: 523, baseType: !423, size: 8, align: 8, offset: 40)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy", scope: !1409, file: !121, line: 524, baseType: !423, size: 8, align: 8, offset: 48)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "user_passwd", scope: !1409, file: !121, line: 525, baseType: !423, size: 8, align: 8, offset: 56)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_user_passwd", scope: !1409, file: !121, line: 526, baseType: !423, size: 8, align: 8, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_ip", scope: !1409, file: !121, line: 527, baseType: !423, size: 8, align: 8, offset: 72)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1409, file: !121, line: 529, baseType: !423, size: 8, align: 8, offset: 80)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1409, file: !121, line: 531, baseType: !423, size: 8, align: 8, offset: 88)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "tcpconnect", scope: !1409, file: !121, line: 533, baseType: !1381, size: 16, align: 8, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "protoconnstart", scope: !1409, file: !121, line: 535, baseType: !423, size: 8, align: 8, offset: 112)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1409, file: !121, line: 538, baseType: !423, size: 8, align: 8, offset: 120)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_proxy", scope: !1409, file: !121, line: 540, baseType: !423, size: 8, align: 8, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "authneg", scope: !1409, file: !121, line: 544, baseType: !423, size: 8, align: 8, offset: 136)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rewindaftersend", scope: !1409, file: !121, line: 548, baseType: !423, size: 8, align: 8, offset: 144)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !1409, file: !121, line: 552, baseType: !423, size: 8, align: 8, offset: 152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !1409, file: !121, line: 556, baseType: !423, size: 8, align: 8, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_data_ssl", scope: !1409, file: !121, line: 559, baseType: !423, size: 8, align: 8, offset: 168)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "netrc", scope: !1409, file: !121, line: 560, baseType: !423, size: 8, align: 8, offset: 176)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd_in_url", scope: !1409, file: !121, line: 561, baseType: !423, size: 8, align: 8, offset: 184)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "stream_was_rewound", scope: !1409, file: !121, line: 562, baseType: !423, size: 8, align: 8, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_connect_closed", scope: !1409, file: !121, line: 565, baseType: !423, size: 8, align: 8, offset: 200)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1409, file: !121, line: 568, baseType: !423, size: 8, align: 8, offset: 208)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "type_set", scope: !1409, file: !121, line: 570, baseType: !423, size: 8, align: 8, offset: 216)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "multiplex", scope: !1409, file: !121, line: 571, baseType: !423, size: 8, align: 8, offset: 224)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !1409, file: !121, line: 573, baseType: !423, size: 8, align: 8, offset: 232)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_npn", scope: !1409, file: !121, line: 574, baseType: !423, size: 8, align: 8, offset: 240)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_alpn", scope: !1409, file: !121, line: 575, baseType: !423, size: 8, align: 8, offset: 248)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_connected", scope: !1409, file: !121, line: 576, baseType: !1381, size: 16, align: 8, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy_connecting", scope: !1409, file: !121, line: 578, baseType: !423, size: 8, align: 8, offset: 272)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "connecttime", scope: !253, file: !121, line: 1004, baseType: !411, size: 128, align: 64, offset: 7040)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "num_addr", scope: !253, file: !121, line: 1006, baseType: !316, size: 32, align: 32, offset: 7168)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutms_per_addr", scope: !253, file: !121, line: 1007, baseType: !599, size: 64, align: 64, offset: 7232)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !253, file: !121, line: 1010, baseType: !1448, size: 64, align: 64, offset: 7296)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_handler", file: !121, line: 763, size: 1024, align: 64, elements: !1451)
!1451 = !{!1452, !1453, !1457, !1462, !1467, !1473, !1474, !1475, !1476, !1481, !1482, !1483, !1489, !1493, !1498, !1499, !1500}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !1450, file: !121, line: 764, baseType: !527, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "setup_connection", scope: !1450, file: !121, line: 767, baseType: !1454, size: 64, align: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!289, !262}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "do_it", scope: !1450, file: !121, line: 770, baseType: !1458, size: 64, align: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!289, !262, !1461}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1450, file: !121, line: 771, baseType: !1463, size: 64, align: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_done_func", file: !121, line: 634, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!289, !262, !289, !423}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1450, file: !121, line: 777, baseType: !1468, size: 64, align: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_do_more_func", file: !121, line: 633, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!289, !262, !1472}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "connect_it", scope: !1450, file: !121, line: 785, baseType: !1458, size: 64, align: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "connecting", scope: !1450, file: !121, line: 788, baseType: !1458, size: 64, align: 64, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "doing", scope: !1450, file: !121, line: 789, baseType: !1458, size: 64, align: 64, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "proto_getsock", scope: !1450, file: !121, line: 793, baseType: !1477, size: 64, align: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!316, !262, !1480, !316}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64, align: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "doing_getsock", scope: !1450, file: !121, line: 799, baseType: !1477, size: 64, align: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "domore_getsock", scope: !1450, file: !121, line: 805, baseType: !1477, size: 64, align: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "perform_getsock", scope: !1450, file: !121, line: 812, baseType: !1484, size: 64, align: 64, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!316, !1487, !1480, !316}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !1450, file: !121, line: 821, baseType: !1490, size: 64, align: 64, offset: 768)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!289, !262, !423}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "readwrite", scope: !1450, file: !121, line: 825, baseType: !1494, size: 64, align: 64, offset: 832)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!289, !256, !262, !1497, !1461}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "defport", scope: !1450, file: !121, line: 828, baseType: !379, size: 64, align: 64, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1450, file: !121, line: 829, baseType: !457, size: 32, align: 32, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !121, line: 831, baseType: !457, size: 32, align: 32, offset: 992)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "given", scope: !253, file: !121, line: 1011, baseType: !1448, size: 64, align: 64, offset: 7360)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ip_version", scope: !253, file: !121, line: 1013, baseType: !379, size: 64, align: 64, offset: 7424)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sockfd", scope: !253, file: !121, line: 1017, baseType: !315, size: 32, align: 32, offset: 7488)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "writesockfd", scope: !253, file: !121, line: 1018, baseType: !315, size: 32, align: 32, offset: 7520)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "allocptr", scope: !253, file: !121, line: 1035, baseType: !1506, size: 640, align: 64, offset: 7552)
!1506 = !DICompositeType(tag: DW_TAG_structure_type, name: "dynamically_allocated_data", file: !121, line: 1024, size: 640, align: 64, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "proxyuserpwd", scope: !1506, file: !121, line: 1025, baseType: !500, size: 64, align: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "uagent", scope: !1506, file: !121, line: 1026, baseType: !500, size: 64, align: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "accept_encoding", scope: !1506, file: !121, line: 1027, baseType: !500, size: 64, align: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd", scope: !1506, file: !121, line: 1028, baseType: !500, size: 64, align: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rangeline", scope: !1506, file: !121, line: 1029, baseType: !500, size: 64, align: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1506, file: !121, line: 1030, baseType: !500, size: 64, align: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1506, file: !121, line: 1031, baseType: !500, size: 64, align: 64, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "cookiehost", scope: !1506, file: !121, line: 1032, baseType: !500, size: 64, align: 64, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_transport", scope: !1506, file: !121, line: 1033, baseType: !500, size: 64, align: 64, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "te", scope: !1506, file: !121, line: 1034, baseType: !500, size: 64, align: 64, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "readchannel_inuse", scope: !253, file: !121, line: 1057, baseType: !423, size: 8, align: 8, offset: 8192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "writechannel_inuse", scope: !253, file: !121, line: 1059, baseType: !423, size: 8, align: 8, offset: 8200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "send_pipe", scope: !253, file: !121, line: 1061, baseType: !330, size: 256, align: 64, offset: 8256)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "recv_pipe", scope: !253, file: !121, line: 1063, baseType: !330, size: 256, align: 64, offset: 8512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "master_buffer", scope: !253, file: !121, line: 1065, baseType: !500, size: 64, align: 64, offset: 8768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !253, file: !121, line: 1067, baseType: !347, size: 64, align: 64, offset: 8832)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !253, file: !121, line: 1068, baseType: !347, size: 64, align: 64, offset: 8896)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !253, file: !121, line: 1071, baseType: !695, size: 64, align: 64, offset: 8960)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !253, file: !121, line: 1072, baseType: !311, size: 64, align: 64, offset: 9024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "syserr_buf", scope: !253, file: !121, line: 1091, baseType: !1528, size: 2048, align: 8, offset: 9088)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 2048, align: 8, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "trailer", scope: !253, file: !121, line: 1099, baseType: !500, size: 64, align: 64, offset: 11136)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "trlMax", scope: !253, file: !121, line: 1100, baseType: !316, size: 32, align: 32, offset: 11200)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "trlPos", scope: !253, file: !121, line: 1101, baseType: !316, size: 32, align: 32, offset: 11232)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !253, file: !121, line: 1114, baseType: !1535, size: 1792, align: 64, offset: 11264)
!1535 = !DICompositeType(tag: DW_TAG_union_type, scope: !253, file: !121, line: 1103, size: 1792, align: 64, elements: !1536)
!1536 = !{!1537, !1584, !1589, !1594, !1597, !1645, !1659, !1671, !1678, !1696}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ftpc", scope: !1535, file: !121, line: 1104, baseType: !1538, size: 1792, align: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "ftp_conn", file: !135, line: 118, size: 1792, align: 64, elements: !1539)
!1539 = !{!1540, !1560, !1561, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1578, !1579, !1580, !1581, !1582, !1583}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1538, file: !135, line: 119, baseType: !1541, size: 896, align: 64)
!1541 = !DICompositeType(tag: DW_TAG_structure_type, name: "pingpong", file: !1542, line: 48, size: 896, align: 64, elements: !1543)
!1542 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pingpong.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1541, file: !1542, line: 49, baseType: !500, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !1541, file: !1542, line: 50, baseType: !347, size: 64, align: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "nread_resp", scope: !1541, file: !1542, line: 51, baseType: !347, size: 64, align: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "linestart_resp", scope: !1541, file: !1542, line: 52, baseType: !500, size: 64, align: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pending_resp", scope: !1541, file: !1542, line: 54, baseType: !423, size: 8, align: 8, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sendthis", scope: !1541, file: !1542, line: 57, baseType: !500, size: 64, align: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sendleft", scope: !1541, file: !1542, line: 59, baseType: !347, size: 64, align: 64, offset: 384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sendsize", scope: !1541, file: !1542, line: 60, baseType: !347, size: 64, align: 64, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1541, file: !1542, line: 61, baseType: !411, size: 128, align: 64, offset: 512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "response_time", scope: !1541, file: !1542, line: 63, baseType: !379, size: 64, align: 64, offset: 640)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1541, file: !1542, line: 66, baseType: !262, size: 64, align: 64, offset: 704)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "statemach_act", scope: !1541, file: !1542, line: 72, baseType: !1454, size: 64, align: 64, offset: 768)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "endofresp", scope: !1541, file: !1542, line: 74, baseType: !1557, size: 64, align: 64, offset: 832)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!423, !262, !500, !347, !1472}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "entrypath", scope: !1538, file: !135, line: 120, baseType: !500, size: 64, align: 64, offset: 896)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dirs", scope: !1538, file: !135, line: 121, baseType: !1562, size: 64, align: 64, offset: 960)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dirdepth", scope: !1538, file: !135, line: 122, baseType: !316, size: 32, align: 32, offset: 1024)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "diralloc", scope: !1538, file: !135, line: 123, baseType: !316, size: 32, align: 32, offset: 1056)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1538, file: !135, line: 124, baseType: !500, size: 64, align: 64, offset: 1088)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dont_check", scope: !1538, file: !135, line: 125, baseType: !423, size: 8, align: 8, offset: 1152)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_valid", scope: !1538, file: !135, line: 128, baseType: !423, size: 8, align: 8, offset: 1160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cwddone", scope: !1538, file: !135, line: 131, baseType: !423, size: 8, align: 8, offset: 1168)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cwdfail", scope: !1538, file: !135, line: 133, baseType: !423, size: 8, align: 8, offset: 1176)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_data_conn", scope: !1538, file: !135, line: 135, baseType: !423, size: 8, align: 8, offset: 1184)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prevpath", scope: !1538, file: !135, line: 136, baseType: !500, size: 64, align: 64, offset: 1216)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "transfertype", scope: !1538, file: !135, line: 137, baseType: !501, size: 8, align: 8, offset: 1280)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "count1", scope: !1538, file: !135, line: 139, baseType: !316, size: 32, align: 32, offset: 1312)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "count2", scope: !1538, file: !135, line: 140, baseType: !316, size: 32, align: 32, offset: 1344)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "count3", scope: !1538, file: !135, line: 141, baseType: !316, size: 32, align: 32, offset: 1376)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1538, file: !135, line: 142, baseType: !1577, size: 32, align: 32, offset: 1408)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "ftpstate", file: !135, line: 80, baseType: !134)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !1538, file: !135, line: 143, baseType: !1577, size: 32, align: 32, offset: 1440)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "retr_size_saved", scope: !1538, file: !135, line: 145, baseType: !507, size: 64, align: 64, offset: 1472)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "server_os", scope: !1538, file: !135, line: 146, baseType: !500, size: 64, align: 64, offset: 1536)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "known_filesize", scope: !1538, file: !135, line: 147, baseType: !507, size: 64, align: 64, offset: 1600)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "newhost", scope: !1538, file: !135, line: 152, baseType: !500, size: 64, align: 64, offset: 1664)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "newport", scope: !1538, file: !135, line: 153, baseType: !657, size: 16, align: 16, offset: 1728)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "httpc", scope: !1535, file: !121, line: 1105, baseType: !1585, size: 32, align: 32)
!1585 = !DICompositeType(tag: DW_TAG_structure_type, name: "http_conn", file: !1586, line: 200, size: 32, align: 32, elements: !1587)
!1586 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1587 = !{!1588}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1585, file: !1586, line: 227, baseType: !316, size: 32, align: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sshc", scope: !1535, file: !121, line: 1106, baseType: !1590, size: 64, align: 64)
!1590 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssh_conn", file: !1591, line: 110, size: 64, align: 64, elements: !1592)
!1591 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ssh.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "authlist", scope: !1590, file: !1591, line: 111, baseType: !527, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tftpc", scope: !1535, file: !121, line: 1107, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tftp_state_data", file: !121, line: 1107, flags: DIFlagFwdDecl)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "imapc", scope: !1535, file: !121, line: 1108, baseType: !1598, size: 1472, align: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "imap_conn", file: !174, line: 70, size: 1472, align: 64, elements: !1599)
!1599 = !{!1600, !1601, !1603, !1604, !1636, !1637, !1638, !1640, !1641, !1642, !1643, !1644}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1598, file: !174, line: 71, baseType: !1541, size: 896, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1598, file: !174, line: 72, baseType: !1602, size: 32, align: 32, offset: 896)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "imapstate", file: !174, line: 50, baseType: !173)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1598, file: !174, line: 73, baseType: !423, size: 8, align: 8, offset: 928)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1598, file: !174, line: 74, baseType: !1605, size: 256, align: 64, offset: 960)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASL", file: !193, line: 101, size: 256, align: 64, elements: !1606)
!1606 = !{!1607, !1628, !1630, !1631, !1632, !1633, !1634, !1635}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !1605, file: !193, line: 102, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASLproto", file: !193, line: 86, size: 384, align: 64, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1620, !1624}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "service", scope: !1610, file: !193, line: 87, baseType: !527, size: 64, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "contcode", scope: !1610, file: !193, line: 88, baseType: !316, size: 32, align: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "finalcode", scope: !1610, file: !193, line: 89, baseType: !316, size: 32, align: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "maxirlen", scope: !1610, file: !193, line: 90, baseType: !347, size: 64, align: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "sendauth", scope: !1610, file: !193, line: 91, baseType: !1617, size: 64, align: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!289, !262, !527, !527}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "sendcont", scope: !1610, file: !193, line: 94, baseType: !1621, size: 64, align: 64, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!289, !262, !527}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "getmessage", scope: !1610, file: !193, line: 96, baseType: !1625, size: 64, align: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{null, !500, !1562}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1605, file: !193, line: 103, baseType: !1629, size: 32, align: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "saslstate", file: !193, line: 76, baseType: !192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "authmechs", scope: !1605, file: !193, line: 104, baseType: !457, size: 32, align: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "prefmech", scope: !1605, file: !193, line: 105, baseType: !457, size: 32, align: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "authused", scope: !1605, file: !193, line: 106, baseType: !457, size: 32, align: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "resetprefs", scope: !1605, file: !193, line: 107, baseType: !423, size: 8, align: 8, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mutual_auth", scope: !1605, file: !193, line: 108, baseType: !423, size: 8, align: 8, offset: 200)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "force_ir", scope: !1605, file: !193, line: 109, baseType: !423, size: 8, align: 8, offset: 208)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1598, file: !174, line: 75, baseType: !457, size: 32, align: 32, offset: 1216)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "cmdid", scope: !1598, file: !174, line: 76, baseType: !316, size: 32, align: 32, offset: 1248)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "resptag", scope: !1598, file: !174, line: 77, baseType: !1639, size: 40, align: 8, offset: 1280)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 40, align: 8, elements: !317)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1598, file: !174, line: 78, baseType: !423, size: 8, align: 8, offset: 1320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "login_disabled", scope: !1598, file: !174, line: 79, baseType: !423, size: 8, align: 8, offset: 1328)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ir_supported", scope: !1598, file: !174, line: 80, baseType: !423, size: 8, align: 8, offset: 1336)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox", scope: !1598, file: !174, line: 81, baseType: !500, size: 64, align: 64, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox_uidvalidity", scope: !1598, file: !174, line: 82, baseType: !500, size: 64, align: 64, offset: 1408)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pop3c", scope: !1535, file: !121, line: 1109, baseType: !1646, size: 1536, align: 64)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "pop3_conn", file: !213, line: 60, size: 1536, align: 64, elements: !1647)
!1647 = !{!1648, !1649, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1646, file: !213, line: 61, baseType: !1541, size: 896, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1646, file: !213, line: 62, baseType: !1650, size: 32, align: 32, offset: 896)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "pop3state", file: !213, line: 46, baseType: !212)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1646, file: !213, line: 63, baseType: !423, size: 8, align: 8, offset: 928)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "eob", scope: !1646, file: !213, line: 64, baseType: !347, size: 64, align: 64, offset: 960)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1646, file: !213, line: 66, baseType: !347, size: 64, align: 64, offset: 1024)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1646, file: !213, line: 68, baseType: !1605, size: 256, align: 64, offset: 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "authtypes", scope: !1646, file: !213, line: 69, baseType: !457, size: 32, align: 32, offset: 1344)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1646, file: !213, line: 70, baseType: !457, size: 32, align: 32, offset: 1376)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "apoptimestamp", scope: !1646, file: !213, line: 71, baseType: !500, size: 64, align: 64, offset: 1408)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1646, file: !213, line: 72, baseType: !423, size: 8, align: 8, offset: 1472)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "smtpc", scope: !1535, file: !121, line: 1110, baseType: !1660, size: 1344, align: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "smtp_conn", file: !228, line: 65, size: 1344, align: 64, elements: !1661)
!1661 = !{!1662, !1663, !1665, !1666, !1667, !1668, !1669, !1670}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1660, file: !228, line: 66, baseType: !1541, size: 896, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1660, file: !228, line: 67, baseType: !1664, size: 32, align: 32, offset: 896)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "smtpstate", file: !228, line: 48, baseType: !227)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1660, file: !228, line: 68, baseType: !423, size: 8, align: 8, offset: 928)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1660, file: !228, line: 69, baseType: !500, size: 64, align: 64, offset: 960)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1660, file: !228, line: 70, baseType: !1605, size: 256, align: 64, offset: 1024)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1660, file: !228, line: 71, baseType: !423, size: 8, align: 8, offset: 1280)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "size_supported", scope: !1660, file: !228, line: 72, baseType: !423, size: 8, align: 8, offset: 1288)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "auth_supported", scope: !1660, file: !228, line: 74, baseType: !423, size: 8, align: 8, offset: 1296)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rtspc", scope: !1535, file: !121, line: 1111, baseType: !1672, size: 192, align: 64)
!1672 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtsp_conn", file: !1673, line: 43, size: 192, align: 64, elements: !1674)
!1673 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/rtsp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_buf", scope: !1672, file: !1673, line: 44, baseType: !500, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_bufsize", scope: !1672, file: !1673, line: 45, baseType: !612, size: 64, align: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_channel", scope: !1672, file: !1673, line: 46, baseType: !316, size: 32, align: 32, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "smbc", scope: !1535, file: !121, line: 1112, baseType: !1679, size: 640, align: 64)
!1679 = !DICompositeType(tag: DW_TAG_structure_type, name: "smb_conn", file: !245, line: 33, size: 640, align: 64, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1679, file: !245, line: 34, baseType: !244, size: 32, align: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1679, file: !245, line: 35, baseType: !500, size: 64, align: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1679, file: !245, line: 36, baseType: !500, size: 64, align: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "challenge", scope: !1679, file: !245, line: 37, baseType: !1685, size: 64, align: 8, offset: 192)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 64, align: 8, elements: !1687)
!1686 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1687 = !{!1688}
!1688 = !DISubrange(count: 8)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1679, file: !245, line: 38, baseType: !457, size: 32, align: 32, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1679, file: !245, line: 39, baseType: !657, size: 16, align: 16, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "recv_buf", scope: !1679, file: !245, line: 40, baseType: !500, size: 64, align: 64, offset: 320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "upload_size", scope: !1679, file: !245, line: 41, baseType: !347, size: 64, align: 64, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !1679, file: !245, line: 42, baseType: !347, size: 64, align: 64, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1679, file: !245, line: 43, baseType: !347, size: 64, align: 64, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "got", scope: !1679, file: !245, line: 44, baseType: !347, size: 64, align: 64, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1535, file: !121, line: 1113, baseType: !311, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cselect_bits", scope: !253, file: !121, line: 1116, baseType: !316, size: 32, align: 32, offset: 13056)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "waitfor", scope: !253, file: !121, line: 1117, baseType: !316, size: 32, align: 32, offset: 13088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "localdev", scope: !253, file: !121, line: 1128, baseType: !500, size: 64, align: 64, offset: 13120)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !253, file: !121, line: 1129, baseType: !657, size: 16, align: 16, offset: 13184)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !253, file: !121, line: 1130, baseType: !316, size: 32, align: 32, offset: 13216)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_state", scope: !253, file: !121, line: 1137, baseType: !1703, size: 64, align: 32, offset: 13248)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 64, align: 32, elements: !1338)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "bundle", scope: !253, file: !121, line: 1138, baseType: !1705, size: 64, align: 64, offset: 13312)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectbundle", file: !426, line: 38, size: 384, align: 64, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "multiuse", scope: !1706, file: !426, line: 39, baseType: !316, size: 32, align: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !1706, file: !426, line: 40, baseType: !347, size: 64, align: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "conn_list", scope: !1706, file: !426, line: 41, baseType: !330, size: 256, align: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "negnpn", scope: !253, file: !121, line: 1140, baseType: !316, size: 32, align: 32, offset: 13376)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIEnumerator(name: "TUNNEL_INIT", value: 0)
!1714 = !DIEnumerator(name: "TUNNEL_CONNECT", value: 1)
!1715 = !DIEnumerator(name: "TUNNEL_COMPLETE", value: 2)
!1716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dupstring", file: !121, line: 1466, size: 32, align: 32, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774}
!1718 = !DIEnumerator(name: "STRING_CERT_ORIG", value: 0)
!1719 = !DIEnumerator(name: "STRING_CERT_PROXY", value: 1)
!1720 = !DIEnumerator(name: "STRING_CERT_TYPE_ORIG", value: 2)
!1721 = !DIEnumerator(name: "STRING_CERT_TYPE_PROXY", value: 3)
!1722 = !DIEnumerator(name: "STRING_COOKIE", value: 4)
!1723 = !DIEnumerator(name: "STRING_COOKIEJAR", value: 5)
!1724 = !DIEnumerator(name: "STRING_CUSTOMREQUEST", value: 6)
!1725 = !DIEnumerator(name: "STRING_DEFAULT_PROTOCOL", value: 7)
!1726 = !DIEnumerator(name: "STRING_DEVICE", value: 8)
!1727 = !DIEnumerator(name: "STRING_ENCODING", value: 9)
!1728 = !DIEnumerator(name: "STRING_FTP_ACCOUNT", value: 10)
!1729 = !DIEnumerator(name: "STRING_FTP_ALTERNATIVE_TO_USER", value: 11)
!1730 = !DIEnumerator(name: "STRING_FTPPORT", value: 12)
!1731 = !DIEnumerator(name: "STRING_KEY_ORIG", value: 13)
!1732 = !DIEnumerator(name: "STRING_KEY_PROXY", value: 14)
!1733 = !DIEnumerator(name: "STRING_KEY_PASSWD_ORIG", value: 15)
!1734 = !DIEnumerator(name: "STRING_KEY_PASSWD_PROXY", value: 16)
!1735 = !DIEnumerator(name: "STRING_KEY_TYPE_ORIG", value: 17)
!1736 = !DIEnumerator(name: "STRING_KEY_TYPE_PROXY", value: 18)
!1737 = !DIEnumerator(name: "STRING_KRB_LEVEL", value: 19)
!1738 = !DIEnumerator(name: "STRING_NETRC_FILE", value: 20)
!1739 = !DIEnumerator(name: "STRING_PROXY", value: 21)
!1740 = !DIEnumerator(name: "STRING_PRE_PROXY", value: 22)
!1741 = !DIEnumerator(name: "STRING_SET_RANGE", value: 23)
!1742 = !DIEnumerator(name: "STRING_SET_REFERER", value: 24)
!1743 = !DIEnumerator(name: "STRING_SET_URL", value: 25)
!1744 = !DIEnumerator(name: "STRING_SSL_CAPATH_ORIG", value: 26)
!1745 = !DIEnumerator(name: "STRING_SSL_CAPATH_PROXY", value: 27)
!1746 = !DIEnumerator(name: "STRING_SSL_CAFILE_ORIG", value: 28)
!1747 = !DIEnumerator(name: "STRING_SSL_CAFILE_PROXY", value: 29)
!1748 = !DIEnumerator(name: "STRING_SSL_PINNEDPUBLICKEY_ORIG", value: 30)
!1749 = !DIEnumerator(name: "STRING_SSL_PINNEDPUBLICKEY_PROXY", value: 31)
!1750 = !DIEnumerator(name: "STRING_SSL_CIPHER_LIST_ORIG", value: 32)
!1751 = !DIEnumerator(name: "STRING_SSL_CIPHER_LIST_PROXY", value: 33)
!1752 = !DIEnumerator(name: "STRING_SSL_EGDSOCKET", value: 34)
!1753 = !DIEnumerator(name: "STRING_SSL_RANDOM_FILE", value: 35)
!1754 = !DIEnumerator(name: "STRING_USERAGENT", value: 36)
!1755 = !DIEnumerator(name: "STRING_SSL_CRLFILE_ORIG", value: 37)
!1756 = !DIEnumerator(name: "STRING_SSL_CRLFILE_PROXY", value: 38)
!1757 = !DIEnumerator(name: "STRING_SSL_ISSUERCERT_ORIG", value: 39)
!1758 = !DIEnumerator(name: "STRING_SSL_ISSUERCERT_PROXY", value: 40)
!1759 = !DIEnumerator(name: "STRING_USERNAME", value: 41)
!1760 = !DIEnumerator(name: "STRING_PASSWORD", value: 42)
!1761 = !DIEnumerator(name: "STRING_OPTIONS", value: 43)
!1762 = !DIEnumerator(name: "STRING_PROXYUSERNAME", value: 44)
!1763 = !DIEnumerator(name: "STRING_PROXYPASSWORD", value: 45)
!1764 = !DIEnumerator(name: "STRING_NOPROXY", value: 46)
!1765 = !DIEnumerator(name: "STRING_RTSP_SESSION_ID", value: 47)
!1766 = !DIEnumerator(name: "STRING_RTSP_STREAM_URI", value: 48)
!1767 = !DIEnumerator(name: "STRING_RTSP_TRANSPORT", value: 49)
!1768 = !DIEnumerator(name: "STRING_SERVICE_NAME", value: 50)
!1769 = !DIEnumerator(name: "STRING_MAIL_FROM", value: 51)
!1770 = !DIEnumerator(name: "STRING_MAIL_AUTH", value: 52)
!1771 = !DIEnumerator(name: "STRING_BEARER", value: 53)
!1772 = !DIEnumerator(name: "STRING_LASTZEROTERMINATED", value: 54)
!1773 = !DIEnumerator(name: "STRING_COPYPOSTFIELDS", value: 55)
!1774 = !DIEnumerator(name: "STRING_LAST", value: 56)
!1775 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 888, size: 32, align: 32, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024}
!1777 = !DIEnumerator(name: "CURLOPT_WRITEDATA", value: 10001)
!1778 = !DIEnumerator(name: "CURLOPT_URL", value: 10002)
!1779 = !DIEnumerator(name: "CURLOPT_PORT", value: 3)
!1780 = !DIEnumerator(name: "CURLOPT_PROXY", value: 10004)
!1781 = !DIEnumerator(name: "CURLOPT_USERPWD", value: 10005)
!1782 = !DIEnumerator(name: "CURLOPT_PROXYUSERPWD", value: 10006)
!1783 = !DIEnumerator(name: "CURLOPT_RANGE", value: 10007)
!1784 = !DIEnumerator(name: "CURLOPT_READDATA", value: 10009)
!1785 = !DIEnumerator(name: "CURLOPT_ERRORBUFFER", value: 10010)
!1786 = !DIEnumerator(name: "CURLOPT_WRITEFUNCTION", value: 20011)
!1787 = !DIEnumerator(name: "CURLOPT_READFUNCTION", value: 20012)
!1788 = !DIEnumerator(name: "CURLOPT_TIMEOUT", value: 13)
!1789 = !DIEnumerator(name: "CURLOPT_INFILESIZE", value: 14)
!1790 = !DIEnumerator(name: "CURLOPT_POSTFIELDS", value: 10015)
!1791 = !DIEnumerator(name: "CURLOPT_REFERER", value: 10016)
!1792 = !DIEnumerator(name: "CURLOPT_FTPPORT", value: 10017)
!1793 = !DIEnumerator(name: "CURLOPT_USERAGENT", value: 10018)
!1794 = !DIEnumerator(name: "CURLOPT_LOW_SPEED_LIMIT", value: 19)
!1795 = !DIEnumerator(name: "CURLOPT_LOW_SPEED_TIME", value: 20)
!1796 = !DIEnumerator(name: "CURLOPT_RESUME_FROM", value: 21)
!1797 = !DIEnumerator(name: "CURLOPT_COOKIE", value: 10022)
!1798 = !DIEnumerator(name: "CURLOPT_HTTPHEADER", value: 10023)
!1799 = !DIEnumerator(name: "CURLOPT_HTTPPOST", value: 10024)
!1800 = !DIEnumerator(name: "CURLOPT_SSLCERT", value: 10025)
!1801 = !DIEnumerator(name: "CURLOPT_KEYPASSWD", value: 10026)
!1802 = !DIEnumerator(name: "CURLOPT_CRLF", value: 27)
!1803 = !DIEnumerator(name: "CURLOPT_QUOTE", value: 10028)
!1804 = !DIEnumerator(name: "CURLOPT_HEADERDATA", value: 10029)
!1805 = !DIEnumerator(name: "CURLOPT_COOKIEFILE", value: 10031)
!1806 = !DIEnumerator(name: "CURLOPT_SSLVERSION", value: 32)
!1807 = !DIEnumerator(name: "CURLOPT_TIMECONDITION", value: 33)
!1808 = !DIEnumerator(name: "CURLOPT_TIMEVALUE", value: 34)
!1809 = !DIEnumerator(name: "CURLOPT_CUSTOMREQUEST", value: 10036)
!1810 = !DIEnumerator(name: "CURLOPT_STDERR", value: 10037)
!1811 = !DIEnumerator(name: "CURLOPT_POSTQUOTE", value: 10039)
!1812 = !DIEnumerator(name: "CURLOPT_OBSOLETE40", value: 10040)
!1813 = !DIEnumerator(name: "CURLOPT_VERBOSE", value: 41)
!1814 = !DIEnumerator(name: "CURLOPT_HEADER", value: 42)
!1815 = !DIEnumerator(name: "CURLOPT_NOPROGRESS", value: 43)
!1816 = !DIEnumerator(name: "CURLOPT_NOBODY", value: 44)
!1817 = !DIEnumerator(name: "CURLOPT_FAILONERROR", value: 45)
!1818 = !DIEnumerator(name: "CURLOPT_UPLOAD", value: 46)
!1819 = !DIEnumerator(name: "CURLOPT_POST", value: 47)
!1820 = !DIEnumerator(name: "CURLOPT_DIRLISTONLY", value: 48)
!1821 = !DIEnumerator(name: "CURLOPT_APPEND", value: 50)
!1822 = !DIEnumerator(name: "CURLOPT_NETRC", value: 51)
!1823 = !DIEnumerator(name: "CURLOPT_FOLLOWLOCATION", value: 52)
!1824 = !DIEnumerator(name: "CURLOPT_TRANSFERTEXT", value: 53)
!1825 = !DIEnumerator(name: "CURLOPT_PUT", value: 54)
!1826 = !DIEnumerator(name: "CURLOPT_PROGRESSFUNCTION", value: 20056)
!1827 = !DIEnumerator(name: "CURLOPT_PROGRESSDATA", value: 10057)
!1828 = !DIEnumerator(name: "CURLOPT_AUTOREFERER", value: 58)
!1829 = !DIEnumerator(name: "CURLOPT_PROXYPORT", value: 59)
!1830 = !DIEnumerator(name: "CURLOPT_POSTFIELDSIZE", value: 60)
!1831 = !DIEnumerator(name: "CURLOPT_HTTPPROXYTUNNEL", value: 61)
!1832 = !DIEnumerator(name: "CURLOPT_INTERFACE", value: 10062)
!1833 = !DIEnumerator(name: "CURLOPT_KRBLEVEL", value: 10063)
!1834 = !DIEnumerator(name: "CURLOPT_SSL_VERIFYPEER", value: 64)
!1835 = !DIEnumerator(name: "CURLOPT_CAINFO", value: 10065)
!1836 = !DIEnumerator(name: "CURLOPT_MAXREDIRS", value: 68)
!1837 = !DIEnumerator(name: "CURLOPT_FILETIME", value: 69)
!1838 = !DIEnumerator(name: "CURLOPT_TELNETOPTIONS", value: 10070)
!1839 = !DIEnumerator(name: "CURLOPT_MAXCONNECTS", value: 71)
!1840 = !DIEnumerator(name: "CURLOPT_OBSOLETE72", value: 72)
!1841 = !DIEnumerator(name: "CURLOPT_FRESH_CONNECT", value: 74)
!1842 = !DIEnumerator(name: "CURLOPT_FORBID_REUSE", value: 75)
!1843 = !DIEnumerator(name: "CURLOPT_RANDOM_FILE", value: 10076)
!1844 = !DIEnumerator(name: "CURLOPT_EGDSOCKET", value: 10077)
!1845 = !DIEnumerator(name: "CURLOPT_CONNECTTIMEOUT", value: 78)
!1846 = !DIEnumerator(name: "CURLOPT_HEADERFUNCTION", value: 20079)
!1847 = !DIEnumerator(name: "CURLOPT_HTTPGET", value: 80)
!1848 = !DIEnumerator(name: "CURLOPT_SSL_VERIFYHOST", value: 81)
!1849 = !DIEnumerator(name: "CURLOPT_COOKIEJAR", value: 10082)
!1850 = !DIEnumerator(name: "CURLOPT_SSL_CIPHER_LIST", value: 10083)
!1851 = !DIEnumerator(name: "CURLOPT_HTTP_VERSION", value: 84)
!1852 = !DIEnumerator(name: "CURLOPT_FTP_USE_EPSV", value: 85)
!1853 = !DIEnumerator(name: "CURLOPT_SSLCERTTYPE", value: 10086)
!1854 = !DIEnumerator(name: "CURLOPT_SSLKEY", value: 10087)
!1855 = !DIEnumerator(name: "CURLOPT_SSLKEYTYPE", value: 10088)
!1856 = !DIEnumerator(name: "CURLOPT_SSLENGINE", value: 10089)
!1857 = !DIEnumerator(name: "CURLOPT_SSLENGINE_DEFAULT", value: 90)
!1858 = !DIEnumerator(name: "CURLOPT_DNS_USE_GLOBAL_CACHE", value: 91)
!1859 = !DIEnumerator(name: "CURLOPT_DNS_CACHE_TIMEOUT", value: 92)
!1860 = !DIEnumerator(name: "CURLOPT_PREQUOTE", value: 10093)
!1861 = !DIEnumerator(name: "CURLOPT_DEBUGFUNCTION", value: 20094)
!1862 = !DIEnumerator(name: "CURLOPT_DEBUGDATA", value: 10095)
!1863 = !DIEnumerator(name: "CURLOPT_COOKIESESSION", value: 96)
!1864 = !DIEnumerator(name: "CURLOPT_CAPATH", value: 10097)
!1865 = !DIEnumerator(name: "CURLOPT_BUFFERSIZE", value: 98)
!1866 = !DIEnumerator(name: "CURLOPT_NOSIGNAL", value: 99)
!1867 = !DIEnumerator(name: "CURLOPT_SHARE", value: 10100)
!1868 = !DIEnumerator(name: "CURLOPT_PROXYTYPE", value: 101)
!1869 = !DIEnumerator(name: "CURLOPT_ACCEPT_ENCODING", value: 10102)
!1870 = !DIEnumerator(name: "CURLOPT_PRIVATE", value: 10103)
!1871 = !DIEnumerator(name: "CURLOPT_HTTP200ALIASES", value: 10104)
!1872 = !DIEnumerator(name: "CURLOPT_UNRESTRICTED_AUTH", value: 105)
!1873 = !DIEnumerator(name: "CURLOPT_FTP_USE_EPRT", value: 106)
!1874 = !DIEnumerator(name: "CURLOPT_HTTPAUTH", value: 107)
!1875 = !DIEnumerator(name: "CURLOPT_SSL_CTX_FUNCTION", value: 20108)
!1876 = !DIEnumerator(name: "CURLOPT_SSL_CTX_DATA", value: 10109)
!1877 = !DIEnumerator(name: "CURLOPT_FTP_CREATE_MISSING_DIRS", value: 110)
!1878 = !DIEnumerator(name: "CURLOPT_PROXYAUTH", value: 111)
!1879 = !DIEnumerator(name: "CURLOPT_FTP_RESPONSE_TIMEOUT", value: 112)
!1880 = !DIEnumerator(name: "CURLOPT_IPRESOLVE", value: 113)
!1881 = !DIEnumerator(name: "CURLOPT_MAXFILESIZE", value: 114)
!1882 = !DIEnumerator(name: "CURLOPT_INFILESIZE_LARGE", value: 30115)
!1883 = !DIEnumerator(name: "CURLOPT_RESUME_FROM_LARGE", value: 30116)
!1884 = !DIEnumerator(name: "CURLOPT_MAXFILESIZE_LARGE", value: 30117)
!1885 = !DIEnumerator(name: "CURLOPT_NETRC_FILE", value: 10118)
!1886 = !DIEnumerator(name: "CURLOPT_USE_SSL", value: 119)
!1887 = !DIEnumerator(name: "CURLOPT_POSTFIELDSIZE_LARGE", value: 30120)
!1888 = !DIEnumerator(name: "CURLOPT_TCP_NODELAY", value: 121)
!1889 = !DIEnumerator(name: "CURLOPT_FTPSSLAUTH", value: 129)
!1890 = !DIEnumerator(name: "CURLOPT_IOCTLFUNCTION", value: 20130)
!1891 = !DIEnumerator(name: "CURLOPT_IOCTLDATA", value: 10131)
!1892 = !DIEnumerator(name: "CURLOPT_FTP_ACCOUNT", value: 10134)
!1893 = !DIEnumerator(name: "CURLOPT_COOKIELIST", value: 10135)
!1894 = !DIEnumerator(name: "CURLOPT_IGNORE_CONTENT_LENGTH", value: 136)
!1895 = !DIEnumerator(name: "CURLOPT_FTP_SKIP_PASV_IP", value: 137)
!1896 = !DIEnumerator(name: "CURLOPT_FTP_FILEMETHOD", value: 138)
!1897 = !DIEnumerator(name: "CURLOPT_LOCALPORT", value: 139)
!1898 = !DIEnumerator(name: "CURLOPT_LOCALPORTRANGE", value: 140)
!1899 = !DIEnumerator(name: "CURLOPT_CONNECT_ONLY", value: 141)
!1900 = !DIEnumerator(name: "CURLOPT_CONV_FROM_NETWORK_FUNCTION", value: 20142)
!1901 = !DIEnumerator(name: "CURLOPT_CONV_TO_NETWORK_FUNCTION", value: 20143)
!1902 = !DIEnumerator(name: "CURLOPT_CONV_FROM_UTF8_FUNCTION", value: 20144)
!1903 = !DIEnumerator(name: "CURLOPT_MAX_SEND_SPEED_LARGE", value: 30145)
!1904 = !DIEnumerator(name: "CURLOPT_MAX_RECV_SPEED_LARGE", value: 30146)
!1905 = !DIEnumerator(name: "CURLOPT_FTP_ALTERNATIVE_TO_USER", value: 10147)
!1906 = !DIEnumerator(name: "CURLOPT_SOCKOPTFUNCTION", value: 20148)
!1907 = !DIEnumerator(name: "CURLOPT_SOCKOPTDATA", value: 10149)
!1908 = !DIEnumerator(name: "CURLOPT_SSL_SESSIONID_CACHE", value: 150)
!1909 = !DIEnumerator(name: "CURLOPT_SSH_AUTH_TYPES", value: 151)
!1910 = !DIEnumerator(name: "CURLOPT_SSH_PUBLIC_KEYFILE", value: 10152)
!1911 = !DIEnumerator(name: "CURLOPT_SSH_PRIVATE_KEYFILE", value: 10153)
!1912 = !DIEnumerator(name: "CURLOPT_FTP_SSL_CCC", value: 154)
!1913 = !DIEnumerator(name: "CURLOPT_TIMEOUT_MS", value: 155)
!1914 = !DIEnumerator(name: "CURLOPT_CONNECTTIMEOUT_MS", value: 156)
!1915 = !DIEnumerator(name: "CURLOPT_HTTP_TRANSFER_DECODING", value: 157)
!1916 = !DIEnumerator(name: "CURLOPT_HTTP_CONTENT_DECODING", value: 158)
!1917 = !DIEnumerator(name: "CURLOPT_NEW_FILE_PERMS", value: 159)
!1918 = !DIEnumerator(name: "CURLOPT_NEW_DIRECTORY_PERMS", value: 160)
!1919 = !DIEnumerator(name: "CURLOPT_POSTREDIR", value: 161)
!1920 = !DIEnumerator(name: "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5", value: 10162)
!1921 = !DIEnumerator(name: "CURLOPT_OPENSOCKETFUNCTION", value: 20163)
!1922 = !DIEnumerator(name: "CURLOPT_OPENSOCKETDATA", value: 10164)
!1923 = !DIEnumerator(name: "CURLOPT_COPYPOSTFIELDS", value: 10165)
!1924 = !DIEnumerator(name: "CURLOPT_PROXY_TRANSFER_MODE", value: 166)
!1925 = !DIEnumerator(name: "CURLOPT_SEEKFUNCTION", value: 20167)
!1926 = !DIEnumerator(name: "CURLOPT_SEEKDATA", value: 10168)
!1927 = !DIEnumerator(name: "CURLOPT_CRLFILE", value: 10169)
!1928 = !DIEnumerator(name: "CURLOPT_ISSUERCERT", value: 10170)
!1929 = !DIEnumerator(name: "CURLOPT_ADDRESS_SCOPE", value: 171)
!1930 = !DIEnumerator(name: "CURLOPT_CERTINFO", value: 172)
!1931 = !DIEnumerator(name: "CURLOPT_USERNAME", value: 10173)
!1932 = !DIEnumerator(name: "CURLOPT_PASSWORD", value: 10174)
!1933 = !DIEnumerator(name: "CURLOPT_PROXYUSERNAME", value: 10175)
!1934 = !DIEnumerator(name: "CURLOPT_PROXYPASSWORD", value: 10176)
!1935 = !DIEnumerator(name: "CURLOPT_NOPROXY", value: 10177)
!1936 = !DIEnumerator(name: "CURLOPT_TFTP_BLKSIZE", value: 178)
!1937 = !DIEnumerator(name: "CURLOPT_SOCKS5_GSSAPI_SERVICE", value: 10179)
!1938 = !DIEnumerator(name: "CURLOPT_SOCKS5_GSSAPI_NEC", value: 180)
!1939 = !DIEnumerator(name: "CURLOPT_PROTOCOLS", value: 181)
!1940 = !DIEnumerator(name: "CURLOPT_REDIR_PROTOCOLS", value: 182)
!1941 = !DIEnumerator(name: "CURLOPT_SSH_KNOWNHOSTS", value: 10183)
!1942 = !DIEnumerator(name: "CURLOPT_SSH_KEYFUNCTION", value: 20184)
!1943 = !DIEnumerator(name: "CURLOPT_SSH_KEYDATA", value: 10185)
!1944 = !DIEnumerator(name: "CURLOPT_MAIL_FROM", value: 10186)
!1945 = !DIEnumerator(name: "CURLOPT_MAIL_RCPT", value: 10187)
!1946 = !DIEnumerator(name: "CURLOPT_FTP_USE_PRET", value: 188)
!1947 = !DIEnumerator(name: "CURLOPT_RTSP_REQUEST", value: 189)
!1948 = !DIEnumerator(name: "CURLOPT_RTSP_SESSION_ID", value: 10190)
!1949 = !DIEnumerator(name: "CURLOPT_RTSP_STREAM_URI", value: 10191)
!1950 = !DIEnumerator(name: "CURLOPT_RTSP_TRANSPORT", value: 10192)
!1951 = !DIEnumerator(name: "CURLOPT_RTSP_CLIENT_CSEQ", value: 193)
!1952 = !DIEnumerator(name: "CURLOPT_RTSP_SERVER_CSEQ", value: 194)
!1953 = !DIEnumerator(name: "CURLOPT_INTERLEAVEDATA", value: 10195)
!1954 = !DIEnumerator(name: "CURLOPT_INTERLEAVEFUNCTION", value: 20196)
!1955 = !DIEnumerator(name: "CURLOPT_WILDCARDMATCH", value: 197)
!1956 = !DIEnumerator(name: "CURLOPT_CHUNK_BGN_FUNCTION", value: 20198)
!1957 = !DIEnumerator(name: "CURLOPT_CHUNK_END_FUNCTION", value: 20199)
!1958 = !DIEnumerator(name: "CURLOPT_FNMATCH_FUNCTION", value: 20200)
!1959 = !DIEnumerator(name: "CURLOPT_CHUNK_DATA", value: 10201)
!1960 = !DIEnumerator(name: "CURLOPT_FNMATCH_DATA", value: 10202)
!1961 = !DIEnumerator(name: "CURLOPT_RESOLVE", value: 10203)
!1962 = !DIEnumerator(name: "CURLOPT_TLSAUTH_USERNAME", value: 10204)
!1963 = !DIEnumerator(name: "CURLOPT_TLSAUTH_PASSWORD", value: 10205)
!1964 = !DIEnumerator(name: "CURLOPT_TLSAUTH_TYPE", value: 10206)
!1965 = !DIEnumerator(name: "CURLOPT_TRANSFER_ENCODING", value: 207)
!1966 = !DIEnumerator(name: "CURLOPT_CLOSESOCKETFUNCTION", value: 20208)
!1967 = !DIEnumerator(name: "CURLOPT_CLOSESOCKETDATA", value: 10209)
!1968 = !DIEnumerator(name: "CURLOPT_GSSAPI_DELEGATION", value: 210)
!1969 = !DIEnumerator(name: "CURLOPT_DNS_SERVERS", value: 10211)
!1970 = !DIEnumerator(name: "CURLOPT_ACCEPTTIMEOUT_MS", value: 212)
!1971 = !DIEnumerator(name: "CURLOPT_TCP_KEEPALIVE", value: 213)
!1972 = !DIEnumerator(name: "CURLOPT_TCP_KEEPIDLE", value: 214)
!1973 = !DIEnumerator(name: "CURLOPT_TCP_KEEPINTVL", value: 215)
!1974 = !DIEnumerator(name: "CURLOPT_SSL_OPTIONS", value: 216)
!1975 = !DIEnumerator(name: "CURLOPT_MAIL_AUTH", value: 10217)
!1976 = !DIEnumerator(name: "CURLOPT_SASL_IR", value: 218)
!1977 = !DIEnumerator(name: "CURLOPT_XFERINFOFUNCTION", value: 20219)
!1978 = !DIEnumerator(name: "CURLOPT_XOAUTH2_BEARER", value: 10220)
!1979 = !DIEnumerator(name: "CURLOPT_DNS_INTERFACE", value: 10221)
!1980 = !DIEnumerator(name: "CURLOPT_DNS_LOCAL_IP4", value: 10222)
!1981 = !DIEnumerator(name: "CURLOPT_DNS_LOCAL_IP6", value: 10223)
!1982 = !DIEnumerator(name: "CURLOPT_LOGIN_OPTIONS", value: 10224)
!1983 = !DIEnumerator(name: "CURLOPT_SSL_ENABLE_NPN", value: 225)
!1984 = !DIEnumerator(name: "CURLOPT_SSL_ENABLE_ALPN", value: 226)
!1985 = !DIEnumerator(name: "CURLOPT_EXPECT_100_TIMEOUT_MS", value: 227)
!1986 = !DIEnumerator(name: "CURLOPT_PROXYHEADER", value: 10228)
!1987 = !DIEnumerator(name: "CURLOPT_HEADEROPT", value: 229)
!1988 = !DIEnumerator(name: "CURLOPT_PINNEDPUBLICKEY", value: 10230)
!1989 = !DIEnumerator(name: "CURLOPT_UNIX_SOCKET_PATH", value: 10231)
!1990 = !DIEnumerator(name: "CURLOPT_SSL_VERIFYSTATUS", value: 232)
!1991 = !DIEnumerator(name: "CURLOPT_SSL_FALSESTART", value: 233)
!1992 = !DIEnumerator(name: "CURLOPT_PATH_AS_IS", value: 234)
!1993 = !DIEnumerator(name: "CURLOPT_PROXY_SERVICE_NAME", value: 10235)
!1994 = !DIEnumerator(name: "CURLOPT_SERVICE_NAME", value: 10236)
!1995 = !DIEnumerator(name: "CURLOPT_PIPEWAIT", value: 237)
!1996 = !DIEnumerator(name: "CURLOPT_DEFAULT_PROTOCOL", value: 10238)
!1997 = !DIEnumerator(name: "CURLOPT_STREAM_WEIGHT", value: 239)
!1998 = !DIEnumerator(name: "CURLOPT_STREAM_DEPENDS", value: 10240)
!1999 = !DIEnumerator(name: "CURLOPT_STREAM_DEPENDS_E", value: 10241)
!2000 = !DIEnumerator(name: "CURLOPT_TFTP_NO_OPTIONS", value: 242)
!2001 = !DIEnumerator(name: "CURLOPT_CONNECT_TO", value: 10243)
!2002 = !DIEnumerator(name: "CURLOPT_TCP_FASTOPEN", value: 244)
!2003 = !DIEnumerator(name: "CURLOPT_KEEP_SENDING_ON_ERROR", value: 245)
!2004 = !DIEnumerator(name: "CURLOPT_PROXY_CAINFO", value: 10246)
!2005 = !DIEnumerator(name: "CURLOPT_PROXY_CAPATH", value: 10247)
!2006 = !DIEnumerator(name: "CURLOPT_PROXY_SSL_VERIFYPEER", value: 248)
!2007 = !DIEnumerator(name: "CURLOPT_PROXY_SSL_VERIFYHOST", value: 249)
!2008 = !DIEnumerator(name: "CURLOPT_PROXY_SSLVERSION", value: 250)
!2009 = !DIEnumerator(name: "CURLOPT_PROXY_TLSAUTH_USERNAME", value: 10251)
!2010 = !DIEnumerator(name: "CURLOPT_PROXY_TLSAUTH_PASSWORD", value: 10252)
!2011 = !DIEnumerator(name: "CURLOPT_PROXY_TLSAUTH_TYPE", value: 10253)
!2012 = !DIEnumerator(name: "CURLOPT_PROXY_SSLCERT", value: 10254)
!2013 = !DIEnumerator(name: "CURLOPT_PROXY_SSLCERTTYPE", value: 10255)
!2014 = !DIEnumerator(name: "CURLOPT_PROXY_SSLKEY", value: 10256)
!2015 = !DIEnumerator(name: "CURLOPT_PROXY_SSLKEYTYPE", value: 10257)
!2016 = !DIEnumerator(name: "CURLOPT_PROXY_KEYPASSWD", value: 10258)
!2017 = !DIEnumerator(name: "CURLOPT_PROXY_SSL_CIPHER_LIST", value: 10259)
!2018 = !DIEnumerator(name: "CURLOPT_PROXY_CRLFILE", value: 10260)
!2019 = !DIEnumerator(name: "CURLOPT_PROXY_SSL_OPTIONS", value: 261)
!2020 = !DIEnumerator(name: "CURLOPT_PRE_PROXY", value: 10262)
!2021 = !DIEnumerator(name: "CURLOPT_PROXY_PINNEDPUBLICKEY", value: 10263)
!2022 = !DIEnumerator(name: "CURLOPT_ABSTRACT_UNIX_SOCKET", value: 10264)
!2023 = !DIEnumerator(name: "CURLOPT_SUPPRESS_CONNECT_HEADERS", value: 265)
!2024 = !DIEnumerator(name: "CURLOPT_LASTENTRY", value: 266)
!2025 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 1828, size: 32, align: 32, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031, !2032, !2033}
!2027 = !DIEnumerator(name: "CURL_HTTP_VERSION_NONE", value: 0)
!2028 = !DIEnumerator(name: "CURL_HTTP_VERSION_1_0", value: 1)
!2029 = !DIEnumerator(name: "CURL_HTTP_VERSION_1_1", value: 2)
!2030 = !DIEnumerator(name: "CURL_HTTP_VERSION_2_0", value: 3)
!2031 = !DIEnumerator(name: "CURL_HTTP_VERSION_2TLS", value: 4)
!2032 = !DIEnumerator(name: "CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE", value: 5)
!2033 = !DIEnumerator(name: "CURL_HTTP_VERSION_LAST", value: 6)
!2034 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2035, line: 28, size: 32, align: 32, elements: !2036)
!2035 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/progress.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2036 = !{!2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048}
!2037 = !DIEnumerator(name: "TIMER_NONE", value: 0)
!2038 = !DIEnumerator(name: "TIMER_STARTOP", value: 1)
!2039 = !DIEnumerator(name: "TIMER_STARTSINGLE", value: 2)
!2040 = !DIEnumerator(name: "TIMER_NAMELOOKUP", value: 3)
!2041 = !DIEnumerator(name: "TIMER_CONNECT", value: 4)
!2042 = !DIEnumerator(name: "TIMER_APPCONNECT", value: 5)
!2043 = !DIEnumerator(name: "TIMER_PRETRANSFER", value: 6)
!2044 = !DIEnumerator(name: "TIMER_STARTTRANSFER", value: 7)
!2045 = !DIEnumerator(name: "TIMER_POSTRANSFER", value: 8)
!2046 = !DIEnumerator(name: "TIMER_STARTACCEPT", value: 9)
!2047 = !DIEnumerator(name: "TIMER_REDIRECT", value: 10)
!2048 = !DIEnumerator(name: "TIMER_LAST", value: 11)
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2050, line: 46, size: 32, align: 32, elements: !2051)
!2050 = !DIFile(filename: "/usr/include/ctype.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063}
!2052 = !DIEnumerator(name: "_ISupper", value: 256)
!2053 = !DIEnumerator(name: "_ISlower", value: 512)
!2054 = !DIEnumerator(name: "_ISalpha", value: 1024)
!2055 = !DIEnumerator(name: "_ISdigit", value: 2048)
!2056 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!2057 = !DIEnumerator(name: "_ISspace", value: 8192)
!2058 = !DIEnumerator(name: "_ISprint", value: 16384)
!2059 = !DIEnumerator(name: "_ISgraph", value: 32768)
!2060 = !DIEnumerator(name: "_ISblank", value: 1)
!2061 = !DIEnumerator(name: "_IScntrl", value: 2)
!2062 = !DIEnumerator(name: "_ISpunct", value: 4)
!2063 = !DIEnumerator(name: "_ISalnum", value: 8)
!2064 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !2065, line: 24, size: 32, align: 32, elements: !2066)
!2065 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075}
!2067 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!2068 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!2069 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!2070 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!2071 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!2072 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!2073 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!2074 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!2075 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!2076 = !{!1716, !311, !703, !710, !349, !912, !963, !854, !599, !347, !500, !904, !994, !986, !316, !256, !501, !1686, !342, !457, !657, !2077}
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64, align: 64)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!2079 = !{!2080, !2084, !2087, !2090, !2094, !2098, !2109, !2110, !2113, !2116, !2119, !2122, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2136, !2139, !2142, !2145, !2149, !2150, !2153, !2157, !2160, !2161, !2162, !2165, !2168, !2171, !2172, !2173, !2176, !2179, !2182, !2183, !2184, !2187, !2190, !2193, !2196, !2199, !2202, !2203, !2204, !2205, !2208, !2211, !2214, !2217, !2220, !2223, !2226, !2231, !2236, !2239, !2242}
!2080 = distinct !DISubprogram(name: "Curl_freeset", scope: !1, file: !1, line: 269, type: !2081, isLocal: false, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !256}
!2083 = !{}
!2084 = distinct !DISubprogram(name: "Curl_dupset", scope: !1, file: !1, line: 347, type: !2085, isLocal: false, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!289, !256, !256}
!2087 = distinct !DISubprogram(name: "Curl_close", scope: !1, file: !1, line: 390, type: !2088, isLocal: false, isDefinition: true, scopeLine: 391, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!289, !256}
!2090 = distinct !DISubprogram(name: "Curl_init_userdefined", scope: !1, file: !1, line: 490, type: !2091, isLocal: false, isDefinition: true, scopeLine: 491, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!289, !2093}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64, align: 64)
!2094 = distinct !DISubprogram(name: "Curl_open", scope: !1, file: !1, line: 623, type: !2095, isLocal: false, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!289, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!2098 = distinct !DISubprogram(name: "Curl_setopt", scope: !1, file: !1, line: 695, type: !2099, isLocal: false, isDefinition: true, scopeLine: 697, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!289, !256, !2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLoption", file: !15, line: 1786, baseType: !1775)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64, align: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 690, size: 192, align: 64, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2103, file: !1, line: 690, baseType: !457, size: 32, align: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2103, file: !1, line: 690, baseType: !457, size: 32, align: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2103, file: !1, line: 690, baseType: !311, size: 64, align: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2103, file: !1, line: 690, baseType: !311, size: 64, align: 64, offset: 128)
!2109 = distinct !DISubprogram(name: "Curl_disconnect", scope: !1, file: !1, line: 3023, type: !1491, isLocal: false, isDefinition: true, scopeLine: 3024, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2110 = distinct !DISubprogram(name: "Curl_removeHandleFromPipeline", scope: !1, file: !1, line: 3128, type: !2111, isLocal: false, isDefinition: true, scopeLine: 3130, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!316, !256, !329}
!2113 = distinct !DISubprogram(name: "Curl_getoff_all_pipelines", scope: !1, file: !1, line: 3173, type: !2114, isLocal: false, isDefinition: true, scopeLine: 3175, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !256, !262}
!2116 = distinct !DISubprogram(name: "Curl_oldest_idle_connection", scope: !1, file: !1, line: 3222, type: !2117, isLocal: false, isDefinition: true, scopeLine: 3223, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!262, !256}
!2119 = distinct !DISubprogram(name: "Curl_connected_proxy", scope: !1, file: !1, line: 3824, type: !2120, isLocal: false, isDefinition: true, scopeLine: 3825, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!289, !262, !316}
!2122 = distinct !DISubprogram(name: "Curl_verboseconnect", scope: !1, file: !1, line: 3874, type: !2123, isLocal: false, isDefinition: true, scopeLine: 3875, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !262}
!2125 = distinct !DISubprogram(name: "Curl_protocol_getsock", scope: !1, file: !1, line: 3886, type: !1478, isLocal: false, isDefinition: true, scopeLine: 3889, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2126 = distinct !DISubprogram(name: "Curl_doing_getsock", scope: !1, file: !1, line: 3895, type: !1478, isLocal: false, isDefinition: true, scopeLine: 3898, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2127 = distinct !DISubprogram(name: "Curl_protocol_connecting", scope: !1, file: !1, line: 3910, type: !1459, isLocal: false, isDefinition: true, scopeLine: 3912, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2128 = distinct !DISubprogram(name: "Curl_protocol_doing", scope: !1, file: !1, line: 3930, type: !1459, isLocal: false, isDefinition: true, scopeLine: 3931, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2129 = distinct !DISubprogram(name: "Curl_protocol_connect", scope: !1, file: !1, line: 3949, type: !1459, isLocal: false, isDefinition: true, scopeLine: 3951, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2130 = distinct !DISubprogram(name: "Curl_free_request_state", scope: !1, file: !1, line: 4802, type: !2081, isLocal: false, isDefinition: true, scopeLine: 4803, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2131 = distinct !DISubprogram(name: "Curl_setup_conn", scope: !1, file: !1, line: 6807, type: !1459, isLocal: false, isDefinition: true, scopeLine: 6809, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2132 = distinct !DISubprogram(name: "Curl_connect", scope: !1, file: !1, line: 6885, type: !2133, isLocal: false, isDefinition: true, scopeLine: 6889, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!289, !256, !2135, !1461, !1461}
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64, align: 64)
!2136 = distinct !DISubprogram(name: "Curl_init_do", scope: !1, file: !1, line: 6935, type: !2137, isLocal: false, isDefinition: true, scopeLine: 6936, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!289, !256, !262}
!2139 = distinct !DISubprogram(name: "setstropt", scope: !1, file: !1, line: 289, type: !2140, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!289, !1562, !527}
!2142 = distinct !DISubprogram(name: "setstropt_userpwd", scope: !1, file: !1, line: 308, type: !2143, isLocal: true, isDefinition: true, scopeLine: 309, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!289, !500, !1562, !1562}
!2145 = distinct !DISubprogram(name: "parse_login_details", scope: !1, file: !1, line: 5497, type: !2146, isLocal: true, isDefinition: true, scopeLine: 5500, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!289, !527, !2148, !1562, !1562, !1562}
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!2149 = distinct !DISubprogram(name: "conn_free", scope: !1, file: !1, line: 2943, type: !2123, isLocal: true, isDefinition: true, scopeLine: 2944, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2150 = distinct !DISubprogram(name: "signalPipeClose", scope: !1, file: !1, line: 3187, type: !2151, isLocal: true, isDefinition: true, scopeLine: 3188, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{null, !329, !423}
!2153 = distinct !DISubprogram(name: "free_fixed_hostname", scope: !1, file: !1, line: 4083, type: !2154, isLocal: true, isDefinition: true, scopeLine: 4084, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{null, !2156}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!2157 = distinct !DISubprogram(name: "create_conn", scope: !1, file: !1, line: 6257, type: !2158, isLocal: true, isDefinition: true, scopeLine: 6260, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!289, !256, !2135, !1461}
!2160 = distinct !DISubprogram(name: "allocate_conn", scope: !1, file: !1, line: 4110, type: !2117, isLocal: true, isDefinition: true, scopeLine: 4111, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2161 = distinct !DISubprogram(name: "llist_dtor", scope: !1, file: !1, line: 4100, type: !344, isLocal: true, isDefinition: true, scopeLine: 4101, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2162 = distinct !DISubprogram(name: "parseurlandfillconn", scope: !1, file: !1, line: 4290, type: !2163, isLocal: true, isDefinition: true, scopeLine: 4295, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!289, !256, !262, !1461, !1562, !1562, !1562}
!2165 = distinct !DISubprogram(name: "findprotocol", scope: !1, file: !1, line: 4245, type: !2166, isLocal: true, isDefinition: true, scopeLine: 4248, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!289, !256, !262, !527}
!2168 = distinct !DISubprogram(name: "parse_url_login", scope: !1, file: !1, line: 5367, type: !2169, isLocal: true, isDefinition: true, scopeLine: 5370, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!289, !256, !262, !1562, !1562, !1562}
!2171 = distinct !DISubprogram(name: "create_conn_helper_init_proxy", scope: !1, file: !1, line: 5190, type: !1455, isLocal: true, isDefinition: true, scopeLine: 5191, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2172 = distinct !DISubprogram(name: "parse_proxy_auth", scope: !1, file: !1, line: 5162, type: !2137, isLocal: true, isDefinition: true, scopeLine: 5164, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2173 = distinct !DISubprogram(name: "check_noproxy", scope: !1, file: !1, line: 4814, type: !2174, isLocal: true, isDefinition: true, scopeLine: 4815, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!423, !527, !527}
!2176 = distinct !DISubprogram(name: "detect_proxy", scope: !1, file: !1, line: 4890, type: !2177, isLocal: true, isDefinition: true, scopeLine: 4891, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!500, !262}
!2179 = distinct !DISubprogram(name: "parse_proxy", scope: !1, file: !1, line: 4961, type: !2180, isLocal: true, isDefinition: true, scopeLine: 4964, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{!289, !256, !262, !500, !904}
!2182 = distinct !DISubprogram(name: "parse_remote_port", scope: !1, file: !1, line: 5609, type: !2137, isLocal: true, isDefinition: true, scopeLine: 5611, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2183 = distinct !DISubprogram(name: "override_login", scope: !1, file: !1, line: 5727, type: !2169, isLocal: true, isDefinition: true, scopeLine: 5730, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2184 = distinct !DISubprogram(name: "set_login", scope: !1, file: !1, line: 5781, type: !2185, isLocal: true, isDefinition: true, scopeLine: 5784, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!289, !262, !527, !527, !527}
!2187 = distinct !DISubprogram(name: "parse_connect_to_slist", scope: !1, file: !1, line: 5995, type: !2188, isLocal: true, isDefinition: true, scopeLine: 5998, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!289, !256, !262, !817}
!2190 = distinct !DISubprogram(name: "parse_connect_to_string", scope: !1, file: !1, line: 5925, type: !2191, isLocal: true, isDefinition: true, scopeLine: 5930, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!289, !256, !262, !527, !1562, !1472}
!2193 = distinct !DISubprogram(name: "parse_connect_to_host_port", scope: !1, file: !1, line: 5830, type: !2194, isLocal: true, isDefinition: true, scopeLine: 5834, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!289, !256, !527, !1562, !1472}
!2196 = distinct !DISubprogram(name: "fix_hostname", scope: !1, file: !1, line: 4020, type: !2197, isLocal: true, isDefinition: true, scopeLine: 4021, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{null, !262, !2156}
!2199 = distinct !DISubprogram(name: "is_ASCII_name", scope: !1, file: !1, line: 4006, type: !2200, isLocal: true, isDefinition: true, scopeLine: 4007, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!423, !527}
!2202 = distinct !DISubprogram(name: "setup_connection_internals", scope: !1, file: !1, line: 4759, type: !1455, isLocal: true, isDefinition: true, scopeLine: 4760, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2203 = distinct !DISubprogram(name: "setup_range", scope: !1, file: !1, line: 4722, type: !2088, isLocal: true, isDefinition: true, scopeLine: 4723, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2204 = distinct !DISubprogram(name: "prune_dead_connections", scope: !1, file: !1, line: 3371, type: !2081, isLocal: true, isDefinition: true, scopeLine: 3372, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2205 = distinct !DISubprogram(name: "call_disconnect_if_dead", scope: !1, file: !1, line: 3358, type: !2206, isLocal: true, isDefinition: true, scopeLine: 3360, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!316, !262, !311}
!2208 = distinct !DISubprogram(name: "disconnect_if_dead", scope: !1, file: !1, line: 3326, type: !2209, isLocal: true, isDefinition: true, scopeLine: 3328, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!423, !262, !256}
!2211 = distinct !DISubprogram(name: "SocketIsDead", scope: !1, file: !1, line: 3089, type: !2212, isLocal: true, isDefinition: true, scopeLine: 3090, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!423, !315}
!2214 = distinct !DISubprogram(name: "ConnectionExists", scope: !1, file: !1, line: 3403, type: !2215, isLocal: true, isDefinition: true, scopeLine: 3408, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!423, !256, !262, !2135, !1461, !1461}
!2217 = distinct !DISubprogram(name: "max_pipeline_length", scope: !1, file: !1, line: 3384, type: !2218, isLocal: true, isDefinition: true, scopeLine: 3385, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!347, !375}
!2220 = distinct !DISubprogram(name: "gethandleathead", scope: !1, file: !1, line: 3161, type: !2221, isLocal: true, isDefinition: true, scopeLine: 3162, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!256, !329}
!2223 = distinct !DISubprogram(name: "get_protocol_family", scope: !1, file: !1, line: 6988, type: !2224, isLocal: true, isDefinition: true, scopeLine: 6989, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!457, !457}
!2226 = distinct !DISubprogram(name: "proxy_info_matches", scope: !1, file: !1, line: 3267, type: !2227, isLocal: true, isDefinition: true, scopeLine: 3269, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!423, !2229, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64, align: 64)
!2230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!2231 = distinct !DISubprogram(name: "IsPipeliningPossible", scope: !1, file: !1, line: 3106, type: !2232, isLocal: true, isDefinition: true, scopeLine: 3108, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{!423, !2234, !1487}
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64, align: 64)
!2235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !257)
!2236 = distinct !DISubprogram(name: "reuse_conn", scope: !1, file: !1, line: 6157, type: !2237, isLocal: true, isDefinition: true, scopeLine: 6159, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{null, !262, !262}
!2239 = distinct !DISubprogram(name: "find_oldest_idle_connection_in_bundle", scope: !1, file: !1, line: 3287, type: !2240, isLocal: true, isDefinition: true, scopeLine: 3289, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!262, !256, !1705}
!2242 = distinct !DISubprogram(name: "resolve_server", scope: !1, file: !1, line: 6042, type: !2243, isLocal: true, isDefinition: true, scopeLine: 6045, flags: DIFlagPrototyped, isOptimized: false, variables: !2083)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!289, !256, !262, !1461}
!2245 = !{!2246, !2247}
!2246 = !DIGlobalVariable(name: "Curl_handler_dummy", scope: !0, file: !1, line: 249, type: !1449, isLocal: true, isDefinition: true, variable: %struct.Curl_handler* @Curl_handler_dummy)
!2247 = !DIGlobalVariable(name: "protocols", scope: !0, file: !1, line: 147, type: !2248, isLocal: true, isDefinition: true, variable: [4 x %struct.Curl_handler*]* @protocols)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2249, size: 256, align: 64, elements: !2250)
!2249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1448)
!2250 = !{!2251}
!2251 = !DISubrange(count: 4)
!2252 = !{i32 2, !"Dwarf Version", i32 4}
!2253 = !{i32 2, !"Debug Info Version", i32 3}
!2254 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!2255 = !DILocalVariable(name: "data", arg: 1, scope: !2080, file: !1, line: 269, type: !256)
!2256 = !DIExpression()
!2257 = !DILocation(line: 269, column: 37, scope: !2080)
!2258 = !DILocalVariable(name: "i", scope: !2080, file: !1, line: 272, type: !1716)
!2259 = !DILocation(line: 272, column: 18, scope: !2080)
!2260 = !DILocation(line: 273, column: 8, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2080, file: !1, line: 273, column: 3)
!2262 = !DILocation(line: 273, column: 7, scope: !2261)
!2263 = !DILocation(line: 273, column: 28, scope: !2264)
!2264 = !DILexicalBlockFile(scope: !2265, file: !1, discriminator: 1)
!2265 = distinct !DILexicalBlock(scope: !2261, file: !1, line: 273, column: 3)
!2266 = !DILocation(line: 273, column: 30, scope: !2264)
!2267 = !DILocation(line: 273, column: 3, scope: !2264)
!2268 = !DILocation(line: 274, column: 5, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2265, file: !1, line: 273, column: 50)
!2270 = !DILocation(line: 274, column: 5, scope: !2271)
!2271 = !DILexicalBlockFile(scope: !2272, file: !1, discriminator: 1)
!2272 = distinct !DILexicalBlock(scope: !2269, file: !1, line: 274, column: 5)
!2273 = !DILocation(line: 275, column: 3, scope: !2269)
!2274 = !DILocation(line: 273, column: 46, scope: !2275)
!2275 = !DILexicalBlockFile(scope: !2265, file: !1, discriminator: 2)
!2276 = !DILocation(line: 273, column: 3, scope: !2275)
!2277 = !DILocation(line: 277, column: 6, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2080, file: !1, line: 277, column: 6)
!2279 = !DILocation(line: 277, column: 12, scope: !2278)
!2280 = !DILocation(line: 277, column: 19, scope: !2278)
!2281 = !DILocation(line: 277, column: 6, scope: !2080)
!2282 = !DILocation(line: 278, column: 5, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2278, file: !1, line: 277, column: 34)
!2284 = !DILocation(line: 278, column: 5, scope: !2285)
!2285 = !DILexicalBlockFile(scope: !2286, file: !1, discriminator: 1)
!2286 = distinct !DILexicalBlock(scope: !2283, file: !1, line: 278, column: 5)
!2287 = !DILocation(line: 279, column: 5, scope: !2283)
!2288 = !DILocation(line: 279, column: 11, scope: !2283)
!2289 = !DILocation(line: 279, column: 18, scope: !2283)
!2290 = !DILocation(line: 279, column: 32, scope: !2283)
!2291 = !DILocation(line: 280, column: 3, scope: !2283)
!2292 = !DILocation(line: 281, column: 3, scope: !2080)
!2293 = !DILocation(line: 281, column: 9, scope: !2080)
!2294 = !DILocation(line: 281, column: 16, scope: !2080)
!2295 = !DILocation(line: 281, column: 24, scope: !2080)
!2296 = !DILocation(line: 282, column: 6, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2080, file: !1, line: 282, column: 6)
!2298 = !DILocation(line: 282, column: 12, scope: !2297)
!2299 = !DILocation(line: 282, column: 19, scope: !2297)
!2300 = !DILocation(line: 282, column: 6, scope: !2080)
!2301 = !DILocation(line: 283, column: 5, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2297, file: !1, line: 282, column: 30)
!2303 = !DILocation(line: 283, column: 5, scope: !2304)
!2304 = !DILexicalBlockFile(scope: !2305, file: !1, discriminator: 1)
!2305 = distinct !DILexicalBlock(scope: !2302, file: !1, line: 283, column: 5)
!2306 = !DILocation(line: 284, column: 5, scope: !2302)
!2307 = !DILocation(line: 284, column: 11, scope: !2302)
!2308 = !DILocation(line: 284, column: 18, scope: !2302)
!2309 = !DILocation(line: 284, column: 28, scope: !2302)
!2310 = !DILocation(line: 285, column: 3, scope: !2302)
!2311 = !DILocation(line: 286, column: 3, scope: !2080)
!2312 = !DILocation(line: 286, column: 9, scope: !2080)
!2313 = !DILocation(line: 286, column: 16, scope: !2080)
!2314 = !DILocation(line: 286, column: 20, scope: !2080)
!2315 = !DILocation(line: 287, column: 1, scope: !2080)
!2316 = !DILocalVariable(name: "dst", arg: 1, scope: !2084, file: !1, line: 347, type: !256)
!2317 = !DILocation(line: 347, column: 40, scope: !2084)
!2318 = !DILocalVariable(name: "src", arg: 2, scope: !2084, file: !1, line: 347, type: !256)
!2319 = !DILocation(line: 347, column: 63, scope: !2084)
!2320 = !DILocalVariable(name: "result", scope: !2084, file: !1, line: 349, type: !289)
!2321 = !DILocation(line: 349, column: 12, scope: !2084)
!2322 = !DILocalVariable(name: "i", scope: !2084, file: !1, line: 350, type: !1716)
!2323 = !DILocation(line: 350, column: 18, scope: !2084)
!2324 = !DILocation(line: 354, column: 3, scope: !2084)
!2325 = !DILocation(line: 354, column: 8, scope: !2084)
!2326 = !DILocation(line: 354, column: 14, scope: !2084)
!2327 = !DILocation(line: 354, column: 19, scope: !2084)
!2328 = !DILocation(line: 357, column: 10, scope: !2084)
!2329 = !DILocation(line: 357, column: 15, scope: !2084)
!2330 = !DILocation(line: 357, column: 19, scope: !2084)
!2331 = !DILocation(line: 357, column: 3, scope: !2084)
!2332 = !DILocation(line: 360, column: 8, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 360, column: 3)
!2334 = !DILocation(line: 360, column: 7, scope: !2333)
!2335 = !DILocation(line: 360, column: 28, scope: !2336)
!2336 = !DILexicalBlockFile(scope: !2337, file: !1, discriminator: 1)
!2337 = distinct !DILexicalBlock(scope: !2333, file: !1, line: 360, column: 3)
!2338 = !DILocation(line: 360, column: 29, scope: !2336)
!2339 = !DILocation(line: 360, column: 3, scope: !2336)
!2340 = !DILocation(line: 361, column: 38, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2337, file: !1, line: 360, column: 63)
!2342 = !DILocation(line: 361, column: 25, scope: !2341)
!2343 = !DILocation(line: 361, column: 30, scope: !2341)
!2344 = !DILocation(line: 361, column: 34, scope: !2341)
!2345 = !DILocation(line: 361, column: 55, scope: !2341)
!2346 = !DILocation(line: 361, column: 42, scope: !2341)
!2347 = !DILocation(line: 361, column: 47, scope: !2341)
!2348 = !DILocation(line: 361, column: 51, scope: !2341)
!2349 = !DILocation(line: 361, column: 14, scope: !2341)
!2350 = !DILocation(line: 361, column: 12, scope: !2341)
!2351 = !DILocation(line: 362, column: 8, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2341, file: !1, line: 362, column: 8)
!2353 = !DILocation(line: 362, column: 8, scope: !2341)
!2354 = !DILocation(line: 363, column: 14, scope: !2352)
!2355 = !DILocation(line: 363, column: 7, scope: !2352)
!2356 = !DILocation(line: 364, column: 3, scope: !2341)
!2357 = !DILocation(line: 360, column: 59, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2337, file: !1, discriminator: 2)
!2359 = !DILocation(line: 360, column: 3, scope: !2358)
!2360 = !DILocation(line: 367, column: 5, scope: !2084)
!2361 = !DILocation(line: 368, column: 6, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 368, column: 6)
!2363 = !DILocation(line: 368, column: 11, scope: !2362)
!2364 = !DILocation(line: 368, column: 15, scope: !2362)
!2365 = !DILocation(line: 368, column: 29, scope: !2362)
!2366 = !DILocation(line: 368, column: 45, scope: !2367)
!2367 = !DILexicalBlockFile(scope: !2362, file: !1, discriminator: 1)
!2368 = !DILocation(line: 368, column: 32, scope: !2367)
!2369 = !DILocation(line: 368, column: 37, scope: !2367)
!2370 = !DILocation(line: 368, column: 41, scope: !2367)
!2371 = !DILocation(line: 368, column: 6, scope: !2367)
!2372 = !DILocation(line: 370, column: 48, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2362, file: !1, line: 368, column: 49)
!2374 = !DILocation(line: 370, column: 35, scope: !2373)
!2375 = !DILocation(line: 370, column: 40, scope: !2373)
!2376 = !DILocation(line: 370, column: 44, scope: !2373)
!2377 = !DILocation(line: 371, column: 48, scope: !2373)
!2378 = !DILocation(line: 371, column: 53, scope: !2373)
!2379 = !DILocation(line: 371, column: 57, scope: !2373)
!2380 = !DILocation(line: 371, column: 35, scope: !2373)
!2381 = !DILocation(line: 370, column: 23, scope: !2373)
!2382 = !DILocation(line: 370, column: 18, scope: !2373)
!2383 = !DILocation(line: 370, column: 5, scope: !2373)
!2384 = !DILocation(line: 370, column: 10, scope: !2373)
!2385 = !DILocation(line: 370, column: 14, scope: !2373)
!2386 = !DILocation(line: 370, column: 21, scope: !2373)
!2387 = !DILocation(line: 372, column: 22, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2373, file: !1, line: 372, column: 8)
!2389 = !DILocation(line: 372, column: 9, scope: !2388)
!2390 = !DILocation(line: 372, column: 14, scope: !2388)
!2391 = !DILocation(line: 372, column: 18, scope: !2388)
!2392 = !DILocation(line: 372, column: 8, scope: !2373)
!2393 = !DILocation(line: 373, column: 7, scope: !2388)
!2394 = !DILocation(line: 375, column: 40, scope: !2373)
!2395 = !DILocation(line: 375, column: 27, scope: !2373)
!2396 = !DILocation(line: 375, column: 32, scope: !2373)
!2397 = !DILocation(line: 375, column: 36, scope: !2373)
!2398 = !DILocation(line: 375, column: 5, scope: !2373)
!2399 = !DILocation(line: 375, column: 10, scope: !2373)
!2400 = !DILocation(line: 375, column: 14, scope: !2373)
!2401 = !DILocation(line: 375, column: 25, scope: !2373)
!2402 = !DILocation(line: 376, column: 3, scope: !2373)
!2403 = !DILocation(line: 378, column: 3, scope: !2084)
!2404 = !DILocation(line: 379, column: 1, scope: !2084)
!2405 = !DILocalVariable(name: "charp", arg: 1, scope: !2139, file: !1, line: 289, type: !1562)
!2406 = !DILocation(line: 289, column: 34, scope: !2139)
!2407 = !DILocalVariable(name: "s", arg: 2, scope: !2139, file: !1, line: 289, type: !527)
!2408 = !DILocation(line: 289, column: 53, scope: !2139)
!2409 = !DILocation(line: 294, column: 3, scope: !2139)
!2410 = !DILocation(line: 294, column: 3, scope: !2411)
!2411 = !DILexicalBlockFile(scope: !2412, file: !1, discriminator: 1)
!2412 = distinct !DILexicalBlock(scope: !2139, file: !1, line: 294, column: 3)
!2413 = !DILocation(line: 296, column: 6, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2139, file: !1, line: 296, column: 6)
!2415 = !DILocation(line: 296, column: 6, scope: !2139)
!2416 = !DILocalVariable(name: "str", scope: !2417, file: !1, line: 297, type: !500)
!2417 = distinct !DILexicalBlock(scope: !2414, file: !1, line: 296, column: 9)
!2418 = !DILocation(line: 297, column: 11, scope: !2417)
!2419 = !DILocation(line: 297, column: 17, scope: !2417)
!2420 = !DILocation(line: 299, column: 9, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2417, file: !1, line: 299, column: 8)
!2422 = !DILocation(line: 299, column: 8, scope: !2417)
!2423 = !DILocation(line: 300, column: 7, scope: !2421)
!2424 = !DILocation(line: 302, column: 14, scope: !2417)
!2425 = !DILocation(line: 302, column: 6, scope: !2417)
!2426 = !DILocation(line: 302, column: 12, scope: !2417)
!2427 = !DILocation(line: 303, column: 3, scope: !2417)
!2428 = !DILocation(line: 305, column: 3, scope: !2139)
!2429 = !DILocation(line: 306, column: 1, scope: !2139)
!2430 = !DILocalVariable(name: "data", arg: 1, scope: !2087, file: !1, line: 390, type: !256)
!2431 = !DILocation(line: 390, column: 39, scope: !2087)
!2432 = !DILocalVariable(name: "m", scope: !2087, file: !1, line: 392, type: !375)
!2433 = !DILocation(line: 392, column: 22, scope: !2087)
!2434 = !DILocation(line: 394, column: 7, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 394, column: 6)
!2436 = !DILocation(line: 394, column: 6, scope: !2087)
!2437 = !DILocation(line: 395, column: 5, scope: !2435)
!2438 = !DILocation(line: 397, column: 21, scope: !2087)
!2439 = !DILocation(line: 397, column: 3, scope: !2087)
!2440 = !DILocation(line: 399, column: 7, scope: !2087)
!2441 = !DILocation(line: 399, column: 13, scope: !2087)
!2442 = !DILocation(line: 399, column: 5, scope: !2087)
!2443 = !DILocation(line: 401, column: 6, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 401, column: 6)
!2445 = !DILocation(line: 401, column: 6, scope: !2087)
!2446 = !DILocation(line: 404, column: 30, scope: !2444)
!2447 = !DILocation(line: 404, column: 36, scope: !2444)
!2448 = !DILocation(line: 404, column: 43, scope: !2444)
!2449 = !DILocation(line: 404, column: 5, scope: !2444)
!2450 = !DILocation(line: 406, column: 6, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 406, column: 6)
!2452 = !DILocation(line: 406, column: 12, scope: !2451)
!2453 = !DILocation(line: 406, column: 6, scope: !2087)
!2454 = !DILocation(line: 409, column: 24, scope: !2451)
!2455 = !DILocation(line: 409, column: 30, scope: !2451)
!2456 = !DILocation(line: 409, column: 5, scope: !2451)
!2457 = !DILocation(line: 414, column: 23, scope: !2087)
!2458 = !DILocation(line: 414, column: 29, scope: !2087)
!2459 = !DILocation(line: 414, column: 35, scope: !2087)
!2460 = !DILocation(line: 414, column: 3, scope: !2087)
!2461 = !DILocation(line: 416, column: 3, scope: !2087)
!2462 = !DILocation(line: 416, column: 9, scope: !2087)
!2463 = !DILocation(line: 416, column: 15, scope: !2087)
!2464 = !DILocation(line: 420, column: 6, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 420, column: 6)
!2466 = !DILocation(line: 420, column: 12, scope: !2465)
!2467 = !DILocation(line: 420, column: 18, scope: !2465)
!2468 = !DILocation(line: 420, column: 6, scope: !2087)
!2469 = !DILocation(line: 421, column: 5, scope: !2465)
!2470 = !DILocation(line: 424, column: 3, scope: !2087)
!2471 = !DILocation(line: 424, column: 3, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !2473, file: !1, discriminator: 1)
!2473 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 424, column: 3)
!2474 = !DILocation(line: 425, column: 3, scope: !2087)
!2475 = !DILocation(line: 425, column: 9, scope: !2087)
!2476 = !DILocation(line: 425, column: 15, scope: !2087)
!2477 = !DILocation(line: 425, column: 20, scope: !2087)
!2478 = !DILocation(line: 428, column: 27, scope: !2087)
!2479 = !DILocation(line: 428, column: 3, scope: !2087)
!2480 = !DILocation(line: 431, column: 3, scope: !2087)
!2481 = !DILocation(line: 431, column: 3, scope: !2482)
!2482 = !DILexicalBlockFile(scope: !2483, file: !1, discriminator: 1)
!2483 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 431, column: 3)
!2484 = !DILocation(line: 432, column: 3, scope: !2087)
!2485 = !DILocation(line: 432, column: 3, scope: !2486)
!2486 = !DILexicalBlockFile(scope: !2487, file: !1, discriminator: 1)
!2487 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 432, column: 3)
!2488 = !DILocation(line: 433, column: 3, scope: !2087)
!2489 = !DILocation(line: 433, column: 3, scope: !2490)
!2490 = !DILexicalBlockFile(scope: !2491, file: !1, discriminator: 1)
!2491 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 433, column: 3)
!2492 = !DILocation(line: 434, column: 3, scope: !2087)
!2493 = !DILocation(line: 434, column: 3, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !2495, file: !1, discriminator: 1)
!2495 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 434, column: 3)
!2496 = !DILocation(line: 437, column: 3, scope: !2087)
!2497 = !DILocation(line: 438, column: 3, scope: !2087)
!2498 = !DILocation(line: 438, column: 9, scope: !2087)
!2499 = !DILocation(line: 438, column: 13, scope: !2087)
!2500 = !DILocation(line: 438, column: 20, scope: !2087)
!2501 = !DILocation(line: 440, column: 6, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 440, column: 6)
!2503 = !DILocation(line: 440, column: 12, scope: !2502)
!2504 = !DILocation(line: 440, column: 19, scope: !2502)
!2505 = !DILocation(line: 440, column: 6, scope: !2087)
!2506 = !DILocation(line: 441, column: 5, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 440, column: 34)
!2508 = !DILocation(line: 441, column: 5, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !2510, file: !1, discriminator: 1)
!2510 = distinct !DILexicalBlock(scope: !2507, file: !1, line: 441, column: 5)
!2511 = !DILocation(line: 442, column: 5, scope: !2507)
!2512 = !DILocation(line: 442, column: 11, scope: !2507)
!2513 = !DILocation(line: 442, column: 18, scope: !2507)
!2514 = !DILocation(line: 442, column: 32, scope: !2507)
!2515 = !DILocation(line: 443, column: 3, scope: !2507)
!2516 = !DILocation(line: 444, column: 3, scope: !2087)
!2517 = !DILocation(line: 444, column: 9, scope: !2087)
!2518 = !DILocation(line: 444, column: 16, scope: !2087)
!2519 = !DILocation(line: 444, column: 24, scope: !2087)
!2520 = !DILocation(line: 446, column: 6, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 446, column: 6)
!2522 = !DILocation(line: 446, column: 12, scope: !2521)
!2523 = !DILocation(line: 446, column: 19, scope: !2521)
!2524 = !DILocation(line: 446, column: 6, scope: !2087)
!2525 = !DILocation(line: 447, column: 5, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2521, file: !1, line: 446, column: 30)
!2527 = !DILocation(line: 447, column: 5, scope: !2528)
!2528 = !DILexicalBlockFile(scope: !2529, file: !1, discriminator: 1)
!2529 = distinct !DILexicalBlock(scope: !2526, file: !1, line: 447, column: 5)
!2530 = !DILocation(line: 448, column: 5, scope: !2526)
!2531 = !DILocation(line: 448, column: 11, scope: !2526)
!2532 = !DILocation(line: 448, column: 18, scope: !2526)
!2533 = !DILocation(line: 448, column: 28, scope: !2526)
!2534 = !DILocation(line: 449, column: 3, scope: !2526)
!2535 = !DILocation(line: 450, column: 3, scope: !2087)
!2536 = !DILocation(line: 450, column: 9, scope: !2087)
!2537 = !DILocation(line: 450, column: 16, scope: !2087)
!2538 = !DILocation(line: 450, column: 20, scope: !2087)
!2539 = !DILocation(line: 452, column: 3, scope: !2087)
!2540 = !DILocation(line: 452, column: 3, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2542, file: !1, discriminator: 1)
!2542 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 452, column: 3)
!2543 = !DILocation(line: 453, column: 3, scope: !2087)
!2544 = !DILocation(line: 453, column: 3, scope: !2545)
!2545 = !DILexicalBlockFile(scope: !2546, file: !1, discriminator: 1)
!2546 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 453, column: 3)
!2547 = !DILocation(line: 455, column: 22, scope: !2087)
!2548 = !DILocation(line: 455, column: 3, scope: !2087)
!2549 = !DILocation(line: 457, column: 23, scope: !2087)
!2550 = !DILocation(line: 457, column: 3, scope: !2087)
!2551 = !DILocation(line: 459, column: 3, scope: !2087)
!2552 = !DILocation(line: 459, column: 3, scope: !2553)
!2553 = !DILexicalBlockFile(scope: !2554, file: !1, discriminator: 1)
!2554 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 459, column: 3)
!2555 = !DILocation(line: 460, column: 3, scope: !2087)
!2556 = !DILocation(line: 460, column: 3, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !2558, file: !1, discriminator: 1)
!2558 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 460, column: 3)
!2559 = !DILocation(line: 463, column: 3, scope: !2087)
!2560 = !DILocation(line: 463, column: 3, scope: !2561)
!2561 = !DILexicalBlockFile(scope: !2562, file: !1, discriminator: 1)
!2562 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 463, column: 3)
!2563 = !DILocation(line: 466, column: 3, scope: !2087)
!2564 = !DILocation(line: 466, column: 3, scope: !2565)
!2565 = !DILexicalBlockFile(scope: !2566, file: !1, discriminator: 1)
!2566 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 466, column: 3)
!2567 = !DILocation(line: 469, column: 6, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 469, column: 6)
!2569 = !DILocation(line: 469, column: 12, scope: !2568)
!2570 = !DILocation(line: 469, column: 6, scope: !2087)
!2571 = !DILocation(line: 470, column: 21, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !1, line: 469, column: 19)
!2573 = !DILocation(line: 470, column: 5, scope: !2572)
!2574 = !DILocation(line: 471, column: 5, scope: !2572)
!2575 = !DILocation(line: 471, column: 11, scope: !2572)
!2576 = !DILocation(line: 471, column: 18, scope: !2572)
!2577 = !DILocation(line: 471, column: 23, scope: !2572)
!2578 = !DILocation(line: 472, column: 23, scope: !2572)
!2579 = !DILocation(line: 472, column: 5, scope: !2572)
!2580 = !DILocation(line: 473, column: 3, scope: !2572)
!2581 = !DILocation(line: 475, column: 6, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 475, column: 6)
!2583 = !DILocation(line: 475, column: 12, scope: !2582)
!2584 = !DILocation(line: 475, column: 16, scope: !2582)
!2585 = !DILocation(line: 475, column: 6, scope: !2087)
!2586 = !DILocalVariable(name: "wc", scope: !2587, file: !1, line: 477, type: !2588)
!2587 = distinct !DILexicalBlock(scope: !2582, file: !1, line: 475, column: 31)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!2589 = !DILocation(line: 477, column: 26, scope: !2587)
!2590 = !DILocation(line: 477, column: 32, scope: !2587)
!2591 = !DILocation(line: 477, column: 38, scope: !2587)
!2592 = !DILocation(line: 478, column: 24, scope: !2587)
!2593 = !DILocation(line: 478, column: 5, scope: !2587)
!2594 = !DILocation(line: 479, column: 3, scope: !2587)
!2595 = !DILocation(line: 481, column: 16, scope: !2087)
!2596 = !DILocation(line: 481, column: 3, scope: !2087)
!2597 = !DILocation(line: 482, column: 3, scope: !2087)
!2598 = !DILocation(line: 483, column: 3, scope: !2087)
!2599 = !DILocation(line: 484, column: 1, scope: !2087)
!2600 = !DILocalVariable(name: "data", arg: 1, scope: !2130, file: !1, line: 4802, type: !256)
!2601 = !DILocation(line: 4802, column: 48, scope: !2130)
!2602 = !DILocation(line: 4804, column: 3, scope: !2130)
!2603 = !DILocation(line: 4804, column: 3, scope: !2604)
!2604 = !DILexicalBlockFile(scope: !2605, file: !1, discriminator: 1)
!2605 = distinct !DILexicalBlock(scope: !2130, file: !1, line: 4804, column: 3)
!2606 = !DILocation(line: 4805, column: 3, scope: !2130)
!2607 = !DILocation(line: 4805, column: 3, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !2609, file: !1, discriminator: 1)
!2609 = distinct !DILexicalBlock(scope: !2130, file: !1, line: 4805, column: 3)
!2610 = !DILocation(line: 4806, column: 1, scope: !2130)
!2611 = !DILocalVariable(name: "set", arg: 1, scope: !2090, file: !1, line: 490, type: !2093)
!2612 = !DILocation(line: 490, column: 52, scope: !2090)
!2613 = !DILocalVariable(name: "result", scope: !2090, file: !1, line: 492, type: !289)
!2614 = !DILocation(line: 492, column: 12, scope: !2090)
!2615 = !DILocation(line: 494, column: 14, scope: !2090)
!2616 = !DILocation(line: 494, column: 3, scope: !2090)
!2617 = !DILocation(line: 494, column: 8, scope: !2090)
!2618 = !DILocation(line: 494, column: 12, scope: !2090)
!2619 = !DILocation(line: 495, column: 17, scope: !2090)
!2620 = !DILocation(line: 495, column: 3, scope: !2090)
!2621 = !DILocation(line: 495, column: 8, scope: !2090)
!2622 = !DILocation(line: 495, column: 15, scope: !2090)
!2623 = !DILocation(line: 496, column: 15, scope: !2090)
!2624 = !DILocation(line: 496, column: 3, scope: !2090)
!2625 = !DILocation(line: 496, column: 8, scope: !2090)
!2626 = !DILocation(line: 496, column: 13, scope: !2090)
!2627 = !DILocation(line: 499, column: 3, scope: !2090)
!2628 = !DILocation(line: 499, column: 8, scope: !2090)
!2629 = !DILocation(line: 499, column: 20, scope: !2090)
!2630 = !DILocation(line: 502, column: 3, scope: !2090)
!2631 = !DILocation(line: 502, column: 8, scope: !2090)
!2632 = !DILocation(line: 502, column: 23, scope: !2090)
!2633 = !DILocation(line: 503, column: 3, scope: !2090)
!2634 = !DILocation(line: 503, column: 8, scope: !2090)
!2635 = !DILocation(line: 503, column: 21, scope: !2090)
!2636 = !DILocation(line: 504, column: 3, scope: !2090)
!2637 = !DILocation(line: 504, column: 8, scope: !2090)
!2638 = !DILocation(line: 504, column: 22, scope: !2090)
!2639 = !DILocation(line: 506, column: 3, scope: !2090)
!2640 = !DILocation(line: 506, column: 8, scope: !2090)
!2641 = !DILocation(line: 506, column: 18, scope: !2090)
!2642 = !DILocation(line: 507, column: 3, scope: !2090)
!2643 = !DILocation(line: 507, column: 8, scope: !2090)
!2644 = !DILocation(line: 507, column: 20, scope: !2090)
!2645 = !DILocation(line: 510, column: 3, scope: !2090)
!2646 = !DILocation(line: 510, column: 8, scope: !2090)
!2647 = !DILocation(line: 510, column: 24, scope: !2090)
!2648 = !DILocation(line: 511, column: 3, scope: !2090)
!2649 = !DILocation(line: 511, column: 8, scope: !2090)
!2650 = !DILocation(line: 511, column: 24, scope: !2090)
!2651 = !DILocation(line: 512, column: 3, scope: !2090)
!2652 = !DILocation(line: 512, column: 8, scope: !2090)
!2653 = !DILocation(line: 512, column: 24, scope: !2090)
!2654 = !DILocation(line: 514, column: 3, scope: !2090)
!2655 = !DILocation(line: 514, column: 8, scope: !2090)
!2656 = !DILocation(line: 514, column: 17, scope: !2090)
!2657 = !DILocation(line: 515, column: 3, scope: !2090)
!2658 = !DILocation(line: 515, column: 8, scope: !2090)
!2659 = !DILocation(line: 515, column: 22, scope: !2090)
!2660 = !DILocation(line: 516, column: 3, scope: !2090)
!2661 = !DILocation(line: 516, column: 8, scope: !2090)
!2662 = !DILocation(line: 516, column: 18, scope: !2090)
!2663 = !DILocation(line: 518, column: 3, scope: !2090)
!2664 = !DILocation(line: 518, column: 8, scope: !2090)
!2665 = !DILocation(line: 518, column: 16, scope: !2090)
!2666 = !DILocation(line: 519, column: 3, scope: !2090)
!2667 = !DILocation(line: 519, column: 8, scope: !2090)
!2668 = !DILocation(line: 519, column: 16, scope: !2090)
!2669 = !DILocation(line: 520, column: 3, scope: !2090)
!2670 = !DILocation(line: 520, column: 8, scope: !2090)
!2671 = !DILocation(line: 520, column: 21, scope: !2090)
!2672 = !DILocation(line: 521, column: 3, scope: !2090)
!2673 = !DILocation(line: 521, column: 8, scope: !2090)
!2674 = !DILocation(line: 521, column: 21, scope: !2090)
!2675 = !DILocation(line: 522, column: 3, scope: !2090)
!2676 = !DILocation(line: 522, column: 8, scope: !2090)
!2677 = !DILocation(line: 522, column: 21, scope: !2090)
!2678 = !DILocation(line: 523, column: 3, scope: !2090)
!2679 = !DILocation(line: 523, column: 8, scope: !2090)
!2680 = !DILocation(line: 523, column: 23, scope: !2090)
!2681 = !DILocation(line: 525, column: 3, scope: !2090)
!2682 = !DILocation(line: 525, column: 8, scope: !2090)
!2683 = !DILocation(line: 525, column: 26, scope: !2090)
!2684 = !DILocation(line: 528, column: 3, scope: !2090)
!2685 = !DILocation(line: 528, column: 8, scope: !2090)
!2686 = !DILocation(line: 528, column: 20, scope: !2090)
!2687 = !DILocation(line: 528, column: 37, scope: !2090)
!2688 = !DILocation(line: 530, column: 3, scope: !2090)
!2689 = !DILocation(line: 530, column: 8, scope: !2090)
!2690 = !DILocation(line: 530, column: 18, scope: !2090)
!2691 = !DILocation(line: 531, column: 3, scope: !2090)
!2692 = !DILocation(line: 531, column: 8, scope: !2090)
!2693 = !DILocation(line: 531, column: 18, scope: !2090)
!2694 = !DILocation(line: 532, column: 3, scope: !2090)
!2695 = !DILocation(line: 532, column: 8, scope: !2090)
!2696 = !DILocation(line: 532, column: 17, scope: !2090)
!2697 = !DILocation(line: 533, column: 3, scope: !2090)
!2698 = !DILocation(line: 533, column: 8, scope: !2090)
!2699 = !DILocation(line: 533, column: 18, scope: !2090)
!2700 = !DILocation(line: 536, column: 3, scope: !2090)
!2701 = !DILocation(line: 536, column: 8, scope: !2090)
!2702 = !DILocation(line: 536, column: 22, scope: !2090)
!2703 = !DILocation(line: 542, column: 3, scope: !2090)
!2704 = !DILocation(line: 542, column: 8, scope: !2090)
!2705 = !DILocation(line: 542, column: 12, scope: !2090)
!2706 = !DILocation(line: 542, column: 20, scope: !2090)
!2707 = !DILocation(line: 542, column: 31, scope: !2090)
!2708 = !DILocation(line: 543, column: 3, scope: !2090)
!2709 = !DILocation(line: 543, column: 8, scope: !2090)
!2710 = !DILocation(line: 543, column: 12, scope: !2090)
!2711 = !DILocation(line: 543, column: 20, scope: !2090)
!2712 = !DILocation(line: 543, column: 31, scope: !2090)
!2713 = !DILocation(line: 547, column: 3, scope: !2090)
!2714 = !DILocation(line: 547, column: 8, scope: !2090)
!2715 = !DILocation(line: 547, column: 23, scope: !2090)
!2716 = !DILocation(line: 549, column: 3, scope: !2090)
!2717 = !DILocation(line: 549, column: 8, scope: !2090)
!2718 = !DILocation(line: 549, column: 12, scope: !2090)
!2719 = !DILocation(line: 549, column: 20, scope: !2090)
!2720 = !DILocation(line: 549, column: 30, scope: !2090)
!2721 = !DILocation(line: 551, column: 3, scope: !2090)
!2722 = !DILocation(line: 551, column: 8, scope: !2090)
!2723 = !DILocation(line: 551, column: 20, scope: !2090)
!2724 = !DILocation(line: 551, column: 25, scope: !2090)
!2725 = !DILocation(line: 553, column: 3, scope: !2090)
!2726 = !DILocation(line: 553, column: 8, scope: !2090)
!2727 = !DILocation(line: 553, column: 23, scope: !2090)
!2728 = !DILocation(line: 554, column: 3, scope: !2090)
!2729 = !DILocation(line: 554, column: 8, scope: !2090)
!2730 = !DILocation(line: 554, column: 28, scope: !2090)
!2731 = !DILocation(line: 559, column: 3, scope: !2090)
!2732 = !DILocation(line: 559, column: 8, scope: !2090)
!2733 = !DILocation(line: 559, column: 26, scope: !2090)
!2734 = !DILocation(line: 560, column: 3, scope: !2090)
!2735 = !DILocation(line: 560, column: 8, scope: !2090)
!2736 = !DILocation(line: 560, column: 24, scope: !2090)
!2737 = !DILocation(line: 592, column: 3, scope: !2090)
!2738 = !DILocation(line: 592, column: 8, scope: !2090)
!2739 = !DILocation(line: 592, column: 23, scope: !2090)
!2740 = !DILocation(line: 593, column: 3, scope: !2090)
!2741 = !DILocation(line: 593, column: 8, scope: !2090)
!2742 = !DILocation(line: 593, column: 23, scope: !2090)
!2743 = !DILocation(line: 594, column: 3, scope: !2090)
!2744 = !DILocation(line: 594, column: 8, scope: !2090)
!2745 = !DILocation(line: 594, column: 23, scope: !2090)
!2746 = !DILocation(line: 599, column: 3, scope: !2090)
!2747 = !DILocation(line: 599, column: 8, scope: !2090)
!2748 = !DILocation(line: 599, column: 22, scope: !2090)
!2749 = !DILocation(line: 600, column: 3, scope: !2090)
!2750 = !DILocation(line: 600, column: 8, scope: !2090)
!2751 = !DILocation(line: 600, column: 22, scope: !2090)
!2752 = !DILocation(line: 601, column: 3, scope: !2090)
!2753 = !DILocation(line: 601, column: 8, scope: !2090)
!2754 = !DILocation(line: 601, column: 21, scope: !2090)
!2755 = !DILocation(line: 602, column: 3, scope: !2090)
!2756 = !DILocation(line: 602, column: 8, scope: !2090)
!2757 = !DILocation(line: 602, column: 21, scope: !2090)
!2758 = !DILocation(line: 603, column: 3, scope: !2090)
!2759 = !DILocation(line: 603, column: 8, scope: !2090)
!2760 = !DILocation(line: 603, column: 20, scope: !2090)
!2761 = !DILocation(line: 605, column: 3, scope: !2090)
!2762 = !DILocation(line: 605, column: 8, scope: !2090)
!2763 = !DILocation(line: 605, column: 23, scope: !2090)
!2764 = !DILocation(line: 606, column: 3, scope: !2090)
!2765 = !DILocation(line: 606, column: 8, scope: !2090)
!2766 = !DILocation(line: 606, column: 24, scope: !2090)
!2767 = !DILocation(line: 608, column: 3, scope: !2090)
!2768 = !DILocation(line: 608, column: 8, scope: !2090)
!2769 = !DILocation(line: 608, column: 27, scope: !2090)
!2770 = !DILocation(line: 609, column: 3, scope: !2090)
!2771 = !DILocation(line: 609, column: 8, scope: !2090)
!2772 = !DILocation(line: 609, column: 20, scope: !2090)
!2773 = !DILocation(line: 612, column: 10, scope: !2090)
!2774 = !DILocation(line: 612, column: 3, scope: !2090)
!2775 = !DILocalVariable(name: "curl", arg: 1, scope: !2094, file: !1, line: 623, type: !2097)
!2776 = !DILocation(line: 623, column: 39, scope: !2094)
!2777 = !DILocalVariable(name: "result", scope: !2094, file: !1, line: 625, type: !289)
!2778 = !DILocation(line: 625, column: 12, scope: !2094)
!2779 = !DILocalVariable(name: "data", scope: !2094, file: !1, line: 626, type: !256)
!2780 = !DILocation(line: 626, column: 21, scope: !2094)
!2781 = !DILocation(line: 629, column: 10, scope: !2094)
!2782 = !DILocation(line: 629, column: 8, scope: !2094)
!2783 = !DILocation(line: 630, column: 7, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 630, column: 6)
!2785 = !DILocation(line: 630, column: 6, scope: !2094)
!2786 = !DILocation(line: 632, column: 5, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2784, file: !1, line: 630, column: 13)
!2788 = !DILocation(line: 632, column: 5, scope: !2789)
!2789 = !DILexicalBlockFile(scope: !2790, file: !1, discriminator: 1)
!2790 = distinct !DILexicalBlock(scope: !2787, file: !1, line: 632, column: 5)
!2791 = !DILocation(line: 633, column: 5, scope: !2787)
!2792 = !DILocation(line: 636, column: 3, scope: !2094)
!2793 = !DILocation(line: 636, column: 9, scope: !2094)
!2794 = !DILocation(line: 636, column: 15, scope: !2094)
!2795 = !DILocation(line: 638, column: 10, scope: !2094)
!2796 = !DILocation(line: 639, column: 6, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 639, column: 6)
!2798 = !DILocation(line: 639, column: 6, scope: !2094)
!2799 = !DILocation(line: 640, column: 5, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 639, column: 14)
!2801 = !DILocation(line: 640, column: 5, scope: !2802)
!2802 = !DILexicalBlockFile(scope: !2803, file: !1, discriminator: 1)
!2803 = distinct !DILexicalBlock(scope: !2800, file: !1, line: 640, column: 5)
!2804 = !DILocation(line: 641, column: 5, scope: !2800)
!2805 = !DILocation(line: 642, column: 12, scope: !2800)
!2806 = !DILocation(line: 642, column: 5, scope: !2800)
!2807 = !DILocation(line: 647, column: 24, scope: !2094)
!2808 = !DILocation(line: 647, column: 3, scope: !2094)
!2809 = !DILocation(line: 647, column: 9, scope: !2094)
!2810 = !DILocation(line: 647, column: 15, scope: !2094)
!2811 = !DILocation(line: 647, column: 22, scope: !2094)
!2812 = !DILocation(line: 648, column: 7, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 648, column: 6)
!2814 = !DILocation(line: 648, column: 13, scope: !2813)
!2815 = !DILocation(line: 648, column: 19, scope: !2813)
!2816 = !DILocation(line: 648, column: 6, scope: !2094)
!2817 = !DILocation(line: 649, column: 5, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2813, file: !1, line: 648, column: 27)
!2819 = !DILocation(line: 649, column: 5, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !2821, file: !1, discriminator: 1)
!2821 = distinct !DILexicalBlock(scope: !2818, file: !1, line: 649, column: 5)
!2822 = !DILocation(line: 650, column: 12, scope: !2818)
!2823 = !DILocation(line: 651, column: 3, scope: !2818)
!2824 = !DILocation(line: 653, column: 28, scope: !2094)
!2825 = !DILocation(line: 653, column: 3, scope: !2094)
!2826 = !DILocation(line: 653, column: 9, scope: !2094)
!2827 = !DILocation(line: 653, column: 15, scope: !2094)
!2828 = !DILocation(line: 653, column: 26, scope: !2094)
!2829 = !DILocation(line: 654, column: 7, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 654, column: 6)
!2831 = !DILocation(line: 654, column: 13, scope: !2830)
!2832 = !DILocation(line: 654, column: 19, scope: !2830)
!2833 = !DILocation(line: 654, column: 6, scope: !2094)
!2834 = !DILocation(line: 655, column: 5, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 654, column: 31)
!2836 = !DILocation(line: 655, column: 5, scope: !2837)
!2837 = !DILexicalBlockFile(scope: !2838, file: !1, discriminator: 1)
!2838 = distinct !DILexicalBlock(scope: !2835, file: !1, line: 655, column: 5)
!2839 = !DILocation(line: 656, column: 12, scope: !2835)
!2840 = !DILocation(line: 657, column: 3, scope: !2835)
!2841 = !DILocation(line: 659, column: 37, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 658, column: 8)
!2843 = !DILocation(line: 659, column: 43, scope: !2842)
!2844 = !DILocation(line: 659, column: 14, scope: !2842)
!2845 = !DILocation(line: 659, column: 12, scope: !2842)
!2846 = !DILocation(line: 661, column: 5, scope: !2842)
!2847 = !DILocation(line: 661, column: 11, scope: !2842)
!2848 = !DILocation(line: 661, column: 17, scope: !2842)
!2849 = !DILocation(line: 661, column: 27, scope: !2842)
!2850 = !DILocation(line: 663, column: 5, scope: !2842)
!2851 = !DILocation(line: 663, column: 5, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !2853, file: !1, discriminator: 1)
!2853 = distinct !DILexicalBlock(scope: !2842, file: !1, line: 663, column: 5)
!2854 = !DILocation(line: 665, column: 19, scope: !2842)
!2855 = !DILocation(line: 665, column: 5, scope: !2842)
!2856 = !DILocation(line: 668, column: 5, scope: !2842)
!2857 = !DILocation(line: 668, column: 11, scope: !2842)
!2858 = !DILocation(line: 668, column: 17, scope: !2842)
!2859 = !DILocation(line: 668, column: 29, scope: !2842)
!2860 = !DILocation(line: 670, column: 5, scope: !2842)
!2861 = !DILocation(line: 670, column: 11, scope: !2842)
!2862 = !DILocation(line: 670, column: 20, scope: !2842)
!2863 = !DILocation(line: 670, column: 26, scope: !2842)
!2864 = !DILocation(line: 671, column: 5, scope: !2842)
!2865 = !DILocation(line: 671, column: 11, scope: !2842)
!2866 = !DILocation(line: 671, column: 17, scope: !2842)
!2867 = !DILocation(line: 671, column: 31, scope: !2842)
!2868 = !DILocation(line: 672, column: 5, scope: !2842)
!2869 = !DILocation(line: 672, column: 11, scope: !2842)
!2870 = !DILocation(line: 672, column: 15, scope: !2842)
!2871 = !DILocation(line: 672, column: 23, scope: !2842)
!2872 = !DILocation(line: 673, column: 5, scope: !2842)
!2873 = !DILocation(line: 673, column: 11, scope: !2842)
!2874 = !DILocation(line: 673, column: 15, scope: !2842)
!2875 = !DILocation(line: 673, column: 27, scope: !2842)
!2876 = !DILocation(line: 678, column: 6, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2094, file: !1, line: 678, column: 6)
!2878 = !DILocation(line: 678, column: 6, scope: !2094)
!2879 = !DILocation(line: 679, column: 5, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 678, column: 14)
!2881 = !DILocation(line: 679, column: 5, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2883, file: !1, discriminator: 1)
!2883 = distinct !DILexicalBlock(scope: !2880, file: !1, line: 679, column: 5)
!2884 = !DILocation(line: 680, column: 5, scope: !2880)
!2885 = !DILocation(line: 681, column: 5, scope: !2880)
!2886 = !DILocation(line: 682, column: 18, scope: !2880)
!2887 = !DILocation(line: 682, column: 5, scope: !2880)
!2888 = !DILocation(line: 683, column: 5, scope: !2880)
!2889 = !DILocation(line: 684, column: 10, scope: !2880)
!2890 = !DILocation(line: 685, column: 3, scope: !2880)
!2891 = !DILocation(line: 687, column: 13, scope: !2877)
!2892 = !DILocation(line: 687, column: 6, scope: !2877)
!2893 = !DILocation(line: 687, column: 11, scope: !2877)
!2894 = !DILocation(line: 689, column: 10, scope: !2094)
!2895 = !DILocation(line: 689, column: 3, scope: !2094)
!2896 = !DILocation(line: 690, column: 1, scope: !2094)
!2897 = !DILocalVariable(name: "data", arg: 1, scope: !2098, file: !1, line: 695, type: !256)
!2898 = !DILocation(line: 695, column: 40, scope: !2098)
!2899 = !DILocalVariable(name: "option", arg: 2, scope: !2098, file: !1, line: 695, type: !2101)
!2900 = !DILocation(line: 695, column: 57, scope: !2098)
!2901 = !DILocalVariable(name: "param", arg: 3, scope: !2098, file: !1, line: 696, type: !2102)
!2902 = !DILocation(line: 696, column: 30, scope: !2098)
!2903 = !DILocalVariable(name: "argptr", scope: !2098, file: !1, line: 698, type: !500)
!2904 = !DILocation(line: 698, column: 9, scope: !2098)
!2905 = !DILocalVariable(name: "result", scope: !2098, file: !1, line: 699, type: !289)
!2906 = !DILocation(line: 699, column: 12, scope: !2098)
!2907 = !DILocalVariable(name: "arg", scope: !2098, file: !1, line: 700, type: !379)
!2908 = !DILocation(line: 700, column: 8, scope: !2098)
!2909 = !DILocalVariable(name: "bigsize", scope: !2098, file: !1, line: 702, type: !507)
!2910 = !DILocation(line: 702, column: 14, scope: !2098)
!2911 = !DILocation(line: 705, column: 10, scope: !2098)
!2912 = !DILocation(line: 705, column: 3, scope: !2098)
!2913 = !DILocation(line: 707, column: 35, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2098, file: !1, line: 705, column: 18)
!2915 = !DILocation(line: 707, column: 35, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2914, file: !1, discriminator: 1)
!2917 = !DILocation(line: 707, column: 35, scope: !2918)
!2918 = !DILexicalBlockFile(scope: !2914, file: !1, discriminator: 2)
!2919 = !DILocation(line: 707, column: 35, scope: !2920)
!2920 = !DILexicalBlockFile(scope: !2914, file: !1, discriminator: 3)
!2921 = !DILocation(line: 707, column: 5, scope: !2920)
!2922 = !DILocation(line: 707, column: 11, scope: !2920)
!2923 = !DILocation(line: 707, column: 15, scope: !2920)
!2924 = !DILocation(line: 707, column: 33, scope: !2920)
!2925 = !DILocation(line: 708, column: 5, scope: !2914)
!2926 = !DILocation(line: 711, column: 11, scope: !2914)
!2927 = !DILocation(line: 711, column: 11, scope: !2916)
!2928 = !DILocation(line: 711, column: 11, scope: !2918)
!2929 = !DILocation(line: 711, column: 11, scope: !2920)
!2930 = !DILocation(line: 711, column: 9, scope: !2920)
!2931 = !DILocation(line: 712, column: 40, scope: !2914)
!2932 = !DILocation(line: 712, column: 37, scope: !2914)
!2933 = !DILocation(line: 712, column: 34, scope: !2914)
!2934 = !DILocation(line: 712, column: 5, scope: !2914)
!2935 = !DILocation(line: 712, column: 11, scope: !2914)
!2936 = !DILocation(line: 712, column: 15, scope: !2914)
!2937 = !DILocation(line: 712, column: 32, scope: !2914)
!2938 = !DILocation(line: 713, column: 5, scope: !2914)
!2939 = !DILocation(line: 716, column: 25, scope: !2914)
!2940 = !DILocation(line: 716, column: 31, scope: !2914)
!2941 = !DILocation(line: 716, column: 35, scope: !2914)
!2942 = !DILocation(line: 717, column: 24, scope: !2914)
!2943 = !DILocation(line: 717, column: 24, scope: !2916)
!2944 = !DILocation(line: 717, column: 24, scope: !2918)
!2945 = !DILocation(line: 717, column: 24, scope: !2920)
!2946 = !DILocation(line: 716, column: 14, scope: !2916)
!2947 = !DILocation(line: 716, column: 12, scope: !2916)
!2948 = !DILocation(line: 718, column: 5, scope: !2914)
!2949 = !DILocation(line: 721, column: 25, scope: !2914)
!2950 = !DILocation(line: 721, column: 31, scope: !2914)
!2951 = !DILocation(line: 721, column: 35, scope: !2914)
!2952 = !DILocation(line: 722, column: 24, scope: !2914)
!2953 = !DILocation(line: 722, column: 24, scope: !2916)
!2954 = !DILocation(line: 722, column: 24, scope: !2918)
!2955 = !DILocation(line: 722, column: 24, scope: !2920)
!2956 = !DILocation(line: 721, column: 14, scope: !2916)
!2957 = !DILocation(line: 721, column: 12, scope: !2916)
!2958 = !DILocation(line: 723, column: 5, scope: !2914)
!2959 = !DILocation(line: 730, column: 25, scope: !2914)
!2960 = !DILocation(line: 730, column: 31, scope: !2914)
!2961 = !DILocation(line: 730, column: 35, scope: !2914)
!2962 = !DILocation(line: 731, column: 24, scope: !2914)
!2963 = !DILocation(line: 731, column: 24, scope: !2916)
!2964 = !DILocation(line: 731, column: 24, scope: !2918)
!2965 = !DILocation(line: 731, column: 24, scope: !2920)
!2966 = !DILocation(line: 730, column: 14, scope: !2916)
!2967 = !DILocation(line: 730, column: 12, scope: !2916)
!2968 = !DILocation(line: 732, column: 5, scope: !2914)
!2969 = !DILocation(line: 737, column: 25, scope: !2914)
!2970 = !DILocation(line: 737, column: 31, scope: !2914)
!2971 = !DILocation(line: 737, column: 35, scope: !2914)
!2972 = !DILocation(line: 738, column: 24, scope: !2914)
!2973 = !DILocation(line: 738, column: 24, scope: !2916)
!2974 = !DILocation(line: 738, column: 24, scope: !2918)
!2975 = !DILocation(line: 738, column: 24, scope: !2920)
!2976 = !DILocation(line: 737, column: 14, scope: !2916)
!2977 = !DILocation(line: 737, column: 12, scope: !2916)
!2978 = !DILocation(line: 739, column: 5, scope: !2914)
!2979 = !DILocation(line: 745, column: 29, scope: !2914)
!2980 = !DILocation(line: 745, column: 29, scope: !2916)
!2981 = !DILocation(line: 745, column: 29, scope: !2918)
!2982 = !DILocation(line: 745, column: 29, scope: !2920)
!2983 = !DILocation(line: 745, column: 5, scope: !2920)
!2984 = !DILocation(line: 745, column: 11, scope: !2920)
!2985 = !DILocation(line: 745, column: 15, scope: !2920)
!2986 = !DILocation(line: 745, column: 27, scope: !2920)
!2987 = !DILocation(line: 746, column: 5, scope: !2914)
!2988 = !DILocation(line: 752, column: 36, scope: !2914)
!2989 = !DILocation(line: 752, column: 36, scope: !2916)
!2990 = !DILocation(line: 752, column: 36, scope: !2918)
!2991 = !DILocation(line: 752, column: 36, scope: !2920)
!2992 = !DILocation(line: 752, column: 33, scope: !2920)
!2993 = !DILocation(line: 752, column: 30, scope: !2920)
!2994 = !DILocation(line: 752, column: 5, scope: !2920)
!2995 = !DILocation(line: 752, column: 11, scope: !2920)
!2996 = !DILocation(line: 752, column: 15, scope: !2920)
!2997 = !DILocation(line: 752, column: 28, scope: !2920)
!2998 = !DILocation(line: 753, column: 5, scope: !2914)
!2999 = !DILocation(line: 759, column: 35, scope: !2914)
!3000 = !DILocation(line: 759, column: 35, scope: !2916)
!3001 = !DILocation(line: 759, column: 35, scope: !2918)
!3002 = !DILocation(line: 759, column: 35, scope: !2920)
!3003 = !DILocation(line: 759, column: 32, scope: !2920)
!3004 = !DILocation(line: 759, column: 29, scope: !2920)
!3005 = !DILocation(line: 759, column: 5, scope: !2920)
!3006 = !DILocation(line: 759, column: 11, scope: !2920)
!3007 = !DILocation(line: 759, column: 15, scope: !2920)
!3008 = !DILocation(line: 759, column: 27, scope: !2920)
!3009 = !DILocation(line: 760, column: 5, scope: !2914)
!3010 = !DILocation(line: 766, column: 31, scope: !2914)
!3011 = !DILocation(line: 766, column: 31, scope: !2916)
!3012 = !DILocation(line: 766, column: 31, scope: !2918)
!3013 = !DILocation(line: 766, column: 31, scope: !2920)
!3014 = !DILocation(line: 766, column: 28, scope: !2920)
!3015 = !DILocation(line: 766, column: 25, scope: !2920)
!3016 = !DILocation(line: 766, column: 5, scope: !2920)
!3017 = !DILocation(line: 766, column: 11, scope: !2920)
!3018 = !DILocation(line: 766, column: 15, scope: !2920)
!3019 = !DILocation(line: 766, column: 23, scope: !2920)
!3020 = !DILocation(line: 767, column: 5, scope: !2914)
!3021 = !DILocation(line: 772, column: 38, scope: !2914)
!3022 = !DILocation(line: 772, column: 38, scope: !2916)
!3023 = !DILocation(line: 772, column: 38, scope: !2918)
!3024 = !DILocation(line: 772, column: 38, scope: !2920)
!3025 = !DILocation(line: 772, column: 35, scope: !2920)
!3026 = !DILocation(line: 772, column: 32, scope: !2920)
!3027 = !DILocation(line: 772, column: 5, scope: !2920)
!3028 = !DILocation(line: 772, column: 11, scope: !2920)
!3029 = !DILocation(line: 772, column: 15, scope: !2920)
!3030 = !DILocation(line: 772, column: 30, scope: !2920)
!3031 = !DILocation(line: 773, column: 5, scope: !2914)
!3032 = !DILocation(line: 778, column: 37, scope: !2914)
!3033 = !DILocation(line: 778, column: 37, scope: !2916)
!3034 = !DILocation(line: 778, column: 37, scope: !2918)
!3035 = !DILocation(line: 778, column: 37, scope: !2920)
!3036 = !DILocation(line: 778, column: 34, scope: !2920)
!3037 = !DILocation(line: 778, column: 31, scope: !2920)
!3038 = !DILocation(line: 778, column: 5, scope: !2920)
!3039 = !DILocation(line: 778, column: 11, scope: !2920)
!3040 = !DILocation(line: 778, column: 15, scope: !2920)
!3041 = !DILocation(line: 778, column: 29, scope: !2920)
!3042 = !DILocation(line: 779, column: 8, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 779, column: 8)
!3044 = !DILocation(line: 779, column: 14, scope: !3043)
!3045 = !DILocation(line: 779, column: 18, scope: !3043)
!3046 = !DILocation(line: 779, column: 8, scope: !2914)
!3047 = !DILocation(line: 780, column: 7, scope: !3043)
!3048 = !DILocation(line: 780, column: 13, scope: !3043)
!3049 = !DILocation(line: 780, column: 22, scope: !3043)
!3050 = !DILocation(line: 780, column: 28, scope: !3043)
!3051 = !DILocation(line: 782, column: 7, scope: !3043)
!3052 = !DILocation(line: 782, column: 13, scope: !3043)
!3053 = !DILocation(line: 782, column: 22, scope: !3043)
!3054 = !DILocation(line: 782, column: 28, scope: !3043)
!3055 = !DILocation(line: 783, column: 5, scope: !2914)
!3056 = !DILocation(line: 788, column: 35, scope: !2914)
!3057 = !DILocation(line: 788, column: 35, scope: !2916)
!3058 = !DILocation(line: 788, column: 35, scope: !2918)
!3059 = !DILocation(line: 788, column: 35, scope: !2920)
!3060 = !DILocation(line: 788, column: 32, scope: !2920)
!3061 = !DILocation(line: 788, column: 29, scope: !2920)
!3062 = !DILocation(line: 788, column: 5, scope: !2920)
!3063 = !DILocation(line: 788, column: 11, scope: !2920)
!3064 = !DILocation(line: 788, column: 15, scope: !2920)
!3065 = !DILocation(line: 788, column: 27, scope: !2920)
!3066 = !DILocation(line: 789, column: 5, scope: !2914)
!3067 = !DILocation(line: 795, column: 42, scope: !2914)
!3068 = !DILocation(line: 795, column: 42, scope: !2916)
!3069 = !DILocation(line: 795, column: 42, scope: !2918)
!3070 = !DILocation(line: 795, column: 42, scope: !2920)
!3071 = !DILocation(line: 795, column: 39, scope: !2920)
!3072 = !DILocation(line: 795, column: 36, scope: !2920)
!3073 = !DILocation(line: 795, column: 5, scope: !2920)
!3074 = !DILocation(line: 795, column: 11, scope: !2920)
!3075 = !DILocation(line: 795, column: 15, scope: !2920)
!3076 = !DILocation(line: 795, column: 34, scope: !2920)
!3077 = !DILocation(line: 796, column: 5, scope: !2914)
!3078 = !DILocation(line: 798, column: 50, scope: !2914)
!3079 = !DILocation(line: 798, column: 50, scope: !2916)
!3080 = !DILocation(line: 798, column: 50, scope: !2918)
!3081 = !DILocation(line: 798, column: 50, scope: !2920)
!3082 = !DILocation(line: 798, column: 47, scope: !2920)
!3083 = !DILocation(line: 798, column: 44, scope: !2920)
!3084 = !DILocation(line: 798, column: 5, scope: !2920)
!3085 = !DILocation(line: 798, column: 11, scope: !2920)
!3086 = !DILocation(line: 798, column: 15, scope: !2920)
!3087 = !DILocation(line: 798, column: 42, scope: !2920)
!3088 = !DILocation(line: 800, column: 5, scope: !2914)
!3089 = !DILocation(line: 807, column: 30, scope: !2914)
!3090 = !DILocation(line: 807, column: 30, scope: !2916)
!3091 = !DILocation(line: 807, column: 30, scope: !2918)
!3092 = !DILocation(line: 807, column: 30, scope: !2920)
!3093 = !DILocation(line: 807, column: 27, scope: !2920)
!3094 = !DILocation(line: 807, column: 24, scope: !2920)
!3095 = !DILocation(line: 807, column: 5, scope: !2920)
!3096 = !DILocation(line: 807, column: 11, scope: !2920)
!3097 = !DILocation(line: 807, column: 15, scope: !2920)
!3098 = !DILocation(line: 807, column: 22, scope: !2920)
!3099 = !DILocation(line: 808, column: 8, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 808, column: 8)
!3101 = !DILocation(line: 808, column: 14, scope: !3100)
!3102 = !DILocation(line: 808, column: 18, scope: !3100)
!3103 = !DILocation(line: 808, column: 8, scope: !2914)
!3104 = !DILocation(line: 810, column: 7, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 808, column: 26)
!3106 = !DILocation(line: 810, column: 13, scope: !3105)
!3107 = !DILocation(line: 810, column: 17, scope: !3105)
!3108 = !DILocation(line: 810, column: 25, scope: !3105)
!3109 = !DILocation(line: 811, column: 7, scope: !3105)
!3110 = !DILocation(line: 811, column: 13, scope: !3105)
!3111 = !DILocation(line: 811, column: 17, scope: !3105)
!3112 = !DILocation(line: 811, column: 29, scope: !3105)
!3113 = !DILocation(line: 812, column: 5, scope: !3105)
!3114 = !DILocation(line: 816, column: 7, scope: !3100)
!3115 = !DILocation(line: 816, column: 13, scope: !3100)
!3116 = !DILocation(line: 816, column: 17, scope: !3100)
!3117 = !DILocation(line: 816, column: 25, scope: !3100)
!3118 = !DILocation(line: 817, column: 5, scope: !2914)
!3119 = !DILocation(line: 823, column: 36, scope: !2914)
!3120 = !DILocation(line: 823, column: 36, scope: !2916)
!3121 = !DILocation(line: 823, column: 36, scope: !2918)
!3122 = !DILocation(line: 823, column: 36, scope: !2920)
!3123 = !DILocation(line: 823, column: 33, scope: !2920)
!3124 = !DILocation(line: 823, column: 30, scope: !2920)
!3125 = !DILocation(line: 823, column: 5, scope: !2920)
!3126 = !DILocation(line: 823, column: 11, scope: !2920)
!3127 = !DILocation(line: 823, column: 15, scope: !2920)
!3128 = !DILocation(line: 823, column: 28, scope: !2920)
!3129 = !DILocation(line: 824, column: 5, scope: !2914)
!3130 = !DILocation(line: 830, column: 12, scope: !2914)
!3131 = !DILocation(line: 830, column: 12, scope: !2916)
!3132 = !DILocation(line: 830, column: 12, scope: !2918)
!3133 = !DILocation(line: 830, column: 12, scope: !2920)
!3134 = !DILocation(line: 830, column: 5, scope: !2920)
!3135 = !DILocation(line: 832, column: 7, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 830, column: 33)
!3137 = !DILocation(line: 832, column: 13, scope: !3136)
!3138 = !DILocation(line: 832, column: 17, scope: !3136)
!3139 = !DILocation(line: 832, column: 41, scope: !3136)
!3140 = !DILocation(line: 833, column: 7, scope: !3136)
!3141 = !DILocation(line: 835, column: 7, scope: !3136)
!3142 = !DILocation(line: 835, column: 13, scope: !3136)
!3143 = !DILocation(line: 835, column: 17, scope: !3136)
!3144 = !DILocation(line: 835, column: 41, scope: !3136)
!3145 = !DILocation(line: 836, column: 7, scope: !3136)
!3146 = !DILocation(line: 838, column: 7, scope: !3136)
!3147 = !DILocation(line: 838, column: 13, scope: !3136)
!3148 = !DILocation(line: 838, column: 17, scope: !3136)
!3149 = !DILocation(line: 838, column: 41, scope: !3136)
!3150 = !DILocation(line: 839, column: 7, scope: !3136)
!3151 = !DILocation(line: 842, column: 14, scope: !3136)
!3152 = !DILocation(line: 843, column: 7, scope: !3136)
!3153 = !DILocation(line: 845, column: 5, scope: !2914)
!3154 = !DILocation(line: 851, column: 41, scope: !2914)
!3155 = !DILocation(line: 851, column: 41, scope: !2916)
!3156 = !DILocation(line: 851, column: 41, scope: !2918)
!3157 = !DILocation(line: 851, column: 41, scope: !2920)
!3158 = !DILocation(line: 851, column: 61, scope: !2920)
!3159 = !DILocation(line: 851, column: 5, scope: !2920)
!3160 = !DILocation(line: 851, column: 11, scope: !2920)
!3161 = !DILocation(line: 851, column: 15, scope: !2920)
!3162 = !DILocation(line: 851, column: 39, scope: !2920)
!3163 = !DILocation(line: 852, column: 5, scope: !2914)
!3164 = !DILocation(line: 858, column: 33, scope: !2914)
!3165 = !DILocation(line: 858, column: 33, scope: !2916)
!3166 = !DILocation(line: 858, column: 33, scope: !2918)
!3167 = !DILocation(line: 858, column: 33, scope: !2920)
!3168 = !DILocation(line: 858, column: 53, scope: !2920)
!3169 = !DILocation(line: 858, column: 5, scope: !2920)
!3170 = !DILocation(line: 858, column: 11, scope: !2920)
!3171 = !DILocation(line: 858, column: 15, scope: !2920)
!3172 = !DILocation(line: 858, column: 31, scope: !2920)
!3173 = !DILocation(line: 859, column: 5, scope: !2914)
!3174 = !DILocation(line: 864, column: 30, scope: !2914)
!3175 = !DILocation(line: 864, column: 30, scope: !2916)
!3176 = !DILocation(line: 864, column: 30, scope: !2918)
!3177 = !DILocation(line: 864, column: 30, scope: !2920)
!3178 = !DILocation(line: 864, column: 5, scope: !2920)
!3179 = !DILocation(line: 864, column: 11, scope: !2920)
!3180 = !DILocation(line: 864, column: 15, scope: !2920)
!3181 = !DILocation(line: 864, column: 28, scope: !2920)
!3182 = !DILocation(line: 865, column: 5, scope: !2914)
!3183 = !DILocation(line: 871, column: 37, scope: !2914)
!3184 = !DILocation(line: 871, column: 37, scope: !2916)
!3185 = !DILocation(line: 871, column: 37, scope: !2918)
!3186 = !DILocation(line: 871, column: 37, scope: !2920)
!3187 = !DILocation(line: 871, column: 34, scope: !2920)
!3188 = !DILocation(line: 871, column: 31, scope: !2920)
!3189 = !DILocation(line: 871, column: 5, scope: !2920)
!3190 = !DILocation(line: 871, column: 11, scope: !2920)
!3191 = !DILocation(line: 871, column: 15, scope: !2920)
!3192 = !DILocation(line: 871, column: 29, scope: !2920)
!3193 = !DILocation(line: 872, column: 5, scope: !2914)
!3194 = !DILocation(line: 877, column: 34, scope: !2914)
!3195 = !DILocation(line: 877, column: 34, scope: !2916)
!3196 = !DILocation(line: 877, column: 34, scope: !2918)
!3197 = !DILocation(line: 877, column: 34, scope: !2920)
!3198 = !DILocation(line: 877, column: 31, scope: !2920)
!3199 = !DILocation(line: 877, column: 28, scope: !2920)
!3200 = !DILocation(line: 877, column: 5, scope: !2920)
!3201 = !DILocation(line: 877, column: 11, scope: !2920)
!3202 = !DILocation(line: 877, column: 15, scope: !2920)
!3203 = !DILocation(line: 877, column: 26, scope: !2920)
!3204 = !DILocation(line: 878, column: 5, scope: !2914)
!3205 = !DILocation(line: 883, column: 46, scope: !2914)
!3206 = !DILocation(line: 883, column: 46, scope: !2916)
!3207 = !DILocation(line: 883, column: 46, scope: !2918)
!3208 = !DILocation(line: 883, column: 46, scope: !2920)
!3209 = !DILocation(line: 883, column: 32, scope: !2920)
!3210 = !DILocation(line: 883, column: 5, scope: !2920)
!3211 = !DILocation(line: 883, column: 11, scope: !2920)
!3212 = !DILocation(line: 883, column: 15, scope: !2920)
!3213 = !DILocation(line: 883, column: 30, scope: !2920)
!3214 = !DILocation(line: 884, column: 5, scope: !2914)
!3215 = !DILocation(line: 889, column: 51, scope: !2914)
!3216 = !DILocation(line: 889, column: 51, scope: !2916)
!3217 = !DILocation(line: 889, column: 51, scope: !2918)
!3218 = !DILocation(line: 889, column: 51, scope: !2920)
!3219 = !DILocation(line: 889, column: 27, scope: !2920)
!3220 = !DILocation(line: 889, column: 5, scope: !2920)
!3221 = !DILocation(line: 889, column: 11, scope: !2920)
!3222 = !DILocation(line: 889, column: 15, scope: !2920)
!3223 = !DILocation(line: 889, column: 25, scope: !2920)
!3224 = !DILocation(line: 890, column: 5, scope: !2914)
!3225 = !DILocation(line: 895, column: 25, scope: !2914)
!3226 = !DILocation(line: 895, column: 31, scope: !2914)
!3227 = !DILocation(line: 895, column: 35, scope: !2914)
!3228 = !DILocation(line: 896, column: 24, scope: !2914)
!3229 = !DILocation(line: 896, column: 24, scope: !2916)
!3230 = !DILocation(line: 896, column: 24, scope: !2918)
!3231 = !DILocation(line: 896, column: 24, scope: !2920)
!3232 = !DILocation(line: 895, column: 14, scope: !2916)
!3233 = !DILocation(line: 895, column: 12, scope: !2916)
!3234 = !DILocation(line: 897, column: 5, scope: !2914)
!3235 = !DILocation(line: 905, column: 36, scope: !2914)
!3236 = !DILocation(line: 905, column: 36, scope: !2916)
!3237 = !DILocation(line: 905, column: 36, scope: !2918)
!3238 = !DILocation(line: 905, column: 36, scope: !2920)
!3239 = !DILocation(line: 905, column: 33, scope: !2920)
!3240 = !DILocation(line: 905, column: 30, scope: !2920)
!3241 = !DILocation(line: 905, column: 5, scope: !2920)
!3242 = !DILocation(line: 905, column: 11, scope: !2920)
!3243 = !DILocation(line: 905, column: 15, scope: !2920)
!3244 = !DILocation(line: 905, column: 28, scope: !2920)
!3245 = !DILocation(line: 906, column: 5, scope: !2914)
!3246 = !DILocation(line: 912, column: 46, scope: !2914)
!3247 = !DILocation(line: 912, column: 46, scope: !2916)
!3248 = !DILocation(line: 912, column: 46, scope: !2918)
!3249 = !DILocation(line: 912, column: 46, scope: !2920)
!3250 = !DILocation(line: 912, column: 31, scope: !2920)
!3251 = !DILocation(line: 912, column: 5, scope: !2920)
!3252 = !DILocation(line: 912, column: 11, scope: !2920)
!3253 = !DILocation(line: 912, column: 15, scope: !2920)
!3254 = !DILocation(line: 912, column: 29, scope: !2920)
!3255 = !DILocation(line: 913, column: 5, scope: !2914)
!3256 = !DILocation(line: 919, column: 35, scope: !2914)
!3257 = !DILocation(line: 919, column: 35, scope: !2916)
!3258 = !DILocation(line: 919, column: 35, scope: !2918)
!3259 = !DILocation(line: 919, column: 35, scope: !2920)
!3260 = !DILocation(line: 919, column: 5, scope: !2920)
!3261 = !DILocation(line: 919, column: 11, scope: !2920)
!3262 = !DILocation(line: 919, column: 15, scope: !2920)
!3263 = !DILocation(line: 919, column: 25, scope: !2920)
!3264 = !DILocation(line: 920, column: 5, scope: !2914)
!3265 = !DILocation(line: 931, column: 12, scope: !2914)
!3266 = !DILocation(line: 933, column: 5, scope: !2914)
!3267 = !DILocation(line: 944, column: 12, scope: !2914)
!3268 = !DILocation(line: 946, column: 5, scope: !2914)
!3269 = !DILocation(line: 953, column: 41, scope: !2914)
!3270 = !DILocation(line: 953, column: 41, scope: !2916)
!3271 = !DILocation(line: 953, column: 41, scope: !2918)
!3272 = !DILocation(line: 953, column: 41, scope: !2920)
!3273 = !DILocation(line: 953, column: 38, scope: !2920)
!3274 = !DILocation(line: 953, column: 35, scope: !2920)
!3275 = !DILocation(line: 953, column: 5, scope: !2920)
!3276 = !DILocation(line: 953, column: 11, scope: !2920)
!3277 = !DILocation(line: 953, column: 15, scope: !2920)
!3278 = !DILocation(line: 953, column: 33, scope: !2920)
!3279 = !DILocation(line: 954, column: 5, scope: !2914)
!3280 = !DILocation(line: 966, column: 14, scope: !2914)
!3281 = !DILocation(line: 966, column: 14, scope: !2916)
!3282 = !DILocation(line: 966, column: 14, scope: !2918)
!3283 = !DILocation(line: 966, column: 14, scope: !2920)
!3284 = !DILocation(line: 966, column: 12, scope: !2920)
!3285 = !DILocation(line: 967, column: 25, scope: !2914)
!3286 = !DILocation(line: 967, column: 31, scope: !2914)
!3287 = !DILocation(line: 967, column: 35, scope: !2914)
!3288 = !DILocation(line: 968, column: 25, scope: !2914)
!3289 = !DILocation(line: 968, column: 32, scope: !2914)
!3290 = !DILocation(line: 968, column: 37, scope: !2916)
!3291 = !DILocation(line: 968, column: 36, scope: !2916)
!3292 = !DILocation(line: 968, column: 24, scope: !2916)
!3293 = !DILocation(line: 968, column: 24, scope: !2918)
!3294 = !DILocation(line: 969, column: 47, scope: !2914)
!3295 = !DILocation(line: 968, column: 24, scope: !2920)
!3296 = !DILocation(line: 968, column: 24, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !2914, file: !1, discriminator: 4)
!3298 = !DILocation(line: 967, column: 14, scope: !2916)
!3299 = !DILocation(line: 967, column: 12, scope: !2916)
!3300 = !DILocation(line: 970, column: 5, scope: !2914)
!3301 = !DILocation(line: 973, column: 46, scope: !2914)
!3302 = !DILocation(line: 973, column: 46, scope: !2916)
!3303 = !DILocation(line: 973, column: 46, scope: !2918)
!3304 = !DILocation(line: 973, column: 46, scope: !2920)
!3305 = !DILocation(line: 973, column: 43, scope: !2920)
!3306 = !DILocation(line: 973, column: 40, scope: !2920)
!3307 = !DILocation(line: 973, column: 5, scope: !2920)
!3308 = !DILocation(line: 973, column: 11, scope: !2920)
!3309 = !DILocation(line: 973, column: 15, scope: !2920)
!3310 = !DILocation(line: 973, column: 38, scope: !2920)
!3311 = !DILocation(line: 975, column: 5, scope: !2914)
!3312 = !DILocation(line: 981, column: 44, scope: !2914)
!3313 = !DILocation(line: 981, column: 44, scope: !2916)
!3314 = !DILocation(line: 981, column: 44, scope: !2918)
!3315 = !DILocation(line: 981, column: 44, scope: !2920)
!3316 = !DILocation(line: 981, column: 41, scope: !2920)
!3317 = !DILocation(line: 981, column: 38, scope: !2920)
!3318 = !DILocation(line: 981, column: 5, scope: !2920)
!3319 = !DILocation(line: 981, column: 11, scope: !2920)
!3320 = !DILocation(line: 981, column: 15, scope: !2920)
!3321 = !DILocation(line: 981, column: 36, scope: !2920)
!3322 = !DILocation(line: 982, column: 5, scope: !2914)
!3323 = !DILocation(line: 990, column: 13, scope: !2914)
!3324 = !DILocation(line: 990, column: 13, scope: !2916)
!3325 = !DILocation(line: 990, column: 13, scope: !2918)
!3326 = !DILocation(line: 990, column: 13, scope: !2920)
!3327 = !DILocation(line: 990, column: 10, scope: !2920)
!3328 = !DILocation(line: 990, column: 7, scope: !2920)
!3329 = !DILocation(line: 989, column: 5, scope: !2914)
!3330 = !DILocation(line: 989, column: 11, scope: !2914)
!3331 = !DILocation(line: 989, column: 15, scope: !2914)
!3332 = !DILocation(line: 989, column: 65, scope: !2914)
!3333 = !DILocation(line: 991, column: 5, scope: !2914)
!3334 = !DILocation(line: 998, column: 27, scope: !2914)
!3335 = !DILocation(line: 998, column: 27, scope: !2916)
!3336 = !DILocation(line: 998, column: 27, scope: !2918)
!3337 = !DILocation(line: 998, column: 27, scope: !2920)
!3338 = !DILocation(line: 998, column: 5, scope: !2920)
!3339 = !DILocation(line: 998, column: 11, scope: !2920)
!3340 = !DILocation(line: 998, column: 15, scope: !2920)
!3341 = !DILocation(line: 998, column: 25, scope: !2920)
!3342 = !DILocation(line: 999, column: 5, scope: !2914)
!3343 = !DILocalVariable(name: "postRedir", scope: !3344, file: !1, line: 1012, type: !316)
!3344 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1002, column: 3)
!3345 = !DILocation(line: 1012, column: 9, scope: !3344)
!3346 = !DILocation(line: 1012, column: 34, scope: !3344)
!3347 = !DILocation(line: 1012, column: 34, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3344, file: !1, discriminator: 1)
!3349 = !DILocation(line: 1012, column: 34, scope: !3350)
!3350 = !DILexicalBlockFile(scope: !3344, file: !1, discriminator: 2)
!3351 = !DILocation(line: 1012, column: 34, scope: !3352)
!3352 = !DILexicalBlockFile(scope: !3344, file: !1, discriminator: 3)
!3353 = !DILocation(line: 1012, column: 21, scope: !3352)
!3354 = !DILocation(line: 1012, column: 9, scope: !3352)
!3355 = !DILocation(line: 1013, column: 27, scope: !3344)
!3356 = !DILocation(line: 1013, column: 37, scope: !3344)
!3357 = !DILocation(line: 1013, column: 5, scope: !3344)
!3358 = !DILocation(line: 1013, column: 11, scope: !3344)
!3359 = !DILocation(line: 1013, column: 15, scope: !3344)
!3360 = !DILocation(line: 1013, column: 25, scope: !3344)
!3361 = !DILocation(line: 1015, column: 3, scope: !2914)
!3362 = !DILocation(line: 1021, column: 8, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1021, column: 8)
!3364 = !DILocation(line: 1021, column: 8, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3363, file: !1, discriminator: 1)
!3366 = !DILocation(line: 1021, column: 8, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3363, file: !1, discriminator: 2)
!3368 = !DILocation(line: 1021, column: 8, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3363, file: !1, discriminator: 3)
!3370 = !DILocation(line: 1022, column: 7, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3363, file: !1, line: 1021, column: 29)
!3372 = !DILocation(line: 1022, column: 13, scope: !3371)
!3373 = !DILocation(line: 1022, column: 17, scope: !3371)
!3374 = !DILocation(line: 1022, column: 25, scope: !3371)
!3375 = !DILocation(line: 1023, column: 7, scope: !3371)
!3376 = !DILocation(line: 1023, column: 13, scope: !3371)
!3377 = !DILocation(line: 1023, column: 17, scope: !3371)
!3378 = !DILocation(line: 1023, column: 29, scope: !3371)
!3379 = !DILocation(line: 1024, column: 5, scope: !3371)
!3380 = !DILocation(line: 1026, column: 7, scope: !3363)
!3381 = !DILocation(line: 1026, column: 13, scope: !3363)
!3382 = !DILocation(line: 1026, column: 17, scope: !3363)
!3383 = !DILocation(line: 1026, column: 25, scope: !3363)
!3384 = !DILocation(line: 1027, column: 5, scope: !2914)
!3385 = !DILocation(line: 1035, column: 14, scope: !2914)
!3386 = !DILocation(line: 1035, column: 14, scope: !2916)
!3387 = !DILocation(line: 1035, column: 14, scope: !2918)
!3388 = !DILocation(line: 1035, column: 14, scope: !2920)
!3389 = !DILocation(line: 1035, column: 12, scope: !2920)
!3390 = !DILocation(line: 1037, column: 9, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1037, column: 8)
!3392 = !DILocation(line: 1037, column: 16, scope: !3391)
!3393 = !DILocation(line: 1037, column: 19, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3391, file: !1, discriminator: 1)
!3395 = !DILocation(line: 1037, column: 25, scope: !3394)
!3396 = !DILocation(line: 1037, column: 29, scope: !3394)
!3397 = !DILocation(line: 1037, column: 43, scope: !3394)
!3398 = !DILocation(line: 1037, column: 8, scope: !3394)
!3399 = !DILocation(line: 1038, column: 27, scope: !3391)
!3400 = !DILocation(line: 1038, column: 33, scope: !3391)
!3401 = !DILocation(line: 1038, column: 37, scope: !3391)
!3402 = !DILocation(line: 1038, column: 65, scope: !3391)
!3403 = !DILocation(line: 1038, column: 16, scope: !3391)
!3404 = !DILocation(line: 1038, column: 14, scope: !3391)
!3405 = !DILocation(line: 1038, column: 7, scope: !3391)
!3406 = !DILocation(line: 1044, column: 11, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !1, line: 1044, column: 10)
!3408 = distinct !DILexicalBlock(scope: !3391, file: !1, line: 1039, column: 10)
!3409 = !DILocation(line: 1044, column: 17, scope: !3407)
!3410 = !DILocation(line: 1044, column: 21, scope: !3407)
!3411 = !DILocation(line: 1044, column: 35, scope: !3407)
!3412 = !DILocation(line: 1044, column: 10, scope: !3408)
!3413 = !DILocation(line: 1047, column: 16, scope: !3407)
!3414 = !DILocation(line: 1047, column: 9, scope: !3407)
!3415 = !DILocalVariable(name: "p", scope: !3416, file: !1, line: 1049, type: !500)
!3416 = distinct !DILexicalBlock(scope: !3407, file: !1, line: 1048, column: 12)
!3417 = !DILocation(line: 1049, column: 15, scope: !3416)
!3418 = !DILocation(line: 1051, column: 27, scope: !3416)
!3419 = !DILocation(line: 1051, column: 33, scope: !3416)
!3420 = !DILocation(line: 1051, column: 37, scope: !3416)
!3421 = !DILocation(line: 1051, column: 16, scope: !3416)
!3422 = !DILocation(line: 1058, column: 13, scope: !3416)
!3423 = !DILocation(line: 1058, column: 13, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 1)
!3425 = !DILocation(line: 1058, column: 13, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 2)
!3427 = !DILocation(line: 1058, column: 13, scope: !3428)
!3428 = !DILexicalBlockFile(scope: !3416, file: !1, discriminator: 3)
!3429 = !DILocation(line: 1058, column: 11, scope: !3428)
!3430 = !DILocation(line: 1061, column: 13, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3416, file: !1, line: 1061, column: 12)
!3432 = !DILocation(line: 1061, column: 12, scope: !3416)
!3433 = !DILocation(line: 1062, column: 18, scope: !3431)
!3434 = !DILocation(line: 1062, column: 11, scope: !3431)
!3435 = !DILocation(line: 1064, column: 14, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !1, line: 1064, column: 14)
!3437 = distinct !DILexicalBlock(scope: !3431, file: !1, line: 1063, column: 14)
!3438 = !DILocation(line: 1064, column: 20, scope: !3436)
!3439 = !DILocation(line: 1064, column: 24, scope: !3436)
!3440 = !DILocation(line: 1064, column: 14, scope: !3437)
!3441 = !DILocation(line: 1065, column: 20, scope: !3436)
!3442 = !DILocation(line: 1065, column: 23, scope: !3436)
!3443 = !DILocation(line: 1065, column: 39, scope: !3436)
!3444 = !DILocation(line: 1065, column: 45, scope: !3436)
!3445 = !DILocation(line: 1065, column: 49, scope: !3436)
!3446 = !DILocation(line: 1065, column: 13, scope: !3436)
!3447 = !DILocation(line: 1067, column: 50, scope: !3437)
!3448 = !DILocation(line: 1067, column: 11, scope: !3437)
!3449 = !DILocation(line: 1067, column: 17, scope: !3437)
!3450 = !DILocation(line: 1067, column: 21, scope: !3437)
!3451 = !DILocation(line: 1067, column: 48, scope: !3437)
!3452 = !DILocation(line: 1072, column: 28, scope: !2914)
!3453 = !DILocation(line: 1072, column: 34, scope: !2914)
!3454 = !DILocation(line: 1072, column: 38, scope: !2914)
!3455 = !DILocation(line: 1072, column: 5, scope: !2914)
!3456 = !DILocation(line: 1072, column: 11, scope: !2914)
!3457 = !DILocation(line: 1072, column: 15, scope: !2914)
!3458 = !DILocation(line: 1072, column: 26, scope: !2914)
!3459 = !DILocation(line: 1073, column: 5, scope: !2914)
!3460 = !DILocation(line: 1073, column: 11, scope: !2914)
!3461 = !DILocation(line: 1073, column: 15, scope: !2914)
!3462 = !DILocation(line: 1073, column: 23, scope: !2914)
!3463 = !DILocation(line: 1074, column: 5, scope: !2914)
!3464 = !DILocation(line: 1080, column: 28, scope: !2914)
!3465 = !DILocation(line: 1080, column: 28, scope: !2916)
!3466 = !DILocation(line: 1080, column: 28, scope: !2918)
!3467 = !DILocation(line: 1080, column: 28, scope: !2920)
!3468 = !DILocation(line: 1080, column: 5, scope: !2920)
!3469 = !DILocation(line: 1080, column: 11, scope: !2920)
!3470 = !DILocation(line: 1080, column: 15, scope: !2920)
!3471 = !DILocation(line: 1080, column: 26, scope: !2920)
!3472 = !DILocation(line: 1082, column: 23, scope: !2914)
!3473 = !DILocation(line: 1082, column: 29, scope: !2914)
!3474 = !DILocation(line: 1082, column: 33, scope: !2914)
!3475 = !DILocation(line: 1082, column: 12, scope: !2914)
!3476 = !DILocation(line: 1083, column: 5, scope: !2914)
!3477 = !DILocation(line: 1083, column: 11, scope: !2914)
!3478 = !DILocation(line: 1083, column: 15, scope: !2914)
!3479 = !DILocation(line: 1083, column: 23, scope: !2914)
!3480 = !DILocation(line: 1084, column: 5, scope: !2914)
!3481 = !DILocation(line: 1091, column: 15, scope: !2914)
!3482 = !DILocation(line: 1091, column: 15, scope: !2916)
!3483 = !DILocation(line: 1091, column: 15, scope: !2918)
!3484 = !DILocation(line: 1091, column: 15, scope: !2920)
!3485 = !DILocation(line: 1091, column: 13, scope: !2920)
!3486 = !DILocation(line: 1093, column: 8, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1093, column: 8)
!3488 = !DILocation(line: 1093, column: 14, scope: !3487)
!3489 = !DILocation(line: 1093, column: 18, scope: !3487)
!3490 = !DILocation(line: 1093, column: 34, scope: !3487)
!3491 = !DILocation(line: 1093, column: 32, scope: !3487)
!3492 = !DILocation(line: 1093, column: 42, scope: !3487)
!3493 = !DILocation(line: 1094, column: 8, scope: !3487)
!3494 = !DILocation(line: 1094, column: 14, scope: !3487)
!3495 = !DILocation(line: 1094, column: 18, scope: !3487)
!3496 = !DILocation(line: 1094, column: 32, scope: !3487)
!3497 = !DILocation(line: 1094, column: 38, scope: !3487)
!3498 = !DILocation(line: 1094, column: 42, scope: !3487)
!3499 = !DILocation(line: 1094, column: 29, scope: !3487)
!3500 = !DILocation(line: 1093, column: 8, scope: !2916)
!3501 = !DILocation(line: 1096, column: 25, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3487, file: !1, line: 1094, column: 70)
!3503 = !DILocation(line: 1096, column: 31, scope: !3502)
!3504 = !DILocation(line: 1096, column: 35, scope: !3502)
!3505 = !DILocation(line: 1096, column: 14, scope: !3502)
!3506 = !DILocation(line: 1097, column: 7, scope: !3502)
!3507 = !DILocation(line: 1097, column: 13, scope: !3502)
!3508 = !DILocation(line: 1097, column: 17, scope: !3502)
!3509 = !DILocation(line: 1097, column: 28, scope: !3502)
!3510 = !DILocation(line: 1098, column: 5, scope: !3502)
!3511 = !DILocation(line: 1100, column: 31, scope: !2914)
!3512 = !DILocation(line: 1100, column: 5, scope: !2914)
!3513 = !DILocation(line: 1100, column: 11, scope: !2914)
!3514 = !DILocation(line: 1100, column: 15, scope: !2914)
!3515 = !DILocation(line: 1100, column: 29, scope: !2914)
!3516 = !DILocation(line: 1101, column: 5, scope: !2914)
!3517 = !DILocation(line: 1108, column: 15, scope: !2914)
!3518 = !DILocation(line: 1108, column: 15, scope: !2916)
!3519 = !DILocation(line: 1108, column: 15, scope: !2918)
!3520 = !DILocation(line: 1108, column: 15, scope: !2920)
!3521 = !DILocation(line: 1108, column: 13, scope: !2920)
!3522 = !DILocation(line: 1110, column: 8, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1110, column: 8)
!3524 = !DILocation(line: 1110, column: 14, scope: !3523)
!3525 = !DILocation(line: 1110, column: 18, scope: !3523)
!3526 = !DILocation(line: 1110, column: 34, scope: !3523)
!3527 = !DILocation(line: 1110, column: 32, scope: !3523)
!3528 = !DILocation(line: 1110, column: 42, scope: !3523)
!3529 = !DILocation(line: 1111, column: 8, scope: !3523)
!3530 = !DILocation(line: 1111, column: 14, scope: !3523)
!3531 = !DILocation(line: 1111, column: 18, scope: !3523)
!3532 = !DILocation(line: 1111, column: 32, scope: !3523)
!3533 = !DILocation(line: 1111, column: 38, scope: !3523)
!3534 = !DILocation(line: 1111, column: 42, scope: !3523)
!3535 = !DILocation(line: 1111, column: 29, scope: !3523)
!3536 = !DILocation(line: 1110, column: 8, scope: !2916)
!3537 = !DILocation(line: 1113, column: 25, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3523, file: !1, line: 1111, column: 70)
!3539 = !DILocation(line: 1113, column: 31, scope: !3538)
!3540 = !DILocation(line: 1113, column: 35, scope: !3538)
!3541 = !DILocation(line: 1113, column: 14, scope: !3538)
!3542 = !DILocation(line: 1114, column: 7, scope: !3538)
!3543 = !DILocation(line: 1114, column: 13, scope: !3538)
!3544 = !DILocation(line: 1114, column: 17, scope: !3538)
!3545 = !DILocation(line: 1114, column: 28, scope: !3538)
!3546 = !DILocation(line: 1115, column: 5, scope: !3538)
!3547 = !DILocation(line: 1117, column: 31, scope: !2914)
!3548 = !DILocation(line: 1117, column: 5, scope: !2914)
!3549 = !DILocation(line: 1117, column: 11, scope: !2914)
!3550 = !DILocation(line: 1117, column: 15, scope: !2914)
!3551 = !DILocation(line: 1117, column: 29, scope: !2914)
!3552 = !DILocation(line: 1118, column: 5, scope: !2914)
!3553 = !DILocation(line: 1124, column: 26, scope: !2914)
!3554 = !DILocation(line: 1124, column: 26, scope: !2916)
!3555 = !DILocation(line: 1124, column: 26, scope: !2918)
!3556 = !DILocation(line: 1124, column: 26, scope: !2920)
!3557 = !DILocation(line: 1124, column: 5, scope: !2920)
!3558 = !DILocation(line: 1124, column: 11, scope: !2920)
!3559 = !DILocation(line: 1124, column: 15, scope: !2920)
!3560 = !DILocation(line: 1124, column: 24, scope: !2920)
!3561 = !DILocation(line: 1125, column: 5, scope: !2914)
!3562 = !DILocation(line: 1125, column: 11, scope: !2914)
!3563 = !DILocation(line: 1125, column: 15, scope: !2914)
!3564 = !DILocation(line: 1125, column: 23, scope: !2914)
!3565 = !DILocation(line: 1126, column: 5, scope: !2914)
!3566 = !DILocation(line: 1126, column: 11, scope: !2914)
!3567 = !DILocation(line: 1126, column: 15, scope: !2914)
!3568 = !DILocation(line: 1126, column: 27, scope: !2914)
!3569 = !DILocation(line: 1127, column: 5, scope: !2914)
!3570 = !DILocation(line: 1133, column: 8, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1133, column: 8)
!3572 = !DILocation(line: 1133, column: 14, scope: !3571)
!3573 = !DILocation(line: 1133, column: 21, scope: !3571)
!3574 = !DILocation(line: 1133, column: 8, scope: !2914)
!3575 = !DILocation(line: 1134, column: 7, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 1133, column: 36)
!3577 = !DILocation(line: 1134, column: 7, scope: !3578)
!3578 = !DILexicalBlockFile(scope: !3579, file: !1, discriminator: 1)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !1, line: 1134, column: 7)
!3580 = !DILocation(line: 1135, column: 7, scope: !3576)
!3581 = !DILocation(line: 1135, column: 13, scope: !3576)
!3582 = !DILocation(line: 1135, column: 20, scope: !3576)
!3583 = !DILocation(line: 1135, column: 34, scope: !3576)
!3584 = !DILocation(line: 1136, column: 5, scope: !3576)
!3585 = !DILocation(line: 1137, column: 25, scope: !2914)
!3586 = !DILocation(line: 1137, column: 31, scope: !2914)
!3587 = !DILocation(line: 1137, column: 35, scope: !2914)
!3588 = !DILocation(line: 1138, column: 24, scope: !2914)
!3589 = !DILocation(line: 1138, column: 24, scope: !2916)
!3590 = !DILocation(line: 1138, column: 24, scope: !2918)
!3591 = !DILocation(line: 1138, column: 24, scope: !2920)
!3592 = !DILocation(line: 1137, column: 14, scope: !2916)
!3593 = !DILocation(line: 1137, column: 12, scope: !2916)
!3594 = !DILocation(line: 1139, column: 28, scope: !2914)
!3595 = !DILocation(line: 1139, column: 34, scope: !2914)
!3596 = !DILocation(line: 1139, column: 38, scope: !2914)
!3597 = !DILocation(line: 1139, column: 5, scope: !2914)
!3598 = !DILocation(line: 1139, column: 11, scope: !2914)
!3599 = !DILocation(line: 1139, column: 18, scope: !2914)
!3600 = !DILocation(line: 1139, column: 26, scope: !2914)
!3601 = !DILocation(line: 1140, column: 5, scope: !2914)
!3602 = !DILocation(line: 1146, column: 25, scope: !2914)
!3603 = !DILocation(line: 1146, column: 31, scope: !2914)
!3604 = !DILocation(line: 1146, column: 35, scope: !2914)
!3605 = !DILocation(line: 1147, column: 24, scope: !2914)
!3606 = !DILocation(line: 1147, column: 24, scope: !2916)
!3607 = !DILocation(line: 1147, column: 24, scope: !2918)
!3608 = !DILocation(line: 1147, column: 24, scope: !2920)
!3609 = !DILocation(line: 1146, column: 14, scope: !2916)
!3610 = !DILocation(line: 1146, column: 12, scope: !2916)
!3611 = !DILocation(line: 1148, column: 5, scope: !2914)
!3612 = !DILocation(line: 1154, column: 25, scope: !2914)
!3613 = !DILocation(line: 1154, column: 25, scope: !2916)
!3614 = !DILocation(line: 1154, column: 25, scope: !2918)
!3615 = !DILocation(line: 1154, column: 25, scope: !2920)
!3616 = !DILocation(line: 1154, column: 5, scope: !2920)
!3617 = !DILocation(line: 1154, column: 11, scope: !2920)
!3618 = !DILocation(line: 1154, column: 15, scope: !2920)
!3619 = !DILocation(line: 1154, column: 23, scope: !2920)
!3620 = !DILocation(line: 1155, column: 5, scope: !2914)
!3621 = !DILocation(line: 1168, column: 30, scope: !2914)
!3622 = !DILocation(line: 1168, column: 30, scope: !2916)
!3623 = !DILocation(line: 1168, column: 30, scope: !2918)
!3624 = !DILocation(line: 1168, column: 30, scope: !2920)
!3625 = !DILocation(line: 1168, column: 5, scope: !2920)
!3626 = !DILocation(line: 1168, column: 11, scope: !2920)
!3627 = !DILocation(line: 1168, column: 15, scope: !2920)
!3628 = !DILocation(line: 1168, column: 28, scope: !2920)
!3629 = !DILocation(line: 1169, column: 5, scope: !2914)
!3630 = !DILocation(line: 1175, column: 11, scope: !2914)
!3631 = !DILocation(line: 1175, column: 11, scope: !2916)
!3632 = !DILocation(line: 1175, column: 11, scope: !2918)
!3633 = !DILocation(line: 1175, column: 11, scope: !2920)
!3634 = !DILocation(line: 1175, column: 9, scope: !2920)
!3635 = !DILocation(line: 1176, column: 30, scope: !2914)
!3636 = !DILocation(line: 1176, column: 34, scope: !2914)
!3637 = !DILocation(line: 1176, column: 29, scope: !2914)
!3638 = !DILocation(line: 1176, column: 5, scope: !2914)
!3639 = !DILocation(line: 1176, column: 11, scope: !2914)
!3640 = !DILocation(line: 1176, column: 15, scope: !2914)
!3641 = !DILocation(line: 1176, column: 27, scope: !2914)
!3642 = !DILocation(line: 1177, column: 5, scope: !2914)
!3643 = !DILocation(line: 1183, column: 32, scope: !2914)
!3644 = !DILocation(line: 1183, column: 32, scope: !2916)
!3645 = !DILocation(line: 1183, column: 32, scope: !2918)
!3646 = !DILocation(line: 1183, column: 32, scope: !2920)
!3647 = !DILocation(line: 1183, column: 5, scope: !2920)
!3648 = !DILocation(line: 1183, column: 11, scope: !2920)
!3649 = !DILocation(line: 1183, column: 15, scope: !2920)
!3650 = !DILocation(line: 1183, column: 30, scope: !2920)
!3651 = !DILocation(line: 1184, column: 5, scope: !2914)
!3652 = !DILocation(line: 1191, column: 25, scope: !2914)
!3653 = !DILocation(line: 1191, column: 31, scope: !2914)
!3654 = !DILocation(line: 1191, column: 35, scope: !2914)
!3655 = !DILocation(line: 1192, column: 24, scope: !2914)
!3656 = !DILocation(line: 1192, column: 24, scope: !2916)
!3657 = !DILocation(line: 1192, column: 24, scope: !2918)
!3658 = !DILocation(line: 1192, column: 24, scope: !2920)
!3659 = !DILocation(line: 1191, column: 14, scope: !2916)
!3660 = !DILocation(line: 1191, column: 12, scope: !2916)
!3661 = !DILocation(line: 1193, column: 5, scope: !2914)
!3662 = !DILocation(line: 1199, column: 22, scope: !2914)
!3663 = !DILocation(line: 1199, column: 22, scope: !2916)
!3664 = !DILocation(line: 1199, column: 22, scope: !2918)
!3665 = !DILocation(line: 1199, column: 22, scope: !2920)
!3666 = !DILocation(line: 1199, column: 12, scope: !2920)
!3667 = !DILocation(line: 1200, column: 8, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1200, column: 8)
!3669 = !DILocation(line: 1200, column: 8, scope: !2914)
!3670 = !DILocalVariable(name: "cl", scope: !3671, file: !1, line: 1201, type: !817)
!3671 = distinct !DILexicalBlock(scope: !3668, file: !1, line: 1200, column: 16)
!3672 = !DILocation(line: 1201, column: 26, scope: !3671)
!3673 = !DILocation(line: 1204, column: 30, scope: !3671)
!3674 = !DILocation(line: 1204, column: 36, scope: !3671)
!3675 = !DILocation(line: 1204, column: 43, scope: !3671)
!3676 = !DILocation(line: 1204, column: 55, scope: !3671)
!3677 = !DILocation(line: 1204, column: 12, scope: !3671)
!3678 = !DILocation(line: 1204, column: 10, scope: !3671)
!3679 = !DILocation(line: 1205, column: 11, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 1205, column: 10)
!3681 = !DILocation(line: 1205, column: 10, scope: !3671)
!3682 = !DILocation(line: 1206, column: 29, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3680, file: !1, line: 1205, column: 15)
!3684 = !DILocation(line: 1206, column: 35, scope: !3683)
!3685 = !DILocation(line: 1206, column: 42, scope: !3683)
!3686 = !DILocation(line: 1206, column: 9, scope: !3683)
!3687 = !DILocation(line: 1207, column: 9, scope: !3683)
!3688 = !DILocation(line: 1207, column: 15, scope: !3683)
!3689 = !DILocation(line: 1207, column: 22, scope: !3683)
!3690 = !DILocation(line: 1207, column: 33, scope: !3683)
!3691 = !DILocation(line: 1208, column: 9, scope: !3683)
!3692 = !DILocation(line: 1210, column: 33, scope: !3671)
!3693 = !DILocation(line: 1210, column: 7, scope: !3671)
!3694 = !DILocation(line: 1210, column: 13, scope: !3671)
!3695 = !DILocation(line: 1210, column: 20, scope: !3671)
!3696 = !DILocation(line: 1210, column: 31, scope: !3671)
!3697 = !DILocation(line: 1211, column: 5, scope: !3671)
!3698 = !DILocation(line: 1212, column: 5, scope: !2914)
!3699 = !DILocalVariable(name: "newcookies", scope: !3700, file: !1, line: 1219, type: !490)
!3700 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1218, column: 3)
!3701 = !DILocation(line: 1219, column: 24, scope: !3700)
!3702 = !DILocation(line: 1220, column: 25, scope: !3700)
!3703 = !DILocation(line: 1220, column: 31, scope: !3700)
!3704 = !DILocation(line: 1220, column: 35, scope: !3700)
!3705 = !DILocation(line: 1221, column: 24, scope: !3700)
!3706 = !DILocation(line: 1221, column: 24, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3700, file: !1, discriminator: 1)
!3708 = !DILocation(line: 1221, column: 24, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !3700, file: !1, discriminator: 2)
!3710 = !DILocation(line: 1221, column: 24, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !3700, file: !1, discriminator: 3)
!3712 = !DILocation(line: 1220, column: 14, scope: !3707)
!3713 = !DILocation(line: 1220, column: 12, scope: !3707)
!3714 = !DILocation(line: 1227, column: 35, scope: !3700)
!3715 = !DILocation(line: 1227, column: 47, scope: !3700)
!3716 = !DILocation(line: 1227, column: 53, scope: !3700)
!3717 = !DILocation(line: 1228, column: 35, scope: !3700)
!3718 = !DILocation(line: 1228, column: 41, scope: !3700)
!3719 = !DILocation(line: 1228, column: 45, scope: !3700)
!3720 = !DILocation(line: 1227, column: 18, scope: !3700)
!3721 = !DILocation(line: 1227, column: 16, scope: !3700)
!3722 = !DILocation(line: 1229, column: 9, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3700, file: !1, line: 1229, column: 8)
!3724 = !DILocation(line: 1229, column: 8, scope: !3700)
!3725 = !DILocation(line: 1230, column: 14, scope: !3723)
!3726 = !DILocation(line: 1230, column: 7, scope: !3723)
!3727 = !DILocation(line: 1231, column: 21, scope: !3700)
!3728 = !DILocation(line: 1231, column: 5, scope: !3700)
!3729 = !DILocation(line: 1231, column: 11, scope: !3700)
!3730 = !DILocation(line: 1231, column: 19, scope: !3700)
!3731 = !DILocation(line: 1233, column: 5, scope: !2914)
!3732 = !DILocation(line: 1251, column: 37, scope: !2914)
!3733 = !DILocation(line: 1251, column: 37, scope: !2916)
!3734 = !DILocation(line: 1251, column: 37, scope: !2918)
!3735 = !DILocation(line: 1251, column: 37, scope: !2920)
!3736 = !DILocation(line: 1251, column: 34, scope: !2920)
!3737 = !DILocation(line: 1251, column: 31, scope: !2920)
!3738 = !DILocation(line: 1251, column: 5, scope: !2920)
!3739 = !DILocation(line: 1251, column: 11, scope: !2920)
!3740 = !DILocation(line: 1251, column: 15, scope: !2920)
!3741 = !DILocation(line: 1251, column: 29, scope: !2920)
!3742 = !DILocation(line: 1252, column: 5, scope: !2914)
!3743 = !DILocation(line: 1255, column: 14, scope: !2914)
!3744 = !DILocation(line: 1255, column: 14, scope: !2916)
!3745 = !DILocation(line: 1255, column: 14, scope: !2918)
!3746 = !DILocation(line: 1255, column: 14, scope: !2920)
!3747 = !DILocation(line: 1255, column: 12, scope: !2920)
!3748 = !DILocation(line: 1257, column: 8, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1257, column: 8)
!3750 = !DILocation(line: 1257, column: 15, scope: !3749)
!3751 = !DILocation(line: 1257, column: 8, scope: !2914)
!3752 = !DILocation(line: 1258, column: 7, scope: !3749)
!3753 = !DILocation(line: 1260, column: 8, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1260, column: 8)
!3755 = !DILocation(line: 1260, column: 8, scope: !2914)
!3756 = !DILocation(line: 1262, column: 23, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3754, file: !1, line: 1260, column: 39)
!3758 = !DILocation(line: 1262, column: 7, scope: !3757)
!3759 = !DILocation(line: 1263, column: 28, scope: !3757)
!3760 = !DILocation(line: 1263, column: 34, scope: !3757)
!3761 = !DILocation(line: 1263, column: 7, scope: !3757)
!3762 = !DILocation(line: 1264, column: 25, scope: !3757)
!3763 = !DILocation(line: 1264, column: 7, scope: !3757)
!3764 = !DILocation(line: 1265, column: 5, scope: !3757)
!3765 = !DILocation(line: 1266, column: 13, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3754, file: !1, line: 1266, column: 13)
!3767 = !DILocation(line: 1266, column: 13, scope: !3754)
!3768 = !DILocation(line: 1268, column: 23, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !1, line: 1266, column: 45)
!3770 = !DILocation(line: 1268, column: 7, scope: !3769)
!3771 = !DILocation(line: 1269, column: 29, scope: !3769)
!3772 = !DILocation(line: 1269, column: 35, scope: !3769)
!3773 = !DILocation(line: 1269, column: 7, scope: !3769)
!3774 = !DILocation(line: 1270, column: 25, scope: !3769)
!3775 = !DILocation(line: 1270, column: 7, scope: !3769)
!3776 = !DILocation(line: 1271, column: 5, scope: !3769)
!3777 = !DILocation(line: 1272, column: 13, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3766, file: !1, line: 1272, column: 13)
!3779 = !DILocation(line: 1272, column: 13, scope: !3766)
!3780 = !DILocation(line: 1274, column: 26, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !1, line: 1272, column: 46)
!3782 = !DILocation(line: 1274, column: 7, scope: !3781)
!3783 = !DILocation(line: 1275, column: 5, scope: !3781)
!3784 = !DILocation(line: 1276, column: 13, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3778, file: !1, line: 1276, column: 13)
!3786 = !DILocation(line: 1276, column: 13, scope: !3778)
!3787 = !DILocation(line: 1278, column: 29, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3785, file: !1, line: 1276, column: 47)
!3789 = !DILocation(line: 1278, column: 7, scope: !3788)
!3790 = !DILocation(line: 1279, column: 7, scope: !3788)
!3791 = !DILocation(line: 1282, column: 11, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 1282, column: 10)
!3793 = distinct !DILexicalBlock(scope: !3785, file: !1, line: 1281, column: 10)
!3794 = !DILocation(line: 1282, column: 17, scope: !3792)
!3795 = !DILocation(line: 1282, column: 10, scope: !3793)
!3796 = !DILocation(line: 1284, column: 42, scope: !3792)
!3797 = !DILocation(line: 1284, column: 25, scope: !3792)
!3798 = !DILocation(line: 1284, column: 9, scope: !3792)
!3799 = !DILocation(line: 1284, column: 15, scope: !3792)
!3800 = !DILocation(line: 1284, column: 23, scope: !3792)
!3801 = !DILocation(line: 1286, column: 16, scope: !3793)
!3802 = !DILocation(line: 1286, column: 14, scope: !3793)
!3803 = !DILocation(line: 1287, column: 11, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 1287, column: 10)
!3805 = !DILocation(line: 1287, column: 18, scope: !3804)
!3806 = !DILocation(line: 1287, column: 22, scope: !3807)
!3807 = !DILexicalBlockFile(scope: !3804, file: !1, discriminator: 1)
!3808 = !DILocation(line: 1287, column: 28, scope: !3807)
!3809 = !DILocation(line: 1287, column: 10, scope: !3807)
!3810 = !DILocation(line: 1288, column: 16, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3804, file: !1, line: 1287, column: 37)
!3812 = !DILocation(line: 1289, column: 9, scope: !3811)
!3813 = !DILocation(line: 1290, column: 7, scope: !3811)
!3814 = !DILocation(line: 1292, column: 25, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3804, file: !1, line: 1291, column: 12)
!3816 = !DILocation(line: 1292, column: 9, scope: !3815)
!3817 = !DILocation(line: 1294, column: 12, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3815, file: !1, line: 1294, column: 12)
!3819 = !DILocation(line: 1294, column: 12, scope: !3815)
!3820 = !DILocation(line: 1296, column: 27, scope: !3818)
!3821 = !DILocation(line: 1296, column: 33, scope: !3818)
!3822 = !DILocation(line: 1296, column: 39, scope: !3818)
!3823 = !DILocation(line: 1296, column: 54, scope: !3818)
!3824 = !DILocation(line: 1296, column: 61, scope: !3818)
!3825 = !DILocation(line: 1296, column: 11, scope: !3818)
!3826 = !DILocation(line: 1300, column: 27, scope: !3818)
!3827 = !DILocation(line: 1300, column: 33, scope: !3818)
!3828 = !DILocation(line: 1300, column: 39, scope: !3818)
!3829 = !DILocation(line: 1300, column: 55, scope: !3818)
!3830 = !DILocation(line: 1300, column: 11, scope: !3818)
!3831 = !DILocation(line: 1302, column: 27, scope: !3815)
!3832 = !DILocation(line: 1302, column: 9, scope: !3815)
!3833 = !DILocation(line: 1303, column: 9, scope: !3815)
!3834 = !DILocation(line: 1307, column: 5, scope: !2914)
!3835 = !DILocation(line: 1314, column: 8, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1314, column: 8)
!3837 = !DILocation(line: 1314, column: 8, scope: !3838)
!3838 = !DILexicalBlockFile(scope: !3836, file: !1, discriminator: 1)
!3839 = !DILocation(line: 1314, column: 8, scope: !3840)
!3840 = !DILexicalBlockFile(scope: !3836, file: !1, discriminator: 2)
!3841 = !DILocation(line: 1314, column: 8, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3836, file: !1, discriminator: 3)
!3843 = !DILocation(line: 1315, column: 7, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3836, file: !1, line: 1314, column: 29)
!3845 = !DILocation(line: 1315, column: 13, scope: !3844)
!3846 = !DILocation(line: 1315, column: 17, scope: !3844)
!3847 = !DILocation(line: 1315, column: 25, scope: !3844)
!3848 = !DILocation(line: 1316, column: 7, scope: !3844)
!3849 = !DILocation(line: 1316, column: 13, scope: !3844)
!3850 = !DILocation(line: 1316, column: 17, scope: !3844)
!3851 = !DILocation(line: 1316, column: 24, scope: !3844)
!3852 = !DILocation(line: 1317, column: 7, scope: !3844)
!3853 = !DILocation(line: 1317, column: 13, scope: !3844)
!3854 = !DILocation(line: 1317, column: 17, scope: !3844)
!3855 = !DILocation(line: 1317, column: 29, scope: !3844)
!3856 = !DILocation(line: 1318, column: 5, scope: !3844)
!3857 = !DILocation(line: 1319, column: 5, scope: !2914)
!3858 = !DILocation(line: 1326, column: 11, scope: !2914)
!3859 = !DILocation(line: 1326, column: 11, scope: !2916)
!3860 = !DILocation(line: 1326, column: 11, scope: !2918)
!3861 = !DILocation(line: 1326, column: 11, scope: !2920)
!3862 = !DILocation(line: 1326, column: 9, scope: !2920)
!3863 = !DILocation(line: 1328, column: 8, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1328, column: 8)
!3865 = !DILocation(line: 1328, column: 12, scope: !3864)
!3866 = !DILocation(line: 1328, column: 8, scope: !2914)
!3867 = !DILocation(line: 1329, column: 7, scope: !3864)
!3868 = !DILocation(line: 1331, column: 29, scope: !2914)
!3869 = !DILocation(line: 1331, column: 5, scope: !2914)
!3870 = !DILocation(line: 1331, column: 11, scope: !2914)
!3871 = !DILocation(line: 1331, column: 15, scope: !2914)
!3872 = !DILocation(line: 1331, column: 27, scope: !2914)
!3873 = !DILocation(line: 1332, column: 5, scope: !2914)
!3874 = !DILocalVariable(name: "bitcheck", scope: !3875, file: !1, line: 1339, type: !316)
!3875 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1338, column: 3)
!3876 = !DILocation(line: 1339, column: 9, scope: !3875)
!3877 = !DILocalVariable(name: "authbits", scope: !3875, file: !1, line: 1340, type: !423)
!3878 = !DILocation(line: 1340, column: 10, scope: !3875)
!3879 = !DILocalVariable(name: "auth", scope: !3875, file: !1, line: 1341, type: !349)
!3880 = !DILocation(line: 1341, column: 19, scope: !3875)
!3881 = !DILocation(line: 1341, column: 26, scope: !3875)
!3882 = !DILocation(line: 1341, column: 26, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3875, file: !1, discriminator: 1)
!3884 = !DILocation(line: 1341, column: 26, scope: !3885)
!3885 = !DILexicalBlockFile(scope: !3875, file: !1, discriminator: 2)
!3886 = !DILocation(line: 1341, column: 26, scope: !3887)
!3887 = !DILexicalBlockFile(scope: !3875, file: !1, discriminator: 3)
!3888 = !DILocation(line: 1341, column: 19, scope: !3887)
!3889 = !DILocation(line: 1343, column: 8, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1343, column: 8)
!3891 = !DILocation(line: 1343, column: 13, scope: !3890)
!3892 = !DILocation(line: 1343, column: 8, scope: !3875)
!3893 = !DILocation(line: 1344, column: 28, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !1, line: 1343, column: 31)
!3895 = !DILocation(line: 1344, column: 7, scope: !3894)
!3896 = !DILocation(line: 1344, column: 13, scope: !3894)
!3897 = !DILocation(line: 1344, column: 17, scope: !3894)
!3898 = !DILocation(line: 1344, column: 26, scope: !3894)
!3899 = !DILocation(line: 1345, column: 7, scope: !3894)
!3900 = !DILocation(line: 1350, column: 37, scope: !3875)
!3901 = !DILocation(line: 1350, column: 42, scope: !3875)
!3902 = !DILocation(line: 1350, column: 36, scope: !3875)
!3903 = !DILocation(line: 1350, column: 5, scope: !3875)
!3904 = !DILocation(line: 1350, column: 11, scope: !3875)
!3905 = !DILocation(line: 1350, column: 17, scope: !3875)
!3906 = !DILocation(line: 1350, column: 26, scope: !3875)
!3907 = !DILocation(line: 1350, column: 34, scope: !3875)
!3908 = !DILocation(line: 1352, column: 8, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1352, column: 8)
!3910 = !DILocation(line: 1352, column: 13, scope: !3909)
!3911 = !DILocation(line: 1352, column: 8, scope: !3875)
!3912 = !DILocation(line: 1353, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 1352, column: 35)
!3914 = !DILocation(line: 1354, column: 12, scope: !3913)
!3915 = !DILocation(line: 1355, column: 5, scope: !3913)
!3916 = !DILocation(line: 1359, column: 10, scope: !3875)
!3917 = !DILocation(line: 1360, column: 10, scope: !3875)
!3918 = !DILocation(line: 1365, column: 10, scope: !3875)
!3919 = !DILocation(line: 1370, column: 14, scope: !3875)
!3920 = !DILocation(line: 1371, column: 14, scope: !3875)
!3921 = !DILocation(line: 1372, column: 5, scope: !3875)
!3922 = !DILocation(line: 1372, column: 11, scope: !3883)
!3923 = !DILocation(line: 1372, column: 20, scope: !3883)
!3924 = !DILocation(line: 1372, column: 5, scope: !3883)
!3925 = !DILocation(line: 1373, column: 10, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !1, line: 1373, column: 10)
!3927 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1372, column: 26)
!3928 = !DILocation(line: 1373, column: 33, scope: !3926)
!3929 = !DILocation(line: 1373, column: 22, scope: !3926)
!3930 = !DILocation(line: 1373, column: 15, scope: !3926)
!3931 = !DILocation(line: 1373, column: 10, scope: !3927)
!3932 = !DILocation(line: 1374, column: 18, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3926, file: !1, line: 1373, column: 38)
!3934 = !DILocation(line: 1375, column: 9, scope: !3933)
!3935 = !DILocation(line: 1372, column: 5, scope: !3885)
!3936 = !DILocation(line: 1378, column: 9, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1378, column: 8)
!3938 = !DILocation(line: 1378, column: 8, scope: !3875)
!3939 = !DILocation(line: 1379, column: 7, scope: !3937)
!3940 = !DILocation(line: 1381, column: 26, scope: !3875)
!3941 = !DILocation(line: 1381, column: 5, scope: !3875)
!3942 = !DILocation(line: 1381, column: 11, scope: !3875)
!3943 = !DILocation(line: 1381, column: 15, scope: !3875)
!3944 = !DILocation(line: 1381, column: 24, scope: !3875)
!3945 = !DILocation(line: 1383, column: 3, scope: !2914)
!3946 = !DILocation(line: 1390, column: 36, scope: !2914)
!3947 = !DILocation(line: 1390, column: 36, scope: !2916)
!3948 = !DILocation(line: 1390, column: 36, scope: !2918)
!3949 = !DILocation(line: 1390, column: 36, scope: !2920)
!3950 = !DILocation(line: 1390, column: 5, scope: !2920)
!3951 = !DILocation(line: 1390, column: 11, scope: !2920)
!3952 = !DILocation(line: 1390, column: 15, scope: !2920)
!3953 = !DILocation(line: 1390, column: 34, scope: !2920)
!3954 = !DILocation(line: 1391, column: 5, scope: !2914)
!3955 = !DILocation(line: 1399, column: 25, scope: !2914)
!3956 = !DILocation(line: 1399, column: 31, scope: !2914)
!3957 = !DILocation(line: 1399, column: 35, scope: !2914)
!3958 = !DILocation(line: 1400, column: 24, scope: !2914)
!3959 = !DILocation(line: 1400, column: 24, scope: !2916)
!3960 = !DILocation(line: 1400, column: 24, scope: !2918)
!3961 = !DILocation(line: 1400, column: 24, scope: !2920)
!3962 = !DILocation(line: 1399, column: 14, scope: !2916)
!3963 = !DILocation(line: 1399, column: 12, scope: !2916)
!3964 = !DILocation(line: 1406, column: 5, scope: !2914)
!3965 = !DILocation(line: 1413, column: 45, scope: !2914)
!3966 = !DILocation(line: 1413, column: 45, scope: !2916)
!3967 = !DILocation(line: 1413, column: 45, scope: !2918)
!3968 = !DILocation(line: 1413, column: 45, scope: !2920)
!3969 = !DILocation(line: 1413, column: 42, scope: !2920)
!3970 = !DILocation(line: 1413, column: 39, scope: !2920)
!3971 = !DILocation(line: 1413, column: 5, scope: !2920)
!3972 = !DILocation(line: 1413, column: 11, scope: !2920)
!3973 = !DILocation(line: 1413, column: 15, scope: !2920)
!3974 = !DILocation(line: 1413, column: 37, scope: !2920)
!3975 = !DILocation(line: 1415, column: 5, scope: !2914)
!3976 = !DILocation(line: 1421, column: 27, scope: !2914)
!3977 = !DILocation(line: 1421, column: 27, scope: !2916)
!3978 = !DILocation(line: 1421, column: 27, scope: !2918)
!3979 = !DILocation(line: 1421, column: 27, scope: !2920)
!3980 = !DILocation(line: 1421, column: 5, scope: !2920)
!3981 = !DILocation(line: 1421, column: 11, scope: !2920)
!3982 = !DILocation(line: 1421, column: 15, scope: !2920)
!3983 = !DILocation(line: 1421, column: 25, scope: !2920)
!3984 = !DILocation(line: 1422, column: 5, scope: !2914)
!3985 = !DILocalVariable(name: "bitcheck", scope: !3986, file: !1, line: 1429, type: !316)
!3986 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1428, column: 3)
!3987 = !DILocation(line: 1429, column: 9, scope: !3986)
!3988 = !DILocalVariable(name: "authbits", scope: !3986, file: !1, line: 1430, type: !423)
!3989 = !DILocation(line: 1430, column: 10, scope: !3986)
!3990 = !DILocalVariable(name: "auth", scope: !3986, file: !1, line: 1431, type: !349)
!3991 = !DILocation(line: 1431, column: 19, scope: !3986)
!3992 = !DILocation(line: 1431, column: 26, scope: !3986)
!3993 = !DILocation(line: 1431, column: 26, scope: !3994)
!3994 = !DILexicalBlockFile(scope: !3986, file: !1, discriminator: 1)
!3995 = !DILocation(line: 1431, column: 26, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3986, file: !1, discriminator: 2)
!3997 = !DILocation(line: 1431, column: 26, scope: !3998)
!3998 = !DILexicalBlockFile(scope: !3986, file: !1, discriminator: 3)
!3999 = !DILocation(line: 1431, column: 19, scope: !3998)
!4000 = !DILocation(line: 1433, column: 8, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3986, file: !1, line: 1433, column: 8)
!4002 = !DILocation(line: 1433, column: 13, scope: !4001)
!4003 = !DILocation(line: 1433, column: 8, scope: !3986)
!4004 = !DILocation(line: 1434, column: 29, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !1, line: 1433, column: 31)
!4006 = !DILocation(line: 1434, column: 7, scope: !4005)
!4007 = !DILocation(line: 1434, column: 13, scope: !4005)
!4008 = !DILocation(line: 1434, column: 17, scope: !4005)
!4009 = !DILocation(line: 1434, column: 27, scope: !4005)
!4010 = !DILocation(line: 1435, column: 7, scope: !4005)
!4011 = !DILocation(line: 1440, column: 38, scope: !3986)
!4012 = !DILocation(line: 1440, column: 43, scope: !3986)
!4013 = !DILocation(line: 1440, column: 37, scope: !3986)
!4014 = !DILocation(line: 1440, column: 5, scope: !3986)
!4015 = !DILocation(line: 1440, column: 11, scope: !3986)
!4016 = !DILocation(line: 1440, column: 17, scope: !3986)
!4017 = !DILocation(line: 1440, column: 27, scope: !3986)
!4018 = !DILocation(line: 1440, column: 35, scope: !3986)
!4019 = !DILocation(line: 1442, column: 8, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3986, file: !1, line: 1442, column: 8)
!4021 = !DILocation(line: 1442, column: 13, scope: !4020)
!4022 = !DILocation(line: 1442, column: 8, scope: !3986)
!4023 = !DILocation(line: 1443, column: 12, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4020, file: !1, line: 1442, column: 35)
!4025 = !DILocation(line: 1444, column: 12, scope: !4024)
!4026 = !DILocation(line: 1445, column: 5, scope: !4024)
!4027 = !DILocation(line: 1448, column: 10, scope: !3986)
!4028 = !DILocation(line: 1449, column: 10, scope: !3986)
!4029 = !DILocation(line: 1454, column: 10, scope: !3986)
!4030 = !DILocation(line: 1459, column: 14, scope: !3986)
!4031 = !DILocation(line: 1460, column: 14, scope: !3986)
!4032 = !DILocation(line: 1461, column: 5, scope: !3986)
!4033 = !DILocation(line: 1461, column: 11, scope: !3994)
!4034 = !DILocation(line: 1461, column: 20, scope: !3994)
!4035 = !DILocation(line: 1461, column: 5, scope: !3994)
!4036 = !DILocation(line: 1462, column: 10, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !1, line: 1462, column: 10)
!4038 = distinct !DILexicalBlock(scope: !3986, file: !1, line: 1461, column: 26)
!4039 = !DILocation(line: 1462, column: 33, scope: !4037)
!4040 = !DILocation(line: 1462, column: 22, scope: !4037)
!4041 = !DILocation(line: 1462, column: 15, scope: !4037)
!4042 = !DILocation(line: 1462, column: 10, scope: !4038)
!4043 = !DILocation(line: 1463, column: 18, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4037, file: !1, line: 1462, column: 38)
!4045 = !DILocation(line: 1464, column: 9, scope: !4044)
!4046 = !DILocation(line: 1461, column: 5, scope: !3996)
!4047 = !DILocation(line: 1467, column: 9, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3986, file: !1, line: 1467, column: 8)
!4049 = !DILocation(line: 1467, column: 8, scope: !3986)
!4050 = !DILocation(line: 1468, column: 7, scope: !4048)
!4051 = !DILocation(line: 1470, column: 27, scope: !3986)
!4052 = !DILocation(line: 1470, column: 5, scope: !3986)
!4053 = !DILocation(line: 1470, column: 11, scope: !3986)
!4054 = !DILocation(line: 1470, column: 15, scope: !3986)
!4055 = !DILocation(line: 1470, column: 25, scope: !3986)
!4056 = !DILocation(line: 1472, column: 3, scope: !2914)
!4057 = !DILocation(line: 1485, column: 25, scope: !2914)
!4058 = !DILocation(line: 1485, column: 31, scope: !2914)
!4059 = !DILocation(line: 1485, column: 35, scope: !2914)
!4060 = !DILocation(line: 1486, column: 24, scope: !2914)
!4061 = !DILocation(line: 1486, column: 24, scope: !2916)
!4062 = !DILocation(line: 1486, column: 24, scope: !2918)
!4063 = !DILocation(line: 1486, column: 24, scope: !2920)
!4064 = !DILocation(line: 1485, column: 14, scope: !2916)
!4065 = !DILocation(line: 1485, column: 12, scope: !2916)
!4066 = !DILocation(line: 1487, column: 5, scope: !2914)
!4067 = !DILocation(line: 1496, column: 25, scope: !2914)
!4068 = !DILocation(line: 1496, column: 31, scope: !2914)
!4069 = !DILocation(line: 1496, column: 35, scope: !2914)
!4070 = !DILocation(line: 1497, column: 24, scope: !2914)
!4071 = !DILocation(line: 1497, column: 24, scope: !2916)
!4072 = !DILocation(line: 1497, column: 24, scope: !2918)
!4073 = !DILocation(line: 1497, column: 24, scope: !2920)
!4074 = !DILocation(line: 1496, column: 14, scope: !2916)
!4075 = !DILocation(line: 1496, column: 12, scope: !2916)
!4076 = !DILocation(line: 1498, column: 5, scope: !2914)
!4077 = !DILocation(line: 1504, column: 43, scope: !2914)
!4078 = !DILocation(line: 1504, column: 43, scope: !2916)
!4079 = !DILocation(line: 1504, column: 43, scope: !2918)
!4080 = !DILocation(line: 1504, column: 43, scope: !2920)
!4081 = !DILocation(line: 1504, column: 27, scope: !2920)
!4082 = !DILocation(line: 1504, column: 5, scope: !2920)
!4083 = !DILocation(line: 1504, column: 11, scope: !2920)
!4084 = !DILocation(line: 1504, column: 15, scope: !2920)
!4085 = !DILocation(line: 1504, column: 25, scope: !2920)
!4086 = !DILocation(line: 1505, column: 5, scope: !2914)
!4087 = !DILocation(line: 1511, column: 12, scope: !2914)
!4088 = !DILocation(line: 1511, column: 12, scope: !2916)
!4089 = !DILocation(line: 1511, column: 12, scope: !2918)
!4090 = !DILocation(line: 1511, column: 12, scope: !2920)
!4091 = !DILocation(line: 1511, column: 5, scope: !2920)
!4092 = !DILocation(line: 1513, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1511, column: 33)
!4094 = !DILocation(line: 1513, column: 13, scope: !4093)
!4095 = !DILocation(line: 1513, column: 17, scope: !4093)
!4096 = !DILocation(line: 1513, column: 37, scope: !4093)
!4097 = !DILocation(line: 1514, column: 7, scope: !4093)
!4098 = !DILocation(line: 1516, column: 7, scope: !4093)
!4099 = !DILocation(line: 1516, column: 13, scope: !4093)
!4100 = !DILocation(line: 1516, column: 17, scope: !4093)
!4101 = !DILocation(line: 1516, column: 37, scope: !4093)
!4102 = !DILocation(line: 1517, column: 7, scope: !4093)
!4103 = !DILocation(line: 1520, column: 14, scope: !4093)
!4104 = !DILocation(line: 1521, column: 7, scope: !4093)
!4105 = !DILocation(line: 1523, column: 5, scope: !2914)
!4106 = !DILocation(line: 1550, column: 25, scope: !2914)
!4107 = !DILocation(line: 1550, column: 31, scope: !2914)
!4108 = !DILocation(line: 1550, column: 35, scope: !2914)
!4109 = !DILocation(line: 1551, column: 24, scope: !2914)
!4110 = !DILocation(line: 1551, column: 24, scope: !2916)
!4111 = !DILocation(line: 1551, column: 24, scope: !2918)
!4112 = !DILocation(line: 1551, column: 24, scope: !2920)
!4113 = !DILocation(line: 1550, column: 14, scope: !2916)
!4114 = !DILocation(line: 1550, column: 12, scope: !2916)
!4115 = !DILocation(line: 1552, column: 5, scope: !2914)
!4116 = !DILocation(line: 1560, column: 37, scope: !2914)
!4117 = !DILocation(line: 1560, column: 37, scope: !2916)
!4118 = !DILocation(line: 1560, column: 37, scope: !2918)
!4119 = !DILocation(line: 1560, column: 37, scope: !2920)
!4120 = !DILocation(line: 1560, column: 5, scope: !2920)
!4121 = !DILocation(line: 1560, column: 11, scope: !2920)
!4122 = !DILocation(line: 1560, column: 15, scope: !2920)
!4123 = !DILocation(line: 1560, column: 27, scope: !2920)
!4124 = !DILocation(line: 1561, column: 5, scope: !2914)
!4125 = !DILocation(line: 1567, column: 29, scope: !2914)
!4126 = !DILocation(line: 1567, column: 29, scope: !2916)
!4127 = !DILocation(line: 1567, column: 29, scope: !2918)
!4128 = !DILocation(line: 1567, column: 29, scope: !2920)
!4129 = !DILocation(line: 1567, column: 5, scope: !2920)
!4130 = !DILocation(line: 1567, column: 11, scope: !2920)
!4131 = !DILocation(line: 1567, column: 15, scope: !2920)
!4132 = !DILocation(line: 1567, column: 27, scope: !2920)
!4133 = !DILocation(line: 1568, column: 5, scope: !2914)
!4134 = !DILocation(line: 1574, column: 21, scope: !2914)
!4135 = !DILocation(line: 1574, column: 21, scope: !2916)
!4136 = !DILocation(line: 1574, column: 21, scope: !2918)
!4137 = !DILocation(line: 1574, column: 21, scope: !2920)
!4138 = !DILocation(line: 1574, column: 5, scope: !2920)
!4139 = !DILocation(line: 1574, column: 11, scope: !2920)
!4140 = !DILocation(line: 1574, column: 15, scope: !2920)
!4141 = !DILocation(line: 1574, column: 19, scope: !2920)
!4142 = !DILocation(line: 1575, column: 5, scope: !2914)
!4143 = !DILocation(line: 1580, column: 25, scope: !2914)
!4144 = !DILocation(line: 1580, column: 31, scope: !2914)
!4145 = !DILocation(line: 1580, column: 35, scope: !2914)
!4146 = !DILocation(line: 1581, column: 24, scope: !2914)
!4147 = !DILocation(line: 1581, column: 24, scope: !2916)
!4148 = !DILocation(line: 1581, column: 24, scope: !2918)
!4149 = !DILocation(line: 1581, column: 24, scope: !2920)
!4150 = !DILocation(line: 1580, column: 14, scope: !2916)
!4151 = !DILocation(line: 1580, column: 12, scope: !2916)
!4152 = !DILocation(line: 1582, column: 31, scope: !2914)
!4153 = !DILocation(line: 1582, column: 37, scope: !2914)
!4154 = !DILocation(line: 1582, column: 41, scope: !2914)
!4155 = !DILocation(line: 1582, column: 30, scope: !2914)
!4156 = !DILocation(line: 1582, column: 5, scope: !2914)
!4157 = !DILocation(line: 1582, column: 11, scope: !2914)
!4158 = !DILocation(line: 1582, column: 15, scope: !2914)
!4159 = !DILocation(line: 1582, column: 28, scope: !2914)
!4160 = !DILocation(line: 1583, column: 5, scope: !2914)
!4161 = !DILocation(line: 1586, column: 36, scope: !2914)
!4162 = !DILocation(line: 1586, column: 36, scope: !2916)
!4163 = !DILocation(line: 1586, column: 36, scope: !2918)
!4164 = !DILocation(line: 1586, column: 36, scope: !2920)
!4165 = !DILocation(line: 1586, column: 33, scope: !2920)
!4166 = !DILocation(line: 1586, column: 30, scope: !2920)
!4167 = !DILocation(line: 1586, column: 5, scope: !2920)
!4168 = !DILocation(line: 1586, column: 11, scope: !2920)
!4169 = !DILocation(line: 1586, column: 15, scope: !2920)
!4170 = !DILocation(line: 1586, column: 28, scope: !2920)
!4171 = !DILocation(line: 1587, column: 5, scope: !2914)
!4172 = !DILocation(line: 1590, column: 36, scope: !2914)
!4173 = !DILocation(line: 1590, column: 36, scope: !2916)
!4174 = !DILocation(line: 1590, column: 36, scope: !2918)
!4175 = !DILocation(line: 1590, column: 36, scope: !2920)
!4176 = !DILocation(line: 1590, column: 33, scope: !2920)
!4177 = !DILocation(line: 1590, column: 30, scope: !2920)
!4178 = !DILocation(line: 1590, column: 5, scope: !2920)
!4179 = !DILocation(line: 1590, column: 11, scope: !2920)
!4180 = !DILocation(line: 1590, column: 15, scope: !2920)
!4181 = !DILocation(line: 1590, column: 28, scope: !2920)
!4182 = !DILocation(line: 1591, column: 5, scope: !2914)
!4183 = !DILocation(line: 1594, column: 36, scope: !2914)
!4184 = !DILocation(line: 1594, column: 36, scope: !2916)
!4185 = !DILocation(line: 1594, column: 36, scope: !2918)
!4186 = !DILocation(line: 1594, column: 36, scope: !2920)
!4187 = !DILocation(line: 1594, column: 33, scope: !2920)
!4188 = !DILocation(line: 1594, column: 30, scope: !2920)
!4189 = !DILocation(line: 1594, column: 5, scope: !2920)
!4190 = !DILocation(line: 1594, column: 11, scope: !2920)
!4191 = !DILocation(line: 1594, column: 15, scope: !2920)
!4192 = !DILocation(line: 1594, column: 28, scope: !2920)
!4193 = !DILocation(line: 1595, column: 5, scope: !2914)
!4194 = !DILocation(line: 1598, column: 38, scope: !2914)
!4195 = !DILocation(line: 1598, column: 38, scope: !2916)
!4196 = !DILocation(line: 1598, column: 38, scope: !2918)
!4197 = !DILocation(line: 1598, column: 38, scope: !2920)
!4198 = !DILocation(line: 1598, column: 25, scope: !2920)
!4199 = !DILocation(line: 1598, column: 5, scope: !2920)
!4200 = !DILocation(line: 1598, column: 11, scope: !2920)
!4201 = !DILocation(line: 1598, column: 15, scope: !2920)
!4202 = !DILocation(line: 1598, column: 23, scope: !2920)
!4203 = !DILocation(line: 1599, column: 5, scope: !2914)
!4204 = !DILocation(line: 1606, column: 35, scope: !2914)
!4205 = !DILocation(line: 1606, column: 35, scope: !2916)
!4206 = !DILocation(line: 1606, column: 35, scope: !2918)
!4207 = !DILocation(line: 1606, column: 35, scope: !2920)
!4208 = !DILocation(line: 1606, column: 32, scope: !2920)
!4209 = !DILocation(line: 1606, column: 29, scope: !2920)
!4210 = !DILocation(line: 1606, column: 5, scope: !2920)
!4211 = !DILocation(line: 1606, column: 11, scope: !2920)
!4212 = !DILocation(line: 1606, column: 15, scope: !2920)
!4213 = !DILocation(line: 1606, column: 27, scope: !2920)
!4214 = !DILocation(line: 1607, column: 5, scope: !2914)
!4215 = !DILocation(line: 1614, column: 24, scope: !2914)
!4216 = !DILocation(line: 1614, column: 24, scope: !2916)
!4217 = !DILocation(line: 1614, column: 24, scope: !2918)
!4218 = !DILocation(line: 1614, column: 24, scope: !2920)
!4219 = !DILocation(line: 1614, column: 5, scope: !2920)
!4220 = !DILocation(line: 1614, column: 11, scope: !2920)
!4221 = !DILocation(line: 1614, column: 15, scope: !2920)
!4222 = !DILocation(line: 1614, column: 22, scope: !2920)
!4223 = !DILocation(line: 1615, column: 5, scope: !2914)
!4224 = !DILocation(line: 1621, column: 26, scope: !2914)
!4225 = !DILocation(line: 1621, column: 26, scope: !2916)
!4226 = !DILocation(line: 1621, column: 26, scope: !2918)
!4227 = !DILocation(line: 1621, column: 26, scope: !2920)
!4228 = !DILocation(line: 1621, column: 5, scope: !2920)
!4229 = !DILocation(line: 1621, column: 11, scope: !2920)
!4230 = !DILocation(line: 1621, column: 15, scope: !2920)
!4231 = !DILocation(line: 1621, column: 24, scope: !2920)
!4232 = !DILocation(line: 1622, column: 5, scope: !2914)
!4233 = !DILocation(line: 1628, column: 26, scope: !2914)
!4234 = !DILocation(line: 1628, column: 26, scope: !2916)
!4235 = !DILocation(line: 1628, column: 26, scope: !2918)
!4236 = !DILocation(line: 1628, column: 26, scope: !2920)
!4237 = !DILocation(line: 1628, column: 5, scope: !2920)
!4238 = !DILocation(line: 1628, column: 11, scope: !2920)
!4239 = !DILocation(line: 1628, column: 15, scope: !2920)
!4240 = !DILocation(line: 1628, column: 24, scope: !2920)
!4241 = !DILocation(line: 1629, column: 5, scope: !2914)
!4242 = !DILocation(line: 1635, column: 31, scope: !2914)
!4243 = !DILocation(line: 1635, column: 31, scope: !2916)
!4244 = !DILocation(line: 1635, column: 31, scope: !2918)
!4245 = !DILocation(line: 1635, column: 31, scope: !2920)
!4246 = !DILocation(line: 1635, column: 5, scope: !2920)
!4247 = !DILocation(line: 1635, column: 11, scope: !2920)
!4248 = !DILocation(line: 1635, column: 15, scope: !2920)
!4249 = !DILocation(line: 1635, column: 30, scope: !2920)
!4250 = !DILocation(line: 1636, column: 5, scope: !2914)
!4251 = !DILocation(line: 1642, column: 30, scope: !2914)
!4252 = !DILocation(line: 1642, column: 30, scope: !2916)
!4253 = !DILocation(line: 1642, column: 30, scope: !2918)
!4254 = !DILocation(line: 1642, column: 30, scope: !2920)
!4255 = !DILocation(line: 1642, column: 5, scope: !2920)
!4256 = !DILocation(line: 1642, column: 11, scope: !2920)
!4257 = !DILocation(line: 1642, column: 15, scope: !2920)
!4258 = !DILocation(line: 1642, column: 29, scope: !2920)
!4259 = !DILocation(line: 1643, column: 5, scope: !2914)
!4260 = !DILocation(line: 1649, column: 30, scope: !2914)
!4261 = !DILocation(line: 1649, column: 30, scope: !2916)
!4262 = !DILocation(line: 1649, column: 30, scope: !2918)
!4263 = !DILocation(line: 1649, column: 30, scope: !2920)
!4264 = !DILocation(line: 1649, column: 5, scope: !2920)
!4265 = !DILocation(line: 1649, column: 11, scope: !2920)
!4266 = !DILocation(line: 1649, column: 15, scope: !2920)
!4267 = !DILocation(line: 1649, column: 29, scope: !2920)
!4268 = !DILocation(line: 1650, column: 5, scope: !2914)
!4269 = !DILocation(line: 1656, column: 30, scope: !2914)
!4270 = !DILocation(line: 1656, column: 30, scope: !2916)
!4271 = !DILocation(line: 1656, column: 30, scope: !2918)
!4272 = !DILocation(line: 1656, column: 30, scope: !2920)
!4273 = !DILocation(line: 1656, column: 5, scope: !2920)
!4274 = !DILocation(line: 1656, column: 11, scope: !2920)
!4275 = !DILocation(line: 1656, column: 15, scope: !2920)
!4276 = !DILocation(line: 1656, column: 29, scope: !2920)
!4277 = !DILocation(line: 1657, column: 5, scope: !2914)
!4278 = !DILocation(line: 1662, column: 8, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1662, column: 8)
!4280 = !DILocation(line: 1662, column: 14, scope: !4279)
!4281 = !DILocation(line: 1662, column: 21, scope: !4279)
!4282 = !DILocation(line: 1662, column: 8, scope: !2914)
!4283 = !DILocation(line: 1664, column: 7, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 1662, column: 32)
!4285 = !DILocation(line: 1664, column: 7, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !4287, file: !1, discriminator: 1)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 1664, column: 7)
!4288 = !DILocation(line: 1665, column: 7, scope: !4284)
!4289 = !DILocation(line: 1665, column: 13, scope: !4284)
!4290 = !DILocation(line: 1665, column: 20, scope: !4284)
!4291 = !DILocation(line: 1665, column: 30, scope: !4284)
!4292 = !DILocation(line: 1666, column: 5, scope: !4284)
!4293 = !DILocation(line: 1667, column: 25, scope: !2914)
!4294 = !DILocation(line: 1667, column: 31, scope: !2914)
!4295 = !DILocation(line: 1667, column: 35, scope: !2914)
!4296 = !DILocation(line: 1668, column: 24, scope: !2914)
!4297 = !DILocation(line: 1668, column: 24, scope: !2916)
!4298 = !DILocation(line: 1668, column: 24, scope: !2918)
!4299 = !DILocation(line: 1668, column: 24, scope: !2920)
!4300 = !DILocation(line: 1667, column: 14, scope: !2916)
!4301 = !DILocation(line: 1667, column: 12, scope: !2916)
!4302 = !DILocation(line: 1669, column: 24, scope: !2914)
!4303 = !DILocation(line: 1669, column: 30, scope: !2914)
!4304 = !DILocation(line: 1669, column: 34, scope: !2914)
!4305 = !DILocation(line: 1669, column: 5, scope: !2914)
!4306 = !DILocation(line: 1669, column: 11, scope: !2914)
!4307 = !DILocation(line: 1669, column: 18, scope: !2914)
!4308 = !DILocation(line: 1669, column: 22, scope: !2914)
!4309 = !DILocation(line: 1670, column: 5, scope: !2914)
!4310 = !DILocation(line: 1675, column: 26, scope: !2914)
!4311 = !DILocation(line: 1675, column: 26, scope: !2916)
!4312 = !DILocation(line: 1675, column: 26, scope: !2918)
!4313 = !DILocation(line: 1675, column: 26, scope: !2920)
!4314 = !DILocation(line: 1675, column: 5, scope: !2920)
!4315 = !DILocation(line: 1675, column: 11, scope: !2920)
!4316 = !DILocation(line: 1675, column: 15, scope: !2920)
!4317 = !DILocation(line: 1675, column: 24, scope: !2920)
!4318 = !DILocation(line: 1676, column: 5, scope: !2914)
!4319 = !DILocation(line: 1682, column: 25, scope: !2914)
!4320 = !DILocation(line: 1682, column: 25, scope: !2916)
!4321 = !DILocation(line: 1682, column: 25, scope: !2918)
!4322 = !DILocation(line: 1682, column: 25, scope: !2920)
!4323 = !DILocation(line: 1682, column: 45, scope: !2920)
!4324 = !DILocation(line: 1682, column: 5, scope: !2920)
!4325 = !DILocation(line: 1682, column: 11, scope: !2920)
!4326 = !DILocation(line: 1682, column: 15, scope: !2920)
!4327 = !DILocation(line: 1682, column: 23, scope: !2920)
!4328 = !DILocation(line: 1683, column: 5, scope: !2914)
!4329 = !DILocation(line: 1686, column: 25, scope: !2914)
!4330 = !DILocation(line: 1686, column: 25, scope: !2916)
!4331 = !DILocation(line: 1686, column: 25, scope: !2918)
!4332 = !DILocation(line: 1686, column: 25, scope: !2920)
!4333 = !DILocation(line: 1686, column: 5, scope: !2920)
!4334 = !DILocation(line: 1686, column: 11, scope: !2920)
!4335 = !DILocation(line: 1686, column: 15, scope: !2920)
!4336 = !DILocation(line: 1686, column: 23, scope: !2920)
!4337 = !DILocation(line: 1687, column: 5, scope: !2914)
!4338 = !DILocation(line: 1693, column: 32, scope: !2914)
!4339 = !DILocation(line: 1693, column: 32, scope: !2916)
!4340 = !DILocation(line: 1693, column: 32, scope: !2918)
!4341 = !DILocation(line: 1693, column: 32, scope: !2920)
!4342 = !DILocation(line: 1693, column: 52, scope: !2920)
!4343 = !DILocation(line: 1693, column: 5, scope: !2920)
!4344 = !DILocation(line: 1693, column: 11, scope: !2920)
!4345 = !DILocation(line: 1693, column: 15, scope: !2920)
!4346 = !DILocation(line: 1693, column: 30, scope: !2920)
!4347 = !DILocation(line: 1694, column: 5, scope: !2914)
!4348 = !DILocation(line: 1697, column: 32, scope: !2914)
!4349 = !DILocation(line: 1697, column: 32, scope: !2916)
!4350 = !DILocation(line: 1697, column: 32, scope: !2918)
!4351 = !DILocation(line: 1697, column: 32, scope: !2920)
!4352 = !DILocation(line: 1697, column: 5, scope: !2920)
!4353 = !DILocation(line: 1697, column: 11, scope: !2920)
!4354 = !DILocation(line: 1697, column: 15, scope: !2920)
!4355 = !DILocation(line: 1697, column: 30, scope: !2920)
!4356 = !DILocation(line: 1698, column: 5, scope: !2914)
!4357 = !DILocation(line: 1704, column: 31, scope: !2914)
!4358 = !DILocation(line: 1704, column: 31, scope: !2916)
!4359 = !DILocation(line: 1704, column: 31, scope: !2918)
!4360 = !DILocation(line: 1704, column: 31, scope: !2920)
!4361 = !DILocation(line: 1704, column: 5, scope: !2920)
!4362 = !DILocation(line: 1704, column: 11, scope: !2920)
!4363 = !DILocation(line: 1704, column: 15, scope: !2920)
!4364 = !DILocation(line: 1704, column: 29, scope: !2920)
!4365 = !DILocation(line: 1705, column: 5, scope: !2914)
!4366 = !DILocation(line: 1711, column: 32, scope: !2914)
!4367 = !DILocation(line: 1711, column: 32, scope: !2916)
!4368 = !DILocation(line: 1711, column: 32, scope: !2918)
!4369 = !DILocation(line: 1711, column: 32, scope: !2920)
!4370 = !DILocation(line: 1712, column: 33, scope: !2914)
!4371 = !DILocation(line: 1712, column: 39, scope: !2914)
!4372 = !DILocation(line: 1712, column: 43, scope: !2914)
!4373 = !DILocation(line: 1713, column: 33, scope: !2914)
!4374 = !DILocation(line: 1713, column: 39, scope: !2914)
!4375 = !DILocation(line: 1713, column: 43, scope: !2914)
!4376 = !DILocation(line: 1711, column: 14, scope: !2920)
!4377 = !DILocation(line: 1711, column: 12, scope: !2920)
!4378 = !DILocation(line: 1714, column: 5, scope: !2914)
!4379 = !DILocation(line: 1720, column: 25, scope: !2914)
!4380 = !DILocation(line: 1720, column: 31, scope: !2914)
!4381 = !DILocation(line: 1720, column: 35, scope: !2914)
!4382 = !DILocation(line: 1721, column: 24, scope: !2914)
!4383 = !DILocation(line: 1721, column: 24, scope: !2916)
!4384 = !DILocation(line: 1721, column: 24, scope: !2918)
!4385 = !DILocation(line: 1721, column: 24, scope: !2920)
!4386 = !DILocation(line: 1720, column: 14, scope: !2916)
!4387 = !DILocation(line: 1720, column: 12, scope: !2916)
!4388 = !DILocation(line: 1722, column: 5, scope: !2914)
!4389 = !DILocation(line: 1728, column: 25, scope: !2914)
!4390 = !DILocation(line: 1728, column: 31, scope: !2914)
!4391 = !DILocation(line: 1728, column: 35, scope: !2914)
!4392 = !DILocation(line: 1729, column: 24, scope: !2914)
!4393 = !DILocation(line: 1729, column: 24, scope: !2916)
!4394 = !DILocation(line: 1729, column: 24, scope: !2918)
!4395 = !DILocation(line: 1729, column: 24, scope: !2920)
!4396 = !DILocation(line: 1728, column: 14, scope: !2916)
!4397 = !DILocation(line: 1728, column: 12, scope: !2916)
!4398 = !DILocation(line: 1730, column: 5, scope: !2914)
!4399 = !DILocation(line: 1736, column: 25, scope: !2914)
!4400 = !DILocation(line: 1736, column: 31, scope: !2914)
!4401 = !DILocation(line: 1736, column: 35, scope: !2914)
!4402 = !DILocation(line: 1737, column: 24, scope: !2914)
!4403 = !DILocation(line: 1737, column: 24, scope: !2916)
!4404 = !DILocation(line: 1737, column: 24, scope: !2918)
!4405 = !DILocation(line: 1737, column: 24, scope: !2920)
!4406 = !DILocation(line: 1736, column: 14, scope: !2916)
!4407 = !DILocation(line: 1736, column: 12, scope: !2916)
!4408 = !DILocation(line: 1738, column: 5, scope: !2914)
!4409 = !DILocation(line: 1744, column: 25, scope: !2914)
!4410 = !DILocation(line: 1744, column: 31, scope: !2914)
!4411 = !DILocation(line: 1744, column: 35, scope: !2914)
!4412 = !DILocation(line: 1745, column: 24, scope: !2914)
!4413 = !DILocation(line: 1745, column: 24, scope: !2916)
!4414 = !DILocation(line: 1745, column: 24, scope: !2918)
!4415 = !DILocation(line: 1745, column: 24, scope: !2920)
!4416 = !DILocation(line: 1744, column: 14, scope: !2916)
!4417 = !DILocation(line: 1744, column: 12, scope: !2916)
!4418 = !DILocation(line: 1746, column: 5, scope: !2914)
!4419 = !DILocation(line: 1752, column: 27, scope: !2914)
!4420 = !DILocation(line: 1752, column: 27, scope: !2916)
!4421 = !DILocation(line: 1752, column: 27, scope: !2918)
!4422 = !DILocation(line: 1752, column: 27, scope: !2920)
!4423 = !DILocation(line: 1752, column: 5, scope: !2920)
!4424 = !DILocation(line: 1752, column: 11, scope: !2920)
!4425 = !DILocation(line: 1752, column: 15, scope: !2920)
!4426 = !DILocation(line: 1752, column: 25, scope: !2920)
!4427 = !DILocation(line: 1753, column: 5, scope: !2914)
!4428 = !DILocation(line: 1758, column: 26, scope: !2914)
!4429 = !DILocation(line: 1758, column: 26, scope: !2916)
!4430 = !DILocation(line: 1758, column: 26, scope: !2918)
!4431 = !DILocation(line: 1758, column: 26, scope: !2920)
!4432 = !DILocation(line: 1758, column: 5, scope: !2920)
!4433 = !DILocation(line: 1758, column: 11, scope: !2920)
!4434 = !DILocation(line: 1758, column: 15, scope: !2920)
!4435 = !DILocation(line: 1758, column: 24, scope: !2920)
!4436 = !DILocation(line: 1759, column: 5, scope: !2914)
!4437 = !DILocation(line: 1764, column: 23, scope: !2914)
!4438 = !DILocation(line: 1764, column: 23, scope: !2916)
!4439 = !DILocation(line: 1764, column: 23, scope: !2918)
!4440 = !DILocation(line: 1764, column: 23, scope: !2920)
!4441 = !DILocation(line: 1764, column: 5, scope: !2920)
!4442 = !DILocation(line: 1764, column: 11, scope: !2920)
!4443 = !DILocation(line: 1764, column: 15, scope: !2920)
!4444 = !DILocation(line: 1764, column: 21, scope: !2920)
!4445 = !DILocation(line: 1765, column: 5, scope: !2914)
!4446 = !DILocation(line: 1777, column: 25, scope: !2914)
!4447 = !DILocation(line: 1777, column: 25, scope: !2916)
!4448 = !DILocation(line: 1777, column: 25, scope: !2918)
!4449 = !DILocation(line: 1777, column: 25, scope: !2920)
!4450 = !DILocation(line: 1777, column: 5, scope: !2920)
!4451 = !DILocation(line: 1777, column: 11, scope: !2920)
!4452 = !DILocation(line: 1777, column: 15, scope: !2920)
!4453 = !DILocation(line: 1777, column: 23, scope: !2920)
!4454 = !DILocation(line: 1778, column: 28, scope: !2914)
!4455 = !DILocation(line: 1778, column: 34, scope: !2914)
!4456 = !DILocation(line: 1778, column: 38, scope: !2914)
!4457 = !DILocation(line: 1778, column: 5, scope: !2914)
!4458 = !DILocation(line: 1778, column: 11, scope: !2914)
!4459 = !DILocation(line: 1778, column: 18, scope: !2914)
!4460 = !DILocation(line: 1778, column: 26, scope: !2914)
!4461 = !DILocation(line: 1779, column: 5, scope: !2914)
!4462 = !DILocation(line: 1784, column: 27, scope: !2914)
!4463 = !DILocation(line: 1784, column: 27, scope: !2916)
!4464 = !DILocation(line: 1784, column: 27, scope: !2918)
!4465 = !DILocation(line: 1784, column: 27, scope: !2920)
!4466 = !DILocation(line: 1784, column: 5, scope: !2920)
!4467 = !DILocation(line: 1784, column: 11, scope: !2920)
!4468 = !DILocation(line: 1784, column: 15, scope: !2920)
!4469 = !DILocation(line: 1784, column: 25, scope: !2920)
!4470 = !DILocation(line: 1785, column: 8, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1785, column: 8)
!4472 = !DILocation(line: 1785, column: 14, scope: !4471)
!4473 = !DILocation(line: 1785, column: 18, scope: !4471)
!4474 = !DILocation(line: 1785, column: 8, scope: !2914)
!4475 = !DILocation(line: 1786, column: 7, scope: !4471)
!4476 = !DILocation(line: 1786, column: 13, scope: !4471)
!4477 = !DILocation(line: 1786, column: 22, scope: !4471)
!4478 = !DILocation(line: 1786, column: 31, scope: !4471)
!4479 = !DILocation(line: 1788, column: 7, scope: !4471)
!4480 = !DILocation(line: 1788, column: 13, scope: !4471)
!4481 = !DILocation(line: 1788, column: 22, scope: !4471)
!4482 = !DILocation(line: 1788, column: 31, scope: !4471)
!4483 = !DILocation(line: 1789, column: 5, scope: !2914)
!4484 = !DILocation(line: 1795, column: 27, scope: !2914)
!4485 = !DILocation(line: 1795, column: 27, scope: !2916)
!4486 = !DILocation(line: 1795, column: 27, scope: !2918)
!4487 = !DILocation(line: 1795, column: 27, scope: !2920)
!4488 = !DILocation(line: 1795, column: 5, scope: !2920)
!4489 = !DILocation(line: 1795, column: 11, scope: !2920)
!4490 = !DILocation(line: 1795, column: 15, scope: !2920)
!4491 = !DILocation(line: 1795, column: 25, scope: !2920)
!4492 = !DILocation(line: 1796, column: 8, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1796, column: 8)
!4494 = !DILocation(line: 1796, column: 14, scope: !4493)
!4495 = !DILocation(line: 1796, column: 18, scope: !4493)
!4496 = !DILocation(line: 1796, column: 8, scope: !2914)
!4497 = !DILocation(line: 1797, column: 7, scope: !4493)
!4498 = !DILocation(line: 1797, column: 13, scope: !4493)
!4499 = !DILocation(line: 1797, column: 22, scope: !4493)
!4500 = !DILocation(line: 1797, column: 31, scope: !4493)
!4501 = !DILocation(line: 1799, column: 7, scope: !4493)
!4502 = !DILocation(line: 1799, column: 13, scope: !4493)
!4503 = !DILocation(line: 1799, column: 22, scope: !4493)
!4504 = !DILocation(line: 1799, column: 31, scope: !4493)
!4505 = !DILocation(line: 1801, column: 5, scope: !2914)
!4506 = !DILocation(line: 1807, column: 33, scope: !2914)
!4507 = !DILocation(line: 1807, column: 33, scope: !2916)
!4508 = !DILocation(line: 1807, column: 33, scope: !2918)
!4509 = !DILocation(line: 1807, column: 33, scope: !2920)
!4510 = !DILocation(line: 1807, column: 5, scope: !2920)
!4511 = !DILocation(line: 1807, column: 11, scope: !2920)
!4512 = !DILocation(line: 1807, column: 15, scope: !2920)
!4513 = !DILocation(line: 1807, column: 31, scope: !2920)
!4514 = !DILocation(line: 1808, column: 5, scope: !2914)
!4515 = !DILocation(line: 1815, column: 32, scope: !2914)
!4516 = !DILocation(line: 1815, column: 32, scope: !2916)
!4517 = !DILocation(line: 1815, column: 32, scope: !2918)
!4518 = !DILocation(line: 1815, column: 32, scope: !2920)
!4519 = !DILocation(line: 1816, column: 33, scope: !2914)
!4520 = !DILocation(line: 1816, column: 39, scope: !2914)
!4521 = !DILocation(line: 1816, column: 43, scope: !2914)
!4522 = !DILocation(line: 1817, column: 33, scope: !2914)
!4523 = !DILocation(line: 1817, column: 39, scope: !2914)
!4524 = !DILocation(line: 1817, column: 43, scope: !2914)
!4525 = !DILocation(line: 1815, column: 14, scope: !2920)
!4526 = !DILocation(line: 1815, column: 12, scope: !2920)
!4527 = !DILocation(line: 1818, column: 5, scope: !2914)
!4528 = !DILocation(line: 1823, column: 25, scope: !2914)
!4529 = !DILocation(line: 1823, column: 31, scope: !2914)
!4530 = !DILocation(line: 1823, column: 35, scope: !2914)
!4531 = !DILocation(line: 1824, column: 24, scope: !2914)
!4532 = !DILocation(line: 1824, column: 24, scope: !2916)
!4533 = !DILocation(line: 1824, column: 24, scope: !2918)
!4534 = !DILocation(line: 1824, column: 24, scope: !2920)
!4535 = !DILocation(line: 1823, column: 14, scope: !2916)
!4536 = !DILocation(line: 1823, column: 12, scope: !2916)
!4537 = !DILocation(line: 1825, column: 5, scope: !2914)
!4538 = !DILocation(line: 1830, column: 25, scope: !2914)
!4539 = !DILocation(line: 1830, column: 31, scope: !2914)
!4540 = !DILocation(line: 1830, column: 35, scope: !2914)
!4541 = !DILocation(line: 1831, column: 24, scope: !2914)
!4542 = !DILocation(line: 1831, column: 24, scope: !2916)
!4543 = !DILocation(line: 1831, column: 24, scope: !2918)
!4544 = !DILocation(line: 1831, column: 24, scope: !2920)
!4545 = !DILocation(line: 1830, column: 14, scope: !2916)
!4546 = !DILocation(line: 1830, column: 12, scope: !2916)
!4547 = !DILocation(line: 1832, column: 5, scope: !2914)
!4548 = !DILocation(line: 1837, column: 25, scope: !2914)
!4549 = !DILocation(line: 1837, column: 31, scope: !2914)
!4550 = !DILocation(line: 1837, column: 35, scope: !2914)
!4551 = !DILocation(line: 1838, column: 24, scope: !2914)
!4552 = !DILocation(line: 1838, column: 24, scope: !2916)
!4553 = !DILocation(line: 1838, column: 24, scope: !2918)
!4554 = !DILocation(line: 1838, column: 24, scope: !2920)
!4555 = !DILocation(line: 1837, column: 14, scope: !2916)
!4556 = !DILocation(line: 1837, column: 12, scope: !2916)
!4557 = !DILocation(line: 1839, column: 5, scope: !2914)
!4558 = !DILocation(line: 1846, column: 25, scope: !2914)
!4559 = !DILocation(line: 1846, column: 31, scope: !2914)
!4560 = !DILocation(line: 1846, column: 35, scope: !2914)
!4561 = !DILocation(line: 1847, column: 24, scope: !2914)
!4562 = !DILocation(line: 1847, column: 24, scope: !2916)
!4563 = !DILocation(line: 1847, column: 24, scope: !2918)
!4564 = !DILocation(line: 1847, column: 24, scope: !2920)
!4565 = !DILocation(line: 1846, column: 14, scope: !2916)
!4566 = !DILocation(line: 1846, column: 12, scope: !2916)
!4567 = !DILocation(line: 1848, column: 5, scope: !2914)
!4568 = !DILocation(line: 1853, column: 33, scope: !2914)
!4569 = !DILocation(line: 1853, column: 33, scope: !2916)
!4570 = !DILocation(line: 1853, column: 33, scope: !2918)
!4571 = !DILocation(line: 1853, column: 33, scope: !2920)
!4572 = !DILocation(line: 1853, column: 5, scope: !2920)
!4573 = !DILocation(line: 1853, column: 11, scope: !2920)
!4574 = !DILocation(line: 1853, column: 15, scope: !2920)
!4575 = !DILocation(line: 1853, column: 31, scope: !2920)
!4576 = !DILocation(line: 1854, column: 5, scope: !2914)
!4577 = !DILocation(line: 1859, column: 33, scope: !2914)
!4578 = !DILocation(line: 1859, column: 33, scope: !2916)
!4579 = !DILocation(line: 1859, column: 33, scope: !2918)
!4580 = !DILocation(line: 1859, column: 33, scope: !2920)
!4581 = !DILocation(line: 1859, column: 5, scope: !2920)
!4582 = !DILocation(line: 1859, column: 11, scope: !2920)
!4583 = !DILocation(line: 1859, column: 15, scope: !2920)
!4584 = !DILocation(line: 1859, column: 31, scope: !2920)
!4585 = !DILocation(line: 1860, column: 5, scope: !2914)
!4586 = !DILocation(line: 1865, column: 24, scope: !2914)
!4587 = !DILocation(line: 1865, column: 24, scope: !2916)
!4588 = !DILocation(line: 1865, column: 24, scope: !2918)
!4589 = !DILocation(line: 1865, column: 24, scope: !2920)
!4590 = !DILocation(line: 1865, column: 5, scope: !2920)
!4591 = !DILocation(line: 1865, column: 11, scope: !2920)
!4592 = !DILocation(line: 1865, column: 15, scope: !2920)
!4593 = !DILocation(line: 1865, column: 22, scope: !2920)
!4594 = !DILocation(line: 1869, column: 5, scope: !2914)
!4595 = !DILocation(line: 1875, column: 27, scope: !2914)
!4596 = !DILocation(line: 1875, column: 27, scope: !2916)
!4597 = !DILocation(line: 1875, column: 27, scope: !2918)
!4598 = !DILocation(line: 1875, column: 27, scope: !2920)
!4599 = !DILocation(line: 1875, column: 5, scope: !2920)
!4600 = !DILocation(line: 1875, column: 11, scope: !2920)
!4601 = !DILocation(line: 1875, column: 15, scope: !2920)
!4602 = !DILocation(line: 1875, column: 25, scope: !2920)
!4603 = !DILocation(line: 1876, column: 5, scope: !2914)
!4604 = !DILocation(line: 1882, column: 21, scope: !2914)
!4605 = !DILocation(line: 1882, column: 21, scope: !2916)
!4606 = !DILocation(line: 1882, column: 21, scope: !2918)
!4607 = !DILocation(line: 1882, column: 21, scope: !2920)
!4608 = !DILocation(line: 1882, column: 5, scope: !2920)
!4609 = !DILocation(line: 1882, column: 11, scope: !2920)
!4610 = !DILocation(line: 1882, column: 15, scope: !2920)
!4611 = !DILocation(line: 1882, column: 19, scope: !2920)
!4612 = !DILocation(line: 1883, column: 9, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1883, column: 8)
!4614 = !DILocation(line: 1883, column: 15, scope: !4613)
!4615 = !DILocation(line: 1883, column: 19, scope: !4613)
!4616 = !DILocation(line: 1883, column: 8, scope: !2914)
!4617 = !DILocation(line: 1884, column: 23, scope: !4613)
!4618 = !DILocation(line: 1884, column: 7, scope: !4613)
!4619 = !DILocation(line: 1884, column: 13, scope: !4613)
!4620 = !DILocation(line: 1884, column: 17, scope: !4613)
!4621 = !DILocation(line: 1884, column: 21, scope: !4613)
!4622 = !DILocation(line: 1885, column: 5, scope: !2914)
!4623 = !DILocation(line: 1890, column: 31, scope: !2914)
!4624 = !DILocation(line: 1890, column: 31, scope: !2916)
!4625 = !DILocation(line: 1890, column: 31, scope: !2918)
!4626 = !DILocation(line: 1890, column: 31, scope: !2920)
!4627 = !DILocation(line: 1890, column: 5, scope: !2920)
!4628 = !DILocation(line: 1890, column: 11, scope: !2920)
!4629 = !DILocation(line: 1890, column: 15, scope: !2920)
!4630 = !DILocation(line: 1890, column: 29, scope: !2920)
!4631 = !DILocation(line: 1891, column: 5, scope: !2914)
!4632 = !DILocation(line: 1896, column: 29, scope: !2914)
!4633 = !DILocation(line: 1896, column: 29, scope: !2916)
!4634 = !DILocation(line: 1896, column: 29, scope: !2918)
!4635 = !DILocation(line: 1896, column: 29, scope: !2920)
!4636 = !DILocation(line: 1896, column: 5, scope: !2920)
!4637 = !DILocation(line: 1896, column: 11, scope: !2920)
!4638 = !DILocation(line: 1896, column: 15, scope: !2920)
!4639 = !DILocation(line: 1896, column: 27, scope: !2920)
!4640 = !DILocation(line: 1897, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1897, column: 8)
!4642 = !DILocation(line: 1897, column: 15, scope: !4641)
!4643 = !DILocation(line: 1897, column: 19, scope: !4641)
!4644 = !DILocation(line: 1897, column: 8, scope: !2914)
!4645 = !DILocation(line: 1898, column: 7, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4641, file: !1, line: 1897, column: 32)
!4647 = !DILocation(line: 1898, column: 13, scope: !4646)
!4648 = !DILocation(line: 1898, column: 17, scope: !4646)
!4649 = !DILocation(line: 1898, column: 31, scope: !4646)
!4650 = !DILocation(line: 1900, column: 7, scope: !4646)
!4651 = !DILocation(line: 1900, column: 13, scope: !4646)
!4652 = !DILocation(line: 1900, column: 17, scope: !4646)
!4653 = !DILocation(line: 1900, column: 29, scope: !4646)
!4654 = !DILocation(line: 1901, column: 5, scope: !4646)
!4655 = !DILocation(line: 1903, column: 7, scope: !4641)
!4656 = !DILocation(line: 1903, column: 13, scope: !4641)
!4657 = !DILocation(line: 1903, column: 17, scope: !4641)
!4658 = !DILocation(line: 1903, column: 31, scope: !4641)
!4659 = !DILocation(line: 1904, column: 5, scope: !2914)
!4660 = !DILocation(line: 1909, column: 32, scope: !2914)
!4661 = !DILocation(line: 1909, column: 32, scope: !2916)
!4662 = !DILocation(line: 1909, column: 32, scope: !2918)
!4663 = !DILocation(line: 1909, column: 32, scope: !2920)
!4664 = !DILocation(line: 1909, column: 5, scope: !2920)
!4665 = !DILocation(line: 1909, column: 11, scope: !2920)
!4666 = !DILocation(line: 1909, column: 15, scope: !2920)
!4667 = !DILocation(line: 1909, column: 30, scope: !2920)
!4668 = !DILocation(line: 1910, column: 9, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 1910, column: 8)
!4670 = !DILocation(line: 1910, column: 15, scope: !4669)
!4671 = !DILocation(line: 1910, column: 19, scope: !4669)
!4672 = !DILocation(line: 1910, column: 8, scope: !2914)
!4673 = !DILocation(line: 1911, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 1910, column: 35)
!4675 = !DILocation(line: 1911, column: 13, scope: !4674)
!4676 = !DILocation(line: 1911, column: 17, scope: !4674)
!4677 = !DILocation(line: 1911, column: 30, scope: !4674)
!4678 = !DILocation(line: 1913, column: 7, scope: !4674)
!4679 = !DILocation(line: 1913, column: 13, scope: !4674)
!4680 = !DILocation(line: 1913, column: 17, scope: !4674)
!4681 = !DILocation(line: 1913, column: 32, scope: !4674)
!4682 = !DILocation(line: 1914, column: 5, scope: !4674)
!4683 = !DILocation(line: 1916, column: 7, scope: !4669)
!4684 = !DILocation(line: 1916, column: 13, scope: !4669)
!4685 = !DILocation(line: 1916, column: 17, scope: !4669)
!4686 = !DILocation(line: 1916, column: 30, scope: !4669)
!4687 = !DILocation(line: 1917, column: 5, scope: !2914)
!4688 = !DILocation(line: 1922, column: 27, scope: !2914)
!4689 = !DILocation(line: 1922, column: 27, scope: !2916)
!4690 = !DILocation(line: 1922, column: 27, scope: !2918)
!4691 = !DILocation(line: 1922, column: 27, scope: !2920)
!4692 = !DILocation(line: 1922, column: 5, scope: !2920)
!4693 = !DILocation(line: 1922, column: 11, scope: !2920)
!4694 = !DILocation(line: 1922, column: 15, scope: !2920)
!4695 = !DILocation(line: 1922, column: 25, scope: !2920)
!4696 = !DILocation(line: 1923, column: 5, scope: !2914)
!4697 = !DILocation(line: 1928, column: 29, scope: !2914)
!4698 = !DILocation(line: 1928, column: 29, scope: !2916)
!4699 = !DILocation(line: 1928, column: 29, scope: !2918)
!4700 = !DILocation(line: 1928, column: 29, scope: !2920)
!4701 = !DILocation(line: 1928, column: 5, scope: !2920)
!4702 = !DILocation(line: 1928, column: 11, scope: !2920)
!4703 = !DILocation(line: 1928, column: 15, scope: !2920)
!4704 = !DILocation(line: 1928, column: 27, scope: !2920)
!4705 = !DILocation(line: 1929, column: 5, scope: !2914)
!4706 = !DILocation(line: 1934, column: 33, scope: !2914)
!4707 = !DILocation(line: 1934, column: 33, scope: !2916)
!4708 = !DILocation(line: 1934, column: 33, scope: !2918)
!4709 = !DILocation(line: 1934, column: 33, scope: !2920)
!4710 = !DILocation(line: 1934, column: 5, scope: !2920)
!4711 = !DILocation(line: 1934, column: 11, scope: !2920)
!4712 = !DILocation(line: 1934, column: 15, scope: !2920)
!4713 = !DILocation(line: 1934, column: 31, scope: !2920)
!4714 = !DILocation(line: 1935, column: 5, scope: !2914)
!4715 = !DILocation(line: 1940, column: 31, scope: !2914)
!4716 = !DILocation(line: 1940, column: 31, scope: !2916)
!4717 = !DILocation(line: 1940, column: 31, scope: !2918)
!4718 = !DILocation(line: 1940, column: 31, scope: !2920)
!4719 = !DILocation(line: 1940, column: 5, scope: !2920)
!4720 = !DILocation(line: 1940, column: 11, scope: !2920)
!4721 = !DILocation(line: 1940, column: 15, scope: !2920)
!4722 = !DILocation(line: 1940, column: 29, scope: !2920)
!4723 = !DILocation(line: 1941, column: 5, scope: !2914)
!4724 = !DILocation(line: 1946, column: 30, scope: !2914)
!4725 = !DILocation(line: 1946, column: 30, scope: !2916)
!4726 = !DILocation(line: 1946, column: 30, scope: !2918)
!4727 = !DILocation(line: 1946, column: 30, scope: !2920)
!4728 = !DILocation(line: 1946, column: 5, scope: !2920)
!4729 = !DILocation(line: 1946, column: 11, scope: !2920)
!4730 = !DILocation(line: 1946, column: 15, scope: !2920)
!4731 = !DILocation(line: 1946, column: 28, scope: !2920)
!4732 = !DILocation(line: 1947, column: 5, scope: !2914)
!4733 = !DILocation(line: 1952, column: 28, scope: !2914)
!4734 = !DILocation(line: 1952, column: 28, scope: !2916)
!4735 = !DILocation(line: 1952, column: 28, scope: !2918)
!4736 = !DILocation(line: 1952, column: 28, scope: !2920)
!4737 = !DILocation(line: 1952, column: 5, scope: !2920)
!4738 = !DILocation(line: 1952, column: 11, scope: !2920)
!4739 = !DILocation(line: 1952, column: 15, scope: !2920)
!4740 = !DILocation(line: 1952, column: 26, scope: !2920)
!4741 = !DILocation(line: 1953, column: 5, scope: !2914)
!4742 = !DILocation(line: 1958, column: 30, scope: !2914)
!4743 = !DILocation(line: 1958, column: 30, scope: !2916)
!4744 = !DILocation(line: 1958, column: 30, scope: !2918)
!4745 = !DILocation(line: 1958, column: 30, scope: !2920)
!4746 = !DILocation(line: 1958, column: 5, scope: !2920)
!4747 = !DILocation(line: 1958, column: 11, scope: !2920)
!4748 = !DILocation(line: 1958, column: 15, scope: !2920)
!4749 = !DILocation(line: 1958, column: 28, scope: !2920)
!4750 = !DILocation(line: 1959, column: 5, scope: !2914)
!4751 = !DILocation(line: 1964, column: 25, scope: !2914)
!4752 = !DILocation(line: 1964, column: 31, scope: !2914)
!4753 = !DILocation(line: 1964, column: 35, scope: !2914)
!4754 = !DILocation(line: 1965, column: 24, scope: !2914)
!4755 = !DILocation(line: 1965, column: 24, scope: !2916)
!4756 = !DILocation(line: 1965, column: 24, scope: !2918)
!4757 = !DILocation(line: 1965, column: 24, scope: !2920)
!4758 = !DILocation(line: 1964, column: 14, scope: !2916)
!4759 = !DILocation(line: 1964, column: 12, scope: !2916)
!4760 = !DILocation(line: 1966, column: 5, scope: !2914)
!4761 = !DILocation(line: 1971, column: 25, scope: !2914)
!4762 = !DILocation(line: 1971, column: 31, scope: !2914)
!4763 = !DILocation(line: 1971, column: 35, scope: !2914)
!4764 = !DILocation(line: 1972, column: 24, scope: !2914)
!4765 = !DILocation(line: 1972, column: 24, scope: !2916)
!4766 = !DILocation(line: 1972, column: 24, scope: !2918)
!4767 = !DILocation(line: 1972, column: 24, scope: !2920)
!4768 = !DILocation(line: 1971, column: 14, scope: !2916)
!4769 = !DILocation(line: 1971, column: 12, scope: !2916)
!4770 = !DILocation(line: 1973, column: 5, scope: !2914)
!4771 = !DILocation(line: 1978, column: 25, scope: !2914)
!4772 = !DILocation(line: 1978, column: 31, scope: !2914)
!4773 = !DILocation(line: 1978, column: 35, scope: !2914)
!4774 = !DILocation(line: 1979, column: 24, scope: !2914)
!4775 = !DILocation(line: 1979, column: 24, scope: !2916)
!4776 = !DILocation(line: 1979, column: 24, scope: !2918)
!4777 = !DILocation(line: 1979, column: 24, scope: !2920)
!4778 = !DILocation(line: 1978, column: 14, scope: !2916)
!4779 = !DILocation(line: 1978, column: 12, scope: !2916)
!4780 = !DILocation(line: 1980, column: 5, scope: !2914)
!4781 = !DILocation(line: 1985, column: 25, scope: !2914)
!4782 = !DILocation(line: 1985, column: 31, scope: !2914)
!4783 = !DILocation(line: 1985, column: 35, scope: !2914)
!4784 = !DILocation(line: 1986, column: 24, scope: !2914)
!4785 = !DILocation(line: 1986, column: 24, scope: !2916)
!4786 = !DILocation(line: 1986, column: 24, scope: !2918)
!4787 = !DILocation(line: 1986, column: 24, scope: !2920)
!4788 = !DILocation(line: 1985, column: 14, scope: !2916)
!4789 = !DILocation(line: 1985, column: 12, scope: !2916)
!4790 = !DILocation(line: 1987, column: 5, scope: !2914)
!4791 = !DILocation(line: 1992, column: 25, scope: !2914)
!4792 = !DILocation(line: 1992, column: 31, scope: !2914)
!4793 = !DILocation(line: 1992, column: 35, scope: !2914)
!4794 = !DILocation(line: 1993, column: 24, scope: !2914)
!4795 = !DILocation(line: 1993, column: 24, scope: !2916)
!4796 = !DILocation(line: 1993, column: 24, scope: !2918)
!4797 = !DILocation(line: 1993, column: 24, scope: !2920)
!4798 = !DILocation(line: 1992, column: 14, scope: !2916)
!4799 = !DILocation(line: 1992, column: 12, scope: !2916)
!4800 = !DILocation(line: 1994, column: 5, scope: !2914)
!4801 = !DILocation(line: 1999, column: 25, scope: !2914)
!4802 = !DILocation(line: 1999, column: 31, scope: !2914)
!4803 = !DILocation(line: 1999, column: 35, scope: !2914)
!4804 = !DILocation(line: 2000, column: 24, scope: !2914)
!4805 = !DILocation(line: 2000, column: 24, scope: !2916)
!4806 = !DILocation(line: 2000, column: 24, scope: !2918)
!4807 = !DILocation(line: 2000, column: 24, scope: !2920)
!4808 = !DILocation(line: 1999, column: 14, scope: !2916)
!4809 = !DILocation(line: 1999, column: 12, scope: !2916)
!4810 = !DILocation(line: 2001, column: 5, scope: !2914)
!4811 = !DILocation(line: 2006, column: 25, scope: !2914)
!4812 = !DILocation(line: 2006, column: 31, scope: !2914)
!4813 = !DILocation(line: 2006, column: 35, scope: !2914)
!4814 = !DILocation(line: 2007, column: 24, scope: !2914)
!4815 = !DILocation(line: 2007, column: 24, scope: !2916)
!4816 = !DILocation(line: 2007, column: 24, scope: !2918)
!4817 = !DILocation(line: 2007, column: 24, scope: !2920)
!4818 = !DILocation(line: 2006, column: 14, scope: !2916)
!4819 = !DILocation(line: 2006, column: 12, scope: !2916)
!4820 = !DILocation(line: 2008, column: 5, scope: !2914)
!4821 = !DILocation(line: 2013, column: 25, scope: !2914)
!4822 = !DILocation(line: 2013, column: 31, scope: !2914)
!4823 = !DILocation(line: 2013, column: 35, scope: !2914)
!4824 = !DILocation(line: 2014, column: 24, scope: !2914)
!4825 = !DILocation(line: 2014, column: 24, scope: !2916)
!4826 = !DILocation(line: 2014, column: 24, scope: !2918)
!4827 = !DILocation(line: 2014, column: 24, scope: !2920)
!4828 = !DILocation(line: 2013, column: 14, scope: !2916)
!4829 = !DILocation(line: 2013, column: 12, scope: !2916)
!4830 = !DILocation(line: 2015, column: 5, scope: !2914)
!4831 = !DILocation(line: 2020, column: 25, scope: !2914)
!4832 = !DILocation(line: 2020, column: 31, scope: !2914)
!4833 = !DILocation(line: 2020, column: 35, scope: !2914)
!4834 = !DILocation(line: 2021, column: 24, scope: !2914)
!4835 = !DILocation(line: 2021, column: 24, scope: !2916)
!4836 = !DILocation(line: 2021, column: 24, scope: !2918)
!4837 = !DILocation(line: 2021, column: 24, scope: !2920)
!4838 = !DILocation(line: 2020, column: 14, scope: !2916)
!4839 = !DILocation(line: 2020, column: 12, scope: !2916)
!4840 = !DILocation(line: 2022, column: 5, scope: !2914)
!4841 = !DILocation(line: 2027, column: 25, scope: !2914)
!4842 = !DILocation(line: 2027, column: 31, scope: !2914)
!4843 = !DILocation(line: 2027, column: 35, scope: !2914)
!4844 = !DILocation(line: 2028, column: 24, scope: !2914)
!4845 = !DILocation(line: 2028, column: 24, scope: !2916)
!4846 = !DILocation(line: 2028, column: 24, scope: !2918)
!4847 = !DILocation(line: 2028, column: 24, scope: !2920)
!4848 = !DILocation(line: 2027, column: 14, scope: !2916)
!4849 = !DILocation(line: 2027, column: 12, scope: !2916)
!4850 = !DILocation(line: 2029, column: 5, scope: !2914)
!4851 = !DILocation(line: 2034, column: 14, scope: !2914)
!4852 = !DILocation(line: 2034, column: 14, scope: !2916)
!4853 = !DILocation(line: 2034, column: 14, scope: !2918)
!4854 = !DILocation(line: 2034, column: 14, scope: !2920)
!4855 = !DILocation(line: 2034, column: 12, scope: !2920)
!4856 = !DILocation(line: 2035, column: 8, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2035, column: 8)
!4858 = !DILocation(line: 2035, column: 15, scope: !4857)
!4859 = !DILocation(line: 2035, column: 18, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4857, file: !1, discriminator: 1)
!4861 = !DILocation(line: 2035, column: 8, scope: !4860)
!4862 = !DILocation(line: 2036, column: 14, scope: !4857)
!4863 = !DILocation(line: 2036, column: 7, scope: !4857)
!4864 = !DILocation(line: 2037, column: 5, scope: !2914)
!4865 = !DILocation(line: 2043, column: 12, scope: !2914)
!4866 = !DILocation(line: 2044, column: 5, scope: !2914)
!4867 = !DILocation(line: 2049, column: 28, scope: !2914)
!4868 = !DILocation(line: 2049, column: 28, scope: !2916)
!4869 = !DILocation(line: 2049, column: 28, scope: !2918)
!4870 = !DILocation(line: 2049, column: 28, scope: !2920)
!4871 = !DILocation(line: 2049, column: 25, scope: !2920)
!4872 = !DILocation(line: 2049, column: 22, scope: !2920)
!4873 = !DILocation(line: 2049, column: 5, scope: !2920)
!4874 = !DILocation(line: 2049, column: 11, scope: !2920)
!4875 = !DILocation(line: 2049, column: 15, scope: !2920)
!4876 = !DILocation(line: 2049, column: 20, scope: !2920)
!4877 = !DILocation(line: 2050, column: 5, scope: !2914)
!4878 = !DILocation(line: 2057, column: 25, scope: !2914)
!4879 = !DILocation(line: 2057, column: 31, scope: !2914)
!4880 = !DILocation(line: 2057, column: 35, scope: !2914)
!4881 = !DILocation(line: 2058, column: 24, scope: !2914)
!4882 = !DILocation(line: 2058, column: 24, scope: !2916)
!4883 = !DILocation(line: 2058, column: 24, scope: !2918)
!4884 = !DILocation(line: 2058, column: 24, scope: !2920)
!4885 = !DILocation(line: 2057, column: 14, scope: !2916)
!4886 = !DILocation(line: 2057, column: 12, scope: !2916)
!4887 = !DILocation(line: 2059, column: 5, scope: !2914)
!4888 = !DILocation(line: 2064, column: 40, scope: !2914)
!4889 = !DILocation(line: 2064, column: 40, scope: !2916)
!4890 = !DILocation(line: 2064, column: 40, scope: !2918)
!4891 = !DILocation(line: 2064, column: 40, scope: !2920)
!4892 = !DILocation(line: 2064, column: 27, scope: !2920)
!4893 = !DILocation(line: 2064, column: 5, scope: !2920)
!4894 = !DILocation(line: 2064, column: 11, scope: !2920)
!4895 = !DILocation(line: 2064, column: 15, scope: !2920)
!4896 = !DILocation(line: 2064, column: 25, scope: !2920)
!4897 = !DILocation(line: 2065, column: 5, scope: !2914)
!4898 = !DILocation(line: 2070, column: 45, scope: !2914)
!4899 = !DILocation(line: 2070, column: 45, scope: !2916)
!4900 = !DILocation(line: 2070, column: 45, scope: !2918)
!4901 = !DILocation(line: 2070, column: 45, scope: !2920)
!4902 = !DILocation(line: 2070, column: 32, scope: !2920)
!4903 = !DILocation(line: 2070, column: 5, scope: !2920)
!4904 = !DILocation(line: 2070, column: 11, scope: !2920)
!4905 = !DILocation(line: 2070, column: 15, scope: !2920)
!4906 = !DILocation(line: 2070, column: 30, scope: !2920)
!4907 = !DILocation(line: 2071, column: 5, scope: !2914)
!4908 = !DILocation(line: 2076, column: 25, scope: !2914)
!4909 = !DILocation(line: 2076, column: 31, scope: !2914)
!4910 = !DILocation(line: 2076, column: 35, scope: !2914)
!4911 = !DILocation(line: 2077, column: 24, scope: !2914)
!4912 = !DILocation(line: 2077, column: 24, scope: !2916)
!4913 = !DILocation(line: 2077, column: 24, scope: !2918)
!4914 = !DILocation(line: 2077, column: 24, scope: !2920)
!4915 = !DILocation(line: 2076, column: 14, scope: !2916)
!4916 = !DILocation(line: 2076, column: 12, scope: !2916)
!4917 = !DILocation(line: 2078, column: 22, scope: !2914)
!4918 = !DILocation(line: 2078, column: 28, scope: !2914)
!4919 = !DILocation(line: 2078, column: 32, scope: !2914)
!4920 = !DILocation(line: 2078, column: 21, scope: !2914)
!4921 = !DILocation(line: 2078, column: 5, scope: !2914)
!4922 = !DILocation(line: 2078, column: 11, scope: !2914)
!4923 = !DILocation(line: 2078, column: 15, scope: !2914)
!4924 = !DILocation(line: 2078, column: 19, scope: !2914)
!4925 = !DILocation(line: 2079, column: 5, scope: !2914)
!4926 = !DILocation(line: 2084, column: 35, scope: !2914)
!4927 = !DILocation(line: 2084, column: 35, scope: !2916)
!4928 = !DILocation(line: 2084, column: 35, scope: !2918)
!4929 = !DILocation(line: 2084, column: 35, scope: !2920)
!4930 = !DILocation(line: 2084, column: 5, scope: !2920)
!4931 = !DILocation(line: 2084, column: 11, scope: !2920)
!4932 = !DILocation(line: 2084, column: 15, scope: !2920)
!4933 = !DILocation(line: 2084, column: 33, scope: !2920)
!4934 = !DILocation(line: 2085, column: 5, scope: !2914)
!4935 = !DILocation(line: 2090, column: 46, scope: !2914)
!4936 = !DILocation(line: 2090, column: 46, scope: !2916)
!4937 = !DILocation(line: 2090, column: 46, scope: !2918)
!4938 = !DILocation(line: 2090, column: 46, scope: !2920)
!4939 = !DILocation(line: 2090, column: 43, scope: !2920)
!4940 = !DILocation(line: 2090, column: 40, scope: !2920)
!4941 = !DILocation(line: 2090, column: 5, scope: !2920)
!4942 = !DILocation(line: 2090, column: 11, scope: !2920)
!4943 = !DILocation(line: 2090, column: 15, scope: !2920)
!4944 = !DILocation(line: 2090, column: 19, scope: !2920)
!4945 = !DILocation(line: 2090, column: 27, scope: !2920)
!4946 = !DILocation(line: 2090, column: 38, scope: !2920)
!4947 = !DILocation(line: 2092, column: 5, scope: !2914)
!4948 = !DILocation(line: 2098, column: 13, scope: !2914)
!4949 = !DILocation(line: 2098, column: 13, scope: !2916)
!4950 = !DILocation(line: 2098, column: 13, scope: !2918)
!4951 = !DILocation(line: 2098, column: 13, scope: !2920)
!4952 = !DILocation(line: 2098, column: 10, scope: !2920)
!4953 = !DILocation(line: 2098, column: 7, scope: !2920)
!4954 = !DILocation(line: 2097, column: 5, scope: !2914)
!4955 = !DILocation(line: 2097, column: 11, scope: !2914)
!4956 = !DILocation(line: 2097, column: 15, scope: !2914)
!4957 = !DILocation(line: 2097, column: 25, scope: !2914)
!4958 = !DILocation(line: 2097, column: 33, scope: !2914)
!4959 = !DILocation(line: 2097, column: 44, scope: !2914)
!4960 = !DILocation(line: 2099, column: 5, scope: !2914)
!4961 = !DILocation(line: 2104, column: 11, scope: !2914)
!4962 = !DILocation(line: 2104, column: 11, scope: !2916)
!4963 = !DILocation(line: 2104, column: 11, scope: !2918)
!4964 = !DILocation(line: 2104, column: 11, scope: !2920)
!4965 = !DILocation(line: 2104, column: 9, scope: !2920)
!4966 = !DILocation(line: 2111, column: 13, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2111, column: 8)
!4968 = !DILocation(line: 2111, column: 10, scope: !4967)
!4969 = !DILocation(line: 2111, column: 8, scope: !2914)
!4970 = !DILocation(line: 2112, column: 13, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !1, line: 2111, column: 18)
!4972 = !DILocation(line: 2112, column: 7, scope: !4971)
!4973 = !DILocation(line: 2113, column: 7, scope: !4971)
!4974 = !DILocation(line: 2116, column: 46, scope: !2914)
!4975 = !DILocation(line: 2116, column: 43, scope: !2914)
!4976 = !DILocation(line: 2116, column: 40, scope: !2914)
!4977 = !DILocation(line: 2116, column: 5, scope: !2914)
!4978 = !DILocation(line: 2116, column: 11, scope: !2914)
!4979 = !DILocation(line: 2116, column: 15, scope: !2914)
!4980 = !DILocation(line: 2116, column: 19, scope: !2914)
!4981 = !DILocation(line: 2116, column: 27, scope: !2914)
!4982 = !DILocation(line: 2116, column: 38, scope: !2914)
!4983 = !DILocation(line: 2117, column: 5, scope: !2914)
!4984 = !DILocation(line: 2122, column: 11, scope: !2914)
!4985 = !DILocation(line: 2122, column: 11, scope: !2916)
!4986 = !DILocation(line: 2122, column: 11, scope: !2918)
!4987 = !DILocation(line: 2122, column: 11, scope: !2920)
!4988 = !DILocation(line: 2122, column: 9, scope: !2920)
!4989 = !DILocation(line: 2129, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2129, column: 8)
!4991 = !DILocation(line: 2129, column: 10, scope: !4990)
!4992 = !DILocation(line: 2129, column: 8, scope: !2914)
!4993 = !DILocation(line: 2130, column: 13, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 2129, column: 18)
!4995 = !DILocation(line: 2130, column: 7, scope: !4994)
!4996 = !DILocation(line: 2131, column: 7, scope: !4994)
!4997 = !DILocation(line: 2134, column: 52, scope: !2914)
!4998 = !DILocation(line: 2134, column: 49, scope: !2914)
!4999 = !DILocation(line: 2134, column: 46, scope: !2914)
!5000 = !DILocation(line: 2134, column: 5, scope: !2914)
!5001 = !DILocation(line: 2134, column: 11, scope: !2914)
!5002 = !DILocation(line: 2134, column: 15, scope: !2914)
!5003 = !DILocation(line: 2134, column: 25, scope: !2914)
!5004 = !DILocation(line: 2134, column: 33, scope: !2914)
!5005 = !DILocation(line: 2134, column: 44, scope: !2914)
!5006 = !DILocation(line: 2135, column: 5, scope: !2914)
!5007 = !DILocation(line: 2141, column: 14, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !1, line: 2140, column: 41)
!5009 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2140, column: 8)
!5010 = !DILocation(line: 2142, column: 7, scope: !5008)
!5011 = !DILocation(line: 2155, column: 12, scope: !2914)
!5012 = !DILocation(line: 2157, column: 5, scope: !2914)
!5013 = !DILocation(line: 2165, column: 12, scope: !2914)
!5014 = !DILocation(line: 2167, column: 5, scope: !2914)
!5015 = !DILocation(line: 2173, column: 14, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 2172, column: 33)
!5017 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2172, column: 8)
!5018 = !DILocation(line: 2174, column: 7, scope: !5016)
!5019 = !DILocation(line: 2183, column: 12, scope: !2914)
!5020 = !DILocation(line: 2185, column: 5, scope: !2914)
!5021 = !DILocation(line: 2195, column: 12, scope: !2914)
!5022 = !DILocation(line: 2197, column: 5, scope: !2914)
!5023 = !DILocation(line: 2207, column: 12, scope: !2914)
!5024 = !DILocation(line: 2209, column: 5, scope: !2914)
!5025 = !DILocation(line: 2214, column: 25, scope: !2914)
!5026 = !DILocation(line: 2214, column: 31, scope: !2914)
!5027 = !DILocation(line: 2214, column: 35, scope: !2914)
!5028 = !DILocation(line: 2215, column: 24, scope: !2914)
!5029 = !DILocation(line: 2215, column: 24, scope: !2916)
!5030 = !DILocation(line: 2215, column: 24, scope: !2918)
!5031 = !DILocation(line: 2215, column: 24, scope: !2920)
!5032 = !DILocation(line: 2214, column: 14, scope: !2916)
!5033 = !DILocation(line: 2214, column: 12, scope: !2916)
!5034 = !DILocation(line: 2216, column: 5, scope: !2914)
!5035 = !DILocation(line: 2222, column: 25, scope: !2914)
!5036 = !DILocation(line: 2222, column: 31, scope: !2914)
!5037 = !DILocation(line: 2222, column: 35, scope: !2914)
!5038 = !DILocation(line: 2223, column: 24, scope: !2914)
!5039 = !DILocation(line: 2223, column: 24, scope: !2916)
!5040 = !DILocation(line: 2223, column: 24, scope: !2918)
!5041 = !DILocation(line: 2223, column: 24, scope: !2920)
!5042 = !DILocation(line: 2222, column: 14, scope: !2916)
!5043 = !DILocation(line: 2222, column: 12, scope: !2916)
!5044 = !DILocation(line: 2224, column: 5, scope: !2914)
!5045 = !DILocation(line: 2235, column: 12, scope: !2914)
!5046 = !DILocation(line: 2237, column: 5, scope: !2914)
!5047 = !DILocation(line: 2248, column: 12, scope: !2914)
!5048 = !DILocation(line: 2250, column: 5, scope: !2914)
!5049 = !DILocation(line: 2256, column: 25, scope: !2914)
!5050 = !DILocation(line: 2256, column: 31, scope: !2914)
!5051 = !DILocation(line: 2256, column: 35, scope: !2914)
!5052 = !DILocation(line: 2257, column: 24, scope: !2914)
!5053 = !DILocation(line: 2257, column: 24, scope: !2916)
!5054 = !DILocation(line: 2257, column: 24, scope: !2918)
!5055 = !DILocation(line: 2257, column: 24, scope: !2920)
!5056 = !DILocation(line: 2256, column: 14, scope: !2916)
!5057 = !DILocation(line: 2256, column: 12, scope: !2916)
!5058 = !DILocation(line: 2258, column: 5, scope: !2914)
!5059 = !DILocation(line: 2264, column: 25, scope: !2914)
!5060 = !DILocation(line: 2264, column: 31, scope: !2914)
!5061 = !DILocation(line: 2264, column: 35, scope: !2914)
!5062 = !DILocation(line: 2265, column: 24, scope: !2914)
!5063 = !DILocation(line: 2265, column: 24, scope: !2916)
!5064 = !DILocation(line: 2265, column: 24, scope: !2918)
!5065 = !DILocation(line: 2265, column: 24, scope: !2920)
!5066 = !DILocation(line: 2264, column: 14, scope: !2916)
!5067 = !DILocation(line: 2264, column: 12, scope: !2916)
!5068 = !DILocation(line: 2266, column: 5, scope: !2914)
!5069 = !DILocation(line: 2272, column: 25, scope: !2914)
!5070 = !DILocation(line: 2272, column: 31, scope: !2914)
!5071 = !DILocation(line: 2272, column: 35, scope: !2914)
!5072 = !DILocation(line: 2273, column: 24, scope: !2914)
!5073 = !DILocation(line: 2273, column: 24, scope: !2916)
!5074 = !DILocation(line: 2273, column: 24, scope: !2918)
!5075 = !DILocation(line: 2273, column: 24, scope: !2920)
!5076 = !DILocation(line: 2272, column: 14, scope: !2916)
!5077 = !DILocation(line: 2272, column: 12, scope: !2916)
!5078 = !DILocation(line: 2274, column: 5, scope: !2914)
!5079 = !DILocation(line: 2279, column: 32, scope: !2914)
!5080 = !DILocation(line: 2279, column: 32, scope: !2916)
!5081 = !DILocation(line: 2279, column: 32, scope: !2918)
!5082 = !DILocation(line: 2279, column: 32, scope: !2920)
!5083 = !DILocation(line: 2279, column: 5, scope: !2920)
!5084 = !DILocation(line: 2279, column: 11, scope: !2920)
!5085 = !DILocation(line: 2279, column: 15, scope: !2920)
!5086 = !DILocation(line: 2279, column: 30, scope: !2920)
!5087 = !DILocation(line: 2280, column: 5, scope: !2914)
!5088 = !DILocation(line: 2287, column: 29, scope: !2914)
!5089 = !DILocation(line: 2287, column: 29, scope: !2916)
!5090 = !DILocation(line: 2287, column: 29, scope: !2918)
!5091 = !DILocation(line: 2287, column: 29, scope: !2920)
!5092 = !DILocation(line: 2287, column: 5, scope: !2920)
!5093 = !DILocation(line: 2287, column: 11, scope: !2920)
!5094 = !DILocation(line: 2287, column: 15, scope: !2920)
!5095 = !DILocation(line: 2287, column: 27, scope: !2920)
!5096 = !DILocation(line: 2289, column: 8, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2289, column: 8)
!5098 = !DILocation(line: 2289, column: 14, scope: !5097)
!5099 = !DILocation(line: 2289, column: 18, scope: !5097)
!5100 = !DILocation(line: 2289, column: 30, scope: !5097)
!5101 = !DILocation(line: 2289, column: 8, scope: !2914)
!5102 = !DILocation(line: 2290, column: 7, scope: !5097)
!5103 = !DILocation(line: 2290, column: 13, scope: !5097)
!5104 = !DILocation(line: 2290, column: 17, scope: !5097)
!5105 = !DILocation(line: 2290, column: 29, scope: !5097)
!5106 = !DILocation(line: 2291, column: 13, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5097, file: !1, line: 2291, column: 13)
!5108 = !DILocation(line: 2291, column: 19, scope: !5107)
!5109 = !DILocation(line: 2291, column: 23, scope: !5107)
!5110 = !DILocation(line: 2291, column: 35, scope: !5107)
!5111 = !DILocation(line: 2291, column: 13, scope: !5097)
!5112 = !DILocation(line: 2292, column: 7, scope: !5107)
!5113 = !DILocation(line: 2292, column: 13, scope: !5107)
!5114 = !DILocation(line: 2292, column: 17, scope: !5107)
!5115 = !DILocation(line: 2292, column: 29, scope: !5107)
!5116 = !DILocation(line: 2295, column: 8, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2295, column: 8)
!5118 = !DILocation(line: 2295, column: 14, scope: !5117)
!5119 = !DILocation(line: 2295, column: 18, scope: !5117)
!5120 = !DILocation(line: 2295, column: 30, scope: !5117)
!5121 = !DILocation(line: 2295, column: 8, scope: !2914)
!5122 = !DILocation(line: 2296, column: 28, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5117, file: !1, line: 2295, column: 41)
!5124 = !DILocation(line: 2296, column: 7, scope: !5123)
!5125 = !DILocation(line: 2296, column: 13, scope: !5123)
!5126 = !DILocation(line: 2296, column: 19, scope: !5123)
!5127 = !DILocation(line: 2296, column: 26, scope: !5123)
!5128 = !DILocation(line: 2298, column: 11, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5123, file: !1, line: 2298, column: 10)
!5130 = !DILocation(line: 2298, column: 17, scope: !5129)
!5131 = !DILocation(line: 2298, column: 23, scope: !5129)
!5132 = !DILocation(line: 2298, column: 10, scope: !5123)
!5133 = !DILocation(line: 2299, column: 9, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5129, file: !1, line: 2298, column: 31)
!5135 = !DILocation(line: 2299, column: 9, scope: !5136)
!5136 = !DILexicalBlockFile(scope: !5137, file: !1, discriminator: 1)
!5137 = distinct !DILexicalBlock(scope: !5134, file: !1, line: 2299, column: 9)
!5138 = !DILocation(line: 2300, column: 16, scope: !5134)
!5139 = !DILocation(line: 2301, column: 7, scope: !5134)
!5140 = !DILocation(line: 2302, column: 5, scope: !5123)
!5141 = !DILocation(line: 2304, column: 5, scope: !2914)
!5142 = !DILocation(line: 2311, column: 33, scope: !2914)
!5143 = !DILocation(line: 2311, column: 33, scope: !2916)
!5144 = !DILocation(line: 2311, column: 33, scope: !2918)
!5145 = !DILocation(line: 2311, column: 33, scope: !2920)
!5146 = !DILocation(line: 2311, column: 30, scope: !2920)
!5147 = !DILocation(line: 2311, column: 27, scope: !2920)
!5148 = !DILocation(line: 2311, column: 5, scope: !2920)
!5149 = !DILocation(line: 2311, column: 11, scope: !2920)
!5150 = !DILocation(line: 2311, column: 15, scope: !2920)
!5151 = !DILocation(line: 2311, column: 25, scope: !2920)
!5152 = !DILocation(line: 2312, column: 5, scope: !2914)
!5153 = !DILocalVariable(name: "set", scope: !5154, file: !1, line: 2316, type: !452)
!5154 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2315, column: 3)
!5155 = !DILocation(line: 2316, column: 24, scope: !5154)
!5156 = !DILocation(line: 2317, column: 11, scope: !5154)
!5157 = !DILocation(line: 2317, column: 11, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5154, file: !1, discriminator: 1)
!5159 = !DILocation(line: 2317, column: 11, scope: !5160)
!5160 = !DILexicalBlockFile(scope: !5154, file: !1, discriminator: 2)
!5161 = !DILocation(line: 2317, column: 11, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !5154, file: !1, discriminator: 3)
!5163 = !DILocation(line: 2317, column: 9, scope: !5162)
!5164 = !DILocation(line: 2320, column: 8, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5154, file: !1, line: 2320, column: 8)
!5166 = !DILocation(line: 2320, column: 14, scope: !5165)
!5167 = !DILocation(line: 2320, column: 8, scope: !5154)
!5168 = !DILocation(line: 2321, column: 23, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5165, file: !1, line: 2320, column: 21)
!5170 = !DILocation(line: 2321, column: 7, scope: !5169)
!5171 = !DILocation(line: 2323, column: 10, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 2323, column: 10)
!5173 = !DILocation(line: 2323, column: 16, scope: !5172)
!5174 = !DILocation(line: 2323, column: 20, scope: !5172)
!5175 = !DILocation(line: 2323, column: 34, scope: !5172)
!5176 = !DILocation(line: 2323, column: 10, scope: !5169)
!5177 = !DILocation(line: 2324, column: 9, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 2323, column: 52)
!5179 = !DILocation(line: 2324, column: 15, scope: !5178)
!5180 = !DILocation(line: 2324, column: 19, scope: !5178)
!5181 = !DILocation(line: 2324, column: 29, scope: !5178)
!5182 = !DILocation(line: 2325, column: 9, scope: !5178)
!5183 = !DILocation(line: 2325, column: 15, scope: !5178)
!5184 = !DILocation(line: 2325, column: 19, scope: !5178)
!5185 = !DILocation(line: 2325, column: 33, scope: !5178)
!5186 = !DILocation(line: 2326, column: 7, scope: !5178)
!5187 = !DILocation(line: 2329, column: 10, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 2329, column: 10)
!5189 = !DILocation(line: 2329, column: 16, scope: !5188)
!5190 = !DILocation(line: 2329, column: 23, scope: !5188)
!5191 = !DILocation(line: 2329, column: 34, scope: !5188)
!5192 = !DILocation(line: 2329, column: 40, scope: !5188)
!5193 = !DILocation(line: 2329, column: 31, scope: !5188)
!5194 = !DILocation(line: 2329, column: 10, scope: !5169)
!5195 = !DILocation(line: 2330, column: 9, scope: !5188)
!5196 = !DILocation(line: 2330, column: 15, scope: !5188)
!5197 = !DILocation(line: 2330, column: 23, scope: !5188)
!5198 = !DILocation(line: 2333, column: 10, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 2333, column: 10)
!5200 = !DILocation(line: 2333, column: 16, scope: !5199)
!5201 = !DILocation(line: 2333, column: 23, scope: !5199)
!5202 = !DILocation(line: 2333, column: 37, scope: !5199)
!5203 = !DILocation(line: 2333, column: 43, scope: !5199)
!5204 = !DILocation(line: 2333, column: 49, scope: !5199)
!5205 = !DILocation(line: 2333, column: 34, scope: !5199)
!5206 = !DILocation(line: 2333, column: 10, scope: !5169)
!5207 = !DILocation(line: 2334, column: 9, scope: !5199)
!5208 = !DILocation(line: 2334, column: 15, scope: !5199)
!5209 = !DILocation(line: 2334, column: 21, scope: !5199)
!5210 = !DILocation(line: 2334, column: 29, scope: !5199)
!5211 = !DILocation(line: 2336, column: 7, scope: !5169)
!5212 = !DILocation(line: 2336, column: 13, scope: !5169)
!5213 = !DILocation(line: 2336, column: 20, scope: !5169)
!5214 = !DILocation(line: 2336, column: 25, scope: !5169)
!5215 = !DILocation(line: 2338, column: 25, scope: !5169)
!5216 = !DILocation(line: 2338, column: 7, scope: !5169)
!5217 = !DILocation(line: 2339, column: 7, scope: !5169)
!5218 = !DILocation(line: 2339, column: 13, scope: !5169)
!5219 = !DILocation(line: 2339, column: 19, scope: !5169)
!5220 = !DILocation(line: 2340, column: 5, scope: !5169)
!5221 = !DILocation(line: 2343, column: 19, scope: !5154)
!5222 = !DILocation(line: 2343, column: 5, scope: !5154)
!5223 = !DILocation(line: 2343, column: 11, scope: !5154)
!5224 = !DILocation(line: 2343, column: 17, scope: !5154)
!5225 = !DILocation(line: 2344, column: 8, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5154, file: !1, line: 2344, column: 8)
!5227 = !DILocation(line: 2344, column: 14, scope: !5226)
!5228 = !DILocation(line: 2344, column: 8, scope: !5154)
!5229 = !DILocation(line: 2346, column: 23, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 2344, column: 21)
!5231 = !DILocation(line: 2346, column: 7, scope: !5230)
!5232 = !DILocation(line: 2348, column: 7, scope: !5230)
!5233 = !DILocation(line: 2348, column: 13, scope: !5230)
!5234 = !DILocation(line: 2348, column: 20, scope: !5230)
!5235 = !DILocation(line: 2348, column: 25, scope: !5230)
!5236 = !DILocation(line: 2350, column: 10, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 2350, column: 10)
!5238 = !DILocation(line: 2350, column: 16, scope: !5237)
!5239 = !DILocation(line: 2350, column: 23, scope: !5237)
!5240 = !DILocation(line: 2350, column: 33, scope: !5237)
!5241 = !DILocation(line: 2350, column: 10, scope: !5230)
!5242 = !DILocation(line: 2352, column: 32, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !1, line: 2350, column: 61)
!5244 = !DILocation(line: 2352, column: 38, scope: !5243)
!5245 = !DILocation(line: 2352, column: 45, scope: !5243)
!5246 = !DILocation(line: 2352, column: 9, scope: !5243)
!5247 = !DILocation(line: 2352, column: 15, scope: !5243)
!5248 = !DILocation(line: 2352, column: 19, scope: !5243)
!5249 = !DILocation(line: 2352, column: 29, scope: !5243)
!5250 = !DILocation(line: 2353, column: 9, scope: !5243)
!5251 = !DILocation(line: 2353, column: 15, scope: !5243)
!5252 = !DILocation(line: 2353, column: 19, scope: !5243)
!5253 = !DILocation(line: 2353, column: 33, scope: !5243)
!5254 = !DILocation(line: 2354, column: 7, scope: !5243)
!5255 = !DILocation(line: 2356, column: 10, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 2356, column: 10)
!5257 = !DILocation(line: 2356, column: 16, scope: !5256)
!5258 = !DILocation(line: 2356, column: 23, scope: !5256)
!5259 = !DILocation(line: 2356, column: 10, scope: !5230)
!5260 = !DILocation(line: 2358, column: 29, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5256, file: !1, line: 2356, column: 32)
!5262 = !DILocation(line: 2358, column: 35, scope: !5261)
!5263 = !DILocation(line: 2358, column: 9, scope: !5261)
!5264 = !DILocation(line: 2360, column: 25, scope: !5261)
!5265 = !DILocation(line: 2360, column: 31, scope: !5261)
!5266 = !DILocation(line: 2360, column: 38, scope: !5261)
!5267 = !DILocation(line: 2360, column: 9, scope: !5261)
!5268 = !DILocation(line: 2360, column: 15, scope: !5261)
!5269 = !DILocation(line: 2360, column: 23, scope: !5261)
!5270 = !DILocation(line: 2361, column: 7, scope: !5261)
!5271 = !DILocation(line: 2363, column: 10, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 2363, column: 10)
!5273 = !DILocation(line: 2363, column: 16, scope: !5272)
!5274 = !DILocation(line: 2363, column: 23, scope: !5272)
!5275 = !DILocation(line: 2363, column: 10, scope: !5230)
!5276 = !DILocation(line: 2364, column: 50, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2363, column: 35)
!5278 = !DILocation(line: 2364, column: 56, scope: !5277)
!5279 = !DILocation(line: 2364, column: 63, scope: !5277)
!5280 = !DILocation(line: 2364, column: 9, scope: !5277)
!5281 = !DILocation(line: 2364, column: 15, scope: !5277)
!5282 = !DILocation(line: 2364, column: 19, scope: !5277)
!5283 = !DILocation(line: 2364, column: 31, scope: !5277)
!5284 = !DILocation(line: 2364, column: 48, scope: !5277)
!5285 = !DILocation(line: 2365, column: 31, scope: !5277)
!5286 = !DILocation(line: 2365, column: 37, scope: !5277)
!5287 = !DILocation(line: 2365, column: 44, scope: !5277)
!5288 = !DILocation(line: 2365, column: 9, scope: !5277)
!5289 = !DILocation(line: 2365, column: 15, scope: !5277)
!5290 = !DILocation(line: 2365, column: 21, scope: !5277)
!5291 = !DILocation(line: 2365, column: 29, scope: !5277)
!5292 = !DILocation(line: 2366, column: 7, scope: !5277)
!5293 = !DILocation(line: 2367, column: 25, scope: !5230)
!5294 = !DILocation(line: 2367, column: 7, scope: !5230)
!5295 = !DILocation(line: 2369, column: 5, scope: !5230)
!5296 = !DILocation(line: 2373, column: 3, scope: !2914)
!5297 = !DILocation(line: 2379, column: 30, scope: !2914)
!5298 = !DILocation(line: 2379, column: 30, scope: !2916)
!5299 = !DILocation(line: 2379, column: 30, scope: !2918)
!5300 = !DILocation(line: 2379, column: 30, scope: !2920)
!5301 = !DILocation(line: 2379, column: 5, scope: !2920)
!5302 = !DILocation(line: 2379, column: 11, scope: !2920)
!5303 = !DILocation(line: 2379, column: 15, scope: !2920)
!5304 = !DILocation(line: 2379, column: 28, scope: !2920)
!5305 = !DILocation(line: 2380, column: 5, scope: !2914)
!5306 = !DILocation(line: 2386, column: 30, scope: !2914)
!5307 = !DILocation(line: 2386, column: 30, scope: !2916)
!5308 = !DILocation(line: 2386, column: 30, scope: !2918)
!5309 = !DILocation(line: 2386, column: 30, scope: !2920)
!5310 = !DILocation(line: 2386, column: 5, scope: !2920)
!5311 = !DILocation(line: 2386, column: 11, scope: !2920)
!5312 = !DILocation(line: 2386, column: 15, scope: !2920)
!5313 = !DILocation(line: 2386, column: 28, scope: !2920)
!5314 = !DILocation(line: 2387, column: 5, scope: !2914)
!5315 = !DILocation(line: 2414, column: 42, scope: !2914)
!5316 = !DILocation(line: 2414, column: 42, scope: !2916)
!5317 = !DILocation(line: 2414, column: 42, scope: !2918)
!5318 = !DILocation(line: 2414, column: 42, scope: !2920)
!5319 = !DILocation(line: 2414, column: 28, scope: !2920)
!5320 = !DILocation(line: 2414, column: 5, scope: !2920)
!5321 = !DILocation(line: 2414, column: 11, scope: !2920)
!5322 = !DILocation(line: 2414, column: 15, scope: !2920)
!5323 = !DILocation(line: 2414, column: 26, scope: !2920)
!5324 = !DILocation(line: 2415, column: 5, scope: !2914)
!5325 = !DILocation(line: 2418, column: 23, scope: !2914)
!5326 = !DILocation(line: 2418, column: 23, scope: !2916)
!5327 = !DILocation(line: 2418, column: 23, scope: !2918)
!5328 = !DILocation(line: 2418, column: 23, scope: !2920)
!5329 = !DILocation(line: 2418, column: 5, scope: !2920)
!5330 = !DILocation(line: 2418, column: 11, scope: !2920)
!5331 = !DILocation(line: 2418, column: 15, scope: !2920)
!5332 = !DILocation(line: 2418, column: 21, scope: !2920)
!5333 = !DILocation(line: 2419, column: 5, scope: !2914)
!5334 = !DILocation(line: 2425, column: 30, scope: !2914)
!5335 = !DILocation(line: 2425, column: 30, scope: !2916)
!5336 = !DILocation(line: 2425, column: 30, scope: !2918)
!5337 = !DILocation(line: 2425, column: 30, scope: !2920)
!5338 = !DILocation(line: 2425, column: 5, scope: !2920)
!5339 = !DILocation(line: 2425, column: 11, scope: !2920)
!5340 = !DILocation(line: 2425, column: 15, scope: !2920)
!5341 = !DILocation(line: 2425, column: 28, scope: !2920)
!5342 = !DILocation(line: 2426, column: 5, scope: !2914)
!5343 = !DILocation(line: 2433, column: 35, scope: !2914)
!5344 = !DILocation(line: 2433, column: 35, scope: !2916)
!5345 = !DILocation(line: 2433, column: 35, scope: !2918)
!5346 = !DILocation(line: 2433, column: 35, scope: !2920)
!5347 = !DILocation(line: 2433, column: 32, scope: !2920)
!5348 = !DILocation(line: 2433, column: 29, scope: !2920)
!5349 = !DILocation(line: 2433, column: 5, scope: !2920)
!5350 = !DILocation(line: 2433, column: 11, scope: !2920)
!5351 = !DILocation(line: 2433, column: 15, scope: !2920)
!5352 = !DILocation(line: 2433, column: 27, scope: !2920)
!5353 = !DILocation(line: 2434, column: 5, scope: !2914)
!5354 = !DILocation(line: 2437, column: 25, scope: !2914)
!5355 = !DILocation(line: 2437, column: 31, scope: !2914)
!5356 = !DILocation(line: 2437, column: 35, scope: !2914)
!5357 = !DILocation(line: 2438, column: 24, scope: !2914)
!5358 = !DILocation(line: 2438, column: 24, scope: !2916)
!5359 = !DILocation(line: 2438, column: 24, scope: !2918)
!5360 = !DILocation(line: 2438, column: 24, scope: !2920)
!5361 = !DILocation(line: 2437, column: 14, scope: !2916)
!5362 = !DILocation(line: 2437, column: 12, scope: !2916)
!5363 = !DILocation(line: 2439, column: 5, scope: !2914)
!5364 = !DILocation(line: 2442, column: 32, scope: !2914)
!5365 = !DILocation(line: 2442, column: 32, scope: !2916)
!5366 = !DILocation(line: 2442, column: 32, scope: !2918)
!5367 = !DILocation(line: 2442, column: 32, scope: !2920)
!5368 = !DILocation(line: 2442, column: 29, scope: !2920)
!5369 = !DILocation(line: 2442, column: 26, scope: !2920)
!5370 = !DILocation(line: 2442, column: 5, scope: !2920)
!5371 = !DILocation(line: 2442, column: 11, scope: !2920)
!5372 = !DILocation(line: 2442, column: 15, scope: !2920)
!5373 = !DILocation(line: 2442, column: 24, scope: !2920)
!5374 = !DILocation(line: 2443, column: 5, scope: !2914)
!5375 = !DILocation(line: 2449, column: 36, scope: !2914)
!5376 = !DILocation(line: 2449, column: 36, scope: !2916)
!5377 = !DILocation(line: 2449, column: 36, scope: !2918)
!5378 = !DILocation(line: 2449, column: 36, scope: !2920)
!5379 = !DILocation(line: 2449, column: 33, scope: !2920)
!5380 = !DILocation(line: 2449, column: 30, scope: !2920)
!5381 = !DILocation(line: 2449, column: 5, scope: !2920)
!5382 = !DILocation(line: 2449, column: 11, scope: !2920)
!5383 = !DILocation(line: 2449, column: 15, scope: !2920)
!5384 = !DILocation(line: 2449, column: 28, scope: !2920)
!5385 = !DILocation(line: 2450, column: 5, scope: !2914)
!5386 = !DILocation(line: 2453, column: 25, scope: !2914)
!5387 = !DILocation(line: 2453, column: 31, scope: !2914)
!5388 = !DILocation(line: 2453, column: 35, scope: !2914)
!5389 = !DILocation(line: 2454, column: 24, scope: !2914)
!5390 = !DILocation(line: 2454, column: 24, scope: !2916)
!5391 = !DILocation(line: 2454, column: 24, scope: !2918)
!5392 = !DILocation(line: 2454, column: 24, scope: !2920)
!5393 = !DILocation(line: 2453, column: 14, scope: !2916)
!5394 = !DILocation(line: 2453, column: 12, scope: !2916)
!5395 = !DILocation(line: 2455, column: 5, scope: !2914)
!5396 = !DILocation(line: 2461, column: 26, scope: !2914)
!5397 = !DILocation(line: 2461, column: 26, scope: !2916)
!5398 = !DILocation(line: 2461, column: 26, scope: !2918)
!5399 = !DILocation(line: 2461, column: 26, scope: !2920)
!5400 = !DILocation(line: 2461, column: 5, scope: !2920)
!5401 = !DILocation(line: 2461, column: 11, scope: !2920)
!5402 = !DILocation(line: 2461, column: 15, scope: !2920)
!5403 = !DILocation(line: 2461, column: 24, scope: !2920)
!5404 = !DILocation(line: 2462, column: 5, scope: !2914)
!5405 = !DILocation(line: 2468, column: 32, scope: !2914)
!5406 = !DILocation(line: 2468, column: 32, scope: !2916)
!5407 = !DILocation(line: 2468, column: 32, scope: !2918)
!5408 = !DILocation(line: 2468, column: 32, scope: !2920)
!5409 = !DILocation(line: 2468, column: 5, scope: !2920)
!5410 = !DILocation(line: 2468, column: 11, scope: !2920)
!5411 = !DILocation(line: 2468, column: 15, scope: !2920)
!5412 = !DILocation(line: 2468, column: 30, scope: !2920)
!5413 = !DILocation(line: 2469, column: 5, scope: !2914)
!5414 = !DILocation(line: 2476, column: 29, scope: !2914)
!5415 = !DILocation(line: 2476, column: 29, scope: !2916)
!5416 = !DILocation(line: 2476, column: 29, scope: !2918)
!5417 = !DILocation(line: 2476, column: 29, scope: !2920)
!5418 = !DILocation(line: 2476, column: 5, scope: !2920)
!5419 = !DILocation(line: 2476, column: 11, scope: !2920)
!5420 = !DILocation(line: 2476, column: 15, scope: !2920)
!5421 = !DILocation(line: 2476, column: 27, scope: !2920)
!5422 = !DILocation(line: 2477, column: 5, scope: !2914)
!5423 = !DILocation(line: 2483, column: 35, scope: !2914)
!5424 = !DILocation(line: 2483, column: 35, scope: !2916)
!5425 = !DILocation(line: 2483, column: 35, scope: !2918)
!5426 = !DILocation(line: 2483, column: 35, scope: !2920)
!5427 = !DILocation(line: 2483, column: 5, scope: !2920)
!5428 = !DILocation(line: 2483, column: 11, scope: !2920)
!5429 = !DILocation(line: 2483, column: 15, scope: !2920)
!5430 = !DILocation(line: 2483, column: 33, scope: !2920)
!5431 = !DILocation(line: 2484, column: 5, scope: !2914)
!5432 = !DILocation(line: 2491, column: 30, scope: !2914)
!5433 = !DILocation(line: 2491, column: 30, scope: !2916)
!5434 = !DILocation(line: 2491, column: 30, scope: !2918)
!5435 = !DILocation(line: 2491, column: 30, scope: !2920)
!5436 = !DILocation(line: 2491, column: 5, scope: !2920)
!5437 = !DILocation(line: 2491, column: 11, scope: !2920)
!5438 = !DILocation(line: 2491, column: 15, scope: !2920)
!5439 = !DILocation(line: 2491, column: 28, scope: !2920)
!5440 = !DILocation(line: 2492, column: 5, scope: !2914)
!5441 = !DILocation(line: 2498, column: 36, scope: !2914)
!5442 = !DILocation(line: 2498, column: 36, scope: !2916)
!5443 = !DILocation(line: 2498, column: 36, scope: !2918)
!5444 = !DILocation(line: 2498, column: 36, scope: !2920)
!5445 = !DILocation(line: 2498, column: 5, scope: !2920)
!5446 = !DILocation(line: 2498, column: 11, scope: !2920)
!5447 = !DILocation(line: 2498, column: 15, scope: !2920)
!5448 = !DILocation(line: 2498, column: 34, scope: !2920)
!5449 = !DILocation(line: 2499, column: 5, scope: !2914)
!5450 = !DILocation(line: 2502, column: 45, scope: !2914)
!5451 = !DILocation(line: 2502, column: 45, scope: !2916)
!5452 = !DILocation(line: 2502, column: 45, scope: !2918)
!5453 = !DILocation(line: 2502, column: 45, scope: !2920)
!5454 = !DILocation(line: 2502, column: 42, scope: !2920)
!5455 = !DILocation(line: 2502, column: 39, scope: !2920)
!5456 = !DILocation(line: 2502, column: 5, scope: !2920)
!5457 = !DILocation(line: 2502, column: 11, scope: !2920)
!5458 = !DILocation(line: 2502, column: 15, scope: !2920)
!5459 = !DILocation(line: 2502, column: 19, scope: !2920)
!5460 = !DILocation(line: 2502, column: 27, scope: !2920)
!5461 = !DILocation(line: 2502, column: 37, scope: !2920)
!5462 = !DILocation(line: 2504, column: 45, scope: !2914)
!5463 = !DILocation(line: 2504, column: 51, scope: !2914)
!5464 = !DILocation(line: 2504, column: 55, scope: !2914)
!5465 = !DILocation(line: 2504, column: 59, scope: !2914)
!5466 = !DILocation(line: 2504, column: 67, scope: !2914)
!5467 = !DILocation(line: 2504, column: 5, scope: !2914)
!5468 = !DILocation(line: 2504, column: 11, scope: !2914)
!5469 = !DILocation(line: 2504, column: 15, scope: !2914)
!5470 = !DILocation(line: 2504, column: 25, scope: !2914)
!5471 = !DILocation(line: 2504, column: 33, scope: !2914)
!5472 = !DILocation(line: 2504, column: 43, scope: !2914)
!5473 = !DILocation(line: 2505, column: 5, scope: !2914)
!5474 = !DILocation(line: 2565, column: 36, scope: !2914)
!5475 = !DILocation(line: 2565, column: 36, scope: !2916)
!5476 = !DILocation(line: 2565, column: 36, scope: !2918)
!5477 = !DILocation(line: 2565, column: 36, scope: !2920)
!5478 = !DILocation(line: 2565, column: 33, scope: !2920)
!5479 = !DILocation(line: 2565, column: 30, scope: !2920)
!5480 = !DILocation(line: 2565, column: 5, scope: !2920)
!5481 = !DILocation(line: 2565, column: 11, scope: !2920)
!5482 = !DILocation(line: 2565, column: 15, scope: !2920)
!5483 = !DILocation(line: 2565, column: 28, scope: !2920)
!5484 = !DILocation(line: 2566, column: 5, scope: !2914)
!5485 = !DILocation(line: 2572, column: 36, scope: !2914)
!5486 = !DILocation(line: 2572, column: 36, scope: !2916)
!5487 = !DILocation(line: 2572, column: 36, scope: !2918)
!5488 = !DILocation(line: 2572, column: 36, scope: !2920)
!5489 = !DILocation(line: 2572, column: 33, scope: !2920)
!5490 = !DILocation(line: 2572, column: 30, scope: !2920)
!5491 = !DILocation(line: 2572, column: 5, scope: !2920)
!5492 = !DILocation(line: 2572, column: 11, scope: !2920)
!5493 = !DILocation(line: 2572, column: 15, scope: !2920)
!5494 = !DILocation(line: 2572, column: 28, scope: !2920)
!5495 = !DILocation(line: 2573, column: 5, scope: !2914)
!5496 = !DILocation(line: 2579, column: 32, scope: !2914)
!5497 = !DILocation(line: 2579, column: 32, scope: !2916)
!5498 = !DILocation(line: 2579, column: 32, scope: !2918)
!5499 = !DILocation(line: 2579, column: 32, scope: !2920)
!5500 = !DILocation(line: 2579, column: 5, scope: !2920)
!5501 = !DILocation(line: 2579, column: 11, scope: !2920)
!5502 = !DILocation(line: 2579, column: 15, scope: !2920)
!5503 = !DILocation(line: 2579, column: 30, scope: !2920)
!5504 = !DILocation(line: 2580, column: 5, scope: !2914)
!5505 = !DILocation(line: 2586, column: 37, scope: !2914)
!5506 = !DILocation(line: 2586, column: 37, scope: !2916)
!5507 = !DILocation(line: 2586, column: 37, scope: !2918)
!5508 = !DILocation(line: 2586, column: 37, scope: !2920)
!5509 = !DILocation(line: 2586, column: 5, scope: !2920)
!5510 = !DILocation(line: 2586, column: 11, scope: !2920)
!5511 = !DILocation(line: 2586, column: 15, scope: !2920)
!5512 = !DILocation(line: 2586, column: 35, scope: !2920)
!5513 = !DILocation(line: 2587, column: 5, scope: !2914)
!5514 = !DILocation(line: 2595, column: 39, scope: !2914)
!5515 = !DILocation(line: 2595, column: 39, scope: !2916)
!5516 = !DILocation(line: 2595, column: 39, scope: !2918)
!5517 = !DILocation(line: 2595, column: 39, scope: !2920)
!5518 = !DILocation(line: 2595, column: 26, scope: !2920)
!5519 = !DILocation(line: 2595, column: 5, scope: !2920)
!5520 = !DILocation(line: 2595, column: 11, scope: !2920)
!5521 = !DILocation(line: 2595, column: 15, scope: !2920)
!5522 = !DILocation(line: 2595, column: 24, scope: !2920)
!5523 = !DILocation(line: 2596, column: 5, scope: !2914)
!5524 = !DILocation(line: 2603, column: 35, scope: !2914)
!5525 = !DILocation(line: 2603, column: 35, scope: !2916)
!5526 = !DILocation(line: 2603, column: 35, scope: !2918)
!5527 = !DILocation(line: 2603, column: 35, scope: !2920)
!5528 = !DILocation(line: 2603, column: 5, scope: !2920)
!5529 = !DILocation(line: 2603, column: 11, scope: !2920)
!5530 = !DILocation(line: 2603, column: 15, scope: !2920)
!5531 = !DILocation(line: 2603, column: 33, scope: !2920)
!5532 = !DILocation(line: 2604, column: 5, scope: !2914)
!5533 = !DILocation(line: 2611, column: 33, scope: !2914)
!5534 = !DILocation(line: 2611, column: 33, scope: !2916)
!5535 = !DILocation(line: 2611, column: 33, scope: !2918)
!5536 = !DILocation(line: 2611, column: 33, scope: !2920)
!5537 = !DILocation(line: 2611, column: 5, scope: !2920)
!5538 = !DILocation(line: 2611, column: 11, scope: !2920)
!5539 = !DILocation(line: 2611, column: 15, scope: !2920)
!5540 = !DILocation(line: 2611, column: 31, scope: !2920)
!5541 = !DILocation(line: 2612, column: 5, scope: !2914)
!5542 = !DILocation(line: 2616, column: 25, scope: !2914)
!5543 = !DILocation(line: 2616, column: 31, scope: !2914)
!5544 = !DILocation(line: 2616, column: 35, scope: !2914)
!5545 = !DILocation(line: 2617, column: 24, scope: !2914)
!5546 = !DILocation(line: 2617, column: 24, scope: !2916)
!5547 = !DILocation(line: 2617, column: 24, scope: !2918)
!5548 = !DILocation(line: 2617, column: 24, scope: !2920)
!5549 = !DILocation(line: 2616, column: 14, scope: !2916)
!5550 = !DILocation(line: 2616, column: 12, scope: !2916)
!5551 = !DILocation(line: 2618, column: 5, scope: !2914)
!5552 = !DILocation(line: 2622, column: 25, scope: !2914)
!5553 = !DILocation(line: 2622, column: 31, scope: !2914)
!5554 = !DILocation(line: 2622, column: 35, scope: !2914)
!5555 = !DILocation(line: 2623, column: 24, scope: !2914)
!5556 = !DILocation(line: 2623, column: 24, scope: !2916)
!5557 = !DILocation(line: 2623, column: 24, scope: !2918)
!5558 = !DILocation(line: 2623, column: 24, scope: !2920)
!5559 = !DILocation(line: 2622, column: 14, scope: !2916)
!5560 = !DILocation(line: 2622, column: 12, scope: !2916)
!5561 = !DILocation(line: 2624, column: 5, scope: !2914)
!5562 = !DILocation(line: 2628, column: 25, scope: !2914)
!5563 = !DILocation(line: 2628, column: 31, scope: !2914)
!5564 = !DILocation(line: 2628, column: 35, scope: !2914)
!5565 = !DILocation(line: 2629, column: 24, scope: !2914)
!5566 = !DILocation(line: 2629, column: 24, scope: !2916)
!5567 = !DILocation(line: 2629, column: 24, scope: !2918)
!5568 = !DILocation(line: 2629, column: 24, scope: !2920)
!5569 = !DILocation(line: 2628, column: 14, scope: !2916)
!5570 = !DILocation(line: 2628, column: 12, scope: !2916)
!5571 = !DILocation(line: 2630, column: 5, scope: !2914)
!5572 = !DILocation(line: 2634, column: 27, scope: !2914)
!5573 = !DILocation(line: 2634, column: 27, scope: !2916)
!5574 = !DILocation(line: 2634, column: 27, scope: !2918)
!5575 = !DILocation(line: 2634, column: 27, scope: !2920)
!5576 = !DILocation(line: 2634, column: 5, scope: !2920)
!5577 = !DILocation(line: 2634, column: 11, scope: !2920)
!5578 = !DILocation(line: 2634, column: 15, scope: !2920)
!5579 = !DILocation(line: 2634, column: 25, scope: !2920)
!5580 = !DILocation(line: 2635, column: 5, scope: !2914)
!5581 = !DILocation(line: 2639, column: 31, scope: !2914)
!5582 = !DILocation(line: 2639, column: 31, scope: !2916)
!5583 = !DILocation(line: 2639, column: 31, scope: !2918)
!5584 = !DILocation(line: 2639, column: 31, scope: !2920)
!5585 = !DILocation(line: 2639, column: 28, scope: !2920)
!5586 = !DILocation(line: 2639, column: 25, scope: !2920)
!5587 = !DILocation(line: 2639, column: 5, scope: !2920)
!5588 = !DILocation(line: 2639, column: 11, scope: !2920)
!5589 = !DILocation(line: 2639, column: 15, scope: !2920)
!5590 = !DILocation(line: 2639, column: 23, scope: !2920)
!5591 = !DILocation(line: 2640, column: 5, scope: !2914)
!5592 = !DILocalVariable(name: "curl_rtspreq", scope: !5593, file: !1, line: 2648, type: !379)
!5593 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2643, column: 5)
!5594 = !DILocation(line: 2648, column: 12, scope: !5593)
!5595 = !DILocation(line: 2648, column: 27, scope: !5593)
!5596 = !DILocation(line: 2648, column: 27, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !5593, file: !1, discriminator: 1)
!5598 = !DILocation(line: 2648, column: 27, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !5593, file: !1, discriminator: 2)
!5600 = !DILocation(line: 2648, column: 27, scope: !5601)
!5601 = !DILexicalBlockFile(scope: !5593, file: !1, discriminator: 3)
!5602 = !DILocation(line: 2648, column: 12, scope: !5601)
!5603 = !DILocalVariable(name: "rtspreq", scope: !5593, file: !1, line: 2649, type: !1023)
!5604 = !DILocation(line: 2649, column: 20, scope: !5593)
!5605 = !DILocation(line: 2650, column: 14, scope: !5593)
!5606 = !DILocation(line: 2650, column: 7, scope: !5593)
!5607 = !DILocation(line: 2652, column: 19, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5593, file: !1, line: 2650, column: 28)
!5609 = !DILocation(line: 2653, column: 11, scope: !5608)
!5610 = !DILocation(line: 2656, column: 19, scope: !5608)
!5611 = !DILocation(line: 2657, column: 11, scope: !5608)
!5612 = !DILocation(line: 2660, column: 19, scope: !5608)
!5613 = !DILocation(line: 2661, column: 11, scope: !5608)
!5614 = !DILocation(line: 2664, column: 19, scope: !5608)
!5615 = !DILocation(line: 2665, column: 11, scope: !5608)
!5616 = !DILocation(line: 2668, column: 19, scope: !5608)
!5617 = !DILocation(line: 2669, column: 11, scope: !5608)
!5618 = !DILocation(line: 2672, column: 19, scope: !5608)
!5619 = !DILocation(line: 2673, column: 11, scope: !5608)
!5620 = !DILocation(line: 2676, column: 19, scope: !5608)
!5621 = !DILocation(line: 2677, column: 11, scope: !5608)
!5622 = !DILocation(line: 2680, column: 19, scope: !5608)
!5623 = !DILocation(line: 2681, column: 11, scope: !5608)
!5624 = !DILocation(line: 2684, column: 19, scope: !5608)
!5625 = !DILocation(line: 2685, column: 11, scope: !5608)
!5626 = !DILocation(line: 2688, column: 19, scope: !5608)
!5627 = !DILocation(line: 2689, column: 11, scope: !5608)
!5628 = !DILocation(line: 2692, column: 19, scope: !5608)
!5629 = !DILocation(line: 2693, column: 11, scope: !5608)
!5630 = !DILocation(line: 2695, column: 19, scope: !5608)
!5631 = !DILocation(line: 2696, column: 7, scope: !5608)
!5632 = !DILocation(line: 2698, column: 27, scope: !5593)
!5633 = !DILocation(line: 2698, column: 7, scope: !5593)
!5634 = !DILocation(line: 2698, column: 13, scope: !5593)
!5635 = !DILocation(line: 2698, column: 17, scope: !5593)
!5636 = !DILocation(line: 2698, column: 25, scope: !5593)
!5637 = !DILocation(line: 2699, column: 5, scope: !5593)
!5638 = !DILocation(line: 2708, column: 25, scope: !2914)
!5639 = !DILocation(line: 2708, column: 31, scope: !2914)
!5640 = !DILocation(line: 2708, column: 35, scope: !2914)
!5641 = !DILocation(line: 2709, column: 24, scope: !2914)
!5642 = !DILocation(line: 2709, column: 24, scope: !2916)
!5643 = !DILocation(line: 2709, column: 24, scope: !2918)
!5644 = !DILocation(line: 2709, column: 24, scope: !2920)
!5645 = !DILocation(line: 2708, column: 14, scope: !2916)
!5646 = !DILocation(line: 2708, column: 12, scope: !2916)
!5647 = !DILocation(line: 2710, column: 5, scope: !2914)
!5648 = !DILocation(line: 2717, column: 25, scope: !2914)
!5649 = !DILocation(line: 2717, column: 31, scope: !2914)
!5650 = !DILocation(line: 2717, column: 35, scope: !2914)
!5651 = !DILocation(line: 2718, column: 24, scope: !2914)
!5652 = !DILocation(line: 2718, column: 24, scope: !2916)
!5653 = !DILocation(line: 2718, column: 24, scope: !2918)
!5654 = !DILocation(line: 2718, column: 24, scope: !2920)
!5655 = !DILocation(line: 2717, column: 14, scope: !2916)
!5656 = !DILocation(line: 2717, column: 12, scope: !2916)
!5657 = !DILocation(line: 2719, column: 5, scope: !2914)
!5658 = !DILocation(line: 2725, column: 25, scope: !2914)
!5659 = !DILocation(line: 2725, column: 31, scope: !2914)
!5660 = !DILocation(line: 2725, column: 35, scope: !2914)
!5661 = !DILocation(line: 2726, column: 24, scope: !2914)
!5662 = !DILocation(line: 2726, column: 24, scope: !2916)
!5663 = !DILocation(line: 2726, column: 24, scope: !2918)
!5664 = !DILocation(line: 2726, column: 24, scope: !2920)
!5665 = !DILocation(line: 2725, column: 14, scope: !2916)
!5666 = !DILocation(line: 2725, column: 12, scope: !2916)
!5667 = !DILocation(line: 2727, column: 5, scope: !2914)
!5668 = !DILocation(line: 2735, column: 41, scope: !2914)
!5669 = !DILocation(line: 2735, column: 41, scope: !2916)
!5670 = !DILocation(line: 2735, column: 41, scope: !2918)
!5671 = !DILocation(line: 2735, column: 41, scope: !2920)
!5672 = !DILocation(line: 2735, column: 5, scope: !2920)
!5673 = !DILocation(line: 2735, column: 11, scope: !2920)
!5674 = !DILocation(line: 2735, column: 17, scope: !2920)
!5675 = !DILocation(line: 2735, column: 39, scope: !2920)
!5676 = !DILocation(line: 2736, column: 5, scope: !2914)
!5677 = !DILocation(line: 2740, column: 41, scope: !2914)
!5678 = !DILocation(line: 2740, column: 41, scope: !2916)
!5679 = !DILocation(line: 2740, column: 41, scope: !2918)
!5680 = !DILocation(line: 2740, column: 41, scope: !2920)
!5681 = !DILocation(line: 2740, column: 5, scope: !2920)
!5682 = !DILocation(line: 2740, column: 11, scope: !2920)
!5683 = !DILocation(line: 2740, column: 17, scope: !2920)
!5684 = !DILocation(line: 2740, column: 39, scope: !2920)
!5685 = !DILocation(line: 2741, column: 5, scope: !2914)
!5686 = !DILocation(line: 2744, column: 25, scope: !2914)
!5687 = !DILocation(line: 2744, column: 25, scope: !2916)
!5688 = !DILocation(line: 2744, column: 25, scope: !2918)
!5689 = !DILocation(line: 2744, column: 25, scope: !2920)
!5690 = !DILocation(line: 2744, column: 5, scope: !2920)
!5691 = !DILocation(line: 2744, column: 11, scope: !2920)
!5692 = !DILocation(line: 2744, column: 15, scope: !2920)
!5693 = !DILocation(line: 2744, column: 23, scope: !2920)
!5694 = !DILocation(line: 2745, column: 5, scope: !2914)
!5695 = !DILocation(line: 2748, column: 28, scope: !2914)
!5696 = !DILocation(line: 2748, column: 28, scope: !2916)
!5697 = !DILocation(line: 2748, column: 28, scope: !2918)
!5698 = !DILocation(line: 2748, column: 28, scope: !2920)
!5699 = !DILocation(line: 2748, column: 5, scope: !2920)
!5700 = !DILocation(line: 2748, column: 11, scope: !2920)
!5701 = !DILocation(line: 2748, column: 15, scope: !2920)
!5702 = !DILocation(line: 2748, column: 26, scope: !2920)
!5703 = !DILocation(line: 2749, column: 5, scope: !2914)
!5704 = !DILocation(line: 2752, column: 37, scope: !2914)
!5705 = !DILocation(line: 2752, column: 37, scope: !2916)
!5706 = !DILocation(line: 2752, column: 37, scope: !2918)
!5707 = !DILocation(line: 2752, column: 37, scope: !2920)
!5708 = !DILocation(line: 2752, column: 34, scope: !2920)
!5709 = !DILocation(line: 2752, column: 31, scope: !2920)
!5710 = !DILocation(line: 2752, column: 5, scope: !2920)
!5711 = !DILocation(line: 2752, column: 11, scope: !2920)
!5712 = !DILocation(line: 2752, column: 15, scope: !2920)
!5713 = !DILocation(line: 2752, column: 29, scope: !2920)
!5714 = !DILocation(line: 2753, column: 5, scope: !2914)
!5715 = !DILocation(line: 2755, column: 27, scope: !2914)
!5716 = !DILocation(line: 2755, column: 27, scope: !2916)
!5717 = !DILocation(line: 2755, column: 27, scope: !2918)
!5718 = !DILocation(line: 2755, column: 27, scope: !2920)
!5719 = !DILocation(line: 2755, column: 5, scope: !2920)
!5720 = !DILocation(line: 2755, column: 11, scope: !2920)
!5721 = !DILocation(line: 2755, column: 15, scope: !2920)
!5722 = !DILocation(line: 2755, column: 25, scope: !2920)
!5723 = !DILocation(line: 2756, column: 5, scope: !2914)
!5724 = !DILocation(line: 2758, column: 27, scope: !2914)
!5725 = !DILocation(line: 2758, column: 27, scope: !2916)
!5726 = !DILocation(line: 2758, column: 27, scope: !2918)
!5727 = !DILocation(line: 2758, column: 27, scope: !2920)
!5728 = !DILocation(line: 2758, column: 5, scope: !2920)
!5729 = !DILocation(line: 2758, column: 11, scope: !2920)
!5730 = !DILocation(line: 2758, column: 15, scope: !2920)
!5731 = !DILocation(line: 2758, column: 25, scope: !2920)
!5732 = !DILocation(line: 2759, column: 5, scope: !2914)
!5733 = !DILocation(line: 2761, column: 25, scope: !2914)
!5734 = !DILocation(line: 2761, column: 25, scope: !2916)
!5735 = !DILocation(line: 2761, column: 25, scope: !2918)
!5736 = !DILocation(line: 2761, column: 25, scope: !2920)
!5737 = !DILocation(line: 2761, column: 5, scope: !2920)
!5738 = !DILocation(line: 2761, column: 11, scope: !2920)
!5739 = !DILocation(line: 2761, column: 15, scope: !2920)
!5740 = !DILocation(line: 2761, column: 23, scope: !2920)
!5741 = !DILocation(line: 2762, column: 5, scope: !2914)
!5742 = !DILocation(line: 2764, column: 32, scope: !2914)
!5743 = !DILocation(line: 2764, column: 32, scope: !2916)
!5744 = !DILocation(line: 2764, column: 32, scope: !2918)
!5745 = !DILocation(line: 2764, column: 32, scope: !2920)
!5746 = !DILocation(line: 2764, column: 5, scope: !2920)
!5747 = !DILocation(line: 2764, column: 11, scope: !2920)
!5748 = !DILocation(line: 2764, column: 20, scope: !2920)
!5749 = !DILocation(line: 2764, column: 30, scope: !2920)
!5750 = !DILocation(line: 2765, column: 5, scope: !2914)
!5751 = !DILocation(line: 2767, column: 30, scope: !2914)
!5752 = !DILocation(line: 2767, column: 30, scope: !2916)
!5753 = !DILocation(line: 2767, column: 30, scope: !2918)
!5754 = !DILocation(line: 2767, column: 30, scope: !2920)
!5755 = !DILocation(line: 2767, column: 5, scope: !2920)
!5756 = !DILocation(line: 2767, column: 11, scope: !2920)
!5757 = !DILocation(line: 2767, column: 15, scope: !2920)
!5758 = !DILocation(line: 2767, column: 28, scope: !2920)
!5759 = !DILocation(line: 2768, column: 5, scope: !2914)
!5760 = !DILocation(line: 2810, column: 35, scope: !2914)
!5761 = !DILocation(line: 2810, column: 41, scope: !2914)
!5762 = !DILocation(line: 2810, column: 41, scope: !2916)
!5763 = !DILocation(line: 2810, column: 41, scope: !2918)
!5764 = !DILocation(line: 2810, column: 41, scope: !2920)
!5765 = !DILocation(line: 2810, column: 14, scope: !2920)
!5766 = !DILocation(line: 2810, column: 12, scope: !2920)
!5767 = !DILocation(line: 2811, column: 5, scope: !2914)
!5768 = !DILocation(line: 2813, column: 37, scope: !2914)
!5769 = !DILocation(line: 2813, column: 43, scope: !2914)
!5770 = !DILocation(line: 2813, column: 43, scope: !2916)
!5771 = !DILocation(line: 2813, column: 43, scope: !2918)
!5772 = !DILocation(line: 2813, column: 43, scope: !2920)
!5773 = !DILocation(line: 2813, column: 14, scope: !2920)
!5774 = !DILocation(line: 2813, column: 12, scope: !2920)
!5775 = !DILocation(line: 2814, column: 5, scope: !2914)
!5776 = !DILocation(line: 2816, column: 37, scope: !2914)
!5777 = !DILocation(line: 2816, column: 43, scope: !2914)
!5778 = !DILocation(line: 2816, column: 43, scope: !2916)
!5779 = !DILocation(line: 2816, column: 43, scope: !2918)
!5780 = !DILocation(line: 2816, column: 43, scope: !2920)
!5781 = !DILocation(line: 2816, column: 14, scope: !2920)
!5782 = !DILocation(line: 2816, column: 12, scope: !2920)
!5783 = !DILocation(line: 2817, column: 5, scope: !2914)
!5784 = !DILocation(line: 2819, column: 37, scope: !2914)
!5785 = !DILocation(line: 2819, column: 43, scope: !2914)
!5786 = !DILocation(line: 2819, column: 43, scope: !2916)
!5787 = !DILocation(line: 2819, column: 43, scope: !2918)
!5788 = !DILocation(line: 2819, column: 43, scope: !2920)
!5789 = !DILocation(line: 2819, column: 14, scope: !2920)
!5790 = !DILocation(line: 2819, column: 12, scope: !2920)
!5791 = !DILocation(line: 2820, column: 5, scope: !2914)
!5792 = !DILocation(line: 2823, column: 37, scope: !2914)
!5793 = !DILocation(line: 2823, column: 37, scope: !2916)
!5794 = !DILocation(line: 2823, column: 37, scope: !2918)
!5795 = !DILocation(line: 2823, column: 37, scope: !2920)
!5796 = !DILocation(line: 2823, column: 34, scope: !2920)
!5797 = !DILocation(line: 2823, column: 31, scope: !2920)
!5798 = !DILocation(line: 2823, column: 5, scope: !2920)
!5799 = !DILocation(line: 2823, column: 11, scope: !2920)
!5800 = !DILocation(line: 2823, column: 15, scope: !2920)
!5801 = !DILocation(line: 2823, column: 29, scope: !2920)
!5802 = !DILocation(line: 2824, column: 5, scope: !2914)
!5803 = !DILocation(line: 2826, column: 30, scope: !2914)
!5804 = !DILocation(line: 2826, column: 30, scope: !2916)
!5805 = !DILocation(line: 2826, column: 30, scope: !2918)
!5806 = !DILocation(line: 2826, column: 30, scope: !2920)
!5807 = !DILocation(line: 2826, column: 5, scope: !2920)
!5808 = !DILocation(line: 2826, column: 11, scope: !2920)
!5809 = !DILocation(line: 2826, column: 15, scope: !2920)
!5810 = !DILocation(line: 2826, column: 28, scope: !2920)
!5811 = !DILocation(line: 2827, column: 5, scope: !2914)
!5812 = !DILocation(line: 2829, column: 31, scope: !2914)
!5813 = !DILocation(line: 2829, column: 31, scope: !2916)
!5814 = !DILocation(line: 2829, column: 31, scope: !2918)
!5815 = !DILocation(line: 2829, column: 31, scope: !2920)
!5816 = !DILocation(line: 2829, column: 5, scope: !2920)
!5817 = !DILocation(line: 2829, column: 11, scope: !2920)
!5818 = !DILocation(line: 2829, column: 15, scope: !2920)
!5819 = !DILocation(line: 2829, column: 29, scope: !2920)
!5820 = !DILocation(line: 2830, column: 5, scope: !2914)
!5821 = !DILocation(line: 2833, column: 36, scope: !2914)
!5822 = !DILocation(line: 2833, column: 36, scope: !2916)
!5823 = !DILocation(line: 2833, column: 36, scope: !2918)
!5824 = !DILocation(line: 2833, column: 36, scope: !2920)
!5825 = !DILocation(line: 2833, column: 33, scope: !2920)
!5826 = !DILocation(line: 2833, column: 30, scope: !2920)
!5827 = !DILocation(line: 2833, column: 5, scope: !2920)
!5828 = !DILocation(line: 2833, column: 11, scope: !2920)
!5829 = !DILocation(line: 2833, column: 15, scope: !2920)
!5830 = !DILocation(line: 2833, column: 28, scope: !2920)
!5831 = !DILocation(line: 2837, column: 5, scope: !2914)
!5832 = !DILocation(line: 2839, column: 38, scope: !2914)
!5833 = !DILocation(line: 2839, column: 38, scope: !2916)
!5834 = !DILocation(line: 2839, column: 38, scope: !2918)
!5835 = !DILocation(line: 2839, column: 38, scope: !2920)
!5836 = !DILocation(line: 2839, column: 35, scope: !2920)
!5837 = !DILocation(line: 2839, column: 32, scope: !2920)
!5838 = !DILocation(line: 2839, column: 5, scope: !2920)
!5839 = !DILocation(line: 2839, column: 11, scope: !2920)
!5840 = !DILocation(line: 2839, column: 15, scope: !2920)
!5841 = !DILocation(line: 2839, column: 30, scope: !2920)
!5842 = !DILocation(line: 2840, column: 5, scope: !2914)
!5843 = !DILocation(line: 2842, column: 39, scope: !2914)
!5844 = !DILocation(line: 2842, column: 39, scope: !2916)
!5845 = !DILocation(line: 2842, column: 39, scope: !2918)
!5846 = !DILocation(line: 2842, column: 39, scope: !2920)
!5847 = !DILocation(line: 2842, column: 36, scope: !2920)
!5848 = !DILocation(line: 2842, column: 33, scope: !2920)
!5849 = !DILocation(line: 2842, column: 5, scope: !2920)
!5850 = !DILocation(line: 2842, column: 11, scope: !2920)
!5851 = !DILocation(line: 2842, column: 15, scope: !2920)
!5852 = !DILocation(line: 2842, column: 31, scope: !2920)
!5853 = !DILocation(line: 2843, column: 5, scope: !2914)
!5854 = !DILocation(line: 2859, column: 34, scope: !2914)
!5855 = !DILocation(line: 2859, column: 34, scope: !2916)
!5856 = !DILocation(line: 2859, column: 34, scope: !2918)
!5857 = !DILocation(line: 2859, column: 34, scope: !2920)
!5858 = !DILocation(line: 2859, column: 31, scope: !2920)
!5859 = !DILocation(line: 2859, column: 28, scope: !2920)
!5860 = !DILocation(line: 2859, column: 5, scope: !2920)
!5861 = !DILocation(line: 2859, column: 11, scope: !2920)
!5862 = !DILocation(line: 2859, column: 15, scope: !2920)
!5863 = !DILocation(line: 2859, column: 26, scope: !2920)
!5864 = !DILocation(line: 2860, column: 5, scope: !2914)
!5865 = !DILocation(line: 2862, column: 32, scope: !2914)
!5866 = !DILocation(line: 2862, column: 32, scope: !2916)
!5867 = !DILocation(line: 2862, column: 32, scope: !2918)
!5868 = !DILocation(line: 2862, column: 32, scope: !2920)
!5869 = !DILocation(line: 2862, column: 29, scope: !2920)
!5870 = !DILocation(line: 2862, column: 26, scope: !2920)
!5871 = !DILocation(line: 2862, column: 5, scope: !2920)
!5872 = !DILocation(line: 2862, column: 11, scope: !2920)
!5873 = !DILocation(line: 2862, column: 15, scope: !2920)
!5874 = !DILocation(line: 2862, column: 24, scope: !2920)
!5875 = !DILocation(line: 2863, column: 5, scope: !2914)
!5876 = !DILocation(line: 2866, column: 5, scope: !2914)
!5877 = !DILocation(line: 2877, column: 5, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 2875, column: 3)
!5879 = !DILocation(line: 2890, column: 28, scope: !2914)
!5880 = !DILocation(line: 2890, column: 28, scope: !2916)
!5881 = !DILocation(line: 2890, column: 28, scope: !2918)
!5882 = !DILocation(line: 2890, column: 28, scope: !2920)
!5883 = !DILocation(line: 2890, column: 5, scope: !2920)
!5884 = !DILocation(line: 2890, column: 11, scope: !2920)
!5885 = !DILocation(line: 2890, column: 15, scope: !2920)
!5886 = !DILocation(line: 2890, column: 26, scope: !2920)
!5887 = !DILocation(line: 2891, column: 5, scope: !2914)
!5888 = !DILocation(line: 2893, column: 48, scope: !2914)
!5889 = !DILocation(line: 2893, column: 48, scope: !2916)
!5890 = !DILocation(line: 2893, column: 48, scope: !2918)
!5891 = !DILocation(line: 2893, column: 48, scope: !2920)
!5892 = !DILocation(line: 2893, column: 45, scope: !2920)
!5893 = !DILocation(line: 2893, column: 42, scope: !2920)
!5894 = !DILocation(line: 2893, column: 5, scope: !2920)
!5895 = !DILocation(line: 2893, column: 11, scope: !2920)
!5896 = !DILocation(line: 2893, column: 15, scope: !2920)
!5897 = !DILocation(line: 2893, column: 40, scope: !2920)
!5898 = !DILocation(line: 2894, column: 5, scope: !2914)
!5899 = !DILocation(line: 2897, column: 12, scope: !2914)
!5900 = !DILocation(line: 2898, column: 5, scope: !2914)
!5901 = !DILocation(line: 2901, column: 10, scope: !2098)
!5902 = !DILocation(line: 2901, column: 3, scope: !2098)
!5903 = !DILocation(line: 2902, column: 1, scope: !2098)
!5904 = !DILocalVariable(name: "option", arg: 1, scope: !2142, file: !1, line: 308, type: !500)
!5905 = !DILocation(line: 308, column: 41, scope: !2142)
!5906 = !DILocalVariable(name: "userp", arg: 2, scope: !2142, file: !1, line: 308, type: !1562)
!5907 = !DILocation(line: 308, column: 56, scope: !2142)
!5908 = !DILocalVariable(name: "passwdp", arg: 3, scope: !2142, file: !1, line: 308, type: !1562)
!5909 = !DILocation(line: 308, column: 70, scope: !2142)
!5910 = !DILocalVariable(name: "result", scope: !2142, file: !1, line: 310, type: !289)
!5911 = !DILocation(line: 310, column: 12, scope: !2142)
!5912 = !DILocalVariable(name: "user", scope: !2142, file: !1, line: 311, type: !500)
!5913 = !DILocation(line: 311, column: 9, scope: !2142)
!5914 = !DILocalVariable(name: "passwd", scope: !2142, file: !1, line: 312, type: !500)
!5915 = !DILocation(line: 312, column: 9, scope: !2142)
!5916 = !DILocation(line: 316, column: 6, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !2142, file: !1, line: 316, column: 6)
!5918 = !DILocation(line: 316, column: 6, scope: !2142)
!5919 = !DILocation(line: 317, column: 34, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5917, file: !1, line: 316, column: 14)
!5921 = !DILocation(line: 317, column: 49, scope: !5920)
!5922 = !DILocation(line: 317, column: 42, scope: !5920)
!5923 = !DILocation(line: 318, column: 35, scope: !5920)
!5924 = !DILocation(line: 318, column: 35, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !5920, file: !1, discriminator: 1)
!5926 = !DILocation(line: 318, column: 35, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !5920, file: !1, discriminator: 2)
!5928 = !DILocation(line: 318, column: 35, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5920, file: !1, discriminator: 3)
!5930 = !DILocation(line: 319, column: 35, scope: !5920)
!5931 = !DILocation(line: 319, column: 35, scope: !5925)
!5932 = !DILocation(line: 319, column: 35, scope: !5927)
!5933 = !DILocation(line: 319, column: 35, scope: !5929)
!5934 = !DILocation(line: 317, column: 14, scope: !5925)
!5935 = !DILocation(line: 317, column: 12, scope: !5925)
!5936 = !DILocation(line: 321, column: 3, scope: !5920)
!5937 = !DILocation(line: 323, column: 7, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !2142, file: !1, line: 323, column: 6)
!5939 = !DILocation(line: 323, column: 6, scope: !2142)
!5940 = !DILocation(line: 325, column: 8, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5942, file: !1, line: 325, column: 8)
!5942 = distinct !DILexicalBlock(scope: !5938, file: !1, line: 323, column: 15)
!5943 = !DILocation(line: 325, column: 8, scope: !5942)
!5944 = !DILocation(line: 326, column: 11, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 326, column: 10)
!5946 = distinct !DILexicalBlock(scope: !5941, file: !1, line: 325, column: 15)
!5947 = !DILocation(line: 326, column: 16, scope: !5945)
!5948 = !DILocation(line: 326, column: 19, scope: !5949)
!5949 = !DILexicalBlockFile(scope: !5945, file: !1, discriminator: 1)
!5950 = !DILocation(line: 326, column: 26, scope: !5949)
!5951 = !DILocation(line: 326, column: 29, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5945, file: !1, discriminator: 2)
!5953 = !DILocation(line: 326, column: 39, scope: !5952)
!5954 = !DILocation(line: 326, column: 10, scope: !5952)
!5955 = !DILocation(line: 328, column: 16, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5945, file: !1, line: 326, column: 47)
!5957 = !DILocation(line: 328, column: 14, scope: !5956)
!5958 = !DILocation(line: 329, column: 13, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !1, line: 329, column: 12)
!5960 = !DILocation(line: 329, column: 12, scope: !5956)
!5961 = !DILocation(line: 330, column: 18, scope: !5959)
!5962 = !DILocation(line: 330, column: 11, scope: !5959)
!5963 = !DILocation(line: 331, column: 7, scope: !5956)
!5964 = !DILocation(line: 333, column: 7, scope: !5946)
!5965 = !DILocation(line: 333, column: 7, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !5967, file: !1, discriminator: 1)
!5967 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 333, column: 7)
!5968 = !DILocation(line: 334, column: 16, scope: !5946)
!5969 = !DILocation(line: 334, column: 8, scope: !5946)
!5970 = !DILocation(line: 334, column: 14, scope: !5946)
!5971 = !DILocation(line: 335, column: 5, scope: !5946)
!5972 = !DILocation(line: 338, column: 8, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5942, file: !1, line: 338, column: 8)
!5974 = !DILocation(line: 338, column: 8, scope: !5942)
!5975 = !DILocation(line: 339, column: 7, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 338, column: 17)
!5977 = !DILocation(line: 339, column: 7, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !5979, file: !1, discriminator: 1)
!5979 = distinct !DILexicalBlock(scope: !5976, file: !1, line: 339, column: 7)
!5980 = !DILocation(line: 340, column: 18, scope: !5976)
!5981 = !DILocation(line: 340, column: 8, scope: !5976)
!5982 = !DILocation(line: 340, column: 16, scope: !5976)
!5983 = !DILocation(line: 341, column: 5, scope: !5976)
!5984 = !DILocation(line: 342, column: 3, scope: !5942)
!5985 = !DILocation(line: 344, column: 10, scope: !2142)
!5986 = !DILocation(line: 344, column: 3, scope: !2142)
!5987 = !DILocalVariable(name: "conn", arg: 1, scope: !2109, file: !1, line: 3023, type: !262)
!5988 = !DILocation(line: 3023, column: 46, scope: !2109)
!5989 = !DILocalVariable(name: "dead_connection", arg: 2, scope: !2109, file: !1, line: 3023, type: !423)
!5990 = !DILocation(line: 3023, column: 57, scope: !2109)
!5991 = !DILocalVariable(name: "data", scope: !2109, file: !1, line: 3025, type: !256)
!5992 = !DILocation(line: 3025, column: 21, scope: !2109)
!5993 = !DILocation(line: 3026, column: 7, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3026, column: 6)
!5995 = !DILocation(line: 3026, column: 6, scope: !2109)
!5996 = !DILocation(line: 3027, column: 5, scope: !5994)
!5997 = !DILocation(line: 3028, column: 10, scope: !2109)
!5998 = !DILocation(line: 3028, column: 16, scope: !2109)
!5999 = !DILocation(line: 3028, column: 8, scope: !2109)
!6000 = !DILocation(line: 3030, column: 7, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3030, column: 6)
!6002 = !DILocation(line: 3030, column: 6, scope: !2109)
!6003 = !DILocation(line: 3031, column: 5, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6001, file: !1, line: 3030, column: 13)
!6005 = !DILocation(line: 3031, column: 5, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !6007, file: !1, discriminator: 1)
!6007 = distinct !DILexicalBlock(scope: !6004, file: !1, line: 3031, column: 5)
!6008 = !DILocation(line: 3032, column: 5, scope: !6004)
!6009 = !DILocation(line: 3039, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3039, column: 6)
!6011 = !DILocation(line: 3039, column: 13, scope: !6010)
!6012 = !DILocation(line: 3039, column: 18, scope: !6010)
!6013 = !DILocation(line: 3039, column: 24, scope: !6010)
!6014 = !DILocation(line: 3040, column: 7, scope: !6010)
!6015 = !DILocation(line: 3040, column: 13, scope: !6010)
!6016 = !DILocation(line: 3040, column: 23, scope: !6010)
!6017 = !DILocation(line: 3040, column: 30, scope: !6010)
!6018 = !DILocation(line: 3040, column: 36, scope: !6010)
!6019 = !DILocation(line: 3040, column: 46, scope: !6010)
!6020 = !DILocation(line: 3040, column: 28, scope: !6010)
!6021 = !DILocation(line: 3039, column: 6, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !2109, file: !1, discriminator: 1)
!6023 = !DILocation(line: 3041, column: 5, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 3040, column: 53)
!6025 = !DILocation(line: 3041, column: 5, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !6027, file: !1, discriminator: 1)
!6027 = distinct !DILexicalBlock(scope: !6024, file: !1, line: 3041, column: 5)
!6028 = !DILocation(line: 3043, column: 5, scope: !6024)
!6029 = !DILocation(line: 3046, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3046, column: 6)
!6031 = !DILocation(line: 3046, column: 12, scope: !6030)
!6032 = !DILocation(line: 3046, column: 22, scope: !6030)
!6033 = !DILocation(line: 3046, column: 6, scope: !2109)
!6034 = !DILocation(line: 3047, column: 24, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6030, file: !1, line: 3046, column: 31)
!6036 = !DILocation(line: 3047, column: 30, scope: !6035)
!6037 = !DILocation(line: 3047, column: 36, scope: !6035)
!6038 = !DILocation(line: 3047, column: 5, scope: !6035)
!6039 = !DILocation(line: 3048, column: 5, scope: !6035)
!6040 = !DILocation(line: 3048, column: 11, scope: !6035)
!6041 = !DILocation(line: 3048, column: 21, scope: !6035)
!6042 = !DILocation(line: 3049, column: 3, scope: !6035)
!6043 = !DILocation(line: 3051, column: 24, scope: !2109)
!6044 = !DILocation(line: 3051, column: 3, scope: !2109)
!6045 = !DILocation(line: 3058, column: 6, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3058, column: 6)
!6047 = !DILocation(line: 3058, column: 12, scope: !6046)
!6048 = !DILocation(line: 3058, column: 21, scope: !6046)
!6049 = !DILocation(line: 3058, column: 6, scope: !2109)
!6050 = !DILocation(line: 3060, column: 5, scope: !6046)
!6051 = !DILocation(line: 3060, column: 11, scope: !6046)
!6052 = !DILocation(line: 3060, column: 20, scope: !6046)
!6053 = !DILocation(line: 3060, column: 31, scope: !6046)
!6054 = !DILocation(line: 3060, column: 37, scope: !6046)
!6055 = !DILocation(line: 3063, column: 9, scope: !2109)
!6056 = !DILocation(line: 3063, column: 43, scope: !2109)
!6057 = !DILocation(line: 3063, column: 49, scope: !2109)
!6058 = !DILocation(line: 3063, column: 3, scope: !2109)
!6059 = !DILocation(line: 3064, column: 30, scope: !2109)
!6060 = !DILocation(line: 3064, column: 36, scope: !2109)
!6061 = !DILocation(line: 3064, column: 42, scope: !2109)
!6062 = !DILocation(line: 3064, column: 54, scope: !2109)
!6063 = !DILocation(line: 3064, column: 3, scope: !2109)
!6064 = !DILocation(line: 3066, column: 24, scope: !2109)
!6065 = !DILocation(line: 3066, column: 30, scope: !2109)
!6066 = !DILocation(line: 3066, column: 3, scope: !2109)
!6067 = !DILocation(line: 3067, column: 24, scope: !2109)
!6068 = !DILocation(line: 3067, column: 30, scope: !2109)
!6069 = !DILocation(line: 3067, column: 3, scope: !2109)
!6070 = !DILocation(line: 3068, column: 24, scope: !2109)
!6071 = !DILocation(line: 3068, column: 30, scope: !2109)
!6072 = !DILocation(line: 3068, column: 41, scope: !2109)
!6073 = !DILocation(line: 3068, column: 3, scope: !2109)
!6074 = !DILocation(line: 3069, column: 24, scope: !2109)
!6075 = !DILocation(line: 3069, column: 30, scope: !2109)
!6076 = !DILocation(line: 3069, column: 42, scope: !2109)
!6077 = !DILocation(line: 3069, column: 3, scope: !2109)
!6078 = !DILocation(line: 3071, column: 3, scope: !2109)
!6079 = !DILocation(line: 3071, column: 3, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6081, file: !1, discriminator: 1)
!6081 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3071, column: 3)
!6082 = !DILocation(line: 3074, column: 27, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !2109, file: !1, line: 3074, column: 6)
!6084 = !DILocation(line: 3074, column: 33, scope: !6083)
!6085 = !DILocation(line: 3074, column: 6, scope: !6083)
!6086 = !DILocation(line: 3074, column: 6, scope: !2109)
!6087 = !DILocation(line: 3075, column: 22, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6083, file: !1, line: 3074, column: 55)
!6089 = !DILocation(line: 3075, column: 28, scope: !6088)
!6090 = !DILocation(line: 3075, column: 5, scope: !6088)
!6091 = !DILocation(line: 3076, column: 22, scope: !6088)
!6092 = !DILocation(line: 3076, column: 28, scope: !6088)
!6093 = !DILocation(line: 3076, column: 5, scope: !6088)
!6094 = !DILocation(line: 3077, column: 3, scope: !6088)
!6095 = !DILocation(line: 3079, column: 13, scope: !2109)
!6096 = !DILocation(line: 3079, column: 3, scope: !2109)
!6097 = !DILocation(line: 3081, column: 3, scope: !2109)
!6098 = !DILocation(line: 3082, column: 1, scope: !2109)
!6099 = !DILocalVariable(name: "host", arg: 1, scope: !2153, file: !1, line: 4083, type: !2156)
!6100 = !DILocation(line: 4083, column: 50, scope: !2153)
!6101 = !DILocation(line: 4096, column: 9, scope: !2153)
!6102 = !DILocation(line: 4098, column: 1, scope: !2153)
!6103 = !DILocalVariable(name: "pipeline", arg: 1, scope: !2150, file: !1, line: 3187, type: !329)
!6104 = !DILocation(line: 3187, column: 48, scope: !2150)
!6105 = !DILocalVariable(name: "pipe_broke", arg: 2, scope: !2150, file: !1, line: 3187, type: !423)
!6106 = !DILocation(line: 3187, column: 63, scope: !2150)
!6107 = !DILocalVariable(name: "curr", scope: !2150, file: !1, line: 3189, type: !334)
!6108 = !DILocation(line: 3189, column: 30, scope: !2150)
!6109 = !DILocation(line: 3191, column: 7, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !2150, file: !1, line: 3191, column: 6)
!6111 = !DILocation(line: 3191, column: 6, scope: !2150)
!6112 = !DILocation(line: 3192, column: 5, scope: !6110)
!6113 = !DILocation(line: 3194, column: 10, scope: !2150)
!6114 = !DILocation(line: 3194, column: 20, scope: !2150)
!6115 = !DILocation(line: 3194, column: 8, scope: !2150)
!6116 = !DILocation(line: 3195, column: 3, scope: !2150)
!6117 = !DILocation(line: 3195, column: 9, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !2150, file: !1, discriminator: 1)
!6119 = !DILocation(line: 3195, column: 3, scope: !6118)
!6120 = !DILocalVariable(name: "next", scope: !6121, file: !1, line: 3196, type: !334)
!6121 = distinct !DILexicalBlock(scope: !2150, file: !1, line: 3195, column: 15)
!6122 = !DILocation(line: 3196, column: 32, scope: !6121)
!6123 = !DILocation(line: 3196, column: 39, scope: !6121)
!6124 = !DILocation(line: 3196, column: 45, scope: !6121)
!6125 = !DILocalVariable(name: "data", scope: !6121, file: !1, line: 3197, type: !256)
!6126 = !DILocation(line: 3197, column: 23, scope: !6121)
!6127 = !DILocation(line: 3197, column: 51, scope: !6121)
!6128 = !DILocation(line: 3197, column: 57, scope: !6121)
!6129 = !DILocation(line: 3197, column: 30, scope: !6121)
!6130 = !DILocation(line: 3206, column: 8, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3206, column: 8)
!6132 = !DILocation(line: 3206, column: 8, scope: !6121)
!6133 = !DILocation(line: 3207, column: 7, scope: !6131)
!6134 = !DILocation(line: 3207, column: 13, scope: !6131)
!6135 = !DILocation(line: 3207, column: 19, scope: !6131)
!6136 = !DILocation(line: 3207, column: 30, scope: !6131)
!6137 = !DILocation(line: 3208, column: 32, scope: !6121)
!6138 = !DILocation(line: 3208, column: 5, scope: !6121)
!6139 = !DILocation(line: 3209, column: 23, scope: !6121)
!6140 = !DILocation(line: 3209, column: 33, scope: !6121)
!6141 = !DILocation(line: 3209, column: 5, scope: !6121)
!6142 = !DILocation(line: 3210, column: 12, scope: !6121)
!6143 = !DILocation(line: 3210, column: 10, scope: !6121)
!6144 = !DILocation(line: 3195, column: 3, scope: !6145)
!6145 = !DILexicalBlockFile(scope: !2150, file: !1, discriminator: 2)
!6146 = !DILocation(line: 3212, column: 1, scope: !2150)
!6147 = !DILocalVariable(name: "conn", arg: 1, scope: !2149, file: !1, line: 2943, type: !262)
!6148 = !DILocation(line: 2943, column: 43, scope: !2149)
!6149 = !DILocation(line: 2945, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2945, column: 6)
!6151 = !DILocation(line: 2945, column: 6, scope: !2149)
!6152 = !DILocation(line: 2946, column: 5, scope: !6150)
!6153 = !DILocation(line: 2949, column: 3, scope: !2149)
!6154 = !DILocation(line: 2949, column: 3, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !6156, file: !1, discriminator: 1)
!6156 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2949, column: 3)
!6157 = !DILocation(line: 2953, column: 3, scope: !2149)
!6158 = !DILocation(line: 2953, column: 3, scope: !6159)
!6159 = !DILexicalBlockFile(scope: !6160, file: !1, discriminator: 1)
!6160 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2953, column: 3)
!6161 = !DILocation(line: 2954, column: 3, scope: !2149)
!6162 = !DILocation(line: 2954, column: 3, scope: !6163)
!6163 = !DILexicalBlockFile(scope: !6164, file: !1, discriminator: 1)
!6164 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2954, column: 3)
!6165 = !DILocation(line: 2957, column: 25, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2957, column: 6)
!6167 = !DILocation(line: 2957, column: 31, scope: !6166)
!6168 = !DILocation(line: 2957, column: 22, scope: !6166)
!6169 = !DILocation(line: 2957, column: 6, scope: !2149)
!6170 = !DILocation(line: 2958, column: 22, scope: !6166)
!6171 = !DILocation(line: 2958, column: 28, scope: !6166)
!6172 = !DILocation(line: 2958, column: 34, scope: !6166)
!6173 = !DILocation(line: 2958, column: 5, scope: !6166)
!6174 = !DILocation(line: 2959, column: 25, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2959, column: 6)
!6176 = !DILocation(line: 2959, column: 31, scope: !6175)
!6177 = !DILocation(line: 2959, column: 22, scope: !6175)
!6178 = !DILocation(line: 2959, column: 6, scope: !2149)
!6179 = !DILocation(line: 2960, column: 22, scope: !6175)
!6180 = !DILocation(line: 2960, column: 28, scope: !6175)
!6181 = !DILocation(line: 2960, column: 34, scope: !6175)
!6182 = !DILocation(line: 2960, column: 5, scope: !6175)
!6183 = !DILocation(line: 2961, column: 25, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2961, column: 6)
!6185 = !DILocation(line: 2961, column: 31, scope: !6184)
!6186 = !DILocation(line: 2961, column: 22, scope: !6184)
!6187 = !DILocation(line: 2961, column: 6, scope: !2149)
!6188 = !DILocation(line: 2962, column: 22, scope: !6184)
!6189 = !DILocation(line: 2962, column: 28, scope: !6184)
!6190 = !DILocation(line: 2962, column: 34, scope: !6184)
!6191 = !DILocation(line: 2962, column: 5, scope: !6184)
!6192 = !DILocation(line: 2963, column: 25, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2963, column: 6)
!6194 = !DILocation(line: 2963, column: 31, scope: !6193)
!6195 = !DILocation(line: 2963, column: 22, scope: !6193)
!6196 = !DILocation(line: 2963, column: 6, scope: !2149)
!6197 = !DILocation(line: 2964, column: 22, scope: !6193)
!6198 = !DILocation(line: 2964, column: 28, scope: !6193)
!6199 = !DILocation(line: 2964, column: 34, scope: !6193)
!6200 = !DILocation(line: 2964, column: 5, scope: !6193)
!6201 = !DILocation(line: 2971, column: 3, scope: !2149)
!6202 = !DILocation(line: 2971, column: 3, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !6204, file: !1, discriminator: 1)
!6204 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2971, column: 3)
!6205 = !DILocation(line: 2972, column: 3, scope: !2149)
!6206 = !DILocation(line: 2972, column: 3, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6208, file: !1, discriminator: 1)
!6208 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2972, column: 3)
!6209 = !DILocation(line: 2973, column: 3, scope: !2149)
!6210 = !DILocation(line: 2973, column: 3, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6212, file: !1, discriminator: 1)
!6212 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2973, column: 3)
!6213 = !DILocation(line: 2974, column: 3, scope: !2149)
!6214 = !DILocation(line: 2974, column: 3, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !6216, file: !1, discriminator: 1)
!6216 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2974, column: 3)
!6217 = !DILocation(line: 2975, column: 3, scope: !2149)
!6218 = !DILocation(line: 2975, column: 3, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !6220, file: !1, discriminator: 1)
!6220 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2975, column: 3)
!6221 = !DILocation(line: 2976, column: 3, scope: !2149)
!6222 = !DILocation(line: 2976, column: 3, scope: !6223)
!6223 = !DILexicalBlockFile(scope: !6224, file: !1, discriminator: 1)
!6224 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2976, column: 3)
!6225 = !DILocation(line: 2977, column: 3, scope: !2149)
!6226 = !DILocation(line: 2977, column: 3, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !6228, file: !1, discriminator: 1)
!6228 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2977, column: 3)
!6229 = !DILocation(line: 2978, column: 3, scope: !2149)
!6230 = !DILocation(line: 2978, column: 3, scope: !6231)
!6231 = !DILexicalBlockFile(scope: !6232, file: !1, discriminator: 1)
!6232 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2978, column: 3)
!6233 = !DILocation(line: 2979, column: 3, scope: !2149)
!6234 = !DILocation(line: 2979, column: 3, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !6236, file: !1, discriminator: 1)
!6236 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2979, column: 3)
!6237 = !DILocation(line: 2980, column: 3, scope: !2149)
!6238 = !DILocation(line: 2980, column: 3, scope: !6239)
!6239 = !DILexicalBlockFile(scope: !6240, file: !1, discriminator: 1)
!6240 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2980, column: 3)
!6241 = !DILocation(line: 2981, column: 3, scope: !2149)
!6242 = !DILocation(line: 2981, column: 3, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !6244, file: !1, discriminator: 1)
!6244 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2981, column: 3)
!6245 = !DILocation(line: 2982, column: 3, scope: !2149)
!6246 = !DILocation(line: 2982, column: 3, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6248, file: !1, discriminator: 1)
!6248 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2982, column: 3)
!6249 = !DILocation(line: 2983, column: 3, scope: !2149)
!6250 = !DILocation(line: 2983, column: 3, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !6252, file: !1, discriminator: 1)
!6252 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2983, column: 3)
!6253 = !DILocation(line: 2984, column: 3, scope: !2149)
!6254 = !DILocation(line: 2984, column: 3, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6256, file: !1, discriminator: 1)
!6256 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2984, column: 3)
!6257 = !DILocation(line: 2985, column: 3, scope: !2149)
!6258 = !DILocation(line: 2985, column: 3, scope: !6259)
!6259 = !DILexicalBlockFile(scope: !6260, file: !1, discriminator: 1)
!6260 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2985, column: 3)
!6261 = !DILocation(line: 2986, column: 3, scope: !2149)
!6262 = !DILocation(line: 2986, column: 3, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6264, file: !1, discriminator: 1)
!6264 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2986, column: 3)
!6265 = !DILocation(line: 2987, column: 3, scope: !2149)
!6266 = !DILocation(line: 2987, column: 3, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6268, file: !1, discriminator: 1)
!6268 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2987, column: 3)
!6269 = !DILocation(line: 2988, column: 3, scope: !2149)
!6270 = !DILocation(line: 2988, column: 3, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6272, file: !1, discriminator: 1)
!6272 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2988, column: 3)
!6273 = !DILocation(line: 2989, column: 3, scope: !2149)
!6274 = !DILocation(line: 2989, column: 3, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6276, file: !1, discriminator: 1)
!6276 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2989, column: 3)
!6277 = !DILocation(line: 2990, column: 3, scope: !2149)
!6278 = !DILocation(line: 2990, column: 3, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6280, file: !1, discriminator: 1)
!6280 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2990, column: 3)
!6281 = !DILocation(line: 2991, column: 3, scope: !2149)
!6282 = !DILocation(line: 2991, column: 3, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !6284, file: !1, discriminator: 1)
!6284 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2991, column: 3)
!6285 = !DILocation(line: 2992, column: 3, scope: !2149)
!6286 = !DILocation(line: 2992, column: 3, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6288, file: !1, discriminator: 1)
!6288 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2992, column: 3)
!6289 = !DILocation(line: 2993, column: 3, scope: !2149)
!6290 = !DILocation(line: 2993, column: 3, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6292, file: !1, discriminator: 1)
!6292 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2993, column: 3)
!6293 = !DILocation(line: 2994, column: 3, scope: !2149)
!6294 = !DILocation(line: 2994, column: 3, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !6296, file: !1, discriminator: 1)
!6296 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2994, column: 3)
!6297 = !DILocation(line: 2995, column: 3, scope: !2149)
!6298 = !DILocation(line: 2995, column: 3, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6300, file: !1, discriminator: 1)
!6300 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2995, column: 3)
!6301 = !DILocation(line: 2997, column: 3, scope: !2149)
!6302 = !DILocation(line: 2997, column: 3, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !6304, file: !1, discriminator: 1)
!6304 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 2997, column: 3)
!6305 = !DILocation(line: 2999, column: 23, scope: !2149)
!6306 = !DILocation(line: 2999, column: 29, scope: !2149)
!6307 = !DILocation(line: 2999, column: 3, scope: !2149)
!6308 = !DILocation(line: 3000, column: 23, scope: !2149)
!6309 = !DILocation(line: 3000, column: 29, scope: !2149)
!6310 = !DILocation(line: 3000, column: 3, scope: !2149)
!6311 = !DILocation(line: 3002, column: 3, scope: !2149)
!6312 = !DILocation(line: 3002, column: 3, scope: !6313)
!6313 = !DILexicalBlockFile(scope: !6314, file: !1, discriminator: 1)
!6314 = distinct !DILexicalBlock(scope: !2149, file: !1, line: 3002, column: 3)
!6315 = !DILocation(line: 3003, column: 33, scope: !2149)
!6316 = !DILocation(line: 3003, column: 39, scope: !2149)
!6317 = !DILocation(line: 3003, column: 3, scope: !2149)
!6318 = !DILocation(line: 3004, column: 33, scope: !2149)
!6319 = !DILocation(line: 3004, column: 39, scope: !2149)
!6320 = !DILocation(line: 3004, column: 3, scope: !2149)
!6321 = !DILocation(line: 3010, column: 3, scope: !2149)
!6322 = !DILocation(line: 3011, column: 1, scope: !2149)
!6323 = !DILocation(line: 3011, column: 1, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !2149, file: !1, discriminator: 1)
!6325 = !DILocalVariable(name: "handle", arg: 1, scope: !2110, file: !1, line: 3128, type: !256)
!6326 = !DILocation(line: 3128, column: 53, scope: !2110)
!6327 = !DILocalVariable(name: "pipeline", arg: 2, scope: !2110, file: !1, line: 3129, type: !329)
!6328 = !DILocation(line: 3129, column: 54, scope: !2110)
!6329 = !DILocation(line: 3131, column: 6, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !2110, file: !1, line: 3131, column: 6)
!6331 = !DILocation(line: 3131, column: 6, scope: !2110)
!6332 = !DILocalVariable(name: "curr", scope: !6333, file: !1, line: 3132, type: !334)
!6333 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 3131, column: 16)
!6334 = !DILocation(line: 3132, column: 32, scope: !6333)
!6335 = !DILocation(line: 3134, column: 12, scope: !6333)
!6336 = !DILocation(line: 3134, column: 22, scope: !6333)
!6337 = !DILocation(line: 3134, column: 10, scope: !6333)
!6338 = !DILocation(line: 3135, column: 5, scope: !6333)
!6339 = !DILocation(line: 3135, column: 11, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !6333, file: !1, discriminator: 1)
!6341 = !DILocation(line: 3135, column: 5, scope: !6340)
!6342 = !DILocation(line: 3136, column: 10, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !1, line: 3136, column: 10)
!6344 = distinct !DILexicalBlock(scope: !6333, file: !1, line: 3135, column: 17)
!6345 = !DILocation(line: 3136, column: 16, scope: !6343)
!6346 = !DILocation(line: 3136, column: 23, scope: !6343)
!6347 = !DILocation(line: 3136, column: 20, scope: !6343)
!6348 = !DILocation(line: 3136, column: 10, scope: !6344)
!6349 = !DILocation(line: 3137, column: 27, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 3136, column: 31)
!6351 = !DILocation(line: 3137, column: 37, scope: !6350)
!6352 = !DILocation(line: 3137, column: 9, scope: !6350)
!6353 = !DILocation(line: 3138, column: 9, scope: !6350)
!6354 = !DILocation(line: 3140, column: 14, scope: !6344)
!6355 = !DILocation(line: 3140, column: 20, scope: !6344)
!6356 = !DILocation(line: 3140, column: 12, scope: !6344)
!6357 = !DILocation(line: 3135, column: 5, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6333, file: !1, discriminator: 2)
!6359 = !DILocation(line: 3142, column: 3, scope: !6333)
!6360 = !DILocation(line: 3144, column: 3, scope: !2110)
!6361 = !DILocation(line: 3145, column: 1, scope: !2110)
!6362 = !DILocalVariable(name: "data", arg: 1, scope: !2113, file: !1, line: 3173, type: !256)
!6363 = !DILocation(line: 3173, column: 50, scope: !2113)
!6364 = !DILocalVariable(name: "conn", arg: 2, scope: !2113, file: !1, line: 3174, type: !262)
!6365 = !DILocation(line: 3174, column: 52, scope: !2113)
!6366 = !DILocalVariable(name: "recv_head", scope: !2113, file: !1, line: 3176, type: !423)
!6367 = !DILocation(line: 3176, column: 8, scope: !2113)
!6368 = !DILocation(line: 3176, column: 21, scope: !2113)
!6369 = !DILocation(line: 3176, column: 27, scope: !2113)
!6370 = !DILocation(line: 3176, column: 45, scope: !2113)
!6371 = !DILocation(line: 3177, column: 40, scope: !2113)
!6372 = !DILocation(line: 3177, column: 46, scope: !2113)
!6373 = !DILocation(line: 3177, column: 21, scope: !2113)
!6374 = !DILocation(line: 3176, column: 8, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !2113, file: !1, discriminator: 1)
!6376 = !DILocalVariable(name: "send_head", scope: !2113, file: !1, line: 3178, type: !423)
!6377 = !DILocation(line: 3178, column: 8, scope: !2113)
!6378 = !DILocation(line: 3178, column: 21, scope: !2113)
!6379 = !DILocation(line: 3178, column: 27, scope: !2113)
!6380 = !DILocation(line: 3178, column: 46, scope: !2113)
!6381 = !DILocation(line: 3179, column: 40, scope: !2113)
!6382 = !DILocation(line: 3179, column: 46, scope: !2113)
!6383 = !DILocation(line: 3179, column: 21, scope: !2113)
!6384 = !DILocation(line: 3178, column: 8, scope: !6375)
!6385 = !DILocation(line: 3181, column: 36, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !2113, file: !1, line: 3181, column: 6)
!6387 = !DILocation(line: 3181, column: 43, scope: !6386)
!6388 = !DILocation(line: 3181, column: 49, scope: !6386)
!6389 = !DILocation(line: 3181, column: 6, scope: !6386)
!6390 = !DILocation(line: 3181, column: 60, scope: !6386)
!6391 = !DILocation(line: 3181, column: 63, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6386, file: !1, discriminator: 1)
!6393 = !DILocation(line: 3181, column: 6, scope: !6392)
!6394 = !DILocation(line: 3182, column: 30, scope: !6386)
!6395 = !DILocation(line: 3182, column: 5, scope: !6386)
!6396 = !DILocation(line: 3183, column: 36, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !2113, file: !1, line: 3183, column: 6)
!6398 = !DILocation(line: 3183, column: 43, scope: !6397)
!6399 = !DILocation(line: 3183, column: 49, scope: !6397)
!6400 = !DILocation(line: 3183, column: 6, scope: !6397)
!6401 = !DILocation(line: 3183, column: 60, scope: !6397)
!6402 = !DILocation(line: 3183, column: 63, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !6397, file: !1, discriminator: 1)
!6404 = !DILocation(line: 3183, column: 6, scope: !6403)
!6405 = !DILocation(line: 3184, column: 31, scope: !6397)
!6406 = !DILocation(line: 3184, column: 5, scope: !6397)
!6407 = !DILocation(line: 3185, column: 1, scope: !2113)
!6408 = !DILocalVariable(name: "data", arg: 1, scope: !2116, file: !1, line: 3222, type: !256)
!6409 = !DILocation(line: 3222, column: 47, scope: !2116)
!6410 = !DILocalVariable(name: "bc", scope: !2116, file: !1, line: 3224, type: !1131)
!6411 = !DILocation(line: 3224, column: 21, scope: !2116)
!6412 = !DILocation(line: 3224, column: 26, scope: !2116)
!6413 = !DILocation(line: 3224, column: 32, scope: !2116)
!6414 = !DILocation(line: 3224, column: 38, scope: !2116)
!6415 = !DILocalVariable(name: "iter", scope: !2116, file: !1, line: 3225, type: !6416)
!6416 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_hash_iterator", file: !326, line: 65, size: 192, align: 64, elements: !6417)
!6417 = !{!6418, !6419, !6420}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6416, file: !326, line: 66, baseType: !324, size: 64, align: 64)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "slot_index", scope: !6416, file: !326, line: 67, baseType: !316, size: 32, align: 32, offset: 64)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "current_element", scope: !6416, file: !326, line: 68, baseType: !334, size: 64, align: 64, offset: 128)
!6421 = !DILocation(line: 3225, column: 29, scope: !2116)
!6422 = !DILocalVariable(name: "curr", scope: !2116, file: !1, line: 3226, type: !334)
!6423 = !DILocation(line: 3226, column: 30, scope: !2116)
!6424 = !DILocalVariable(name: "he", scope: !2116, file: !1, line: 3227, type: !6425)
!6425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6426, size: 64, align: 64)
!6426 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_hash_element", file: !326, line: 59, size: 192, align: 64, elements: !6427)
!6427 = !{!6428, !6429, !6430}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6426, file: !326, line: 60, baseType: !311, size: 64, align: 64)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !6426, file: !326, line: 61, baseType: !347, size: 64, align: 64, offset: 64)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6426, file: !326, line: 62, baseType: !661, size: 8, align: 8, offset: 128)
!6431 = !DILocation(line: 3227, column: 29, scope: !2116)
!6432 = !DILocalVariable(name: "highscore", scope: !2116, file: !1, line: 3228, type: !599)
!6433 = !DILocation(line: 3228, column: 10, scope: !2116)
!6434 = !DILocalVariable(name: "score", scope: !2116, file: !1, line: 3229, type: !599)
!6435 = !DILocation(line: 3229, column: 10, scope: !2116)
!6436 = !DILocalVariable(name: "now", scope: !2116, file: !1, line: 3230, type: !411)
!6437 = !DILocation(line: 3230, column: 18, scope: !2116)
!6438 = !DILocalVariable(name: "conn_candidate", scope: !2116, file: !1, line: 3231, type: !262)
!6439 = !DILocation(line: 3231, column: 23, scope: !2116)
!6440 = !DILocalVariable(name: "bundle", scope: !2116, file: !1, line: 3232, type: !1705)
!6441 = !DILocation(line: 3232, column: 25, scope: !2116)
!6442 = !DILocation(line: 3234, column: 9, scope: !2116)
!6443 = !DILocation(line: 3234, column: 9, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !2116, file: !1, discriminator: 1)
!6445 = !DILocation(line: 3236, column: 28, scope: !2116)
!6446 = !DILocation(line: 3236, column: 32, scope: !2116)
!6447 = !DILocation(line: 3236, column: 3, scope: !2116)
!6448 = !DILocation(line: 3238, column: 8, scope: !2116)
!6449 = !DILocation(line: 3238, column: 6, scope: !2116)
!6450 = !DILocation(line: 3239, column: 3, scope: !2116)
!6451 = !DILocation(line: 3239, column: 9, scope: !6444)
!6452 = !DILocation(line: 3239, column: 3, scope: !6444)
!6453 = !DILocalVariable(name: "conn", scope: !6454, file: !1, line: 3240, type: !262)
!6454 = distinct !DILexicalBlock(scope: !2116, file: !1, line: 3239, column: 13)
!6455 = !DILocation(line: 3240, column: 25, scope: !6454)
!6456 = !DILocation(line: 3242, column: 14, scope: !6454)
!6457 = !DILocation(line: 3242, column: 18, scope: !6454)
!6458 = !DILocation(line: 3242, column: 12, scope: !6454)
!6459 = !DILocation(line: 3244, column: 12, scope: !6454)
!6460 = !DILocation(line: 3244, column: 20, scope: !6454)
!6461 = !DILocation(line: 3244, column: 30, scope: !6454)
!6462 = !DILocation(line: 3244, column: 10, scope: !6454)
!6463 = !DILocation(line: 3245, column: 5, scope: !6454)
!6464 = !DILocation(line: 3245, column: 11, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6454, file: !1, discriminator: 1)
!6466 = !DILocation(line: 3245, column: 5, scope: !6465)
!6467 = !DILocation(line: 3246, column: 14, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6454, file: !1, line: 3245, column: 17)
!6469 = !DILocation(line: 3246, column: 20, scope: !6468)
!6470 = !DILocation(line: 3246, column: 12, scope: !6468)
!6471 = !DILocation(line: 3248, column: 11, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6468, file: !1, line: 3248, column: 10)
!6473 = !DILocation(line: 3248, column: 17, scope: !6472)
!6474 = !DILocation(line: 3248, column: 10, scope: !6468)
!6475 = !DILocation(line: 3250, column: 17, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 3248, column: 24)
!6477 = !DILocation(line: 3250, column: 15, scope: !6476)
!6478 = !DILocation(line: 3252, column: 12, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 3252, column: 12)
!6480 = !DILocation(line: 3252, column: 20, scope: !6479)
!6481 = !DILocation(line: 3252, column: 18, scope: !6479)
!6482 = !DILocation(line: 3252, column: 12, scope: !6476)
!6483 = !DILocation(line: 3253, column: 23, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 3252, column: 31)
!6485 = !DILocation(line: 3253, column: 21, scope: !6484)
!6486 = !DILocation(line: 3254, column: 28, scope: !6484)
!6487 = !DILocation(line: 3254, column: 26, scope: !6484)
!6488 = !DILocation(line: 3255, column: 9, scope: !6484)
!6489 = !DILocation(line: 3256, column: 7, scope: !6476)
!6490 = !DILocation(line: 3257, column: 14, scope: !6468)
!6491 = !DILocation(line: 3257, column: 20, scope: !6468)
!6492 = !DILocation(line: 3257, column: 12, scope: !6468)
!6493 = !DILocation(line: 3245, column: 5, scope: !6494)
!6494 = !DILexicalBlockFile(scope: !6454, file: !1, discriminator: 2)
!6495 = !DILocation(line: 3260, column: 10, scope: !6454)
!6496 = !DILocation(line: 3260, column: 8, scope: !6454)
!6497 = !DILocation(line: 3239, column: 3, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !2116, file: !1, discriminator: 2)
!6499 = !DILocation(line: 3263, column: 10, scope: !2116)
!6500 = !DILocation(line: 3263, column: 3, scope: !2116)
!6501 = !DILocalVariable(name: "conn", arg: 1, scope: !2119, file: !1, line: 3824, type: !262)
!6502 = !DILocation(line: 3824, column: 51, scope: !2119)
!6503 = !DILocalVariable(name: "sockindex", arg: 2, scope: !2119, file: !1, line: 3824, type: !316)
!6504 = !DILocation(line: 3824, column: 61, scope: !2119)
!6505 = !DILocalVariable(name: "result", scope: !2119, file: !1, line: 3826, type: !289)
!6506 = !DILocation(line: 3826, column: 12, scope: !2119)
!6507 = !DILocation(line: 3828, column: 6, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !2119, file: !1, line: 3828, column: 6)
!6509 = !DILocation(line: 3828, column: 12, scope: !6508)
!6510 = !DILocation(line: 3828, column: 17, scope: !6508)
!6511 = !DILocation(line: 3828, column: 6, scope: !2119)
!6512 = !DILocalVariable(name: "host", scope: !6513, file: !1, line: 3833, type: !6514)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !1, line: 3828, column: 29)
!6514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!6515 = !DILocation(line: 3833, column: 24, scope: !6513)
!6516 = !DILocation(line: 3833, column: 31, scope: !6513)
!6517 = !DILocation(line: 3833, column: 37, scope: !6513)
!6518 = !DILocation(line: 3833, column: 42, scope: !6513)
!6519 = !DILocation(line: 3834, column: 31, scope: !6513)
!6520 = !DILocation(line: 3834, column: 37, scope: !6513)
!6521 = !DILocation(line: 3834, column: 48, scope: !6513)
!6522 = !DILocation(line: 3834, column: 53, scope: !6513)
!6523 = !DILocation(line: 3833, column: 31, scope: !6524)
!6524 = !DILexicalBlockFile(scope: !6513, file: !1, discriminator: 1)
!6525 = !DILocation(line: 3835, column: 31, scope: !6513)
!6526 = !DILocation(line: 3835, column: 37, scope: !6513)
!6527 = !DILocation(line: 3835, column: 42, scope: !6513)
!6528 = !DILocation(line: 3836, column: 31, scope: !6513)
!6529 = !DILocation(line: 3836, column: 37, scope: !6513)
!6530 = !DILocation(line: 3836, column: 50, scope: !6513)
!6531 = !DILocation(line: 3835, column: 31, scope: !6524)
!6532 = !DILocation(line: 3837, column: 31, scope: !6513)
!6533 = !DILocation(line: 3837, column: 41, scope: !6513)
!6534 = !DILocation(line: 3838, column: 31, scope: !6513)
!6535 = !DILocation(line: 3838, column: 37, scope: !6513)
!6536 = !DILocation(line: 3837, column: 31, scope: !6524)
!6537 = !DILocation(line: 3838, column: 57, scope: !6524)
!6538 = !DILocation(line: 3838, column: 63, scope: !6524)
!6539 = !DILocation(line: 3838, column: 68, scope: !6524)
!6540 = !DILocation(line: 3837, column: 31, scope: !6541)
!6541 = !DILexicalBlockFile(scope: !6513, file: !1, discriminator: 2)
!6542 = !DILocation(line: 3837, column: 31, scope: !6543)
!6543 = !DILexicalBlockFile(scope: !6513, file: !1, discriminator: 3)
!6544 = !DILocation(line: 3835, column: 31, scope: !6541)
!6545 = !DILocation(line: 3835, column: 31, scope: !6543)
!6546 = !DILocation(line: 3833, column: 31, scope: !6541)
!6547 = !DILocation(line: 3833, column: 31, scope: !6543)
!6548 = !DILocation(line: 3833, column: 24, scope: !6543)
!6549 = !DILocalVariable(name: "port", scope: !6513, file: !1, line: 3839, type: !6550)
!6550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!6551 = !DILocation(line: 3839, column: 15, scope: !6513)
!6552 = !DILocation(line: 3839, column: 22, scope: !6513)
!6553 = !DILocation(line: 3839, column: 28, scope: !6513)
!6554 = !DILocation(line: 3839, column: 33, scope: !6513)
!6555 = !DILocation(line: 3839, column: 50, scope: !6524)
!6556 = !DILocation(line: 3839, column: 56, scope: !6524)
!6557 = !DILocation(line: 3839, column: 67, scope: !6524)
!6558 = !DILocation(line: 3839, column: 45, scope: !6524)
!6559 = !DILocation(line: 3839, column: 22, scope: !6524)
!6560 = !DILocation(line: 3840, column: 22, scope: !6513)
!6561 = !DILocation(line: 3840, column: 32, scope: !6513)
!6562 = !DILocation(line: 3840, column: 53, scope: !6524)
!6563 = !DILocation(line: 3840, column: 59, scope: !6524)
!6564 = !DILocation(line: 3840, column: 22, scope: !6524)
!6565 = !DILocation(line: 3841, column: 22, scope: !6513)
!6566 = !DILocation(line: 3841, column: 28, scope: !6513)
!6567 = !DILocation(line: 3841, column: 33, scope: !6513)
!6568 = !DILocation(line: 3841, column: 48, scope: !6524)
!6569 = !DILocation(line: 3841, column: 54, scope: !6524)
!6570 = !DILocation(line: 3841, column: 22, scope: !6524)
!6571 = !DILocation(line: 3842, column: 22, scope: !6513)
!6572 = !DILocation(line: 3842, column: 28, scope: !6513)
!6573 = !DILocation(line: 3841, column: 22, scope: !6541)
!6574 = !DILocation(line: 3841, column: 22, scope: !6543)
!6575 = !DILocation(line: 3840, column: 22, scope: !6541)
!6576 = !DILocation(line: 3840, column: 22, scope: !6543)
!6577 = !DILocation(line: 3839, column: 22, scope: !6541)
!6578 = !DILocation(line: 3839, column: 22, scope: !6543)
!6579 = !DILocation(line: 3839, column: 15, scope: !6543)
!6580 = !DILocation(line: 3843, column: 5, scope: !6513)
!6581 = !DILocation(line: 3843, column: 11, scope: !6513)
!6582 = !DILocation(line: 3843, column: 16, scope: !6513)
!6583 = !DILocation(line: 3843, column: 38, scope: !6513)
!6584 = !DILocation(line: 3844, column: 12, scope: !6513)
!6585 = !DILocation(line: 3844, column: 18, scope: !6513)
!6586 = !DILocation(line: 3844, column: 30, scope: !6513)
!6587 = !DILocation(line: 3844, column: 5, scope: !6513)
!6588 = !DILocation(line: 3847, column: 28, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6513, file: !1, line: 3844, column: 41)
!6590 = !DILocation(line: 3847, column: 34, scope: !6589)
!6591 = !DILocation(line: 3847, column: 46, scope: !6589)
!6592 = !DILocation(line: 3847, column: 52, scope: !6589)
!6593 = !DILocation(line: 3847, column: 58, scope: !6589)
!6594 = !DILocation(line: 3847, column: 70, scope: !6589)
!6595 = !DILocation(line: 3848, column: 26, scope: !6589)
!6596 = !DILocation(line: 3848, column: 32, scope: !6589)
!6597 = !DILocation(line: 3848, column: 38, scope: !6589)
!6598 = !DILocation(line: 3848, column: 49, scope: !6589)
!6599 = !DILocation(line: 3847, column: 16, scope: !6589)
!6600 = !DILocation(line: 3847, column: 14, scope: !6589)
!6601 = !DILocation(line: 3849, column: 7, scope: !6589)
!6602 = !DILocation(line: 3853, column: 28, scope: !6589)
!6603 = !DILocation(line: 3853, column: 34, scope: !6589)
!6604 = !DILocation(line: 3853, column: 46, scope: !6589)
!6605 = !DILocation(line: 3853, column: 52, scope: !6589)
!6606 = !DILocation(line: 3853, column: 58, scope: !6589)
!6607 = !DILocation(line: 3853, column: 64, scope: !6589)
!6608 = !DILocation(line: 3854, column: 28, scope: !6589)
!6609 = !DILocation(line: 3853, column: 16, scope: !6589)
!6610 = !DILocation(line: 3853, column: 14, scope: !6589)
!6611 = !DILocation(line: 3855, column: 7, scope: !6589)
!6612 = !DILocation(line: 3858, column: 13, scope: !6589)
!6613 = !DILocation(line: 3858, column: 19, scope: !6589)
!6614 = !DILocation(line: 3858, column: 7, scope: !6589)
!6615 = !DILocation(line: 3859, column: 14, scope: !6589)
!6616 = !DILocation(line: 3860, column: 5, scope: !6589)
!6617 = !DILocation(line: 3861, column: 5, scope: !6513)
!6618 = !DILocation(line: 3861, column: 11, scope: !6513)
!6619 = !DILocation(line: 3861, column: 16, scope: !6513)
!6620 = !DILocation(line: 3861, column: 38, scope: !6513)
!6621 = !DILocation(line: 3865, column: 3, scope: !6513)
!6622 = !DILocation(line: 3867, column: 10, scope: !2119)
!6623 = !DILocation(line: 3867, column: 3, scope: !2119)
!6624 = !DILocalVariable(name: "conn", arg: 1, scope: !2122, file: !1, line: 3874, type: !262)
!6625 = !DILocation(line: 3874, column: 46, scope: !2122)
!6626 = !DILocation(line: 3876, column: 6, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !2122, file: !1, line: 3876, column: 6)
!6628 = !DILocation(line: 3876, column: 12, scope: !6627)
!6629 = !DILocation(line: 3876, column: 18, scope: !6627)
!6630 = !DILocation(line: 3876, column: 22, scope: !6627)
!6631 = !DILocation(line: 3876, column: 6, scope: !2122)
!6632 = !DILocation(line: 3877, column: 11, scope: !6627)
!6633 = !DILocation(line: 3877, column: 17, scope: !6627)
!6634 = !DILocation(line: 3878, column: 11, scope: !6627)
!6635 = !DILocation(line: 3878, column: 17, scope: !6627)
!6636 = !DILocation(line: 3878, column: 22, scope: !6627)
!6637 = !DILocation(line: 3878, column: 35, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6627, file: !1, discriminator: 1)
!6639 = !DILocation(line: 3878, column: 41, scope: !6638)
!6640 = !DILocation(line: 3878, column: 53, scope: !6638)
!6641 = !DILocation(line: 3878, column: 58, scope: !6638)
!6642 = !DILocation(line: 3878, column: 11, scope: !6638)
!6643 = !DILocation(line: 3879, column: 11, scope: !6627)
!6644 = !DILocation(line: 3879, column: 17, scope: !6627)
!6645 = !DILocation(line: 3879, column: 22, scope: !6627)
!6646 = !DILocation(line: 3879, column: 34, scope: !6638)
!6647 = !DILocation(line: 3879, column: 40, scope: !6638)
!6648 = !DILocation(line: 3879, column: 51, scope: !6638)
!6649 = !DILocation(line: 3879, column: 56, scope: !6638)
!6650 = !DILocation(line: 3879, column: 11, scope: !6638)
!6651 = !DILocation(line: 3880, column: 11, scope: !6627)
!6652 = !DILocation(line: 3880, column: 17, scope: !6627)
!6653 = !DILocation(line: 3880, column: 22, scope: !6627)
!6654 = !DILocation(line: 3880, column: 37, scope: !6638)
!6655 = !DILocation(line: 3880, column: 43, scope: !6638)
!6656 = !DILocation(line: 3880, column: 56, scope: !6638)
!6657 = !DILocation(line: 3880, column: 11, scope: !6638)
!6658 = !DILocation(line: 3881, column: 11, scope: !6627)
!6659 = !DILocation(line: 3881, column: 17, scope: !6627)
!6660 = !DILocation(line: 3881, column: 22, scope: !6627)
!6661 = !DILocation(line: 3880, column: 11, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6627, file: !1, discriminator: 2)
!6663 = !DILocation(line: 3880, column: 11, scope: !6664)
!6664 = !DILexicalBlockFile(scope: !6627, file: !1, discriminator: 3)
!6665 = !DILocation(line: 3879, column: 11, scope: !6662)
!6666 = !DILocation(line: 3879, column: 11, scope: !6664)
!6667 = !DILocation(line: 3878, column: 11, scope: !6662)
!6668 = !DILocation(line: 3878, column: 11, scope: !6664)
!6669 = !DILocation(line: 3882, column: 11, scope: !6627)
!6670 = !DILocation(line: 3882, column: 17, scope: !6627)
!6671 = !DILocation(line: 3882, column: 30, scope: !6627)
!6672 = !DILocation(line: 3882, column: 36, scope: !6627)
!6673 = !DILocation(line: 3882, column: 42, scope: !6627)
!6674 = !DILocation(line: 3882, column: 48, scope: !6627)
!6675 = !DILocation(line: 3877, column: 5, scope: !6638)
!6676 = !DILocation(line: 3883, column: 1, scope: !2122)
!6677 = !DILocalVariable(name: "conn", arg: 1, scope: !2125, file: !1, line: 3886, type: !262)
!6678 = !DILocation(line: 3886, column: 47, scope: !2125)
!6679 = !DILocalVariable(name: "socks", arg: 2, scope: !2125, file: !1, line: 3887, type: !1480)
!6680 = !DILocation(line: 3887, column: 42, scope: !2125)
!6681 = !DILocalVariable(name: "numsocks", arg: 3, scope: !2125, file: !1, line: 3888, type: !316)
!6682 = !DILocation(line: 3888, column: 31, scope: !2125)
!6683 = !DILocation(line: 3890, column: 6, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !2125, file: !1, line: 3890, column: 6)
!6685 = !DILocation(line: 3890, column: 12, scope: !6684)
!6686 = !DILocation(line: 3890, column: 21, scope: !6684)
!6687 = !DILocation(line: 3890, column: 6, scope: !2125)
!6688 = !DILocation(line: 3891, column: 12, scope: !6684)
!6689 = !DILocation(line: 3891, column: 18, scope: !6684)
!6690 = !DILocation(line: 3891, column: 27, scope: !6684)
!6691 = !DILocation(line: 3891, column: 41, scope: !6684)
!6692 = !DILocation(line: 3891, column: 47, scope: !6684)
!6693 = !DILocation(line: 3891, column: 54, scope: !6684)
!6694 = !DILocation(line: 3891, column: 5, scope: !6684)
!6695 = !DILocation(line: 3892, column: 3, scope: !2125)
!6696 = !DILocation(line: 3893, column: 1, scope: !2125)
!6697 = !DILocalVariable(name: "conn", arg: 1, scope: !2126, file: !1, line: 3895, type: !262)
!6698 = !DILocation(line: 3895, column: 44, scope: !2126)
!6699 = !DILocalVariable(name: "socks", arg: 2, scope: !2126, file: !1, line: 3896, type: !1480)
!6700 = !DILocation(line: 3896, column: 39, scope: !2126)
!6701 = !DILocalVariable(name: "numsocks", arg: 3, scope: !2126, file: !1, line: 3897, type: !316)
!6702 = !DILocation(line: 3897, column: 28, scope: !2126)
!6703 = !DILocation(line: 3899, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !2126, file: !1, line: 3899, column: 6)
!6705 = !DILocation(line: 3899, column: 11, scope: !6704)
!6706 = !DILocation(line: 3899, column: 14, scope: !6707)
!6707 = !DILexicalBlockFile(scope: !6704, file: !1, discriminator: 1)
!6708 = !DILocation(line: 3899, column: 20, scope: !6707)
!6709 = !DILocation(line: 3899, column: 29, scope: !6707)
!6710 = !DILocation(line: 3899, column: 6, scope: !6707)
!6711 = !DILocation(line: 3900, column: 12, scope: !6704)
!6712 = !DILocation(line: 3900, column: 18, scope: !6704)
!6713 = !DILocation(line: 3900, column: 27, scope: !6704)
!6714 = !DILocation(line: 3900, column: 41, scope: !6704)
!6715 = !DILocation(line: 3900, column: 47, scope: !6704)
!6716 = !DILocation(line: 3900, column: 54, scope: !6704)
!6717 = !DILocation(line: 3900, column: 5, scope: !6704)
!6718 = !DILocation(line: 3901, column: 3, scope: !2126)
!6719 = !DILocation(line: 3902, column: 1, scope: !2126)
!6720 = !DILocalVariable(name: "conn", arg: 1, scope: !2127, file: !1, line: 3910, type: !262)
!6721 = !DILocation(line: 3910, column: 55, scope: !2127)
!6722 = !DILocalVariable(name: "done", arg: 2, scope: !2127, file: !1, line: 3911, type: !1461)
!6723 = !DILocation(line: 3911, column: 41, scope: !2127)
!6724 = !DILocalVariable(name: "result", scope: !2127, file: !1, line: 3913, type: !289)
!6725 = !DILocation(line: 3913, column: 12, scope: !2127)
!6726 = !DILocation(line: 3915, column: 6, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !2127, file: !1, line: 3915, column: 6)
!6728 = !DILocation(line: 3915, column: 11, scope: !6727)
!6729 = !DILocation(line: 3915, column: 14, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !6727, file: !1, discriminator: 1)
!6731 = !DILocation(line: 3915, column: 20, scope: !6730)
!6732 = !DILocation(line: 3915, column: 29, scope: !6730)
!6733 = !DILocation(line: 3915, column: 6, scope: !6730)
!6734 = !DILocation(line: 3916, column: 6, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6727, file: !1, line: 3915, column: 41)
!6736 = !DILocation(line: 3916, column: 11, scope: !6735)
!6737 = !DILocation(line: 3917, column: 14, scope: !6735)
!6738 = !DILocation(line: 3917, column: 20, scope: !6735)
!6739 = !DILocation(line: 3917, column: 29, scope: !6735)
!6740 = !DILocation(line: 3917, column: 40, scope: !6735)
!6741 = !DILocation(line: 3917, column: 46, scope: !6735)
!6742 = !DILocation(line: 3917, column: 12, scope: !6735)
!6743 = !DILocation(line: 3918, column: 3, scope: !6735)
!6744 = !DILocation(line: 3920, column: 6, scope: !6727)
!6745 = !DILocation(line: 3920, column: 11, scope: !6727)
!6746 = !DILocation(line: 3922, column: 10, scope: !2127)
!6747 = !DILocation(line: 3922, column: 3, scope: !2127)
!6748 = !DILocalVariable(name: "conn", arg: 1, scope: !2128, file: !1, line: 3930, type: !262)
!6749 = !DILocation(line: 3930, column: 50, scope: !2128)
!6750 = !DILocalVariable(name: "done", arg: 2, scope: !2128, file: !1, line: 3930, type: !1461)
!6751 = !DILocation(line: 3930, column: 62, scope: !2128)
!6752 = !DILocalVariable(name: "result", scope: !2128, file: !1, line: 3932, type: !289)
!6753 = !DILocation(line: 3932, column: 12, scope: !2128)
!6754 = !DILocation(line: 3934, column: 6, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !2128, file: !1, line: 3934, column: 6)
!6756 = !DILocation(line: 3934, column: 11, scope: !6755)
!6757 = !DILocation(line: 3934, column: 14, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !6755, file: !1, discriminator: 1)
!6759 = !DILocation(line: 3934, column: 20, scope: !6758)
!6760 = !DILocation(line: 3934, column: 29, scope: !6758)
!6761 = !DILocation(line: 3934, column: 6, scope: !6758)
!6762 = !DILocation(line: 3935, column: 6, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6755, file: !1, line: 3934, column: 36)
!6764 = !DILocation(line: 3935, column: 11, scope: !6763)
!6765 = !DILocation(line: 3936, column: 14, scope: !6763)
!6766 = !DILocation(line: 3936, column: 20, scope: !6763)
!6767 = !DILocation(line: 3936, column: 29, scope: !6763)
!6768 = !DILocation(line: 3936, column: 35, scope: !6763)
!6769 = !DILocation(line: 3936, column: 41, scope: !6763)
!6770 = !DILocation(line: 3936, column: 12, scope: !6763)
!6771 = !DILocation(line: 3937, column: 3, scope: !6763)
!6772 = !DILocation(line: 3939, column: 6, scope: !6755)
!6773 = !DILocation(line: 3939, column: 11, scope: !6755)
!6774 = !DILocation(line: 3941, column: 10, scope: !2128)
!6775 = !DILocation(line: 3941, column: 3, scope: !2128)
!6776 = !DILocalVariable(name: "conn", arg: 1, scope: !2129, file: !1, line: 3949, type: !262)
!6777 = !DILocation(line: 3949, column: 52, scope: !2129)
!6778 = !DILocalVariable(name: "protocol_done", arg: 2, scope: !2129, file: !1, line: 3950, type: !1461)
!6779 = !DILocation(line: 3950, column: 38, scope: !2129)
!6780 = !DILocalVariable(name: "result", scope: !2129, file: !1, line: 3952, type: !289)
!6781 = !DILocation(line: 3952, column: 12, scope: !2129)
!6782 = !DILocation(line: 3954, column: 4, scope: !2129)
!6783 = !DILocation(line: 3954, column: 18, scope: !2129)
!6784 = !DILocation(line: 3956, column: 6, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !2129, file: !1, line: 3956, column: 6)
!6786 = !DILocation(line: 3956, column: 12, scope: !6785)
!6787 = !DILocation(line: 3956, column: 17, scope: !6785)
!6788 = !DILocation(line: 3956, column: 41, scope: !6785)
!6789 = !DILocation(line: 3956, column: 44, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !6785, file: !1, discriminator: 1)
!6791 = !DILocation(line: 3956, column: 50, scope: !6790)
!6792 = !DILocation(line: 3956, column: 55, scope: !6790)
!6793 = !DILocation(line: 3956, column: 6, scope: !6790)
!6794 = !DILocation(line: 3963, column: 9, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !1, line: 3963, column: 8)
!6796 = distinct !DILexicalBlock(scope: !6785, file: !1, line: 3956, column: 71)
!6797 = !DILocation(line: 3963, column: 15, scope: !6795)
!6798 = !DILocation(line: 3963, column: 24, scope: !6795)
!6799 = !DILocation(line: 3963, column: 8, scope: !6796)
!6800 = !DILocation(line: 3964, column: 8, scope: !6795)
!6801 = !DILocation(line: 3964, column: 22, scope: !6795)
!6802 = !DILocation(line: 3964, column: 7, scope: !6795)
!6803 = !DILocation(line: 3966, column: 5, scope: !6796)
!6804 = !DILocation(line: 3969, column: 7, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !2129, file: !1, line: 3969, column: 6)
!6806 = !DILocation(line: 3969, column: 13, scope: !6805)
!6807 = !DILocation(line: 3969, column: 18, scope: !6805)
!6808 = !DILocation(line: 3969, column: 6, scope: !2129)
!6809 = !DILocation(line: 3971, column: 33, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6805, file: !1, line: 3969, column: 34)
!6811 = !DILocation(line: 3971, column: 14, scope: !6810)
!6812 = !DILocation(line: 3971, column: 12, scope: !6810)
!6813 = !DILocation(line: 3972, column: 8, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6810, file: !1, line: 3972, column: 8)
!6815 = !DILocation(line: 3972, column: 8, scope: !6810)
!6816 = !DILocation(line: 3973, column: 14, scope: !6814)
!6817 = !DILocation(line: 3973, column: 7, scope: !6814)
!6818 = !DILocation(line: 3975, column: 8, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6810, file: !1, line: 3975, column: 8)
!6820 = !DILocation(line: 3975, column: 8, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6819, file: !1, discriminator: 1)
!6822 = !DILocation(line: 3977, column: 7, scope: !6819)
!6823 = !DILocation(line: 3979, column: 8, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6810, file: !1, line: 3979, column: 8)
!6825 = !DILocation(line: 3979, column: 14, scope: !6824)
!6826 = !DILocation(line: 3979, column: 19, scope: !6824)
!6827 = !DILocation(line: 3979, column: 32, scope: !6824)
!6828 = !DILocation(line: 3979, column: 35, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6824, file: !1, discriminator: 1)
!6830 = !DILocation(line: 3979, column: 41, scope: !6829)
!6831 = !DILocation(line: 3979, column: 46, scope: !6829)
!6832 = !DILocation(line: 3979, column: 56, scope: !6829)
!6833 = !DILocation(line: 3980, column: 9, scope: !6824)
!6834 = !DILocation(line: 3980, column: 15, scope: !6824)
!6835 = !DILocation(line: 3980, column: 41, scope: !6824)
!6836 = !DILocation(line: 3979, column: 8, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6810, file: !1, discriminator: 2)
!6838 = !DILocation(line: 3983, column: 7, scope: !6824)
!6839 = !DILocation(line: 3985, column: 8, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6810, file: !1, line: 3985, column: 8)
!6841 = !DILocation(line: 3985, column: 14, scope: !6840)
!6842 = !DILocation(line: 3985, column: 23, scope: !6840)
!6843 = !DILocation(line: 3985, column: 8, scope: !6810)
!6844 = !DILocation(line: 3989, column: 16, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 3985, column: 35)
!6846 = !DILocation(line: 3989, column: 22, scope: !6845)
!6847 = !DILocation(line: 3989, column: 31, scope: !6845)
!6848 = !DILocation(line: 3989, column: 42, scope: !6845)
!6849 = !DILocation(line: 3989, column: 48, scope: !6845)
!6850 = !DILocation(line: 3989, column: 14, scope: !6845)
!6851 = !DILocation(line: 3990, column: 5, scope: !6845)
!6852 = !DILocation(line: 3992, column: 8, scope: !6840)
!6853 = !DILocation(line: 3992, column: 22, scope: !6840)
!6854 = !DILocation(line: 3996, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6810, file: !1, line: 3996, column: 8)
!6856 = !DILocation(line: 3996, column: 8, scope: !6810)
!6857 = !DILocation(line: 3997, column: 7, scope: !6855)
!6858 = !DILocation(line: 3997, column: 13, scope: !6855)
!6859 = !DILocation(line: 3997, column: 18, scope: !6855)
!6860 = !DILocation(line: 3997, column: 33, scope: !6855)
!6861 = !DILocation(line: 3998, column: 3, scope: !6810)
!6862 = !DILocation(line: 4000, column: 10, scope: !2129)
!6863 = !DILocation(line: 4000, column: 3, scope: !2129)
!6864 = !DILocation(line: 4001, column: 1, scope: !2129)
!6865 = !DILocalVariable(name: "conn", arg: 1, scope: !2131, file: !1, line: 6807, type: !262)
!6866 = !DILocation(line: 6807, column: 46, scope: !2131)
!6867 = !DILocalVariable(name: "protocol_done", arg: 2, scope: !2131, file: !1, line: 6808, type: !1461)
!6868 = !DILocation(line: 6808, column: 32, scope: !2131)
!6869 = !DILocalVariable(name: "result", scope: !2131, file: !1, line: 6810, type: !289)
!6870 = !DILocation(line: 6810, column: 12, scope: !2131)
!6871 = !DILocalVariable(name: "data", scope: !2131, file: !1, line: 6811, type: !256)
!6872 = !DILocation(line: 6811, column: 21, scope: !2131)
!6873 = !DILocation(line: 6811, column: 28, scope: !2131)
!6874 = !DILocation(line: 6811, column: 34, scope: !2131)
!6875 = !DILocation(line: 6813, column: 17, scope: !2131)
!6876 = !DILocation(line: 6813, column: 3, scope: !2131)
!6877 = !DILocation(line: 6815, column: 6, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 6815, column: 6)
!6879 = !DILocation(line: 6815, column: 12, scope: !6878)
!6880 = !DILocation(line: 6815, column: 21, scope: !6878)
!6881 = !DILocation(line: 6815, column: 27, scope: !6878)
!6882 = !DILocation(line: 6815, column: 6, scope: !2131)
!6883 = !DILocation(line: 6817, column: 6, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 6815, column: 48)
!6885 = !DILocation(line: 6817, column: 20, scope: !6884)
!6886 = !DILocation(line: 6818, column: 12, scope: !6884)
!6887 = !DILocation(line: 6818, column: 5, scope: !6884)
!6888 = !DILocation(line: 6820, column: 4, scope: !2131)
!6889 = !DILocation(line: 6820, column: 18, scope: !2131)
!6890 = !DILocation(line: 6826, column: 3, scope: !2131)
!6891 = !DILocation(line: 6826, column: 9, scope: !2131)
!6892 = !DILocation(line: 6826, column: 14, scope: !2131)
!6893 = !DILocation(line: 6826, column: 35, scope: !2131)
!6894 = !DILocation(line: 6833, column: 6, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 6833, column: 6)
!6896 = !DILocation(line: 6833, column: 12, scope: !6895)
!6897 = !DILocation(line: 6833, column: 16, scope: !6895)
!6898 = !DILocation(line: 6833, column: 6, scope: !2131)
!6899 = !DILocation(line: 6834, column: 5, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !1, line: 6833, column: 39)
!6901 = !DILocation(line: 6834, column: 5, scope: !6902)
!6902 = !DILexicalBlockFile(scope: !6903, file: !1, discriminator: 1)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !1, line: 6834, column: 5)
!6904 = !DILocation(line: 6836, column: 37, scope: !6900)
!6905 = !DILocation(line: 6836, column: 43, scope: !6900)
!6906 = !DILocation(line: 6836, column: 47, scope: !6900)
!6907 = !DILocation(line: 6836, column: 7, scope: !6900)
!6908 = !DILocation(line: 6835, column: 5, scope: !6900)
!6909 = !DILocation(line: 6835, column: 11, scope: !6900)
!6910 = !DILocation(line: 6835, column: 20, scope: !6900)
!6911 = !DILocation(line: 6835, column: 27, scope: !6900)
!6912 = !DILocation(line: 6837, column: 9, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6900, file: !1, line: 6837, column: 8)
!6914 = !DILocation(line: 6837, column: 15, scope: !6913)
!6915 = !DILocation(line: 6837, column: 24, scope: !6913)
!6916 = !DILocation(line: 6837, column: 8, scope: !6900)
!6917 = !DILocation(line: 6838, column: 7, scope: !6913)
!6918 = !DILocation(line: 6839, column: 3, scope: !6900)
!6919 = !DILocation(line: 6841, column: 3, scope: !2131)
!6920 = !DILocation(line: 6841, column: 9, scope: !2131)
!6921 = !DILocation(line: 6841, column: 13, scope: !2131)
!6922 = !DILocation(line: 6841, column: 29, scope: !2131)
!6923 = !DILocation(line: 6844, column: 3, scope: !2131)
!6924 = !DILocation(line: 6844, column: 9, scope: !2131)
!6925 = !DILocation(line: 6844, column: 15, scope: !2131)
!6926 = !DILocation(line: 6844, column: 32, scope: !2131)
!6927 = !DILocation(line: 6849, column: 3, scope: !2131)
!6928 = !DILocation(line: 6849, column: 9, scope: !2131)
!6929 = !DILocation(line: 6849, column: 15, scope: !2131)
!6930 = !DILocation(line: 6849, column: 15, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !2131, file: !1, discriminator: 1)
!6932 = !DILocation(line: 6851, column: 25, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !2131, file: !1, line: 6851, column: 6)
!6934 = !DILocation(line: 6851, column: 31, scope: !6933)
!6935 = !DILocation(line: 6851, column: 22, scope: !6933)
!6936 = !DILocation(line: 6851, column: 6, scope: !2131)
!6937 = !DILocation(line: 6852, column: 5, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6933, file: !1, line: 6851, column: 50)
!6939 = !DILocation(line: 6852, column: 11, scope: !6938)
!6940 = !DILocation(line: 6852, column: 16, scope: !6938)
!6941 = !DILocation(line: 6852, column: 40, scope: !6938)
!6942 = !DILocation(line: 6853, column: 31, scope: !6938)
!6943 = !DILocation(line: 6853, column: 37, scope: !6938)
!6944 = !DILocation(line: 6853, column: 43, scope: !6938)
!6945 = !DILocation(line: 6853, column: 14, scope: !6938)
!6946 = !DILocation(line: 6853, column: 12, scope: !6938)
!6947 = !DILocation(line: 6854, column: 8, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6938, file: !1, line: 6854, column: 8)
!6949 = !DILocation(line: 6854, column: 8, scope: !6938)
!6950 = !DILocation(line: 6855, column: 14, scope: !6948)
!6951 = !DILocation(line: 6855, column: 7, scope: !6948)
!6952 = !DILocation(line: 6856, column: 3, scope: !6938)
!6953 = !DILocation(line: 6858, column: 19, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6933, file: !1, line: 6857, column: 8)
!6955 = !DILocation(line: 6858, column: 5, scope: !6954)
!6956 = !DILocation(line: 6859, column: 19, scope: !6954)
!6957 = !DILocation(line: 6859, column: 5, scope: !6954)
!6958 = !DILocation(line: 6860, column: 5, scope: !6954)
!6959 = !DILocation(line: 6860, column: 11, scope: !6954)
!6960 = !DILocation(line: 6860, column: 16, scope: !6954)
!6961 = !DILocation(line: 6860, column: 40, scope: !6954)
!6962 = !DILocation(line: 6861, column: 6, scope: !6954)
!6963 = !DILocation(line: 6861, column: 20, scope: !6954)
!6964 = !DILocation(line: 6862, column: 25, scope: !6954)
!6965 = !DILocation(line: 6862, column: 31, scope: !6954)
!6966 = !DILocation(line: 6862, column: 37, scope: !6954)
!6967 = !DILocation(line: 6862, column: 5, scope: !6954)
!6968 = !DILocation(line: 6863, column: 25, scope: !6954)
!6969 = !DILocation(line: 6863, column: 5, scope: !6954)
!6970 = !DILocation(line: 6866, column: 3, scope: !2131)
!6971 = !DILocation(line: 6866, column: 9, scope: !2131)
!6972 = !DILocation(line: 6866, column: 15, scope: !2131)
!6973 = !DILocation(line: 6866, column: 15, scope: !6931)
!6974 = !DILocation(line: 6882, column: 10, scope: !2131)
!6975 = !DILocation(line: 6882, column: 3, scope: !2131)
!6976 = !DILocation(line: 6883, column: 1, scope: !2131)
!6977 = !DILocalVariable(name: "data", arg: 1, scope: !2132, file: !1, line: 6885, type: !256)
!6978 = !DILocation(line: 6885, column: 41, scope: !2132)
!6979 = !DILocalVariable(name: "in_connect", arg: 2, scope: !2132, file: !1, line: 6886, type: !2135)
!6980 = !DILocation(line: 6886, column: 44, scope: !2132)
!6981 = !DILocalVariable(name: "asyncp", arg: 3, scope: !2132, file: !1, line: 6887, type: !1461)
!6982 = !DILocation(line: 6887, column: 29, scope: !2132)
!6983 = !DILocalVariable(name: "protocol_done", arg: 4, scope: !2132, file: !1, line: 6888, type: !1461)
!6984 = !DILocation(line: 6888, column: 29, scope: !2132)
!6985 = !DILocalVariable(name: "result", scope: !2132, file: !1, line: 6890, type: !289)
!6986 = !DILocation(line: 6890, column: 12, scope: !2132)
!6987 = !DILocation(line: 6892, column: 4, scope: !2132)
!6988 = !DILocation(line: 6892, column: 11, scope: !2132)
!6989 = !DILocation(line: 6895, column: 24, scope: !2132)
!6990 = !DILocation(line: 6895, column: 30, scope: !2132)
!6991 = !DILocation(line: 6895, column: 42, scope: !2132)
!6992 = !DILocation(line: 6895, column: 12, scope: !2132)
!6993 = !DILocation(line: 6895, column: 10, scope: !2132)
!6994 = !DILocation(line: 6897, column: 7, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !2132, file: !1, line: 6897, column: 6)
!6996 = !DILocation(line: 6897, column: 6, scope: !2132)
!6997 = !DILocation(line: 6899, column: 10, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 6899, column: 8)
!6999 = distinct !DILexicalBlock(scope: !6995, file: !1, line: 6897, column: 15)
!7000 = !DILocation(line: 6899, column: 9, scope: !6998)
!7001 = !DILocation(line: 6899, column: 23, scope: !6998)
!7002 = !DILocation(line: 6899, column: 33, scope: !6998)
!7003 = !DILocation(line: 6899, column: 8, scope: !6998)
!7004 = !DILocation(line: 6899, column: 38, scope: !6998)
!7005 = !DILocation(line: 6899, column: 43, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !6998, file: !1, discriminator: 1)
!7007 = !DILocation(line: 6899, column: 42, scope: !7006)
!7008 = !DILocation(line: 6899, column: 56, scope: !7006)
!7009 = !DILocation(line: 6899, column: 66, scope: !7006)
!7010 = !DILocation(line: 6899, column: 41, scope: !7006)
!7011 = !DILocation(line: 6899, column: 8, scope: !7006)
!7012 = !DILocation(line: 6901, column: 8, scope: !6998)
!7013 = !DILocation(line: 6901, column: 22, scope: !6998)
!7014 = !DILocation(line: 6901, column: 7, scope: !6998)
!7015 = !DILocation(line: 6902, column: 15, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 6902, column: 13)
!7017 = !DILocation(line: 6902, column: 14, scope: !7016)
!7018 = !DILocation(line: 6902, column: 13, scope: !6998)
!7019 = !DILocation(line: 6906, column: 33, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7016, file: !1, line: 6902, column: 23)
!7021 = !DILocation(line: 6906, column: 32, scope: !7020)
!7022 = !DILocation(line: 6906, column: 45, scope: !7020)
!7023 = !DILocation(line: 6906, column: 16, scope: !7020)
!7024 = !DILocation(line: 6906, column: 14, scope: !7020)
!7025 = !DILocation(line: 6907, column: 5, scope: !7020)
!7026 = !DILocation(line: 6908, column: 3, scope: !6999)
!7027 = !DILocation(line: 6910, column: 6, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !2132, file: !1, line: 6910, column: 6)
!7029 = !DILocation(line: 6910, column: 13, scope: !7028)
!7030 = !DILocation(line: 6910, column: 6, scope: !2132)
!7031 = !DILocation(line: 6911, column: 6, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7028, file: !1, line: 6910, column: 47)
!7033 = !DILocation(line: 6911, column: 17, scope: !7032)
!7034 = !DILocation(line: 6912, column: 12, scope: !7032)
!7035 = !DILocation(line: 6912, column: 5, scope: !7032)
!7036 = !DILocation(line: 6915, column: 6, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !2132, file: !1, line: 6915, column: 6)
!7038 = !DILocation(line: 6915, column: 13, scope: !7037)
!7039 = !DILocation(line: 6915, column: 17, scope: !7040)
!7040 = !DILexicalBlockFile(scope: !7037, file: !1, discriminator: 1)
!7041 = !DILocation(line: 6915, column: 16, scope: !7040)
!7042 = !DILocation(line: 6915, column: 6, scope: !7040)
!7043 = !DILocation(line: 6918, column: 22, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7037, file: !1, line: 6915, column: 29)
!7045 = !DILocation(line: 6918, column: 21, scope: !7044)
!7046 = !DILocation(line: 6918, column: 5, scope: !7044)
!7047 = !DILocation(line: 6919, column: 6, scope: !7044)
!7048 = !DILocation(line: 6919, column: 17, scope: !7044)
!7049 = !DILocation(line: 6920, column: 3, scope: !7044)
!7050 = !DILocation(line: 6922, column: 10, scope: !2132)
!7051 = !DILocation(line: 6922, column: 3, scope: !2132)
!7052 = !DILocation(line: 6923, column: 1, scope: !2132)
!7053 = !DILocalVariable(name: "data", arg: 1, scope: !2157, file: !1, line: 6257, type: !256)
!7054 = !DILocation(line: 6257, column: 47, scope: !2157)
!7055 = !DILocalVariable(name: "in_connect", arg: 2, scope: !2157, file: !1, line: 6258, type: !2135)
!7056 = !DILocation(line: 6258, column: 50, scope: !2157)
!7057 = !DILocalVariable(name: "async", arg: 3, scope: !2157, file: !1, line: 6259, type: !1461)
!7058 = !DILocation(line: 6259, column: 35, scope: !2157)
!7059 = !DILocalVariable(name: "result", scope: !2157, file: !1, line: 6261, type: !289)
!7060 = !DILocation(line: 6261, column: 12, scope: !2157)
!7061 = !DILocalVariable(name: "conn", scope: !2157, file: !1, line: 6262, type: !262)
!7062 = !DILocation(line: 6262, column: 23, scope: !2157)
!7063 = !DILocalVariable(name: "conn_temp", scope: !2157, file: !1, line: 6263, type: !262)
!7064 = !DILocation(line: 6263, column: 23, scope: !2157)
!7065 = !DILocalVariable(name: "urllen", scope: !2157, file: !1, line: 6264, type: !347)
!7066 = !DILocation(line: 6264, column: 10, scope: !2157)
!7067 = !DILocalVariable(name: "user", scope: !2157, file: !1, line: 6265, type: !500)
!7068 = !DILocation(line: 6265, column: 9, scope: !2157)
!7069 = !DILocalVariable(name: "passwd", scope: !2157, file: !1, line: 6266, type: !500)
!7070 = !DILocation(line: 6266, column: 9, scope: !2157)
!7071 = !DILocalVariable(name: "options", scope: !2157, file: !1, line: 6267, type: !500)
!7072 = !DILocation(line: 6267, column: 9, scope: !2157)
!7073 = !DILocalVariable(name: "reuse", scope: !2157, file: !1, line: 6268, type: !423)
!7074 = !DILocation(line: 6268, column: 8, scope: !2157)
!7075 = !DILocalVariable(name: "prot_missing", scope: !2157, file: !1, line: 6269, type: !423)
!7076 = !DILocation(line: 6269, column: 8, scope: !2157)
!7077 = !DILocalVariable(name: "connections_available", scope: !2157, file: !1, line: 6270, type: !423)
!7078 = !DILocation(line: 6270, column: 8, scope: !2157)
!7079 = !DILocalVariable(name: "force_reuse", scope: !2157, file: !1, line: 6271, type: !423)
!7080 = !DILocation(line: 6271, column: 8, scope: !2157)
!7081 = !DILocalVariable(name: "waitpipe", scope: !2157, file: !1, line: 6272, type: !423)
!7082 = !DILocation(line: 6272, column: 8, scope: !2157)
!7083 = !DILocalVariable(name: "max_host_connections", scope: !2157, file: !1, line: 6273, type: !347)
!7084 = !DILocation(line: 6273, column: 10, scope: !2157)
!7085 = !DILocation(line: 6273, column: 65, scope: !2157)
!7086 = !DILocation(line: 6273, column: 71, scope: !2157)
!7087 = !DILocation(line: 6273, column: 33, scope: !2157)
!7088 = !DILocalVariable(name: "max_total_connections", scope: !2157, file: !1, line: 6274, type: !347)
!7089 = !DILocation(line: 6274, column: 10, scope: !2157)
!7090 = !DILocation(line: 6274, column: 67, scope: !2157)
!7091 = !DILocation(line: 6274, column: 73, scope: !2157)
!7092 = !DILocation(line: 6274, column: 34, scope: !2157)
!7093 = !DILocation(line: 6276, column: 4, scope: !2157)
!7094 = !DILocation(line: 6276, column: 10, scope: !2157)
!7095 = !DILocation(line: 6282, column: 7, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6282, column: 6)
!7097 = !DILocation(line: 6282, column: 13, scope: !7096)
!7098 = !DILocation(line: 6282, column: 20, scope: !7096)
!7099 = !DILocation(line: 6282, column: 6, scope: !2157)
!7100 = !DILocation(line: 6283, column: 12, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !1, line: 6282, column: 25)
!7102 = !DILocation(line: 6284, column: 5, scope: !7101)
!7103 = !DILocation(line: 6291, column: 24, scope: !2157)
!7104 = !DILocation(line: 6291, column: 10, scope: !2157)
!7105 = !DILocation(line: 6291, column: 8, scope: !2157)
!7106 = !DILocation(line: 6293, column: 7, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6293, column: 6)
!7108 = !DILocation(line: 6293, column: 6, scope: !2157)
!7109 = !DILocation(line: 6294, column: 12, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7107, file: !1, line: 6293, column: 13)
!7111 = !DILocation(line: 6295, column: 5, scope: !7110)
!7112 = !DILocation(line: 6301, column: 17, scope: !2157)
!7113 = !DILocation(line: 6301, column: 4, scope: !2157)
!7114 = !DILocation(line: 6301, column: 15, scope: !2157)
!7115 = !DILocation(line: 6312, column: 17, scope: !2157)
!7116 = !DILocation(line: 6312, column: 23, scope: !2157)
!7117 = !DILocation(line: 6312, column: 30, scope: !2157)
!7118 = !DILocation(line: 6312, column: 10, scope: !2157)
!7119 = !DILocation(line: 6312, column: 9, scope: !2157)
!7120 = !DILocation(line: 6313, column: 6, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6313, column: 6)
!7122 = !DILocation(line: 6313, column: 13, scope: !7121)
!7123 = !DILocation(line: 6313, column: 6, scope: !2157)
!7124 = !DILocation(line: 6314, column: 11, scope: !7121)
!7125 = !DILocation(line: 6314, column: 5, scope: !7121)
!7126 = !DILocation(line: 6322, column: 3, scope: !2157)
!7127 = !DILocation(line: 6322, column: 3, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !7129, file: !1, discriminator: 1)
!7129 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6322, column: 3)
!7130 = !DILocation(line: 6323, column: 3, scope: !2157)
!7131 = !DILocation(line: 6323, column: 9, scope: !2157)
!7132 = !DILocation(line: 6323, column: 15, scope: !2157)
!7133 = !DILocation(line: 6323, column: 20, scope: !2157)
!7134 = !DILocation(line: 6325, column: 28, scope: !2157)
!7135 = !DILocation(line: 6325, column: 3, scope: !2157)
!7136 = !DILocation(line: 6325, column: 9, scope: !2157)
!7137 = !DILocation(line: 6325, column: 15, scope: !2157)
!7138 = !DILocation(line: 6325, column: 26, scope: !2157)
!7139 = !DILocation(line: 6326, column: 14, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6326, column: 6)
!7141 = !DILocation(line: 6326, column: 20, scope: !7140)
!7142 = !DILocation(line: 6326, column: 26, scope: !7140)
!7143 = !DILocation(line: 6326, column: 11, scope: !7140)
!7144 = !DILocation(line: 6326, column: 6, scope: !2157)
!7145 = !DILocation(line: 6327, column: 12, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7140, file: !1, line: 6326, column: 38)
!7147 = !DILocation(line: 6328, column: 5, scope: !7146)
!7148 = !DILocation(line: 6330, column: 22, scope: !2157)
!7149 = !DILocation(line: 6330, column: 28, scope: !2157)
!7150 = !DILocation(line: 6330, column: 34, scope: !2157)
!7151 = !DILocation(line: 6330, column: 3, scope: !2157)
!7152 = !DILocation(line: 6330, column: 9, scope: !2157)
!7153 = !DILocation(line: 6330, column: 15, scope: !2157)
!7154 = !DILocation(line: 6330, column: 20, scope: !2157)
!7155 = !DILocation(line: 6332, column: 25, scope: !2157)
!7156 = !DILocation(line: 6332, column: 3, scope: !2157)
!7157 = !DILocation(line: 6332, column: 9, scope: !2157)
!7158 = !DILocation(line: 6332, column: 14, scope: !2157)
!7159 = !DILocation(line: 6332, column: 23, scope: !2157)
!7160 = !DILocation(line: 6333, column: 14, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6333, column: 6)
!7162 = !DILocation(line: 6333, column: 20, scope: !7161)
!7163 = !DILocation(line: 6333, column: 25, scope: !7161)
!7164 = !DILocation(line: 6333, column: 11, scope: !7161)
!7165 = !DILocation(line: 6333, column: 6, scope: !2157)
!7166 = !DILocation(line: 6334, column: 5, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7161, file: !1, line: 6333, column: 35)
!7168 = !DILocation(line: 6334, column: 5, scope: !7169)
!7169 = !DILexicalBlockFile(scope: !7170, file: !1, discriminator: 1)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !1, line: 6334, column: 5)
!7171 = !DILocation(line: 6335, column: 5, scope: !7167)
!7172 = !DILocation(line: 6335, column: 11, scope: !7167)
!7173 = !DILocation(line: 6335, column: 17, scope: !7167)
!7174 = !DILocation(line: 6335, column: 22, scope: !7167)
!7175 = !DILocation(line: 6336, column: 12, scope: !7167)
!7176 = !DILocation(line: 6337, column: 5, scope: !7167)
!7177 = !DILocation(line: 6340, column: 21, scope: !2157)
!7178 = !DILocation(line: 6340, column: 27, scope: !2157)
!7179 = !DILocation(line: 6340, column: 32, scope: !2157)
!7180 = !DILocation(line: 6340, column: 3, scope: !2157)
!7181 = !DILocation(line: 6340, column: 9, scope: !2157)
!7182 = !DILocation(line: 6340, column: 14, scope: !2157)
!7183 = !DILocation(line: 6340, column: 19, scope: !2157)
!7184 = !DILocation(line: 6341, column: 3, scope: !2157)
!7185 = !DILocation(line: 6341, column: 9, scope: !2157)
!7186 = !DILocation(line: 6341, column: 14, scope: !2157)
!7187 = !DILocation(line: 6341, column: 22, scope: !2157)
!7188 = !DILocation(line: 6343, column: 10, scope: !2157)
!7189 = !DILocation(line: 6343, column: 8, scope: !2157)
!7190 = !DILocation(line: 6344, column: 12, scope: !2157)
!7191 = !DILocation(line: 6344, column: 10, scope: !2157)
!7192 = !DILocation(line: 6345, column: 13, scope: !2157)
!7193 = !DILocation(line: 6345, column: 11, scope: !2157)
!7194 = !DILocation(line: 6346, column: 7, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6346, column: 6)
!7196 = !DILocation(line: 6346, column: 12, scope: !7195)
!7197 = !DILocation(line: 6346, column: 16, scope: !7198)
!7198 = !DILexicalBlockFile(scope: !7195, file: !1, discriminator: 1)
!7199 = !DILocation(line: 6346, column: 23, scope: !7198)
!7200 = !DILocation(line: 6346, column: 27, scope: !7201)
!7201 = !DILexicalBlockFile(scope: !7195, file: !1, discriminator: 2)
!7202 = !DILocation(line: 6346, column: 6, scope: !7201)
!7203 = !DILocation(line: 6347, column: 12, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7195, file: !1, line: 6346, column: 36)
!7205 = !DILocation(line: 6348, column: 5, scope: !7204)
!7206 = !DILocation(line: 6351, column: 32, scope: !2157)
!7207 = !DILocation(line: 6351, column: 38, scope: !2157)
!7208 = !DILocation(line: 6351, column: 12, scope: !2157)
!7209 = !DILocation(line: 6351, column: 10, scope: !2157)
!7210 = !DILocation(line: 6353, column: 6, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6353, column: 6)
!7212 = !DILocation(line: 6353, column: 6, scope: !2157)
!7213 = !DILocation(line: 6354, column: 5, scope: !7211)
!7214 = !DILocation(line: 6359, column: 6, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6359, column: 6)
!7216 = !DILocation(line: 6359, column: 6, scope: !2157)
!7217 = !DILocalVariable(name: "reurl", scope: !7218, file: !1, line: 6363, type: !500)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !1, line: 6359, column: 20)
!7219 = !DILocation(line: 6363, column: 11, scope: !7218)
!7220 = !DILocalVariable(name: "ch_lower", scope: !7218, file: !1, line: 6364, type: !500)
!7221 = !DILocation(line: 6364, column: 11, scope: !7218)
!7222 = !DILocation(line: 6366, column: 32, scope: !7218)
!7223 = !DILocation(line: 6366, column: 38, scope: !7218)
!7224 = !DILocation(line: 6366, column: 47, scope: !7218)
!7225 = !DILocation(line: 6366, column: 55, scope: !7218)
!7226 = !DILocation(line: 6366, column: 61, scope: !7218)
!7227 = !DILocation(line: 6366, column: 68, scope: !7218)
!7228 = !DILocation(line: 6366, column: 13, scope: !7218)
!7229 = !DILocation(line: 6366, column: 11, scope: !7218)
!7230 = !DILocation(line: 6368, column: 9, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 6368, column: 8)
!7232 = !DILocation(line: 6368, column: 8, scope: !7218)
!7233 = !DILocation(line: 6369, column: 14, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7231, file: !1, line: 6368, column: 16)
!7235 = !DILocation(line: 6370, column: 7, scope: !7234)
!7236 = !DILocation(line: 6374, column: 20, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 6374, column: 5)
!7238 = !DILocation(line: 6374, column: 18, scope: !7237)
!7239 = !DILocation(line: 6374, column: 9, scope: !7237)
!7240 = !DILocation(line: 6374, column: 28, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !7242, file: !1, discriminator: 1)
!7242 = distinct !DILexicalBlock(scope: !7237, file: !1, line: 6374, column: 5)
!7243 = !DILocation(line: 6374, column: 27, scope: !7241)
!7244 = !DILocation(line: 6374, column: 37, scope: !7241)
!7245 = !DILocation(line: 6374, column: 5, scope: !7241)
!7246 = !DILocation(line: 6375, column: 25, scope: !7242)
!7247 = !DILocation(line: 6375, column: 19, scope: !7242)
!7248 = !DILocation(line: 6375, column: 8, scope: !7242)
!7249 = !DILocation(line: 6375, column: 17, scope: !7242)
!7250 = !DILocation(line: 6375, column: 7, scope: !7242)
!7251 = !DILocation(line: 6374, column: 53, scope: !7252)
!7252 = !DILexicalBlockFile(scope: !7242, file: !1, discriminator: 2)
!7253 = !DILocation(line: 6374, column: 5, scope: !7252)
!7254 = !DILocation(line: 6377, column: 8, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 6377, column: 8)
!7256 = !DILocation(line: 6377, column: 14, scope: !7255)
!7257 = !DILocation(line: 6377, column: 21, scope: !7255)
!7258 = !DILocation(line: 6377, column: 8, scope: !7218)
!7259 = !DILocation(line: 6378, column: 7, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7255, file: !1, line: 6377, column: 32)
!7261 = !DILocation(line: 6378, column: 7, scope: !7262)
!7262 = !DILexicalBlockFile(scope: !7263, file: !1, discriminator: 1)
!7263 = distinct !DILexicalBlock(scope: !7260, file: !1, line: 6378, column: 7)
!7264 = !DILocation(line: 6379, column: 7, scope: !7260)
!7265 = !DILocation(line: 6379, column: 13, scope: !7260)
!7266 = !DILocation(line: 6379, column: 20, scope: !7260)
!7267 = !DILocation(line: 6379, column: 30, scope: !7260)
!7268 = !DILocation(line: 6380, column: 5, scope: !7260)
!7269 = !DILocation(line: 6382, column: 24, scope: !7218)
!7270 = !DILocation(line: 6382, column: 5, scope: !7218)
!7271 = !DILocation(line: 6382, column: 11, scope: !7218)
!7272 = !DILocation(line: 6382, column: 18, scope: !7218)
!7273 = !DILocation(line: 6382, column: 22, scope: !7218)
!7274 = !DILocation(line: 6383, column: 5, scope: !7218)
!7275 = !DILocation(line: 6383, column: 11, scope: !7218)
!7276 = !DILocation(line: 6383, column: 18, scope: !7218)
!7277 = !DILocation(line: 6383, column: 28, scope: !7218)
!7278 = !DILocation(line: 6384, column: 3, scope: !7218)
!7279 = !DILocation(line: 6390, column: 7, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6390, column: 6)
!7281 = !DILocation(line: 6390, column: 13, scope: !7280)
!7282 = !DILocation(line: 6390, column: 20, scope: !7280)
!7283 = !DILocation(line: 6390, column: 25, scope: !7280)
!7284 = !DILocation(line: 6390, column: 6, scope: !2157)
!7285 = !DILocalVariable(name: "path_q_sep", scope: !7286, file: !1, line: 6391, type: !500)
!7286 = distinct !DILexicalBlock(scope: !7280, file: !1, line: 6390, column: 47)
!7287 = !DILocation(line: 6391, column: 11, scope: !7286)
!7288 = !DILocation(line: 6391, column: 31, scope: !7286)
!7289 = !DILocation(line: 6391, column: 37, scope: !7286)
!7290 = !DILocation(line: 6391, column: 43, scope: !7286)
!7291 = !DILocation(line: 6391, column: 49, scope: !7286)
!7292 = !DILocation(line: 6391, column: 24, scope: !7286)
!7293 = !DILocation(line: 6392, column: 8, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7286, file: !1, line: 6392, column: 8)
!7295 = !DILocation(line: 6392, column: 8, scope: !7286)
!7296 = !DILocation(line: 6400, column: 7, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7294, file: !1, line: 6392, column: 20)
!7298 = !DILocation(line: 6400, column: 21, scope: !7297)
!7299 = !DILocation(line: 6401, column: 5, scope: !7297)
!7300 = !DILocation(line: 6402, column: 3, scope: !7286)
!7301 = !DILocation(line: 6404, column: 6, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6404, column: 6)
!7303 = !DILocation(line: 6404, column: 12, scope: !7302)
!7304 = !DILocation(line: 6404, column: 16, scope: !7302)
!7305 = !DILocation(line: 6404, column: 6, scope: !2157)
!7306 = !DILocation(line: 6405, column: 26, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7302, file: !1, line: 6404, column: 36)
!7308 = !DILocation(line: 6405, column: 5, scope: !7307)
!7309 = !DILocation(line: 6405, column: 11, scope: !7307)
!7310 = !DILocation(line: 6405, column: 24, scope: !7307)
!7311 = !DILocation(line: 6406, column: 9, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 6406, column: 8)
!7313 = !DILocation(line: 6406, column: 15, scope: !7312)
!7314 = !DILocation(line: 6406, column: 8, scope: !7307)
!7315 = !DILocation(line: 6407, column: 14, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 6406, column: 29)
!7317 = !DILocation(line: 6408, column: 7, scope: !7316)
!7318 = !DILocation(line: 6410, column: 3, scope: !7307)
!7319 = !DILocation(line: 6426, column: 42, scope: !2157)
!7320 = !DILocation(line: 6426, column: 12, scope: !2157)
!7321 = !DILocation(line: 6426, column: 10, scope: !2157)
!7322 = !DILocation(line: 6427, column: 6, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6427, column: 6)
!7324 = !DILocation(line: 6427, column: 6, scope: !2157)
!7325 = !DILocation(line: 6428, column: 5, scope: !7323)
!7326 = !DILocation(line: 6435, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6435, column: 6)
!7328 = !DILocation(line: 6435, column: 13, scope: !7327)
!7329 = !DILocation(line: 6435, column: 20, scope: !7327)
!7330 = !DILocation(line: 6435, column: 25, scope: !7327)
!7331 = !DILocation(line: 6435, column: 39, scope: !7327)
!7332 = !DILocation(line: 6435, column: 42, scope: !7333)
!7333 = !DILexicalBlockFile(scope: !7327, file: !1, discriminator: 1)
!7334 = !DILocation(line: 6435, column: 48, scope: !7333)
!7335 = !DILocation(line: 6435, column: 53, scope: !7333)
!7336 = !DILocation(line: 6435, column: 6, scope: !7333)
!7337 = !DILocation(line: 6436, column: 5, scope: !7327)
!7338 = !DILocation(line: 6436, column: 11, scope: !7327)
!7339 = !DILocation(line: 6436, column: 16, scope: !7327)
!7340 = !DILocation(line: 6436, column: 29, scope: !7327)
!7341 = !DILocation(line: 6441, column: 30, scope: !2157)
!7342 = !DILocation(line: 6441, column: 36, scope: !2157)
!7343 = !DILocation(line: 6441, column: 12, scope: !2157)
!7344 = !DILocation(line: 6441, column: 10, scope: !2157)
!7345 = !DILocation(line: 6442, column: 6, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6442, column: 6)
!7347 = !DILocation(line: 6442, column: 6, scope: !2157)
!7348 = !DILocation(line: 6443, column: 5, scope: !7346)
!7349 = !DILocation(line: 6447, column: 27, scope: !2157)
!7350 = !DILocation(line: 6447, column: 33, scope: !2157)
!7351 = !DILocation(line: 6447, column: 12, scope: !2157)
!7352 = !DILocation(line: 6447, column: 10, scope: !2157)
!7353 = !DILocation(line: 6448, column: 6, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6448, column: 6)
!7355 = !DILocation(line: 6448, column: 6, scope: !2157)
!7356 = !DILocation(line: 6449, column: 5, scope: !7354)
!7357 = !DILocation(line: 6450, column: 22, scope: !2157)
!7358 = !DILocation(line: 6450, column: 28, scope: !2157)
!7359 = !DILocation(line: 6450, column: 34, scope: !2157)
!7360 = !DILocation(line: 6450, column: 42, scope: !2157)
!7361 = !DILocation(line: 6450, column: 12, scope: !2157)
!7362 = !DILocation(line: 6450, column: 10, scope: !2157)
!7363 = !DILocation(line: 6451, column: 6, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6451, column: 6)
!7365 = !DILocation(line: 6451, column: 6, scope: !2157)
!7366 = !DILocation(line: 6452, column: 5, scope: !7364)
!7367 = !DILocation(line: 6458, column: 35, scope: !2157)
!7368 = !DILocation(line: 6458, column: 41, scope: !2157)
!7369 = !DILocation(line: 6458, column: 47, scope: !2157)
!7370 = !DILocation(line: 6458, column: 53, scope: !2157)
!7371 = !DILocation(line: 6458, column: 57, scope: !2157)
!7372 = !DILocation(line: 6458, column: 12, scope: !2157)
!7373 = !DILocation(line: 6458, column: 10, scope: !2157)
!7374 = !DILocation(line: 6459, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6459, column: 6)
!7376 = !DILocation(line: 6459, column: 6, scope: !2157)
!7377 = !DILocation(line: 6460, column: 5, scope: !7375)
!7378 = !DILocation(line: 6465, column: 16, scope: !2157)
!7379 = !DILocation(line: 6465, column: 23, scope: !2157)
!7380 = !DILocation(line: 6465, column: 29, scope: !2157)
!7381 = !DILocation(line: 6465, column: 3, scope: !2157)
!7382 = !DILocation(line: 6466, column: 6, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6466, column: 6)
!7384 = !DILocation(line: 6466, column: 12, scope: !7383)
!7385 = !DILocation(line: 6466, column: 17, scope: !7383)
!7386 = !DILocation(line: 6466, column: 6, scope: !2157)
!7387 = !DILocation(line: 6467, column: 18, scope: !7383)
!7388 = !DILocation(line: 6467, column: 25, scope: !7383)
!7389 = !DILocation(line: 6467, column: 31, scope: !7383)
!7390 = !DILocation(line: 6467, column: 5, scope: !7383)
!7391 = !DILocation(line: 6468, column: 6, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6468, column: 6)
!7393 = !DILocation(line: 6468, column: 12, scope: !7392)
!7394 = !DILocation(line: 6468, column: 17, scope: !7392)
!7395 = !DILocation(line: 6468, column: 6, scope: !2157)
!7396 = !DILocation(line: 6469, column: 18, scope: !7392)
!7397 = !DILocation(line: 6469, column: 25, scope: !7392)
!7398 = !DILocation(line: 6469, column: 31, scope: !7392)
!7399 = !DILocation(line: 6469, column: 42, scope: !7392)
!7400 = !DILocation(line: 6469, column: 5, scope: !7392)
!7401 = !DILocation(line: 6470, column: 6, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6470, column: 6)
!7403 = !DILocation(line: 6470, column: 12, scope: !7402)
!7404 = !DILocation(line: 6470, column: 17, scope: !7402)
!7405 = !DILocation(line: 6470, column: 6, scope: !2157)
!7406 = !DILocation(line: 6471, column: 18, scope: !7402)
!7407 = !DILocation(line: 6471, column: 25, scope: !7402)
!7408 = !DILocation(line: 6471, column: 31, scope: !7402)
!7409 = !DILocation(line: 6471, column: 43, scope: !7402)
!7410 = !DILocation(line: 6471, column: 5, scope: !7402)
!7411 = !DILocation(line: 6477, column: 6, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6477, column: 6)
!7413 = !DILocation(line: 6477, column: 12, scope: !7412)
!7414 = !DILocation(line: 6477, column: 17, scope: !7412)
!7415 = !DILocation(line: 6477, column: 30, scope: !7412)
!7416 = !DILocation(line: 6478, column: 6, scope: !7412)
!7417 = !DILocation(line: 6477, column: 6, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !2157, file: !1, discriminator: 1)
!7419 = !DILocation(line: 6479, column: 5, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7412, file: !1, line: 6478, column: 64)
!7421 = !DILocation(line: 6479, column: 11, scope: !7420)
!7422 = !DILocation(line: 6479, column: 16, scope: !7420)
!7423 = !DILocation(line: 6479, column: 29, scope: !7420)
!7424 = !DILocation(line: 6480, column: 3, scope: !7420)
!7425 = !DILocation(line: 6486, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6486, column: 6)
!7427 = !DILocation(line: 6486, column: 12, scope: !7426)
!7428 = !DILocation(line: 6486, column: 17, scope: !7426)
!7429 = !DILocation(line: 6486, column: 30, scope: !7426)
!7430 = !DILocation(line: 6486, column: 33, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7426, file: !1, discriminator: 1)
!7432 = !DILocation(line: 6486, column: 39, scope: !7431)
!7433 = !DILocation(line: 6486, column: 55, scope: !7431)
!7434 = !DILocation(line: 6486, column: 61, scope: !7431)
!7435 = !DILocation(line: 6486, column: 52, scope: !7431)
!7436 = !DILocation(line: 6486, column: 6, scope: !7431)
!7437 = !DILocation(line: 6487, column: 5, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7426, file: !1, line: 6486, column: 74)
!7439 = !DILocation(line: 6487, column: 11, scope: !7438)
!7440 = !DILocation(line: 6487, column: 16, scope: !7438)
!7441 = !DILocation(line: 6487, column: 29, scope: !7438)
!7442 = !DILocation(line: 6488, column: 3, scope: !7438)
!7443 = !DILocation(line: 6494, column: 7, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6494, column: 6)
!7445 = !DILocation(line: 6494, column: 13, scope: !7444)
!7446 = !DILocation(line: 6494, column: 18, scope: !7444)
!7447 = !DILocation(line: 6494, column: 31, scope: !7444)
!7448 = !DILocation(line: 6494, column: 34, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7444, file: !1, discriminator: 1)
!7450 = !DILocation(line: 6494, column: 40, scope: !7449)
!7451 = !DILocation(line: 6494, column: 45, scope: !7449)
!7452 = !DILocation(line: 6494, column: 59, scope: !7449)
!7453 = !DILocation(line: 6495, column: 7, scope: !7444)
!7454 = !DILocation(line: 6495, column: 13, scope: !7444)
!7455 = !DILocation(line: 6495, column: 18, scope: !7444)
!7456 = !DILocation(line: 6494, column: 6, scope: !7457)
!7457 = !DILexicalBlockFile(scope: !2157, file: !1, discriminator: 2)
!7458 = !DILocation(line: 6496, column: 5, scope: !7444)
!7459 = !DILocation(line: 6496, column: 11, scope: !7444)
!7460 = !DILocation(line: 6496, column: 16, scope: !7444)
!7461 = !DILocation(line: 6496, column: 29, scope: !7444)
!7462 = !DILocation(line: 6502, column: 39, scope: !2157)
!7463 = !DILocation(line: 6502, column: 12, scope: !2157)
!7464 = !DILocation(line: 6502, column: 10, scope: !2157)
!7465 = !DILocation(line: 6503, column: 6, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6503, column: 6)
!7467 = !DILocation(line: 6503, column: 6, scope: !2157)
!7468 = !DILocation(line: 6504, column: 5, scope: !7466)
!7469 = !DILocation(line: 6506, column: 3, scope: !2157)
!7470 = !DILocation(line: 6506, column: 9, scope: !2157)
!7471 = !DILocation(line: 6506, column: 27, scope: !2157)
!7472 = !DILocation(line: 6507, column: 3, scope: !2157)
!7473 = !DILocation(line: 6507, column: 9, scope: !2157)
!7474 = !DILocation(line: 6507, column: 27, scope: !2157)
!7475 = !DILocation(line: 6508, column: 3, scope: !2157)
!7476 = !DILocation(line: 6508, column: 9, scope: !2157)
!7477 = !DILocation(line: 6508, column: 31, scope: !2157)
!7478 = !DILocation(line: 6509, column: 3, scope: !2157)
!7479 = !DILocation(line: 6509, column: 9, scope: !2157)
!7480 = !DILocation(line: 6509, column: 31, scope: !2157)
!7481 = !DILocation(line: 6511, column: 29, scope: !2157)
!7482 = !DILocation(line: 6511, column: 35, scope: !2157)
!7483 = !DILocation(line: 6511, column: 39, scope: !2157)
!7484 = !DILocation(line: 6511, column: 3, scope: !2157)
!7485 = !DILocation(line: 6511, column: 9, scope: !2157)
!7486 = !DILocation(line: 6511, column: 14, scope: !2157)
!7487 = !DILocation(line: 6511, column: 27, scope: !2157)
!7488 = !DILocation(line: 6517, column: 6, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6517, column: 6)
!7490 = !DILocation(line: 6517, column: 12, scope: !7489)
!7491 = !DILocation(line: 6517, column: 21, scope: !7489)
!7492 = !DILocation(line: 6517, column: 27, scope: !7489)
!7493 = !DILocation(line: 6517, column: 6, scope: !2157)
!7494 = !DILocalVariable(name: "done", scope: !7495, file: !1, line: 6518, type: !423)
!7495 = distinct !DILexicalBlock(scope: !7489, file: !1, line: 6517, column: 48)
!7496 = !DILocation(line: 6518, column: 10, scope: !7495)
!7497 = !DILocation(line: 6521, column: 5, scope: !7495)
!7498 = !DILocation(line: 6521, column: 5, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !7500, file: !1, discriminator: 1)
!7500 = distinct !DILexicalBlock(scope: !7495, file: !1, line: 6521, column: 5)
!7501 = !DILocation(line: 6522, column: 14, scope: !7495)
!7502 = !DILocation(line: 6522, column: 20, scope: !7495)
!7503 = !DILocation(line: 6522, column: 29, scope: !7495)
!7504 = !DILocation(line: 6522, column: 40, scope: !7495)
!7505 = !DILocation(line: 6522, column: 12, scope: !7495)
!7506 = !DILocation(line: 6525, column: 9, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7495, file: !1, line: 6525, column: 8)
!7508 = !DILocation(line: 6525, column: 8, scope: !7495)
!7509 = !DILocation(line: 6526, column: 20, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 6525, column: 17)
!7511 = !DILocation(line: 6526, column: 7, scope: !7510)
!7512 = !DILocation(line: 6526, column: 13, scope: !7510)
!7513 = !DILocation(line: 6526, column: 18, scope: !7510)
!7514 = !DILocation(line: 6527, column: 7, scope: !7510)
!7515 = !DILocation(line: 6527, column: 13, scope: !7510)
!7516 = !DILocation(line: 6527, column: 18, scope: !7510)
!7517 = !DILocation(line: 6527, column: 42, scope: !7510)
!7518 = !DILocation(line: 6529, column: 31, scope: !7510)
!7519 = !DILocation(line: 6529, column: 37, scope: !7510)
!7520 = !DILocation(line: 6529, column: 43, scope: !7510)
!7521 = !DILocation(line: 6529, column: 55, scope: !7510)
!7522 = !DILocation(line: 6529, column: 7, scope: !7510)
!7523 = !DILocation(line: 6534, column: 28, scope: !7510)
!7524 = !DILocation(line: 6534, column: 16, scope: !7510)
!7525 = !DILocation(line: 6534, column: 14, scope: !7510)
!7526 = !DILocation(line: 6535, column: 10, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 6535, column: 10)
!7528 = !DILocation(line: 6535, column: 10, scope: !7510)
!7529 = !DILocation(line: 6536, column: 9, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7527, file: !1, line: 6535, column: 18)
!7531 = !DILocation(line: 6536, column: 9, scope: !7532)
!7532 = !DILexicalBlockFile(scope: !7533, file: !1, discriminator: 1)
!7533 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 6536, column: 9)
!7534 = !DILocation(line: 6538, column: 15, scope: !7530)
!7535 = !DILocation(line: 6538, column: 21, scope: !7530)
!7536 = !DILocation(line: 6538, column: 30, scope: !7530)
!7537 = !DILocation(line: 6538, column: 35, scope: !7530)
!7538 = !DILocation(line: 6538, column: 41, scope: !7530)
!7539 = !DILocation(line: 6539, column: 9, scope: !7530)
!7540 = !DILocation(line: 6542, column: 27, scope: !7510)
!7541 = !DILocation(line: 6542, column: 7, scope: !7510)
!7542 = !DILocation(line: 6544, column: 5, scope: !7510)
!7543 = !DILocation(line: 6547, column: 18, scope: !7495)
!7544 = !DILocation(line: 6547, column: 24, scope: !7495)
!7545 = !DILocation(line: 6547, column: 5, scope: !7495)
!7546 = !DILocation(line: 6549, column: 5, scope: !7495)
!7547 = !DILocation(line: 6562, column: 34, scope: !2157)
!7548 = !DILocation(line: 6562, column: 40, scope: !2157)
!7549 = !DILocation(line: 6562, column: 44, scope: !2157)
!7550 = !DILocation(line: 6562, column: 3, scope: !2157)
!7551 = !DILocation(line: 6562, column: 9, scope: !2157)
!7552 = !DILocation(line: 6562, column: 13, scope: !2157)
!7553 = !DILocation(line: 6562, column: 17, scope: !2157)
!7554 = !DILocation(line: 6562, column: 25, scope: !2157)
!7555 = !DILocation(line: 6562, column: 32, scope: !2157)
!7556 = !DILocation(line: 6563, column: 40, scope: !2157)
!7557 = !DILocation(line: 6563, column: 46, scope: !2157)
!7558 = !DILocation(line: 6563, column: 50, scope: !2157)
!7559 = !DILocation(line: 6563, column: 3, scope: !2157)
!7560 = !DILocation(line: 6563, column: 9, scope: !2157)
!7561 = !DILocation(line: 6563, column: 13, scope: !2157)
!7562 = !DILocation(line: 6563, column: 23, scope: !2157)
!7563 = !DILocation(line: 6563, column: 31, scope: !2157)
!7564 = !DILocation(line: 6563, column: 38, scope: !2157)
!7565 = !DILocation(line: 6564, column: 34, scope: !2157)
!7566 = !DILocation(line: 6564, column: 40, scope: !2157)
!7567 = !DILocation(line: 6564, column: 44, scope: !2157)
!7568 = !DILocation(line: 6564, column: 3, scope: !2157)
!7569 = !DILocation(line: 6564, column: 9, scope: !2157)
!7570 = !DILocation(line: 6564, column: 13, scope: !2157)
!7571 = !DILocation(line: 6564, column: 17, scope: !2157)
!7572 = !DILocation(line: 6564, column: 25, scope: !2157)
!7573 = !DILocation(line: 6564, column: 32, scope: !2157)
!7574 = !DILocation(line: 6565, column: 40, scope: !2157)
!7575 = !DILocation(line: 6565, column: 46, scope: !2157)
!7576 = !DILocation(line: 6565, column: 50, scope: !2157)
!7577 = !DILocation(line: 6565, column: 3, scope: !2157)
!7578 = !DILocation(line: 6565, column: 9, scope: !2157)
!7579 = !DILocation(line: 6565, column: 13, scope: !2157)
!7580 = !DILocation(line: 6565, column: 23, scope: !2157)
!7581 = !DILocation(line: 6565, column: 31, scope: !2157)
!7582 = !DILocation(line: 6565, column: 38, scope: !2157)
!7583 = !DILocation(line: 6566, column: 39, scope: !2157)
!7584 = !DILocation(line: 6566, column: 45, scope: !2157)
!7585 = !DILocation(line: 6566, column: 49, scope: !2157)
!7586 = !DILocation(line: 6566, column: 3, scope: !2157)
!7587 = !DILocation(line: 6566, column: 9, scope: !2157)
!7588 = !DILocation(line: 6566, column: 13, scope: !2157)
!7589 = !DILocation(line: 6566, column: 17, scope: !2157)
!7590 = !DILocation(line: 6566, column: 25, scope: !2157)
!7591 = !DILocation(line: 6566, column: 37, scope: !2157)
!7592 = !DILocation(line: 6568, column: 5, scope: !2157)
!7593 = !DILocation(line: 6568, column: 11, scope: !2157)
!7594 = !DILocation(line: 6568, column: 15, scope: !2157)
!7595 = !DILocation(line: 6567, column: 3, scope: !2157)
!7596 = !DILocation(line: 6567, column: 9, scope: !2157)
!7597 = !DILocation(line: 6567, column: 13, scope: !2157)
!7598 = !DILocation(line: 6567, column: 23, scope: !2157)
!7599 = !DILocation(line: 6567, column: 31, scope: !2157)
!7600 = !DILocation(line: 6567, column: 43, scope: !2157)
!7601 = !DILocation(line: 6569, column: 37, scope: !2157)
!7602 = !DILocation(line: 6569, column: 43, scope: !2157)
!7603 = !DILocation(line: 6569, column: 47, scope: !2157)
!7604 = !DILocation(line: 6569, column: 3, scope: !2157)
!7605 = !DILocation(line: 6569, column: 9, scope: !2157)
!7606 = !DILocation(line: 6569, column: 13, scope: !2157)
!7607 = !DILocation(line: 6569, column: 17, scope: !2157)
!7608 = !DILocation(line: 6569, column: 25, scope: !2157)
!7609 = !DILocation(line: 6569, column: 35, scope: !2157)
!7610 = !DILocation(line: 6570, column: 43, scope: !2157)
!7611 = !DILocation(line: 6570, column: 49, scope: !2157)
!7612 = !DILocation(line: 6570, column: 53, scope: !2157)
!7613 = !DILocation(line: 6570, column: 3, scope: !2157)
!7614 = !DILocation(line: 6570, column: 9, scope: !2157)
!7615 = !DILocation(line: 6570, column: 13, scope: !2157)
!7616 = !DILocation(line: 6570, column: 23, scope: !2157)
!7617 = !DILocation(line: 6570, column: 31, scope: !2157)
!7618 = !DILocation(line: 6570, column: 41, scope: !2157)
!7619 = !DILocation(line: 6572, column: 5, scope: !2157)
!7620 = !DILocation(line: 6572, column: 11, scope: !2157)
!7621 = !DILocation(line: 6572, column: 15, scope: !2157)
!7622 = !DILocation(line: 6571, column: 3, scope: !2157)
!7623 = !DILocation(line: 6571, column: 9, scope: !2157)
!7624 = !DILocation(line: 6571, column: 13, scope: !2157)
!7625 = !DILocation(line: 6571, column: 17, scope: !2157)
!7626 = !DILocation(line: 6571, column: 25, scope: !2157)
!7627 = !DILocation(line: 6571, column: 37, scope: !2157)
!7628 = !DILocation(line: 6574, column: 5, scope: !2157)
!7629 = !DILocation(line: 6574, column: 11, scope: !2157)
!7630 = !DILocation(line: 6574, column: 15, scope: !2157)
!7631 = !DILocation(line: 6573, column: 3, scope: !2157)
!7632 = !DILocation(line: 6573, column: 9, scope: !2157)
!7633 = !DILocation(line: 6573, column: 13, scope: !2157)
!7634 = !DILocation(line: 6573, column: 23, scope: !2157)
!7635 = !DILocation(line: 6573, column: 31, scope: !2157)
!7636 = !DILocation(line: 6573, column: 43, scope: !2157)
!7637 = !DILocation(line: 6576, column: 27, scope: !2157)
!7638 = !DILocation(line: 6576, column: 33, scope: !2157)
!7639 = !DILocation(line: 6576, column: 37, scope: !2157)
!7640 = !DILocation(line: 6576, column: 3, scope: !2157)
!7641 = !DILocation(line: 6576, column: 9, scope: !2157)
!7642 = !DILocation(line: 6576, column: 13, scope: !2157)
!7643 = !DILocation(line: 6576, column: 17, scope: !2157)
!7644 = !DILocation(line: 6576, column: 25, scope: !2157)
!7645 = !DILocation(line: 6577, column: 33, scope: !2157)
!7646 = !DILocation(line: 6577, column: 39, scope: !2157)
!7647 = !DILocation(line: 6577, column: 43, scope: !2157)
!7648 = !DILocation(line: 6577, column: 3, scope: !2157)
!7649 = !DILocation(line: 6577, column: 9, scope: !2157)
!7650 = !DILocation(line: 6577, column: 13, scope: !2157)
!7651 = !DILocation(line: 6577, column: 23, scope: !2157)
!7652 = !DILocation(line: 6577, column: 31, scope: !2157)
!7653 = !DILocation(line: 6578, column: 30, scope: !2157)
!7654 = !DILocation(line: 6578, column: 36, scope: !2157)
!7655 = !DILocation(line: 6578, column: 40, scope: !2157)
!7656 = !DILocation(line: 6578, column: 3, scope: !2157)
!7657 = !DILocation(line: 6578, column: 9, scope: !2157)
!7658 = !DILocation(line: 6578, column: 13, scope: !2157)
!7659 = !DILocation(line: 6578, column: 17, scope: !2157)
!7660 = !DILocation(line: 6578, column: 28, scope: !2157)
!7661 = !DILocation(line: 6579, column: 36, scope: !2157)
!7662 = !DILocation(line: 6579, column: 42, scope: !2157)
!7663 = !DILocation(line: 6579, column: 46, scope: !2157)
!7664 = !DILocation(line: 6579, column: 3, scope: !2157)
!7665 = !DILocation(line: 6579, column: 9, scope: !2157)
!7666 = !DILocation(line: 6579, column: 13, scope: !2157)
!7667 = !DILocation(line: 6579, column: 23, scope: !2157)
!7668 = !DILocation(line: 6579, column: 34, scope: !2157)
!7669 = !DILocation(line: 6580, column: 24, scope: !2157)
!7670 = !DILocation(line: 6580, column: 30, scope: !2157)
!7671 = !DILocation(line: 6580, column: 34, scope: !2157)
!7672 = !DILocation(line: 6580, column: 3, scope: !2157)
!7673 = !DILocation(line: 6580, column: 9, scope: !2157)
!7674 = !DILocation(line: 6580, column: 13, scope: !2157)
!7675 = !DILocation(line: 6580, column: 17, scope: !2157)
!7676 = !DILocation(line: 6580, column: 22, scope: !2157)
!7677 = !DILocation(line: 6581, column: 30, scope: !2157)
!7678 = !DILocation(line: 6581, column: 36, scope: !2157)
!7679 = !DILocation(line: 6581, column: 40, scope: !2157)
!7680 = !DILocation(line: 6581, column: 3, scope: !2157)
!7681 = !DILocation(line: 6581, column: 9, scope: !2157)
!7682 = !DILocation(line: 6581, column: 13, scope: !2157)
!7683 = !DILocation(line: 6581, column: 23, scope: !2157)
!7684 = !DILocation(line: 6581, column: 28, scope: !2157)
!7685 = !DILocation(line: 6582, column: 29, scope: !2157)
!7686 = !DILocation(line: 6582, column: 35, scope: !2157)
!7687 = !DILocation(line: 6582, column: 39, scope: !2157)
!7688 = !DILocation(line: 6582, column: 3, scope: !2157)
!7689 = !DILocation(line: 6582, column: 9, scope: !2157)
!7690 = !DILocation(line: 6582, column: 13, scope: !2157)
!7691 = !DILocation(line: 6582, column: 17, scope: !2157)
!7692 = !DILocation(line: 6582, column: 27, scope: !2157)
!7693 = !DILocation(line: 6583, column: 35, scope: !2157)
!7694 = !DILocation(line: 6583, column: 41, scope: !2157)
!7695 = !DILocation(line: 6583, column: 45, scope: !2157)
!7696 = !DILocation(line: 6583, column: 3, scope: !2157)
!7697 = !DILocation(line: 6583, column: 9, scope: !2157)
!7698 = !DILocation(line: 6583, column: 13, scope: !2157)
!7699 = !DILocation(line: 6583, column: 23, scope: !2157)
!7700 = !DILocation(line: 6583, column: 33, scope: !2157)
!7701 = !DILocation(line: 6584, column: 23, scope: !2157)
!7702 = !DILocation(line: 6584, column: 29, scope: !2157)
!7703 = !DILocation(line: 6584, column: 33, scope: !2157)
!7704 = !DILocation(line: 6584, column: 3, scope: !2157)
!7705 = !DILocation(line: 6584, column: 9, scope: !2157)
!7706 = !DILocation(line: 6584, column: 13, scope: !2157)
!7707 = !DILocation(line: 6584, column: 17, scope: !2157)
!7708 = !DILocation(line: 6584, column: 21, scope: !2157)
!7709 = !DILocation(line: 6585, column: 29, scope: !2157)
!7710 = !DILocation(line: 6585, column: 35, scope: !2157)
!7711 = !DILocation(line: 6585, column: 39, scope: !2157)
!7712 = !DILocation(line: 6585, column: 3, scope: !2157)
!7713 = !DILocation(line: 6585, column: 9, scope: !2157)
!7714 = !DILocation(line: 6585, column: 13, scope: !2157)
!7715 = !DILocation(line: 6585, column: 23, scope: !2157)
!7716 = !DILocation(line: 6585, column: 27, scope: !2157)
!7717 = !DILocation(line: 6586, column: 28, scope: !2157)
!7718 = !DILocation(line: 6586, column: 34, scope: !2157)
!7719 = !DILocation(line: 6586, column: 38, scope: !2157)
!7720 = !DILocation(line: 6586, column: 3, scope: !2157)
!7721 = !DILocation(line: 6586, column: 9, scope: !2157)
!7722 = !DILocation(line: 6586, column: 13, scope: !2157)
!7723 = !DILocation(line: 6586, column: 17, scope: !2157)
!7724 = !DILocation(line: 6586, column: 26, scope: !2157)
!7725 = !DILocation(line: 6587, column: 34, scope: !2157)
!7726 = !DILocation(line: 6587, column: 40, scope: !2157)
!7727 = !DILocation(line: 6587, column: 44, scope: !2157)
!7728 = !DILocation(line: 6587, column: 3, scope: !2157)
!7729 = !DILocation(line: 6587, column: 9, scope: !2157)
!7730 = !DILocation(line: 6587, column: 13, scope: !2157)
!7731 = !DILocation(line: 6587, column: 23, scope: !2157)
!7732 = !DILocation(line: 6587, column: 32, scope: !2157)
!7733 = !DILocation(line: 6588, column: 30, scope: !2157)
!7734 = !DILocation(line: 6588, column: 36, scope: !2157)
!7735 = !DILocation(line: 6588, column: 40, scope: !2157)
!7736 = !DILocation(line: 6588, column: 3, scope: !2157)
!7737 = !DILocation(line: 6588, column: 9, scope: !2157)
!7738 = !DILocation(line: 6588, column: 13, scope: !2157)
!7739 = !DILocation(line: 6588, column: 17, scope: !2157)
!7740 = !DILocation(line: 6588, column: 28, scope: !2157)
!7741 = !DILocation(line: 6589, column: 36, scope: !2157)
!7742 = !DILocation(line: 6589, column: 42, scope: !2157)
!7743 = !DILocation(line: 6589, column: 46, scope: !2157)
!7744 = !DILocation(line: 6589, column: 3, scope: !2157)
!7745 = !DILocation(line: 6589, column: 9, scope: !2157)
!7746 = !DILocation(line: 6589, column: 13, scope: !2157)
!7747 = !DILocation(line: 6589, column: 23, scope: !2157)
!7748 = !DILocation(line: 6589, column: 34, scope: !2157)
!7749 = !DILocation(line: 6590, column: 38, scope: !2157)
!7750 = !DILocation(line: 6590, column: 44, scope: !2157)
!7751 = !DILocation(line: 6590, column: 48, scope: !2157)
!7752 = !DILocation(line: 6590, column: 3, scope: !2157)
!7753 = !DILocation(line: 6590, column: 9, scope: !2157)
!7754 = !DILocation(line: 6590, column: 13, scope: !2157)
!7755 = !DILocation(line: 6590, column: 17, scope: !2157)
!7756 = !DILocation(line: 6590, column: 25, scope: !2157)
!7757 = !DILocation(line: 6590, column: 36, scope: !2157)
!7758 = !DILocation(line: 6591, column: 44, scope: !2157)
!7759 = !DILocation(line: 6591, column: 50, scope: !2157)
!7760 = !DILocation(line: 6591, column: 54, scope: !2157)
!7761 = !DILocation(line: 6591, column: 3, scope: !2157)
!7762 = !DILocation(line: 6591, column: 9, scope: !2157)
!7763 = !DILocation(line: 6591, column: 13, scope: !2157)
!7764 = !DILocation(line: 6591, column: 23, scope: !2157)
!7765 = !DILocation(line: 6591, column: 31, scope: !2157)
!7766 = !DILocation(line: 6591, column: 42, scope: !2157)
!7767 = !DILocation(line: 6599, column: 38, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6599, column: 6)
!7769 = !DILocation(line: 6599, column: 44, scope: !7768)
!7770 = !DILocation(line: 6599, column: 48, scope: !7768)
!7771 = !DILocation(line: 6599, column: 52, scope: !7768)
!7772 = !DILocation(line: 6600, column: 7, scope: !7768)
!7773 = !DILocation(line: 6600, column: 13, scope: !7768)
!7774 = !DILocation(line: 6599, column: 7, scope: !7768)
!7775 = !DILocation(line: 6599, column: 6, scope: !2157)
!7776 = !DILocation(line: 6601, column: 12, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7768, file: !1, line: 6600, column: 26)
!7778 = !DILocation(line: 6602, column: 5, scope: !7777)
!7779 = !DILocation(line: 6605, column: 38, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6605, column: 6)
!7781 = !DILocation(line: 6605, column: 44, scope: !7780)
!7782 = !DILocation(line: 6605, column: 48, scope: !7780)
!7783 = !DILocation(line: 6605, column: 58, scope: !7780)
!7784 = !DILocation(line: 6606, column: 38, scope: !7780)
!7785 = !DILocation(line: 6606, column: 44, scope: !7780)
!7786 = !DILocation(line: 6605, column: 7, scope: !7780)
!7787 = !DILocation(line: 6605, column: 6, scope: !2157)
!7788 = !DILocation(line: 6607, column: 12, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7780, file: !1, line: 6606, column: 63)
!7790 = !DILocation(line: 6608, column: 5, scope: !7789)
!7791 = !DILocation(line: 6611, column: 26, scope: !2157)
!7792 = !DILocation(line: 6611, column: 3, scope: !2157)
!7793 = !DILocation(line: 6623, column: 6, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6623, column: 6)
!7795 = !DILocation(line: 6623, column: 12, scope: !7794)
!7796 = !DILocation(line: 6623, column: 16, scope: !7794)
!7797 = !DILocation(line: 6623, column: 28, scope: !7794)
!7798 = !DILocation(line: 6623, column: 32, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !7794, file: !1, discriminator: 1)
!7800 = !DILocation(line: 6623, column: 38, scope: !7799)
!7801 = !DILocation(line: 6623, column: 44, scope: !7799)
!7802 = !DILocation(line: 6623, column: 6, scope: !7799)
!7803 = !DILocation(line: 6624, column: 11, scope: !7794)
!7804 = !DILocation(line: 6624, column: 5, scope: !7794)
!7805 = !DILocation(line: 6626, column: 30, scope: !7794)
!7806 = !DILocation(line: 6626, column: 36, scope: !7794)
!7807 = !DILocation(line: 6626, column: 13, scope: !7794)
!7808 = !DILocation(line: 6626, column: 11, scope: !7794)
!7809 = !DILocation(line: 6630, column: 6, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6630, column: 6)
!7811 = !DILocation(line: 6630, column: 12, scope: !7810)
!7812 = !DILocation(line: 6630, column: 16, scope: !7813)
!7813 = !DILexicalBlockFile(scope: !7810, file: !1, discriminator: 1)
!7814 = !DILocation(line: 6630, column: 28, scope: !7813)
!7815 = !DILocation(line: 6630, column: 52, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !7810, file: !1, discriminator: 2)
!7817 = !DILocation(line: 6630, column: 58, scope: !7816)
!7818 = !DILocation(line: 6630, column: 31, scope: !7816)
!7819 = !DILocation(line: 6630, column: 6, scope: !7816)
!7820 = !DILocalVariable(name: "pipelen", scope: !7821, file: !1, line: 6631, type: !347)
!7821 = distinct !DILexicalBlock(scope: !7810, file: !1, line: 6630, column: 70)
!7822 = !DILocation(line: 6631, column: 12, scope: !7821)
!7823 = !DILocation(line: 6631, column: 22, scope: !7821)
!7824 = !DILocation(line: 6631, column: 33, scope: !7821)
!7825 = !DILocation(line: 6631, column: 43, scope: !7821)
!7826 = !DILocation(line: 6631, column: 50, scope: !7821)
!7827 = !DILocation(line: 6631, column: 61, scope: !7821)
!7828 = !DILocation(line: 6631, column: 71, scope: !7821)
!7829 = !DILocation(line: 6631, column: 48, scope: !7821)
!7830 = !DILocation(line: 6632, column: 8, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7821, file: !1, line: 6632, column: 8)
!7832 = !DILocation(line: 6632, column: 16, scope: !7831)
!7833 = !DILocation(line: 6632, column: 8, scope: !7821)
!7834 = !DILocation(line: 6633, column: 13, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7831, file: !1, line: 6632, column: 21)
!7836 = !DILocation(line: 6634, column: 13, scope: !7835)
!7837 = !DILocation(line: 6634, column: 24, scope: !7835)
!7838 = !DILocation(line: 6634, column: 39, scope: !7835)
!7839 = !DILocation(line: 6633, column: 7, scope: !7835)
!7840 = !DILocation(line: 6636, column: 10, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7835, file: !1, line: 6636, column: 10)
!7842 = !DILocation(line: 6636, column: 21, scope: !7841)
!7843 = !DILocation(line: 6636, column: 29, scope: !7841)
!7844 = !DILocation(line: 6636, column: 47, scope: !7841)
!7845 = !DILocation(line: 6636, column: 45, scope: !7841)
!7846 = !DILocation(line: 6636, column: 68, scope: !7841)
!7847 = !DILocation(line: 6637, column: 10, scope: !7841)
!7848 = !DILocation(line: 6637, column: 16, scope: !7841)
!7849 = !DILocation(line: 6637, column: 22, scope: !7841)
!7850 = !DILocation(line: 6637, column: 34, scope: !7841)
!7851 = !DILocation(line: 6637, column: 52, scope: !7841)
!7852 = !DILocation(line: 6637, column: 50, scope: !7841)
!7853 = !DILocation(line: 6636, column: 10, scope: !7854)
!7854 = !DILexicalBlockFile(scope: !7835, file: !1, discriminator: 1)
!7855 = !DILocation(line: 6639, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7841, file: !1, line: 6637, column: 75)
!7857 = !DILocation(line: 6641, column: 15, scope: !7856)
!7858 = !DILocation(line: 6641, column: 9, scope: !7856)
!7859 = !DILocation(line: 6642, column: 7, scope: !7856)
!7860 = !DILocation(line: 6643, column: 5, scope: !7835)
!7861 = !DILocation(line: 6644, column: 3, scope: !7821)
!7862 = !DILocation(line: 6646, column: 6, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6646, column: 6)
!7864 = !DILocation(line: 6646, column: 6, scope: !2157)
!7865 = !DILocation(line: 6653, column: 5, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7863, file: !1, line: 6646, column: 13)
!7867 = !DILocation(line: 6653, column: 16, scope: !7866)
!7868 = !DILocation(line: 6653, column: 22, scope: !7866)
!7869 = !DILocation(line: 6655, column: 16, scope: !7866)
!7870 = !DILocation(line: 6655, column: 22, scope: !7866)
!7871 = !DILocation(line: 6655, column: 5, scope: !7866)
!7872 = !DILocation(line: 6656, column: 5, scope: !7866)
!7873 = !DILocation(line: 6657, column: 12, scope: !7866)
!7874 = !DILocation(line: 6657, column: 10, scope: !7866)
!7875 = !DILocation(line: 6658, column: 19, scope: !7866)
!7876 = !DILocation(line: 6658, column: 6, scope: !7866)
!7877 = !DILocation(line: 6658, column: 17, scope: !7866)
!7878 = !DILocation(line: 6660, column: 11, scope: !7866)
!7879 = !DILocation(line: 6661, column: 11, scope: !7866)
!7880 = !DILocation(line: 6661, column: 17, scope: !7866)
!7881 = !DILocation(line: 6662, column: 11, scope: !7866)
!7882 = !DILocation(line: 6662, column: 17, scope: !7866)
!7883 = !DILocation(line: 6662, column: 22, scope: !7866)
!7884 = !DILocation(line: 6663, column: 11, scope: !7866)
!7885 = !DILocation(line: 6663, column: 17, scope: !7866)
!7886 = !DILocation(line: 6663, column: 29, scope: !7866)
!7887 = !DILocation(line: 6663, column: 34, scope: !7866)
!7888 = !DILocation(line: 6663, column: 41, scope: !7889)
!7889 = !DILexicalBlockFile(scope: !7866, file: !1, discriminator: 1)
!7890 = !DILocation(line: 6663, column: 47, scope: !7889)
!7891 = !DILocation(line: 6663, column: 59, scope: !7889)
!7892 = !DILocation(line: 6663, column: 64, scope: !7889)
!7893 = !DILocation(line: 6663, column: 11, scope: !7889)
!7894 = !DILocation(line: 6664, column: 11, scope: !7866)
!7895 = !DILocation(line: 6664, column: 17, scope: !7866)
!7896 = !DILocation(line: 6664, column: 28, scope: !7866)
!7897 = !DILocation(line: 6664, column: 33, scope: !7866)
!7898 = !DILocation(line: 6664, column: 40, scope: !7889)
!7899 = !DILocation(line: 6664, column: 46, scope: !7889)
!7900 = !DILocation(line: 6664, column: 57, scope: !7889)
!7901 = !DILocation(line: 6664, column: 62, scope: !7889)
!7902 = !DILocation(line: 6664, column: 11, scope: !7889)
!7903 = !DILocation(line: 6665, column: 40, scope: !7866)
!7904 = !DILocation(line: 6665, column: 46, scope: !7866)
!7905 = !DILocation(line: 6665, column: 51, scope: !7866)
!7906 = !DILocation(line: 6664, column: 11, scope: !7907)
!7907 = !DILexicalBlockFile(scope: !7866, file: !1, discriminator: 2)
!7908 = !DILocation(line: 6664, column: 11, scope: !7909)
!7909 = !DILexicalBlockFile(scope: !7866, file: !1, discriminator: 3)
!7910 = !DILocation(line: 6663, column: 11, scope: !7907)
!7911 = !DILocation(line: 6663, column: 11, scope: !7909)
!7912 = !DILocation(line: 6660, column: 5, scope: !7889)
!7913 = !DILocation(line: 6666, column: 3, scope: !7866)
!7914 = !DILocalVariable(name: "bundle", scope: !7915, file: !1, line: 6671, type: !1705)
!7915 = distinct !DILexicalBlock(scope: !7863, file: !1, line: 6667, column: 8)
!7916 = !DILocation(line: 6671, column: 27, scope: !7915)
!7917 = !DILocation(line: 6673, column: 8, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 6673, column: 8)
!7919 = !DILocation(line: 6673, column: 14, scope: !7918)
!7920 = !DILocation(line: 6673, column: 23, scope: !7918)
!7921 = !DILocation(line: 6673, column: 29, scope: !7918)
!7922 = !DILocation(line: 6673, column: 8, scope: !7915)
!7923 = !DILocation(line: 6676, column: 10, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 6676, column: 10)
!7925 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 6673, column: 49)
!7926 = !DILocation(line: 6676, column: 16, scope: !7924)
!7927 = !DILocation(line: 6676, column: 20, scope: !7924)
!7928 = !DILocation(line: 6676, column: 10, scope: !7925)
!7929 = !DILocation(line: 6677, column: 9, scope: !7924)
!7930 = !DILocation(line: 6677, column: 15, scope: !7924)
!7931 = !DILocation(line: 6677, column: 20, scope: !7924)
!7932 = !DILocation(line: 6677, column: 36, scope: !7924)
!7933 = !DILocation(line: 6678, column: 10, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !1, line: 6678, column: 10)
!7935 = !DILocation(line: 6678, column: 16, scope: !7934)
!7936 = !DILocation(line: 6678, column: 20, scope: !7934)
!7937 = !DILocation(line: 6678, column: 10, scope: !7925)
!7938 = !DILocation(line: 6679, column: 9, scope: !7934)
!7939 = !DILocation(line: 6679, column: 15, scope: !7934)
!7940 = !DILocation(line: 6679, column: 20, scope: !7934)
!7941 = !DILocation(line: 6679, column: 35, scope: !7934)
!7942 = !DILocation(line: 6680, column: 5, scope: !7925)
!7943 = !DILocation(line: 6682, column: 8, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 6682, column: 8)
!7945 = !DILocation(line: 6682, column: 8, scope: !7915)
!7946 = !DILocation(line: 6685, column: 29, scope: !7944)
!7947 = !DILocation(line: 6685, column: 7, scope: !7944)
!7948 = !DILocation(line: 6687, column: 43, scope: !7944)
!7949 = !DILocation(line: 6687, column: 49, scope: !7944)
!7950 = !DILocation(line: 6687, column: 55, scope: !7944)
!7951 = !DILocation(line: 6687, column: 61, scope: !7944)
!7952 = !DILocation(line: 6687, column: 16, scope: !7944)
!7953 = !DILocation(line: 6687, column: 14, scope: !7944)
!7954 = !DILocation(line: 6689, column: 8, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 6689, column: 8)
!7956 = !DILocation(line: 6689, column: 29, scope: !7955)
!7957 = !DILocation(line: 6689, column: 33, scope: !7955)
!7958 = !DILocation(line: 6689, column: 36, scope: !7959)
!7959 = !DILexicalBlockFile(scope: !7955, file: !1, discriminator: 1)
!7960 = !DILocation(line: 6689, column: 43, scope: !7959)
!7961 = !DILocation(line: 6690, column: 9, scope: !7955)
!7962 = !DILocation(line: 6690, column: 17, scope: !7955)
!7963 = !DILocation(line: 6690, column: 36, scope: !7955)
!7964 = !DILocation(line: 6690, column: 33, scope: !7955)
!7965 = !DILocation(line: 6689, column: 8, scope: !7966)
!7966 = !DILexicalBlockFile(scope: !7915, file: !1, discriminator: 2)
!7967 = !DILocalVariable(name: "conn_candidate", scope: !7968, file: !1, line: 6691, type: !262)
!7968 = distinct !DILexicalBlock(scope: !7955, file: !1, line: 6690, column: 59)
!7969 = !DILocation(line: 6691, column: 27, scope: !7968)
!7970 = !DILocation(line: 6694, column: 62, scope: !7968)
!7971 = !DILocation(line: 6694, column: 68, scope: !7968)
!7972 = !DILocation(line: 6694, column: 24, scope: !7968)
!7973 = !DILocation(line: 6694, column: 22, scope: !7968)
!7974 = !DILocation(line: 6696, column: 10, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7968, file: !1, line: 6696, column: 10)
!7976 = !DILocation(line: 6696, column: 10, scope: !7968)
!7977 = !DILocation(line: 6698, column: 32, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7975, file: !1, line: 6696, column: 26)
!7979 = !DILocation(line: 6698, column: 9, scope: !7978)
!7980 = !DILocation(line: 6698, column: 25, scope: !7978)
!7981 = !DILocation(line: 6698, column: 30, scope: !7978)
!7982 = !DILocation(line: 6699, column: 31, scope: !7978)
!7983 = !DILocation(line: 6699, column: 15, scope: !7978)
!7984 = !DILocation(line: 6700, column: 7, scope: !7978)
!7985 = !DILocation(line: 6702, column: 15, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7975, file: !1, line: 6701, column: 12)
!7987 = !DILocation(line: 6703, column: 15, scope: !7986)
!7988 = !DILocation(line: 6702, column: 9, scope: !7986)
!7989 = !DILocation(line: 6704, column: 31, scope: !7986)
!7990 = !DILocation(line: 6706, column: 5, scope: !7968)
!7991 = !DILocation(line: 6708, column: 8, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 6708, column: 8)
!7993 = !DILocation(line: 6708, column: 30, scope: !7992)
!7994 = !DILocation(line: 6709, column: 9, scope: !7992)
!7995 = !DILocation(line: 6709, column: 31, scope: !7992)
!7996 = !DILocation(line: 6709, column: 36, scope: !7992)
!7997 = !DILocation(line: 6710, column: 9, scope: !7992)
!7998 = !DILocation(line: 6710, column: 15, scope: !7992)
!7999 = !DILocation(line: 6710, column: 21, scope: !7992)
!8000 = !DILocation(line: 6710, column: 33, scope: !7992)
!8001 = !DILocation(line: 6710, column: 52, scope: !7992)
!8002 = !DILocation(line: 6710, column: 49, scope: !7992)
!8003 = !DILocation(line: 6708, column: 8, scope: !8004)
!8004 = !DILexicalBlockFile(scope: !7915, file: !1, discriminator: 1)
!8005 = !DILocalVariable(name: "conn_candidate", scope: !8006, file: !1, line: 6711, type: !262)
!8006 = distinct !DILexicalBlock(scope: !7992, file: !1, line: 6710, column: 76)
!8007 = !DILocation(line: 6711, column: 27, scope: !8006)
!8008 = !DILocation(line: 6714, column: 52, scope: !8006)
!8009 = !DILocation(line: 6714, column: 24, scope: !8006)
!8010 = !DILocation(line: 6714, column: 22, scope: !8006)
!8011 = !DILocation(line: 6716, column: 10, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 6716, column: 10)
!8013 = !DILocation(line: 6716, column: 10, scope: !8006)
!8014 = !DILocation(line: 6718, column: 32, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 6716, column: 26)
!8016 = !DILocation(line: 6718, column: 9, scope: !8015)
!8017 = !DILocation(line: 6718, column: 25, scope: !8015)
!8018 = !DILocation(line: 6718, column: 30, scope: !8015)
!8019 = !DILocation(line: 6719, column: 31, scope: !8015)
!8020 = !DILocation(line: 6719, column: 15, scope: !8015)
!8021 = !DILocation(line: 6720, column: 7, scope: !8015)
!8022 = !DILocation(line: 6722, column: 15, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8012, file: !1, line: 6721, column: 12)
!8024 = !DILocation(line: 6722, column: 9, scope: !8023)
!8025 = !DILocation(line: 6723, column: 31, scope: !8023)
!8026 = !DILocation(line: 6725, column: 5, scope: !8006)
!8027 = !DILocation(line: 6727, column: 9, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7915, file: !1, line: 6727, column: 8)
!8029 = !DILocation(line: 6727, column: 8, scope: !7915)
!8030 = !DILocation(line: 6728, column: 13, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 6727, column: 32)
!8032 = !DILocation(line: 6728, column: 7, scope: !8031)
!8033 = !DILocation(line: 6730, column: 17, scope: !8031)
!8034 = !DILocation(line: 6730, column: 7, scope: !8031)
!8035 = !DILocation(line: 6731, column: 8, scope: !8031)
!8036 = !DILocation(line: 6731, column: 19, scope: !8031)
!8037 = !DILocation(line: 6733, column: 14, scope: !8031)
!8038 = !DILocation(line: 6734, column: 7, scope: !8031)
!8039 = !DILocation(line: 6741, column: 31, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 6736, column: 10)
!8041 = !DILocation(line: 6741, column: 37, scope: !8040)
!8042 = !DILocation(line: 6741, column: 43, scope: !8040)
!8043 = !DILocation(line: 6741, column: 55, scope: !8040)
!8044 = !DILocation(line: 6741, column: 7, scope: !8040)
!8045 = !DILocation(line: 6765, column: 3, scope: !2157)
!8046 = !DILocation(line: 6765, column: 9, scope: !2157)
!8047 = !DILocation(line: 6765, column: 15, scope: !2157)
!8048 = !DILocation(line: 6768, column: 16, scope: !2157)
!8049 = !DILocation(line: 6768, column: 22, scope: !2157)
!8050 = !DILocation(line: 6768, column: 3, scope: !2157)
!8051 = !DILocation(line: 6773, column: 24, scope: !2157)
!8052 = !DILocation(line: 6773, column: 12, scope: !2157)
!8053 = !DILocation(line: 6773, column: 10, scope: !2157)
!8054 = !DILocation(line: 6774, column: 6, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !2157, file: !1, line: 6774, column: 6)
!8056 = !DILocation(line: 6774, column: 6, scope: !2157)
!8057 = !DILocation(line: 6775, column: 5, scope: !8055)
!8058 = !DILocation(line: 6783, column: 21, scope: !2157)
!8059 = !DILocation(line: 6783, column: 27, scope: !2157)
!8060 = !DILocation(line: 6783, column: 31, scope: !2157)
!8061 = !DILocation(line: 6783, column: 3, scope: !2157)
!8062 = !DILocation(line: 6783, column: 9, scope: !2157)
!8063 = !DILocation(line: 6783, column: 19, scope: !2157)
!8064 = !DILocation(line: 6784, column: 23, scope: !2157)
!8065 = !DILocation(line: 6784, column: 29, scope: !2157)
!8066 = !DILocation(line: 6784, column: 33, scope: !2157)
!8067 = !DILocation(line: 6784, column: 3, scope: !2157)
!8068 = !DILocation(line: 6784, column: 9, scope: !2157)
!8069 = !DILocation(line: 6784, column: 21, scope: !2157)
!8070 = !DILocation(line: 6789, column: 27, scope: !2157)
!8071 = !DILocation(line: 6789, column: 33, scope: !2157)
!8072 = !DILocation(line: 6789, column: 39, scope: !2157)
!8073 = !DILocation(line: 6789, column: 12, scope: !2157)
!8074 = !DILocation(line: 6789, column: 10, scope: !2157)
!8075 = !DILocation(line: 6789, column: 3, scope: !2157)
!8076 = !DILocation(line: 6793, column: 3, scope: !2157)
!8077 = !DILocation(line: 6794, column: 3, scope: !2157)
!8078 = !DILocation(line: 6795, column: 3, scope: !2157)
!8079 = !DILocation(line: 6796, column: 10, scope: !2157)
!8080 = !DILocation(line: 6796, column: 3, scope: !2157)
!8081 = !DILocalVariable(name: "data", arg: 1, scope: !2136, file: !1, line: 6935, type: !256)
!8082 = !DILocation(line: 6935, column: 41, scope: !2136)
!8083 = !DILocalVariable(name: "conn", arg: 2, scope: !2136, file: !1, line: 6935, type: !262)
!8084 = !DILocation(line: 6935, column: 67, scope: !2136)
!8085 = !DILocalVariable(name: "k", scope: !2136, file: !1, line: 6937, type: !8086)
!8086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!8087 = !DILocation(line: 6937, column: 25, scope: !2136)
!8088 = !DILocation(line: 6937, column: 30, scope: !2136)
!8089 = !DILocation(line: 6937, column: 36, scope: !2136)
!8090 = !DILocation(line: 6939, column: 6, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 6939, column: 6)
!8092 = !DILocation(line: 6939, column: 6, scope: !2136)
!8093 = !DILocation(line: 6940, column: 5, scope: !8091)
!8094 = !DILocation(line: 6940, column: 11, scope: !8091)
!8095 = !DILocation(line: 6940, column: 16, scope: !8091)
!8096 = !DILocation(line: 6940, column: 24, scope: !8091)
!8097 = !DILocation(line: 6943, column: 3, scope: !2136)
!8098 = !DILocation(line: 6943, column: 9, scope: !2136)
!8099 = !DILocation(line: 6943, column: 15, scope: !2136)
!8100 = !DILocation(line: 6943, column: 20, scope: !2136)
!8101 = !DILocation(line: 6944, column: 3, scope: !2136)
!8102 = !DILocation(line: 6944, column: 9, scope: !2136)
!8103 = !DILocation(line: 6944, column: 15, scope: !2136)
!8104 = !DILocation(line: 6944, column: 31, scope: !2136)
!8105 = !DILocation(line: 6946, column: 6, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 6946, column: 6)
!8107 = !DILocation(line: 6946, column: 12, scope: !8106)
!8108 = !DILocation(line: 6946, column: 16, scope: !8106)
!8109 = !DILocation(line: 6946, column: 6, scope: !2136)
!8110 = !DILocation(line: 6948, column: 5, scope: !8106)
!8111 = !DILocation(line: 6948, column: 11, scope: !8106)
!8112 = !DILocation(line: 6948, column: 15, scope: !8106)
!8113 = !DILocation(line: 6948, column: 23, scope: !8106)
!8114 = !DILocation(line: 6949, column: 27, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8106, file: !1, line: 6949, column: 11)
!8116 = !DILocation(line: 6949, column: 33, scope: !8115)
!8117 = !DILocation(line: 6949, column: 37, scope: !8115)
!8118 = !DILocation(line: 6949, column: 24, scope: !8115)
!8119 = !DILocation(line: 6949, column: 11, scope: !8106)
!8120 = !DILocation(line: 6955, column: 5, scope: !8115)
!8121 = !DILocation(line: 6955, column: 11, scope: !8115)
!8122 = !DILocation(line: 6955, column: 15, scope: !8115)
!8123 = !DILocation(line: 6955, column: 23, scope: !8115)
!8124 = !DILocation(line: 6957, column: 3, scope: !2136)
!8125 = !DILocation(line: 6957, column: 6, scope: !2136)
!8126 = !DILocation(line: 6957, column: 14, scope: !2136)
!8127 = !DILocation(line: 6957, column: 14, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !2136, file: !1, discriminator: 1)
!8129 = !DILocation(line: 6958, column: 3, scope: !2136)
!8130 = !DILocation(line: 6958, column: 6, scope: !2136)
!8131 = !DILocation(line: 6958, column: 12, scope: !2136)
!8132 = !DILocation(line: 6958, column: 15, scope: !2136)
!8133 = !DILocation(line: 6959, column: 3, scope: !2136)
!8134 = !DILocation(line: 6959, column: 6, scope: !2136)
!8135 = !DILocation(line: 6959, column: 13, scope: !2136)
!8136 = !DILocation(line: 6961, column: 3, scope: !2136)
!8137 = !DILocation(line: 6961, column: 6, scope: !2136)
!8138 = !DILocation(line: 6961, column: 16, scope: !2136)
!8139 = !DILocation(line: 6963, column: 12, scope: !2136)
!8140 = !DILocation(line: 6963, column: 18, scope: !2136)
!8141 = !DILocation(line: 6963, column: 24, scope: !2136)
!8142 = !DILocation(line: 6963, column: 3, scope: !2136)
!8143 = !DILocation(line: 6963, column: 6, scope: !2136)
!8144 = !DILocation(line: 6963, column: 10, scope: !2136)
!8145 = !DILocation(line: 6964, column: 18, scope: !2136)
!8146 = !DILocation(line: 6964, column: 24, scope: !2136)
!8147 = !DILocation(line: 6964, column: 30, scope: !2136)
!8148 = !DILocation(line: 6964, column: 3, scope: !2136)
!8149 = !DILocation(line: 6964, column: 6, scope: !2136)
!8150 = !DILocation(line: 6964, column: 16, scope: !2136)
!8151 = !DILocation(line: 6965, column: 14, scope: !2136)
!8152 = !DILocation(line: 6965, column: 20, scope: !2136)
!8153 = !DILocation(line: 6965, column: 26, scope: !2136)
!8154 = !DILocation(line: 6965, column: 3, scope: !2136)
!8155 = !DILocation(line: 6965, column: 6, scope: !2136)
!8156 = !DILocation(line: 6965, column: 12, scope: !2136)
!8157 = !DILocation(line: 6966, column: 3, scope: !2136)
!8158 = !DILocation(line: 6966, column: 6, scope: !2136)
!8159 = !DILocation(line: 6966, column: 16, scope: !2136)
!8160 = !DILocation(line: 6968, column: 18, scope: !2136)
!8161 = !DILocation(line: 6968, column: 3, scope: !2136)
!8162 = !DILocation(line: 6970, column: 29, scope: !2136)
!8163 = !DILocation(line: 6970, column: 3, scope: !2136)
!8164 = !DILocation(line: 6971, column: 31, scope: !2136)
!8165 = !DILocation(line: 6971, column: 3, scope: !2136)
!8166 = !DILocation(line: 6973, column: 3, scope: !2136)
!8167 = !DILocalVariable(name: "login", arg: 1, scope: !2145, file: !1, line: 5497, type: !527)
!8168 = !DILocation(line: 5497, column: 49, scope: !2145)
!8169 = !DILocalVariable(name: "len", arg: 2, scope: !2145, file: !1, line: 5497, type: !2148)
!8170 = !DILocation(line: 5497, column: 69, scope: !2145)
!8171 = !DILocalVariable(name: "userp", arg: 3, scope: !2145, file: !1, line: 5498, type: !1562)
!8172 = !DILocation(line: 5498, column: 44, scope: !2145)
!8173 = !DILocalVariable(name: "passwdp", arg: 4, scope: !2145, file: !1, line: 5498, type: !1562)
!8174 = !DILocation(line: 5498, column: 58, scope: !2145)
!8175 = !DILocalVariable(name: "optionsp", arg: 5, scope: !2145, file: !1, line: 5499, type: !1562)
!8176 = !DILocation(line: 5499, column: 44, scope: !2145)
!8177 = !DILocalVariable(name: "result", scope: !2145, file: !1, line: 5501, type: !289)
!8178 = !DILocation(line: 5501, column: 12, scope: !2145)
!8179 = !DILocalVariable(name: "ubuf", scope: !2145, file: !1, line: 5502, type: !500)
!8180 = !DILocation(line: 5502, column: 9, scope: !2145)
!8181 = !DILocalVariable(name: "pbuf", scope: !2145, file: !1, line: 5503, type: !500)
!8182 = !DILocation(line: 5503, column: 9, scope: !2145)
!8183 = !DILocalVariable(name: "obuf", scope: !2145, file: !1, line: 5504, type: !500)
!8184 = !DILocation(line: 5504, column: 9, scope: !2145)
!8185 = !DILocalVariable(name: "psep", scope: !2145, file: !1, line: 5505, type: !527)
!8186 = !DILocation(line: 5505, column: 15, scope: !2145)
!8187 = !DILocalVariable(name: "osep", scope: !2145, file: !1, line: 5506, type: !527)
!8188 = !DILocation(line: 5506, column: 15, scope: !2145)
!8189 = !DILocalVariable(name: "ulen", scope: !2145, file: !1, line: 5507, type: !347)
!8190 = !DILocation(line: 5507, column: 10, scope: !2145)
!8191 = !DILocalVariable(name: "plen", scope: !2145, file: !1, line: 5508, type: !347)
!8192 = !DILocation(line: 5508, column: 10, scope: !2145)
!8193 = !DILocalVariable(name: "olen", scope: !2145, file: !1, line: 5509, type: !347)
!8194 = !DILocation(line: 5509, column: 10, scope: !2145)
!8195 = !DILocation(line: 5512, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5512, column: 6)
!8197 = !DILocation(line: 5512, column: 6, scope: !2145)
!8198 = !DILocation(line: 5513, column: 19, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8196, file: !1, line: 5512, column: 15)
!8200 = !DILocation(line: 5513, column: 12, scope: !8199)
!8201 = !DILocation(line: 5513, column: 10, scope: !8199)
!8202 = !DILocation(line: 5516, column: 8, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8199, file: !1, line: 5516, column: 8)
!8204 = !DILocation(line: 5516, column: 16, scope: !8203)
!8205 = !DILocation(line: 5516, column: 24, scope: !8203)
!8206 = !DILocation(line: 5516, column: 22, scope: !8203)
!8207 = !DILocation(line: 5516, column: 13, scope: !8203)
!8208 = !DILocation(line: 5516, column: 8, scope: !8199)
!8209 = !DILocation(line: 5517, column: 12, scope: !8203)
!8210 = !DILocation(line: 5517, column: 7, scope: !8203)
!8211 = !DILocation(line: 5518, column: 3, scope: !8199)
!8212 = !DILocation(line: 5521, column: 6, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5521, column: 6)
!8214 = !DILocation(line: 5521, column: 6, scope: !2145)
!8215 = !DILocation(line: 5522, column: 19, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8213, file: !1, line: 5521, column: 16)
!8217 = !DILocation(line: 5522, column: 12, scope: !8216)
!8218 = !DILocation(line: 5522, column: 10, scope: !8216)
!8219 = !DILocation(line: 5525, column: 8, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8216, file: !1, line: 5525, column: 8)
!8221 = !DILocation(line: 5525, column: 16, scope: !8220)
!8222 = !DILocation(line: 5525, column: 24, scope: !8220)
!8223 = !DILocation(line: 5525, column: 22, scope: !8220)
!8224 = !DILocation(line: 5525, column: 13, scope: !8220)
!8225 = !DILocation(line: 5525, column: 8, scope: !8216)
!8226 = !DILocation(line: 5526, column: 12, scope: !8220)
!8227 = !DILocation(line: 5526, column: 7, scope: !8220)
!8228 = !DILocation(line: 5527, column: 3, scope: !8216)
!8229 = !DILocation(line: 5530, column: 11, scope: !2145)
!8230 = !DILocation(line: 5531, column: 20, scope: !2145)
!8231 = !DILocation(line: 5531, column: 25, scope: !2145)
!8232 = !DILocation(line: 5531, column: 28, scope: !8233)
!8233 = !DILexicalBlockFile(scope: !2145, file: !1, discriminator: 1)
!8234 = !DILocation(line: 5531, column: 35, scope: !8233)
!8235 = !DILocation(line: 5531, column: 33, scope: !8233)
!8236 = !DILocation(line: 5531, column: 20, scope: !8233)
!8237 = !DILocation(line: 5531, column: 42, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !2145, file: !1, discriminator: 2)
!8239 = !DILocation(line: 5531, column: 49, scope: !8238)
!8240 = !DILocation(line: 5531, column: 47, scope: !8238)
!8241 = !DILocation(line: 5531, column: 20, scope: !8238)
!8242 = !DILocation(line: 5531, column: 57, scope: !8243)
!8243 = !DILexicalBlockFile(scope: !2145, file: !1, discriminator: 3)
!8244 = !DILocation(line: 5531, column: 64, scope: !8243)
!8245 = !DILocation(line: 5531, column: 62, scope: !8243)
!8246 = !DILocation(line: 5531, column: 20, scope: !8243)
!8247 = !DILocation(line: 5531, column: 20, scope: !8248)
!8248 = !DILexicalBlockFile(scope: !2145, file: !1, discriminator: 4)
!8249 = !DILocation(line: 5530, column: 11, scope: !8233)
!8250 = !DILocation(line: 5532, column: 12, scope: !2145)
!8251 = !DILocation(line: 5532, column: 28, scope: !8233)
!8252 = !DILocation(line: 5532, column: 35, scope: !8233)
!8253 = !DILocation(line: 5532, column: 33, scope: !8233)
!8254 = !DILocation(line: 5532, column: 12, scope: !8233)
!8255 = !DILocation(line: 5532, column: 44, scope: !8238)
!8256 = !DILocation(line: 5532, column: 12, scope: !8238)
!8257 = !DILocation(line: 5532, column: 12, scope: !8243)
!8258 = !DILocation(line: 5530, column: 11, scope: !8238)
!8259 = !DILocation(line: 5530, column: 11, scope: !8243)
!8260 = !DILocation(line: 5530, column: 8, scope: !8243)
!8261 = !DILocation(line: 5533, column: 11, scope: !2145)
!8262 = !DILocation(line: 5534, column: 12, scope: !2145)
!8263 = !DILocation(line: 5534, column: 17, scope: !2145)
!8264 = !DILocation(line: 5534, column: 20, scope: !8233)
!8265 = !DILocation(line: 5534, column: 27, scope: !8233)
!8266 = !DILocation(line: 5534, column: 25, scope: !8233)
!8267 = !DILocation(line: 5534, column: 12, scope: !8233)
!8268 = !DILocation(line: 5534, column: 43, scope: !8238)
!8269 = !DILocation(line: 5534, column: 50, scope: !8238)
!8270 = !DILocation(line: 5534, column: 48, scope: !8238)
!8271 = !DILocation(line: 5534, column: 12, scope: !8238)
!8272 = !DILocation(line: 5535, column: 43, scope: !2145)
!8273 = !DILocation(line: 5535, column: 51, scope: !2145)
!8274 = !DILocation(line: 5535, column: 49, scope: !2145)
!8275 = !DILocation(line: 5535, column: 57, scope: !2145)
!8276 = !DILocation(line: 5535, column: 55, scope: !2145)
!8277 = !DILocation(line: 5534, column: 12, scope: !8243)
!8278 = !DILocation(line: 5534, column: 12, scope: !8248)
!8279 = !DILocation(line: 5535, column: 64, scope: !8233)
!8280 = !DILocation(line: 5533, column: 11, scope: !8233)
!8281 = !DILocation(line: 5533, column: 11, scope: !8238)
!8282 = !DILocation(line: 5533, column: 11, scope: !8243)
!8283 = !DILocation(line: 5533, column: 8, scope: !8243)
!8284 = !DILocation(line: 5536, column: 11, scope: !2145)
!8285 = !DILocation(line: 5537, column: 12, scope: !2145)
!8286 = !DILocation(line: 5537, column: 17, scope: !2145)
!8287 = !DILocation(line: 5537, column: 20, scope: !8233)
!8288 = !DILocation(line: 5537, column: 27, scope: !8233)
!8289 = !DILocation(line: 5537, column: 25, scope: !8233)
!8290 = !DILocation(line: 5537, column: 12, scope: !8233)
!8291 = !DILocation(line: 5537, column: 43, scope: !8238)
!8292 = !DILocation(line: 5537, column: 50, scope: !8238)
!8293 = !DILocation(line: 5537, column: 48, scope: !8238)
!8294 = !DILocation(line: 5537, column: 12, scope: !8238)
!8295 = !DILocation(line: 5538, column: 43, scope: !2145)
!8296 = !DILocation(line: 5538, column: 51, scope: !2145)
!8297 = !DILocation(line: 5538, column: 49, scope: !2145)
!8298 = !DILocation(line: 5538, column: 57, scope: !2145)
!8299 = !DILocation(line: 5538, column: 55, scope: !2145)
!8300 = !DILocation(line: 5537, column: 12, scope: !8243)
!8301 = !DILocation(line: 5537, column: 12, scope: !8248)
!8302 = !DILocation(line: 5538, column: 64, scope: !8233)
!8303 = !DILocation(line: 5536, column: 11, scope: !8233)
!8304 = !DILocation(line: 5536, column: 11, scope: !8238)
!8305 = !DILocation(line: 5536, column: 11, scope: !8243)
!8306 = !DILocation(line: 5536, column: 8, scope: !8243)
!8307 = !DILocation(line: 5541, column: 6, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5541, column: 6)
!8309 = !DILocation(line: 5541, column: 12, scope: !8308)
!8310 = !DILocation(line: 5541, column: 15, scope: !8311)
!8311 = !DILexicalBlockFile(scope: !8308, file: !1, discriminator: 1)
!8312 = !DILocation(line: 5541, column: 6, scope: !8311)
!8313 = !DILocation(line: 5542, column: 12, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8308, file: !1, line: 5541, column: 21)
!8315 = !DILocation(line: 5542, column: 10, scope: !8314)
!8316 = !DILocation(line: 5543, column: 9, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8314, file: !1, line: 5543, column: 8)
!8318 = !DILocation(line: 5543, column: 8, scope: !8314)
!8319 = !DILocation(line: 5544, column: 14, scope: !8317)
!8320 = !DILocation(line: 5544, column: 7, scope: !8317)
!8321 = !DILocation(line: 5545, column: 3, scope: !8314)
!8322 = !DILocation(line: 5548, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5548, column: 6)
!8324 = !DILocation(line: 5548, column: 14, scope: !8323)
!8325 = !DILocation(line: 5548, column: 17, scope: !8326)
!8326 = !DILexicalBlockFile(scope: !8323, file: !1, discriminator: 1)
!8327 = !DILocation(line: 5548, column: 25, scope: !8326)
!8328 = !DILocation(line: 5548, column: 28, scope: !8329)
!8329 = !DILexicalBlockFile(scope: !8323, file: !1, discriminator: 2)
!8330 = !DILocation(line: 5548, column: 6, scope: !8329)
!8331 = !DILocation(line: 5549, column: 12, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8323, file: !1, line: 5548, column: 34)
!8333 = !DILocation(line: 5549, column: 10, scope: !8332)
!8334 = !DILocation(line: 5550, column: 9, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8332, file: !1, line: 5550, column: 8)
!8336 = !DILocation(line: 5550, column: 8, scope: !8332)
!8337 = !DILocation(line: 5551, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8335, file: !1, line: 5550, column: 15)
!8339 = !DILocation(line: 5552, column: 14, scope: !8338)
!8340 = !DILocation(line: 5553, column: 5, scope: !8338)
!8341 = !DILocation(line: 5554, column: 3, scope: !8332)
!8342 = !DILocation(line: 5557, column: 7, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5557, column: 6)
!8344 = !DILocation(line: 5557, column: 14, scope: !8343)
!8345 = !DILocation(line: 5557, column: 17, scope: !8346)
!8346 = !DILexicalBlockFile(scope: !8343, file: !1, discriminator: 1)
!8347 = !DILocation(line: 5557, column: 26, scope: !8346)
!8348 = !DILocation(line: 5557, column: 29, scope: !8349)
!8349 = !DILexicalBlockFile(scope: !8343, file: !1, discriminator: 2)
!8350 = !DILocation(line: 5557, column: 6, scope: !8349)
!8351 = !DILocation(line: 5558, column: 12, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8343, file: !1, line: 5557, column: 35)
!8353 = !DILocation(line: 5558, column: 10, scope: !8352)
!8354 = !DILocation(line: 5559, column: 9, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8352, file: !1, line: 5559, column: 8)
!8356 = !DILocation(line: 5559, column: 8, scope: !8352)
!8357 = !DILocation(line: 5560, column: 7, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8355, file: !1, line: 5559, column: 15)
!8359 = !DILocation(line: 5561, column: 7, scope: !8358)
!8360 = !DILocation(line: 5562, column: 14, scope: !8358)
!8361 = !DILocation(line: 5563, column: 5, scope: !8358)
!8362 = !DILocation(line: 5564, column: 3, scope: !8352)
!8363 = !DILocation(line: 5566, column: 7, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 5566, column: 6)
!8365 = !DILocation(line: 5566, column: 6, scope: !2145)
!8366 = !DILocation(line: 5568, column: 8, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !1, line: 5568, column: 8)
!8368 = distinct !DILexicalBlock(scope: !8364, file: !1, line: 5566, column: 15)
!8369 = !DILocation(line: 5568, column: 8, scope: !8368)
!8370 = !DILocation(line: 5569, column: 14, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !1, line: 5568, column: 14)
!8372 = !DILocation(line: 5569, column: 20, scope: !8371)
!8373 = !DILocation(line: 5569, column: 27, scope: !8371)
!8374 = !DILocation(line: 5569, column: 7, scope: !8371)
!8375 = !DILocation(line: 5570, column: 12, scope: !8371)
!8376 = !DILocation(line: 5570, column: 7, scope: !8371)
!8377 = !DILocation(line: 5570, column: 18, scope: !8371)
!8378 = !DILocation(line: 5571, column: 7, scope: !8371)
!8379 = !DILocation(line: 5571, column: 7, scope: !8380)
!8380 = !DILexicalBlockFile(scope: !8381, file: !1, discriminator: 1)
!8381 = distinct !DILexicalBlock(scope: !8371, file: !1, line: 5571, column: 7)
!8382 = !DILocation(line: 5572, column: 16, scope: !8371)
!8383 = !DILocation(line: 5572, column: 8, scope: !8371)
!8384 = !DILocation(line: 5572, column: 14, scope: !8371)
!8385 = !DILocation(line: 5573, column: 5, scope: !8371)
!8386 = !DILocation(line: 5576, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8368, file: !1, line: 5576, column: 8)
!8388 = !DILocation(line: 5576, column: 8, scope: !8368)
!8389 = !DILocation(line: 5577, column: 14, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8387, file: !1, line: 5576, column: 14)
!8391 = !DILocation(line: 5577, column: 20, scope: !8390)
!8392 = !DILocation(line: 5577, column: 25, scope: !8390)
!8393 = !DILocation(line: 5577, column: 30, scope: !8390)
!8394 = !DILocation(line: 5577, column: 7, scope: !8390)
!8395 = !DILocation(line: 5578, column: 12, scope: !8390)
!8396 = !DILocation(line: 5578, column: 7, scope: !8390)
!8397 = !DILocation(line: 5578, column: 18, scope: !8390)
!8398 = !DILocation(line: 5579, column: 7, scope: !8390)
!8399 = !DILocation(line: 5579, column: 7, scope: !8400)
!8400 = !DILexicalBlockFile(scope: !8401, file: !1, discriminator: 1)
!8401 = distinct !DILexicalBlock(scope: !8390, file: !1, line: 5579, column: 7)
!8402 = !DILocation(line: 5580, column: 18, scope: !8390)
!8403 = !DILocation(line: 5580, column: 8, scope: !8390)
!8404 = !DILocation(line: 5580, column: 16, scope: !8390)
!8405 = !DILocation(line: 5581, column: 5, scope: !8390)
!8406 = !DILocation(line: 5584, column: 8, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8368, file: !1, line: 5584, column: 8)
!8408 = !DILocation(line: 5584, column: 8, scope: !8368)
!8409 = !DILocation(line: 5585, column: 14, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8407, file: !1, line: 5584, column: 14)
!8411 = !DILocation(line: 5585, column: 20, scope: !8410)
!8412 = !DILocation(line: 5585, column: 25, scope: !8410)
!8413 = !DILocation(line: 5585, column: 30, scope: !8410)
!8414 = !DILocation(line: 5585, column: 7, scope: !8410)
!8415 = !DILocation(line: 5586, column: 12, scope: !8410)
!8416 = !DILocation(line: 5586, column: 7, scope: !8410)
!8417 = !DILocation(line: 5586, column: 18, scope: !8410)
!8418 = !DILocation(line: 5587, column: 7, scope: !8410)
!8419 = !DILocation(line: 5587, column: 7, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !8421, file: !1, discriminator: 1)
!8421 = distinct !DILexicalBlock(scope: !8410, file: !1, line: 5587, column: 7)
!8422 = !DILocation(line: 5588, column: 19, scope: !8410)
!8423 = !DILocation(line: 5588, column: 8, scope: !8410)
!8424 = !DILocation(line: 5588, column: 17, scope: !8410)
!8425 = !DILocation(line: 5589, column: 5, scope: !8410)
!8426 = !DILocation(line: 5590, column: 3, scope: !8368)
!8427 = !DILocation(line: 5592, column: 10, scope: !2145)
!8428 = !DILocation(line: 5592, column: 3, scope: !2145)
!8429 = !DILocalVariable(name: "data", arg: 1, scope: !2160, file: !1, line: 4110, type: !256)
!8430 = !DILocation(line: 4110, column: 60, scope: !2160)
!8431 = !DILocalVariable(name: "conn", scope: !2160, file: !1, line: 4112, type: !262)
!8432 = !DILocation(line: 4112, column: 23, scope: !2160)
!8433 = !DILocation(line: 4112, column: 30, scope: !2160)
!8434 = !DILocation(line: 4113, column: 7, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !2160, file: !1, line: 4113, column: 6)
!8436 = !DILocation(line: 4113, column: 6, scope: !2160)
!8437 = !DILocation(line: 4114, column: 5, scope: !8435)
!8438 = !DILocation(line: 4116, column: 3, scope: !2160)
!8439 = !DILocation(line: 4116, column: 9, scope: !2160)
!8440 = !DILocation(line: 4116, column: 17, scope: !2160)
!8441 = !DILocation(line: 4122, column: 3, scope: !2160)
!8442 = !DILocation(line: 4122, column: 9, scope: !2160)
!8443 = !DILocation(line: 4122, column: 27, scope: !2160)
!8444 = !DILocation(line: 4123, column: 3, scope: !2160)
!8445 = !DILocation(line: 4123, column: 9, scope: !2160)
!8446 = !DILocation(line: 4123, column: 31, scope: !2160)
!8447 = !DILocation(line: 4124, column: 3, scope: !2160)
!8448 = !DILocation(line: 4124, column: 9, scope: !2160)
!8449 = !DILocation(line: 4124, column: 21, scope: !2160)
!8450 = !DILocation(line: 4125, column: 3, scope: !2160)
!8451 = !DILocation(line: 4125, column: 9, scope: !2160)
!8452 = !DILocation(line: 4125, column: 21, scope: !2160)
!8453 = !DILocation(line: 4126, column: 3, scope: !2160)
!8454 = !DILocation(line: 4126, column: 9, scope: !2160)
!8455 = !DILocation(line: 4126, column: 23, scope: !2160)
!8456 = !DILocation(line: 4127, column: 3, scope: !2160)
!8457 = !DILocation(line: 4127, column: 9, scope: !2160)
!8458 = !DILocation(line: 4127, column: 14, scope: !2160)
!8459 = !DILocation(line: 4128, column: 3, scope: !2160)
!8460 = !DILocation(line: 4128, column: 9, scope: !2160)
!8461 = !DILocation(line: 4128, column: 21, scope: !2160)
!8462 = !DILocation(line: 4137, column: 3, scope: !2160)
!8463 = !DILocation(line: 4140, column: 3, scope: !2160)
!8464 = !DILocation(line: 4140, column: 9, scope: !2160)
!8465 = !DILocation(line: 4140, column: 19, scope: !2160)
!8466 = !DILocation(line: 4140, column: 19, scope: !8467)
!8467 = !DILexicalBlockFile(scope: !2160, file: !1, discriminator: 1)
!8468 = !DILocation(line: 4142, column: 16, scope: !2160)
!8469 = !DILocation(line: 4142, column: 3, scope: !2160)
!8470 = !DILocation(line: 4142, column: 9, scope: !2160)
!8471 = !DILocation(line: 4142, column: 14, scope: !2160)
!8472 = !DILocation(line: 4145, column: 32, scope: !2160)
!8473 = !DILocation(line: 4145, column: 38, scope: !2160)
!8474 = !DILocation(line: 4145, column: 42, scope: !2160)
!8475 = !DILocation(line: 4145, column: 3, scope: !2160)
!8476 = !DILocation(line: 4145, column: 9, scope: !2160)
!8477 = !DILocation(line: 4145, column: 20, scope: !2160)
!8478 = !DILocation(line: 4145, column: 30, scope: !2160)
!8479 = !DILocation(line: 4146, column: 3, scope: !2160)
!8480 = !DILocation(line: 4146, column: 9, scope: !2160)
!8481 = !DILocation(line: 4146, column: 21, scope: !2160)
!8482 = !DILocation(line: 4146, column: 31, scope: !2160)
!8483 = !DILocation(line: 4160, column: 23, scope: !2160)
!8484 = !DILocation(line: 4160, column: 29, scope: !2160)
!8485 = !DILocation(line: 4160, column: 33, scope: !2160)
!8486 = !DILocation(line: 4160, column: 51, scope: !2160)
!8487 = !DILocation(line: 4161, column: 24, scope: !2160)
!8488 = !DILocation(line: 4161, column: 30, scope: !2160)
!8489 = !DILocation(line: 4161, column: 34, scope: !2160)
!8490 = !DILocation(line: 4161, column: 23, scope: !2160)
!8491 = !DILocation(line: 4160, column: 51, scope: !8467)
!8492 = !DILocation(line: 4160, column: 22, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !2160, file: !1, discriminator: 2)
!8494 = !DILocation(line: 4160, column: 3, scope: !8493)
!8495 = !DILocation(line: 4160, column: 9, scope: !8493)
!8496 = !DILocation(line: 4160, column: 14, scope: !8493)
!8497 = !DILocation(line: 4160, column: 20, scope: !8493)
!8498 = !DILocation(line: 4162, column: 27, scope: !2160)
!8499 = !DILocation(line: 4162, column: 33, scope: !2160)
!8500 = !DILocation(line: 4162, column: 38, scope: !2160)
!8501 = !DILocation(line: 4162, column: 44, scope: !2160)
!8502 = !DILocation(line: 4163, column: 28, scope: !2160)
!8503 = !DILocation(line: 4163, column: 34, scope: !2160)
!8504 = !DILocation(line: 4163, column: 45, scope: !2160)
!8505 = !DILocation(line: 4163, column: 55, scope: !2160)
!8506 = !DILocation(line: 4163, column: 73, scope: !2160)
!8507 = !DILocation(line: 4164, column: 28, scope: !2160)
!8508 = !DILocation(line: 4164, column: 34, scope: !2160)
!8509 = !DILocation(line: 4164, column: 45, scope: !2160)
!8510 = !DILocation(line: 4164, column: 55, scope: !2160)
!8511 = !DILocation(line: 4164, column: 77, scope: !2160)
!8512 = !DILocation(line: 4165, column: 28, scope: !2160)
!8513 = !DILocation(line: 4165, column: 34, scope: !2160)
!8514 = !DILocation(line: 4165, column: 45, scope: !2160)
!8515 = !DILocation(line: 4165, column: 55, scope: !2160)
!8516 = !DILocation(line: 4164, column: 77, scope: !8467)
!8517 = !DILocation(line: 4162, column: 26, scope: !8467)
!8518 = !DILocation(line: 4162, column: 3, scope: !8467)
!8519 = !DILocation(line: 4162, column: 9, scope: !8467)
!8520 = !DILocation(line: 4162, column: 14, scope: !8467)
!8521 = !DILocation(line: 4162, column: 24, scope: !8467)
!8522 = !DILocation(line: 4167, column: 28, scope: !2160)
!8523 = !DILocation(line: 4167, column: 34, scope: !2160)
!8524 = !DILocation(line: 4167, column: 39, scope: !2160)
!8525 = !DILocation(line: 4167, column: 45, scope: !2160)
!8526 = !DILocation(line: 4168, column: 29, scope: !2160)
!8527 = !DILocation(line: 4168, column: 35, scope: !2160)
!8528 = !DILocation(line: 4168, column: 40, scope: !2160)
!8529 = !DILocation(line: 4168, column: 28, scope: !2160)
!8530 = !DILocation(line: 4167, column: 27, scope: !8467)
!8531 = !DILocation(line: 4167, column: 3, scope: !8467)
!8532 = !DILocation(line: 4167, column: 9, scope: !8467)
!8533 = !DILocation(line: 4167, column: 14, scope: !8467)
!8534 = !DILocation(line: 4167, column: 25, scope: !8467)
!8535 = !DILocation(line: 4170, column: 6, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !2160, file: !1, line: 4170, column: 6)
!8537 = !DILocation(line: 4170, column: 12, scope: !8536)
!8538 = !DILocation(line: 4170, column: 16, scope: !8536)
!8539 = !DILocation(line: 4170, column: 38, scope: !8536)
!8540 = !DILocation(line: 4170, column: 42, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !8536, file: !1, discriminator: 1)
!8542 = !DILocation(line: 4170, column: 48, scope: !8541)
!8543 = !DILocation(line: 4170, column: 52, scope: !8541)
!8544 = !DILocation(line: 4170, column: 41, scope: !8541)
!8545 = !DILocation(line: 4170, column: 6, scope: !8541)
!8546 = !DILocation(line: 4171, column: 5, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8536, file: !1, line: 4170, column: 75)
!8548 = !DILocation(line: 4171, column: 11, scope: !8547)
!8549 = !DILocation(line: 4171, column: 16, scope: !8547)
!8550 = !DILocation(line: 4171, column: 22, scope: !8547)
!8551 = !DILocation(line: 4172, column: 5, scope: !8547)
!8552 = !DILocation(line: 4172, column: 11, scope: !8547)
!8553 = !DILocation(line: 4172, column: 16, scope: !8547)
!8554 = !DILocation(line: 4172, column: 27, scope: !8547)
!8555 = !DILocation(line: 4173, column: 3, scope: !8547)
!8556 = !DILocation(line: 4176, column: 6, scope: !2160)
!8557 = !DILocation(line: 4176, column: 12, scope: !2160)
!8558 = !DILocation(line: 4176, column: 16, scope: !2160)
!8559 = !DILocation(line: 4176, column: 5, scope: !2160)
!8560 = !DILocation(line: 4175, column: 3, scope: !2160)
!8561 = !DILocation(line: 4175, column: 9, scope: !2160)
!8562 = !DILocation(line: 4175, column: 14, scope: !2160)
!8563 = !DILocation(line: 4175, column: 32, scope: !2160)
!8564 = !DILocation(line: 4177, column: 29, scope: !2160)
!8565 = !DILocation(line: 4177, column: 35, scope: !2160)
!8566 = !DILocation(line: 4177, column: 39, scope: !2160)
!8567 = !DILocation(line: 4177, column: 3, scope: !2160)
!8568 = !DILocation(line: 4177, column: 9, scope: !2160)
!8569 = !DILocation(line: 4177, column: 14, scope: !2160)
!8570 = !DILocation(line: 4177, column: 27, scope: !2160)
!8571 = !DILocation(line: 4181, column: 29, scope: !2160)
!8572 = !DILocation(line: 4181, column: 35, scope: !2160)
!8573 = !DILocation(line: 4181, column: 39, scope: !2160)
!8574 = !DILocation(line: 4181, column: 28, scope: !2160)
!8575 = !DILocation(line: 4181, column: 3, scope: !2160)
!8576 = !DILocation(line: 4181, column: 9, scope: !2160)
!8577 = !DILocation(line: 4181, column: 14, scope: !2160)
!8578 = !DILocation(line: 4181, column: 26, scope: !2160)
!8579 = !DILocation(line: 4182, column: 29, scope: !2160)
!8580 = !DILocation(line: 4182, column: 35, scope: !2160)
!8581 = !DILocation(line: 4182, column: 39, scope: !2160)
!8582 = !DILocation(line: 4182, column: 3, scope: !2160)
!8583 = !DILocation(line: 4182, column: 9, scope: !2160)
!8584 = !DILocation(line: 4182, column: 14, scope: !2160)
!8585 = !DILocation(line: 4182, column: 27, scope: !2160)
!8586 = !DILocation(line: 4183, column: 29, scope: !2160)
!8587 = !DILocation(line: 4183, column: 35, scope: !2160)
!8588 = !DILocation(line: 4183, column: 39, scope: !2160)
!8589 = !DILocation(line: 4183, column: 3, scope: !2160)
!8590 = !DILocation(line: 4183, column: 9, scope: !2160)
!8591 = !DILocation(line: 4183, column: 14, scope: !2160)
!8592 = !DILocation(line: 4183, column: 27, scope: !2160)
!8593 = !DILocation(line: 4185, column: 35, scope: !2160)
!8594 = !DILocation(line: 4185, column: 41, scope: !2160)
!8595 = !DILocation(line: 4185, column: 45, scope: !2160)
!8596 = !DILocation(line: 4185, column: 49, scope: !2160)
!8597 = !DILocation(line: 4185, column: 57, scope: !2160)
!8598 = !DILocation(line: 4185, column: 3, scope: !2160)
!8599 = !DILocation(line: 4185, column: 9, scope: !2160)
!8600 = !DILocation(line: 4185, column: 20, scope: !2160)
!8601 = !DILocation(line: 4185, column: 33, scope: !2160)
!8602 = !DILocation(line: 4186, column: 33, scope: !2160)
!8603 = !DILocation(line: 4186, column: 39, scope: !2160)
!8604 = !DILocation(line: 4186, column: 43, scope: !2160)
!8605 = !DILocation(line: 4186, column: 47, scope: !2160)
!8606 = !DILocation(line: 4186, column: 55, scope: !2160)
!8607 = !DILocation(line: 4186, column: 3, scope: !2160)
!8608 = !DILocation(line: 4186, column: 9, scope: !2160)
!8609 = !DILocation(line: 4186, column: 20, scope: !2160)
!8610 = !DILocation(line: 4186, column: 31, scope: !2160)
!8611 = !DILocation(line: 4187, column: 33, scope: !2160)
!8612 = !DILocation(line: 4187, column: 39, scope: !2160)
!8613 = !DILocation(line: 4187, column: 43, scope: !2160)
!8614 = !DILocation(line: 4187, column: 47, scope: !2160)
!8615 = !DILocation(line: 4187, column: 55, scope: !2160)
!8616 = !DILocation(line: 4187, column: 3, scope: !2160)
!8617 = !DILocation(line: 4187, column: 9, scope: !2160)
!8618 = !DILocation(line: 4187, column: 20, scope: !2160)
!8619 = !DILocation(line: 4187, column: 31, scope: !2160)
!8620 = !DILocation(line: 4189, column: 5, scope: !2160)
!8621 = !DILocation(line: 4189, column: 11, scope: !2160)
!8622 = !DILocation(line: 4189, column: 15, scope: !2160)
!8623 = !DILocation(line: 4189, column: 25, scope: !2160)
!8624 = !DILocation(line: 4189, column: 33, scope: !2160)
!8625 = !DILocation(line: 4188, column: 3, scope: !2160)
!8626 = !DILocation(line: 4188, column: 9, scope: !2160)
!8627 = !DILocation(line: 4188, column: 26, scope: !2160)
!8628 = !DILocation(line: 4188, column: 39, scope: !2160)
!8629 = !DILocation(line: 4190, column: 39, scope: !2160)
!8630 = !DILocation(line: 4190, column: 45, scope: !2160)
!8631 = !DILocation(line: 4190, column: 49, scope: !2160)
!8632 = !DILocation(line: 4190, column: 59, scope: !2160)
!8633 = !DILocation(line: 4190, column: 67, scope: !2160)
!8634 = !DILocation(line: 4190, column: 3, scope: !2160)
!8635 = !DILocation(line: 4190, column: 9, scope: !2160)
!8636 = !DILocation(line: 4190, column: 26, scope: !2160)
!8637 = !DILocation(line: 4190, column: 37, scope: !2160)
!8638 = !DILocation(line: 4191, column: 39, scope: !2160)
!8639 = !DILocation(line: 4191, column: 45, scope: !2160)
!8640 = !DILocation(line: 4191, column: 49, scope: !2160)
!8641 = !DILocation(line: 4191, column: 59, scope: !2160)
!8642 = !DILocation(line: 4191, column: 67, scope: !2160)
!8643 = !DILocation(line: 4191, column: 3, scope: !2160)
!8644 = !DILocation(line: 4191, column: 9, scope: !2160)
!8645 = !DILocation(line: 4191, column: 26, scope: !2160)
!8646 = !DILocation(line: 4191, column: 37, scope: !2160)
!8647 = !DILocation(line: 4193, column: 22, scope: !2160)
!8648 = !DILocation(line: 4193, column: 28, scope: !2160)
!8649 = !DILocation(line: 4193, column: 32, scope: !2160)
!8650 = !DILocation(line: 4193, column: 3, scope: !2160)
!8651 = !DILocation(line: 4193, column: 9, scope: !2160)
!8652 = !DILocation(line: 4193, column: 20, scope: !2160)
!8653 = !DILocation(line: 4203, column: 27, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !2160, file: !1, line: 4203, column: 6)
!8655 = !DILocation(line: 4203, column: 33, scope: !8654)
!8656 = !DILocation(line: 4203, column: 6, scope: !8654)
!8657 = !DILocation(line: 4203, column: 56, scope: !8654)
!8658 = !DILocation(line: 4204, column: 7, scope: !8654)
!8659 = !DILocation(line: 4204, column: 13, scope: !8654)
!8660 = !DILocation(line: 4203, column: 6, scope: !8467)
!8661 = !DILocation(line: 4206, column: 27, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8654, file: !1, line: 4204, column: 28)
!8663 = !DILocation(line: 4206, column: 5, scope: !8662)
!8664 = !DILocation(line: 4206, column: 11, scope: !8662)
!8665 = !DILocation(line: 4206, column: 25, scope: !8662)
!8666 = !DILocation(line: 4207, column: 9, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8662, file: !1, line: 4207, column: 8)
!8668 = !DILocation(line: 4207, column: 15, scope: !8667)
!8669 = !DILocation(line: 4207, column: 8, scope: !8662)
!8670 = !DILocation(line: 4208, column: 7, scope: !8667)
!8671 = !DILocation(line: 4209, column: 3, scope: !8662)
!8672 = !DILocation(line: 4212, column: 20, scope: !2160)
!8673 = !DILocation(line: 4212, column: 26, scope: !2160)
!8674 = !DILocation(line: 4212, column: 3, scope: !2160)
!8675 = !DILocation(line: 4213, column: 20, scope: !2160)
!8676 = !DILocation(line: 4213, column: 26, scope: !2160)
!8677 = !DILocation(line: 4213, column: 3, scope: !2160)
!8678 = !DILocation(line: 4220, column: 6, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !2160, file: !1, line: 4220, column: 6)
!8680 = !DILocation(line: 4220, column: 12, scope: !8679)
!8681 = !DILocation(line: 4220, column: 16, scope: !8679)
!8682 = !DILocation(line: 4220, column: 6, scope: !2160)
!8683 = !DILocation(line: 4221, column: 22, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8679, file: !1, line: 4220, column: 36)
!8685 = !DILocation(line: 4221, column: 5, scope: !8684)
!8686 = !DILocation(line: 4221, column: 11, scope: !8684)
!8687 = !DILocation(line: 4221, column: 20, scope: !8684)
!8688 = !DILocation(line: 4222, column: 9, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8684, file: !1, line: 4222, column: 8)
!8690 = !DILocation(line: 4222, column: 15, scope: !8689)
!8691 = !DILocation(line: 4222, column: 8, scope: !8684)
!8692 = !DILocation(line: 4223, column: 7, scope: !8689)
!8693 = !DILocation(line: 4224, column: 3, scope: !8684)
!8694 = !DILocation(line: 4225, column: 26, scope: !2160)
!8695 = !DILocation(line: 4225, column: 32, scope: !2160)
!8696 = !DILocation(line: 4225, column: 36, scope: !2160)
!8697 = !DILocation(line: 4225, column: 3, scope: !2160)
!8698 = !DILocation(line: 4225, column: 9, scope: !2160)
!8699 = !DILocation(line: 4225, column: 24, scope: !2160)
!8700 = !DILocation(line: 4226, column: 21, scope: !2160)
!8701 = !DILocation(line: 4226, column: 27, scope: !2160)
!8702 = !DILocation(line: 4226, column: 31, scope: !2160)
!8703 = !DILocation(line: 4226, column: 3, scope: !2160)
!8704 = !DILocation(line: 4226, column: 9, scope: !2160)
!8705 = !DILocation(line: 4226, column: 19, scope: !2160)
!8706 = !DILocation(line: 4230, column: 24, scope: !2160)
!8707 = !DILocation(line: 4230, column: 30, scope: !2160)
!8708 = !DILocation(line: 4230, column: 34, scope: !2160)
!8709 = !DILocation(line: 4230, column: 3, scope: !2160)
!8710 = !DILocation(line: 4230, column: 9, scope: !2160)
!8711 = !DILocation(line: 4230, column: 22, scope: !2160)
!8712 = !DILocation(line: 4231, column: 30, scope: !2160)
!8713 = !DILocation(line: 4231, column: 36, scope: !2160)
!8714 = !DILocation(line: 4231, column: 40, scope: !2160)
!8715 = !DILocation(line: 4231, column: 3, scope: !2160)
!8716 = !DILocation(line: 4231, column: 9, scope: !2160)
!8717 = !DILocation(line: 4231, column: 28, scope: !2160)
!8718 = !DILocation(line: 4233, column: 10, scope: !2160)
!8719 = !DILocation(line: 4233, column: 3, scope: !2160)
!8720 = !DILocation(line: 4236, column: 23, scope: !2160)
!8721 = !DILocation(line: 4236, column: 29, scope: !2160)
!8722 = !DILocation(line: 4236, column: 3, scope: !2160)
!8723 = !DILocation(line: 4237, column: 23, scope: !2160)
!8724 = !DILocation(line: 4237, column: 29, scope: !2160)
!8725 = !DILocation(line: 4237, column: 3, scope: !2160)
!8726 = !DILocation(line: 4239, column: 3, scope: !2160)
!8727 = !DILocation(line: 4240, column: 3, scope: !2160)
!8728 = !DILocation(line: 4241, column: 3, scope: !2160)
!8729 = !DILocation(line: 4242, column: 3, scope: !2160)
!8730 = !DILocation(line: 4243, column: 1, scope: !2160)
!8731 = !DILocalVariable(name: "data", arg: 1, scope: !2162, file: !1, line: 4290, type: !256)
!8732 = !DILocation(line: 4290, column: 55, scope: !2162)
!8733 = !DILocalVariable(name: "conn", arg: 2, scope: !2162, file: !1, line: 4291, type: !262)
!8734 = !DILocation(line: 4291, column: 57, scope: !2162)
!8735 = !DILocalVariable(name: "prot_missing", arg: 3, scope: !2162, file: !1, line: 4292, type: !1461)
!8736 = !DILocation(line: 4292, column: 43, scope: !2162)
!8737 = !DILocalVariable(name: "userp", arg: 4, scope: !2162, file: !1, line: 4293, type: !1562)
!8738 = !DILocation(line: 4293, column: 44, scope: !2162)
!8739 = !DILocalVariable(name: "passwdp", arg: 5, scope: !2162, file: !1, line: 4293, type: !1562)
!8740 = !DILocation(line: 4293, column: 58, scope: !2162)
!8741 = !DILocalVariable(name: "optionsp", arg: 6, scope: !2162, file: !1, line: 4294, type: !1562)
!8742 = !DILocation(line: 4294, column: 44, scope: !2162)
!8743 = !DILocalVariable(name: "at", scope: !2162, file: !1, line: 4296, type: !500)
!8744 = !DILocation(line: 4296, column: 9, scope: !2162)
!8745 = !DILocalVariable(name: "fragment", scope: !2162, file: !1, line: 4297, type: !500)
!8746 = !DILocation(line: 4297, column: 9, scope: !2162)
!8747 = !DILocalVariable(name: "path", scope: !2162, file: !1, line: 4298, type: !500)
!8748 = !DILocation(line: 4298, column: 9, scope: !2162)
!8749 = !DILocation(line: 4298, column: 16, scope: !2162)
!8750 = !DILocation(line: 4298, column: 22, scope: !2162)
!8751 = !DILocation(line: 4298, column: 28, scope: !2162)
!8752 = !DILocalVariable(name: "query", scope: !2162, file: !1, line: 4299, type: !500)
!8753 = !DILocation(line: 4299, column: 9, scope: !2162)
!8754 = !DILocalVariable(name: "i", scope: !2162, file: !1, line: 4300, type: !316)
!8755 = !DILocation(line: 4300, column: 7, scope: !2162)
!8756 = !DILocalVariable(name: "rc", scope: !2162, file: !1, line: 4301, type: !316)
!8757 = !DILocation(line: 4301, column: 7, scope: !2162)
!8758 = !DILocalVariable(name: "protop", scope: !2162, file: !1, line: 4302, type: !527)
!8759 = !DILocation(line: 4302, column: 15, scope: !2162)
!8760 = !DILocalVariable(name: "result", scope: !2162, file: !1, line: 4303, type: !289)
!8761 = !DILocation(line: 4303, column: 12, scope: !2162)
!8762 = !DILocalVariable(name: "rebuild_url", scope: !2162, file: !1, line: 4304, type: !423)
!8763 = !DILocation(line: 4304, column: 8, scope: !2162)
!8764 = !DILocalVariable(name: "url_has_scheme", scope: !2162, file: !1, line: 4305, type: !423)
!8765 = !DILocation(line: 4305, column: 8, scope: !2162)
!8766 = !DILocalVariable(name: "protobuf", scope: !2162, file: !1, line: 4306, type: !8767)
!8767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, align: 8, elements: !8768)
!8768 = !{!8769}
!8769 = !DISubrange(count: 16)
!8770 = !DILocation(line: 4306, column: 8, scope: !2162)
!8771 = !DILocation(line: 4308, column: 4, scope: !2162)
!8772 = !DILocation(line: 4308, column: 17, scope: !2162)
!8773 = !DILocation(line: 4312, column: 14, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4312, column: 6)
!8775 = !DILocation(line: 4312, column: 20, scope: !8774)
!8776 = !DILocation(line: 4312, column: 27, scope: !8774)
!8777 = !DILocation(line: 4312, column: 6, scope: !8774)
!8778 = !DILocation(line: 4312, column: 6, scope: !2162)
!8779 = !DILocation(line: 4313, column: 11, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8774, file: !1, line: 4312, column: 41)
!8781 = !DILocation(line: 4313, column: 5, scope: !8780)
!8782 = !DILocation(line: 4314, column: 5, scope: !8780)
!8783 = !DILocation(line: 4325, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4325, column: 6)
!8785 = !DILocation(line: 4325, column: 12, scope: !8784)
!8786 = !DILocation(line: 4325, column: 19, scope: !8784)
!8787 = !DILocation(line: 4325, column: 26, scope: !8784)
!8788 = !DILocation(line: 4325, column: 6, scope: !2162)
!8789 = !DILocation(line: 4326, column: 11, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8784, file: !1, line: 4325, column: 34)
!8791 = !DILocation(line: 4326, column: 5, scope: !8790)
!8792 = !DILocation(line: 4327, column: 5, scope: !8790)
!8793 = !DILocation(line: 4332, column: 15, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4332, column: 6)
!8795 = !DILocation(line: 4332, column: 21, scope: !8794)
!8796 = !DILocation(line: 4332, column: 28, scope: !8794)
!8797 = !DILocation(line: 4332, column: 12, scope: !8794)
!8798 = !DILocation(line: 4332, column: 35, scope: !8794)
!8799 = !DILocation(line: 4332, column: 38, scope: !8800)
!8800 = !DILexicalBlockFile(scope: !8794, file: !1, discriminator: 1)
!8801 = !DILocation(line: 4332, column: 44, scope: !8800)
!8802 = !DILocation(line: 4332, column: 51, scope: !8800)
!8803 = !DILocation(line: 4332, column: 58, scope: !8800)
!8804 = !DILocation(line: 4332, column: 66, scope: !8800)
!8805 = !DILocation(line: 4333, column: 15, scope: !8794)
!8806 = !DILocation(line: 4333, column: 21, scope: !8794)
!8807 = !DILocation(line: 4333, column: 28, scope: !8794)
!8808 = !DILocation(line: 4333, column: 12, scope: !8794)
!8809 = !DILocation(line: 4333, column: 35, scope: !8794)
!8810 = !DILocation(line: 4333, column: 38, scope: !8800)
!8811 = !DILocation(line: 4333, column: 44, scope: !8800)
!8812 = !DILocation(line: 4333, column: 51, scope: !8800)
!8813 = !DILocation(line: 4333, column: 58, scope: !8800)
!8814 = !DILocation(line: 4333, column: 67, scope: !8800)
!8815 = !DILocation(line: 4334, column: 6, scope: !8794)
!8816 = !DILocation(line: 4334, column: 12, scope: !8794)
!8817 = !DILocation(line: 4334, column: 19, scope: !8794)
!8818 = !DILocation(line: 4334, column: 26, scope: !8794)
!8819 = !DILocation(line: 4334, column: 33, scope: !8794)
!8820 = !DILocation(line: 4334, column: 36, scope: !8800)
!8821 = !DILocation(line: 4334, column: 42, scope: !8800)
!8822 = !DILocation(line: 4334, column: 46, scope: !8800)
!8823 = !DILocation(line: 4334, column: 75, scope: !8800)
!8824 = !DILocation(line: 4335, column: 6, scope: !8794)
!8825 = !DILocation(line: 4332, column: 6, scope: !8826)
!8826 = !DILexicalBlockFile(scope: !2162, file: !1, discriminator: 2)
!8827 = !DILocation(line: 4337, column: 3, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8794, file: !1, line: 4335, column: 70)
!8829 = !DILocation(line: 4339, column: 11, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !1, line: 4339, column: 5)
!8831 = distinct !DILexicalBlock(scope: !8794, file: !1, line: 4338, column: 8)
!8832 = !DILocation(line: 4339, column: 9, scope: !8830)
!8833 = !DILocation(line: 4339, column: 16, scope: !8834)
!8834 = !DILexicalBlockFile(scope: !8835, file: !1, discriminator: 1)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !1, line: 4339, column: 5)
!8836 = !DILocation(line: 4339, column: 18, scope: !8834)
!8837 = !DILocation(line: 4339, column: 23, scope: !8834)
!8838 = !DILocation(line: 4339, column: 43, scope: !8839)
!8839 = !DILexicalBlockFile(scope: !8835, file: !1, discriminator: 2)
!8840 = !DILocation(line: 4339, column: 26, scope: !8839)
!8841 = !DILocation(line: 4339, column: 32, scope: !8839)
!8842 = !DILocation(line: 4339, column: 39, scope: !8839)
!8843 = !DILocation(line: 4339, column: 23, scope: !8839)
!8844 = !DILocation(line: 4339, column: 5, scope: !8845)
!8845 = !DILexicalBlockFile(scope: !8830, file: !1, discriminator: 3)
!8846 = !DILocation(line: 4340, column: 27, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !1, line: 4340, column: 10)
!8848 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 4339, column: 52)
!8849 = !DILocation(line: 4340, column: 10, scope: !8847)
!8850 = !DILocation(line: 4340, column: 16, scope: !8847)
!8851 = !DILocation(line: 4340, column: 23, scope: !8847)
!8852 = !DILocation(line: 4340, column: 30, scope: !8847)
!8853 = !DILocation(line: 4340, column: 10, scope: !8848)
!8854 = !DILocation(line: 4341, column: 9, scope: !8847)
!8855 = !DILocation(line: 4342, column: 27, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8848, file: !1, line: 4342, column: 10)
!8857 = !DILocation(line: 4342, column: 10, scope: !8856)
!8858 = !DILocation(line: 4342, column: 16, scope: !8856)
!8859 = !DILocation(line: 4342, column: 23, scope: !8856)
!8860 = !DILocation(line: 4342, column: 30, scope: !8856)
!8861 = !DILocation(line: 4342, column: 10, scope: !8848)
!8862 = !DILocation(line: 4343, column: 24, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8856, file: !1, line: 4342, column: 38)
!8864 = !DILocation(line: 4344, column: 9, scope: !8863)
!8865 = !DILocation(line: 4346, column: 5, scope: !8848)
!8866 = !DILocation(line: 4339, column: 47, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8835, file: !1, discriminator: 4)
!8868 = !DILocation(line: 4339, column: 5, scope: !8867)
!8869 = !DILocation(line: 4350, column: 7, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4350, column: 6)
!8871 = !DILocation(line: 4350, column: 22, scope: !8870)
!8872 = !DILocation(line: 4350, column: 25, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !8870, file: !1, discriminator: 1)
!8874 = !DILocation(line: 4350, column: 72, scope: !8873)
!8875 = !DILocation(line: 4351, column: 8, scope: !8870)
!8876 = !DILocation(line: 4351, column: 23, scope: !8870)
!8877 = !DILocation(line: 4351, column: 26, scope: !8873)
!8878 = !DILocation(line: 4351, column: 32, scope: !8873)
!8879 = !DILocation(line: 4351, column: 36, scope: !8873)
!8880 = !DILocation(line: 4351, column: 65, scope: !8873)
!8881 = !DILocation(line: 4352, column: 7, scope: !8870)
!8882 = !DILocation(line: 4350, column: 6, scope: !8826)
!8883 = !DILocalVariable(name: "path_has_drive", scope: !8884, file: !1, line: 4353, type: !423)
!8884 = distinct !DILexicalBlock(scope: !8870, file: !1, line: 4352, column: 72)
!8885 = !DILocation(line: 4353, column: 10, scope: !8884)
!8886 = !DILocation(line: 4355, column: 8, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 4355, column: 8)
!8888 = !DILocation(line: 4355, column: 8, scope: !8884)
!8889 = !DILocation(line: 4356, column: 19, scope: !8887)
!8890 = !DILocation(line: 4356, column: 25, scope: !8887)
!8891 = !DILocation(line: 4356, column: 32, scope: !8887)
!8892 = !DILocation(line: 4356, column: 59, scope: !8887)
!8893 = !DILocation(line: 4356, column: 12, scope: !8887)
!8894 = !DILocation(line: 4356, column: 10, scope: !8887)
!8895 = !DILocation(line: 4356, column: 7, scope: !8887)
!8896 = !DILocation(line: 4358, column: 19, scope: !8887)
!8897 = !DILocation(line: 4358, column: 25, scope: !8887)
!8898 = !DILocation(line: 4358, column: 32, scope: !8887)
!8899 = !DILocation(line: 4358, column: 47, scope: !8887)
!8900 = !DILocation(line: 4358, column: 12, scope: !8887)
!8901 = !DILocation(line: 4358, column: 10, scope: !8887)
!8902 = !DILocation(line: 4360, column: 8, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 4360, column: 8)
!8904 = !DILocation(line: 4360, column: 11, scope: !8903)
!8905 = !DILocation(line: 4360, column: 8, scope: !8884)
!8906 = !DILocation(line: 4361, column: 13, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !1, line: 4360, column: 17)
!8908 = !DILocation(line: 4361, column: 7, scope: !8907)
!8909 = !DILocation(line: 4362, column: 7, scope: !8907)
!8910 = !DILocation(line: 4365, column: 8, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 4365, column: 8)
!8912 = !DILocation(line: 4365, column: 23, scope: !8911)
!8913 = !DILocation(line: 4365, column: 26, scope: !8914)
!8914 = !DILexicalBlockFile(scope: !8911, file: !1, discriminator: 1)
!8915 = !DILocation(line: 4365, column: 34, scope: !8914)
!8916 = !DILocation(line: 4365, column: 41, scope: !8914)
!8917 = !DILocation(line: 4365, column: 44, scope: !8918)
!8918 = !DILexicalBlockFile(scope: !8911, file: !1, discriminator: 2)
!8919 = !DILocation(line: 4365, column: 52, scope: !8918)
!8920 = !DILocation(line: 4365, column: 8, scope: !8918)
!8921 = !DILocation(line: 4373, column: 15, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8911, file: !1, line: 4365, column: 60)
!8923 = !DILocation(line: 4373, column: 21, scope: !8922)
!8924 = !DILocation(line: 4373, column: 26, scope: !8922)
!8925 = !DILocation(line: 4373, column: 38, scope: !8922)
!8926 = !DILocation(line: 4373, column: 43, scope: !8922)
!8927 = !DILocation(line: 4373, column: 31, scope: !8922)
!8928 = !DILocation(line: 4373, column: 47, scope: !8922)
!8929 = !DILocation(line: 4373, column: 7, scope: !8930)
!8930 = !DILexicalBlockFile(scope: !8922, file: !1, discriminator: 1)
!8931 = !DILocation(line: 4374, column: 5, scope: !8922)
!8932 = !DILocation(line: 4378, column: 31, scope: !8884)
!8933 = !DILocation(line: 4378, column: 28, scope: !8884)
!8934 = !DILocation(line: 4378, column: 39, scope: !8884)
!8935 = !DILocation(line: 4378, column: 42, scope: !8936)
!8936 = !DILexicalBlockFile(scope: !8884, file: !1, discriminator: 1)
!8937 = !DILocation(line: 4378, column: 50, scope: !8936)
!8938 = !DILocation(line: 4378, column: 58, scope: !8936)
!8939 = !DILocation(line: 4379, column: 31, scope: !8884)
!8940 = !DILocation(line: 4379, column: 28, scope: !8884)
!8941 = !DILocation(line: 4379, column: 39, scope: !8884)
!8942 = !DILocation(line: 4379, column: 42, scope: !8936)
!8943 = !DILocation(line: 4379, column: 50, scope: !8936)
!8944 = !DILocation(line: 4379, column: 59, scope: !8936)
!8945 = !DILocation(line: 4379, column: 62, scope: !8946)
!8946 = !DILexicalBlockFile(scope: !8884, file: !1, discriminator: 2)
!8947 = !DILocation(line: 4379, column: 70, scope: !8946)
!8948 = !DILocation(line: 4378, column: 20, scope: !8946)
!8949 = !DILocation(line: 4386, column: 8, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 4386, column: 8)
!8951 = !DILocation(line: 4386, column: 16, scope: !8950)
!8952 = !DILocation(line: 4386, column: 23, scope: !8950)
!8953 = !DILocation(line: 4386, column: 27, scope: !8954)
!8954 = !DILexicalBlockFile(scope: !8950, file: !1, discriminator: 1)
!8955 = !DILocation(line: 4386, column: 8, scope: !8954)
!8956 = !DILocalVariable(name: "ptr", scope: !8957, file: !1, line: 4389, type: !500)
!8957 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 4386, column: 43)
!8958 = !DILocation(line: 4389, column: 13, scope: !8957)
!8959 = !DILocation(line: 4390, column: 11, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 4390, column: 10)
!8961 = !DILocation(line: 4390, column: 43, scope: !8960)
!8962 = !DILocation(line: 4391, column: 11, scope: !8960)
!8963 = !DILocation(line: 4390, column: 10, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !8957, file: !1, discriminator: 1)
!8965 = !DILocation(line: 4392, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8960, file: !1, line: 4391, column: 44)
!8967 = !DILocation(line: 4392, column: 9, scope: !8966)
!8968 = !DILocation(line: 4394, column: 9, scope: !8966)
!8969 = !DILocation(line: 4396, column: 14, scope: !8957)
!8970 = !DILocation(line: 4396, column: 11, scope: !8957)
!8971 = !DILocation(line: 4413, column: 17, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 4413, column: 10)
!8973 = !DILocation(line: 4413, column: 14, scope: !8972)
!8974 = !DILocation(line: 4413, column: 10, scope: !8957)
!8975 = !DILocation(line: 4416, column: 12, scope: !8972)
!8976 = !DILocation(line: 4416, column: 9, scope: !8972)
!8977 = !DILocation(line: 4419, column: 15, scope: !8957)
!8978 = !DILocation(line: 4419, column: 21, scope: !8957)
!8979 = !DILocation(line: 4419, column: 33, scope: !8957)
!8980 = !DILocation(line: 4419, column: 26, scope: !8957)
!8981 = !DILocation(line: 4419, column: 37, scope: !8957)
!8982 = !DILocation(line: 4419, column: 7, scope: !8964)
!8983 = !DILocation(line: 4421, column: 33, scope: !8957)
!8984 = !DILocation(line: 4421, column: 30, scope: !8957)
!8985 = !DILocation(line: 4421, column: 41, scope: !8957)
!8986 = !DILocation(line: 4421, column: 44, scope: !8964)
!8987 = !DILocation(line: 4421, column: 52, scope: !8964)
!8988 = !DILocation(line: 4421, column: 60, scope: !8964)
!8989 = !DILocation(line: 4422, column: 33, scope: !8957)
!8990 = !DILocation(line: 4422, column: 30, scope: !8957)
!8991 = !DILocation(line: 4422, column: 41, scope: !8957)
!8992 = !DILocation(line: 4422, column: 44, scope: !8964)
!8993 = !DILocation(line: 4422, column: 52, scope: !8964)
!8994 = !DILocation(line: 4422, column: 61, scope: !8964)
!8995 = !DILocation(line: 4422, column: 64, scope: !8996)
!8996 = !DILexicalBlockFile(scope: !8957, file: !1, discriminator: 2)
!8997 = !DILocation(line: 4422, column: 72, scope: !8996)
!8998 = !DILocation(line: 4421, column: 22, scope: !8996)
!8999 = !DILocation(line: 4423, column: 5, scope: !8957)
!9000 = !DILocation(line: 4426, column: 8, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 4426, column: 8)
!9002 = !DILocation(line: 4426, column: 8, scope: !8884)
!9003 = !DILocation(line: 4427, column: 13, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9001, file: !1, line: 4426, column: 24)
!9005 = !DILocation(line: 4427, column: 7, scope: !9004)
!9006 = !DILocation(line: 4428, column: 7, scope: !9004)
!9007 = !DILocation(line: 4432, column: 12, scope: !8884)
!9008 = !DILocation(line: 4433, column: 3, scope: !8884)
!9009 = !DILocalVariable(name: "slashbuf", scope: !9010, file: !1, line: 4436, type: !9011)
!9010 = distinct !DILexicalBlock(scope: !8870, file: !1, line: 4434, column: 8)
!9011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 32, align: 8, elements: !2250)
!9012 = !DILocation(line: 4436, column: 10, scope: !9010)
!9013 = !DILocation(line: 4437, column: 5, scope: !9010)
!9014 = !DILocation(line: 4437, column: 12, scope: !9010)
!9015 = !DILocation(line: 4439, column: 17, scope: !9010)
!9016 = !DILocation(line: 4439, column: 23, scope: !9010)
!9017 = !DILocation(line: 4439, column: 30, scope: !9010)
!9018 = !DILocation(line: 4441, column: 17, scope: !9010)
!9019 = !DILocation(line: 4441, column: 27, scope: !9010)
!9020 = !DILocation(line: 4441, column: 37, scope: !9010)
!9021 = !DILocation(line: 4441, column: 43, scope: !9010)
!9022 = !DILocation(line: 4441, column: 48, scope: !9010)
!9023 = !DILocation(line: 4441, column: 54, scope: !9010)
!9024 = !DILocation(line: 4439, column: 10, scope: !9010)
!9025 = !DILocation(line: 4439, column: 8, scope: !9010)
!9026 = !DILocation(line: 4442, column: 13, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9010, file: !1, line: 4442, column: 8)
!9028 = !DILocation(line: 4442, column: 10, scope: !9027)
!9029 = !DILocation(line: 4442, column: 8, scope: !9010)
!9030 = !DILocation(line: 4443, column: 13, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9027, file: !1, line: 4442, column: 17)
!9032 = !DILocation(line: 4443, column: 7, scope: !9031)
!9033 = !DILocation(line: 4444, column: 7, scope: !9031)
!9034 = !DILocation(line: 4446, column: 12, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9010, file: !1, line: 4446, column: 8)
!9036 = !DILocation(line: 4446, column: 10, scope: !9035)
!9037 = !DILocation(line: 4446, column: 8, scope: !9010)
!9038 = !DILocation(line: 4452, column: 19, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !1, line: 4446, column: 16)
!9040 = !DILocation(line: 4452, column: 25, scope: !9039)
!9041 = !DILocation(line: 4452, column: 32, scope: !9039)
!9042 = !DILocation(line: 4452, column: 56, scope: !9039)
!9043 = !DILocation(line: 4452, column: 62, scope: !9039)
!9044 = !DILocation(line: 4452, column: 67, scope: !9039)
!9045 = !DILocation(line: 4452, column: 73, scope: !9039)
!9046 = !DILocation(line: 4452, column: 12, scope: !9039)
!9047 = !DILocation(line: 4452, column: 10, scope: !9039)
!9048 = !DILocation(line: 4453, column: 14, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9039, file: !1, line: 4453, column: 10)
!9050 = !DILocation(line: 4453, column: 12, scope: !9049)
!9051 = !DILocation(line: 4453, column: 10, scope: !9039)
!9052 = !DILocation(line: 4463, column: 17, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !1, line: 4462, column: 9)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !1, line: 4453, column: 18)
!9055 = !DILocation(line: 4463, column: 11, scope: !9053)
!9056 = !DILocation(line: 4464, column: 11, scope: !9053)
!9057 = !DILocation(line: 4475, column: 16, scope: !9039)
!9058 = !DILocation(line: 4475, column: 22, scope: !9039)
!9059 = !DILocation(line: 4475, column: 26, scope: !9039)
!9060 = !DILocation(line: 4475, column: 14, scope: !9039)
!9061 = !DILocation(line: 4476, column: 11, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9039, file: !1, line: 4476, column: 10)
!9063 = !DILocation(line: 4476, column: 10, scope: !9039)
!9064 = !DILocation(line: 4479, column: 12, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !1, line: 4479, column: 12)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !1, line: 4476, column: 19)
!9067 = !DILocation(line: 4479, column: 12, scope: !9066)
!9068 = !DILocation(line: 4480, column: 18, scope: !9065)
!9069 = !DILocation(line: 4480, column: 11, scope: !9065)
!9070 = !DILocation(line: 4481, column: 17, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9065, file: !1, line: 4481, column: 17)
!9072 = !DILocation(line: 4481, column: 17, scope: !9065)
!9073 = !DILocation(line: 4482, column: 18, scope: !9071)
!9074 = !DILocation(line: 4482, column: 11, scope: !9071)
!9075 = !DILocation(line: 4483, column: 17, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9071, file: !1, line: 4483, column: 17)
!9077 = !DILocation(line: 4483, column: 17, scope: !9071)
!9078 = !DILocation(line: 4484, column: 18, scope: !9076)
!9079 = !DILocation(line: 4484, column: 11, scope: !9076)
!9080 = !DILocation(line: 4485, column: 17, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !1, line: 4485, column: 17)
!9082 = !DILocation(line: 4485, column: 17, scope: !9076)
!9083 = !DILocation(line: 4486, column: 18, scope: !9081)
!9084 = !DILocation(line: 4486, column: 11, scope: !9081)
!9085 = !DILocation(line: 4487, column: 17, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9081, file: !1, line: 4487, column: 17)
!9087 = !DILocation(line: 4487, column: 17, scope: !9081)
!9088 = !DILocation(line: 4488, column: 18, scope: !9086)
!9089 = !DILocation(line: 4488, column: 11, scope: !9086)
!9090 = !DILocation(line: 4489, column: 17, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9086, file: !1, line: 4489, column: 17)
!9092 = !DILocation(line: 4489, column: 17, scope: !9086)
!9093 = !DILocation(line: 4490, column: 18, scope: !9091)
!9094 = !DILocation(line: 4490, column: 11, scope: !9091)
!9095 = !DILocation(line: 4492, column: 18, scope: !9091)
!9096 = !DILocation(line: 4493, column: 7, scope: !9066)
!9097 = !DILocation(line: 4495, column: 8, scope: !9039)
!9098 = !DILocation(line: 4495, column: 21, scope: !9039)
!9099 = !DILocation(line: 4496, column: 5, scope: !9039)
!9100 = !DILocalVariable(name: "s", scope: !9101, file: !1, line: 4498, type: !347)
!9101 = distinct !DILexicalBlock(scope: !9035, file: !1, line: 4497, column: 10)
!9102 = !DILocation(line: 4498, column: 14, scope: !9101)
!9103 = !DILocation(line: 4498, column: 25, scope: !9101)
!9104 = !DILocation(line: 4498, column: 18, scope: !9101)
!9105 = !DILocation(line: 4499, column: 16, scope: !9101)
!9106 = !DILocation(line: 4499, column: 14, scope: !9101)
!9107 = !DILocation(line: 4500, column: 10, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9101, file: !1, line: 4500, column: 10)
!9109 = !DILocation(line: 4500, column: 12, scope: !9108)
!9110 = !DILocation(line: 4500, column: 10, scope: !9101)
!9111 = !DILocation(line: 4501, column: 15, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9108, file: !1, line: 4500, column: 18)
!9113 = !DILocation(line: 4502, column: 15, scope: !9112)
!9114 = !DILocation(line: 4502, column: 18, scope: !9112)
!9115 = !DILocation(line: 4502, column: 19, scope: !9112)
!9116 = !DILocation(line: 4501, column: 9, scope: !9112)
!9117 = !DILocation(line: 4504, column: 12, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9112, file: !1, line: 4504, column: 12)
!9119 = !DILocation(line: 4504, column: 18, scope: !9118)
!9120 = !DILocation(line: 4504, column: 25, scope: !9118)
!9121 = !DILocation(line: 4504, column: 12, scope: !9112)
!9122 = !DILocation(line: 4505, column: 11, scope: !9118)
!9123 = !DILocation(line: 4508, column: 36, scope: !9112)
!9124 = !DILocation(line: 4508, column: 46, scope: !9112)
!9125 = !DILocation(line: 4508, column: 52, scope: !9112)
!9126 = !DILocation(line: 4508, column: 57, scope: !9112)
!9127 = !DILocation(line: 4508, column: 63, scope: !9112)
!9128 = !DILocation(line: 4507, column: 28, scope: !9112)
!9129 = !DILocation(line: 4507, column: 9, scope: !9112)
!9130 = !DILocation(line: 4507, column: 15, scope: !9112)
!9131 = !DILocation(line: 4507, column: 22, scope: !9112)
!9132 = !DILocation(line: 4507, column: 26, scope: !9112)
!9133 = !DILocation(line: 4509, column: 13, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9112, file: !1, line: 4509, column: 12)
!9135 = !DILocation(line: 4509, column: 19, scope: !9134)
!9136 = !DILocation(line: 4509, column: 26, scope: !9134)
!9137 = !DILocation(line: 4509, column: 12, scope: !9112)
!9138 = !DILocation(line: 4510, column: 11, scope: !9134)
!9139 = !DILocation(line: 4511, column: 9, scope: !9112)
!9140 = !DILocation(line: 4511, column: 15, scope: !9112)
!9141 = !DILocation(line: 4511, column: 22, scope: !9112)
!9142 = !DILocation(line: 4511, column: 32, scope: !9112)
!9143 = !DILocation(line: 4512, column: 7, scope: !9112)
!9144 = !DILocation(line: 4520, column: 15, scope: !2162)
!9145 = !DILocation(line: 4520, column: 21, scope: !2162)
!9146 = !DILocation(line: 4520, column: 26, scope: !2162)
!9147 = !DILocation(line: 4520, column: 8, scope: !2162)
!9148 = !DILocation(line: 4520, column: 6, scope: !2162)
!9149 = !DILocation(line: 4521, column: 6, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4521, column: 6)
!9151 = !DILocation(line: 4521, column: 6, scope: !2162)
!9152 = !DILocation(line: 4522, column: 20, scope: !9150)
!9153 = !DILocation(line: 4522, column: 22, scope: !9150)
!9154 = !DILocation(line: 4522, column: 13, scope: !9150)
!9155 = !DILocation(line: 4522, column: 11, scope: !9150)
!9156 = !DILocation(line: 4522, column: 5, scope: !9150)
!9157 = !DILocation(line: 4524, column: 20, scope: !9150)
!9158 = !DILocation(line: 4524, column: 26, scope: !9150)
!9159 = !DILocation(line: 4524, column: 31, scope: !9150)
!9160 = !DILocation(line: 4524, column: 13, scope: !9150)
!9161 = !DILocation(line: 4524, column: 11, scope: !9150)
!9162 = !DILocation(line: 4526, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4526, column: 6)
!9164 = !DILocation(line: 4526, column: 6, scope: !2162)
!9165 = !DILocalVariable(name: "hostlen", scope: !9166, file: !1, line: 4535, type: !347)
!9166 = distinct !DILexicalBlock(scope: !9163, file: !1, line: 4526, column: 13)
!9167 = !DILocation(line: 4535, column: 12, scope: !9166)
!9168 = !DILocation(line: 4535, column: 29, scope: !9166)
!9169 = !DILocation(line: 4535, column: 22, scope: !9166)
!9170 = !DILocalVariable(name: "pathlen", scope: !9166, file: !1, line: 4536, type: !347)
!9171 = !DILocation(line: 4536, column: 12, scope: !9166)
!9172 = !DILocation(line: 4536, column: 29, scope: !9166)
!9173 = !DILocation(line: 4536, column: 22, scope: !9166)
!9174 = !DILocation(line: 4540, column: 13, scope: !9166)
!9175 = !DILocation(line: 4540, column: 18, scope: !9166)
!9176 = !DILocation(line: 4540, column: 17, scope: !9166)
!9177 = !DILocation(line: 4540, column: 25, scope: !9166)
!9178 = !DILocation(line: 4540, column: 29, scope: !9166)
!9179 = !DILocation(line: 4540, column: 35, scope: !9166)
!9180 = !DILocation(line: 4540, column: 42, scope: !9166)
!9181 = !DILocation(line: 4540, column: 5, scope: !9166)
!9182 = !DILocation(line: 4543, column: 12, scope: !9166)
!9183 = !DILocation(line: 4543, column: 16, scope: !9166)
!9184 = !DILocation(line: 4543, column: 20, scope: !9166)
!9185 = !DILocation(line: 4543, column: 27, scope: !9166)
!9186 = !DILocation(line: 4543, column: 5, scope: !9166)
!9187 = !DILocation(line: 4545, column: 5, scope: !9166)
!9188 = !DILocation(line: 4545, column: 12, scope: !9166)
!9189 = !DILocation(line: 4546, column: 17, scope: !9166)
!9190 = !DILocation(line: 4548, column: 6, scope: !9166)
!9191 = !DILocation(line: 4548, column: 11, scope: !9166)
!9192 = !DILocation(line: 4549, column: 3, scope: !9166)
!9193 = !DILocation(line: 4550, column: 12, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9163, file: !1, line: 4550, column: 11)
!9195 = !DILocation(line: 4550, column: 11, scope: !9163)
!9196 = !DILocation(line: 4552, column: 12, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9194, file: !1, line: 4550, column: 21)
!9198 = !DILocation(line: 4552, column: 5, scope: !9197)
!9199 = !DILocation(line: 4553, column: 17, scope: !9197)
!9200 = !DILocation(line: 4554, column: 3, scope: !9197)
!9201 = !DILocation(line: 4560, column: 6, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4560, column: 6)
!9203 = !DILocation(line: 4560, column: 14, scope: !9202)
!9204 = !DILocation(line: 4560, column: 6, scope: !2162)
!9205 = !DILocation(line: 4564, column: 14, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9202, file: !1, line: 4560, column: 22)
!9207 = !DILocation(line: 4564, column: 23, scope: !9206)
!9208 = !DILocation(line: 4564, column: 36, scope: !9206)
!9209 = !DILocation(line: 4564, column: 29, scope: !9206)
!9210 = !DILocation(line: 4564, column: 41, scope: !9206)
!9211 = !DILocation(line: 4564, column: 5, scope: !9212)
!9212 = !DILexicalBlockFile(scope: !9206, file: !1, discriminator: 1)
!9213 = !DILocation(line: 4565, column: 5, scope: !9206)
!9214 = !DILocation(line: 4565, column: 13, scope: !9206)
!9215 = !DILocation(line: 4566, column: 17, scope: !9206)
!9216 = !DILocation(line: 4567, column: 3, scope: !9206)
!9217 = !DILocation(line: 4568, column: 12, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9202, file: !1, line: 4568, column: 11)
!9219 = !DILocation(line: 4568, column: 18, scope: !9218)
!9220 = !DILocation(line: 4568, column: 22, scope: !9218)
!9221 = !DILocation(line: 4568, column: 11, scope: !9202)
!9222 = !DILocalVariable(name: "newp", scope: !9223, file: !1, line: 4570, type: !500)
!9223 = distinct !DILexicalBlock(scope: !9218, file: !1, line: 4568, column: 34)
!9224 = !DILocation(line: 4570, column: 11, scope: !9223)
!9225 = !DILocation(line: 4570, column: 35, scope: !9223)
!9226 = !DILocation(line: 4570, column: 18, scope: !9223)
!9227 = !DILocation(line: 4571, column: 9, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9223, file: !1, line: 4571, column: 8)
!9229 = !DILocation(line: 4571, column: 8, scope: !9223)
!9230 = !DILocation(line: 4572, column: 7, scope: !9228)
!9231 = !DILocation(line: 4574, column: 15, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9223, file: !1, line: 4574, column: 8)
!9233 = !DILocation(line: 4574, column: 21, scope: !9232)
!9234 = !DILocation(line: 4574, column: 8, scope: !9232)
!9235 = !DILocation(line: 4574, column: 8, scope: !9223)
!9236 = !DILocation(line: 4575, column: 19, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9232, file: !1, line: 4574, column: 28)
!9238 = !DILocation(line: 4576, column: 7, scope: !9237)
!9239 = !DILocation(line: 4577, column: 32, scope: !9237)
!9240 = !DILocation(line: 4577, column: 7, scope: !9237)
!9241 = !DILocation(line: 4577, column: 13, scope: !9237)
!9242 = !DILocation(line: 4577, column: 19, scope: !9237)
!9243 = !DILocation(line: 4577, column: 30, scope: !9237)
!9244 = !DILocation(line: 4578, column: 26, scope: !9237)
!9245 = !DILocation(line: 4578, column: 7, scope: !9237)
!9246 = !DILocation(line: 4578, column: 13, scope: !9237)
!9247 = !DILocation(line: 4578, column: 19, scope: !9237)
!9248 = !DILocation(line: 4578, column: 24, scope: !9237)
!9249 = !DILocation(line: 4579, column: 14, scope: !9237)
!9250 = !DILocation(line: 4579, column: 12, scope: !9237)
!9251 = !DILocation(line: 4580, column: 5, scope: !9237)
!9252 = !DILocation(line: 4582, column: 7, scope: !9232)
!9253 = !DILocation(line: 4583, column: 3, scope: !9223)
!9254 = !DILocation(line: 4591, column: 6, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4591, column: 6)
!9256 = !DILocation(line: 4591, column: 6, scope: !2162)
!9257 = !DILocalVariable(name: "reurl", scope: !9258, file: !1, line: 4592, type: !500)
!9258 = distinct !DILexicalBlock(scope: !9255, file: !1, line: 4591, column: 19)
!9259 = !DILocation(line: 4592, column: 11, scope: !9258)
!9260 = !DILocalVariable(name: "plen", scope: !9258, file: !1, line: 4594, type: !347)
!9261 = !DILocation(line: 4594, column: 12, scope: !9258)
!9262 = !DILocation(line: 4594, column: 26, scope: !9258)
!9263 = !DILocation(line: 4594, column: 19, scope: !9258)
!9264 = !DILocalVariable(name: "urllen", scope: !9258, file: !1, line: 4596, type: !347)
!9265 = !DILocation(line: 4596, column: 12, scope: !9258)
!9266 = !DILocation(line: 4596, column: 28, scope: !9258)
!9267 = !DILocation(line: 4596, column: 34, scope: !9258)
!9268 = !DILocation(line: 4596, column: 41, scope: !9258)
!9269 = !DILocation(line: 4596, column: 21, scope: !9258)
!9270 = !DILocalVariable(name: "prefixlen", scope: !9258, file: !1, line: 4598, type: !347)
!9271 = !DILocation(line: 4598, column: 12, scope: !9258)
!9272 = !DILocation(line: 4598, column: 31, scope: !9258)
!9273 = !DILocation(line: 4598, column: 37, scope: !9258)
!9274 = !DILocation(line: 4598, column: 42, scope: !9258)
!9275 = !DILocation(line: 4598, column: 24, scope: !9258)
!9276 = !DILocation(line: 4600, column: 10, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9258, file: !1, line: 4600, column: 8)
!9278 = !DILocation(line: 4600, column: 9, scope: !9277)
!9279 = !DILocation(line: 4600, column: 8, scope: !9258)
!9280 = !DILocation(line: 4601, column: 27, scope: !9277)
!9281 = !DILocation(line: 4601, column: 20, scope: !9277)
!9282 = !DILocation(line: 4601, column: 35, scope: !9277)
!9283 = !DILocation(line: 4601, column: 17, scope: !9277)
!9284 = !DILocation(line: 4601, column: 7, scope: !9277)
!9285 = !DILocation(line: 4603, column: 13, scope: !9258)
!9286 = !DILocation(line: 4603, column: 11, scope: !9258)
!9287 = !DILocation(line: 4604, column: 9, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9258, file: !1, line: 4604, column: 8)
!9289 = !DILocation(line: 4604, column: 8, scope: !9258)
!9290 = !DILocation(line: 4605, column: 7, scope: !9288)
!9291 = !DILocation(line: 4608, column: 12, scope: !9258)
!9292 = !DILocation(line: 4608, column: 19, scope: !9258)
!9293 = !DILocation(line: 4608, column: 25, scope: !9258)
!9294 = !DILocation(line: 4608, column: 32, scope: !9258)
!9295 = !DILocation(line: 4608, column: 37, scope: !9258)
!9296 = !DILocation(line: 4608, column: 5, scope: !9258)
!9297 = !DILocation(line: 4611, column: 19, scope: !9258)
!9298 = !DILocation(line: 4611, column: 13, scope: !9258)
!9299 = !DILocation(line: 4611, column: 31, scope: !9258)
!9300 = !DILocation(line: 4611, column: 37, scope: !9258)
!9301 = !DILocation(line: 4611, column: 42, scope: !9258)
!9302 = !DILocation(line: 4611, column: 5, scope: !9258)
!9303 = !DILocation(line: 4614, column: 8, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9258, file: !1, line: 4614, column: 8)
!9305 = !DILocation(line: 4614, column: 14, scope: !9304)
!9306 = !DILocation(line: 4614, column: 21, scope: !9304)
!9307 = !DILocation(line: 4614, column: 8, scope: !9258)
!9308 = !DILocation(line: 4615, column: 7, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 4614, column: 32)
!9310 = !DILocation(line: 4615, column: 7, scope: !9311)
!9311 = !DILexicalBlockFile(scope: !9312, file: !1, discriminator: 1)
!9312 = distinct !DILexicalBlock(scope: !9309, file: !1, line: 4615, column: 7)
!9313 = !DILocation(line: 4616, column: 7, scope: !9309)
!9314 = !DILocation(line: 4616, column: 13, scope: !9309)
!9315 = !DILocation(line: 4616, column: 20, scope: !9309)
!9316 = !DILocation(line: 4616, column: 30, scope: !9309)
!9317 = !DILocation(line: 4617, column: 5, scope: !9309)
!9318 = !DILocation(line: 4619, column: 11, scope: !9258)
!9319 = !DILocation(line: 4619, column: 41, scope: !9258)
!9320 = !DILocation(line: 4619, column: 5, scope: !9258)
!9321 = !DILocation(line: 4621, column: 24, scope: !9258)
!9322 = !DILocation(line: 4621, column: 5, scope: !9258)
!9323 = !DILocation(line: 4621, column: 11, scope: !9258)
!9324 = !DILocation(line: 4621, column: 18, scope: !9258)
!9325 = !DILocation(line: 4621, column: 22, scope: !9258)
!9326 = !DILocation(line: 4622, column: 5, scope: !9258)
!9327 = !DILocation(line: 4622, column: 11, scope: !9258)
!9328 = !DILocation(line: 4622, column: 18, scope: !9258)
!9329 = !DILocation(line: 4622, column: 28, scope: !9258)
!9330 = !DILocation(line: 4623, column: 3, scope: !9258)
!9331 = !DILocation(line: 4625, column: 25, scope: !2162)
!9332 = !DILocation(line: 4625, column: 31, scope: !2162)
!9333 = !DILocation(line: 4625, column: 37, scope: !2162)
!9334 = !DILocation(line: 4625, column: 12, scope: !2162)
!9335 = !DILocation(line: 4625, column: 10, scope: !2162)
!9336 = !DILocation(line: 4626, column: 6, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4626, column: 6)
!9338 = !DILocation(line: 4626, column: 6, scope: !2162)
!9339 = !DILocation(line: 4627, column: 12, scope: !9337)
!9340 = !DILocation(line: 4627, column: 5, scope: !9337)
!9341 = !DILocation(line: 4633, column: 28, scope: !2162)
!9342 = !DILocation(line: 4633, column: 34, scope: !2162)
!9343 = !DILocation(line: 4633, column: 40, scope: !2162)
!9344 = !DILocation(line: 4633, column: 47, scope: !2162)
!9345 = !DILocation(line: 4633, column: 56, scope: !2162)
!9346 = !DILocation(line: 4633, column: 12, scope: !2162)
!9347 = !DILocation(line: 4633, column: 10, scope: !2162)
!9348 = !DILocation(line: 4634, column: 6, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4634, column: 6)
!9350 = !DILocation(line: 4634, column: 6, scope: !2162)
!9351 = !DILocation(line: 4635, column: 12, scope: !9349)
!9352 = !DILocation(line: 4635, column: 5, scope: !9349)
!9353 = !DILocation(line: 4637, column: 6, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4637, column: 6)
!9355 = !DILocation(line: 4637, column: 12, scope: !9354)
!9356 = !DILocation(line: 4637, column: 17, scope: !9354)
!9357 = !DILocation(line: 4637, column: 25, scope: !9354)
!9358 = !DILocation(line: 4637, column: 6, scope: !2162)
!9359 = !DILocalVariable(name: "percent", scope: !9360, file: !1, line: 4640, type: !500)
!9360 = distinct !DILexicalBlock(scope: !9354, file: !1, line: 4637, column: 33)
!9361 = !DILocation(line: 4640, column: 11, scope: !9360)
!9362 = !DILocation(line: 4640, column: 28, scope: !9360)
!9363 = !DILocation(line: 4640, column: 34, scope: !9360)
!9364 = !DILocation(line: 4640, column: 39, scope: !9360)
!9365 = !DILocation(line: 4640, column: 21, scope: !9360)
!9366 = !DILocation(line: 4641, column: 8, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9360, file: !1, line: 4641, column: 8)
!9368 = !DILocation(line: 4641, column: 8, scope: !9360)
!9369 = !DILocalVariable(name: "identifier_offset", scope: !9370, file: !1, line: 4642, type: !457)
!9370 = distinct !DILexicalBlock(scope: !9367, file: !1, line: 4641, column: 17)
!9371 = !DILocation(line: 4642, column: 20, scope: !9370)
!9372 = !DILocalVariable(name: "endp", scope: !9370, file: !1, line: 4643, type: !500)
!9373 = !DILocation(line: 4643, column: 13, scope: !9370)
!9374 = !DILocalVariable(name: "scope", scope: !9370, file: !1, line: 4644, type: !349)
!9375 = !DILocation(line: 4644, column: 21, scope: !9370)
!9376 = !DILocation(line: 4645, column: 25, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 4645, column: 10)
!9378 = !DILocation(line: 4645, column: 10, scope: !9377)
!9379 = !DILocation(line: 4645, column: 37, scope: !9377)
!9380 = !DILocation(line: 4645, column: 10, scope: !9370)
!9381 = !DILocation(line: 4646, column: 15, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9377, file: !1, line: 4645, column: 43)
!9383 = !DILocation(line: 4646, column: 9, scope: !9382)
!9384 = !DILocation(line: 4648, column: 27, scope: !9382)
!9385 = !DILocation(line: 4649, column: 7, scope: !9382)
!9386 = !DILocation(line: 4650, column: 23, scope: !9370)
!9387 = !DILocation(line: 4650, column: 33, scope: !9370)
!9388 = !DILocation(line: 4650, column: 31, scope: !9370)
!9389 = !DILocation(line: 4650, column: 15, scope: !9370)
!9390 = !DILocation(line: 4650, column: 13, scope: !9370)
!9391 = !DILocation(line: 4651, column: 11, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9370, file: !1, line: 4651, column: 10)
!9393 = !DILocation(line: 4651, column: 10, scope: !9392)
!9394 = !DILocation(line: 4651, column: 16, scope: !9392)
!9395 = !DILocation(line: 4651, column: 10, scope: !9370)
!9396 = !DILocation(line: 4654, column: 17, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9392, file: !1, line: 4651, column: 24)
!9398 = !DILocation(line: 4654, column: 26, scope: !9397)
!9399 = !DILocation(line: 4654, column: 39, scope: !9397)
!9400 = !DILocation(line: 4654, column: 32, scope: !9397)
!9401 = !DILocation(line: 4654, column: 44, scope: !9397)
!9402 = !DILocation(line: 4654, column: 9, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !9397, file: !1, discriminator: 1)
!9404 = !DILocation(line: 4655, column: 40, scope: !9397)
!9405 = !DILocation(line: 4655, column: 26, scope: !9397)
!9406 = !DILocation(line: 4655, column: 9, scope: !9397)
!9407 = !DILocation(line: 4655, column: 15, scope: !9397)
!9408 = !DILocation(line: 4655, column: 24, scope: !9397)
!9409 = !DILocation(line: 4656, column: 7, scope: !9397)
!9410 = !DILocation(line: 4685, column: 17, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9392, file: !1, line: 4657, column: 12)
!9412 = !DILocation(line: 4685, column: 11, scope: !9411)
!9413 = !DILocation(line: 4687, column: 5, scope: !9370)
!9414 = !DILocation(line: 4688, column: 3, scope: !9360)
!9415 = !DILocation(line: 4690, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4690, column: 6)
!9417 = !DILocation(line: 4690, column: 12, scope: !9416)
!9418 = !DILocation(line: 4690, column: 16, scope: !9416)
!9419 = !DILocation(line: 4690, column: 6, scope: !2162)
!9420 = !DILocation(line: 4692, column: 22, scope: !9416)
!9421 = !DILocation(line: 4692, column: 28, scope: !9416)
!9422 = !DILocation(line: 4692, column: 32, scope: !9416)
!9423 = !DILocation(line: 4692, column: 5, scope: !9416)
!9424 = !DILocation(line: 4692, column: 11, scope: !9416)
!9425 = !DILocation(line: 4692, column: 20, scope: !9416)
!9426 = !DILocation(line: 4697, column: 21, scope: !2162)
!9427 = !DILocation(line: 4697, column: 14, scope: !2162)
!9428 = !DILocation(line: 4697, column: 12, scope: !2162)
!9429 = !DILocation(line: 4698, column: 6, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 4698, column: 6)
!9431 = !DILocation(line: 4698, column: 6, scope: !2162)
!9432 = !DILocation(line: 4699, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !1, line: 4698, column: 16)
!9434 = !DILocation(line: 4699, column: 15, scope: !9433)
!9435 = !DILocation(line: 4704, column: 23, scope: !9433)
!9436 = !DILocation(line: 4704, column: 29, scope: !9433)
!9437 = !DILocation(line: 4704, column: 36, scope: !9433)
!9438 = !DILocation(line: 4704, column: 16, scope: !9433)
!9439 = !DILocation(line: 4704, column: 14, scope: !9433)
!9440 = !DILocation(line: 4705, column: 8, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9433, file: !1, line: 4705, column: 8)
!9442 = !DILocation(line: 4705, column: 8, scope: !9433)
!9443 = !DILocation(line: 4706, column: 8, scope: !9441)
!9444 = !DILocation(line: 4706, column: 17, scope: !9441)
!9445 = !DILocation(line: 4706, column: 7, scope: !9441)
!9446 = !DILocation(line: 4707, column: 3, scope: !9433)
!9447 = !DILocation(line: 4715, column: 3, scope: !2162)
!9448 = !DILocation(line: 4716, column: 1, scope: !2162)
!9449 = !DILocalVariable(name: "conn", arg: 1, scope: !2171, file: !1, line: 5190, type: !262)
!9450 = !DILocation(line: 5190, column: 67, scope: !2171)
!9451 = !DILocalVariable(name: "proxy", scope: !2171, file: !1, line: 5192, type: !500)
!9452 = !DILocation(line: 5192, column: 9, scope: !2171)
!9453 = !DILocalVariable(name: "socksproxy", scope: !2171, file: !1, line: 5193, type: !500)
!9454 = !DILocation(line: 5193, column: 9, scope: !2171)
!9455 = !DILocalVariable(name: "no_proxy", scope: !2171, file: !1, line: 5194, type: !500)
!9456 = !DILocation(line: 5194, column: 9, scope: !2171)
!9457 = !DILocalVariable(name: "result", scope: !2171, file: !1, line: 5195, type: !289)
!9458 = !DILocation(line: 5195, column: 12, scope: !2171)
!9459 = !DILocalVariable(name: "data", scope: !2171, file: !1, line: 5196, type: !256)
!9460 = !DILocation(line: 5196, column: 21, scope: !2171)
!9461 = !DILocation(line: 5196, column: 28, scope: !2171)
!9462 = !DILocation(line: 5196, column: 34, scope: !2171)
!9463 = !DILocation(line: 5201, column: 6, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5201, column: 6)
!9465 = !DILocation(line: 5201, column: 12, scope: !9464)
!9466 = !DILocation(line: 5201, column: 17, scope: !9464)
!9467 = !DILocation(line: 5201, column: 6, scope: !2171)
!9468 = !DILocation(line: 5202, column: 31, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9464, file: !1, line: 5201, column: 36)
!9470 = !DILocation(line: 5202, column: 37, scope: !9469)
!9471 = !DILocation(line: 5202, column: 14, scope: !9469)
!9472 = !DILocation(line: 5202, column: 12, scope: !9469)
!9473 = !DILocation(line: 5203, column: 8, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9469, file: !1, line: 5203, column: 8)
!9475 = !DILocation(line: 5203, column: 8, scope: !9469)
!9476 = !DILocation(line: 5204, column: 7, scope: !9474)
!9477 = !DILocation(line: 5205, column: 3, scope: !9469)
!9478 = !DILocation(line: 5210, column: 6, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5210, column: 6)
!9480 = !DILocation(line: 5210, column: 12, scope: !9479)
!9481 = !DILocation(line: 5210, column: 16, scope: !9479)
!9482 = !DILocation(line: 5210, column: 6, scope: !2171)
!9483 = !DILocation(line: 5211, column: 13, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9479, file: !1, line: 5210, column: 35)
!9485 = !DILocation(line: 5211, column: 11, scope: !9484)
!9486 = !DILocation(line: 5213, column: 16, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9484, file: !1, line: 5213, column: 8)
!9488 = !DILocation(line: 5213, column: 13, scope: !9487)
!9489 = !DILocation(line: 5213, column: 8, scope: !9484)
!9490 = !DILocation(line: 5214, column: 13, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !1, line: 5213, column: 23)
!9492 = !DILocation(line: 5214, column: 7, scope: !9491)
!9493 = !DILocation(line: 5215, column: 14, scope: !9491)
!9494 = !DILocation(line: 5216, column: 7, scope: !9491)
!9495 = !DILocation(line: 5218, column: 3, scope: !9484)
!9496 = !DILocation(line: 5220, column: 6, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5220, column: 6)
!9498 = !DILocation(line: 5220, column: 12, scope: !9497)
!9499 = !DILocation(line: 5220, column: 16, scope: !9497)
!9500 = !DILocation(line: 5220, column: 6, scope: !2171)
!9501 = !DILocation(line: 5221, column: 18, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9497, file: !1, line: 5220, column: 39)
!9503 = !DILocation(line: 5221, column: 16, scope: !9502)
!9504 = !DILocation(line: 5223, column: 16, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9502, file: !1, line: 5223, column: 8)
!9506 = !DILocation(line: 5223, column: 13, scope: !9505)
!9507 = !DILocation(line: 5223, column: 8, scope: !9502)
!9508 = !DILocation(line: 5224, column: 13, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !1, line: 5223, column: 28)
!9510 = !DILocation(line: 5224, column: 7, scope: !9509)
!9511 = !DILocation(line: 5225, column: 14, scope: !9509)
!9512 = !DILocation(line: 5226, column: 7, scope: !9509)
!9513 = !DILocation(line: 5228, column: 3, scope: !9502)
!9514 = !DILocation(line: 5230, column: 14, scope: !2171)
!9515 = !DILocation(line: 5230, column: 12, scope: !2171)
!9516 = !DILocation(line: 5231, column: 7, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5231, column: 6)
!9518 = !DILocation(line: 5231, column: 6, scope: !2171)
!9519 = !DILocation(line: 5232, column: 16, scope: !9517)
!9520 = !DILocation(line: 5232, column: 14, scope: !9517)
!9521 = !DILocation(line: 5232, column: 5, scope: !9517)
!9522 = !DILocation(line: 5234, column: 20, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5234, column: 6)
!9524 = !DILocation(line: 5234, column: 26, scope: !9523)
!9525 = !DILocation(line: 5234, column: 31, scope: !9523)
!9526 = !DILocation(line: 5234, column: 37, scope: !9523)
!9527 = !DILocation(line: 5234, column: 43, scope: !9523)
!9528 = !DILocation(line: 5234, column: 47, scope: !9523)
!9529 = !DILocation(line: 5234, column: 6, scope: !9523)
!9530 = !DILocation(line: 5234, column: 68, scope: !9523)
!9531 = !DILocation(line: 5235, column: 8, scope: !9523)
!9532 = !DILocation(line: 5235, column: 14, scope: !9523)
!9533 = !DILocation(line: 5235, column: 18, scope: !9523)
!9534 = !DILocation(line: 5235, column: 38, scope: !9523)
!9535 = !DILocation(line: 5236, column: 21, scope: !9523)
!9536 = !DILocation(line: 5236, column: 27, scope: !9523)
!9537 = !DILocation(line: 5236, column: 32, scope: !9523)
!9538 = !DILocation(line: 5236, column: 38, scope: !9523)
!9539 = !DILocation(line: 5236, column: 7, scope: !9523)
!9540 = !DILocation(line: 5234, column: 6, scope: !9541)
!9541 = !DILexicalBlockFile(scope: !2171, file: !1, discriminator: 1)
!9542 = !DILocation(line: 5237, column: 5, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9523, file: !1, line: 5236, column: 50)
!9544 = !DILocation(line: 5237, column: 5, scope: !9545)
!9545 = !DILexicalBlockFile(scope: !9546, file: !1, discriminator: 1)
!9546 = distinct !DILexicalBlock(scope: !9543, file: !1, line: 5237, column: 5)
!9547 = !DILocation(line: 5238, column: 5, scope: !9543)
!9548 = !DILocation(line: 5238, column: 5, scope: !9549)
!9549 = !DILexicalBlockFile(scope: !9550, file: !1, discriminator: 1)
!9550 = distinct !DILexicalBlock(scope: !9543, file: !1, line: 5238, column: 5)
!9551 = !DILocation(line: 5239, column: 3, scope: !9543)
!9552 = !DILocation(line: 5240, column: 12, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9523, file: !1, line: 5240, column: 11)
!9554 = !DILocation(line: 5240, column: 18, scope: !9553)
!9555 = !DILocation(line: 5240, column: 22, scope: !9556)
!9556 = !DILexicalBlockFile(scope: !9553, file: !1, discriminator: 1)
!9557 = !DILocation(line: 5240, column: 11, scope: !9556)
!9558 = !DILocation(line: 5243, column: 26, scope: !9553)
!9559 = !DILocation(line: 5243, column: 13, scope: !9553)
!9560 = !DILocation(line: 5243, column: 11, scope: !9553)
!9561 = !DILocation(line: 5243, column: 5, scope: !9553)
!9562 = !DILocation(line: 5248, column: 3, scope: !2171)
!9563 = !DILocation(line: 5248, column: 3, scope: !9564)
!9564 = !DILexicalBlockFile(scope: !9565, file: !1, discriminator: 1)
!9565 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5248, column: 3)
!9566 = !DILocation(line: 5258, column: 6, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5258, column: 6)
!9568 = !DILocation(line: 5258, column: 12, scope: !9567)
!9569 = !DILocation(line: 5258, column: 18, scope: !9570)
!9570 = !DILexicalBlockFile(scope: !9567, file: !1, discriminator: 1)
!9571 = !DILocation(line: 5258, column: 17, scope: !9570)
!9572 = !DILocation(line: 5258, column: 24, scope: !9570)
!9573 = !DILocation(line: 5258, column: 28, scope: !9574)
!9574 = !DILexicalBlockFile(scope: !9567, file: !1, discriminator: 2)
!9575 = !DILocation(line: 5258, column: 34, scope: !9574)
!9576 = !DILocation(line: 5258, column: 43, scope: !9574)
!9577 = !DILocation(line: 5258, column: 49, scope: !9574)
!9578 = !DILocation(line: 5258, column: 6, scope: !9574)
!9579 = !DILocation(line: 5259, column: 5, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9567, file: !1, line: 5258, column: 72)
!9581 = !DILocation(line: 5261, column: 11, scope: !9580)
!9582 = !DILocation(line: 5262, column: 3, scope: !9580)
!9583 = !DILocation(line: 5263, column: 6, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5263, column: 6)
!9585 = !DILocation(line: 5263, column: 17, scope: !9584)
!9586 = !DILocation(line: 5263, column: 23, scope: !9587)
!9587 = !DILexicalBlockFile(scope: !9584, file: !1, discriminator: 1)
!9588 = !DILocation(line: 5263, column: 22, scope: !9587)
!9589 = !DILocation(line: 5263, column: 34, scope: !9587)
!9590 = !DILocation(line: 5264, column: 22, scope: !9584)
!9591 = !DILocation(line: 5264, column: 28, scope: !9584)
!9592 = !DILocation(line: 5264, column: 37, scope: !9584)
!9593 = !DILocation(line: 5264, column: 43, scope: !9584)
!9594 = !DILocation(line: 5263, column: 6, scope: !9595)
!9595 = !DILexicalBlockFile(scope: !2171, file: !1, discriminator: 2)
!9596 = !DILocation(line: 5265, column: 5, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9584, file: !1, line: 5264, column: 66)
!9598 = !DILocation(line: 5267, column: 16, scope: !9597)
!9599 = !DILocation(line: 5268, column: 3, scope: !9597)
!9600 = !DILocation(line: 5275, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5275, column: 6)
!9602 = !DILocation(line: 5275, column: 12, scope: !9601)
!9603 = !DILocation(line: 5275, column: 15, scope: !9604)
!9604 = !DILexicalBlockFile(scope: !9601, file: !1, discriminator: 1)
!9605 = !DILocation(line: 5275, column: 6, scope: !9604)
!9606 = !DILocation(line: 5276, column: 8, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 5276, column: 8)
!9608 = distinct !DILexicalBlock(scope: !9601, file: !1, line: 5275, column: 27)
!9609 = !DILocation(line: 5276, column: 8, scope: !9608)
!9610 = !DILocation(line: 5277, column: 28, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1, line: 5276, column: 15)
!9612 = !DILocation(line: 5277, column: 34, scope: !9611)
!9613 = !DILocation(line: 5277, column: 40, scope: !9611)
!9614 = !DILocation(line: 5277, column: 47, scope: !9611)
!9615 = !DILocation(line: 5277, column: 53, scope: !9611)
!9616 = !DILocation(line: 5277, column: 64, scope: !9611)
!9617 = !DILocation(line: 5277, column: 16, scope: !9611)
!9618 = !DILocation(line: 5277, column: 14, scope: !9611)
!9619 = !DILocation(line: 5278, column: 7, scope: !9611)
!9620 = !DILocation(line: 5278, column: 7, scope: !9621)
!9621 = !DILexicalBlockFile(scope: !9622, file: !1, discriminator: 1)
!9622 = distinct !DILexicalBlock(scope: !9611, file: !1, line: 5278, column: 7)
!9623 = !DILocation(line: 5279, column: 10, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9611, file: !1, line: 5279, column: 10)
!9625 = !DILocation(line: 5279, column: 10, scope: !9611)
!9626 = !DILocation(line: 5280, column: 9, scope: !9624)
!9627 = !DILocation(line: 5281, column: 5, scope: !9611)
!9628 = !DILocation(line: 5283, column: 8, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 5283, column: 8)
!9630 = !DILocation(line: 5283, column: 8, scope: !9608)
!9631 = !DILocation(line: 5284, column: 28, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9629, file: !1, line: 5283, column: 20)
!9633 = !DILocation(line: 5284, column: 34, scope: !9632)
!9634 = !DILocation(line: 5284, column: 40, scope: !9632)
!9635 = !DILocation(line: 5285, column: 28, scope: !9632)
!9636 = !DILocation(line: 5285, column: 34, scope: !9632)
!9637 = !DILocation(line: 5285, column: 46, scope: !9632)
!9638 = !DILocation(line: 5284, column: 16, scope: !9632)
!9639 = !DILocation(line: 5284, column: 14, scope: !9632)
!9640 = !DILocation(line: 5287, column: 7, scope: !9632)
!9641 = !DILocation(line: 5287, column: 7, scope: !9642)
!9642 = !DILexicalBlockFile(scope: !9643, file: !1, discriminator: 1)
!9643 = distinct !DILexicalBlock(scope: !9632, file: !1, line: 5287, column: 7)
!9644 = !DILocation(line: 5288, column: 10, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9632, file: !1, line: 5288, column: 10)
!9646 = !DILocation(line: 5288, column: 10, scope: !9632)
!9647 = !DILocation(line: 5289, column: 9, scope: !9645)
!9648 = !DILocation(line: 5290, column: 5, scope: !9632)
!9649 = !DILocation(line: 5292, column: 8, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 5292, column: 8)
!9651 = !DILocation(line: 5292, column: 14, scope: !9650)
!9652 = !DILocation(line: 5292, column: 25, scope: !9650)
!9653 = !DILocation(line: 5292, column: 30, scope: !9650)
!9654 = !DILocation(line: 5292, column: 8, scope: !9608)
!9655 = !DILocation(line: 5300, column: 12, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9657, file: !1, line: 5300, column: 10)
!9657 = distinct !DILexicalBlock(scope: !9650, file: !1, line: 5292, column: 40)
!9658 = !DILocation(line: 5300, column: 18, scope: !9656)
!9659 = !DILocation(line: 5300, column: 27, scope: !9656)
!9660 = !DILocation(line: 5300, column: 36, scope: !9656)
!9661 = !DILocation(line: 5300, column: 57, scope: !9656)
!9662 = !DILocation(line: 5301, column: 11, scope: !9656)
!9663 = !DILocation(line: 5301, column: 17, scope: !9656)
!9664 = !DILocation(line: 5301, column: 22, scope: !9656)
!9665 = !DILocation(line: 5300, column: 10, scope: !9666)
!9666 = !DILexicalBlockFile(scope: !9657, file: !1, discriminator: 1)
!9667 = !DILocation(line: 5302, column: 9, scope: !9656)
!9668 = !DILocation(line: 5302, column: 15, scope: !9656)
!9669 = !DILocation(line: 5302, column: 23, scope: !9656)
!9670 = !DILocation(line: 5304, column: 7, scope: !9657)
!9671 = !DILocation(line: 5304, column: 13, scope: !9657)
!9672 = !DILocation(line: 5304, column: 18, scope: !9657)
!9673 = !DILocation(line: 5304, column: 28, scope: !9657)
!9674 = !DILocation(line: 5306, column: 5, scope: !9657)
!9675 = !DILocation(line: 5308, column: 7, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9650, file: !1, line: 5307, column: 10)
!9677 = !DILocation(line: 5308, column: 13, scope: !9676)
!9678 = !DILocation(line: 5308, column: 18, scope: !9676)
!9679 = !DILocation(line: 5308, column: 28, scope: !9676)
!9680 = !DILocation(line: 5309, column: 7, scope: !9676)
!9681 = !DILocation(line: 5309, column: 13, scope: !9676)
!9682 = !DILocation(line: 5309, column: 18, scope: !9676)
!9683 = !DILocation(line: 5309, column: 31, scope: !9676)
!9684 = !DILocation(line: 5312, column: 8, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9608, file: !1, line: 5312, column: 8)
!9686 = !DILocation(line: 5312, column: 14, scope: !9685)
!9687 = !DILocation(line: 5312, column: 26, scope: !9685)
!9688 = !DILocation(line: 5312, column: 31, scope: !9685)
!9689 = !DILocation(line: 5312, column: 8, scope: !9608)
!9690 = !DILocation(line: 5313, column: 11, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !1, line: 5313, column: 10)
!9692 = distinct !DILexicalBlock(scope: !9685, file: !1, line: 5312, column: 41)
!9693 = !DILocation(line: 5313, column: 17, scope: !9691)
!9694 = !DILocation(line: 5313, column: 28, scope: !9691)
!9695 = !DILocation(line: 5313, column: 33, scope: !9691)
!9696 = !DILocation(line: 5313, column: 10, scope: !9692)
!9697 = !DILocation(line: 5315, column: 13, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !1, line: 5315, column: 12)
!9699 = distinct !DILexicalBlock(scope: !9691, file: !1, line: 5313, column: 43)
!9700 = !DILocation(line: 5315, column: 19, scope: !9698)
!9701 = !DILocation(line: 5315, column: 31, scope: !9698)
!9702 = !DILocation(line: 5315, column: 12, scope: !9699)
!9703 = !DILocation(line: 5316, column: 36, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9698, file: !1, line: 5315, column: 37)
!9705 = !DILocation(line: 5316, column: 42, scope: !9704)
!9706 = !DILocation(line: 5316, column: 53, scope: !9704)
!9707 = !DILocation(line: 5316, column: 11, scope: !9704)
!9708 = !DILocation(line: 5316, column: 17, scope: !9704)
!9709 = !DILocation(line: 5316, column: 29, scope: !9704)
!9710 = !DILocation(line: 5316, column: 34, scope: !9704)
!9711 = !DILocation(line: 5317, column: 11, scope: !9704)
!9712 = !DILocation(line: 5317, column: 17, scope: !9704)
!9713 = !DILocation(line: 5317, column: 28, scope: !9704)
!9714 = !DILocation(line: 5317, column: 33, scope: !9704)
!9715 = !DILocation(line: 5318, column: 11, scope: !9704)
!9716 = !DILocation(line: 5318, column: 11, scope: !9717)
!9717 = !DILexicalBlockFile(scope: !9718, file: !1, discriminator: 1)
!9718 = distinct !DILexicalBlock(scope: !9704, file: !1, line: 5318, column: 11)
!9719 = !DILocation(line: 5319, column: 38, scope: !9704)
!9720 = !DILocation(line: 5319, column: 44, scope: !9704)
!9721 = !DILocation(line: 5319, column: 55, scope: !9704)
!9722 = !DILocation(line: 5319, column: 11, scope: !9704)
!9723 = !DILocation(line: 5319, column: 17, scope: !9704)
!9724 = !DILocation(line: 5319, column: 29, scope: !9704)
!9725 = !DILocation(line: 5319, column: 36, scope: !9704)
!9726 = !DILocation(line: 5320, column: 11, scope: !9704)
!9727 = !DILocation(line: 5320, column: 17, scope: !9704)
!9728 = !DILocation(line: 5320, column: 28, scope: !9704)
!9729 = !DILocation(line: 5320, column: 35, scope: !9704)
!9730 = !DILocation(line: 5321, column: 9, scope: !9704)
!9731 = !DILocation(line: 5322, column: 7, scope: !9699)
!9732 = !DILocation(line: 5323, column: 7, scope: !9692)
!9733 = !DILocation(line: 5323, column: 13, scope: !9692)
!9734 = !DILocation(line: 5323, column: 18, scope: !9692)
!9735 = !DILocation(line: 5323, column: 29, scope: !9692)
!9736 = !DILocation(line: 5324, column: 5, scope: !9692)
!9737 = !DILocation(line: 5326, column: 7, scope: !9685)
!9738 = !DILocation(line: 5326, column: 13, scope: !9685)
!9739 = !DILocation(line: 5326, column: 18, scope: !9685)
!9740 = !DILocation(line: 5326, column: 29, scope: !9685)
!9741 = !DILocation(line: 5327, column: 3, scope: !9608)
!9742 = !DILocation(line: 5329, column: 5, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9601, file: !1, line: 5328, column: 8)
!9744 = !DILocation(line: 5329, column: 11, scope: !9743)
!9745 = !DILocation(line: 5329, column: 16, scope: !9743)
!9746 = !DILocation(line: 5329, column: 27, scope: !9743)
!9747 = !DILocation(line: 5330, column: 5, scope: !9743)
!9748 = !DILocation(line: 5330, column: 11, scope: !9743)
!9749 = !DILocation(line: 5330, column: 16, scope: !9743)
!9750 = !DILocation(line: 5330, column: 26, scope: !9743)
!9751 = !DILocation(line: 5332, column: 22, scope: !2171)
!9752 = !DILocation(line: 5332, column: 28, scope: !2171)
!9753 = !DILocation(line: 5332, column: 33, scope: !2171)
!9754 = !DILocation(line: 5332, column: 43, scope: !2171)
!9755 = !DILocation(line: 5332, column: 46, scope: !9541)
!9756 = !DILocation(line: 5332, column: 52, scope: !9541)
!9757 = !DILocation(line: 5332, column: 57, scope: !9541)
!9758 = !DILocation(line: 5332, column: 43, scope: !9541)
!9759 = !DILocation(line: 5332, column: 3, scope: !9595)
!9760 = !DILocation(line: 5332, column: 9, scope: !9595)
!9761 = !DILocation(line: 5332, column: 14, scope: !9595)
!9762 = !DILocation(line: 5332, column: 20, scope: !9595)
!9763 = !DILocation(line: 5334, column: 7, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !2171, file: !1, line: 5334, column: 6)
!9765 = !DILocation(line: 5334, column: 13, scope: !9764)
!9766 = !DILocation(line: 5334, column: 18, scope: !9764)
!9767 = !DILocation(line: 5334, column: 6, scope: !2171)
!9768 = !DILocation(line: 5336, column: 5, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !1, line: 5334, column: 25)
!9770 = !DILocation(line: 5336, column: 11, scope: !9769)
!9771 = !DILocation(line: 5336, column: 16, scope: !9769)
!9772 = !DILocation(line: 5336, column: 22, scope: !9769)
!9773 = !DILocation(line: 5337, column: 5, scope: !9769)
!9774 = !DILocation(line: 5337, column: 11, scope: !9769)
!9775 = !DILocation(line: 5337, column: 16, scope: !9769)
!9776 = !DILocation(line: 5337, column: 26, scope: !9769)
!9777 = !DILocation(line: 5338, column: 5, scope: !9769)
!9778 = !DILocation(line: 5338, column: 11, scope: !9769)
!9779 = !DILocation(line: 5338, column: 16, scope: !9769)
!9780 = !DILocation(line: 5338, column: 27, scope: !9769)
!9781 = !DILocation(line: 5339, column: 5, scope: !9769)
!9782 = !DILocation(line: 5339, column: 11, scope: !9769)
!9783 = !DILocation(line: 5339, column: 16, scope: !9769)
!9784 = !DILocation(line: 5339, column: 34, scope: !9769)
!9785 = !DILocation(line: 5340, column: 5, scope: !9769)
!9786 = !DILocation(line: 5340, column: 11, scope: !9769)
!9787 = !DILocation(line: 5340, column: 16, scope: !9769)
!9788 = !DILocation(line: 5340, column: 29, scope: !9769)
!9789 = !DILocation(line: 5341, column: 3, scope: !9769)
!9790 = !DILocation(line: 5334, column: 18, scope: !9791)
!9791 = !DILexicalBlockFile(scope: !9764, file: !1, discriminator: 1)
!9792 = !DILocation(line: 5345, column: 3, scope: !2171)
!9793 = !DILocation(line: 5346, column: 3, scope: !2171)
!9794 = !DILocation(line: 5347, column: 10, scope: !2171)
!9795 = !DILocation(line: 5347, column: 3, scope: !2171)
!9796 = !DILocalVariable(name: "data", arg: 1, scope: !2182, file: !1, line: 5609, type: !256)
!9797 = !DILocation(line: 5609, column: 53, scope: !2182)
!9798 = !DILocalVariable(name: "conn", arg: 2, scope: !2182, file: !1, line: 5610, type: !262)
!9799 = !DILocation(line: 5610, column: 55, scope: !2182)
!9800 = !DILocalVariable(name: "portptr", scope: !2182, file: !1, line: 5612, type: !500)
!9801 = !DILocation(line: 5612, column: 9, scope: !2182)
!9802 = !DILocalVariable(name: "endbracket", scope: !2182, file: !1, line: 5613, type: !501)
!9803 = !DILocation(line: 5613, column: 8, scope: !2182)
!9804 = !DILocation(line: 5618, column: 19, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !2182, file: !1, line: 5618, column: 6)
!9806 = !DILocation(line: 5618, column: 25, scope: !9805)
!9807 = !DILocation(line: 5618, column: 30, scope: !9805)
!9808 = !DILocation(line: 5618, column: 12, scope: !9805)
!9809 = !DILocation(line: 5618, column: 9, scope: !9805)
!9810 = !DILocation(line: 5619, column: 33, scope: !9805)
!9811 = !DILocation(line: 5620, column: 14, scope: !9805)
!9812 = !DILocation(line: 5620, column: 11, scope: !9805)
!9813 = !DILocation(line: 5618, column: 6, scope: !9814)
!9814 = !DILexicalBlockFile(scope: !2182, file: !1, discriminator: 1)
!9815 = !DILocation(line: 5622, column: 5, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9805, file: !1, line: 5620, column: 27)
!9817 = !DILocation(line: 5622, column: 11, scope: !9816)
!9818 = !DILocation(line: 5622, column: 16, scope: !9816)
!9819 = !DILocation(line: 5622, column: 24, scope: !9816)
!9820 = !DILocation(line: 5624, column: 5, scope: !9816)
!9821 = !DILocation(line: 5624, column: 11, scope: !9816)
!9822 = !DILocation(line: 5624, column: 16, scope: !9816)
!9823 = !DILocation(line: 5624, column: 20, scope: !9816)
!9824 = !DILocation(line: 5625, column: 22, scope: !9816)
!9825 = !DILocation(line: 5625, column: 28, scope: !9816)
!9826 = !DILocation(line: 5625, column: 33, scope: !9816)
!9827 = !DILocation(line: 5625, column: 15, scope: !9816)
!9828 = !DILocation(line: 5625, column: 13, scope: !9816)
!9829 = !DILocation(line: 5626, column: 8, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9816, file: !1, line: 5626, column: 8)
!9831 = !DILocation(line: 5626, column: 8, scope: !9816)
!9832 = !DILocation(line: 5627, column: 15, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9830, file: !1, line: 5626, column: 17)
!9834 = !DILocation(line: 5627, column: 18, scope: !9833)
!9835 = !DILocation(line: 5628, column: 18, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9833, file: !1, line: 5628, column: 10)
!9837 = !DILocation(line: 5628, column: 17, scope: !9836)
!9838 = !DILocation(line: 5628, column: 14, scope: !9836)
!9839 = !DILocation(line: 5628, column: 10, scope: !9833)
!9840 = !DILocation(line: 5629, column: 17, scope: !9836)
!9841 = !DILocation(line: 5629, column: 9, scope: !9836)
!9842 = !DILocation(line: 5630, column: 5, scope: !9833)
!9843 = !DILocation(line: 5631, column: 3, scope: !9816)
!9844 = !DILocation(line: 5643, column: 22, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9805, file: !1, line: 5632, column: 8)
!9846 = !DILocation(line: 5643, column: 28, scope: !9845)
!9847 = !DILocation(line: 5643, column: 33, scope: !9845)
!9848 = !DILocation(line: 5643, column: 15, scope: !9845)
!9849 = !DILocation(line: 5643, column: 13, scope: !9845)
!9850 = !DILocation(line: 5646, column: 6, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !2182, file: !1, line: 5646, column: 6)
!9852 = !DILocation(line: 5646, column: 12, scope: !9851)
!9853 = !DILocation(line: 5646, column: 16, scope: !9851)
!9854 = !DILocation(line: 5646, column: 25, scope: !9851)
!9855 = !DILocation(line: 5646, column: 28, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !9851, file: !1, discriminator: 1)
!9857 = !DILocation(line: 5646, column: 34, scope: !9856)
!9858 = !DILocation(line: 5646, column: 40, scope: !9856)
!9859 = !DILocation(line: 5646, column: 6, scope: !9856)
!9860 = !DILocation(line: 5648, column: 41, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9851, file: !1, line: 5646, column: 52)
!9862 = !DILocation(line: 5648, column: 47, scope: !9861)
!9863 = !DILocation(line: 5648, column: 51, scope: !9861)
!9864 = !DILocation(line: 5648, column: 25, scope: !9861)
!9865 = !DILocation(line: 5648, column: 5, scope: !9861)
!9866 = !DILocation(line: 5648, column: 11, scope: !9861)
!9867 = !DILocation(line: 5648, column: 23, scope: !9861)
!9868 = !DILocation(line: 5649, column: 8, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9861, file: !1, line: 5649, column: 8)
!9870 = !DILocation(line: 5649, column: 8, scope: !9861)
!9871 = !DILocation(line: 5650, column: 8, scope: !9869)
!9872 = !DILocation(line: 5650, column: 16, scope: !9869)
!9873 = !DILocation(line: 5650, column: 7, scope: !9869)
!9874 = !DILocation(line: 5652, column: 8, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9861, file: !1, line: 5652, column: 8)
!9876 = !DILocation(line: 5652, column: 14, scope: !9875)
!9877 = !DILocation(line: 5652, column: 19, scope: !9875)
!9878 = !DILocation(line: 5652, column: 8, scope: !9861)
!9879 = !DILocalVariable(name: "url", scope: !9880, file: !1, line: 5654, type: !500)
!9880 = distinct !DILexicalBlock(scope: !9875, file: !1, line: 5652, column: 30)
!9881 = !DILocation(line: 5654, column: 13, scope: !9880)
!9882 = !DILocalVariable(name: "type", scope: !9880, file: !1, line: 5655, type: !9883)
!9883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 96, align: 8, elements: !9884)
!9884 = !{!9885}
!9885 = !DISubrange(count: 12)
!9886 = !DILocation(line: 5655, column: 12, scope: !9880)
!9887 = !DILocation(line: 5657, column: 10, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 5657, column: 10)
!9889 = !DILocation(line: 5657, column: 16, scope: !9888)
!9890 = !DILocation(line: 5657, column: 21, scope: !9888)
!9891 = !DILocation(line: 5657, column: 10, scope: !9880)
!9892 = !DILocation(line: 5658, column: 18, scope: !9888)
!9893 = !DILocation(line: 5659, column: 18, scope: !9888)
!9894 = !DILocation(line: 5659, column: 24, scope: !9888)
!9895 = !DILocation(line: 5659, column: 28, scope: !9888)
!9896 = !DILocation(line: 5659, column: 18, scope: !9897)
!9897 = !DILexicalBlockFile(scope: !9888, file: !1, discriminator: 1)
!9898 = !DILocation(line: 5660, column: 19, scope: !9888)
!9899 = !DILocation(line: 5660, column: 25, scope: !9888)
!9900 = !DILocation(line: 5660, column: 29, scope: !9888)
!9901 = !DILocation(line: 5659, column: 18, scope: !9902)
!9902 = !DILexicalBlockFile(scope: !9888, file: !1, discriminator: 2)
!9903 = !DILocation(line: 5659, column: 18, scope: !9904)
!9904 = !DILexicalBlockFile(scope: !9888, file: !1, discriminator: 3)
!9905 = !DILocation(line: 5658, column: 9, scope: !9897)
!9906 = !DILocation(line: 5667, column: 46, scope: !9880)
!9907 = !DILocation(line: 5667, column: 52, scope: !9880)
!9908 = !DILocation(line: 5667, column: 59, scope: !9880)
!9909 = !DILocation(line: 5668, column: 21, scope: !9880)
!9910 = !DILocation(line: 5668, column: 27, scope: !9880)
!9911 = !DILocation(line: 5668, column: 32, scope: !9880)
!9912 = !DILocation(line: 5668, column: 48, scope: !9880)
!9913 = !DILocation(line: 5668, column: 54, scope: !9880)
!9914 = !DILocation(line: 5668, column: 59, scope: !9880)
!9915 = !DILocation(line: 5669, column: 21, scope: !9880)
!9916 = !DILocation(line: 5669, column: 27, scope: !9880)
!9917 = !DILocation(line: 5669, column: 32, scope: !9880)
!9918 = !DILocation(line: 5669, column: 48, scope: !9880)
!9919 = !DILocation(line: 5669, column: 54, scope: !9880)
!9920 = !DILocation(line: 5670, column: 21, scope: !9880)
!9921 = !DILocation(line: 5670, column: 27, scope: !9880)
!9922 = !DILocation(line: 5670, column: 33, scope: !9880)
!9923 = !DILocation(line: 5670, column: 55, scope: !9880)
!9924 = !DILocation(line: 5670, column: 61, scope: !9880)
!9925 = !DILocation(line: 5670, column: 67, scope: !9880)
!9926 = !DILocation(line: 5671, column: 21, scope: !9880)
!9927 = !DILocation(line: 5667, column: 13, scope: !9880)
!9928 = !DILocation(line: 5667, column: 11, scope: !9880)
!9929 = !DILocation(line: 5672, column: 11, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 5672, column: 10)
!9931 = !DILocation(line: 5672, column: 10, scope: !9880)
!9932 = !DILocation(line: 5673, column: 9, scope: !9930)
!9933 = !DILocation(line: 5675, column: 10, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9880, file: !1, line: 5675, column: 10)
!9935 = !DILocation(line: 5675, column: 16, scope: !9934)
!9936 = !DILocation(line: 5675, column: 23, scope: !9934)
!9937 = !DILocation(line: 5675, column: 10, scope: !9880)
!9938 = !DILocation(line: 5676, column: 9, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9934, file: !1, line: 5675, column: 34)
!9940 = !DILocation(line: 5676, column: 9, scope: !9941)
!9941 = !DILexicalBlockFile(scope: !9942, file: !1, discriminator: 1)
!9942 = distinct !DILexicalBlock(scope: !9939, file: !1, line: 5676, column: 9)
!9943 = !DILocation(line: 5677, column: 9, scope: !9939)
!9944 = !DILocation(line: 5677, column: 15, scope: !9939)
!9945 = !DILocation(line: 5677, column: 22, scope: !9939)
!9946 = !DILocation(line: 5677, column: 32, scope: !9939)
!9947 = !DILocation(line: 5678, column: 7, scope: !9939)
!9948 = !DILocation(line: 5680, column: 26, scope: !9880)
!9949 = !DILocation(line: 5680, column: 7, scope: !9880)
!9950 = !DILocation(line: 5680, column: 13, scope: !9880)
!9951 = !DILocation(line: 5680, column: 20, scope: !9880)
!9952 = !DILocation(line: 5680, column: 24, scope: !9880)
!9953 = !DILocation(line: 5681, column: 7, scope: !9880)
!9954 = !DILocation(line: 5681, column: 13, scope: !9880)
!9955 = !DILocation(line: 5681, column: 20, scope: !9880)
!9956 = !DILocation(line: 5681, column: 30, scope: !9880)
!9957 = !DILocation(line: 5682, column: 5, scope: !9880)
!9958 = !DILocation(line: 5683, column: 3, scope: !9861)
!9959 = !DILocation(line: 5684, column: 11, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9851, file: !1, line: 5684, column: 11)
!9961 = !DILocation(line: 5684, column: 11, scope: !9851)
!9962 = !DILocalVariable(name: "rest", scope: !9963, file: !1, line: 5687, type: !500)
!9963 = distinct !DILexicalBlock(scope: !9960, file: !1, line: 5684, column: 20)
!9964 = !DILocation(line: 5687, column: 11, scope: !9963)
!9965 = !DILocalVariable(name: "port", scope: !9963, file: !1, line: 5688, type: !379)
!9966 = !DILocation(line: 5688, column: 10, scope: !9963)
!9967 = !DILocation(line: 5690, column: 17, scope: !9963)
!9968 = !DILocation(line: 5690, column: 24, scope: !9963)
!9969 = !DILocation(line: 5690, column: 10, scope: !9963)
!9970 = !DILocation(line: 5690, column: 9, scope: !9963)
!9971 = !DILocation(line: 5692, column: 9, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9963, file: !1, line: 5692, column: 8)
!9973 = !DILocation(line: 5692, column: 14, scope: !9972)
!9974 = !DILocation(line: 5692, column: 19, scope: !9972)
!9975 = !DILocation(line: 5692, column: 23, scope: !9976)
!9976 = !DILexicalBlockFile(scope: !9972, file: !1, discriminator: 1)
!9977 = !DILocation(line: 5692, column: 28, scope: !9976)
!9978 = !DILocation(line: 5692, column: 8, scope: !9976)
!9979 = !DILocation(line: 5694, column: 13, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9972, file: !1, line: 5692, column: 39)
!9981 = !DILocation(line: 5694, column: 7, scope: !9980)
!9982 = !DILocation(line: 5695, column: 7, scope: !9980)
!9983 = !DILocation(line: 5698, column: 8, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9963, file: !1, line: 5698, column: 8)
!9985 = !DILocation(line: 5698, column: 8, scope: !9963)
!9986 = !DILocation(line: 5699, column: 13, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9984, file: !1, line: 5698, column: 17)
!9988 = !DILocation(line: 5699, column: 50, scope: !9987)
!9989 = !DILocation(line: 5699, column: 7, scope: !9987)
!9990 = !DILocation(line: 5700, column: 7, scope: !9987)
!9991 = !DILocation(line: 5703, column: 8, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9963, file: !1, line: 5703, column: 8)
!9993 = !DILocation(line: 5703, column: 17, scope: !9992)
!9994 = !DILocation(line: 5703, column: 13, scope: !9992)
!9995 = !DILocation(line: 5703, column: 8, scope: !9963)
!9996 = !DILocation(line: 5704, column: 8, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !1, line: 5703, column: 29)
!9998 = !DILocation(line: 5704, column: 16, scope: !9997)
!9999 = !DILocation(line: 5705, column: 40, scope: !9997)
!10000 = !DILocation(line: 5705, column: 27, scope: !9997)
!10001 = !DILocation(line: 5705, column: 7, scope: !9997)
!10002 = !DILocation(line: 5705, column: 13, scope: !9997)
!10003 = !DILocation(line: 5705, column: 25, scope: !9997)
!10004 = !DILocation(line: 5706, column: 5, scope: !9997)
!10005 = !DILocation(line: 5711, column: 8, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9992, file: !1, line: 5707, column: 10)
!10007 = !DILocation(line: 5711, column: 16, scope: !10006)
!10008 = !DILocation(line: 5713, column: 3, scope: !9963)
!10009 = !DILocation(line: 5717, column: 6, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !2182, file: !1, line: 5717, column: 6)
!10011 = !DILocation(line: 5717, column: 12, scope: !10010)
!10012 = !DILocation(line: 5717, column: 24, scope: !10010)
!10013 = !DILocation(line: 5717, column: 6, scope: !2182)
!10014 = !DILocation(line: 5718, column: 41, scope: !10010)
!10015 = !DILocation(line: 5718, column: 47, scope: !10010)
!10016 = !DILocation(line: 5718, column: 54, scope: !10010)
!10017 = !DILocation(line: 5718, column: 25, scope: !10010)
!10018 = !DILocation(line: 5718, column: 5, scope: !10010)
!10019 = !DILocation(line: 5718, column: 11, scope: !10010)
!10020 = !DILocation(line: 5718, column: 23, scope: !10010)
!10021 = !DILocation(line: 5720, column: 3, scope: !2182)
!10022 = !DILocation(line: 5721, column: 1, scope: !2182)
!10023 = !DILocalVariable(name: "data", arg: 1, scope: !2183, file: !1, line: 5727, type: !256)
!10024 = !DILocation(line: 5727, column: 50, scope: !2183)
!10025 = !DILocalVariable(name: "conn", arg: 2, scope: !2183, file: !1, line: 5728, type: !262)
!10026 = !DILocation(line: 5728, column: 52, scope: !2183)
!10027 = !DILocalVariable(name: "userp", arg: 3, scope: !2183, file: !1, line: 5729, type: !1562)
!10028 = !DILocation(line: 5729, column: 39, scope: !2183)
!10029 = !DILocalVariable(name: "passwdp", arg: 4, scope: !2183, file: !1, line: 5729, type: !1562)
!10030 = !DILocation(line: 5729, column: 53, scope: !2183)
!10031 = !DILocalVariable(name: "optionsp", arg: 5, scope: !2183, file: !1, line: 5729, type: !1562)
!10032 = !DILocation(line: 5729, column: 69, scope: !2183)
!10033 = !DILocation(line: 5731, column: 6, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 5731, column: 6)
!10035 = !DILocation(line: 5731, column: 12, scope: !10034)
!10036 = !DILocation(line: 5731, column: 16, scope: !10034)
!10037 = !DILocation(line: 5731, column: 6, scope: !2183)
!10038 = !DILocation(line: 5732, column: 5, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !1, line: 5731, column: 38)
!10040 = !DILocation(line: 5733, column: 14, scope: !10039)
!10041 = !DILocation(line: 5733, column: 6, scope: !10039)
!10042 = !DILocation(line: 5733, column: 12, scope: !10039)
!10043 = !DILocation(line: 5734, column: 10, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10039, file: !1, line: 5734, column: 8)
!10045 = !DILocation(line: 5734, column: 9, scope: !10044)
!10046 = !DILocation(line: 5734, column: 8, scope: !10039)
!10047 = !DILocation(line: 5735, column: 7, scope: !10044)
!10048 = !DILocation(line: 5736, column: 3, scope: !10039)
!10049 = !DILocation(line: 5738, column: 6, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 5738, column: 6)
!10051 = !DILocation(line: 5738, column: 12, scope: !10050)
!10052 = !DILocation(line: 5738, column: 16, scope: !10050)
!10053 = !DILocation(line: 5738, column: 6, scope: !2183)
!10054 = !DILocation(line: 5739, column: 5, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10050, file: !1, line: 5738, column: 38)
!10056 = !DILocation(line: 5740, column: 16, scope: !10055)
!10057 = !DILocation(line: 5740, column: 6, scope: !10055)
!10058 = !DILocation(line: 5740, column: 14, scope: !10055)
!10059 = !DILocation(line: 5741, column: 10, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10055, file: !1, line: 5741, column: 8)
!10061 = !DILocation(line: 5741, column: 9, scope: !10060)
!10062 = !DILocation(line: 5741, column: 8, scope: !10055)
!10063 = !DILocation(line: 5742, column: 7, scope: !10060)
!10064 = !DILocation(line: 5743, column: 3, scope: !10055)
!10065 = !DILocation(line: 5745, column: 6, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 5745, column: 6)
!10067 = !DILocation(line: 5745, column: 12, scope: !10066)
!10068 = !DILocation(line: 5745, column: 16, scope: !10066)
!10069 = !DILocation(line: 5745, column: 6, scope: !2183)
!10070 = !DILocation(line: 5746, column: 5, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10066, file: !1, line: 5745, column: 37)
!10072 = !DILocation(line: 5747, column: 17, scope: !10071)
!10073 = !DILocation(line: 5747, column: 6, scope: !10071)
!10074 = !DILocation(line: 5747, column: 15, scope: !10071)
!10075 = !DILocation(line: 5748, column: 10, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10071, file: !1, line: 5748, column: 8)
!10077 = !DILocation(line: 5748, column: 9, scope: !10076)
!10078 = !DILocation(line: 5748, column: 8, scope: !10071)
!10079 = !DILocation(line: 5749, column: 7, scope: !10076)
!10080 = !DILocation(line: 5750, column: 3, scope: !10071)
!10081 = !DILocation(line: 5752, column: 3, scope: !2183)
!10082 = !DILocation(line: 5752, column: 9, scope: !2183)
!10083 = !DILocation(line: 5752, column: 14, scope: !2183)
!10084 = !DILocation(line: 5752, column: 20, scope: !2183)
!10085 = !DILocation(line: 5753, column: 6, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 5753, column: 6)
!10087 = !DILocation(line: 5753, column: 12, scope: !10086)
!10088 = !DILocation(line: 5753, column: 16, scope: !10086)
!10089 = !DILocation(line: 5753, column: 26, scope: !10086)
!10090 = !DILocation(line: 5753, column: 6, scope: !2183)
!10091 = !DILocalVariable(name: "ret", scope: !10092, file: !1, line: 5754, type: !316)
!10092 = distinct !DILexicalBlock(scope: !10086, file: !1, line: 5753, column: 49)
!10093 = !DILocation(line: 5754, column: 9, scope: !10092)
!10094 = !DILocation(line: 5754, column: 31, scope: !10092)
!10095 = !DILocation(line: 5754, column: 37, scope: !10092)
!10096 = !DILocation(line: 5754, column: 42, scope: !10092)
!10097 = !DILocation(line: 5755, column: 31, scope: !10092)
!10098 = !DILocation(line: 5755, column: 38, scope: !10092)
!10099 = !DILocation(line: 5756, column: 31, scope: !10092)
!10100 = !DILocation(line: 5756, column: 37, scope: !10092)
!10101 = !DILocation(line: 5756, column: 41, scope: !10092)
!10102 = !DILocation(line: 5754, column: 15, scope: !10092)
!10103 = !DILocation(line: 5757, column: 8, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10092, file: !1, line: 5757, column: 8)
!10105 = !DILocation(line: 5757, column: 12, scope: !10104)
!10106 = !DILocation(line: 5757, column: 8, scope: !10092)
!10107 = !DILocation(line: 5758, column: 13, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !1, line: 5757, column: 17)
!10109 = !DILocation(line: 5760, column: 13, scope: !10108)
!10110 = !DILocation(line: 5760, column: 19, scope: !10108)
!10111 = !DILocation(line: 5760, column: 24, scope: !10108)
!10112 = !DILocation(line: 5758, column: 7, scope: !10108)
!10113 = !DILocation(line: 5761, column: 5, scope: !10108)
!10114 = !DILocation(line: 5762, column: 13, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10104, file: !1, line: 5762, column: 13)
!10116 = !DILocation(line: 5762, column: 17, scope: !10115)
!10117 = !DILocation(line: 5762, column: 13, scope: !10104)
!10118 = !DILocation(line: 5763, column: 7, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10115, file: !1, line: 5762, column: 22)
!10120 = !DILocation(line: 5769, column: 7, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10115, file: !1, line: 5765, column: 10)
!10122 = !DILocation(line: 5769, column: 13, scope: !10121)
!10123 = !DILocation(line: 5769, column: 18, scope: !10121)
!10124 = !DILocation(line: 5769, column: 24, scope: !10121)
!10125 = !DILocation(line: 5771, column: 7, scope: !10121)
!10126 = !DILocation(line: 5771, column: 13, scope: !10121)
!10127 = !DILocation(line: 5771, column: 18, scope: !10121)
!10128 = !DILocation(line: 5771, column: 30, scope: !10121)
!10129 = !DILocation(line: 5773, column: 3, scope: !10092)
!10130 = !DILocation(line: 5775, column: 3, scope: !2183)
!10131 = !DILocation(line: 5776, column: 1, scope: !2183)
!10132 = !DILocalVariable(name: "conn", arg: 1, scope: !2184, file: !1, line: 5781, type: !262)
!10133 = !DILocation(line: 5781, column: 47, scope: !2184)
!10134 = !DILocalVariable(name: "user", arg: 2, scope: !2184, file: !1, line: 5782, type: !527)
!10135 = !DILocation(line: 5782, column: 39, scope: !2184)
!10136 = !DILocalVariable(name: "passwd", arg: 3, scope: !2184, file: !1, line: 5782, type: !527)
!10137 = !DILocation(line: 5782, column: 57, scope: !2184)
!10138 = !DILocalVariable(name: "options", arg: 4, scope: !2184, file: !1, line: 5783, type: !527)
!10139 = !DILocation(line: 5783, column: 39, scope: !2184)
!10140 = !DILocalVariable(name: "result", scope: !2184, file: !1, line: 5785, type: !289)
!10141 = !DILocation(line: 5785, column: 12, scope: !2184)
!10142 = !DILocation(line: 5788, column: 7, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 5788, column: 6)
!10144 = !DILocation(line: 5788, column: 13, scope: !10143)
!10145 = !DILocation(line: 5788, column: 22, scope: !10143)
!10146 = !DILocation(line: 5788, column: 28, scope: !10143)
!10147 = !DILocation(line: 5788, column: 48, scope: !10143)
!10148 = !DILocation(line: 5788, column: 52, scope: !10149)
!10149 = !DILexicalBlockFile(scope: !10143, file: !1, discriminator: 1)
!10150 = !DILocation(line: 5788, column: 58, scope: !10149)
!10151 = !DILocation(line: 5788, column: 63, scope: !10149)
!10152 = !DILocation(line: 5788, column: 6, scope: !10149)
!10153 = !DILocation(line: 5790, column: 18, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10143, file: !1, line: 5788, column: 76)
!10155 = !DILocation(line: 5790, column: 5, scope: !10154)
!10156 = !DILocation(line: 5790, column: 11, scope: !10154)
!10157 = !DILocation(line: 5790, column: 16, scope: !10154)
!10158 = !DILocation(line: 5793, column: 8, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10154, file: !1, line: 5793, column: 8)
!10160 = !DILocation(line: 5793, column: 14, scope: !10159)
!10161 = !DILocation(line: 5793, column: 8, scope: !10154)
!10162 = !DILocation(line: 5794, column: 22, scope: !10159)
!10163 = !DILocation(line: 5794, column: 7, scope: !10159)
!10164 = !DILocation(line: 5794, column: 13, scope: !10159)
!10165 = !DILocation(line: 5794, column: 20, scope: !10159)
!10166 = !DILocation(line: 5796, column: 7, scope: !10159)
!10167 = !DILocation(line: 5796, column: 13, scope: !10159)
!10168 = !DILocation(line: 5796, column: 20, scope: !10159)
!10169 = !DILocation(line: 5799, column: 3, scope: !10154)
!10170 = !DILocation(line: 5802, column: 18, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10143, file: !1, line: 5800, column: 8)
!10172 = !DILocation(line: 5802, column: 5, scope: !10171)
!10173 = !DILocation(line: 5802, column: 11, scope: !10171)
!10174 = !DILocation(line: 5802, column: 16, scope: !10171)
!10175 = !DILocation(line: 5805, column: 8, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10171, file: !1, line: 5805, column: 8)
!10177 = !DILocation(line: 5805, column: 14, scope: !10176)
!10178 = !DILocation(line: 5805, column: 8, scope: !10171)
!10179 = !DILocation(line: 5806, column: 22, scope: !10176)
!10180 = !DILocation(line: 5806, column: 7, scope: !10176)
!10181 = !DILocation(line: 5806, column: 13, scope: !10176)
!10182 = !DILocation(line: 5806, column: 20, scope: !10176)
!10183 = !DILocation(line: 5808, column: 7, scope: !10176)
!10184 = !DILocation(line: 5808, column: 13, scope: !10176)
!10185 = !DILocation(line: 5808, column: 20, scope: !10176)
!10186 = !DILocation(line: 5811, column: 7, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 5811, column: 6)
!10188 = !DILocation(line: 5811, column: 13, scope: !10187)
!10189 = !DILocation(line: 5811, column: 18, scope: !10187)
!10190 = !DILocation(line: 5811, column: 22, scope: !10191)
!10191 = !DILexicalBlockFile(scope: !10187, file: !1, discriminator: 1)
!10192 = !DILocation(line: 5811, column: 28, scope: !10191)
!10193 = !DILocation(line: 5811, column: 6, scope: !10191)
!10194 = !DILocation(line: 5812, column: 12, scope: !10187)
!10195 = !DILocation(line: 5812, column: 5, scope: !10187)
!10196 = !DILocation(line: 5815, column: 7, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 5815, column: 6)
!10198 = !DILocation(line: 5815, column: 14, scope: !10197)
!10199 = !DILocation(line: 5815, column: 17, scope: !10200)
!10200 = !DILexicalBlockFile(scope: !10197, file: !1, discriminator: 1)
!10201 = !DILocation(line: 5815, column: 6, scope: !10200)
!10202 = !DILocation(line: 5816, column: 21, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10197, file: !1, line: 5815, column: 29)
!10204 = !DILocation(line: 5816, column: 5, scope: !10203)
!10205 = !DILocation(line: 5816, column: 11, scope: !10203)
!10206 = !DILocation(line: 5816, column: 19, scope: !10203)
!10207 = !DILocation(line: 5818, column: 9, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10203, file: !1, line: 5818, column: 8)
!10209 = !DILocation(line: 5818, column: 15, scope: !10208)
!10210 = !DILocation(line: 5818, column: 8, scope: !10203)
!10211 = !DILocation(line: 5819, column: 14, scope: !10208)
!10212 = !DILocation(line: 5819, column: 7, scope: !10208)
!10213 = !DILocation(line: 5820, column: 3, scope: !10203)
!10214 = !DILocation(line: 5822, column: 10, scope: !2184)
!10215 = !DILocation(line: 5822, column: 3, scope: !2184)
!10216 = !DILocalVariable(name: "data", arg: 1, scope: !2187, file: !1, line: 5995, type: !256)
!10217 = !DILocation(line: 5995, column: 58, scope: !2187)
!10218 = !DILocalVariable(name: "conn", arg: 2, scope: !2187, file: !1, line: 5996, type: !262)
!10219 = !DILocation(line: 5996, column: 60, scope: !2187)
!10220 = !DILocalVariable(name: "conn_to_host", arg: 3, scope: !2187, file: !1, line: 5997, type: !817)
!10221 = !DILocation(line: 5997, column: 59, scope: !2187)
!10222 = !DILocalVariable(name: "result", scope: !2187, file: !1, line: 5999, type: !289)
!10223 = !DILocation(line: 5999, column: 12, scope: !2187)
!10224 = !DILocalVariable(name: "host", scope: !2187, file: !1, line: 6000, type: !500)
!10225 = !DILocation(line: 6000, column: 9, scope: !2187)
!10226 = !DILocalVariable(name: "port", scope: !2187, file: !1, line: 6001, type: !316)
!10227 = !DILocation(line: 6001, column: 7, scope: !2187)
!10228 = !DILocation(line: 6003, column: 3, scope: !2187)
!10229 = !DILocation(line: 6003, column: 9, scope: !10230)
!10230 = !DILexicalBlockFile(scope: !2187, file: !1, discriminator: 1)
!10231 = !DILocation(line: 6003, column: 22, scope: !10230)
!10232 = !DILocation(line: 6003, column: 26, scope: !10233)
!10233 = !DILexicalBlockFile(scope: !2187, file: !1, discriminator: 2)
!10234 = !DILocation(line: 6003, column: 31, scope: !10233)
!10235 = !DILocation(line: 6003, column: 34, scope: !10236)
!10236 = !DILexicalBlockFile(scope: !2187, file: !1, discriminator: 3)
!10237 = !DILocation(line: 6003, column: 39, scope: !10236)
!10238 = !DILocation(line: 6003, column: 3, scope: !10239)
!10239 = !DILexicalBlockFile(scope: !2187, file: !1, discriminator: 4)
!10240 = !DILocation(line: 6004, column: 38, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !2187, file: !1, line: 6003, column: 46)
!10242 = !DILocation(line: 6004, column: 44, scope: !10241)
!10243 = !DILocation(line: 6004, column: 50, scope: !10241)
!10244 = !DILocation(line: 6004, column: 64, scope: !10241)
!10245 = !DILocation(line: 6004, column: 14, scope: !10241)
!10246 = !DILocation(line: 6004, column: 12, scope: !10241)
!10247 = !DILocation(line: 6006, column: 8, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10241, file: !1, line: 6006, column: 8)
!10249 = !DILocation(line: 6006, column: 8, scope: !10241)
!10250 = !DILocation(line: 6007, column: 14, scope: !10248)
!10251 = !DILocation(line: 6007, column: 7, scope: !10248)
!10252 = !DILocation(line: 6009, column: 8, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10241, file: !1, line: 6009, column: 8)
!10254 = !DILocation(line: 6009, column: 13, scope: !10253)
!10255 = !DILocation(line: 6009, column: 17, scope: !10256)
!10256 = !DILexicalBlockFile(scope: !10253, file: !1, discriminator: 1)
!10257 = !DILocation(line: 6009, column: 16, scope: !10256)
!10258 = !DILocation(line: 6009, column: 8, scope: !10256)
!10259 = !DILocation(line: 6010, column: 37, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10253, file: !1, line: 6009, column: 23)
!10261 = !DILocation(line: 6010, column: 7, scope: !10260)
!10262 = !DILocation(line: 6010, column: 13, scope: !10260)
!10263 = !DILocation(line: 6010, column: 26, scope: !10260)
!10264 = !DILocation(line: 6010, column: 35, scope: !10260)
!10265 = !DILocation(line: 6011, column: 33, scope: !10260)
!10266 = !DILocation(line: 6011, column: 7, scope: !10260)
!10267 = !DILocation(line: 6011, column: 13, scope: !10260)
!10268 = !DILocation(line: 6011, column: 26, scope: !10260)
!10269 = !DILocation(line: 6011, column: 31, scope: !10260)
!10270 = !DILocation(line: 6012, column: 7, scope: !10260)
!10271 = !DILocation(line: 6012, column: 13, scope: !10260)
!10272 = !DILocation(line: 6012, column: 18, scope: !10260)
!10273 = !DILocation(line: 6012, column: 31, scope: !10260)
!10274 = !DILocation(line: 6014, column: 13, scope: !10260)
!10275 = !DILocation(line: 6014, column: 51, scope: !10260)
!10276 = !DILocation(line: 6014, column: 7, scope: !10260)
!10277 = !DILocation(line: 6015, column: 5, scope: !10260)
!10278 = !DILocation(line: 6018, column: 7, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10253, file: !1, line: 6016, column: 10)
!10280 = !DILocation(line: 6018, column: 13, scope: !10279)
!10281 = !DILocation(line: 6018, column: 18, scope: !10279)
!10282 = !DILocation(line: 6018, column: 31, scope: !10279)
!10283 = !DILocation(line: 6019, column: 7, scope: !10279)
!10284 = !DILocation(line: 6019, column: 7, scope: !10285)
!10285 = !DILexicalBlockFile(scope: !10286, file: !1, discriminator: 1)
!10286 = distinct !DILexicalBlock(scope: !10279, file: !1, line: 6019, column: 7)
!10287 = !DILocation(line: 6022, column: 8, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10241, file: !1, line: 6022, column: 8)
!10289 = !DILocation(line: 6022, column: 13, scope: !10288)
!10290 = !DILocation(line: 6022, column: 8, scope: !10241)
!10291 = !DILocation(line: 6023, column: 28, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10288, file: !1, line: 6022, column: 19)
!10293 = !DILocation(line: 6023, column: 7, scope: !10292)
!10294 = !DILocation(line: 6023, column: 13, scope: !10292)
!10295 = !DILocation(line: 6023, column: 26, scope: !10292)
!10296 = !DILocation(line: 6024, column: 7, scope: !10292)
!10297 = !DILocation(line: 6024, column: 13, scope: !10292)
!10298 = !DILocation(line: 6024, column: 18, scope: !10292)
!10299 = !DILocation(line: 6024, column: 31, scope: !10292)
!10300 = !DILocation(line: 6025, column: 13, scope: !10292)
!10301 = !DILocation(line: 6025, column: 47, scope: !10292)
!10302 = !DILocation(line: 6025, column: 7, scope: !10292)
!10303 = !DILocation(line: 6026, column: 5, scope: !10292)
!10304 = !DILocation(line: 6029, column: 7, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10288, file: !1, line: 6027, column: 10)
!10306 = !DILocation(line: 6029, column: 13, scope: !10305)
!10307 = !DILocation(line: 6029, column: 18, scope: !10305)
!10308 = !DILocation(line: 6029, column: 31, scope: !10305)
!10309 = !DILocation(line: 6030, column: 12, scope: !10305)
!10310 = !DILocation(line: 6033, column: 20, scope: !10241)
!10311 = !DILocation(line: 6033, column: 34, scope: !10241)
!10312 = !DILocation(line: 6033, column: 18, scope: !10241)
!10313 = !DILocation(line: 6003, column: 3, scope: !10314)
!10314 = !DILexicalBlockFile(scope: !2187, file: !1, discriminator: 5)
!10315 = !DILocation(line: 6036, column: 10, scope: !2187)
!10316 = !DILocation(line: 6036, column: 3, scope: !2187)
!10317 = !DILocation(line: 6037, column: 1, scope: !2187)
!10318 = !DILocalVariable(name: "conn", arg: 1, scope: !2196, file: !1, line: 4020, type: !262)
!10319 = !DILocation(line: 4020, column: 46, scope: !2196)
!10320 = !DILocalVariable(name: "host", arg: 2, scope: !2196, file: !1, line: 4020, type: !2156)
!10321 = !DILocation(line: 4020, column: 69, scope: !2196)
!10322 = !DILocalVariable(name: "len", scope: !2196, file: !1, line: 4022, type: !347)
!10323 = !DILocation(line: 4022, column: 10, scope: !2196)
!10324 = !DILocalVariable(name: "data", scope: !2196, file: !1, line: 4023, type: !256)
!10325 = !DILocation(line: 4023, column: 21, scope: !2196)
!10326 = !DILocation(line: 4023, column: 28, scope: !2196)
!10327 = !DILocation(line: 4023, column: 34, scope: !2196)
!10328 = !DILocation(line: 4026, column: 9, scope: !2196)
!10329 = !DILocation(line: 4027, column: 9, scope: !2196)
!10330 = !DILocation(line: 4033, column: 20, scope: !2196)
!10331 = !DILocation(line: 4033, column: 26, scope: !2196)
!10332 = !DILocation(line: 4033, column: 3, scope: !2196)
!10333 = !DILocation(line: 4033, column: 9, scope: !2196)
!10334 = !DILocation(line: 4033, column: 18, scope: !2196)
!10335 = !DILocation(line: 4035, column: 16, scope: !2196)
!10336 = !DILocation(line: 4035, column: 22, scope: !2196)
!10337 = !DILocation(line: 4035, column: 9, scope: !2196)
!10338 = !DILocation(line: 4035, column: 7, scope: !2196)
!10339 = !DILocation(line: 4036, column: 6, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !2196, file: !1, line: 4036, column: 6)
!10341 = !DILocation(line: 4036, column: 10, scope: !10340)
!10342 = !DILocation(line: 4036, column: 25, scope: !10343)
!10343 = !DILexicalBlockFile(scope: !10340, file: !1, discriminator: 1)
!10344 = !DILocation(line: 4036, column: 28, scope: !10343)
!10345 = !DILocation(line: 4036, column: 14, scope: !10343)
!10346 = !DILocation(line: 4036, column: 20, scope: !10343)
!10347 = !DILocation(line: 4036, column: 32, scope: !10343)
!10348 = !DILocation(line: 4036, column: 6, scope: !10343)
!10349 = !DILocation(line: 4039, column: 16, scope: !10340)
!10350 = !DILocation(line: 4039, column: 19, scope: !10340)
!10351 = !DILocation(line: 4039, column: 5, scope: !10340)
!10352 = !DILocation(line: 4039, column: 11, scope: !10340)
!10353 = !DILocation(line: 4039, column: 22, scope: !10340)
!10354 = !DILocation(line: 4042, column: 21, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !2196, file: !1, line: 4042, column: 6)
!10356 = !DILocation(line: 4042, column: 27, scope: !10355)
!10357 = !DILocation(line: 4042, column: 7, scope: !10355)
!10358 = !DILocation(line: 4042, column: 6, scope: !2196)
!10359 = !DILocation(line: 4075, column: 11, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10355, file: !1, line: 4042, column: 34)
!10361 = !DILocation(line: 4075, column: 5, scope: !10360)
!10362 = !DILocation(line: 4077, column: 3, scope: !10360)
!10363 = !DILocation(line: 4078, column: 1, scope: !2196)
!10364 = !DILocalVariable(name: "conn", arg: 1, scope: !2202, file: !1, line: 4759, type: !262)
!10365 = !DILocation(line: 4759, column: 64, scope: !2202)
!10366 = !DILocalVariable(name: "p", scope: !2202, file: !1, line: 4761, type: !1448)
!10367 = !DILocation(line: 4761, column: 31, scope: !2202)
!10368 = !DILocalVariable(name: "result", scope: !2202, file: !1, line: 4762, type: !289)
!10369 = !DILocation(line: 4762, column: 12, scope: !2202)
!10370 = !DILocalVariable(name: "data", scope: !2202, file: !1, line: 4763, type: !256)
!10371 = !DILocation(line: 4763, column: 21, scope: !2202)
!10372 = !DILocation(line: 4763, column: 28, scope: !2202)
!10373 = !DILocation(line: 4763, column: 34, scope: !2202)
!10374 = !DILocation(line: 4770, column: 27, scope: !2202)
!10375 = !DILocation(line: 4770, column: 3, scope: !2202)
!10376 = !DILocation(line: 4772, column: 11, scope: !2202)
!10377 = !DILocation(line: 4772, column: 17, scope: !2202)
!10378 = !DILocation(line: 4772, column: 3, scope: !2202)
!10379 = !DILocation(line: 4773, column: 3, scope: !2202)
!10380 = !DILocation(line: 4773, column: 9, scope: !2202)
!10381 = !DILocation(line: 4773, column: 13, scope: !2202)
!10382 = !DILocation(line: 4773, column: 25, scope: !2202)
!10383 = !DILocation(line: 4775, column: 3, scope: !2202)
!10384 = !DILocation(line: 4775, column: 9, scope: !2202)
!10385 = !DILocation(line: 4775, column: 18, scope: !2202)
!10386 = !DILocation(line: 4778, column: 7, scope: !2202)
!10387 = !DILocation(line: 4778, column: 13, scope: !2202)
!10388 = !DILocation(line: 4778, column: 5, scope: !2202)
!10389 = !DILocation(line: 4780, column: 6, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 4780, column: 6)
!10391 = !DILocation(line: 4780, column: 9, scope: !10390)
!10392 = !DILocation(line: 4780, column: 6, scope: !2202)
!10393 = !DILocation(line: 4781, column: 16, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10390, file: !1, line: 4780, column: 27)
!10395 = !DILocation(line: 4781, column: 19, scope: !10394)
!10396 = !DILocation(line: 4781, column: 37, scope: !10394)
!10397 = !DILocation(line: 4781, column: 14, scope: !10394)
!10398 = !DILocation(line: 4781, column: 12, scope: !10394)
!10399 = !DILocation(line: 4783, column: 8, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10394, file: !1, line: 4783, column: 8)
!10401 = !DILocation(line: 4783, column: 8, scope: !10394)
!10402 = !DILocation(line: 4784, column: 14, scope: !10400)
!10403 = !DILocation(line: 4784, column: 7, scope: !10400)
!10404 = !DILocation(line: 4786, column: 9, scope: !10394)
!10405 = !DILocation(line: 4786, column: 15, scope: !10394)
!10406 = !DILocation(line: 4786, column: 7, scope: !10394)
!10407 = !DILocation(line: 4787, column: 3, scope: !10394)
!10408 = !DILocation(line: 4789, column: 6, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !2202, file: !1, line: 4789, column: 6)
!10410 = !DILocation(line: 4789, column: 12, scope: !10409)
!10411 = !DILocation(line: 4789, column: 17, scope: !10409)
!10412 = !DILocation(line: 4789, column: 6, scope: !2202)
!10413 = !DILocation(line: 4792, column: 18, scope: !10409)
!10414 = !DILocation(line: 4792, column: 21, scope: !10409)
!10415 = !DILocation(line: 4792, column: 5, scope: !10409)
!10416 = !DILocation(line: 4792, column: 11, scope: !10409)
!10417 = !DILocation(line: 4792, column: 16, scope: !10409)
!10418 = !DILocation(line: 4794, column: 3, scope: !2202)
!10419 = !DILocation(line: 4795, column: 1, scope: !2202)
!10420 = !DILocalVariable(name: "data", arg: 1, scope: !2203, file: !1, line: 4722, type: !256)
!10421 = !DILocation(line: 4722, column: 47, scope: !2203)
!10422 = !DILocalVariable(name: "s", scope: !2203, file: !1, line: 4724, type: !10423)
!10423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!10424 = !DILocation(line: 4724, column: 20, scope: !2203)
!10425 = !DILocation(line: 4724, column: 25, scope: !2203)
!10426 = !DILocation(line: 4724, column: 31, scope: !2203)
!10427 = !DILocation(line: 4725, column: 20, scope: !2203)
!10428 = !DILocation(line: 4725, column: 26, scope: !2203)
!10429 = !DILocation(line: 4725, column: 30, scope: !2203)
!10430 = !DILocation(line: 4725, column: 3, scope: !2203)
!10431 = !DILocation(line: 4725, column: 6, scope: !2203)
!10432 = !DILocation(line: 4725, column: 18, scope: !2203)
!10433 = !DILocation(line: 4726, column: 6, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !2203, file: !1, line: 4726, column: 6)
!10435 = !DILocation(line: 4726, column: 9, scope: !10434)
!10436 = !DILocation(line: 4726, column: 21, scope: !10434)
!10437 = !DILocation(line: 4726, column: 24, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10434, file: !1, discriminator: 1)
!10439 = !DILocation(line: 4726, column: 30, scope: !10438)
!10440 = !DILocation(line: 4726, column: 34, scope: !10438)
!10441 = !DILocation(line: 4726, column: 6, scope: !10438)
!10442 = !DILocation(line: 4727, column: 8, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1, line: 4727, column: 8)
!10444 = distinct !DILexicalBlock(scope: !10434, file: !1, line: 4726, column: 57)
!10445 = !DILocation(line: 4727, column: 11, scope: !10443)
!10446 = !DILocation(line: 4727, column: 8, scope: !10444)
!10447 = !DILocation(line: 4728, column: 7, scope: !10443)
!10448 = !DILocation(line: 4730, column: 8, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10444, file: !1, line: 4730, column: 8)
!10450 = !DILocation(line: 4730, column: 11, scope: !10449)
!10451 = !DILocation(line: 4730, column: 8, scope: !10444)
!10452 = !DILocation(line: 4731, column: 59, scope: !10449)
!10453 = !DILocation(line: 4731, column: 62, scope: !10449)
!10454 = !DILocation(line: 4731, column: 18, scope: !10449)
!10455 = !DILocation(line: 4731, column: 7, scope: !10449)
!10456 = !DILocation(line: 4731, column: 10, scope: !10449)
!10457 = !DILocation(line: 4731, column: 16, scope: !10449)
!10458 = !DILocation(line: 4733, column: 18, scope: !10449)
!10459 = !DILocation(line: 4733, column: 7, scope: !10449)
!10460 = !DILocation(line: 4733, column: 10, scope: !10449)
!10461 = !DILocation(line: 4733, column: 16, scope: !10449)
!10462 = !DILocation(line: 4735, column: 28, scope: !10444)
!10463 = !DILocation(line: 4735, column: 31, scope: !10444)
!10464 = !DILocation(line: 4735, column: 27, scope: !10444)
!10465 = !DILocation(line: 4735, column: 5, scope: !10444)
!10466 = !DILocation(line: 4735, column: 8, scope: !10444)
!10467 = !DILocation(line: 4735, column: 25, scope: !10444)
!10468 = !DILocation(line: 4737, column: 9, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10444, file: !1, line: 4737, column: 8)
!10470 = !DILocation(line: 4737, column: 12, scope: !10469)
!10471 = !DILocation(line: 4737, column: 8, scope: !10444)
!10472 = !DILocation(line: 4738, column: 7, scope: !10469)
!10473 = !DILocation(line: 4741, column: 5, scope: !10444)
!10474 = !DILocation(line: 4741, column: 8, scope: !10444)
!10475 = !DILocation(line: 4741, column: 18, scope: !10444)
!10476 = !DILocation(line: 4742, column: 3, scope: !10444)
!10477 = !DILocation(line: 4744, column: 5, scope: !10434)
!10478 = !DILocation(line: 4744, column: 8, scope: !10434)
!10479 = !DILocation(line: 4744, column: 18, scope: !10434)
!10480 = !DILocation(line: 4746, column: 3, scope: !2203)
!10481 = !DILocation(line: 4747, column: 1, scope: !2203)
!10482 = !DILocalVariable(name: "data", arg: 1, scope: !2204, file: !1, line: 3371, type: !256)
!10483 = !DILocation(line: 3371, column: 54, scope: !2204)
!10484 = !DILocalVariable(name: "now", scope: !2204, file: !1, line: 3373, type: !411)
!10485 = !DILocation(line: 3373, column: 18, scope: !2204)
!10486 = !DILocation(line: 3373, column: 24, scope: !2204)
!10487 = !DILocalVariable(name: "elapsed", scope: !2204, file: !1, line: 3374, type: !599)
!10488 = !DILocation(line: 3374, column: 10, scope: !2204)
!10489 = !DILocation(line: 3374, column: 20, scope: !2204)
!10490 = !DILocation(line: 3376, column: 6, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !2204, file: !1, line: 3376, column: 6)
!10492 = !DILocation(line: 3376, column: 14, scope: !10491)
!10493 = !DILocation(line: 3376, column: 6, scope: !2204)
!10494 = !DILocation(line: 3377, column: 28, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10491, file: !1, line: 3376, column: 24)
!10496 = !DILocation(line: 3377, column: 34, scope: !10495)
!10497 = !DILocation(line: 3377, column: 40, scope: !10495)
!10498 = !DILocation(line: 3377, column: 52, scope: !10495)
!10499 = !DILocation(line: 3377, column: 5, scope: !10495)
!10500 = !DILocation(line: 3379, column: 5, scope: !10495)
!10501 = !DILocation(line: 3379, column: 11, scope: !10495)
!10502 = !DILocation(line: 3379, column: 17, scope: !10495)
!10503 = !DILocation(line: 3379, column: 29, scope: !10495)
!10504 = !DILocation(line: 3379, column: 44, scope: !10495)
!10505 = !DILocation(line: 3380, column: 3, scope: !10495)
!10506 = !DILocation(line: 3381, column: 1, scope: !2204)
!10507 = !DILocalVariable(name: "data", arg: 1, scope: !2214, file: !1, line: 3403, type: !256)
!10508 = !DILocation(line: 3403, column: 36, scope: !2214)
!10509 = !DILocalVariable(name: "needle", arg: 2, scope: !2214, file: !1, line: 3404, type: !262)
!10510 = !DILocation(line: 3404, column: 38, scope: !2214)
!10511 = !DILocalVariable(name: "usethis", arg: 3, scope: !2214, file: !1, line: 3405, type: !2135)
!10512 = !DILocation(line: 3405, column: 39, scope: !2214)
!10513 = !DILocalVariable(name: "force_reuse", arg: 4, scope: !2214, file: !1, line: 3406, type: !1461)
!10514 = !DILocation(line: 3406, column: 24, scope: !2214)
!10515 = !DILocalVariable(name: "waitpipe", arg: 5, scope: !2214, file: !1, line: 3407, type: !1461)
!10516 = !DILocation(line: 3407, column: 24, scope: !2214)
!10517 = !DILocalVariable(name: "check", scope: !2214, file: !1, line: 3409, type: !262)
!10518 = !DILocation(line: 3409, column: 23, scope: !2214)
!10519 = !DILocalVariable(name: "chosen", scope: !2214, file: !1, line: 3410, type: !262)
!10520 = !DILocation(line: 3410, column: 23, scope: !2214)
!10521 = !DILocalVariable(name: "foundPendingCandidate", scope: !2214, file: !1, line: 3411, type: !423)
!10522 = !DILocation(line: 3411, column: 8, scope: !2214)
!10523 = !DILocalVariable(name: "canPipeline", scope: !2214, file: !1, line: 3412, type: !423)
!10524 = !DILocation(line: 3412, column: 8, scope: !2214)
!10525 = !DILocation(line: 3412, column: 43, scope: !2214)
!10526 = !DILocation(line: 3412, column: 49, scope: !2214)
!10527 = !DILocation(line: 3412, column: 22, scope: !2214)
!10528 = !DILocalVariable(name: "bundle", scope: !2214, file: !1, line: 3413, type: !1705)
!10529 = !DILocation(line: 3413, column: 25, scope: !2214)
!10530 = !DILocation(line: 3425, column: 4, scope: !2214)
!10531 = !DILocation(line: 3425, column: 16, scope: !2214)
!10532 = !DILocation(line: 3426, column: 4, scope: !2214)
!10533 = !DILocation(line: 3426, column: 13, scope: !2214)
!10534 = !DILocation(line: 3429, column: 6, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 3429, column: 6)
!10536 = !DILocation(line: 3429, column: 18, scope: !10535)
!10537 = !DILocation(line: 3429, column: 52, scope: !10538)
!10538 = !DILexicalBlockFile(scope: !10535, file: !1, discriminator: 1)
!10539 = !DILocation(line: 3429, column: 58, scope: !10538)
!10540 = !DILocation(line: 3429, column: 21, scope: !10538)
!10541 = !DILocation(line: 3429, column: 6, scope: !10538)
!10542 = !DILocation(line: 3430, column: 17, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10535, file: !1, line: 3429, column: 67)
!10544 = !DILocation(line: 3431, column: 3, scope: !10543)
!10545 = !DILocation(line: 3435, column: 39, scope: !2214)
!10546 = !DILocation(line: 3435, column: 47, scope: !2214)
!10547 = !DILocation(line: 3435, column: 53, scope: !2214)
!10548 = !DILocation(line: 3435, column: 59, scope: !2214)
!10549 = !DILocation(line: 3435, column: 12, scope: !2214)
!10550 = !DILocation(line: 3435, column: 10, scope: !2214)
!10551 = !DILocation(line: 3436, column: 6, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 3436, column: 6)
!10553 = !DILocation(line: 3436, column: 6, scope: !2214)
!10554 = !DILocalVariable(name: "max_pipe_len", scope: !10555, file: !1, line: 3438, type: !347)
!10555 = distinct !DILexicalBlock(scope: !10552, file: !1, line: 3436, column: 14)
!10556 = !DILocation(line: 3438, column: 12, scope: !10555)
!10557 = !DILocation(line: 3438, column: 28, scope: !10555)
!10558 = !DILocation(line: 3438, column: 36, scope: !10555)
!10559 = !DILocation(line: 3438, column: 45, scope: !10555)
!10560 = !DILocation(line: 3438, column: 27, scope: !10555)
!10561 = !DILocation(line: 3439, column: 27, scope: !10555)
!10562 = !DILocation(line: 3439, column: 33, scope: !10555)
!10563 = !DILocation(line: 3439, column: 7, scope: !10555)
!10564 = !DILocation(line: 3438, column: 27, scope: !10565)
!10565 = !DILexicalBlockFile(scope: !10555, file: !1, discriminator: 1)
!10566 = !DILocation(line: 3438, column: 27, scope: !10567)
!10567 = !DILexicalBlockFile(scope: !10555, file: !1, discriminator: 2)
!10568 = !DILocation(line: 3438, column: 27, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !10555, file: !1, discriminator: 3)
!10570 = !DILocation(line: 3438, column: 12, scope: !10569)
!10571 = !DILocalVariable(name: "best_pipe_len", scope: !10555, file: !1, line: 3440, type: !347)
!10572 = !DILocation(line: 3440, column: 12, scope: !10555)
!10573 = !DILocation(line: 3440, column: 28, scope: !10555)
!10574 = !DILocalVariable(name: "curr", scope: !10555, file: !1, line: 3441, type: !334)
!10575 = !DILocation(line: 3441, column: 32, scope: !10555)
!10576 = !DILocation(line: 3443, column: 11, scope: !10555)
!10577 = !DILocation(line: 3444, column: 12, scope: !10555)
!10578 = !DILocation(line: 3444, column: 20, scope: !10555)
!10579 = !DILocation(line: 3444, column: 25, scope: !10555)
!10580 = !DILocation(line: 3444, column: 40, scope: !10565)
!10581 = !DILocation(line: 3444, column: 48, scope: !10565)
!10582 = !DILocation(line: 3444, column: 61, scope: !10565)
!10583 = !DILocation(line: 3444, column: 12, scope: !10565)
!10584 = !DILocation(line: 3445, column: 12, scope: !10555)
!10585 = !DILocation(line: 3445, column: 20, scope: !10555)
!10586 = !DILocation(line: 3445, column: 25, scope: !10555)
!10587 = !DILocation(line: 3444, column: 12, scope: !10567)
!10588 = !DILocation(line: 3444, column: 12, scope: !10569)
!10589 = !DILocation(line: 3445, column: 40, scope: !10565)
!10590 = !DILocation(line: 3445, column: 32, scope: !10565)
!10591 = !DILocation(line: 3446, column: 12, scope: !10555)
!10592 = !DILocation(line: 3446, column: 20, scope: !10555)
!10593 = !DILocation(line: 3446, column: 29, scope: !10555)
!10594 = !DILocation(line: 3446, column: 12, scope: !10565)
!10595 = !DILocation(line: 3448, column: 13, scope: !10555)
!10596 = !DILocation(line: 3448, column: 21, scope: !10555)
!10597 = !DILocation(line: 3448, column: 30, scope: !10555)
!10598 = !DILocation(line: 3446, column: 12, scope: !10567)
!10599 = !DILocation(line: 3446, column: 12, scope: !10569)
!10600 = !DILocation(line: 3443, column: 5, scope: !10565)
!10601 = !DILocation(line: 3452, column: 8, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10555, file: !1, line: 3452, column: 8)
!10603 = !DILocation(line: 3452, column: 8, scope: !10555)
!10604 = !DILocation(line: 3453, column: 10, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !1, line: 3453, column: 10)
!10606 = distinct !DILexicalBlock(scope: !10602, file: !1, line: 3452, column: 21)
!10607 = !DILocation(line: 3453, column: 18, scope: !10605)
!10608 = !DILocation(line: 3453, column: 27, scope: !10605)
!10609 = !DILocation(line: 3453, column: 10, scope: !10606)
!10610 = !DILocation(line: 3454, column: 13, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !1, line: 3454, column: 12)
!10612 = distinct !DILexicalBlock(scope: !10605, file: !1, line: 3453, column: 46)
!10613 = !DILocation(line: 3454, column: 21, scope: !10611)
!10614 = !DILocation(line: 3454, column: 30, scope: !10611)
!10615 = !DILocation(line: 3454, column: 49, scope: !10611)
!10616 = !DILocation(line: 3454, column: 52, scope: !10617)
!10617 = !DILexicalBlockFile(scope: !10611, file: !1, discriminator: 1)
!10618 = !DILocation(line: 3454, column: 58, scope: !10617)
!10619 = !DILocation(line: 3454, column: 62, scope: !10617)
!10620 = !DILocation(line: 3454, column: 12, scope: !10617)
!10621 = !DILocation(line: 3455, column: 17, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10611, file: !1, line: 3454, column: 72)
!10623 = !DILocation(line: 3455, column: 11, scope: !10622)
!10624 = !DILocation(line: 3456, column: 12, scope: !10622)
!10625 = !DILocation(line: 3456, column: 21, scope: !10622)
!10626 = !DILocation(line: 3457, column: 11, scope: !10622)
!10627 = !DILocation(line: 3460, column: 15, scope: !10612)
!10628 = !DILocation(line: 3460, column: 9, scope: !10612)
!10629 = !DILocation(line: 3461, column: 21, scope: !10612)
!10630 = !DILocation(line: 3462, column: 7, scope: !10612)
!10631 = !DILocation(line: 3463, column: 11, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10606, file: !1, line: 3463, column: 10)
!10633 = !DILocation(line: 3463, column: 19, scope: !10632)
!10634 = !DILocation(line: 3463, column: 28, scope: !10632)
!10635 = !DILocation(line: 3463, column: 50, scope: !10632)
!10636 = !DILocation(line: 3464, column: 32, scope: !10632)
!10637 = !DILocation(line: 3464, column: 38, scope: !10632)
!10638 = !DILocation(line: 3464, column: 11, scope: !10632)
!10639 = !DILocation(line: 3463, column: 10, scope: !10640)
!10640 = !DILexicalBlockFile(scope: !10606, file: !1, discriminator: 1)
!10641 = !DILocation(line: 3466, column: 15, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10632, file: !1, line: 3464, column: 62)
!10643 = !DILocation(line: 3466, column: 9, scope: !10642)
!10644 = !DILocation(line: 3467, column: 21, scope: !10642)
!10645 = !DILocation(line: 3468, column: 7, scope: !10642)
!10646 = !DILocation(line: 3469, column: 16, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10632, file: !1, line: 3469, column: 15)
!10648 = !DILocation(line: 3469, column: 24, scope: !10647)
!10649 = !DILocation(line: 3469, column: 33, scope: !10647)
!10650 = !DILocation(line: 3469, column: 54, scope: !10647)
!10651 = !DILocation(line: 3470, column: 37, scope: !10647)
!10652 = !DILocation(line: 3470, column: 43, scope: !10647)
!10653 = !DILocation(line: 3470, column: 16, scope: !10647)
!10654 = !DILocation(line: 3469, column: 15, scope: !10655)
!10655 = !DILexicalBlockFile(scope: !10632, file: !1, discriminator: 1)
!10656 = !DILocation(line: 3471, column: 15, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10647, file: !1, line: 3470, column: 71)
!10658 = !DILocation(line: 3471, column: 9, scope: !10657)
!10659 = !DILocation(line: 3472, column: 21, scope: !10657)
!10660 = !DILocation(line: 3473, column: 7, scope: !10657)
!10661 = !DILocation(line: 3474, column: 5, scope: !10606)
!10662 = !DILocation(line: 3476, column: 12, scope: !10555)
!10663 = !DILocation(line: 3476, column: 20, scope: !10555)
!10664 = !DILocation(line: 3476, column: 30, scope: !10555)
!10665 = !DILocation(line: 3476, column: 10, scope: !10555)
!10666 = !DILocation(line: 3477, column: 5, scope: !10555)
!10667 = !DILocation(line: 3477, column: 11, scope: !10565)
!10668 = !DILocation(line: 3477, column: 5, scope: !10565)
!10669 = !DILocalVariable(name: "match", scope: !10670, file: !1, line: 3478, type: !423)
!10670 = distinct !DILexicalBlock(scope: !10555, file: !1, line: 3477, column: 17)
!10671 = !DILocation(line: 3478, column: 12, scope: !10670)
!10672 = !DILocalVariable(name: "pipeLen", scope: !10670, file: !1, line: 3479, type: !347)
!10673 = !DILocation(line: 3479, column: 14, scope: !10670)
!10674 = !DILocation(line: 3485, column: 15, scope: !10670)
!10675 = !DILocation(line: 3485, column: 21, scope: !10670)
!10676 = !DILocation(line: 3485, column: 13, scope: !10670)
!10677 = !DILocation(line: 3486, column: 14, scope: !10670)
!10678 = !DILocation(line: 3486, column: 20, scope: !10670)
!10679 = !DILocation(line: 3486, column: 12, scope: !10670)
!10680 = !DILocation(line: 3488, column: 29, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3488, column: 10)
!10682 = !DILocation(line: 3488, column: 36, scope: !10681)
!10683 = !DILocation(line: 3488, column: 10, scope: !10681)
!10684 = !DILocation(line: 3488, column: 10, scope: !10670)
!10685 = !DILocation(line: 3489, column: 9, scope: !10681)
!10686 = !DILocation(line: 3491, column: 17, scope: !10670)
!10687 = !DILocation(line: 3491, column: 24, scope: !10670)
!10688 = !DILocation(line: 3491, column: 34, scope: !10670)
!10689 = !DILocation(line: 3491, column: 41, scope: !10670)
!10690 = !DILocation(line: 3491, column: 48, scope: !10670)
!10691 = !DILocation(line: 3491, column: 58, scope: !10670)
!10692 = !DILocation(line: 3491, column: 39, scope: !10670)
!10693 = !DILocation(line: 3491, column: 15, scope: !10670)
!10694 = !DILocation(line: 3493, column: 10, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3493, column: 10)
!10696 = !DILocation(line: 3493, column: 10, scope: !10670)
!10697 = !DILocation(line: 3494, column: 12, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10699, file: !1, line: 3494, column: 12)
!10699 = distinct !DILexicalBlock(scope: !10695, file: !1, line: 3493, column: 23)
!10700 = !DILocation(line: 3494, column: 19, scope: !10698)
!10701 = !DILocation(line: 3494, column: 24, scope: !10698)
!10702 = !DILocation(line: 3494, column: 39, scope: !10698)
!10703 = !DILocation(line: 3494, column: 42, scope: !10704)
!10704 = !DILexicalBlockFile(scope: !10698, file: !1, discriminator: 1)
!10705 = !DILocation(line: 3494, column: 49, scope: !10704)
!10706 = !DILocation(line: 3494, column: 54, scope: !10704)
!10707 = !DILocation(line: 3494, column: 12, scope: !10704)
!10708 = !DILocation(line: 3495, column: 11, scope: !10698)
!10709 = !DILocation(line: 3497, column: 13, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10699, file: !1, line: 3497, column: 12)
!10711 = !DILocation(line: 3497, column: 20, scope: !10710)
!10712 = !DILocation(line: 3497, column: 25, scope: !10710)
!10713 = !DILocation(line: 3497, column: 12, scope: !10699)
!10714 = !DILocalVariable(name: "sh", scope: !10715, file: !1, line: 3499, type: !256)
!10715 = distinct !DILexicalBlock(scope: !10710, file: !1, line: 3497, column: 36)
!10716 = !DILocation(line: 3499, column: 29, scope: !10715)
!10717 = !DILocation(line: 3499, column: 51, scope: !10715)
!10718 = !DILocation(line: 3499, column: 58, scope: !10715)
!10719 = !DILocation(line: 3499, column: 34, scope: !10715)
!10720 = !DILocalVariable(name: "rh", scope: !10715, file: !1, line: 3500, type: !256)
!10721 = !DILocation(line: 3500, column: 29, scope: !10715)
!10722 = !DILocation(line: 3500, column: 51, scope: !10715)
!10723 = !DILocation(line: 3500, column: 58, scope: !10715)
!10724 = !DILocation(line: 3500, column: 34, scope: !10715)
!10725 = !DILocation(line: 3501, column: 14, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10715, file: !1, line: 3501, column: 14)
!10727 = !DILocation(line: 3501, column: 14, scope: !10715)
!10728 = !DILocation(line: 3502, column: 38, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 3502, column: 16)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !1, line: 3501, column: 18)
!10731 = !DILocation(line: 3502, column: 42, scope: !10729)
!10732 = !DILocation(line: 3502, column: 17, scope: !10729)
!10733 = !DILocation(line: 3502, column: 16, scope: !10730)
!10734 = !DILocation(line: 3503, column: 15, scope: !10729)
!10735 = !DILocation(line: 3504, column: 11, scope: !10730)
!10736 = !DILocation(line: 3505, column: 19, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10726, file: !1, line: 3505, column: 19)
!10738 = !DILocation(line: 3505, column: 19, scope: !10726)
!10739 = !DILocation(line: 3506, column: 38, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !1, line: 3506, column: 16)
!10741 = distinct !DILexicalBlock(scope: !10737, file: !1, line: 3505, column: 23)
!10742 = !DILocation(line: 3506, column: 42, scope: !10740)
!10743 = !DILocation(line: 3506, column: 17, scope: !10740)
!10744 = !DILocation(line: 3506, column: 16, scope: !10741)
!10745 = !DILocation(line: 3507, column: 15, scope: !10740)
!10746 = !DILocation(line: 3508, column: 11, scope: !10741)
!10747 = !DILocation(line: 3509, column: 9, scope: !10715)
!10748 = !DILocation(line: 3510, column: 7, scope: !10699)
!10749 = !DILocation(line: 3512, column: 12, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !1, line: 3512, column: 12)
!10751 = distinct !DILexicalBlock(scope: !10695, file: !1, line: 3511, column: 12)
!10752 = !DILocation(line: 3512, column: 20, scope: !10750)
!10753 = !DILocation(line: 3512, column: 12, scope: !10751)
!10754 = !DILocation(line: 3515, column: 11, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !1, line: 3512, column: 25)
!10756 = !DILocation(line: 3529, column: 13, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10751, file: !1, line: 3529, column: 12)
!10758 = !DILocation(line: 3529, column: 20, scope: !10757)
!10759 = !DILocation(line: 3529, column: 38, scope: !10757)
!10760 = !DILocation(line: 3529, column: 58, scope: !10757)
!10761 = !DILocation(line: 3530, column: 12, scope: !10757)
!10762 = !DILocation(line: 3530, column: 19, scope: !10757)
!10763 = !DILocation(line: 3530, column: 24, scope: !10757)
!10764 = !DILocation(line: 3529, column: 12, scope: !10765)
!10765 = !DILexicalBlockFile(scope: !10751, file: !1, discriminator: 1)
!10766 = !DILocation(line: 3531, column: 15, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !1, line: 3531, column: 14)
!10768 = distinct !DILexicalBlock(scope: !10757, file: !1, line: 3530, column: 31)
!10769 = !DILocation(line: 3531, column: 22, scope: !10767)
!10770 = !DILocation(line: 3531, column: 27, scope: !10767)
!10771 = !DILocation(line: 3531, column: 14, scope: !10768)
!10772 = !DILocation(line: 3532, column: 35, scope: !10767)
!10773 = !DILocation(line: 3532, column: 13, scope: !10767)
!10774 = !DILocation(line: 3535, column: 17, scope: !10768)
!10775 = !DILocation(line: 3536, column: 17, scope: !10768)
!10776 = !DILocation(line: 3536, column: 24, scope: !10768)
!10777 = !DILocation(line: 3535, column: 11, scope: !10768)
!10778 = !DILocation(line: 3544, column: 11, scope: !10768)
!10779 = !DILocation(line: 3561, column: 11, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3561, column: 10)
!10781 = !DILocation(line: 3561, column: 19, scope: !10780)
!10782 = !DILocation(line: 3561, column: 28, scope: !10780)
!10783 = !DILocation(line: 3561, column: 33, scope: !10780)
!10784 = !DILocation(line: 3562, column: 11, scope: !10780)
!10785 = !DILocation(line: 3562, column: 18, scope: !10780)
!10786 = !DILocation(line: 3562, column: 27, scope: !10780)
!10787 = !DILocation(line: 3562, column: 32, scope: !10780)
!10788 = !DILocation(line: 3561, column: 47, scope: !10780)
!10789 = !DILocation(line: 3561, column: 10, scope: !10670)
!10790 = !DILocation(line: 3564, column: 32, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10780, file: !1, line: 3564, column: 12)
!10792 = !DILocation(line: 3564, column: 39, scope: !10791)
!10793 = !DILocation(line: 3564, column: 48, scope: !10791)
!10794 = !DILocation(line: 3564, column: 12, scope: !10791)
!10795 = !DILocation(line: 3565, column: 12, scope: !10791)
!10796 = !DILocation(line: 3565, column: 20, scope: !10791)
!10797 = !DILocation(line: 3565, column: 29, scope: !10791)
!10798 = !DILocation(line: 3564, column: 58, scope: !10791)
!10799 = !DILocation(line: 3565, column: 38, scope: !10791)
!10800 = !DILocation(line: 3565, column: 42, scope: !10801)
!10801 = !DILexicalBlockFile(scope: !10791, file: !1, discriminator: 1)
!10802 = !DILocation(line: 3565, column: 49, scope: !10801)
!10803 = !DILocation(line: 3564, column: 12, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !10780, file: !1, discriminator: 1)
!10805 = !DILocation(line: 3567, column: 11, scope: !10791)
!10806 = !DILocation(line: 3565, column: 49, scope: !10807)
!10807 = !DILexicalBlockFile(scope: !10791, file: !1, discriminator: 2)
!10808 = !DILocation(line: 3569, column: 10, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3569, column: 10)
!10810 = !DILocation(line: 3569, column: 18, scope: !10809)
!10811 = !DILocation(line: 3569, column: 23, scope: !10809)
!10812 = !DILocation(line: 3569, column: 36, scope: !10809)
!10813 = !DILocation(line: 3569, column: 43, scope: !10809)
!10814 = !DILocation(line: 3569, column: 48, scope: !10809)
!10815 = !DILocation(line: 3569, column: 33, scope: !10809)
!10816 = !DILocation(line: 3569, column: 58, scope: !10809)
!10817 = !DILocation(line: 3570, column: 10, scope: !10809)
!10818 = !DILocation(line: 3570, column: 18, scope: !10809)
!10819 = !DILocation(line: 3570, column: 23, scope: !10809)
!10820 = !DILocation(line: 3570, column: 37, scope: !10809)
!10821 = !DILocation(line: 3570, column: 44, scope: !10809)
!10822 = !DILocation(line: 3570, column: 49, scope: !10809)
!10823 = !DILocation(line: 3570, column: 34, scope: !10809)
!10824 = !DILocation(line: 3569, column: 10, scope: !10825)
!10825 = !DILexicalBlockFile(scope: !10670, file: !1, discriminator: 1)
!10826 = !DILocation(line: 3571, column: 9, scope: !10809)
!10827 = !DILocation(line: 3573, column: 10, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3573, column: 10)
!10829 = !DILocation(line: 3573, column: 18, scope: !10828)
!10830 = !DILocation(line: 3573, column: 23, scope: !10828)
!10831 = !DILocation(line: 3573, column: 34, scope: !10828)
!10832 = !DILocation(line: 3573, column: 58, scope: !10833)
!10833 = !DILexicalBlockFile(scope: !10828, file: !1, discriminator: 1)
!10834 = !DILocation(line: 3573, column: 66, scope: !10833)
!10835 = !DILocation(line: 3574, column: 58, scope: !10828)
!10836 = !DILocation(line: 3574, column: 65, scope: !10828)
!10837 = !DILocation(line: 3573, column: 38, scope: !10833)
!10838 = !DILocation(line: 3573, column: 10, scope: !10833)
!10839 = !DILocation(line: 3575, column: 9, scope: !10828)
!10840 = !DILocation(line: 3577, column: 10, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3577, column: 10)
!10842 = !DILocation(line: 3577, column: 18, scope: !10841)
!10843 = !DILocation(line: 3577, column: 23, scope: !10841)
!10844 = !DILocation(line: 3577, column: 39, scope: !10841)
!10845 = !DILocation(line: 3577, column: 46, scope: !10841)
!10846 = !DILocation(line: 3577, column: 51, scope: !10841)
!10847 = !DILocation(line: 3577, column: 36, scope: !10841)
!10848 = !DILocation(line: 3577, column: 10, scope: !10670)
!10849 = !DILocation(line: 3580, column: 9, scope: !10841)
!10850 = !DILocation(line: 3582, column: 10, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3582, column: 10)
!10852 = !DILocation(line: 3582, column: 18, scope: !10851)
!10853 = !DILocation(line: 3582, column: 23, scope: !10851)
!10854 = !DILocation(line: 3582, column: 39, scope: !10851)
!10855 = !DILocation(line: 3582, column: 46, scope: !10851)
!10856 = !DILocation(line: 3582, column: 51, scope: !10851)
!10857 = !DILocation(line: 3582, column: 36, scope: !10851)
!10858 = !DILocation(line: 3582, column: 10, scope: !10670)
!10859 = !DILocation(line: 3585, column: 9, scope: !10851)
!10860 = !DILocation(line: 3587, column: 10, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3587, column: 10)
!10862 = !DILocation(line: 3587, column: 18, scope: !10861)
!10863 = !DILocation(line: 3587, column: 23, scope: !10861)
!10864 = !DILocation(line: 3587, column: 10, scope: !10670)
!10865 = !DILocation(line: 3588, column: 33, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1, line: 3588, column: 12)
!10867 = distinct !DILexicalBlock(scope: !10861, file: !1, line: 3587, column: 34)
!10868 = !DILocation(line: 3588, column: 41, scope: !10866)
!10869 = !DILocation(line: 3588, column: 54, scope: !10866)
!10870 = !DILocation(line: 3588, column: 61, scope: !10866)
!10871 = !DILocation(line: 3588, column: 13, scope: !10866)
!10872 = !DILocation(line: 3588, column: 12, scope: !10867)
!10873 = !DILocation(line: 3589, column: 11, scope: !10866)
!10874 = !DILocation(line: 3591, column: 12, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10867, file: !1, line: 3591, column: 12)
!10876 = !DILocation(line: 3591, column: 20, scope: !10875)
!10877 = !DILocation(line: 3591, column: 25, scope: !10875)
!10878 = !DILocation(line: 3591, column: 41, scope: !10875)
!10879 = !DILocation(line: 3591, column: 48, scope: !10875)
!10880 = !DILocation(line: 3591, column: 53, scope: !10875)
!10881 = !DILocation(line: 3591, column: 38, scope: !10875)
!10882 = !DILocation(line: 3591, column: 12, scope: !10867)
!10883 = !DILocation(line: 3592, column: 11, scope: !10875)
!10884 = !DILocation(line: 3594, column: 12, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10867, file: !1, line: 3594, column: 12)
!10886 = !DILocation(line: 3594, column: 20, scope: !10885)
!10887 = !DILocation(line: 3594, column: 31, scope: !10885)
!10888 = !DILocation(line: 3594, column: 41, scope: !10885)
!10889 = !DILocation(line: 3594, column: 12, scope: !10867)
!10890 = !DILocation(line: 3596, column: 14, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !1, line: 3596, column: 14)
!10892 = distinct !DILexicalBlock(scope: !10885, file: !1, line: 3594, column: 61)
!10893 = !DILocation(line: 3596, column: 22, scope: !10891)
!10894 = !DILocation(line: 3596, column: 31, scope: !10891)
!10895 = !DILocation(line: 3596, column: 36, scope: !10891)
!10896 = !DILocation(line: 3596, column: 14, scope: !10892)
!10897 = !DILocation(line: 3598, column: 42, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1, line: 3598, column: 16)
!10899 = distinct !DILexicalBlock(scope: !10891, file: !1, line: 3596, column: 50)
!10900 = !DILocation(line: 3598, column: 50, scope: !10898)
!10901 = !DILocation(line: 3599, column: 42, scope: !10898)
!10902 = !DILocation(line: 3599, column: 49, scope: !10898)
!10903 = !DILocation(line: 3598, column: 17, scope: !10898)
!10904 = !DILocation(line: 3598, column: 16, scope: !10899)
!10905 = !DILocation(line: 3600, column: 15, scope: !10898)
!10906 = !DILocation(line: 3601, column: 16, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10899, file: !1, line: 3601, column: 16)
!10908 = !DILocation(line: 3601, column: 23, scope: !10907)
!10909 = !DILocation(line: 3601, column: 46, scope: !10907)
!10910 = !DILocation(line: 3601, column: 52, scope: !10907)
!10911 = !DILocation(line: 3601, column: 16, scope: !10899)
!10912 = !DILocation(line: 3602, column: 15, scope: !10907)
!10913 = !DILocation(line: 3603, column: 11, scope: !10899)
!10914 = !DILocation(line: 3605, column: 42, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !1, line: 3605, column: 16)
!10916 = distinct !DILexicalBlock(scope: !10891, file: !1, line: 3604, column: 16)
!10917 = !DILocation(line: 3605, column: 50, scope: !10915)
!10918 = !DILocation(line: 3606, column: 42, scope: !10915)
!10919 = !DILocation(line: 3606, column: 49, scope: !10915)
!10920 = !DILocation(line: 3605, column: 17, scope: !10915)
!10921 = !DILocation(line: 3605, column: 16, scope: !10916)
!10922 = !DILocation(line: 3607, column: 15, scope: !10915)
!10923 = !DILocation(line: 3608, column: 16, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10916, file: !1, line: 3608, column: 16)
!10925 = !DILocation(line: 3608, column: 23, scope: !10924)
!10926 = !DILocation(line: 3608, column: 40, scope: !10924)
!10927 = !DILocation(line: 3608, column: 46, scope: !10924)
!10928 = !DILocation(line: 3608, column: 16, scope: !10916)
!10929 = !DILocation(line: 3609, column: 15, scope: !10924)
!10930 = !DILocation(line: 3611, column: 9, scope: !10892)
!10931 = !DILocation(line: 3612, column: 7, scope: !10867)
!10932 = !DILocation(line: 3614, column: 11, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3614, column: 10)
!10934 = !DILocation(line: 3614, column: 23, scope: !10933)
!10935 = !DILocation(line: 3614, column: 26, scope: !10936)
!10936 = !DILexicalBlockFile(scope: !10933, file: !1, discriminator: 1)
!10937 = !DILocation(line: 3614, column: 33, scope: !10936)
!10938 = !DILocation(line: 3614, column: 10, scope: !10936)
!10939 = !DILocation(line: 3617, column: 9, scope: !10933)
!10940 = !DILocation(line: 3619, column: 10, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3619, column: 10)
!10942 = !DILocation(line: 3619, column: 18, scope: !10941)
!10943 = !DILocation(line: 3619, column: 27, scope: !10941)
!10944 = !DILocation(line: 3619, column: 30, scope: !10945)
!10945 = !DILexicalBlockFile(scope: !10941, file: !1, discriminator: 1)
!10946 = !DILocation(line: 3619, column: 38, scope: !10945)
!10947 = !DILocation(line: 3619, column: 10, scope: !10945)
!10948 = !DILocation(line: 3631, column: 13, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !1, line: 3631, column: 12)
!10950 = distinct !DILexicalBlock(scope: !10941, file: !1, line: 3619, column: 49)
!10951 = !DILocation(line: 3631, column: 20, scope: !10949)
!10952 = !DILocation(line: 3631, column: 33, scope: !10949)
!10953 = !DILocation(line: 3631, column: 41, scope: !10949)
!10954 = !DILocation(line: 3631, column: 30, scope: !10949)
!10955 = !DILocation(line: 3631, column: 52, scope: !10949)
!10956 = !DILocation(line: 3632, column: 13, scope: !10949)
!10957 = !DILocation(line: 3632, column: 20, scope: !10949)
!10958 = !DILocation(line: 3632, column: 38, scope: !10949)
!10959 = !DILocation(line: 3632, column: 46, scope: !10949)
!10960 = !DILocation(line: 3632, column: 35, scope: !10949)
!10961 = !DILocation(line: 3632, column: 62, scope: !10949)
!10962 = !DILocation(line: 3633, column: 13, scope: !10949)
!10963 = !DILocation(line: 3633, column: 21, scope: !10949)
!10964 = !DILocation(line: 3633, column: 30, scope: !10949)
!10965 = !DILocation(line: 3634, column: 15, scope: !10949)
!10966 = !DILocation(line: 3634, column: 22, scope: !10949)
!10967 = !DILocation(line: 3634, column: 31, scope: !10949)
!10968 = !DILocation(line: 3634, column: 41, scope: !10969)
!10969 = !DILexicalBlockFile(scope: !10949, file: !1, discriminator: 1)
!10970 = !DILocation(line: 3634, column: 48, scope: !10969)
!10971 = !DILocation(line: 3634, column: 58, scope: !10969)
!10972 = !DILocation(line: 3634, column: 66, scope: !10969)
!10973 = !DILocation(line: 3634, column: 34, scope: !10969)
!10974 = !DILocation(line: 3631, column: 12, scope: !10975)
!10975 = !DILexicalBlockFile(scope: !10950, file: !1, discriminator: 1)
!10976 = !DILocation(line: 3635, column: 11, scope: !10949)
!10977 = !DILocation(line: 3636, column: 7, scope: !10950)
!10978 = !DILocation(line: 3638, column: 12, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3638, column: 10)
!10980 = !DILocation(line: 3638, column: 20, scope: !10979)
!10981 = !DILocation(line: 3638, column: 29, scope: !10979)
!10982 = !DILocation(line: 3638, column: 35, scope: !10979)
!10983 = !DILocation(line: 3638, column: 10, scope: !10670)
!10984 = !DILocation(line: 3641, column: 19, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !1, line: 3641, column: 12)
!10986 = distinct !DILexicalBlock(scope: !10979, file: !1, line: 3638, column: 63)
!10987 = !DILocation(line: 3641, column: 27, scope: !10985)
!10988 = !DILocation(line: 3641, column: 33, scope: !10985)
!10989 = !DILocation(line: 3641, column: 40, scope: !10985)
!10990 = !DILocation(line: 3641, column: 12, scope: !10985)
!10991 = !DILocation(line: 3641, column: 46, scope: !10985)
!10992 = !DILocation(line: 3642, column: 19, scope: !10985)
!10993 = !DILocation(line: 3642, column: 27, scope: !10985)
!10994 = !DILocation(line: 3642, column: 35, scope: !10985)
!10995 = !DILocation(line: 3642, column: 42, scope: !10985)
!10996 = !DILocation(line: 3642, column: 12, scope: !10985)
!10997 = !DILocation(line: 3641, column: 12, scope: !10998)
!10998 = !DILexicalBlockFile(scope: !10986, file: !1, discriminator: 1)
!10999 = !DILocation(line: 3644, column: 11, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10985, file: !1, line: 3642, column: 51)
!11001 = !DILocation(line: 3646, column: 7, scope: !10986)
!11002 = !DILocation(line: 3648, column: 11, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3648, column: 10)
!11004 = !DILocation(line: 3648, column: 19, scope: !11003)
!11005 = !DILocation(line: 3648, column: 24, scope: !11003)
!11006 = !DILocation(line: 3648, column: 34, scope: !11003)
!11007 = !DILocation(line: 3648, column: 38, scope: !11008)
!11008 = !DILexicalBlockFile(scope: !11003, file: !1, discriminator: 1)
!11009 = !DILocation(line: 3648, column: 46, scope: !11008)
!11010 = !DILocation(line: 3648, column: 55, scope: !11008)
!11011 = !DILocation(line: 3648, column: 60, scope: !11008)
!11012 = !DILocation(line: 3648, column: 74, scope: !11008)
!11013 = !DILocation(line: 3649, column: 10, scope: !11003)
!11014 = !DILocation(line: 3649, column: 18, scope: !11003)
!11015 = !DILocation(line: 3649, column: 23, scope: !11003)
!11016 = !DILocation(line: 3648, column: 10, scope: !11017)
!11017 = !DILexicalBlockFile(scope: !10670, file: !1, discriminator: 2)
!11018 = !DILocation(line: 3654, column: 13, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !1, line: 3654, column: 12)
!11020 = distinct !DILexicalBlock(scope: !11003, file: !1, line: 3649, column: 37)
!11021 = !DILocation(line: 3654, column: 77, scope: !11019)
!11022 = !DILocation(line: 3655, column: 34, scope: !11019)
!11023 = !DILocation(line: 3655, column: 41, scope: !11019)
!11024 = !DILocation(line: 3655, column: 50, scope: !11019)
!11025 = !DILocation(line: 3655, column: 14, scope: !11019)
!11026 = !DILocation(line: 3656, column: 14, scope: !11019)
!11027 = !DILocation(line: 3656, column: 22, scope: !11019)
!11028 = !DILocation(line: 3656, column: 31, scope: !11019)
!11029 = !DILocation(line: 3655, column: 60, scope: !11019)
!11030 = !DILocation(line: 3656, column: 40, scope: !11019)
!11031 = !DILocation(line: 3656, column: 43, scope: !11032)
!11032 = !DILexicalBlockFile(scope: !11019, file: !1, discriminator: 1)
!11033 = !DILocation(line: 3656, column: 50, scope: !11032)
!11034 = !DILocation(line: 3656, column: 65, scope: !11032)
!11035 = !DILocation(line: 3657, column: 14, scope: !11019)
!11036 = !DILocation(line: 3657, column: 22, scope: !11019)
!11037 = !DILocation(line: 3657, column: 27, scope: !11019)
!11038 = !DILocation(line: 3657, column: 40, scope: !11019)
!11039 = !DILocation(line: 3657, column: 43, scope: !11032)
!11040 = !DILocation(line: 3658, column: 67, scope: !11019)
!11041 = !DILocation(line: 3659, column: 14, scope: !11019)
!11042 = !DILocation(line: 3659, column: 22, scope: !11019)
!11043 = !DILocation(line: 3659, column: 27, scope: !11019)
!11044 = !DILocation(line: 3659, column: 40, scope: !11019)
!11045 = !DILocation(line: 3660, column: 14, scope: !11019)
!11046 = !DILocation(line: 3660, column: 22, scope: !11019)
!11047 = !DILocation(line: 3660, column: 38, scope: !11019)
!11048 = !DILocation(line: 3660, column: 45, scope: !11019)
!11049 = !DILocation(line: 3660, column: 35, scope: !11019)
!11050 = !DILocation(line: 3660, column: 59, scope: !11019)
!11051 = !DILocation(line: 3661, column: 12, scope: !11019)
!11052 = !DILocation(line: 3661, column: 64, scope: !11019)
!11053 = !DILocation(line: 3662, column: 12, scope: !11019)
!11054 = !DILocation(line: 3662, column: 20, scope: !11019)
!11055 = !DILocation(line: 3662, column: 35, scope: !11019)
!11056 = !DILocation(line: 3662, column: 42, scope: !11019)
!11057 = !DILocation(line: 3662, column: 32, scope: !11019)
!11058 = !DILocation(line: 3654, column: 12, scope: !11059)
!11059 = !DILexicalBlockFile(scope: !11020, file: !1, discriminator: 1)
!11060 = !DILocation(line: 3666, column: 14, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1, line: 3666, column: 14)
!11062 = distinct !DILexicalBlock(scope: !11019, file: !1, line: 3662, column: 55)
!11063 = !DILocation(line: 3666, column: 22, scope: !11061)
!11064 = !DILocation(line: 3666, column: 31, scope: !11061)
!11065 = !DILocation(line: 3666, column: 37, scope: !11061)
!11066 = !DILocation(line: 3666, column: 14, scope: !11062)
!11067 = !DILocation(line: 3669, column: 42, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !1, line: 3669, column: 16)
!11069 = distinct !DILexicalBlock(scope: !11061, file: !1, line: 3666, column: 52)
!11070 = !DILocation(line: 3669, column: 50, scope: !11068)
!11071 = !DILocation(line: 3670, column: 42, scope: !11068)
!11072 = !DILocation(line: 3670, column: 49, scope: !11068)
!11073 = !DILocation(line: 3669, column: 17, scope: !11068)
!11074 = !DILocation(line: 3669, column: 16, scope: !11069)
!11075 = !DILocation(line: 3671, column: 15, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11068, file: !1, line: 3670, column: 62)
!11077 = !DILocation(line: 3671, column: 15, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !11079, file: !1, discriminator: 1)
!11079 = distinct !DILexicalBlock(scope: !11076, file: !1, line: 3671, column: 15)
!11080 = !DILocation(line: 3675, column: 15, scope: !11076)
!11081 = !DILocation(line: 3677, column: 16, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11069, file: !1, line: 3677, column: 16)
!11083 = !DILocation(line: 3677, column: 23, scope: !11082)
!11084 = !DILocation(line: 3677, column: 40, scope: !11082)
!11085 = !DILocation(line: 3677, column: 46, scope: !11082)
!11086 = !DILocation(line: 3677, column: 16, scope: !11069)
!11087 = !DILocation(line: 3678, column: 37, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11082, file: !1, line: 3677, column: 74)
!11089 = !DILocation(line: 3679, column: 15, scope: !11088)
!11090 = !DILocation(line: 3679, column: 15, scope: !11091)
!11091 = !DILexicalBlockFile(scope: !11092, file: !1, discriminator: 1)
!11092 = distinct !DILexicalBlock(scope: !11088, file: !1, line: 3679, column: 15)
!11093 = !DILocation(line: 3683, column: 15, scope: !11088)
!11094 = !DILocation(line: 3685, column: 11, scope: !11069)
!11095 = !DILocation(line: 3686, column: 17, scope: !11062)
!11096 = !DILocation(line: 3687, column: 9, scope: !11062)
!11097 = !DILocation(line: 3688, column: 7, scope: !11020)
!11098 = !DILocation(line: 3692, column: 15, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11003, file: !1, line: 3689, column: 12)
!11100 = !DILocation(line: 3695, column: 10, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !10670, file: !1, line: 3695, column: 10)
!11102 = !DILocation(line: 3695, column: 10, scope: !10670)
!11103 = !DILocation(line: 3745, column: 12, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !1, line: 3745, column: 12)
!11105 = distinct !DILexicalBlock(scope: !11101, file: !1, line: 3695, column: 17)
!11106 = !DILocation(line: 3745, column: 12, scope: !11105)
!11107 = !DILocation(line: 3750, column: 14, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1, line: 3750, column: 14)
!11109 = distinct !DILexicalBlock(scope: !11104, file: !1, line: 3745, column: 25)
!11110 = !DILocation(line: 3750, column: 22, scope: !11108)
!11111 = !DILocation(line: 3750, column: 14, scope: !11109)
!11112 = !DILocation(line: 3752, column: 22, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !1, line: 3750, column: 28)
!11114 = !DILocation(line: 3752, column: 20, scope: !11113)
!11115 = !DILocation(line: 3753, column: 13, scope: !11113)
!11116 = !DILocation(line: 3757, column: 14, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11109, file: !1, line: 3757, column: 14)
!11118 = !DILocation(line: 3757, column: 27, scope: !11117)
!11119 = !DILocation(line: 3757, column: 31, scope: !11120)
!11120 = !DILexicalBlockFile(scope: !11117, file: !1, discriminator: 1)
!11121 = !DILocation(line: 3757, column: 42, scope: !11120)
!11122 = !DILocation(line: 3757, column: 39, scope: !11120)
!11123 = !DILocation(line: 3757, column: 14, scope: !11120)
!11124 = !DILocation(line: 3758, column: 19, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11117, file: !1, line: 3757, column: 57)
!11126 = !DILocation(line: 3758, column: 55, scope: !11125)
!11127 = !DILocation(line: 3758, column: 13, scope: !11125)
!11128 = !DILocation(line: 3759, column: 13, scope: !11125)
!11129 = !DILocation(line: 3774, column: 38, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11109, file: !1, line: 3774, column: 14)
!11131 = !DILocation(line: 3774, column: 44, scope: !11130)
!11132 = !DILocation(line: 3774, column: 14, scope: !11130)
!11133 = !DILocation(line: 3774, column: 14, scope: !11109)
!11134 = !DILocation(line: 3775, column: 19, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11130, file: !1, line: 3774, column: 52)
!11136 = !DILocation(line: 3775, column: 13, scope: !11135)
!11137 = !DILocation(line: 3776, column: 13, scope: !11135)
!11138 = !DILocation(line: 3779, column: 14, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11109, file: !1, line: 3779, column: 14)
!11140 = !DILocation(line: 3779, column: 14, scope: !11109)
!11141 = !DILocation(line: 3780, column: 16, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1, line: 3780, column: 16)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !1, line: 3779, column: 28)
!11144 = !DILocation(line: 3780, column: 26, scope: !11142)
!11145 = !DILocation(line: 3780, column: 24, scope: !11142)
!11146 = !DILocation(line: 3780, column: 16, scope: !11143)
!11147 = !DILocation(line: 3783, column: 24, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 3780, column: 41)
!11149 = !DILocation(line: 3783, column: 22, scope: !11148)
!11150 = !DILocation(line: 3784, column: 31, scope: !11148)
!11151 = !DILocation(line: 3784, column: 29, scope: !11148)
!11152 = !DILocation(line: 3785, column: 15, scope: !11148)
!11153 = !DILocation(line: 3787, column: 11, scope: !11143)
!11154 = !DILocation(line: 3790, column: 22, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11139, file: !1, line: 3788, column: 16)
!11156 = !DILocation(line: 3790, column: 20, scope: !11155)
!11157 = !DILocation(line: 3791, column: 19, scope: !11155)
!11158 = !DILocation(line: 3791, column: 13, scope: !11155)
!11159 = !DILocation(line: 3792, column: 13, scope: !11155)
!11160 = !DILocation(line: 3794, column: 9, scope: !11109)
!11161 = !DILocation(line: 3797, column: 20, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11104, file: !1, line: 3795, column: 14)
!11163 = !DILocation(line: 3797, column: 18, scope: !11162)
!11164 = !DILocation(line: 3798, column: 11, scope: !11162)
!11165 = !DILocation(line: 3800, column: 7, scope: !11105)
!11166 = !DILocation(line: 3477, column: 5, scope: !10567)
!11167 = !DILocation(line: 3802, column: 3, scope: !10555)
!11168 = !DILocation(line: 3804, column: 6, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 3804, column: 6)
!11170 = !DILocation(line: 3804, column: 6, scope: !2214)
!11171 = !DILocation(line: 3805, column: 16, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11169, file: !1, line: 3804, column: 14)
!11173 = !DILocation(line: 3805, column: 6, scope: !11172)
!11174 = !DILocation(line: 3805, column: 14, scope: !11172)
!11175 = !DILocation(line: 3806, column: 5, scope: !11172)
!11176 = !DILocation(line: 3809, column: 6, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !2214, file: !1, line: 3809, column: 6)
!11178 = !DILocation(line: 3809, column: 28, scope: !11177)
!11179 = !DILocation(line: 3809, column: 31, scope: !11180)
!11180 = !DILexicalBlockFile(scope: !11177, file: !1, discriminator: 1)
!11181 = !DILocation(line: 3809, column: 37, scope: !11180)
!11182 = !DILocation(line: 3809, column: 41, scope: !11180)
!11183 = !DILocation(line: 3809, column: 6, scope: !11180)
!11184 = !DILocation(line: 3810, column: 11, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11177, file: !1, line: 3809, column: 51)
!11186 = !DILocation(line: 3810, column: 5, scope: !11185)
!11187 = !DILocation(line: 3812, column: 6, scope: !11185)
!11188 = !DILocation(line: 3812, column: 15, scope: !11185)
!11189 = !DILocation(line: 3813, column: 3, scope: !11185)
!11190 = !DILocation(line: 3815, column: 3, scope: !2214)
!11191 = !DILocation(line: 3816, column: 1, scope: !2214)
!11192 = !DILocalVariable(name: "handle", arg: 1, scope: !2231, file: !1, line: 3106, type: !2234)
!11193 = !DILocation(line: 3106, column: 58, scope: !2231)
!11194 = !DILocalVariable(name: "conn", arg: 2, scope: !2231, file: !1, line: 3107, type: !1487)
!11195 = !DILocation(line: 3107, column: 60, scope: !2231)
!11196 = !DILocation(line: 3110, column: 7, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !2231, file: !1, line: 3110, column: 6)
!11198 = !DILocation(line: 3110, column: 13, scope: !11197)
!11199 = !DILocation(line: 3110, column: 22, scope: !11197)
!11200 = !DILocation(line: 3110, column: 31, scope: !11197)
!11201 = !DILocation(line: 3110, column: 52, scope: !11197)
!11202 = !DILocation(line: 3111, column: 8, scope: !11197)
!11203 = !DILocation(line: 3111, column: 14, scope: !11197)
!11204 = !DILocation(line: 3111, column: 19, scope: !11197)
!11205 = !DILocation(line: 3111, column: 34, scope: !11197)
!11206 = !DILocation(line: 3111, column: 38, scope: !11207)
!11207 = !DILexicalBlockFile(scope: !11197, file: !1, discriminator: 1)
!11208 = !DILocation(line: 3111, column: 44, scope: !11207)
!11209 = !DILocation(line: 3111, column: 49, scope: !11207)
!11210 = !DILocation(line: 3110, column: 6, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !2231, file: !1, discriminator: 1)
!11212 = !DILocation(line: 3113, column: 29, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !1, line: 3113, column: 8)
!11214 = distinct !DILexicalBlock(scope: !11197, file: !1, line: 3111, column: 57)
!11215 = !DILocation(line: 3113, column: 37, scope: !11213)
!11216 = !DILocation(line: 3113, column: 8, scope: !11213)
!11217 = !DILocation(line: 3113, column: 60, scope: !11213)
!11218 = !DILocation(line: 3114, column: 9, scope: !11213)
!11219 = !DILocation(line: 3114, column: 17, scope: !11213)
!11220 = !DILocation(line: 3114, column: 21, scope: !11213)
!11221 = !DILocation(line: 3114, column: 33, scope: !11213)
!11222 = !DILocation(line: 3114, column: 59, scope: !11213)
!11223 = !DILocation(line: 3115, column: 9, scope: !11213)
!11224 = !DILocation(line: 3115, column: 17, scope: !11213)
!11225 = !DILocation(line: 3115, column: 21, scope: !11213)
!11226 = !DILocation(line: 3115, column: 29, scope: !11213)
!11227 = !DILocation(line: 3115, column: 44, scope: !11213)
!11228 = !DILocation(line: 3116, column: 9, scope: !11213)
!11229 = !DILocation(line: 3116, column: 17, scope: !11213)
!11230 = !DILocation(line: 3116, column: 21, scope: !11213)
!11231 = !DILocation(line: 3116, column: 29, scope: !11213)
!11232 = !DILocation(line: 3113, column: 8, scope: !11233)
!11233 = !DILexicalBlockFile(scope: !11214, file: !1, discriminator: 1)
!11234 = !DILocation(line: 3118, column: 7, scope: !11213)
!11235 = !DILocation(line: 3120, column: 29, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11214, file: !1, line: 3120, column: 8)
!11237 = !DILocation(line: 3120, column: 37, scope: !11236)
!11238 = !DILocation(line: 3120, column: 8, scope: !11236)
!11239 = !DILocation(line: 3120, column: 64, scope: !11236)
!11240 = !DILocation(line: 3121, column: 9, scope: !11236)
!11241 = !DILocation(line: 3121, column: 17, scope: !11236)
!11242 = !DILocation(line: 3121, column: 21, scope: !11236)
!11243 = !DILocation(line: 3121, column: 33, scope: !11236)
!11244 = !DILocation(line: 3120, column: 8, scope: !11233)
!11245 = !DILocation(line: 3123, column: 7, scope: !11236)
!11246 = !DILocation(line: 3124, column: 3, scope: !11214)
!11247 = !DILocation(line: 3125, column: 3, scope: !2231)
!11248 = !DILocation(line: 3126, column: 1, scope: !2231)
!11249 = !DILocalVariable(name: "old_conn", arg: 1, scope: !2236, file: !1, line: 6157, type: !262)
!11250 = !DILocation(line: 6157, column: 44, scope: !2236)
!11251 = !DILocalVariable(name: "conn", arg: 2, scope: !2236, file: !1, line: 6158, type: !262)
!11252 = !DILocation(line: 6158, column: 44, scope: !2236)
!11253 = !DILocation(line: 6160, column: 24, scope: !2236)
!11254 = !DILocation(line: 6160, column: 34, scope: !2236)
!11255 = !DILocation(line: 6160, column: 45, scope: !2236)
!11256 = !DILocation(line: 6160, column: 3, scope: !2236)
!11257 = !DILocation(line: 6161, column: 24, scope: !2236)
!11258 = !DILocation(line: 6161, column: 34, scope: !2236)
!11259 = !DILocation(line: 6161, column: 46, scope: !2236)
!11260 = !DILocation(line: 6161, column: 3, scope: !2236)
!11261 = !DILocation(line: 6163, column: 3, scope: !2236)
!11262 = !DILocation(line: 6164, column: 3, scope: !2236)
!11263 = !DILocation(line: 6168, column: 33, scope: !2236)
!11264 = !DILocation(line: 6168, column: 43, scope: !2236)
!11265 = !DILocation(line: 6168, column: 3, scope: !2236)
!11266 = !DILocation(line: 6169, column: 33, scope: !2236)
!11267 = !DILocation(line: 6169, column: 43, scope: !2236)
!11268 = !DILocation(line: 6169, column: 3, scope: !2236)
!11269 = !DILocation(line: 6171, column: 16, scope: !2236)
!11270 = !DILocation(line: 6171, column: 26, scope: !2236)
!11271 = !DILocation(line: 6171, column: 3, scope: !2236)
!11272 = !DILocation(line: 6171, column: 9, scope: !2236)
!11273 = !DILocation(line: 6171, column: 14, scope: !2236)
!11274 = !DILocation(line: 6175, column: 28, scope: !2236)
!11275 = !DILocation(line: 6175, column: 38, scope: !2236)
!11276 = !DILocation(line: 6175, column: 43, scope: !2236)
!11277 = !DILocation(line: 6175, column: 3, scope: !2236)
!11278 = !DILocation(line: 6175, column: 9, scope: !2236)
!11279 = !DILocation(line: 6175, column: 14, scope: !2236)
!11280 = !DILocation(line: 6175, column: 26, scope: !2236)
!11281 = !DILocation(line: 6176, column: 6, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6176, column: 6)
!11283 = !DILocation(line: 6176, column: 12, scope: !11282)
!11284 = !DILocation(line: 6176, column: 17, scope: !11282)
!11285 = !DILocation(line: 6176, column: 6, scope: !2236)
!11286 = !DILocation(line: 6178, column: 5, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11282, file: !1, line: 6176, column: 30)
!11288 = !DILocation(line: 6178, column: 5, scope: !11289)
!11289 = !DILexicalBlockFile(scope: !11290, file: !1, discriminator: 1)
!11290 = distinct !DILexicalBlock(scope: !11287, file: !1, line: 6178, column: 5)
!11291 = !DILocation(line: 6179, column: 5, scope: !11287)
!11292 = !DILocation(line: 6179, column: 5, scope: !11293)
!11293 = !DILexicalBlockFile(scope: !11294, file: !1, discriminator: 1)
!11294 = distinct !DILexicalBlock(scope: !11287, file: !1, line: 6179, column: 5)
!11295 = !DILocation(line: 6180, column: 18, scope: !11287)
!11296 = !DILocation(line: 6180, column: 28, scope: !11287)
!11297 = !DILocation(line: 6180, column: 5, scope: !11287)
!11298 = !DILocation(line: 6180, column: 11, scope: !11287)
!11299 = !DILocation(line: 6180, column: 16, scope: !11287)
!11300 = !DILocation(line: 6181, column: 20, scope: !11287)
!11301 = !DILocation(line: 6181, column: 30, scope: !11287)
!11302 = !DILocation(line: 6181, column: 5, scope: !11287)
!11303 = !DILocation(line: 6181, column: 11, scope: !11287)
!11304 = !DILocation(line: 6181, column: 18, scope: !11287)
!11305 = !DILocation(line: 6182, column: 5, scope: !11287)
!11306 = !DILocation(line: 6182, column: 15, scope: !11287)
!11307 = !DILocation(line: 6182, column: 20, scope: !11287)
!11308 = !DILocation(line: 6183, column: 5, scope: !11287)
!11309 = !DILocation(line: 6183, column: 15, scope: !11287)
!11310 = !DILocation(line: 6183, column: 22, scope: !11287)
!11311 = !DILocation(line: 6184, column: 3, scope: !11287)
!11312 = !DILocation(line: 6186, column: 34, scope: !2236)
!11313 = !DILocation(line: 6186, column: 44, scope: !2236)
!11314 = !DILocation(line: 6186, column: 49, scope: !2236)
!11315 = !DILocation(line: 6186, column: 3, scope: !2236)
!11316 = !DILocation(line: 6186, column: 9, scope: !2236)
!11317 = !DILocation(line: 6186, column: 14, scope: !2236)
!11318 = !DILocation(line: 6186, column: 32, scope: !2236)
!11319 = !DILocation(line: 6187, column: 6, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6187, column: 6)
!11321 = !DILocation(line: 6187, column: 12, scope: !11320)
!11322 = !DILocation(line: 6187, column: 17, scope: !11320)
!11323 = !DILocation(line: 6187, column: 6, scope: !2236)
!11324 = !DILocation(line: 6189, column: 5, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !1, line: 6187, column: 36)
!11326 = !DILocation(line: 6189, column: 5, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !11328, file: !1, discriminator: 1)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !1, line: 6189, column: 5)
!11329 = !DILocation(line: 6190, column: 5, scope: !11325)
!11330 = !DILocation(line: 6190, column: 5, scope: !11331)
!11331 = !DILexicalBlockFile(scope: !11332, file: !1, discriminator: 1)
!11332 = distinct !DILexicalBlock(scope: !11325, file: !1, line: 6190, column: 5)
!11333 = !DILocation(line: 6191, column: 5, scope: !11325)
!11334 = !DILocation(line: 6191, column: 5, scope: !11335)
!11335 = !DILexicalBlockFile(scope: !11336, file: !1, discriminator: 1)
!11336 = distinct !DILexicalBlock(scope: !11325, file: !1, line: 6191, column: 5)
!11337 = !DILocation(line: 6192, column: 5, scope: !11325)
!11338 = !DILocation(line: 6192, column: 5, scope: !11339)
!11339 = !DILexicalBlockFile(scope: !11340, file: !1, discriminator: 1)
!11340 = distinct !DILexicalBlock(scope: !11325, file: !1, line: 6192, column: 5)
!11341 = !DILocation(line: 6193, column: 29, scope: !11325)
!11342 = !DILocation(line: 6193, column: 39, scope: !11325)
!11343 = !DILocation(line: 6193, column: 50, scope: !11325)
!11344 = !DILocation(line: 6193, column: 5, scope: !11325)
!11345 = !DILocation(line: 6193, column: 11, scope: !11325)
!11346 = !DILocation(line: 6193, column: 22, scope: !11325)
!11347 = !DILocation(line: 6193, column: 27, scope: !11325)
!11348 = !DILocation(line: 6194, column: 30, scope: !11325)
!11349 = !DILocation(line: 6194, column: 40, scope: !11325)
!11350 = !DILocation(line: 6194, column: 52, scope: !11325)
!11351 = !DILocation(line: 6194, column: 5, scope: !11325)
!11352 = !DILocation(line: 6194, column: 11, scope: !11325)
!11353 = !DILocation(line: 6194, column: 23, scope: !11325)
!11354 = !DILocation(line: 6194, column: 28, scope: !11325)
!11355 = !DILocation(line: 6195, column: 31, scope: !11325)
!11356 = !DILocation(line: 6195, column: 41, scope: !11325)
!11357 = !DILocation(line: 6195, column: 52, scope: !11325)
!11358 = !DILocation(line: 6195, column: 5, scope: !11325)
!11359 = !DILocation(line: 6195, column: 11, scope: !11325)
!11360 = !DILocation(line: 6195, column: 22, scope: !11325)
!11361 = !DILocation(line: 6195, column: 29, scope: !11325)
!11362 = !DILocation(line: 6196, column: 32, scope: !11325)
!11363 = !DILocation(line: 6196, column: 42, scope: !11325)
!11364 = !DILocation(line: 6196, column: 54, scope: !11325)
!11365 = !DILocation(line: 6196, column: 5, scope: !11325)
!11366 = !DILocation(line: 6196, column: 11, scope: !11325)
!11367 = !DILocation(line: 6196, column: 23, scope: !11325)
!11368 = !DILocation(line: 6196, column: 30, scope: !11325)
!11369 = !DILocation(line: 6197, column: 5, scope: !11325)
!11370 = !DILocation(line: 6197, column: 15, scope: !11325)
!11371 = !DILocation(line: 6197, column: 26, scope: !11325)
!11372 = !DILocation(line: 6197, column: 31, scope: !11325)
!11373 = !DILocation(line: 6198, column: 5, scope: !11325)
!11374 = !DILocation(line: 6198, column: 15, scope: !11325)
!11375 = !DILocation(line: 6198, column: 27, scope: !11325)
!11376 = !DILocation(line: 6198, column: 32, scope: !11325)
!11377 = !DILocation(line: 6199, column: 5, scope: !11325)
!11378 = !DILocation(line: 6199, column: 15, scope: !11325)
!11379 = !DILocation(line: 6199, column: 26, scope: !11325)
!11380 = !DILocation(line: 6199, column: 33, scope: !11325)
!11381 = !DILocation(line: 6200, column: 5, scope: !11325)
!11382 = !DILocation(line: 6200, column: 15, scope: !11325)
!11383 = !DILocation(line: 6200, column: 27, scope: !11325)
!11384 = !DILocation(line: 6200, column: 34, scope: !11325)
!11385 = !DILocation(line: 6201, column: 3, scope: !11325)
!11386 = !DILocation(line: 6205, column: 24, scope: !2236)
!11387 = !DILocation(line: 6205, column: 30, scope: !2236)
!11388 = !DILocation(line: 6205, column: 3, scope: !2236)
!11389 = !DILocation(line: 6206, column: 24, scope: !2236)
!11390 = !DILocation(line: 6206, column: 30, scope: !2236)
!11391 = !DILocation(line: 6206, column: 3, scope: !2236)
!11392 = !DILocation(line: 6207, column: 3, scope: !2236)
!11393 = !DILocation(line: 6207, column: 3, scope: !11394)
!11394 = !DILexicalBlockFile(scope: !11395, file: !1, discriminator: 1)
!11395 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6207, column: 3)
!11396 = !DILocation(line: 6208, column: 3, scope: !2236)
!11397 = !DILocation(line: 6208, column: 3, scope: !11398)
!11398 = !DILexicalBlockFile(scope: !11399, file: !1, discriminator: 1)
!11399 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6208, column: 3)
!11400 = !DILocation(line: 6209, column: 3, scope: !2236)
!11401 = !DILocation(line: 6209, column: 9, scope: !2236)
!11402 = !DILocation(line: 6209, column: 14, scope: !2236)
!11403 = !DILocation(line: 6209, column: 24, scope: !2236)
!11404 = !DILocation(line: 6210, column: 29, scope: !2236)
!11405 = !DILocation(line: 6210, column: 39, scope: !2236)
!11406 = !DILocation(line: 6210, column: 44, scope: !2236)
!11407 = !DILocation(line: 6210, column: 3, scope: !2236)
!11408 = !DILocation(line: 6210, column: 9, scope: !2236)
!11409 = !DILocation(line: 6210, column: 14, scope: !2236)
!11410 = !DILocation(line: 6210, column: 27, scope: !2236)
!11411 = !DILocation(line: 6211, column: 3, scope: !2236)
!11412 = !DILocation(line: 6211, column: 9, scope: !2236)
!11413 = !DILocation(line: 6211, column: 24, scope: !2236)
!11414 = !DILocation(line: 6211, column: 34, scope: !2236)
!11415 = !DILocation(line: 6212, column: 29, scope: !2236)
!11416 = !DILocation(line: 6212, column: 39, scope: !2236)
!11417 = !DILocation(line: 6212, column: 44, scope: !2236)
!11418 = !DILocation(line: 6212, column: 3, scope: !2236)
!11419 = !DILocation(line: 6212, column: 9, scope: !2236)
!11420 = !DILocation(line: 6212, column: 14, scope: !2236)
!11421 = !DILocation(line: 6212, column: 27, scope: !2236)
!11422 = !DILocation(line: 6213, column: 24, scope: !2236)
!11423 = !DILocation(line: 6213, column: 34, scope: !2236)
!11424 = !DILocation(line: 6213, column: 3, scope: !2236)
!11425 = !DILocation(line: 6213, column: 9, scope: !2236)
!11426 = !DILocation(line: 6213, column: 22, scope: !2236)
!11427 = !DILocation(line: 6216, column: 24, scope: !2236)
!11428 = !DILocation(line: 6216, column: 3, scope: !2236)
!11429 = !DILocation(line: 6218, column: 3, scope: !2236)
!11430 = !DILocation(line: 6218, column: 3, scope: !11431)
!11431 = !DILexicalBlockFile(scope: !11432, file: !1, discriminator: 1)
!11432 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6218, column: 3)
!11433 = !DILocation(line: 6221, column: 3, scope: !2236)
!11434 = !DILocation(line: 6221, column: 9, scope: !2236)
!11435 = !DILocation(line: 6221, column: 14, scope: !2236)
!11436 = !DILocation(line: 6221, column: 20, scope: !2236)
!11437 = !DILocation(line: 6223, column: 3, scope: !2236)
!11438 = !DILocation(line: 6223, column: 3, scope: !11439)
!11439 = !DILexicalBlockFile(scope: !11440, file: !1, discriminator: 1)
!11440 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6223, column: 3)
!11441 = !DILocation(line: 6224, column: 3, scope: !2236)
!11442 = !DILocation(line: 6224, column: 3, scope: !11443)
!11443 = !DILexicalBlockFile(scope: !11444, file: !1, discriminator: 1)
!11444 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6224, column: 3)
!11445 = !DILocation(line: 6225, column: 3, scope: !2236)
!11446 = !DILocation(line: 6225, column: 3, scope: !11447)
!11447 = !DILexicalBlockFile(scope: !11448, file: !1, discriminator: 1)
!11448 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6225, column: 3)
!11449 = !DILocation(line: 6226, column: 3, scope: !2236)
!11450 = !DILocation(line: 6226, column: 3, scope: !11451)
!11451 = !DILexicalBlockFile(scope: !11452, file: !1, discriminator: 1)
!11452 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6226, column: 3)
!11453 = !DILocation(line: 6227, column: 3, scope: !2236)
!11454 = !DILocation(line: 6227, column: 3, scope: !11455)
!11455 = !DILexicalBlockFile(scope: !11456, file: !1, discriminator: 1)
!11456 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6227, column: 3)
!11457 = !DILocation(line: 6228, column: 3, scope: !2236)
!11458 = !DILocation(line: 6228, column: 3, scope: !11459)
!11459 = !DILexicalBlockFile(scope: !11460, file: !1, discriminator: 1)
!11460 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6228, column: 3)
!11461 = !DILocation(line: 6229, column: 3, scope: !2236)
!11462 = !DILocation(line: 6229, column: 3, scope: !11463)
!11463 = !DILexicalBlockFile(scope: !11464, file: !1, discriminator: 1)
!11464 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6229, column: 3)
!11465 = !DILocation(line: 6231, column: 23, scope: !2236)
!11466 = !DILocation(line: 6231, column: 33, scope: !2236)
!11467 = !DILocation(line: 6231, column: 3, scope: !2236)
!11468 = !DILocation(line: 6232, column: 23, scope: !2236)
!11469 = !DILocation(line: 6232, column: 33, scope: !2236)
!11470 = !DILocation(line: 6232, column: 3, scope: !2236)
!11471 = !DILocation(line: 6234, column: 3, scope: !2236)
!11472 = !DILocation(line: 6234, column: 3, scope: !11473)
!11473 = !DILexicalBlockFile(scope: !11474, file: !1, discriminator: 1)
!11474 = distinct !DILexicalBlock(scope: !2236, file: !1, line: 6234, column: 3)
!11475 = !DILocation(line: 6239, column: 1, scope: !2236)
!11476 = !DILocalVariable(name: "data", arg: 1, scope: !2239, file: !1, line: 3287, type: !256)
!11477 = !DILocation(line: 3287, column: 57, scope: !2239)
!11478 = !DILocalVariable(name: "bundle", arg: 2, scope: !2239, file: !1, line: 3288, type: !1705)
!11479 = !DILocation(line: 3288, column: 61, scope: !2239)
!11480 = !DILocalVariable(name: "curr", scope: !2239, file: !1, line: 3290, type: !334)
!11481 = !DILocation(line: 3290, column: 30, scope: !2239)
!11482 = !DILocalVariable(name: "highscore", scope: !2239, file: !1, line: 3291, type: !599)
!11483 = !DILocation(line: 3291, column: 10, scope: !2239)
!11484 = !DILocalVariable(name: "score", scope: !2239, file: !1, line: 3292, type: !599)
!11485 = !DILocation(line: 3292, column: 10, scope: !2239)
!11486 = !DILocalVariable(name: "now", scope: !2239, file: !1, line: 3293, type: !411)
!11487 = !DILocation(line: 3293, column: 18, scope: !2239)
!11488 = !DILocalVariable(name: "conn_candidate", scope: !2239, file: !1, line: 3294, type: !262)
!11489 = !DILocation(line: 3294, column: 23, scope: !2239)
!11490 = !DILocalVariable(name: "conn", scope: !2239, file: !1, line: 3295, type: !262)
!11491 = !DILocation(line: 3295, column: 23, scope: !2239)
!11492 = !DILocation(line: 3297, column: 9, scope: !2239)
!11493 = !DILocation(line: 3299, column: 9, scope: !2239)
!11494 = !DILocation(line: 3299, column: 9, scope: !11495)
!11495 = !DILexicalBlockFile(scope: !2239, file: !1, discriminator: 1)
!11496 = !DILocation(line: 3301, column: 10, scope: !2239)
!11497 = !DILocation(line: 3301, column: 18, scope: !2239)
!11498 = !DILocation(line: 3301, column: 28, scope: !2239)
!11499 = !DILocation(line: 3301, column: 8, scope: !2239)
!11500 = !DILocation(line: 3302, column: 3, scope: !2239)
!11501 = !DILocation(line: 3302, column: 9, scope: !11495)
!11502 = !DILocation(line: 3302, column: 3, scope: !11495)
!11503 = !DILocation(line: 3303, column: 12, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !2239, file: !1, line: 3302, column: 15)
!11505 = !DILocation(line: 3303, column: 18, scope: !11504)
!11506 = !DILocation(line: 3303, column: 10, scope: !11504)
!11507 = !DILocation(line: 3305, column: 9, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11504, file: !1, line: 3305, column: 8)
!11509 = !DILocation(line: 3305, column: 15, scope: !11508)
!11510 = !DILocation(line: 3305, column: 8, scope: !11504)
!11511 = !DILocation(line: 3307, column: 15, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11508, file: !1, line: 3305, column: 22)
!11513 = !DILocation(line: 3307, column: 13, scope: !11512)
!11514 = !DILocation(line: 3309, column: 10, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11512, file: !1, line: 3309, column: 10)
!11516 = !DILocation(line: 3309, column: 18, scope: !11515)
!11517 = !DILocation(line: 3309, column: 16, scope: !11515)
!11518 = !DILocation(line: 3309, column: 10, scope: !11512)
!11519 = !DILocation(line: 3310, column: 21, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11515, file: !1, line: 3309, column: 29)
!11521 = !DILocation(line: 3310, column: 19, scope: !11520)
!11522 = !DILocation(line: 3311, column: 26, scope: !11520)
!11523 = !DILocation(line: 3311, column: 24, scope: !11520)
!11524 = !DILocation(line: 3312, column: 7, scope: !11520)
!11525 = !DILocation(line: 3313, column: 5, scope: !11512)
!11526 = !DILocation(line: 3314, column: 12, scope: !11504)
!11527 = !DILocation(line: 3314, column: 18, scope: !11504)
!11528 = !DILocation(line: 3314, column: 10, scope: !11504)
!11529 = !DILocation(line: 3302, column: 3, scope: !11530)
!11530 = !DILexicalBlockFile(scope: !2239, file: !1, discriminator: 2)
!11531 = !DILocation(line: 3317, column: 10, scope: !2239)
!11532 = !DILocation(line: 3317, column: 3, scope: !2239)
!11533 = !DILocalVariable(name: "data", arg: 1, scope: !2242, file: !1, line: 6042, type: !256)
!11534 = !DILocation(line: 6042, column: 50, scope: !2242)
!11535 = !DILocalVariable(name: "conn", arg: 2, scope: !2242, file: !1, line: 6043, type: !262)
!11536 = !DILocation(line: 6043, column: 52, scope: !2242)
!11537 = !DILocalVariable(name: "async", arg: 3, scope: !2242, file: !1, line: 6044, type: !1461)
!11538 = !DILocation(line: 6044, column: 38, scope: !2242)
!11539 = !DILocalVariable(name: "result", scope: !2242, file: !1, line: 6046, type: !289)
!11540 = !DILocation(line: 6046, column: 12, scope: !2242)
!11541 = !DILocalVariable(name: "timeout_ms", scope: !2242, file: !1, line: 6047, type: !599)
!11542 = !DILocation(line: 6047, column: 10, scope: !2242)
!11543 = !DILocation(line: 6047, column: 37, scope: !2242)
!11544 = !DILocation(line: 6047, column: 23, scope: !2242)
!11545 = !DILocation(line: 6052, column: 6, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !2242, file: !1, line: 6052, column: 6)
!11547 = !DILocation(line: 6052, column: 12, scope: !11546)
!11548 = !DILocation(line: 6052, column: 17, scope: !11546)
!11549 = !DILocation(line: 6052, column: 6, scope: !2242)
!11550 = !DILocation(line: 6056, column: 6, scope: !11546)
!11551 = !DILocation(line: 6056, column: 12, scope: !11546)
!11552 = !DILocation(line: 6056, column: 5, scope: !11546)
!11553 = !DILocalVariable(name: "rc", scope: !11554, file: !1, line: 6060, type: !316)
!11554 = distinct !DILexicalBlock(scope: !11546, file: !1, line: 6058, column: 8)
!11555 = !DILocation(line: 6060, column: 9, scope: !11554)
!11556 = !DILocalVariable(name: "hostaddr", scope: !11554, file: !1, line: 6061, type: !1310)
!11557 = !DILocation(line: 6061, column: 28, scope: !11554)
!11558 = !DILocation(line: 6094, column: 9, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11554, file: !1, line: 6094, column: 8)
!11560 = !DILocation(line: 6094, column: 15, scope: !11559)
!11561 = !DILocation(line: 6094, column: 20, scope: !11559)
!11562 = !DILocation(line: 6094, column: 8, scope: !11554)
!11563 = !DILocalVariable(name: "connhost", scope: !11564, file: !1, line: 6095, type: !2156)
!11564 = distinct !DILexicalBlock(scope: !11559, file: !1, line: 6094, column: 27)
!11565 = !DILocation(line: 6095, column: 24, scope: !11564)
!11566 = !DILocation(line: 6096, column: 10, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11564, file: !1, line: 6096, column: 10)
!11568 = !DILocation(line: 6096, column: 16, scope: !11567)
!11569 = !DILocation(line: 6096, column: 21, scope: !11567)
!11570 = !DILocation(line: 6096, column: 10, scope: !11564)
!11571 = !DILocation(line: 6097, column: 21, scope: !11567)
!11572 = !DILocation(line: 6097, column: 27, scope: !11567)
!11573 = !DILocation(line: 6097, column: 18, scope: !11567)
!11574 = !DILocation(line: 6097, column: 9, scope: !11567)
!11575 = !DILocation(line: 6099, column: 21, scope: !11567)
!11576 = !DILocation(line: 6099, column: 27, scope: !11567)
!11577 = !DILocation(line: 6099, column: 18, scope: !11567)
!11578 = !DILocation(line: 6103, column: 10, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11564, file: !1, line: 6103, column: 10)
!11580 = !DILocation(line: 6103, column: 16, scope: !11579)
!11581 = !DILocation(line: 6103, column: 21, scope: !11579)
!11582 = !DILocation(line: 6103, column: 10, scope: !11564)
!11583 = !DILocation(line: 6104, column: 22, scope: !11579)
!11584 = !DILocation(line: 6104, column: 28, scope: !11579)
!11585 = !DILocation(line: 6104, column: 9, scope: !11579)
!11586 = !DILocation(line: 6104, column: 15, scope: !11579)
!11587 = !DILocation(line: 6104, column: 20, scope: !11579)
!11588 = !DILocation(line: 6106, column: 22, scope: !11579)
!11589 = !DILocation(line: 6106, column: 28, scope: !11579)
!11590 = !DILocation(line: 6106, column: 9, scope: !11579)
!11591 = !DILocation(line: 6106, column: 15, scope: !11579)
!11592 = !DILocation(line: 6106, column: 20, scope: !11579)
!11593 = !DILocation(line: 6109, column: 32, scope: !11564)
!11594 = !DILocation(line: 6109, column: 38, scope: !11564)
!11595 = !DILocation(line: 6109, column: 48, scope: !11564)
!11596 = !DILocation(line: 6109, column: 59, scope: !11564)
!11597 = !DILocation(line: 6109, column: 65, scope: !11564)
!11598 = !DILocation(line: 6109, column: 54, scope: !11564)
!11599 = !DILocation(line: 6110, column: 43, scope: !11564)
!11600 = !DILocation(line: 6109, column: 12, scope: !11564)
!11601 = !DILocation(line: 6109, column: 10, scope: !11564)
!11602 = !DILocation(line: 6111, column: 10, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11564, file: !1, line: 6111, column: 10)
!11604 = !DILocation(line: 6111, column: 13, scope: !11603)
!11605 = !DILocation(line: 6111, column: 10, scope: !11564)
!11606 = !DILocation(line: 6112, column: 10, scope: !11603)
!11607 = !DILocation(line: 6112, column: 16, scope: !11603)
!11608 = !DILocation(line: 6112, column: 9, scope: !11603)
!11609 = !DILocation(line: 6114, column: 15, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11603, file: !1, line: 6114, column: 15)
!11611 = !DILocation(line: 6114, column: 18, scope: !11610)
!11612 = !DILocation(line: 6114, column: 15, scope: !11603)
!11613 = !DILocation(line: 6115, column: 16, scope: !11610)
!11614 = !DILocation(line: 6115, column: 9, scope: !11610)
!11615 = !DILocation(line: 6117, column: 16, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11610, file: !1, line: 6117, column: 15)
!11617 = !DILocation(line: 6117, column: 15, scope: !11610)
!11618 = !DILocation(line: 6118, column: 15, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !1, line: 6117, column: 26)
!11620 = !DILocation(line: 6118, column: 51, scope: !11619)
!11621 = !DILocation(line: 6118, column: 61, scope: !11619)
!11622 = !DILocation(line: 6118, column: 9, scope: !11619)
!11623 = !DILocation(line: 6119, column: 16, scope: !11619)
!11624 = !DILocation(line: 6121, column: 7, scope: !11619)
!11625 = !DILocation(line: 6122, column: 5, scope: !11564)
!11626 = !DILocalVariable(name: "host", scope: !11627, file: !1, line: 6126, type: !11628)
!11627 = distinct !DILexicalBlock(scope: !11559, file: !1, line: 6123, column: 10)
!11628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!11629 = !DILocation(line: 6126, column: 31, scope: !11627)
!11630 = !DILocation(line: 6126, column: 38, scope: !11627)
!11631 = !DILocation(line: 6126, column: 44, scope: !11627)
!11632 = !DILocation(line: 6126, column: 49, scope: !11627)
!11633 = !DILocation(line: 6127, column: 10, scope: !11627)
!11634 = !DILocation(line: 6127, column: 16, scope: !11627)
!11635 = !DILocation(line: 6127, column: 28, scope: !11627)
!11636 = !DILocation(line: 6126, column: 38, scope: !11637)
!11637 = !DILexicalBlockFile(scope: !11627, file: !1, discriminator: 1)
!11638 = !DILocation(line: 6127, column: 36, scope: !11637)
!11639 = !DILocation(line: 6127, column: 42, scope: !11637)
!11640 = !DILocation(line: 6127, column: 53, scope: !11637)
!11641 = !DILocation(line: 6126, column: 38, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !11627, file: !1, discriminator: 2)
!11643 = !DILocation(line: 6126, column: 38, scope: !11644)
!11644 = !DILexicalBlockFile(scope: !11627, file: !1, discriminator: 3)
!11645 = !DILocation(line: 6126, column: 31, scope: !11644)
!11646 = !DILocation(line: 6130, column: 32, scope: !11627)
!11647 = !DILocation(line: 6130, column: 38, scope: !11627)
!11648 = !DILocation(line: 6130, column: 44, scope: !11627)
!11649 = !DILocation(line: 6130, column: 55, scope: !11627)
!11650 = !DILocation(line: 6130, column: 61, scope: !11627)
!11651 = !DILocation(line: 6130, column: 50, scope: !11627)
!11652 = !DILocation(line: 6131, column: 43, scope: !11627)
!11653 = !DILocation(line: 6130, column: 12, scope: !11627)
!11654 = !DILocation(line: 6130, column: 10, scope: !11627)
!11655 = !DILocation(line: 6133, column: 10, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11627, file: !1, line: 6133, column: 10)
!11657 = !DILocation(line: 6133, column: 13, scope: !11656)
!11658 = !DILocation(line: 6133, column: 10, scope: !11627)
!11659 = !DILocation(line: 6134, column: 10, scope: !11656)
!11660 = !DILocation(line: 6134, column: 16, scope: !11656)
!11661 = !DILocation(line: 6134, column: 9, scope: !11656)
!11662 = !DILocation(line: 6136, column: 15, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11656, file: !1, line: 6136, column: 15)
!11664 = !DILocation(line: 6136, column: 18, scope: !11663)
!11665 = !DILocation(line: 6136, column: 15, scope: !11656)
!11666 = !DILocation(line: 6137, column: 16, scope: !11663)
!11667 = !DILocation(line: 6137, column: 9, scope: !11663)
!11668 = !DILocation(line: 6139, column: 16, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11663, file: !1, line: 6139, column: 15)
!11670 = !DILocation(line: 6139, column: 15, scope: !11663)
!11671 = !DILocation(line: 6140, column: 15, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !1, line: 6139, column: 26)
!11673 = !DILocation(line: 6140, column: 52, scope: !11672)
!11674 = !DILocation(line: 6140, column: 58, scope: !11672)
!11675 = !DILocation(line: 6140, column: 9, scope: !11672)
!11676 = !DILocation(line: 6141, column: 16, scope: !11672)
!11677 = !DILocation(line: 6143, column: 7, scope: !11672)
!11678 = !DILocation(line: 6145, column: 5, scope: !11554)
!11679 = !DILocation(line: 6145, column: 5, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !11681, file: !1, discriminator: 1)
!11681 = distinct !DILexicalBlock(scope: !11554, file: !1, line: 6145, column: 5)
!11682 = !DILocation(line: 6146, column: 23, scope: !11554)
!11683 = !DILocation(line: 6146, column: 5, scope: !11554)
!11684 = !DILocation(line: 6146, column: 11, scope: !11554)
!11685 = !DILocation(line: 6146, column: 21, scope: !11554)
!11686 = !DILocation(line: 6149, column: 10, scope: !2242)
!11687 = !DILocation(line: 6149, column: 3, scope: !2242)
!11688 = !DILocalVariable(name: "user", arg: 1, scope: !2161, file: !1, line: 4100, type: !311)
!11689 = !DILocation(line: 4100, column: 30, scope: !2161)
!11690 = !DILocalVariable(name: "element", arg: 2, scope: !2161, file: !1, line: 4100, type: !311)
!11691 = !DILocation(line: 4100, column: 42, scope: !2161)
!11692 = !DILocation(line: 4102, column: 9, scope: !2161)
!11693 = !DILocation(line: 4103, column: 9, scope: !2161)
!11694 = !DILocation(line: 4105, column: 1, scope: !2161)
!11695 = !DILocalVariable(name: "data", arg: 1, scope: !2165, file: !1, line: 4245, type: !256)
!11696 = !DILocation(line: 4245, column: 48, scope: !2165)
!11697 = !DILocalVariable(name: "conn", arg: 2, scope: !2165, file: !1, line: 4246, type: !262)
!11698 = !DILocation(line: 4246, column: 50, scope: !2165)
!11699 = !DILocalVariable(name: "protostr", arg: 3, scope: !2165, file: !1, line: 4247, type: !527)
!11700 = !DILocation(line: 4247, column: 42, scope: !2165)
!11701 = !DILocalVariable(name: "pp", scope: !2165, file: !1, line: 4249, type: !11702)
!11702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64, align: 64)
!11703 = !DILocation(line: 4249, column: 38, scope: !2165)
!11704 = !DILocalVariable(name: "p", scope: !2165, file: !1, line: 4250, type: !1448)
!11705 = !DILocation(line: 4250, column: 30, scope: !2165)
!11706 = !DILocation(line: 4255, column: 10, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 4255, column: 3)
!11708 = !DILocation(line: 4255, column: 7, scope: !11707)
!11709 = !DILocation(line: 4255, column: 29, scope: !11710)
!11710 = !DILexicalBlockFile(scope: !11711, file: !1, discriminator: 1)
!11711 = distinct !DILexicalBlock(scope: !11707, file: !1, line: 4255, column: 3)
!11712 = !DILocation(line: 4255, column: 28, scope: !11710)
!11713 = !DILocation(line: 4255, column: 26, scope: !11710)
!11714 = !DILocation(line: 4255, column: 33, scope: !11710)
!11715 = !DILocation(line: 4255, column: 3, scope: !11710)
!11716 = !DILocation(line: 4256, column: 8, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !1, line: 4256, column: 8)
!11718 = distinct !DILexicalBlock(scope: !11711, file: !1, line: 4255, column: 48)
!11719 = !DILocation(line: 4256, column: 8, scope: !11718)
!11720 = !DILocation(line: 4258, column: 12, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !1, line: 4258, column: 10)
!11722 = distinct !DILexicalBlock(scope: !11717, file: !1, line: 4256, column: 45)
!11723 = !DILocation(line: 4258, column: 18, scope: !11721)
!11724 = !DILocation(line: 4258, column: 22, scope: !11721)
!11725 = !DILocation(line: 4258, column: 42, scope: !11721)
!11726 = !DILocation(line: 4258, column: 45, scope: !11721)
!11727 = !DILocation(line: 4258, column: 40, scope: !11721)
!11728 = !DILocation(line: 4258, column: 10, scope: !11722)
!11729 = !DILocation(line: 4260, column: 9, scope: !11721)
!11730 = !DILocation(line: 4264, column: 10, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11722, file: !1, line: 4264, column: 10)
!11732 = !DILocation(line: 4264, column: 16, scope: !11731)
!11733 = !DILocation(line: 4264, column: 22, scope: !11731)
!11734 = !DILocation(line: 4264, column: 39, scope: !11731)
!11735 = !DILocation(line: 4265, column: 12, scope: !11731)
!11736 = !DILocation(line: 4265, column: 18, scope: !11731)
!11737 = !DILocation(line: 4265, column: 22, scope: !11731)
!11738 = !DILocation(line: 4265, column: 40, scope: !11731)
!11739 = !DILocation(line: 4265, column: 43, scope: !11731)
!11740 = !DILocation(line: 4265, column: 38, scope: !11731)
!11741 = !DILocation(line: 4264, column: 10, scope: !11742)
!11742 = !DILexicalBlockFile(scope: !11722, file: !1, discriminator: 1)
!11743 = !DILocation(line: 4267, column: 9, scope: !11731)
!11744 = !DILocation(line: 4270, column: 37, scope: !11722)
!11745 = !DILocation(line: 4270, column: 23, scope: !11722)
!11746 = !DILocation(line: 4270, column: 29, scope: !11722)
!11747 = !DILocation(line: 4270, column: 35, scope: !11722)
!11748 = !DILocation(line: 4270, column: 7, scope: !11722)
!11749 = !DILocation(line: 4270, column: 13, scope: !11722)
!11750 = !DILocation(line: 4270, column: 21, scope: !11722)
!11751 = !DILocation(line: 4273, column: 7, scope: !11722)
!11752 = !DILocation(line: 4275, column: 3, scope: !11718)
!11753 = !DILocation(line: 4255, column: 44, scope: !11754)
!11754 = !DILexicalBlockFile(scope: !11711, file: !1, discriminator: 2)
!11755 = !DILocation(line: 4255, column: 3, scope: !11754)
!11756 = !DILocation(line: 4281, column: 9, scope: !2165)
!11757 = !DILocation(line: 4282, column: 9, scope: !2165)
!11758 = !DILocation(line: 4281, column: 3, scope: !2165)
!11759 = !DILocation(line: 4284, column: 3, scope: !2165)
!11760 = !DILocation(line: 4285, column: 1, scope: !2165)
!11761 = !DILocalVariable(name: "data", arg: 1, scope: !2168, file: !1, line: 5367, type: !256)
!11762 = !DILocation(line: 5367, column: 51, scope: !2168)
!11763 = !DILocalVariable(name: "conn", arg: 2, scope: !2168, file: !1, line: 5368, type: !262)
!11764 = !DILocation(line: 5368, column: 53, scope: !2168)
!11765 = !DILocalVariable(name: "user", arg: 3, scope: !2168, file: !1, line: 5369, type: !1562)
!11766 = !DILocation(line: 5369, column: 40, scope: !2168)
!11767 = !DILocalVariable(name: "passwd", arg: 4, scope: !2168, file: !1, line: 5369, type: !1562)
!11768 = !DILocation(line: 5369, column: 53, scope: !2168)
!11769 = !DILocalVariable(name: "options", arg: 5, scope: !2168, file: !1, line: 5369, type: !1562)
!11770 = !DILocation(line: 5369, column: 68, scope: !2168)
!11771 = !DILocalVariable(name: "result", scope: !2168, file: !1, line: 5371, type: !289)
!11772 = !DILocation(line: 5371, column: 12, scope: !2168)
!11773 = !DILocalVariable(name: "userp", scope: !2168, file: !1, line: 5372, type: !500)
!11774 = !DILocation(line: 5372, column: 9, scope: !2168)
!11775 = !DILocalVariable(name: "passwdp", scope: !2168, file: !1, line: 5373, type: !500)
!11776 = !DILocation(line: 5373, column: 9, scope: !2168)
!11777 = !DILocalVariable(name: "optionsp", scope: !2168, file: !1, line: 5374, type: !500)
!11778 = !DILocation(line: 5374, column: 9, scope: !2168)
!11779 = !DILocalVariable(name: "ptr", scope: !2168, file: !1, line: 5383, type: !500)
!11780 = !DILocation(line: 5383, column: 9, scope: !2168)
!11781 = !DILocation(line: 5383, column: 22, scope: !2168)
!11782 = !DILocation(line: 5383, column: 28, scope: !2168)
!11783 = !DILocation(line: 5383, column: 33, scope: !2168)
!11784 = !DILocation(line: 5383, column: 15, scope: !2168)
!11785 = !DILocalVariable(name: "login", scope: !2168, file: !1, line: 5384, type: !500)
!11786 = !DILocation(line: 5384, column: 9, scope: !2168)
!11787 = !DILocation(line: 5384, column: 17, scope: !2168)
!11788 = !DILocation(line: 5384, column: 23, scope: !2168)
!11789 = !DILocation(line: 5384, column: 28, scope: !2168)
!11790 = !DILocation(line: 5386, column: 3, scope: !2168)
!11791 = !DILocation(line: 5386, column: 3, scope: !11792)
!11792 = !DILexicalBlockFile(scope: !11793, file: !1, discriminator: 1)
!11793 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5386, column: 3)
!11794 = !DILocation(line: 5387, column: 3, scope: !2168)
!11795 = !DILocation(line: 5387, column: 3, scope: !11796)
!11796 = !DILexicalBlockFile(scope: !11797, file: !1, discriminator: 1)
!11797 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5387, column: 3)
!11798 = !DILocation(line: 5388, column: 3, scope: !2168)
!11799 = !DILocation(line: 5388, column: 3, scope: !11800)
!11800 = !DILexicalBlockFile(scope: !11801, file: !1, discriminator: 1)
!11801 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5388, column: 3)
!11802 = !DILocation(line: 5389, column: 3, scope: !2168)
!11803 = !DILocation(line: 5389, column: 3, scope: !11804)
!11804 = !DILexicalBlockFile(scope: !11805, file: !1, discriminator: 1)
!11805 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5389, column: 3)
!11806 = !DILocation(line: 5391, column: 7, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5391, column: 6)
!11808 = !DILocation(line: 5391, column: 6, scope: !2168)
!11809 = !DILocation(line: 5392, column: 5, scope: !11807)
!11810 = !DILocation(line: 5397, column: 21, scope: !2168)
!11811 = !DILocation(line: 5397, column: 3, scope: !2168)
!11812 = !DILocation(line: 5397, column: 9, scope: !2168)
!11813 = !DILocation(line: 5397, column: 14, scope: !2168)
!11814 = !DILocation(line: 5397, column: 19, scope: !2168)
!11815 = !DILocation(line: 5405, column: 6, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5405, column: 6)
!11817 = !DILocation(line: 5405, column: 12, scope: !11816)
!11818 = !DILocation(line: 5405, column: 16, scope: !11816)
!11819 = !DILocation(line: 5405, column: 26, scope: !11816)
!11820 = !DILocation(line: 5405, column: 6, scope: !2168)
!11821 = !DILocation(line: 5406, column: 5, scope: !11816)
!11822 = !DILocation(line: 5410, column: 32, scope: !2168)
!11823 = !DILocation(line: 5410, column: 39, scope: !2168)
!11824 = !DILocation(line: 5410, column: 45, scope: !2168)
!11825 = !DILocation(line: 5410, column: 43, scope: !2168)
!11826 = !DILocation(line: 5410, column: 51, scope: !2168)
!11827 = !DILocation(line: 5412, column: 33, scope: !2168)
!11828 = !DILocation(line: 5412, column: 39, scope: !2168)
!11829 = !DILocation(line: 5412, column: 48, scope: !2168)
!11830 = !DILocation(line: 5412, column: 54, scope: !2168)
!11831 = !DILocation(line: 5412, column: 32, scope: !2168)
!11832 = !DILocation(line: 5412, column: 32, scope: !11833)
!11833 = !DILexicalBlockFile(scope: !2168, file: !1, discriminator: 1)
!11834 = !DILocation(line: 5412, column: 32, scope: !11835)
!11835 = !DILexicalBlockFile(scope: !2168, file: !1, discriminator: 2)
!11836 = !DILocation(line: 5412, column: 32, scope: !11837)
!11837 = !DILexicalBlockFile(scope: !2168, file: !1, discriminator: 3)
!11838 = !DILocation(line: 5410, column: 12, scope: !11833)
!11839 = !DILocation(line: 5410, column: 10, scope: !11833)
!11840 = !DILocation(line: 5414, column: 6, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5414, column: 6)
!11842 = !DILocation(line: 5414, column: 6, scope: !2168)
!11843 = !DILocation(line: 5415, column: 5, scope: !11841)
!11844 = !DILocation(line: 5417, column: 6, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5417, column: 6)
!11846 = !DILocation(line: 5417, column: 6, scope: !2168)
!11847 = !DILocalVariable(name: "newname", scope: !11848, file: !1, line: 5418, type: !500)
!11848 = distinct !DILexicalBlock(scope: !11845, file: !1, line: 5417, column: 13)
!11849 = !DILocation(line: 5418, column: 11, scope: !11848)
!11850 = !DILocation(line: 5421, column: 5, scope: !11848)
!11851 = !DILocation(line: 5421, column: 11, scope: !11848)
!11852 = !DILocation(line: 5421, column: 16, scope: !11848)
!11853 = !DILocation(line: 5421, column: 31, scope: !11848)
!11854 = !DILocation(line: 5422, column: 5, scope: !11848)
!11855 = !DILocation(line: 5422, column: 11, scope: !11848)
!11856 = !DILocation(line: 5422, column: 16, scope: !11848)
!11857 = !DILocation(line: 5422, column: 28, scope: !11848)
!11858 = !DILocation(line: 5425, column: 29, scope: !11848)
!11859 = !DILocation(line: 5425, column: 35, scope: !11848)
!11860 = !DILocation(line: 5425, column: 14, scope: !11848)
!11861 = !DILocation(line: 5425, column: 12, scope: !11848)
!11862 = !DILocation(line: 5426, column: 8, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11848, file: !1, line: 5426, column: 8)
!11864 = !DILocation(line: 5426, column: 8, scope: !11848)
!11865 = !DILocation(line: 5427, column: 7, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11863, file: !1, line: 5426, column: 16)
!11867 = !DILocation(line: 5430, column: 5, scope: !11848)
!11868 = !DILocation(line: 5431, column: 13, scope: !11848)
!11869 = !DILocation(line: 5431, column: 6, scope: !11848)
!11870 = !DILocation(line: 5431, column: 11, scope: !11848)
!11871 = !DILocation(line: 5432, column: 3, scope: !11848)
!11872 = !DILocation(line: 5434, column: 6, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5434, column: 6)
!11874 = !DILocation(line: 5434, column: 6, scope: !2168)
!11875 = !DILocalVariable(name: "newpasswd", scope: !11876, file: !1, line: 5436, type: !500)
!11876 = distinct !DILexicalBlock(scope: !11873, file: !1, line: 5434, column: 15)
!11877 = !DILocation(line: 5436, column: 11, scope: !11876)
!11878 = !DILocation(line: 5437, column: 29, scope: !11876)
!11879 = !DILocation(line: 5437, column: 35, scope: !11876)
!11880 = !DILocation(line: 5437, column: 14, scope: !11876)
!11881 = !DILocation(line: 5437, column: 12, scope: !11876)
!11882 = !DILocation(line: 5438, column: 8, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11876, file: !1, line: 5438, column: 8)
!11884 = !DILocation(line: 5438, column: 8, scope: !11876)
!11885 = !DILocation(line: 5439, column: 7, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11883, file: !1, line: 5438, column: 16)
!11887 = !DILocation(line: 5442, column: 5, scope: !11876)
!11888 = !DILocation(line: 5443, column: 15, scope: !11876)
!11889 = !DILocation(line: 5443, column: 6, scope: !11876)
!11890 = !DILocation(line: 5443, column: 13, scope: !11876)
!11891 = !DILocation(line: 5444, column: 3, scope: !11876)
!11892 = !DILocation(line: 5446, column: 6, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 5446, column: 6)
!11894 = !DILocation(line: 5446, column: 6, scope: !2168)
!11895 = !DILocalVariable(name: "newoptions", scope: !11896, file: !1, line: 5448, type: !500)
!11896 = distinct !DILexicalBlock(scope: !11893, file: !1, line: 5446, column: 16)
!11897 = !DILocation(line: 5448, column: 11, scope: !11896)
!11898 = !DILocation(line: 5449, column: 29, scope: !11896)
!11899 = !DILocation(line: 5449, column: 35, scope: !11896)
!11900 = !DILocation(line: 5449, column: 14, scope: !11896)
!11901 = !DILocation(line: 5449, column: 12, scope: !11896)
!11902 = !DILocation(line: 5450, column: 8, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11896, file: !1, line: 5450, column: 8)
!11904 = !DILocation(line: 5450, column: 8, scope: !11896)
!11905 = !DILocation(line: 5451, column: 7, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1, line: 5450, column: 16)
!11907 = !DILocation(line: 5454, column: 5, scope: !11896)
!11908 = !DILocation(line: 5455, column: 16, scope: !11896)
!11909 = !DILocation(line: 5455, column: 6, scope: !11896)
!11910 = !DILocation(line: 5455, column: 14, scope: !11896)
!11911 = !DILocation(line: 5456, column: 3, scope: !11896)
!11912 = !DILocation(line: 5446, column: 6, scope: !11913)
!11913 = !DILexicalBlockFile(scope: !11893, file: !1, discriminator: 1)
!11914 = !DILocation(line: 5461, column: 3, scope: !2168)
!11915 = !DILocation(line: 5462, column: 3, scope: !2168)
!11916 = !DILocation(line: 5463, column: 3, scope: !2168)
!11917 = !DILocation(line: 5465, column: 10, scope: !2168)
!11918 = !DILocation(line: 5465, column: 3, scope: !2168)
!11919 = !DILocalVariable(name: "data", arg: 1, scope: !2172, file: !1, line: 5162, type: !256)
!11920 = !DILocation(line: 5162, column: 52, scope: !2172)
!11921 = !DILocalVariable(name: "conn", arg: 2, scope: !2172, file: !1, line: 5163, type: !262)
!11922 = !DILocation(line: 5163, column: 54, scope: !2172)
!11923 = !DILocalVariable(name: "proxyuser", scope: !2172, file: !1, line: 5165, type: !1528)
!11924 = !DILocation(line: 5165, column: 8, scope: !2172)
!11925 = !DILocalVariable(name: "proxypasswd", scope: !2172, file: !1, line: 5166, type: !1528)
!11926 = !DILocation(line: 5166, column: 8, scope: !2172)
!11927 = !DILocalVariable(name: "result", scope: !2172, file: !1, line: 5167, type: !289)
!11928 = !DILocation(line: 5167, column: 12, scope: !2172)
!11929 = !DILocation(line: 5169, column: 6, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !2172, file: !1, line: 5169, column: 6)
!11931 = !DILocation(line: 5169, column: 12, scope: !11930)
!11932 = !DILocation(line: 5169, column: 16, scope: !11930)
!11933 = !DILocation(line: 5169, column: 42, scope: !11930)
!11934 = !DILocation(line: 5169, column: 6, scope: !2172)
!11935 = !DILocation(line: 5170, column: 13, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11930, file: !1, line: 5169, column: 51)
!11937 = !DILocation(line: 5170, column: 24, scope: !11936)
!11938 = !DILocation(line: 5170, column: 30, scope: !11936)
!11939 = !DILocation(line: 5170, column: 34, scope: !11936)
!11940 = !DILocation(line: 5170, column: 5, scope: !11936)
!11941 = !DILocation(line: 5172, column: 5, scope: !11936)
!11942 = !DILocation(line: 5172, column: 39, scope: !11936)
!11943 = !DILocation(line: 5173, column: 3, scope: !11936)
!11944 = !DILocation(line: 5174, column: 6, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !2172, file: !1, line: 5174, column: 6)
!11946 = !DILocation(line: 5174, column: 12, scope: !11945)
!11947 = !DILocation(line: 5174, column: 16, scope: !11945)
!11948 = !DILocation(line: 5174, column: 42, scope: !11945)
!11949 = !DILocation(line: 5174, column: 6, scope: !2172)
!11950 = !DILocation(line: 5175, column: 13, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11945, file: !1, line: 5174, column: 51)
!11952 = !DILocation(line: 5175, column: 26, scope: !11951)
!11953 = !DILocation(line: 5175, column: 32, scope: !11951)
!11954 = !DILocation(line: 5175, column: 36, scope: !11951)
!11955 = !DILocation(line: 5175, column: 5, scope: !11951)
!11956 = !DILocation(line: 5177, column: 5, scope: !11951)
!11957 = !DILocation(line: 5177, column: 45, scope: !11951)
!11958 = !DILocation(line: 5178, column: 3, scope: !11951)
!11959 = !DILocation(line: 5180, column: 27, scope: !2172)
!11960 = !DILocation(line: 5180, column: 33, scope: !2172)
!11961 = !DILocation(line: 5180, column: 48, scope: !2172)
!11962 = !DILocation(line: 5180, column: 54, scope: !2172)
!11963 = !DILocation(line: 5180, column: 65, scope: !2172)
!11964 = !DILocation(line: 5180, column: 12, scope: !2172)
!11965 = !DILocation(line: 5180, column: 10, scope: !2172)
!11966 = !DILocation(line: 5182, column: 7, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !2172, file: !1, line: 5182, column: 6)
!11968 = !DILocation(line: 5182, column: 6, scope: !2172)
!11969 = !DILocation(line: 5183, column: 29, scope: !11967)
!11970 = !DILocation(line: 5183, column: 35, scope: !11967)
!11971 = !DILocation(line: 5183, column: 52, scope: !11967)
!11972 = !DILocation(line: 5183, column: 58, scope: !11967)
!11973 = !DILocation(line: 5183, column: 69, scope: !11967)
!11974 = !DILocation(line: 5183, column: 14, scope: !11967)
!11975 = !DILocation(line: 5183, column: 12, scope: !11967)
!11976 = !DILocation(line: 5183, column: 5, scope: !11967)
!11977 = !DILocation(line: 5185, column: 10, scope: !2172)
!11978 = !DILocation(line: 5185, column: 3, scope: !2172)
!11979 = !DILocalVariable(name: "name", arg: 1, scope: !2173, file: !1, line: 4814, type: !527)
!11980 = !DILocation(line: 4814, column: 39, scope: !2173)
!11981 = !DILocalVariable(name: "no_proxy", arg: 2, scope: !2173, file: !1, line: 4814, type: !527)
!11982 = !DILocation(line: 4814, column: 57, scope: !2173)
!11983 = !DILocalVariable(name: "tok_start", scope: !2173, file: !1, line: 4821, type: !347)
!11984 = !DILocation(line: 4821, column: 10, scope: !2173)
!11985 = !DILocalVariable(name: "tok_end", scope: !2173, file: !1, line: 4822, type: !347)
!11986 = !DILocation(line: 4822, column: 10, scope: !2173)
!11987 = !DILocalVariable(name: "separator", scope: !2173, file: !1, line: 4823, type: !527)
!11988 = !DILocation(line: 4823, column: 15, scope: !2173)
!11989 = !DILocalVariable(name: "no_proxy_len", scope: !2173, file: !1, line: 4824, type: !347)
!11990 = !DILocation(line: 4824, column: 10, scope: !2173)
!11991 = !DILocalVariable(name: "namelen", scope: !2173, file: !1, line: 4825, type: !347)
!11992 = !DILocation(line: 4825, column: 10, scope: !2173)
!11993 = !DILocalVariable(name: "endptr", scope: !2173, file: !1, line: 4826, type: !500)
!11994 = !DILocation(line: 4826, column: 9, scope: !2173)
!11995 = !DILocation(line: 4828, column: 6, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !2173, file: !1, line: 4828, column: 6)
!11997 = !DILocation(line: 4828, column: 15, scope: !11996)
!11998 = !DILocation(line: 4828, column: 18, scope: !11999)
!11999 = !DILexicalBlockFile(scope: !11996, file: !1, discriminator: 1)
!12000 = !DILocation(line: 4828, column: 6, scope: !11999)
!12001 = !DILocation(line: 4829, column: 8, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !1, line: 4829, column: 8)
!12003 = distinct !DILexicalBlock(scope: !11996, file: !1, line: 4828, column: 31)
!12004 = !DILocation(line: 4829, column: 8, scope: !12003)
!12005 = !DILocation(line: 4830, column: 7, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12002, file: !1, line: 4829, column: 39)
!12007 = !DILocation(line: 4835, column: 27, scope: !12003)
!12008 = !DILocation(line: 4835, column: 20, scope: !12003)
!12009 = !DILocation(line: 4835, column: 18, scope: !12003)
!12010 = !DILocation(line: 4836, column: 21, scope: !12003)
!12011 = !DILocation(line: 4836, column: 14, scope: !12003)
!12012 = !DILocation(line: 4836, column: 12, scope: !12003)
!12013 = !DILocation(line: 4837, column: 8, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12003, file: !1, line: 4837, column: 8)
!12015 = !DILocation(line: 4837, column: 8, scope: !12003)
!12016 = !DILocation(line: 4838, column: 17, scope: !12014)
!12017 = !DILocation(line: 4838, column: 26, scope: !12014)
!12018 = !DILocation(line: 4838, column: 24, scope: !12014)
!12019 = !DILocation(line: 4838, column: 15, scope: !12014)
!12020 = !DILocation(line: 4838, column: 7, scope: !12014)
!12021 = !DILocation(line: 4840, column: 24, scope: !12014)
!12022 = !DILocation(line: 4840, column: 17, scope: !12014)
!12023 = !DILocation(line: 4840, column: 15, scope: !12014)
!12024 = !DILocation(line: 4842, column: 19, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12003, file: !1, line: 4842, column: 5)
!12026 = !DILocation(line: 4842, column: 9, scope: !12025)
!12027 = !DILocation(line: 4842, column: 24, scope: !12028)
!12028 = !DILexicalBlockFile(scope: !12029, file: !1, discriminator: 1)
!12029 = distinct !DILexicalBlock(scope: !12025, file: !1, line: 4842, column: 5)
!12030 = !DILocation(line: 4842, column: 36, scope: !12028)
!12031 = !DILocation(line: 4842, column: 34, scope: !12028)
!12032 = !DILocation(line: 4842, column: 5, scope: !12028)
!12033 = !DILocation(line: 4843, column: 7, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12029, file: !1, line: 4842, column: 75)
!12035 = !DILocation(line: 4843, column: 13, scope: !12036)
!12036 = !DILexicalBlockFile(scope: !12034, file: !1, discriminator: 1)
!12037 = !DILocation(line: 4843, column: 25, scope: !12036)
!12038 = !DILocation(line: 4843, column: 23, scope: !12036)
!12039 = !DILocation(line: 4843, column: 38, scope: !12036)
!12040 = !DILocation(line: 4844, column: 20, scope: !12034)
!12041 = !DILocation(line: 4844, column: 40, scope: !12034)
!12042 = !DILocation(line: 4844, column: 31, scope: !12034)
!12043 = !DILocation(line: 4844, column: 13, scope: !12034)
!12044 = !DILocation(line: 4844, column: 52, scope: !12034)
!12045 = !DILocation(line: 4843, column: 7, scope: !12046)
!12046 = !DILexicalBlockFile(scope: !12034, file: !1, discriminator: 2)
!12047 = !DILocation(line: 4846, column: 9, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 4844, column: 61)
!12049 = !DILocation(line: 4843, column: 7, scope: !12050)
!12050 = !DILexicalBlockFile(scope: !12034, file: !1, discriminator: 3)
!12051 = !DILocation(line: 4849, column: 10, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 4849, column: 10)
!12053 = !DILocation(line: 4849, column: 23, scope: !12052)
!12054 = !DILocation(line: 4849, column: 20, scope: !12052)
!12055 = !DILocation(line: 4849, column: 10, scope: !12034)
!12056 = !DILocation(line: 4850, column: 9, scope: !12052)
!12057 = !DILocation(line: 4852, column: 21, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 4852, column: 7)
!12059 = !DILocation(line: 4852, column: 19, scope: !12058)
!12060 = !DILocation(line: 4852, column: 11, scope: !12058)
!12061 = !DILocation(line: 4852, column: 32, scope: !12062)
!12062 = !DILexicalBlockFile(scope: !12063, file: !1, discriminator: 1)
!12063 = distinct !DILexicalBlock(scope: !12058, file: !1, line: 4852, column: 7)
!12064 = !DILocation(line: 4852, column: 42, scope: !12062)
!12065 = !DILocation(line: 4852, column: 40, scope: !12062)
!12066 = !DILocation(line: 4852, column: 55, scope: !12062)
!12067 = !DILocation(line: 4853, column: 20, scope: !12063)
!12068 = !DILocation(line: 4853, column: 40, scope: !12063)
!12069 = !DILocation(line: 4853, column: 31, scope: !12063)
!12070 = !DILocation(line: 4853, column: 13, scope: !12063)
!12071 = !DILocation(line: 4853, column: 50, scope: !12063)
!12072 = !DILocation(line: 4852, column: 7, scope: !12073)
!12073 = !DILexicalBlockFile(scope: !12058, file: !1, discriminator: 2)
!12074 = !DILocation(line: 4852, column: 7, scope: !12075)
!12075 = !DILexicalBlockFile(scope: !12058, file: !1, discriminator: 3)
!12076 = !DILocation(line: 4853, column: 59, scope: !12062)
!12077 = !DILocation(line: 4852, column: 7, scope: !12078)
!12078 = !DILexicalBlockFile(scope: !12063, file: !1, discriminator: 4)
!12079 = !DILocation(line: 4861, column: 19, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 4861, column: 10)
!12081 = !DILocation(line: 4861, column: 10, scope: !12080)
!12082 = !DILocation(line: 4861, column: 30, scope: !12080)
!12083 = !DILocation(line: 4861, column: 10, scope: !12034)
!12084 = !DILocation(line: 4862, column: 9, scope: !12080)
!12085 = !DILocation(line: 4864, column: 11, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 4864, column: 10)
!12087 = !DILocation(line: 4864, column: 21, scope: !12086)
!12088 = !DILocation(line: 4864, column: 19, scope: !12086)
!12089 = !DILocation(line: 4864, column: 35, scope: !12086)
!12090 = !DILocation(line: 4864, column: 32, scope: !12086)
!12091 = !DILocation(line: 4864, column: 10, scope: !12034)
!12092 = !DILocalVariable(name: "checkn", scope: !12093, file: !1, line: 4866, type: !527)
!12093 = distinct !DILexicalBlock(scope: !12086, file: !1, line: 4864, column: 44)
!12094 = !DILocation(line: 4866, column: 21, scope: !12093)
!12095 = !DILocation(line: 4866, column: 30, scope: !12093)
!12096 = !DILocation(line: 4866, column: 37, scope: !12093)
!12097 = !DILocation(line: 4866, column: 35, scope: !12093)
!12098 = !DILocation(line: 4866, column: 48, scope: !12093)
!12099 = !DILocation(line: 4866, column: 58, scope: !12093)
!12100 = !DILocation(line: 4866, column: 56, scope: !12093)
!12101 = !DILocation(line: 4866, column: 45, scope: !12093)
!12102 = !DILocation(line: 4867, column: 12, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12093, file: !1, line: 4867, column: 12)
!12104 = !DILocation(line: 4867, column: 12, scope: !12093)
!12105 = !DILocation(line: 4869, column: 15, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12107, file: !1, line: 4869, column: 14)
!12107 = distinct !DILexicalBlock(scope: !12103, file: !1, line: 4868, column: 50)
!12108 = !DILocation(line: 4869, column: 25, scope: !12106)
!12109 = !DILocation(line: 4869, column: 23, scope: !12106)
!12110 = !DILocation(line: 4869, column: 39, scope: !12106)
!12111 = !DILocation(line: 4869, column: 36, scope: !12106)
!12112 = !DILocation(line: 4869, column: 47, scope: !12106)
!12113 = !DILocation(line: 4869, column: 52, scope: !12114)
!12114 = !DILexicalBlockFile(scope: !12106, file: !1, discriminator: 1)
!12115 = !DILocation(line: 4869, column: 59, scope: !12114)
!12116 = !DILocation(line: 4869, column: 50, scope: !12114)
!12117 = !DILocation(line: 4869, column: 64, scope: !12114)
!12118 = !DILocation(line: 4869, column: 14, scope: !12114)
!12119 = !DILocation(line: 4873, column: 13, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12106, file: !1, line: 4869, column: 72)
!12121 = !DILocation(line: 4875, column: 9, scope: !12107)
!12122 = !DILocation(line: 4876, column: 7, scope: !12093)
!12123 = !DILocation(line: 4877, column: 5, scope: !12034)
!12124 = !DILocation(line: 4842, column: 62, scope: !12125)
!12125 = !DILexicalBlockFile(scope: !12029, file: !1, discriminator: 2)
!12126 = !DILocation(line: 4842, column: 70, scope: !12125)
!12127 = !DILocation(line: 4842, column: 60, scope: !12125)
!12128 = !DILocation(line: 4842, column: 5, scope: !12125)
!12129 = !DILocation(line: 4879, column: 3, scope: !12003)
!12130 = !DILocation(line: 4881, column: 3, scope: !2173)
!12131 = !DILocation(line: 4882, column: 1, scope: !2173)
!12132 = !DILocalVariable(name: "conn", arg: 1, scope: !2176, file: !1, line: 4890, type: !262)
!12133 = !DILocation(line: 4890, column: 47, scope: !2176)
!12134 = !DILocalVariable(name: "proxy", scope: !2176, file: !1, line: 4892, type: !500)
!12135 = !DILocation(line: 4892, column: 9, scope: !2176)
!12136 = !DILocalVariable(name: "proxy_env", scope: !2176, file: !1, line: 4911, type: !12137)
!12137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 1024, align: 8, elements: !12138)
!12138 = !{!12139}
!12139 = !DISubrange(count: 128)
!12140 = !DILocation(line: 4911, column: 8, scope: !2176)
!12141 = !DILocalVariable(name: "protop", scope: !2176, file: !1, line: 4912, type: !527)
!12142 = !DILocation(line: 4912, column: 15, scope: !2176)
!12143 = !DILocation(line: 4912, column: 24, scope: !2176)
!12144 = !DILocation(line: 4912, column: 30, scope: !2176)
!12145 = !DILocation(line: 4912, column: 39, scope: !2176)
!12146 = !DILocalVariable(name: "envp", scope: !2176, file: !1, line: 4913, type: !500)
!12147 = !DILocation(line: 4913, column: 9, scope: !2176)
!12148 = !DILocation(line: 4913, column: 16, scope: !2176)
!12149 = !DILocalVariable(name: "prox", scope: !2176, file: !1, line: 4914, type: !500)
!12150 = !DILocation(line: 4914, column: 9, scope: !2176)
!12151 = !DILocation(line: 4917, column: 3, scope: !2176)
!12152 = !DILocation(line: 4917, column: 10, scope: !12153)
!12153 = !DILexicalBlockFile(scope: !2176, file: !1, discriminator: 1)
!12154 = !DILocation(line: 4917, column: 9, scope: !12153)
!12155 = !DILocation(line: 4917, column: 3, scope: !12153)
!12156 = !DILocation(line: 4918, column: 41, scope: !2176)
!12157 = !DILocation(line: 4918, column: 34, scope: !2176)
!12158 = !DILocation(line: 4918, column: 29, scope: !2176)
!12159 = !DILocation(line: 4918, column: 21, scope: !2176)
!12160 = !DILocation(line: 4918, column: 15, scope: !2176)
!12161 = !DILocation(line: 4918, column: 10, scope: !2176)
!12162 = !DILocation(line: 4918, column: 13, scope: !2176)
!12163 = !DILocation(line: 4917, column: 3, scope: !12164)
!12164 = !DILexicalBlockFile(scope: !2176, file: !1, discriminator: 2)
!12165 = !DILocation(line: 4921, column: 10, scope: !2176)
!12166 = !DILocation(line: 4921, column: 3, scope: !2176)
!12167 = !DILocation(line: 4924, column: 20, scope: !2176)
!12168 = !DILocation(line: 4924, column: 8, scope: !2176)
!12169 = !DILocation(line: 4924, column: 7, scope: !2176)
!12170 = !DILocation(line: 4938, column: 7, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 4938, column: 6)
!12172 = !DILocation(line: 4938, column: 12, scope: !12171)
!12173 = !DILocation(line: 4938, column: 16, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !12171, file: !1, discriminator: 1)
!12175 = !DILocation(line: 4938, column: 6, scope: !12174)
!12176 = !DILocation(line: 4940, column: 22, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12171, file: !1, line: 4938, column: 57)
!12178 = !DILocation(line: 4940, column: 33, scope: !12177)
!12179 = !DILocation(line: 4940, column: 5, scope: !12177)
!12180 = !DILocation(line: 4941, column: 22, scope: !12177)
!12181 = !DILocation(line: 4941, column: 10, scope: !12177)
!12182 = !DILocation(line: 4941, column: 9, scope: !12177)
!12183 = !DILocation(line: 4942, column: 3, scope: !12177)
!12184 = !DILocation(line: 4944, column: 6, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 4944, column: 6)
!12186 = !DILocation(line: 4944, column: 6, scope: !2176)
!12187 = !DILocation(line: 4945, column: 13, scope: !12185)
!12188 = !DILocation(line: 4945, column: 11, scope: !12185)
!12189 = !DILocation(line: 4945, column: 5, scope: !12185)
!12190 = !DILocation(line: 4947, column: 13, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12185, file: !1, line: 4946, column: 8)
!12192 = !DILocation(line: 4947, column: 11, scope: !12191)
!12193 = !DILocation(line: 4948, column: 9, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12191, file: !1, line: 4948, column: 8)
!12195 = !DILocation(line: 4948, column: 8, scope: !12191)
!12196 = !DILocation(line: 4949, column: 13, scope: !12194)
!12197 = !DILocation(line: 4949, column: 12, scope: !12194)
!12198 = !DILocation(line: 4949, column: 7, scope: !12194)
!12199 = !DILocation(line: 4952, column: 10, scope: !2176)
!12200 = !DILocation(line: 4952, column: 3, scope: !2176)
!12201 = !DILocalVariable(name: "data", arg: 1, scope: !2179, file: !1, line: 4961, type: !256)
!12202 = !DILocation(line: 4961, column: 47, scope: !2179)
!12203 = !DILocalVariable(name: "conn", arg: 2, scope: !2179, file: !1, line: 4962, type: !262)
!12204 = !DILocation(line: 4962, column: 49, scope: !2179)
!12205 = !DILocalVariable(name: "proxy", arg: 3, scope: !2179, file: !1, line: 4962, type: !500)
!12206 = !DILocation(line: 4962, column: 61, scope: !2179)
!12207 = !DILocalVariable(name: "proxytype", arg: 4, scope: !2179, file: !1, line: 4963, type: !904)
!12208 = !DILocation(line: 4963, column: 44, scope: !2179)
!12209 = !DILocalVariable(name: "prox_portno", scope: !2179, file: !1, line: 4965, type: !500)
!12210 = !DILocation(line: 4965, column: 9, scope: !2179)
!12211 = !DILocalVariable(name: "endofprot", scope: !2179, file: !1, line: 4966, type: !500)
!12212 = !DILocation(line: 4966, column: 9, scope: !2179)
!12213 = !DILocalVariable(name: "proxyptr", scope: !2179, file: !1, line: 4969, type: !500)
!12214 = !DILocation(line: 4969, column: 9, scope: !2179)
!12215 = !DILocalVariable(name: "portptr", scope: !2179, file: !1, line: 4970, type: !500)
!12216 = !DILocation(line: 4970, column: 9, scope: !2179)
!12217 = !DILocalVariable(name: "atsign", scope: !2179, file: !1, line: 4971, type: !500)
!12218 = !DILocation(line: 4971, column: 9, scope: !2179)
!12219 = !DILocalVariable(name: "port", scope: !2179, file: !1, line: 4972, type: !379)
!12220 = !DILocation(line: 4972, column: 8, scope: !2179)
!12221 = !DILocalVariable(name: "proxyuser", scope: !2179, file: !1, line: 4973, type: !500)
!12222 = !DILocation(line: 4973, column: 9, scope: !2179)
!12223 = !DILocalVariable(name: "proxypasswd", scope: !2179, file: !1, line: 4974, type: !500)
!12224 = !DILocation(line: 4974, column: 9, scope: !2179)
!12225 = !DILocalVariable(name: "sockstype", scope: !2179, file: !1, line: 4975, type: !423)
!12226 = !DILocation(line: 4975, column: 8, scope: !2179)
!12227 = !DILocation(line: 4982, column: 22, scope: !2179)
!12228 = !DILocation(line: 4982, column: 15, scope: !2179)
!12229 = !DILocation(line: 4982, column: 13, scope: !2179)
!12230 = !DILocation(line: 4983, column: 6, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 4983, column: 6)
!12232 = !DILocation(line: 4983, column: 6, scope: !2179)
!12233 = !DILocation(line: 4984, column: 16, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12231, file: !1, line: 4983, column: 17)
!12235 = !DILocation(line: 4984, column: 25, scope: !12234)
!12236 = !DILocation(line: 4984, column: 14, scope: !12234)
!12237 = !DILocation(line: 4985, column: 8, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12234, file: !1, line: 4985, column: 8)
!12239 = !DILocation(line: 4985, column: 8, scope: !12234)
!12240 = !DILocation(line: 4986, column: 17, scope: !12238)
!12241 = !DILocation(line: 4986, column: 7, scope: !12238)
!12242 = !DILocation(line: 4987, column: 13, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12238, file: !1, line: 4987, column: 13)
!12244 = !DILocation(line: 4987, column: 13, scope: !12238)
!12245 = !DILocation(line: 4988, column: 17, scope: !12243)
!12246 = !DILocation(line: 4988, column: 7, scope: !12243)
!12247 = !DILocation(line: 4989, column: 13, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12243, file: !1, line: 4989, column: 13)
!12249 = !DILocation(line: 4989, column: 13, scope: !12243)
!12250 = !DILocation(line: 4990, column: 17, scope: !12248)
!12251 = !DILocation(line: 4990, column: 7, scope: !12248)
!12252 = !DILocation(line: 4991, column: 13, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12248, file: !1, line: 4991, column: 13)
!12254 = !DILocation(line: 4991, column: 13, scope: !12248)
!12255 = !DILocation(line: 4992, column: 17, scope: !12253)
!12256 = !DILocation(line: 4992, column: 7, scope: !12253)
!12257 = !DILocation(line: 4993, column: 13, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12253, file: !1, line: 4993, column: 13)
!12259 = !DILocation(line: 4993, column: 42, scope: !12258)
!12260 = !DILocation(line: 4993, column: 45, scope: !12261)
!12261 = !DILexicalBlockFile(scope: !12258, file: !1, discriminator: 1)
!12262 = !DILocation(line: 4993, column: 13, scope: !12261)
!12263 = !DILocation(line: 4994, column: 17, scope: !12258)
!12264 = !DILocation(line: 4994, column: 7, scope: !12258)
!12265 = !DILocation(line: 4995, column: 13, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12258, file: !1, line: 4995, column: 13)
!12267 = !DILocation(line: 4995, column: 13, scope: !12258)
!12268 = !DILocation(line: 4995, column: 13, scope: !12261)
!12269 = !DILocation(line: 4999, column: 13, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12266, file: !1, line: 4997, column: 10)
!12271 = !DILocation(line: 4999, column: 58, scope: !12270)
!12272 = !DILocation(line: 4999, column: 7, scope: !12270)
!12273 = !DILocation(line: 5000, column: 7, scope: !12270)
!12274 = !DILocation(line: 5002, column: 3, scope: !12234)
!12275 = !DILocation(line: 5004, column: 16, scope: !12231)
!12276 = !DILocation(line: 5004, column: 14, scope: !12231)
!12277 = !DILocation(line: 5007, column: 6, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5007, column: 6)
!12279 = !DILocation(line: 5007, column: 16, scope: !12278)
!12280 = !DILocation(line: 5007, column: 6, scope: !2179)
!12281 = !DILocation(line: 5008, column: 11, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 5007, column: 36)
!12283 = !DILocation(line: 5009, column: 72, scope: !12282)
!12284 = !DILocation(line: 5008, column: 5, scope: !12282)
!12285 = !DILocation(line: 5010, column: 5, scope: !12282)
!12286 = !DILocation(line: 5014, column: 15, scope: !2179)
!12287 = !DILocation(line: 5014, column: 25, scope: !2179)
!12288 = !DILocation(line: 5014, column: 54, scope: !2179)
!12289 = !DILocation(line: 5015, column: 15, scope: !2179)
!12290 = !DILocation(line: 5015, column: 25, scope: !2179)
!12291 = !DILocation(line: 5015, column: 45, scope: !2179)
!12292 = !DILocation(line: 5016, column: 15, scope: !2179)
!12293 = !DILocation(line: 5016, column: 25, scope: !2179)
!12294 = !DILocation(line: 5016, column: 46, scope: !2179)
!12295 = !DILocation(line: 5017, column: 15, scope: !2179)
!12296 = !DILocation(line: 5017, column: 25, scope: !2179)
!12297 = !DILocation(line: 5016, column: 46, scope: !12298)
!12298 = !DILexicalBlockFile(scope: !2179, file: !1, discriminator: 1)
!12299 = !DILocation(line: 5014, column: 13, scope: !12298)
!12300 = !DILocation(line: 5020, column: 19, scope: !2179)
!12301 = !DILocation(line: 5020, column: 12, scope: !2179)
!12302 = !DILocation(line: 5020, column: 10, scope: !2179)
!12303 = !DILocation(line: 5021, column: 6, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5021, column: 6)
!12305 = !DILocation(line: 5021, column: 6, scope: !2179)
!12306 = !DILocalVariable(name: "result", scope: !12307, file: !1, line: 5022, type: !289)
!12307 = distinct !DILexicalBlock(scope: !12304, file: !1, line: 5021, column: 14)
!12308 = !DILocation(line: 5022, column: 14, scope: !12307)
!12309 = !DILocation(line: 5023, column: 27, scope: !12307)
!12310 = !DILocation(line: 5023, column: 37, scope: !12307)
!12311 = !DILocation(line: 5023, column: 46, scope: !12307)
!12312 = !DILocation(line: 5023, column: 44, scope: !12307)
!12313 = !DILocation(line: 5023, column: 7, scope: !12307)
!12314 = !DILocation(line: 5025, column: 8, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12307, file: !1, line: 5025, column: 8)
!12316 = !DILocation(line: 5025, column: 8, scope: !12307)
!12317 = !DILocation(line: 5026, column: 14, scope: !12315)
!12318 = !DILocation(line: 5026, column: 7, scope: !12315)
!12319 = !DILocation(line: 5027, column: 16, scope: !12307)
!12320 = !DILocation(line: 5027, column: 23, scope: !12307)
!12321 = !DILocation(line: 5027, column: 14, scope: !12307)
!12322 = !DILocation(line: 5028, column: 3, scope: !12307)
!12323 = !DILocation(line: 5031, column: 13, scope: !2179)
!12324 = !DILocation(line: 5031, column: 11, scope: !2179)
!12325 = !DILocation(line: 5034, column: 7, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5034, column: 6)
!12327 = !DILocation(line: 5034, column: 6, scope: !12326)
!12328 = !DILocation(line: 5034, column: 16, scope: !12326)
!12329 = !DILocation(line: 5034, column: 6, scope: !2179)
!12330 = !DILocalVariable(name: "ptr", scope: !12331, file: !1, line: 5035, type: !500)
!12331 = distinct !DILexicalBlock(scope: !12326, file: !1, line: 5034, column: 24)
!12332 = !DILocation(line: 5035, column: 11, scope: !12331)
!12333 = !DILocation(line: 5035, column: 17, scope: !12331)
!12334 = !DILocation(line: 5036, column: 5, scope: !12331)
!12335 = !DILocation(line: 5036, column: 12, scope: !12336)
!12336 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 1)
!12337 = !DILocation(line: 5036, column: 11, scope: !12336)
!12338 = !DILocation(line: 5036, column: 16, scope: !12336)
!12339 = !DILocation(line: 5036, column: 20, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 2)
!12341 = !DILocation(line: 5036, column: 35, scope: !12340)
!12342 = !DILocation(line: 5036, column: 40, scope: !12343)
!12343 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 3)
!12344 = !DILocation(line: 5036, column: 39, scope: !12343)
!12345 = !DILocation(line: 5036, column: 44, scope: !12343)
!12346 = !DILocation(line: 5036, column: 52, scope: !12343)
!12347 = !DILocation(line: 5036, column: 57, scope: !12348)
!12348 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 4)
!12349 = !DILocation(line: 5036, column: 56, scope: !12348)
!12350 = !DILocation(line: 5036, column: 61, scope: !12348)
!12351 = !DILocation(line: 5036, column: 52, scope: !12348)
!12352 = !DILocation(line: 5036, column: 5, scope: !12353)
!12353 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 5)
!12354 = !DILocation(line: 5037, column: 10, scope: !12331)
!12355 = !DILocation(line: 5036, column: 5, scope: !12356)
!12356 = !DILexicalBlockFile(scope: !12331, file: !1, discriminator: 6)
!12357 = !DILocation(line: 5038, column: 9, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12331, file: !1, line: 5038, column: 8)
!12359 = !DILocation(line: 5038, column: 8, scope: !12358)
!12360 = !DILocation(line: 5038, column: 13, scope: !12358)
!12361 = !DILocation(line: 5038, column: 8, scope: !12331)
!12362 = !DILocation(line: 5040, column: 25, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !1, line: 5040, column: 10)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !1, line: 5038, column: 21)
!12365 = !DILocation(line: 5040, column: 10, scope: !12363)
!12366 = !DILocation(line: 5040, column: 10, scope: !12364)
!12367 = !DILocation(line: 5041, column: 15, scope: !12363)
!12368 = !DILocation(line: 5041, column: 9, scope: !12363)
!12369 = !DILocation(line: 5042, column: 10, scope: !12364)
!12370 = !DILocation(line: 5044, column: 7, scope: !12364)
!12371 = !DILocation(line: 5044, column: 14, scope: !12372)
!12372 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 1)
!12373 = !DILocation(line: 5044, column: 13, scope: !12372)
!12374 = !DILocation(line: 5044, column: 18, scope: !12372)
!12375 = !DILocation(line: 5044, column: 22, scope: !12376)
!12376 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 2)
!12377 = !DILocation(line: 5044, column: 36, scope: !12376)
!12378 = !DILocation(line: 5044, column: 39, scope: !12379)
!12379 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 3)
!12380 = !DILocation(line: 5044, column: 54, scope: !12379)
!12381 = !DILocation(line: 5044, column: 59, scope: !12382)
!12382 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 4)
!12383 = !DILocation(line: 5044, column: 58, scope: !12382)
!12384 = !DILocation(line: 5044, column: 63, scope: !12382)
!12385 = !DILocation(line: 5044, column: 71, scope: !12382)
!12386 = !DILocation(line: 5045, column: 24, scope: !12364)
!12387 = !DILocation(line: 5045, column: 23, scope: !12364)
!12388 = !DILocation(line: 5045, column: 28, scope: !12364)
!12389 = !DILocation(line: 5045, column: 36, scope: !12364)
!12390 = !DILocation(line: 5045, column: 41, scope: !12372)
!12391 = !DILocation(line: 5045, column: 40, scope: !12372)
!12392 = !DILocation(line: 5045, column: 45, scope: !12372)
!12393 = !DILocation(line: 5045, column: 53, scope: !12372)
!12394 = !DILocation(line: 5045, column: 58, scope: !12376)
!12395 = !DILocation(line: 5045, column: 57, scope: !12376)
!12396 = !DILocation(line: 5045, column: 62, scope: !12376)
!12397 = !DILocation(line: 5045, column: 53, scope: !12376)
!12398 = !DILocation(line: 5044, column: 7, scope: !12399)
!12399 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 5)
!12400 = !DILocation(line: 5046, column: 12, scope: !12364)
!12401 = !DILocation(line: 5044, column: 7, scope: !12402)
!12402 = !DILexicalBlockFile(scope: !12364, file: !1, discriminator: 6)
!12403 = !DILocation(line: 5047, column: 5, scope: !12364)
!12404 = !DILocation(line: 5048, column: 9, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12331, file: !1, line: 5048, column: 8)
!12406 = !DILocation(line: 5048, column: 8, scope: !12405)
!12407 = !DILocation(line: 5048, column: 13, scope: !12405)
!12408 = !DILocation(line: 5048, column: 8, scope: !12331)
!12409 = !DILocation(line: 5050, column: 11, scope: !12405)
!12410 = !DILocation(line: 5050, column: 14, scope: !12405)
!12411 = !DILocation(line: 5050, column: 7, scope: !12405)
!12412 = !DILocation(line: 5052, column: 13, scope: !12405)
!12413 = !DILocation(line: 5052, column: 7, scope: !12405)
!12414 = !DILocation(line: 5053, column: 15, scope: !12331)
!12415 = !DILocation(line: 5053, column: 13, scope: !12331)
!12416 = !DILocation(line: 5058, column: 3, scope: !12331)
!12417 = !DILocation(line: 5061, column: 24, scope: !2179)
!12418 = !DILocation(line: 5061, column: 17, scope: !2179)
!12419 = !DILocation(line: 5061, column: 15, scope: !2179)
!12420 = !DILocation(line: 5062, column: 6, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5062, column: 6)
!12422 = !DILocation(line: 5062, column: 6, scope: !2179)
!12423 = !DILocalVariable(name: "endp", scope: !12424, file: !1, line: 5063, type: !500)
!12424 = distinct !DILexicalBlock(scope: !12421, file: !1, line: 5062, column: 19)
!12425 = !DILocation(line: 5063, column: 11, scope: !12424)
!12426 = !DILocation(line: 5065, column: 6, scope: !12424)
!12427 = !DILocation(line: 5065, column: 18, scope: !12424)
!12428 = !DILocation(line: 5066, column: 17, scope: !12424)
!12429 = !DILocation(line: 5068, column: 19, scope: !12424)
!12430 = !DILocation(line: 5068, column: 12, scope: !12424)
!12431 = !DILocation(line: 5068, column: 10, scope: !12424)
!12432 = !DILocation(line: 5069, column: 9, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12424, file: !1, line: 5069, column: 8)
!12434 = !DILocation(line: 5069, column: 14, scope: !12433)
!12435 = !DILocation(line: 5069, column: 18, scope: !12436)
!12436 = !DILexicalBlockFile(scope: !12433, file: !1, discriminator: 1)
!12437 = !DILocation(line: 5069, column: 17, scope: !12436)
!12438 = !DILocation(line: 5069, column: 23, scope: !12436)
!12439 = !DILocation(line: 5069, column: 28, scope: !12440)
!12440 = !DILexicalBlockFile(scope: !12433, file: !1, discriminator: 2)
!12441 = !DILocation(line: 5069, column: 27, scope: !12440)
!12442 = !DILocation(line: 5069, column: 33, scope: !12440)
!12443 = !DILocation(line: 5069, column: 41, scope: !12440)
!12444 = !DILocation(line: 5069, column: 46, scope: !12445)
!12445 = !DILexicalBlockFile(scope: !12433, file: !1, discriminator: 3)
!12446 = !DILocation(line: 5069, column: 45, scope: !12445)
!12447 = !DILocation(line: 5069, column: 51, scope: !12445)
!12448 = !DILocation(line: 5069, column: 60, scope: !12445)
!12449 = !DILocation(line: 5070, column: 9, scope: !12433)
!12450 = !DILocation(line: 5070, column: 14, scope: !12433)
!12451 = !DILocation(line: 5070, column: 19, scope: !12433)
!12452 = !DILocation(line: 5070, column: 23, scope: !12436)
!12453 = !DILocation(line: 5070, column: 28, scope: !12436)
!12454 = !DILocation(line: 5069, column: 8, scope: !12455)
!12455 = !DILexicalBlockFile(scope: !12424, file: !1, discriminator: 4)
!12456 = !DILocation(line: 5076, column: 13, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12433, file: !1, line: 5070, column: 38)
!12458 = !DILocation(line: 5077, column: 13, scope: !12457)
!12459 = !DILocation(line: 5076, column: 7, scope: !12457)
!12460 = !DILocation(line: 5078, column: 5, scope: !12457)
!12461 = !DILocation(line: 5080, column: 20, scope: !12433)
!12462 = !DILocation(line: 5080, column: 7, scope: !12433)
!12463 = !DILocation(line: 5080, column: 13, scope: !12433)
!12464 = !DILocation(line: 5080, column: 18, scope: !12433)
!12465 = !DILocation(line: 5081, column: 3, scope: !12424)
!12466 = !DILocation(line: 5083, column: 8, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12468, file: !1, line: 5083, column: 8)
!12468 = distinct !DILexicalBlock(scope: !12421, file: !1, line: 5082, column: 8)
!12469 = !DILocation(line: 5083, column: 19, scope: !12467)
!12470 = !DILocation(line: 5083, column: 8, scope: !12468)
!12471 = !DILocation(line: 5087, column: 7, scope: !12467)
!12472 = !DILocation(line: 5091, column: 21, scope: !12468)
!12473 = !DILocation(line: 5091, column: 14, scope: !12468)
!12474 = !DILocation(line: 5091, column: 12, scope: !12468)
!12475 = !DILocation(line: 5092, column: 8, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12468, file: !1, line: 5092, column: 8)
!12477 = !DILocation(line: 5092, column: 8, scope: !12468)
!12478 = !DILocation(line: 5093, column: 8, scope: !12476)
!12479 = !DILocation(line: 5093, column: 15, scope: !12476)
!12480 = !DILocation(line: 5093, column: 7, scope: !12476)
!12481 = !DILocation(line: 5095, column: 8, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12468, file: !1, line: 5095, column: 8)
!12483 = !DILocation(line: 5095, column: 14, scope: !12482)
!12484 = !DILocation(line: 5095, column: 18, scope: !12482)
!12485 = !DILocation(line: 5095, column: 8, scope: !12468)
!12486 = !DILocation(line: 5098, column: 14, scope: !12482)
!12487 = !DILocation(line: 5098, column: 20, scope: !12482)
!12488 = !DILocation(line: 5098, column: 24, scope: !12482)
!12489 = !DILocation(line: 5098, column: 12, scope: !12482)
!12490 = !DILocation(line: 5098, column: 7, scope: !12482)
!12491 = !DILocation(line: 5100, column: 10, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !1, line: 5100, column: 10)
!12493 = distinct !DILexicalBlock(scope: !12482, file: !1, line: 5099, column: 10)
!12494 = !DILocation(line: 5100, column: 20, scope: !12492)
!12495 = !DILocation(line: 5100, column: 10, scope: !12493)
!12496 = !DILocation(line: 5101, column: 14, scope: !12492)
!12497 = !DILocation(line: 5101, column: 9, scope: !12492)
!12498 = !DILocation(line: 5103, column: 14, scope: !12492)
!12499 = !DILocation(line: 5107, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5107, column: 6)
!12501 = !DILocation(line: 5107, column: 6, scope: !12500)
!12502 = !DILocation(line: 5107, column: 6, scope: !2179)
!12503 = !DILocalVariable(name: "proxyinfo", scope: !12504, file: !1, line: 5108, type: !12505)
!12504 = distinct !DILexicalBlock(scope: !12500, file: !1, line: 5107, column: 17)
!12505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!12506 = !DILocation(line: 5108, column: 24, scope: !12504)
!12507 = !DILocation(line: 5109, column: 7, scope: !12504)
!12508 = !DILocation(line: 5109, column: 20, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !12504, file: !1, discriminator: 1)
!12510 = !DILocation(line: 5109, column: 26, scope: !12509)
!12511 = !DILocation(line: 5109, column: 7, scope: !12509)
!12512 = !DILocation(line: 5109, column: 41, scope: !12513)
!12513 = !DILexicalBlockFile(scope: !12504, file: !1, discriminator: 2)
!12514 = !DILocation(line: 5109, column: 47, scope: !12513)
!12515 = !DILocation(line: 5109, column: 7, scope: !12513)
!12516 = !DILocation(line: 5109, column: 7, scope: !12517)
!12517 = !DILexicalBlockFile(scope: !12504, file: !1, discriminator: 3)
!12518 = !DILocation(line: 5110, column: 28, scope: !12504)
!12519 = !DILocation(line: 5110, column: 5, scope: !12504)
!12520 = !DILocation(line: 5110, column: 16, scope: !12504)
!12521 = !DILocation(line: 5110, column: 26, scope: !12504)
!12522 = !DILocation(line: 5112, column: 8, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12504, file: !1, line: 5112, column: 8)
!12524 = !DILocation(line: 5112, column: 8, scope: !12504)
!12525 = !DILocation(line: 5116, column: 7, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12523, file: !1, line: 5112, column: 19)
!12527 = !DILocation(line: 5116, column: 7, scope: !12528)
!12528 = !DILexicalBlockFile(scope: !12529, file: !1, discriminator: 1)
!12529 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5116, column: 7)
!12530 = !DILocation(line: 5117, column: 44, scope: !12526)
!12531 = !DILocation(line: 5117, column: 50, scope: !12526)
!12532 = !DILocation(line: 5117, column: 25, scope: !12526)
!12533 = !DILocation(line: 5117, column: 7, scope: !12526)
!12534 = !DILocation(line: 5117, column: 18, scope: !12526)
!12535 = !DILocation(line: 5117, column: 23, scope: !12526)
!12536 = !DILocation(line: 5118, column: 7, scope: !12526)
!12537 = !DILocation(line: 5118, column: 7, scope: !12538)
!12538 = !DILexicalBlockFile(scope: !12539, file: !1, discriminator: 1)
!12539 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5118, column: 7)
!12540 = !DILocation(line: 5120, column: 11, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5120, column: 10)
!12542 = !DILocation(line: 5120, column: 22, scope: !12541)
!12543 = !DILocation(line: 5120, column: 10, scope: !12526)
!12544 = !DILocation(line: 5121, column: 9, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12541, file: !1, line: 5120, column: 28)
!12546 = !DILocation(line: 5121, column: 9, scope: !12547)
!12547 = !DILexicalBlockFile(scope: !12548, file: !1, discriminator: 1)
!12548 = distinct !DILexicalBlock(scope: !12545, file: !1, line: 5121, column: 9)
!12549 = !DILocation(line: 5122, column: 9, scope: !12545)
!12550 = !DILocation(line: 5125, column: 7, scope: !12526)
!12551 = !DILocation(line: 5125, column: 7, scope: !12552)
!12552 = !DILexicalBlockFile(scope: !12553, file: !1, discriminator: 1)
!12553 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5125, column: 7)
!12554 = !DILocation(line: 5126, column: 10, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5126, column: 10)
!12556 = !DILocation(line: 5126, column: 22, scope: !12555)
!12557 = !DILocation(line: 5126, column: 32, scope: !12558)
!12558 = !DILexicalBlockFile(scope: !12555, file: !1, discriminator: 1)
!12559 = !DILocation(line: 5126, column: 25, scope: !12558)
!12560 = !DILocation(line: 5126, column: 45, scope: !12558)
!12561 = !DILocation(line: 5126, column: 10, scope: !12558)
!12562 = !DILocation(line: 5127, column: 48, scope: !12555)
!12563 = !DILocation(line: 5127, column: 54, scope: !12555)
!12564 = !DILocation(line: 5127, column: 29, scope: !12555)
!12565 = !DILocation(line: 5127, column: 9, scope: !12555)
!12566 = !DILocation(line: 5127, column: 20, scope: !12555)
!12567 = !DILocation(line: 5127, column: 27, scope: !12555)
!12568 = !DILocation(line: 5129, column: 29, scope: !12555)
!12569 = !DILocation(line: 5129, column: 9, scope: !12555)
!12570 = !DILocation(line: 5129, column: 20, scope: !12555)
!12571 = !DILocation(line: 5129, column: 27, scope: !12555)
!12572 = !DILocation(line: 5130, column: 7, scope: !12526)
!12573 = !DILocation(line: 5130, column: 7, scope: !12574)
!12574 = !DILexicalBlockFile(scope: !12575, file: !1, discriminator: 1)
!12575 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5130, column: 7)
!12576 = !DILocation(line: 5132, column: 11, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12526, file: !1, line: 5132, column: 10)
!12578 = !DILocation(line: 5132, column: 22, scope: !12577)
!12579 = !DILocation(line: 5132, column: 10, scope: !12526)
!12580 = !DILocation(line: 5133, column: 9, scope: !12577)
!12581 = !DILocation(line: 5135, column: 7, scope: !12526)
!12582 = !DILocation(line: 5135, column: 13, scope: !12526)
!12583 = !DILocation(line: 5135, column: 18, scope: !12526)
!12584 = !DILocation(line: 5135, column: 36, scope: !12526)
!12585 = !DILocation(line: 5136, column: 5, scope: !12526)
!12586 = !DILocation(line: 5138, column: 8, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12504, file: !1, line: 5138, column: 8)
!12588 = !DILocation(line: 5138, column: 13, scope: !12587)
!12589 = !DILocation(line: 5138, column: 8, scope: !12504)
!12590 = !DILocation(line: 5139, column: 25, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12587, file: !1, line: 5138, column: 19)
!12592 = !DILocation(line: 5139, column: 7, scope: !12591)
!12593 = !DILocation(line: 5139, column: 18, scope: !12591)
!12594 = !DILocation(line: 5139, column: 23, scope: !12591)
!12595 = !DILocation(line: 5140, column: 10, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12591, file: !1, line: 5140, column: 10)
!12597 = !DILocation(line: 5140, column: 16, scope: !12596)
!12598 = !DILocation(line: 5140, column: 21, scope: !12596)
!12599 = !DILocation(line: 5140, column: 25, scope: !12596)
!12600 = !DILocation(line: 5140, column: 28, scope: !12601)
!12601 = !DILexicalBlockFile(scope: !12596, file: !1, discriminator: 1)
!12602 = !DILocation(line: 5140, column: 38, scope: !12601)
!12603 = !DILocation(line: 5140, column: 42, scope: !12604)
!12604 = !DILexicalBlockFile(scope: !12596, file: !1, discriminator: 2)
!12605 = !DILocation(line: 5140, column: 48, scope: !12604)
!12606 = !DILocation(line: 5140, column: 60, scope: !12604)
!12607 = !DILocation(line: 5140, column: 65, scope: !12604)
!12608 = !DILocation(line: 5140, column: 10, scope: !12604)
!12609 = !DILocation(line: 5141, column: 22, scope: !12596)
!12610 = !DILocation(line: 5141, column: 9, scope: !12596)
!12611 = !DILocation(line: 5141, column: 15, scope: !12596)
!12612 = !DILocation(line: 5141, column: 20, scope: !12596)
!12613 = !DILocation(line: 5142, column: 5, scope: !12591)
!12614 = !DILocation(line: 5145, column: 5, scope: !12504)
!12615 = !DILocation(line: 5145, column: 5, scope: !12616)
!12616 = !DILexicalBlockFile(scope: !12617, file: !1, discriminator: 1)
!12617 = distinct !DILexicalBlock(scope: !12504, file: !1, line: 5145, column: 5)
!12618 = !DILocation(line: 5146, column: 32, scope: !12504)
!12619 = !DILocation(line: 5146, column: 5, scope: !12504)
!12620 = !DILocation(line: 5146, column: 16, scope: !12504)
!12621 = !DILocation(line: 5146, column: 21, scope: !12504)
!12622 = !DILocation(line: 5146, column: 30, scope: !12504)
!12623 = !DILocation(line: 5147, column: 28, scope: !12504)
!12624 = !DILocation(line: 5147, column: 39, scope: !12504)
!12625 = !DILocation(line: 5147, column: 44, scope: !12504)
!12626 = !DILocation(line: 5147, column: 5, scope: !12504)
!12627 = !DILocation(line: 5147, column: 16, scope: !12504)
!12628 = !DILocation(line: 5147, column: 21, scope: !12504)
!12629 = !DILocation(line: 5147, column: 26, scope: !12504)
!12630 = !DILocation(line: 5149, column: 9, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12504, file: !1, line: 5149, column: 8)
!12632 = !DILocation(line: 5149, column: 20, scope: !12631)
!12633 = !DILocation(line: 5149, column: 25, scope: !12631)
!12634 = !DILocation(line: 5149, column: 8, scope: !12504)
!12635 = !DILocation(line: 5150, column: 7, scope: !12631)
!12636 = !DILocation(line: 5151, column: 3, scope: !12504)
!12637 = !DILocation(line: 5153, column: 3, scope: !2179)
!12638 = !DILocation(line: 5153, column: 3, scope: !12639)
!12639 = !DILexicalBlockFile(scope: !12640, file: !1, discriminator: 1)
!12640 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5153, column: 3)
!12641 = !DILocation(line: 5154, column: 3, scope: !2179)
!12642 = !DILocation(line: 5154, column: 3, scope: !12643)
!12643 = !DILexicalBlockFile(scope: !12644, file: !1, discriminator: 1)
!12644 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 5154, column: 3)
!12645 = !DILocation(line: 5156, column: 3, scope: !2179)
!12646 = !DILocation(line: 5157, column: 1, scope: !2179)
!12647 = !DILocalVariable(name: "data", arg: 1, scope: !2190, file: !1, line: 5925, type: !256)
!12648 = !DILocation(line: 5925, column: 59, scope: !2190)
!12649 = !DILocalVariable(name: "conn", arg: 2, scope: !2190, file: !1, line: 5926, type: !262)
!12650 = !DILocation(line: 5926, column: 61, scope: !2190)
!12651 = !DILocalVariable(name: "conn_to_host", arg: 3, scope: !2190, file: !1, line: 5927, type: !527)
!12652 = !DILocation(line: 5927, column: 53, scope: !2190)
!12653 = !DILocalVariable(name: "host_result", arg: 4, scope: !2190, file: !1, line: 5928, type: !1562)
!12654 = !DILocation(line: 5928, column: 48, scope: !2190)
!12655 = !DILocalVariable(name: "port_result", arg: 5, scope: !2190, file: !1, line: 5929, type: !1472)
!12656 = !DILocation(line: 5929, column: 46, scope: !2190)
!12657 = !DILocalVariable(name: "result", scope: !2190, file: !1, line: 5931, type: !289)
!12658 = !DILocation(line: 5931, column: 12, scope: !2190)
!12659 = !DILocalVariable(name: "ptr", scope: !2190, file: !1, line: 5932, type: !527)
!12660 = !DILocation(line: 5932, column: 15, scope: !2190)
!12661 = !DILocation(line: 5932, column: 21, scope: !2190)
!12662 = !DILocalVariable(name: "host_match", scope: !2190, file: !1, line: 5933, type: !316)
!12663 = !DILocation(line: 5933, column: 7, scope: !2190)
!12664 = !DILocalVariable(name: "port_match", scope: !2190, file: !1, line: 5934, type: !316)
!12665 = !DILocation(line: 5934, column: 7, scope: !2190)
!12666 = !DILocation(line: 5936, column: 4, scope: !2190)
!12667 = !DILocation(line: 5936, column: 16, scope: !2190)
!12668 = !DILocation(line: 5937, column: 4, scope: !2190)
!12669 = !DILocation(line: 5937, column: 16, scope: !2190)
!12670 = !DILocation(line: 5939, column: 7, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !2190, file: !1, line: 5939, column: 6)
!12672 = !DILocation(line: 5939, column: 6, scope: !12671)
!12673 = !DILocation(line: 5939, column: 11, scope: !12671)
!12674 = !DILocation(line: 5939, column: 6, scope: !2190)
!12675 = !DILocation(line: 5941, column: 16, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12671, file: !1, line: 5939, column: 19)
!12677 = !DILocation(line: 5942, column: 8, scope: !12676)
!12678 = !DILocation(line: 5943, column: 3, scope: !12676)
!12679 = !DILocalVariable(name: "hostname_to_match_len", scope: !12680, file: !1, line: 5946, type: !347)
!12680 = distinct !DILexicalBlock(scope: !12671, file: !1, line: 5944, column: 8)
!12681 = !DILocation(line: 5946, column: 12, scope: !12680)
!12682 = !DILocalVariable(name: "hostname_to_match", scope: !12680, file: !1, line: 5947, type: !500)
!12683 = !DILocation(line: 5947, column: 11, scope: !12680)
!12684 = !DILocation(line: 5948, column: 39, scope: !12680)
!12685 = !DILocation(line: 5948, column: 45, scope: !12680)
!12686 = !DILocation(line: 5948, column: 50, scope: !12680)
!12687 = !DILocation(line: 5949, column: 39, scope: !12680)
!12688 = !DILocation(line: 5949, column: 45, scope: !12680)
!12689 = !DILocation(line: 5949, column: 50, scope: !12680)
!12690 = !DILocation(line: 5950, column: 39, scope: !12680)
!12691 = !DILocation(line: 5950, column: 45, scope: !12680)
!12692 = !DILocation(line: 5950, column: 50, scope: !12680)
!12693 = !DILocation(line: 5947, column: 31, scope: !12680)
!12694 = !DILocation(line: 5951, column: 9, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12680, file: !1, line: 5951, column: 8)
!12696 = !DILocation(line: 5951, column: 8, scope: !12680)
!12697 = !DILocation(line: 5952, column: 7, scope: !12695)
!12698 = !DILocation(line: 5953, column: 36, scope: !12680)
!12699 = !DILocation(line: 5953, column: 29, scope: !12680)
!12700 = !DILocation(line: 5953, column: 27, scope: !12680)
!12701 = !DILocation(line: 5954, column: 18, scope: !12680)
!12702 = !DILocation(line: 5954, column: 16, scope: !12680)
!12703 = !DILocation(line: 5956, column: 5, scope: !12680)
!12704 = !DILocation(line: 5957, column: 12, scope: !12680)
!12705 = !DILocation(line: 5957, column: 9, scope: !12680)
!12706 = !DILocation(line: 5959, column: 18, scope: !12680)
!12707 = !DILocation(line: 5959, column: 29, scope: !12680)
!12708 = !DILocation(line: 5959, column: 33, scope: !12709)
!12709 = !DILexicalBlockFile(scope: !12680, file: !1, discriminator: 1)
!12710 = !DILocation(line: 5959, column: 32, scope: !12709)
!12711 = !DILocation(line: 5959, column: 37, scope: !12709)
!12712 = !DILocation(line: 5959, column: 29, scope: !12713)
!12713 = !DILexicalBlockFile(scope: !12680, file: !1, discriminator: 2)
!12714 = !DILocation(line: 5959, column: 16, scope: !12713)
!12715 = !DILocation(line: 5960, column: 8, scope: !12680)
!12716 = !DILocation(line: 5963, column: 6, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !2190, file: !1, line: 5963, column: 6)
!12718 = !DILocation(line: 5963, column: 6, scope: !2190)
!12719 = !DILocation(line: 5964, column: 9, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12721, file: !1, line: 5964, column: 8)
!12721 = distinct !DILexicalBlock(scope: !12717, file: !1, line: 5963, column: 18)
!12722 = !DILocation(line: 5964, column: 8, scope: !12720)
!12723 = !DILocation(line: 5964, column: 13, scope: !12720)
!12724 = !DILocation(line: 5964, column: 8, scope: !12721)
!12725 = !DILocation(line: 5966, column: 18, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12720, file: !1, line: 5964, column: 21)
!12727 = !DILocation(line: 5967, column: 10, scope: !12726)
!12728 = !DILocation(line: 5968, column: 5, scope: !12726)
!12729 = !DILocalVariable(name: "ptr_next", scope: !12730, file: !1, line: 5971, type: !500)
!12730 = distinct !DILexicalBlock(scope: !12720, file: !1, line: 5969, column: 10)
!12731 = !DILocation(line: 5971, column: 13, scope: !12730)
!12732 = !DILocation(line: 5971, column: 31, scope: !12730)
!12733 = !DILocation(line: 5971, column: 24, scope: !12730)
!12734 = !DILocation(line: 5972, column: 10, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12730, file: !1, line: 5972, column: 10)
!12736 = !DILocation(line: 5972, column: 10, scope: !12730)
!12737 = !DILocalVariable(name: "endp", scope: !12738, file: !1, line: 5973, type: !500)
!12738 = distinct !DILexicalBlock(scope: !12735, file: !1, line: 5972, column: 20)
!12739 = !DILocation(line: 5973, column: 15, scope: !12738)
!12740 = !DILocalVariable(name: "port_to_match", scope: !12738, file: !1, line: 5974, type: !379)
!12741 = !DILocation(line: 5974, column: 14, scope: !12738)
!12742 = !DILocation(line: 5974, column: 37, scope: !12738)
!12743 = !DILocation(line: 5974, column: 30, scope: !12738)
!12744 = !DILocation(line: 5975, column: 13, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12738, file: !1, line: 5975, column: 12)
!12746 = !DILocation(line: 5975, column: 21, scope: !12745)
!12747 = !DILocation(line: 5975, column: 18, scope: !12745)
!12748 = !DILocation(line: 5975, column: 31, scope: !12745)
!12749 = !DILocation(line: 5975, column: 35, scope: !12750)
!12750 = !DILexicalBlockFile(scope: !12745, file: !1, discriminator: 1)
!12751 = !DILocation(line: 5975, column: 52, scope: !12750)
!12752 = !DILocation(line: 5975, column: 58, scope: !12750)
!12753 = !DILocation(line: 5975, column: 49, scope: !12750)
!12754 = !DILocation(line: 5975, column: 12, scope: !12750)
!12755 = !DILocation(line: 5976, column: 22, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12745, file: !1, line: 5975, column: 72)
!12757 = !DILocation(line: 5977, column: 17, scope: !12756)
!12758 = !DILocation(line: 5977, column: 26, scope: !12756)
!12759 = !DILocation(line: 5977, column: 15, scope: !12756)
!12760 = !DILocation(line: 5978, column: 9, scope: !12756)
!12761 = !DILocation(line: 5979, column: 7, scope: !12738)
!12762 = !DILocation(line: 5981, column: 3, scope: !12721)
!12763 = !DILocation(line: 5983, column: 6, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !2190, file: !1, line: 5983, column: 6)
!12765 = !DILocation(line: 5983, column: 17, scope: !12764)
!12766 = !DILocation(line: 5983, column: 20, scope: !12767)
!12767 = !DILexicalBlockFile(scope: !12764, file: !1, discriminator: 1)
!12768 = !DILocation(line: 5983, column: 6, scope: !12767)
!12769 = !DILocation(line: 5985, column: 41, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12764, file: !1, line: 5983, column: 32)
!12771 = !DILocation(line: 5985, column: 47, scope: !12770)
!12772 = !DILocation(line: 5985, column: 52, scope: !12770)
!12773 = !DILocation(line: 5985, column: 65, scope: !12770)
!12774 = !DILocation(line: 5985, column: 14, scope: !12770)
!12775 = !DILocation(line: 5985, column: 12, scope: !12770)
!12776 = !DILocation(line: 5986, column: 3, scope: !12770)
!12777 = !DILocation(line: 5988, column: 10, scope: !2190)
!12778 = !DILocation(line: 5988, column: 3, scope: !2190)
!12779 = !DILocation(line: 5989, column: 1, scope: !2190)
!12780 = !DILocalVariable(name: "data", arg: 1, scope: !2193, file: !1, line: 5830, type: !256)
!12781 = !DILocation(line: 5830, column: 62, scope: !2193)
!12782 = !DILocalVariable(name: "host", arg: 2, scope: !2193, file: !1, line: 5831, type: !527)
!12783 = !DILocation(line: 5831, column: 56, scope: !2193)
!12784 = !DILocalVariable(name: "hostname_result", arg: 3, scope: !2193, file: !1, line: 5832, type: !1562)
!12785 = !DILocation(line: 5832, column: 51, scope: !2193)
!12786 = !DILocalVariable(name: "port_result", arg: 4, scope: !2193, file: !1, line: 5833, type: !1472)
!12787 = !DILocation(line: 5833, column: 49, scope: !2193)
!12788 = !DILocalVariable(name: "host_dup", scope: !2193, file: !1, line: 5835, type: !500)
!12789 = !DILocation(line: 5835, column: 9, scope: !2193)
!12790 = !DILocalVariable(name: "hostptr", scope: !2193, file: !1, line: 5836, type: !500)
!12791 = !DILocation(line: 5836, column: 9, scope: !2193)
!12792 = !DILocalVariable(name: "host_portno", scope: !2193, file: !1, line: 5837, type: !500)
!12793 = !DILocation(line: 5837, column: 9, scope: !2193)
!12794 = !DILocalVariable(name: "portptr", scope: !2193, file: !1, line: 5838, type: !500)
!12795 = !DILocation(line: 5838, column: 9, scope: !2193)
!12796 = !DILocalVariable(name: "port", scope: !2193, file: !1, line: 5839, type: !316)
!12797 = !DILocation(line: 5839, column: 7, scope: !2193)
!12798 = !DILocation(line: 5845, column: 4, scope: !2193)
!12799 = !DILocation(line: 5845, column: 20, scope: !2193)
!12800 = !DILocation(line: 5846, column: 4, scope: !2193)
!12801 = !DILocation(line: 5846, column: 16, scope: !2193)
!12802 = !DILocation(line: 5848, column: 7, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5848, column: 6)
!12804 = !DILocation(line: 5848, column: 12, scope: !12803)
!12805 = !DILocation(line: 5848, column: 17, scope: !12806)
!12806 = !DILexicalBlockFile(scope: !12803, file: !1, discriminator: 1)
!12807 = !DILocation(line: 5848, column: 16, scope: !12806)
!12808 = !DILocation(line: 5848, column: 6, scope: !12806)
!12809 = !DILocation(line: 5849, column: 5, scope: !12803)
!12810 = !DILocation(line: 5851, column: 14, scope: !2193)
!12811 = !DILocation(line: 5851, column: 12, scope: !2193)
!12812 = !DILocation(line: 5852, column: 7, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5852, column: 6)
!12814 = !DILocation(line: 5852, column: 6, scope: !2193)
!12815 = !DILocation(line: 5853, column: 5, scope: !12813)
!12816 = !DILocation(line: 5855, column: 13, scope: !2193)
!12817 = !DILocation(line: 5855, column: 11, scope: !2193)
!12818 = !DILocation(line: 5858, column: 13, scope: !2193)
!12819 = !DILocation(line: 5858, column: 11, scope: !2193)
!12820 = !DILocation(line: 5861, column: 7, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5861, column: 6)
!12822 = !DILocation(line: 5861, column: 6, scope: !12821)
!12823 = !DILocation(line: 5861, column: 15, scope: !12821)
!12824 = !DILocation(line: 5861, column: 6, scope: !2193)
!12825 = !DILocalVariable(name: "ptr", scope: !12826, file: !1, line: 5862, type: !500)
!12826 = distinct !DILexicalBlock(scope: !12821, file: !1, line: 5861, column: 23)
!12827 = !DILocation(line: 5862, column: 11, scope: !12826)
!12828 = !DILocation(line: 5862, column: 17, scope: !12826)
!12829 = !DILocation(line: 5863, column: 5, scope: !12826)
!12830 = !DILocation(line: 5863, column: 12, scope: !12831)
!12831 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 1)
!12832 = !DILocation(line: 5863, column: 11, scope: !12831)
!12833 = !DILocation(line: 5863, column: 16, scope: !12831)
!12834 = !DILocation(line: 5863, column: 20, scope: !12835)
!12835 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 2)
!12836 = !DILocation(line: 5863, column: 35, scope: !12835)
!12837 = !DILocation(line: 5863, column: 40, scope: !12838)
!12838 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 3)
!12839 = !DILocation(line: 5863, column: 39, scope: !12838)
!12840 = !DILocation(line: 5863, column: 44, scope: !12838)
!12841 = !DILocation(line: 5863, column: 52, scope: !12838)
!12842 = !DILocation(line: 5863, column: 57, scope: !12843)
!12843 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 4)
!12844 = !DILocation(line: 5863, column: 56, scope: !12843)
!12845 = !DILocation(line: 5863, column: 61, scope: !12843)
!12846 = !DILocation(line: 5863, column: 52, scope: !12843)
!12847 = !DILocation(line: 5863, column: 5, scope: !12848)
!12848 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 5)
!12849 = !DILocation(line: 5864, column: 10, scope: !12826)
!12850 = !DILocation(line: 5863, column: 5, scope: !12851)
!12851 = !DILexicalBlockFile(scope: !12826, file: !1, discriminator: 6)
!12852 = !DILocation(line: 5865, column: 9, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12826, file: !1, line: 5865, column: 8)
!12854 = !DILocation(line: 5865, column: 8, scope: !12853)
!12855 = !DILocation(line: 5865, column: 13, scope: !12853)
!12856 = !DILocation(line: 5865, column: 8, scope: !12826)
!12857 = !DILocation(line: 5867, column: 25, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !1, line: 5867, column: 10)
!12859 = distinct !DILexicalBlock(scope: !12853, file: !1, line: 5865, column: 21)
!12860 = !DILocation(line: 5867, column: 10, scope: !12858)
!12861 = !DILocation(line: 5867, column: 10, scope: !12859)
!12862 = !DILocation(line: 5868, column: 15, scope: !12858)
!12863 = !DILocation(line: 5868, column: 9, scope: !12858)
!12864 = !DILocation(line: 5869, column: 10, scope: !12859)
!12865 = !DILocation(line: 5871, column: 7, scope: !12859)
!12866 = !DILocation(line: 5871, column: 14, scope: !12867)
!12867 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 1)
!12868 = !DILocation(line: 5871, column: 13, scope: !12867)
!12869 = !DILocation(line: 5871, column: 18, scope: !12867)
!12870 = !DILocation(line: 5871, column: 22, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 2)
!12872 = !DILocation(line: 5871, column: 36, scope: !12871)
!12873 = !DILocation(line: 5871, column: 39, scope: !12874)
!12874 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 3)
!12875 = !DILocation(line: 5871, column: 54, scope: !12874)
!12876 = !DILocation(line: 5871, column: 59, scope: !12877)
!12877 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 4)
!12878 = !DILocation(line: 5871, column: 58, scope: !12877)
!12879 = !DILocation(line: 5871, column: 63, scope: !12877)
!12880 = !DILocation(line: 5871, column: 71, scope: !12877)
!12881 = !DILocation(line: 5872, column: 24, scope: !12859)
!12882 = !DILocation(line: 5872, column: 23, scope: !12859)
!12883 = !DILocation(line: 5872, column: 28, scope: !12859)
!12884 = !DILocation(line: 5872, column: 36, scope: !12859)
!12885 = !DILocation(line: 5872, column: 41, scope: !12867)
!12886 = !DILocation(line: 5872, column: 40, scope: !12867)
!12887 = !DILocation(line: 5872, column: 45, scope: !12867)
!12888 = !DILocation(line: 5872, column: 53, scope: !12867)
!12889 = !DILocation(line: 5872, column: 58, scope: !12871)
!12890 = !DILocation(line: 5872, column: 57, scope: !12871)
!12891 = !DILocation(line: 5872, column: 62, scope: !12871)
!12892 = !DILocation(line: 5872, column: 53, scope: !12871)
!12893 = !DILocation(line: 5871, column: 7, scope: !12894)
!12894 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 5)
!12895 = !DILocation(line: 5873, column: 12, scope: !12859)
!12896 = !DILocation(line: 5871, column: 7, scope: !12897)
!12897 = !DILexicalBlockFile(scope: !12859, file: !1, discriminator: 6)
!12898 = !DILocation(line: 5874, column: 5, scope: !12859)
!12899 = !DILocation(line: 5875, column: 9, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12826, file: !1, line: 5875, column: 8)
!12901 = !DILocation(line: 5875, column: 8, scope: !12900)
!12902 = !DILocation(line: 5875, column: 13, scope: !12900)
!12903 = !DILocation(line: 5875, column: 8, scope: !12826)
!12904 = !DILocation(line: 5877, column: 11, scope: !12900)
!12905 = !DILocation(line: 5877, column: 14, scope: !12900)
!12906 = !DILocation(line: 5877, column: 7, scope: !12900)
!12907 = !DILocation(line: 5879, column: 13, scope: !12900)
!12908 = !DILocation(line: 5879, column: 7, scope: !12900)
!12909 = !DILocation(line: 5880, column: 15, scope: !12826)
!12910 = !DILocation(line: 5880, column: 13, scope: !12826)
!12911 = !DILocation(line: 5885, column: 3, scope: !12826)
!12912 = !DILocation(line: 5888, column: 24, scope: !2193)
!12913 = !DILocation(line: 5888, column: 17, scope: !2193)
!12914 = !DILocation(line: 5888, column: 15, scope: !2193)
!12915 = !DILocation(line: 5889, column: 6, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5889, column: 6)
!12917 = !DILocation(line: 5889, column: 6, scope: !2193)
!12918 = !DILocalVariable(name: "endp", scope: !12919, file: !1, line: 5890, type: !500)
!12919 = distinct !DILexicalBlock(scope: !12916, file: !1, line: 5889, column: 19)
!12920 = !DILocation(line: 5890, column: 11, scope: !12919)
!12921 = !DILocation(line: 5891, column: 6, scope: !12919)
!12922 = !DILocation(line: 5891, column: 18, scope: !12919)
!12923 = !DILocation(line: 5892, column: 16, scope: !12919)
!12924 = !DILocation(line: 5893, column: 9, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12919, file: !1, line: 5893, column: 8)
!12926 = !DILocation(line: 5893, column: 8, scope: !12925)
!12927 = !DILocation(line: 5893, column: 8, scope: !12919)
!12928 = !DILocalVariable(name: "portparse", scope: !12929, file: !1, line: 5894, type: !379)
!12929 = distinct !DILexicalBlock(scope: !12925, file: !1, line: 5893, column: 22)
!12930 = !DILocation(line: 5894, column: 12, scope: !12929)
!12931 = !DILocation(line: 5894, column: 31, scope: !12929)
!12932 = !DILocation(line: 5894, column: 24, scope: !12929)
!12933 = !DILocation(line: 5895, column: 11, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12929, file: !1, line: 5895, column: 10)
!12935 = !DILocation(line: 5895, column: 16, scope: !12934)
!12936 = !DILocation(line: 5895, column: 20, scope: !12937)
!12937 = !DILexicalBlockFile(scope: !12934, file: !1, discriminator: 1)
!12938 = !DILocation(line: 5895, column: 19, scope: !12937)
!12939 = !DILocation(line: 5895, column: 26, scope: !12937)
!12940 = !DILocation(line: 5895, column: 30, scope: !12941)
!12941 = !DILexicalBlockFile(scope: !12934, file: !1, discriminator: 2)
!12942 = !DILocation(line: 5895, column: 40, scope: !12941)
!12943 = !DILocation(line: 5895, column: 45, scope: !12941)
!12944 = !DILocation(line: 5895, column: 49, scope: !12945)
!12945 = !DILexicalBlockFile(scope: !12934, file: !1, discriminator: 3)
!12946 = !DILocation(line: 5895, column: 59, scope: !12945)
!12947 = !DILocation(line: 5895, column: 10, scope: !12945)
!12948 = !DILocation(line: 5896, column: 15, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12934, file: !1, line: 5895, column: 69)
!12950 = !DILocation(line: 5897, column: 15, scope: !12949)
!12951 = !DILocation(line: 5896, column: 9, scope: !12949)
!12952 = !DILocation(line: 5898, column: 17, scope: !12949)
!12953 = !DILocation(line: 5899, column: 14, scope: !12949)
!12954 = !DILocation(line: 5900, column: 7, scope: !12949)
!12955 = !DILocation(line: 5902, column: 21, scope: !12934)
!12956 = !DILocation(line: 5902, column: 16, scope: !12934)
!12957 = !DILocation(line: 5902, column: 14, scope: !12934)
!12958 = !DILocation(line: 5903, column: 5, scope: !12929)
!12959 = !DILocation(line: 5904, column: 3, scope: !12919)
!12960 = !DILocation(line: 5907, column: 6, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 5907, column: 6)
!12962 = !DILocation(line: 5907, column: 6, scope: !2193)
!12963 = !DILocation(line: 5908, column: 24, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12961, file: !1, line: 5907, column: 15)
!12965 = !DILocation(line: 5908, column: 6, scope: !12964)
!12966 = !DILocation(line: 5908, column: 22, scope: !12964)
!12967 = !DILocation(line: 5909, column: 10, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12964, file: !1, line: 5909, column: 8)
!12969 = !DILocation(line: 5909, column: 9, scope: !12968)
!12970 = !DILocation(line: 5909, column: 8, scope: !12964)
!12971 = !DILocation(line: 5910, column: 7, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12968, file: !1, line: 5909, column: 27)
!12973 = !DILocation(line: 5911, column: 7, scope: !12972)
!12974 = !DILocation(line: 5913, column: 3, scope: !12964)
!12975 = !DILocation(line: 5915, column: 18, scope: !2193)
!12976 = !DILocation(line: 5915, column: 4, scope: !2193)
!12977 = !DILocation(line: 5915, column: 16, scope: !2193)
!12978 = !DILocation(line: 5917, column: 3, scope: !2193)
!12979 = !DILocation(line: 5918, column: 3, scope: !2193)
!12980 = !DILocation(line: 5919, column: 1, scope: !2193)
!12981 = !DILocalVariable(name: "hostname", arg: 1, scope: !2199, file: !1, line: 4006, type: !527)
!12982 = !DILocation(line: 4006, column: 39, scope: !2199)
!12983 = !DILocalVariable(name: "ch", scope: !2199, file: !1, line: 4008, type: !2077)
!12984 = !DILocation(line: 4008, column: 24, scope: !2199)
!12985 = !DILocation(line: 4008, column: 52, scope: !2199)
!12986 = !DILocation(line: 4010, column: 3, scope: !2199)
!12987 = !DILocation(line: 4010, column: 10, scope: !12988)
!12988 = !DILexicalBlockFile(scope: !2199, file: !1, discriminator: 1)
!12989 = !DILocation(line: 4010, column: 9, scope: !12988)
!12990 = !DILocation(line: 4010, column: 3, scope: !12988)
!12991 = !DILocation(line: 4011, column: 11, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !1, line: 4011, column: 8)
!12993 = distinct !DILexicalBlock(scope: !2199, file: !1, line: 4010, column: 14)
!12994 = !DILocation(line: 4011, column: 8, scope: !12992)
!12995 = !DILocation(line: 4011, column: 14, scope: !12992)
!12996 = !DILocation(line: 4011, column: 8, scope: !12993)
!12997 = !DILocation(line: 4012, column: 7, scope: !12992)
!12998 = !DILocation(line: 4010, column: 3, scope: !12999)
!12999 = !DILexicalBlockFile(scope: !2199, file: !1, discriminator: 2)
!13000 = !DILocation(line: 4014, column: 3, scope: !2199)
!13001 = !DILocation(line: 4015, column: 1, scope: !2199)
!13002 = !DILocalVariable(name: "conn", arg: 1, scope: !2205, file: !1, line: 3358, type: !262)
!13003 = !DILocation(line: 3358, column: 56, scope: !2205)
!13004 = !DILocalVariable(name: "param", arg: 2, scope: !2205, file: !1, line: 3359, type: !311)
!13005 = !DILocation(line: 3359, column: 45, scope: !2205)
!13006 = !DILocalVariable(name: "data", scope: !2205, file: !1, line: 3361, type: !256)
!13007 = !DILocation(line: 3361, column: 21, scope: !2205)
!13008 = !DILocation(line: 3361, column: 47, scope: !2205)
!13009 = !DILocation(line: 3361, column: 28, scope: !2205)
!13010 = !DILocation(line: 3362, column: 22, scope: !2205)
!13011 = !DILocation(line: 3362, column: 28, scope: !2205)
!13012 = !DILocation(line: 3362, column: 3, scope: !2205)
!13013 = !DILocation(line: 3363, column: 3, scope: !2205)
!13014 = !DILocalVariable(name: "conn", arg: 1, scope: !2208, file: !1, line: 3326, type: !262)
!13015 = !DILocation(line: 3326, column: 52, scope: !2208)
!13016 = !DILocalVariable(name: "data", arg: 2, scope: !2208, file: !1, line: 3327, type: !256)
!13017 = !DILocation(line: 3327, column: 50, scope: !2208)
!13018 = !DILocalVariable(name: "pipeLen", scope: !2208, file: !1, line: 3329, type: !347)
!13019 = !DILocation(line: 3329, column: 10, scope: !2208)
!13020 = !DILocation(line: 3329, column: 20, scope: !2208)
!13021 = !DILocation(line: 3329, column: 26, scope: !2208)
!13022 = !DILocation(line: 3329, column: 36, scope: !2208)
!13023 = !DILocation(line: 3329, column: 43, scope: !2208)
!13024 = !DILocation(line: 3329, column: 49, scope: !2208)
!13025 = !DILocation(line: 3329, column: 59, scope: !2208)
!13026 = !DILocation(line: 3329, column: 41, scope: !2208)
!13027 = !DILocation(line: 3330, column: 7, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !2208, file: !1, line: 3330, column: 6)
!13029 = !DILocation(line: 3330, column: 15, scope: !13028)
!13030 = !DILocation(line: 3330, column: 19, scope: !13031)
!13031 = !DILexicalBlockFile(scope: !13028, file: !1, discriminator: 1)
!13032 = !DILocation(line: 3330, column: 25, scope: !13031)
!13033 = !DILocation(line: 3330, column: 6, scope: !13031)
!13034 = !DILocalVariable(name: "dead", scope: !13035, file: !1, line: 3334, type: !423)
!13035 = distinct !DILexicalBlock(scope: !13028, file: !1, line: 3330, column: 32)
!13036 = !DILocation(line: 3334, column: 10, scope: !13035)
!13037 = !DILocation(line: 3335, column: 8, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13035, file: !1, line: 3335, column: 8)
!13039 = !DILocation(line: 3335, column: 14, scope: !13038)
!13040 = !DILocation(line: 3335, column: 23, scope: !13038)
!13041 = !DILocation(line: 3335, column: 32, scope: !13038)
!13042 = !DILocation(line: 3335, column: 8, scope: !13035)
!13043 = !DILocation(line: 3337, column: 12, scope: !13038)
!13044 = !DILocation(line: 3337, column: 7, scope: !13038)
!13045 = !DILocation(line: 3339, column: 27, scope: !13038)
!13046 = !DILocation(line: 3339, column: 33, scope: !13038)
!13047 = !DILocation(line: 3339, column: 14, scope: !13038)
!13048 = !DILocation(line: 3339, column: 12, scope: !13038)
!13049 = !DILocation(line: 3341, column: 8, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13035, file: !1, line: 3341, column: 8)
!13051 = !DILocation(line: 3341, column: 8, scope: !13035)
!13052 = !DILocation(line: 3342, column: 20, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13050, file: !1, line: 3341, column: 14)
!13054 = !DILocation(line: 3342, column: 7, scope: !13053)
!13055 = !DILocation(line: 3342, column: 13, scope: !13053)
!13056 = !DILocation(line: 3342, column: 18, scope: !13053)
!13057 = !DILocation(line: 3343, column: 13, scope: !13053)
!13058 = !DILocation(line: 3343, column: 57, scope: !13053)
!13059 = !DILocation(line: 3343, column: 63, scope: !13053)
!13060 = !DILocation(line: 3343, column: 7, scope: !13053)
!13061 = !DILocation(line: 3346, column: 23, scope: !13053)
!13062 = !DILocation(line: 3346, column: 7, scope: !13053)
!13063 = !DILocation(line: 3347, column: 7, scope: !13053)
!13064 = !DILocation(line: 3349, column: 3, scope: !13035)
!13065 = !DILocation(line: 3350, column: 3, scope: !2208)
!13066 = !DILocation(line: 3351, column: 1, scope: !2208)
!13067 = !DILocalVariable(name: "sock", arg: 1, scope: !2211, file: !1, line: 3089, type: !315)
!13068 = !DILocation(line: 3089, column: 40, scope: !2211)
!13069 = !DILocalVariable(name: "sval", scope: !2211, file: !1, line: 3091, type: !316)
!13070 = !DILocation(line: 3091, column: 7, scope: !2211)
!13071 = !DILocalVariable(name: "ret_val", scope: !2211, file: !1, line: 3092, type: !423)
!13072 = !DILocation(line: 3092, column: 8, scope: !2211)
!13073 = !DILocation(line: 3094, column: 10, scope: !2211)
!13074 = !DILocation(line: 3094, column: 8, scope: !2211)
!13075 = !DILocation(line: 3095, column: 6, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !2211, file: !1, line: 3095, column: 6)
!13077 = !DILocation(line: 3095, column: 11, scope: !13076)
!13078 = !DILocation(line: 3095, column: 6, scope: !2211)
!13079 = !DILocation(line: 3097, column: 13, scope: !13076)
!13080 = !DILocation(line: 3097, column: 5, scope: !13076)
!13081 = !DILocation(line: 3099, column: 10, scope: !2211)
!13082 = !DILocation(line: 3099, column: 3, scope: !2211)
!13083 = !DILocalVariable(name: "multi", arg: 1, scope: !2217, file: !1, line: 3384, type: !375)
!13084 = !DILocation(line: 3384, column: 54, scope: !2217)
!13085 = !DILocation(line: 3386, column: 10, scope: !2217)
!13086 = !DILocation(line: 3386, column: 18, scope: !13087)
!13087 = !DILexicalBlockFile(scope: !2217, file: !1, discriminator: 1)
!13088 = !DILocation(line: 3386, column: 25, scope: !13087)
!13089 = !DILocation(line: 3386, column: 10, scope: !13087)
!13090 = !DILocation(line: 3386, column: 10, scope: !13091)
!13091 = !DILexicalBlockFile(scope: !2217, file: !1, discriminator: 2)
!13092 = !DILocation(line: 3386, column: 10, scope: !13093)
!13093 = !DILexicalBlockFile(scope: !2217, file: !1, discriminator: 3)
!13094 = !DILocation(line: 3386, column: 3, scope: !13093)
!13095 = !DILocalVariable(name: "pipeline", arg: 1, scope: !2220, file: !1, line: 3161, type: !329)
!13096 = !DILocation(line: 3161, column: 61, scope: !2220)
!13097 = !DILocalVariable(name: "curr", scope: !2220, file: !1, line: 3163, type: !334)
!13098 = !DILocation(line: 3163, column: 30, scope: !2220)
!13099 = !DILocation(line: 3163, column: 37, scope: !2220)
!13100 = !DILocation(line: 3163, column: 47, scope: !2220)
!13101 = !DILocation(line: 3164, column: 6, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !2220, file: !1, line: 3164, column: 6)
!13103 = !DILocation(line: 3164, column: 6, scope: !2220)
!13104 = !DILocation(line: 3165, column: 33, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13102, file: !1, line: 3164, column: 12)
!13106 = !DILocation(line: 3165, column: 39, scope: !13105)
!13107 = !DILocation(line: 3165, column: 12, scope: !13105)
!13108 = !DILocation(line: 3165, column: 5, scope: !13105)
!13109 = !DILocation(line: 3168, column: 3, scope: !2220)
!13110 = !DILocation(line: 3169, column: 1, scope: !2220)
!13111 = !DILocalVariable(name: "protocol", arg: 1, scope: !2223, file: !1, line: 6988, type: !457)
!13112 = !DILocation(line: 6988, column: 47, scope: !2223)
!13113 = !DILocalVariable(name: "family", scope: !2223, file: !1, line: 6990, type: !457)
!13114 = !DILocation(line: 6990, column: 16, scope: !2223)
!13115 = !DILocation(line: 6992, column: 10, scope: !2223)
!13116 = !DILocation(line: 6992, column: 3, scope: !2223)
!13117 = !DILocation(line: 6995, column: 12, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !2223, file: !1, line: 6992, column: 20)
!13119 = !DILocation(line: 6996, column: 5, scope: !13118)
!13120 = !DILocation(line: 7000, column: 12, scope: !13118)
!13121 = !DILocation(line: 7001, column: 5, scope: !13118)
!13122 = !DILocation(line: 7004, column: 12, scope: !13118)
!13123 = !DILocation(line: 7005, column: 5, scope: !13118)
!13124 = !DILocation(line: 7008, column: 12, scope: !13118)
!13125 = !DILocation(line: 7009, column: 5, scope: !13118)
!13126 = !DILocation(line: 7012, column: 12, scope: !13118)
!13127 = !DILocation(line: 7013, column: 5, scope: !13118)
!13128 = !DILocation(line: 7017, column: 12, scope: !13118)
!13129 = !DILocation(line: 7018, column: 5, scope: !13118)
!13130 = !DILocation(line: 7021, column: 12, scope: !13118)
!13131 = !DILocation(line: 7022, column: 5, scope: !13118)
!13132 = !DILocation(line: 7025, column: 12, scope: !13118)
!13133 = !DILocation(line: 7026, column: 5, scope: !13118)
!13134 = !DILocation(line: 7029, column: 12, scope: !13118)
!13135 = !DILocation(line: 7030, column: 5, scope: !13118)
!13136 = !DILocation(line: 7034, column: 12, scope: !13118)
!13137 = !DILocation(line: 7035, column: 5, scope: !13118)
!13138 = !DILocation(line: 7039, column: 12, scope: !13118)
!13139 = !DILocation(line: 7040, column: 5, scope: !13118)
!13140 = !DILocation(line: 7044, column: 14, scope: !13118)
!13141 = !DILocation(line: 7045, column: 7, scope: !13118)
!13142 = !DILocation(line: 7048, column: 12, scope: !13118)
!13143 = !DILocation(line: 7049, column: 5, scope: !13118)
!13144 = !DILocation(line: 7053, column: 12, scope: !13118)
!13145 = !DILocation(line: 7054, column: 5, scope: !13118)
!13146 = !DILocation(line: 7058, column: 12, scope: !13118)
!13147 = !DILocation(line: 7059, column: 5, scope: !13118)
!13148 = !DILocation(line: 7062, column: 12, scope: !13118)
!13149 = !DILocation(line: 7063, column: 5, scope: !13118)
!13150 = !DILocation(line: 7066, column: 12, scope: !13118)
!13151 = !DILocation(line: 7067, column: 5, scope: !13118)
!13152 = !DILocation(line: 7070, column: 12, scope: !13118)
!13153 = !DILocation(line: 7071, column: 5, scope: !13118)
!13154 = !DILocation(line: 7075, column: 12, scope: !13118)
!13155 = !DILocation(line: 7076, column: 5, scope: !13118)
!13156 = !DILocation(line: 7079, column: 14, scope: !13118)
!13157 = !DILocation(line: 7080, column: 7, scope: !13118)
!13158 = !DILocation(line: 7083, column: 10, scope: !2223)
!13159 = !DILocation(line: 7083, column: 3, scope: !2223)
!13160 = !DILocalVariable(name: "data", arg: 1, scope: !2226, file: !1, line: 3267, type: !2229)
!13161 = !DILocation(line: 3267, column: 45, scope: !2226)
!13162 = !DILocalVariable(name: "needle", arg: 2, scope: !2226, file: !1, line: 3268, type: !2229)
!13163 = !DILocation(line: 3268, column: 45, scope: !2226)
!13164 = !DILocation(line: 3270, column: 7, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !2226, file: !1, line: 3270, column: 6)
!13166 = !DILocation(line: 3270, column: 13, scope: !13165)
!13167 = !DILocation(line: 3270, column: 26, scope: !13165)
!13168 = !DILocation(line: 3270, column: 34, scope: !13165)
!13169 = !DILocation(line: 3270, column: 23, scope: !13165)
!13170 = !DILocation(line: 3270, column: 45, scope: !13165)
!13171 = !DILocation(line: 3271, column: 7, scope: !13165)
!13172 = !DILocation(line: 3271, column: 13, scope: !13165)
!13173 = !DILocation(line: 3271, column: 21, scope: !13165)
!13174 = !DILocation(line: 3271, column: 29, scope: !13165)
!13175 = !DILocation(line: 3271, column: 18, scope: !13165)
!13176 = !DILocation(line: 3271, column: 35, scope: !13165)
!13177 = !DILocation(line: 3272, column: 31, scope: !13165)
!13178 = !DILocation(line: 3272, column: 37, scope: !13165)
!13179 = !DILocation(line: 3272, column: 42, scope: !13165)
!13180 = !DILocation(line: 3272, column: 48, scope: !13165)
!13181 = !DILocation(line: 3272, column: 56, scope: !13165)
!13182 = !DILocation(line: 3272, column: 61, scope: !13165)
!13183 = !DILocation(line: 3272, column: 6, scope: !13165)
!13184 = !DILocation(line: 3270, column: 6, scope: !13185)
!13185 = !DILexicalBlockFile(scope: !2226, file: !1, discriminator: 1)
!13186 = !DILocation(line: 3273, column: 5, scope: !13165)
!13187 = !DILocation(line: 3275, column: 3, scope: !2226)
!13188 = !DILocation(line: 3276, column: 1, scope: !2226)

; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.connectdata = type { %struct.Curl_easy*, %struct.Curl_chunker, i32 (i8*, i32)*, i8*, i8, i64, %struct.Curl_dns_entry*, %struct.Curl_addrinfo*, [2 x %struct.Curl_addrinfo*], [46 x i8], i32, i32, %struct.hostname, i8*, %struct.hostname, %struct.proxy_info, %struct.proxy_info, i64, i32, i32, i16, [46 x i8], i64, [46 x i8], i64, i8*, i8*, i8*, i8*, i32, i32, %struct.timeval, %struct.timeval, [2 x i32], [2 x i32], [2 x i8], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data], %struct.ssl_primary_config, %struct.ssl_primary_config, i8, %struct.ConnectBits, %struct.timeval, i32, i64, %struct.Curl_handler*, %struct.Curl_handler*, i64, i32, i32, %struct.dynamically_allocated_data, i8, i8, %struct.curl_llist, %struct.curl_llist, i8*, i64, i64, i32 (i8*, i64, i32)*, i8*, [256 x i8], i8*, i32, i32, %union.anon.0, i32, i32, i8*, i16, i32, [2 x i32], %struct.connectbundle*, i32 }
%struct.Curl_easy = type { %struct.Curl_easy*, %struct.Curl_easy*, %struct.connectdata*, i32, i32, %struct.Curl_message, [5 x i32], i32, %struct.Names, %struct.Curl_multi*, %struct.Curl_multi*, %struct.Curl_share*, %struct.SingleRequest, %struct.UserDefined, %struct.DynamicStatic, %struct.CookieInfo*, %struct.Progress, %struct.UrlState, %struct.WildcardData, %struct.PureInfo, %struct.curl_tlssessioninfo, i32 }
%struct.Curl_message = type { %struct.CURLMsg }
%struct.CURLMsg = type { i32, %struct.Curl_easy*, %union.anon }
%union.anon = type { i8* }
%struct.Names = type { %struct.curl_hash*, i32 }
%struct.curl_hash = type { %struct.curl_llist*, i64 (i8*, i64, i64)*, i64 (i8*, i64, i8*, i64)*, void (i8*)*, i32, i64 }
%struct.Curl_multi = type { i64, %struct.Curl_easy*, %struct.Curl_easy*, i32, i32, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i8*, i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)*, i8*, %struct.curl_hash, %struct.Curl_tree*, %struct.curl_hash, i64, i8, %struct.conncache, %struct.Curl_easy*, i64, i64, i64, i64, i64, i64, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_multi*, i64, i8*)*, i8*, %struct.timeval }
%struct.curl_pushheaders = type opaque
%struct.Curl_tree = type { %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.timeval, i8* }
%struct.conncache = type { %struct.curl_hash, i64, i64, %struct.timeval }
%struct.Curl_share = type { i32, i32, void (%struct.Curl_easy*, i32, i32, i8*)*, void (%struct.Curl_easy*, i32, i8*)*, i8*, %struct.curl_hash, %struct.CookieInfo*, %struct.curl_ssl_session*, i64, i64 }
%struct.curl_ssl_session = type { i8*, i8*, i8*, i8*, i64, i64, i32, i32, %struct.ssl_primary_config }
%struct.SingleRequest = type { i64, i64*, i64, i64*, i64, i64, i64, i64, %struct.timeval, %struct.timeval, i8, i32, i32, i8*, i64, i8*, i8*, i8*, i8*, i8, i64, i32, %struct.timeval, i32, i32, i32, i64, i64, i8*, i8*, i32, i32, i8, i8, i8, i8*, i8*, i64, i8*, i8, i8, i8, i8, i8* }
%struct.UserDefined = type { %struct._IO_FILE*, i8*, i8*, i64, i8*, i8*, i8*, i8*, i64, i64, i64, i64, i64, i32, i8, i8*, i32 (i8*, i64, i32)*, i64, i16, i32, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i32, i32, i32 (i8*, double, double, double, double)*, i32 (i8*, i64, i64, i64, i64)*, i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)*, i32 (%struct.Curl_easy*, i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32 (i8*, i32, %struct.curl_sockaddr*)*, i8*, i32 (i8*, i32)*, i8*, i8*, i32 (i8*, i64)*, i32 (i8*, i64)*, i32 (i8*, i64)*, i8*, i8*, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64, i64, i64, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_httppost*, i8, i8, i8, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, i32, i64, i32, i64, %struct.ssl_config_data, %struct.ssl_config_data, %struct.ssl_general_config, i32, i64, i64, i8*, %struct.curl_slist*, i64, i64, i32, i32, i32 (%struct.Curl_easy*, %struct.curl_khkey*, %struct.curl_khkey*, i32, i8*)*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i64, i8, i8, i64, i64, i8, [56 x i8*], i32, i64, i64, %struct.curl_slist*, i8, i32, i64, i8, i64 (i8*, i8*, i32)*, i64 (i8*)*, i32 (i8*, i8*, i8*)*, i8*, i64, i8, i64, i64, i8, i64, i8, i8, i8, i8, i64, i8, %struct.Curl_easy*, i8, i32, %struct.Curl_http2_dep*, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.curl_sockaddr = type { i32, i32, i32, i32, %struct.sockaddr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.curl_httppost = type { %struct.curl_httppost*, i8*, i64, i8*, i64, i8*, i64, i8*, %struct.curl_slist*, %struct.curl_httppost*, i64, i8*, i8*, i64 }
%struct.ssl_config_data = type { %struct.ssl_primary_config, i8, i8, i64, i8*, i8*, i32 (%struct.Curl_easy*, i8*, i8*)*, i8*, i8, i8, i8*, i8*, i8*, i8*, i8* }
%struct.ssl_general_config = type { i64 }
%struct.curl_khkey = type { i8*, i64, i32 }
%struct.curl_slist = type { i8*, %struct.curl_slist* }
%struct.Curl_http2_dep = type { %struct.Curl_http2_dep*, %struct.Curl_easy* }
%struct.DynamicStatic = type { i8*, i8, i8*, i8, %struct.curl_slist*, %struct.curl_slist* }
%struct.CookieInfo = type { %struct.Cookie*, i8*, i8, i64, i8 }
%struct.Cookie = type { %struct.Cookie*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8, i8*, i8*, i8, i8, i8 }
%struct.Progress = type { i64, i64, i64, i64, i64, i64, i8, i32, i32, double, i64, i64, double, double, double, double, double, double, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, i64, %struct.timeval, i64, [6 x i64], [6 x %struct.timeval], i32 }
%struct.UrlState = type { %struct.conncache*, i8, %struct.timeval, %struct.connectdata*, i8*, i64, i8*, [16385 x i8], i64, i8, i8*, i32, %struct.curl_ssl_session*, i64, i32, [3 x %struct.tempbuf], i8*, i8, i32, void (i32)*, i8, %struct.digestdata, %struct.digestdata, %struct.auth, %struct.auth, i8, i8*, %struct.timeval, %struct.Curl_tree, %struct.curl_llist, i8*, i8, i32, i8, i8, i8, i64, i8*, i8*, i8, i8, i8, i8*, i64, i64, i64, i64, i64, i64, i8, i64 (i8*, i64, i64, i8*)*, i8*, %struct.Curl_easy*, i8, i32 }
%struct.tempbuf = type { i8*, i64, i32 }
%struct.digestdata = type { i8*, i8*, i8*, i32, i8, i8*, i8*, i8*, i32 }
%struct.auth = type { i64, i64, i64, i8, i8, i8 }
%struct.WildcardData = type { i32, i8*, i8*, %struct.curl_llist, i8*, void (i8*)*, i8* }
%struct.PureInfo = type { i32, i32, i32, i64, i8, i64, i64, i64, i64, i64, i8*, i8*, [46 x i8], i64, [46 x i8], i64, i8*, i32, %struct.curl_certinfo }
%struct.curl_certinfo = type { i32, %struct.curl_slist** }
%struct.curl_tlssessioninfo = type { i32, i8* }
%struct.Curl_chunker = type { [17 x i8], i32, i32, i64, i64 }
%struct.Curl_dns_entry = type { %struct.Curl_addrinfo*, i64, i64 }
%struct.Curl_addrinfo = type { i32, i32, i32, i32, i32, i8*, %struct.sockaddr*, %struct.Curl_addrinfo* }
%struct.hostname = type { i8*, i8*, i8*, i8* }
%struct.proxy_info = type { %struct.hostname, i64, i32, i8*, i8* }
%struct.ssl_connect_data = type { i8, i32, i32 }
%struct.ssl_primary_config = type { i64, i64, i8, i8, i8, i8*, i8*, i8*, i8*, i8*, i8*, i8 }
%struct.ConnectBits = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8 }
%struct.timeval = type { i64, i64 }
%struct.Curl_handler = type { i8*, {}*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i1)*, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)*, i64, i32, i32 }
%struct.dynamically_allocated_data = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.curl_llist = type { %struct.curl_llist_element*, %struct.curl_llist_element*, void (i8*, i8*)*, i64 }
%struct.curl_llist_element = type { i8*, %struct.curl_llist_element*, %struct.curl_llist_element* }
%union.anon.0 = type { %struct.ftp_conn }
%struct.ftp_conn = type { %struct.pingpong, i8*, i8**, i32, i32, i8*, i8, i8, i8, i8, i8, i8*, i8, i32, i32, i32, i32, i32, i64, i8*, i64, i8*, i16 }
%struct.pingpong = type { i8*, i64, i64, i8*, i8, i8*, i64, i64, %struct.timeval, i64, %struct.connectdata*, {}*, i1 (%struct.connectdata*, i8*, i64, i32*)* }
%struct.connectbundle = type { i32, i64, %struct.curl_llist }
%struct.HTTP = type { %struct.FormData*, i64, i8*, i8*, i8*, i64, i64, %struct.Form, %struct.back, i32, i8* }
%struct.FormData = type { %struct.FormData*, i32, i8*, i64 }
%struct.Form = type { %struct.FormData*, i64, %struct._IO_FILE*, i64 (i8*, i64, i64, i8*)* }
%struct.back = type { i64 (i8*, i64, i64, i8*)*, i8*, i8*, i64 }
%struct.Curl_send_buffer = type { i8*, i64, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [5 x i8] c"HTTP\00", align 1
@Curl_handler_http = constant { i8*, i32 (%struct.connectdata*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i1)*, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)*, i64, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 (%struct.connectdata*)* @Curl_http_setup_conn, i32 (%struct.connectdata*, i8*)* @Curl_http, i32 (%struct.connectdata*, i32, i1)* @Curl_http_done, i32 (%struct.connectdata*, i32*)* null, i32 (%struct.connectdata*, i8*)* @Curl_http_connect, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i8*)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i32*, i32)* @http_getsock_do, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i32*, i32)* null, i32 (%struct.connectdata*, i1)* null, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)* null, i64 80, i32 1, i32 128 }, align 8
@Curl_ccalloc = external global i8* (i64, i64)*, align 8
@Curl_cmalloc = external global i8* (i64)*, align 8
@Curl_cfree = external global void (i8*)*, align 8
@Curl_cstrdup = external global i8* (i8*)*, align 8
@.str.1 = private unnamed_addr constant [37 x i8] c"The requested URL returned error: %d\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Digest\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"Ignoring duplicate digest auth header.\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Authentication problem. Ignoring this.\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Basic\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"Empty reply from server\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"Host:\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"Content-Type:\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"Content-Length\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"Connection\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"Transfer-Encoding:\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Invalid TIMEVALUE\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"%s, %02d %s %4d %02d:%02d:%02d GMT\00", align 1
@Curl_wkday = external constant [7 x i8*], align 16
@Curl_month = external constant [12 x i8*], align 16
@.str.15 = private unnamed_addr constant [24 x i8] c"If-Modified-Since: %s\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"If-Unmodified-Since: %s\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"Last-Modified: %s\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"User-Agent:\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Referer:\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"Referer: %s\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"Cookie:\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"Accept-Encoding:\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"Accept-Encoding: %s\0D\0A\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"chunked\00", align 1
@.str.30 = private unnamed_addr constant [43 x i8] c"Chunky upload is not supported by HTTP 1.0\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"Transfer-Encoding: chunked\0D\0A\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"Host: %s%s%s\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"Host: %s%s%s:%hu\0D\0A\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"ftp://\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c";type=\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c";type=%c\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"Accept:\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"Accept: */*\0D\0A\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"Could not seek stream\00", align 1
@.str.42 = private unnamed_addr constant [41 x i8] c"Could only read %ld bytes from the input\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"File already completely uploaded\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"Range:\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"Range: bytes=%s\0D\0A\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"Content-Range:\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"Content-Range: bytes 0-%ld/%ld\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [33 x i8] c"Content-Range: bytes %s%ld/%ld\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"Content-Range: bytes %s/%ld\0D\0A\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"ftp://%s:%s@%s\00", align 1
@.str.52 = private unnamed_addr constant [35 x i8] c"%s HTTP/%s\0D\0A%s%s%s%s%s%s%s%s%s%s%s\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"Proxy-Connection:\00", align 1
@.str.54 = private unnamed_addr constant [31 x i8] c"Proxy-Connection: Keep-Alive\0D\0A\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"Cookie: \00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"%s%s=%s\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"Content-Length: 0\0D\0A\0D\0A\00", align 1
@.str.61 = private unnamed_addr constant [28 x i8] c"Failed sending POST request\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"Internal HTTP POST error!\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"Content-Length:\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"Content-Length: %ld\0D\0A\00", align 1
@.str.65 = private unnamed_addr constant [40 x i8] c"Could not get Content-Type header line!\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"Failed sending PUT request\00", align 1
@.str.67 = private unnamed_addr constant [50 x i8] c"Content-Type: application/x-www-form-urlencoded\0D\0A\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"Expect:\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"100-continue\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"%x\0D\0A\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"0\0D\0A\0D\0A\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"Failed sending HTTP POST request\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"Failed sending HTTP request\00", align 1
@.str.74 = private unnamed_addr constant [50 x i8] c"upload completely sent off: %ld out of %ld bytes\0A\00", align 1
@.str.75 = private unnamed_addr constant [14 x i8] c"Received 101\0A\00", align 1
@.str.76 = private unnamed_addr constant [57 x i8] c"no chunk, no close, no size. Assume close to signal end\0A\00", align 1
@.str.77 = private unnamed_addr constant [45 x i8] c"HTTP error before end of send, keep sending\0A\00", align 1
@.str.78 = private unnamed_addr constant [45 x i8] c"HTTP error before end of send, stop sending\0A\00", align 1
@.str.79 = private unnamed_addr constant [39 x i8] c"Keep sending data to get tossed away!\0A\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c" HTTP/%d.%d %d\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c" HTTP/2 %d\00", align 1
@.str.82 = private unnamed_addr constant [34 x i8] c"Lying server, not serving HTTP/2\0A\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c" HTTP %3d\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c" RTSP/%d.%d %3d\00", align 1
@.str.85 = private unnamed_addr constant [35 x i8] c"HTTP 1.0, assume close after body\0A\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"Maximum file size exceeded\00", align 1
@.str.87 = private unnamed_addr constant [54 x i8] c"Negative content-length: %ld, closing after transfer\0A\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"Server:\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"keep-alive\00", align 1
@.str.90 = private unnamed_addr constant [46 x i8] c"HTTP/1.0 proxy connection set to keep alive!\0A\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.92 = private unnamed_addr constant [38 x i8] c"HTTP/1.1 proxy connection set close!\0A\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"Connection:\00", align 1
@.str.94 = private unnamed_addr constant [40 x i8] c"HTTP/1.0 connection set to keep alive!\0A\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"deflate\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"gzip\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"x-gzip\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"Content-Encoding:\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"Set-Cookie:\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"Last-Modified:\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"WWW-Authenticate:\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"Proxy-authenticate:\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"Location:\00", align 1
@.str.105 = private unnamed_addr constant [21 x i8] c"Proxy-authorization:\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"Authorization:\00", align 1
@.str.107 = private unnamed_addr constant [33 x i8] c"%s auth using %s with user '%s'\0A\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"Proxy\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"Server\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str.111 = private unnamed_addr constant [28 x i8] c"%sAuthorization: Basic %s\0D\0A\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"Proxy-\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"1.1\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"Expect: 100-continue\0D\0A\00", align 1
@.str.116 = private unnamed_addr constant [46 x i8] c"Avoided giant realloc for header (max is %d)!\00", align 1
@Curl_crealloc = external global i8* (i8*, i64)*, align 8
@.str.117 = private unnamed_addr constant [39 x i8] c"Failed to alloc memory for big header!\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"HTTP/\00", align 1
@.str.119 = private unnamed_addr constant [37 x i8] c"The requested URL returned error: %s\00", align 1

; Function Attrs: nounwind uwtable
define i32 @Curl_http_setup_conn(%struct.connectdata* %conn) #0 !dbg !1854 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %http = alloca %struct.HTTP*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !1949, metadata !1950), !dbg !1951
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !1952, metadata !1950), !dbg !1954
  br label %do.body, !dbg !1955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !1956

do.end:                                           ; preds = %do.body
  %0 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !1959
  %call = call i8* %0(i64 1, i64 136), !dbg !1959
  %1 = bitcast i8* %call to %struct.HTTP*, !dbg !1959
  store %struct.HTTP* %1, %struct.HTTP** %http, align 8, !dbg !1960
  %2 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !1961
  %tobool = icmp ne %struct.HTTP* %2, null, !dbg !1961
  br i1 %tobool, label %if.end, label %if.then, !dbg !1963

if.then:                                          ; preds = %do.end
  store i32 27, i32* %retval, align 4, !dbg !1964
  br label %return, !dbg !1964

if.end:                                           ; preds = %do.end
  %3 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !1965
  %4 = bitcast %struct.HTTP* %3 to i8*, !dbg !1965
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !1966
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 0, !dbg !1967
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !1967
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 12, !dbg !1968
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !1969
  store i8* %4, i8** %protop, align 8, !dbg !1970
  store i32 0, i32* %retval, align 4, !dbg !1971
  br label %return, !dbg !1971

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !1972
  ret i32 %7, !dbg !1972
}

; Function Attrs: nounwind uwtable
define i32 @Curl_http(%struct.connectdata* %conn, i8* %done) #0 !dbg !1904 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %done.addr = alloca i8*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %result = alloca i32, align 4
  %http = alloca %struct.HTTP*, align 8
  %ppath = alloca i8*, align 8
  %paste_ftp_userpwd = alloca i8, align 1
  %ftp_typecode = alloca [9 x i8], align 1
  %host = alloca i8*, align 8
  %te = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %request = alloca i8*, align 8
  %httpreq = alloca i32, align 4
  %addcookies = alloca i8*, align 8
  %included_body = alloca i64, align 8
  %httpstring = alloca i8*, align 8
  %req_buffer = alloca %struct.Curl_send_buffer*, align 8
  %postsize = alloca i64, align 8
  %seekerr = alloca i32, align 4
  %cookiehost = alloca i8*, align 8
  %startsearch = alloca i32, align 4
  %closingbracket = alloca i8*, align 8
  %colon = alloca i8*, align 8
  %url = alloca i8*, align 8
  %currlen = alloca i64, align 8
  %newlen = alloca i64, align 8
  %urllen = alloca i64, align 8
  %newurl = alloca i8*, align 8
  %type = alloca i8*, align 8
  %p = alloca i8*, align 8
  %passed = alloca i64, align 8
  %readthisamountnow = alloca i64, align 8
  %actuallyread = alloca i64, align 8
  %total_expected_size = alloca i64, align 8
  %co = alloca %struct.Cookie*, align 8
  %count = alloca i32, align 4
  %store = alloca %struct.Cookie*, align 8
  %contentType = alloca i8*, align 8
  %linelength = alloca i64, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !1973, metadata !1950), !dbg !1974
  store i8* %done, i8** %done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %done.addr, metadata !1975, metadata !1950), !dbg !1976
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !1977, metadata !1950), !dbg !1978
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !1979
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !1980
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !1980
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !1978
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1981, metadata !1950), !dbg !1982
  store i32 0, i32* %result, align 4, !dbg !1982
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !1983, metadata !1950), !dbg !1984
  call void @llvm.dbg.declare(metadata i8** %ppath, metadata !1985, metadata !1950), !dbg !1986
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !1987
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 17, !dbg !1988
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 38, !dbg !1989
  %3 = load i8*, i8** %path, align 8, !dbg !1989
  store i8* %3, i8** %ppath, align 8, !dbg !1986
  call void @llvm.dbg.declare(metadata i8* %paste_ftp_userpwd, metadata !1990, metadata !1950), !dbg !1991
  store i8 0, i8* %paste_ftp_userpwd, align 1, !dbg !1991
  call void @llvm.dbg.declare(metadata [9 x i8]* %ftp_typecode, metadata !1992, metadata !1950), !dbg !1996
  %4 = bitcast [9 x i8]* %ftp_typecode to i8*, !dbg !1996
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 9, i32 1, i1 false), !dbg !1996
  call void @llvm.dbg.declare(metadata i8** %host, metadata !1997, metadata !1950), !dbg !1998
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !1999
  %host2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 12, !dbg !2000
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host2, i32 0, i32 2, !dbg !2001
  %6 = load i8*, i8** %name, align 8, !dbg !2001
  store i8* %6, i8** %host, align 8, !dbg !1998
  call void @llvm.dbg.declare(metadata i8** %te, metadata !2002, metadata !1950), !dbg !2003
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), i8** %te, align 8, !dbg !2003
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !2004, metadata !1950), !dbg !2005
  call void @llvm.dbg.declare(metadata i8** %request, metadata !2006, metadata !1950), !dbg !2007
  call void @llvm.dbg.declare(metadata i32* %httpreq, metadata !2008, metadata !1950), !dbg !2009
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2010
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !2011
  %httpreq3 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 71, !dbg !2012
  %8 = load i32, i32* %httpreq3, align 8, !dbg !2012
  store i32 %8, i32* %httpreq, align 4, !dbg !2009
  call void @llvm.dbg.declare(metadata i8** %addcookies, metadata !2013, metadata !1950), !dbg !2014
  store i8* null, i8** %addcookies, align 8, !dbg !2014
  call void @llvm.dbg.declare(metadata i64* %included_body, metadata !2015, metadata !1950), !dbg !2016
  store i64 0, i64* %included_body, align 8, !dbg !2016
  call void @llvm.dbg.declare(metadata i8** %httpstring, metadata !2017, metadata !1950), !dbg !2018
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %req_buffer, metadata !2019, metadata !1950), !dbg !2020
  call void @llvm.dbg.declare(metadata i64* %postsize, metadata !2021, metadata !1950), !dbg !2022
  store i64 0, i64* %postsize, align 8, !dbg !2022
  call void @llvm.dbg.declare(metadata i32* %seekerr, metadata !2023, metadata !1950), !dbg !2024
  store i32 0, i32* %seekerr, align 4, !dbg !2024
  %9 = load i8*, i8** %done.addr, align 8, !dbg !2025
  store i8 1, i8* %9, align 1, !dbg !2026
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2027
  %httpversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 29, !dbg !2029
  %11 = load i32, i32* %httpversion, align 8, !dbg !2029
  %cmp = icmp slt i32 %11, 20, !dbg !2030
  br i1 %cmp, label %if.then, label %if.else, !dbg !2031

if.then:                                          ; preds = %entry
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2032
  %negnpn = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 74, !dbg !2034
  %13 = load i32, i32* %negnpn, align 8, !dbg !2034
  switch i32 %13, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb6
  ], !dbg !2035

sw.bb:                                            ; preds = %if.then
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2036
  %httpversion4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 29, !dbg !2038
  store i32 20, i32* %httpversion4, align 8, !dbg !2039
  store i32 1, i32* %result, align 4, !dbg !2040
  %15 = load i32, i32* %result, align 4, !dbg !2041
  %tobool = icmp ne i32 %15, 0, !dbg !2041
  br i1 %tobool, label %if.then5, label %if.end, !dbg !2043

if.then5:                                         ; preds = %sw.bb
  %16 = load i32, i32* %result, align 4, !dbg !2044
  store i32 %16, i32* %retval, align 4, !dbg !2045
  br label %return, !dbg !2045

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !2046

sw.bb6:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !2047

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !2048

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %if.end
  br label %if.end10, !dbg !2049

if.else:                                          ; preds = %entry
  store i32 1, i32* %result, align 4, !dbg !2050
  %17 = load i32, i32* %result, align 4, !dbg !2052
  %tobool7 = icmp ne i32 %17, 0, !dbg !2052
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !2054

if.then8:                                         ; preds = %if.else
  %18 = load i32, i32* %result, align 4, !dbg !2055
  store i32 %18, i32* %retval, align 4, !dbg !2056
  br label %return, !dbg !2056

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %sw.epilog
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2057
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %19, i32 0, i32 12, !dbg !2058
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !2059
  %20 = load i8*, i8** %protop, align 8, !dbg !2059
  %21 = bitcast i8* %20 to %struct.HTTP*, !dbg !2057
  store %struct.HTTP* %21, %struct.HTTP** %http, align 8, !dbg !2060
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2061
  %state11 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !2063
  %this_is_a_follow = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state11, i32 0, i32 9, !dbg !2064
  %23 = load i8, i8* %this_is_a_follow, align 8, !dbg !2064
  %tobool12 = trunc i8 %23 to i1, !dbg !2064
  br i1 %tobool12, label %if.end25, label %if.then13, !dbg !2065

if.then13:                                        ; preds = %if.end10
  %24 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2066
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2066
  %state14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 17, !dbg !2066
  %first_host = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state14, i32 0, i32 10, !dbg !2066
  %26 = load i8*, i8** %first_host, align 8, !dbg !2066
  call void %24(i8* %26), !dbg !2066
  %27 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !2068
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2068
  %host15 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 12, !dbg !2068
  %name16 = getelementptr inbounds %struct.hostname, %struct.hostname* %host15, i32 0, i32 2, !dbg !2068
  %29 = load i8*, i8** %name16, align 8, !dbg !2068
  %call = call i8* %27(i8* %29), !dbg !2068
  %30 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2069
  %state17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %30, i32 0, i32 17, !dbg !2070
  %first_host18 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state17, i32 0, i32 10, !dbg !2071
  store i8* %call, i8** %first_host18, align 8, !dbg !2072
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2073
  %state19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 17, !dbg !2075
  %first_host20 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state19, i32 0, i32 10, !dbg !2076
  %32 = load i8*, i8** %first_host20, align 8, !dbg !2076
  %tobool21 = icmp ne i8* %32, null, !dbg !2073
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !2077

if.then22:                                        ; preds = %if.then13
  store i32 27, i32* %retval, align 4, !dbg !2078
  br label %return, !dbg !2078

if.end23:                                         ; preds = %if.then13
  %33 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2079
  %remote_port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 18, !dbg !2080
  %34 = load i32, i32* %remote_port, align 8, !dbg !2080
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2081
  %state24 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 17, !dbg !2082
  %first_remote_port = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state24, i32 0, i32 11, !dbg !2083
  store i32 %34, i32* %first_remote_port, align 8, !dbg !2084
  br label %if.end25, !dbg !2085

if.end25:                                         ; preds = %if.end23, %if.end10
  %36 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !2086
  %readbytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %36, i32 0, i32 5, !dbg !2087
  store i64 0, i64* %readbytecount, align 8, !dbg !2088
  %37 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !2089
  %writebytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %37, i32 0, i32 6, !dbg !2090
  store i64 0, i64* %writebytecount, align 8, !dbg !2091
  %38 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2092
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 47, !dbg !2094
  %39 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !2094
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %39, i32 0, i32 15, !dbg !2095
  %40 = load i32, i32* %protocol, align 8, !dbg !2095
  %and = and i32 %40, 7, !dbg !2096
  %tobool26 = icmp ne i32 %and, 0, !dbg !2096
  br i1 %tobool26, label %land.lhs.true, label %if.end30, !dbg !2097

land.lhs.true:                                    ; preds = %if.end25
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2098
  %set27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %41, i32 0, i32 13, !dbg !2099
  %upload = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set27, i32 0, i32 104, !dbg !2100
  %42 = load i8, i8* %upload, align 1, !dbg !2100
  %tobool28 = trunc i8 %42 to i1, !dbg !2100
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2101

if.then29:                                        ; preds = %land.lhs.true
  store i32 4, i32* %httpreq, align 4, !dbg !2103
  br label %if.end30, !dbg !2105

if.end30:                                         ; preds = %if.then29, %land.lhs.true, %if.end25
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2106
  %set31 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %43, i32 0, i32 13, !dbg !2108
  %str = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set31, i32 0, i32 128, !dbg !2109
  %arrayidx = getelementptr inbounds [56 x i8*], [56 x i8*]* %str, i64 0, i64 6, !dbg !2106
  %44 = load i8*, i8** %arrayidx, align 8, !dbg !2106
  %tobool32 = icmp ne i8* %44, null, !dbg !2106
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2110

if.then33:                                        ; preds = %if.end30
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2111
  %set34 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 13, !dbg !2112
  %str35 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set34, i32 0, i32 128, !dbg !2113
  %arrayidx36 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str35, i64 0, i64 6, !dbg !2111
  %46 = load i8*, i8** %arrayidx36, align 8, !dbg !2111
  store i8* %46, i8** %request, align 8, !dbg !2114
  br label %if.end49, !dbg !2115

if.else37:                                        ; preds = %if.end30
  %47 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2116
  %set38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %47, i32 0, i32 13, !dbg !2119
  %opt_no_body = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set38, i32 0, i32 103, !dbg !2120
  %48 = load i8, i8* %opt_no_body, align 8, !dbg !2120
  %tobool39 = trunc i8 %48 to i1, !dbg !2120
  br i1 %tobool39, label %if.then40, label %if.else41, !dbg !2121

if.then40:                                        ; preds = %if.else37
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8** %request, align 8, !dbg !2122
  br label %if.end48, !dbg !2123

if.else41:                                        ; preds = %if.else37
  br label %do.body, !dbg !2124

do.body:                                          ; preds = %if.else41
  br label %do.end, !dbg !2126

do.end:                                           ; preds = %do.body
  %49 = load i32, i32* %httpreq, align 4, !dbg !2129
  switch i32 %49, label %sw.default44 [
    i32 2, label %sw.bb42
    i32 3, label %sw.bb42
    i32 4, label %sw.bb43
    i32 1, label %sw.bb45
    i32 5, label %sw.bb46
  ], !dbg !2130

sw.bb42:                                          ; preds = %do.end, %do.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8** %request, align 8, !dbg !2131
  br label %sw.epilog47, !dbg !2133

sw.bb43:                                          ; preds = %do.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8** %request, align 8, !dbg !2134
  br label %sw.epilog47, !dbg !2135

sw.default44:                                     ; preds = %do.end
  br label %sw.bb45, !dbg !2136

sw.bb45:                                          ; preds = %do.end, %sw.default44
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8** %request, align 8, !dbg !2138
  br label %sw.epilog47, !dbg !2139

sw.bb46:                                          ; preds = %do.end
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8** %request, align 8, !dbg !2140
  br label %sw.epilog47, !dbg !2141

sw.epilog47:                                      ; preds = %sw.bb46, %sw.bb45, %sw.bb43, %sw.bb42
  br label %if.end48

if.end48:                                         ; preds = %sw.epilog47, %if.then40
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then33
  %50 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2142
  %call50 = call i8* @Curl_checkheaders(%struct.connectdata* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0)), !dbg !2144
  %tobool51 = icmp ne i8* %call50, null, !dbg !2144
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !2145

if.then52:                                        ; preds = %if.end49
  %51 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2146
  %52 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2146
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %52, i32 0, i32 52, !dbg !2146
  %uagent = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 1, !dbg !2146
  %53 = load i8*, i8** %uagent, align 8, !dbg !2146
  call void %51(i8* %53), !dbg !2146
  %54 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2148
  %allocptr53 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %54, i32 0, i32 52, !dbg !2149
  %uagent54 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr53, i32 0, i32 1, !dbg !2150
  store i8* null, i8** %uagent54, align 8, !dbg !2151
  br label %if.end55, !dbg !2152

if.end55:                                         ; preds = %if.then52, %if.end49
  %55 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2153
  %56 = load i8*, i8** %request, align 8, !dbg !2154
  %57 = load i8*, i8** %ppath, align 8, !dbg !2155
  %call56 = call i32 @Curl_http_output_auth(%struct.connectdata* %55, i8* %56, i8* %57, i1 zeroext false), !dbg !2156
  store i32 %call56, i32* %result, align 4, !dbg !2157
  %58 = load i32, i32* %result, align 4, !dbg !2158
  %tobool57 = icmp ne i32 %58, 0, !dbg !2158
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !2160

if.then58:                                        ; preds = %if.end55
  %59 = load i32, i32* %result, align 4, !dbg !2161
  store i32 %59, i32* %retval, align 4, !dbg !2162
  br label %return, !dbg !2162

if.end59:                                         ; preds = %if.end55
  %60 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2163
  %state60 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %60, i32 0, i32 17, !dbg !2165
  %authhost = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state60, i32 0, i32 23, !dbg !2166
  %multipass = getelementptr inbounds %struct.auth, %struct.auth* %authhost, i32 0, i32 4, !dbg !2167
  %61 = load i8, i8* %multipass, align 1, !dbg !2167
  %tobool61 = trunc i8 %61 to i1, !dbg !2167
  br i1 %tobool61, label %land.lhs.true65, label %lor.lhs.false, !dbg !2168

lor.lhs.false:                                    ; preds = %if.end59
  %62 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2169
  %state62 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %62, i32 0, i32 17, !dbg !2171
  %authproxy = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state62, i32 0, i32 24, !dbg !2172
  %multipass63 = getelementptr inbounds %struct.auth, %struct.auth* %authproxy, i32 0, i32 4, !dbg !2173
  %63 = load i8, i8* %multipass63, align 1, !dbg !2173
  %tobool64 = trunc i8 %63 to i1, !dbg !2173
  br i1 %tobool64, label %land.lhs.true65, label %if.else70, !dbg !2174

land.lhs.true65:                                  ; preds = %lor.lhs.false, %if.end59
  %64 = load i32, i32* %httpreq, align 4, !dbg !2175
  %cmp66 = icmp ne i32 %64, 1, !dbg !2176
  br i1 %cmp66, label %land.lhs.true67, label %if.else70, !dbg !2177

land.lhs.true67:                                  ; preds = %land.lhs.true65
  %65 = load i32, i32* %httpreq, align 4, !dbg !2178
  %cmp68 = icmp ne i32 %65, 5, !dbg !2179
  br i1 %cmp68, label %if.then69, label %if.else70, !dbg !2180

if.then69:                                        ; preds = %land.lhs.true67
  %66 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2182
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %66, i32 0, i32 43, !dbg !2184
  %authneg = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 16, !dbg !2185
  store i8 1, i8* %authneg, align 1, !dbg !2186
  br label %if.end73, !dbg !2187

if.else70:                                        ; preds = %land.lhs.true67, %land.lhs.true65, %lor.lhs.false
  %67 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2188
  %bits71 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %67, i32 0, i32 43, !dbg !2189
  %authneg72 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits71, i32 0, i32 16, !dbg !2190
  store i8 0, i8* %authneg72, align 1, !dbg !2191
  br label %if.end73

if.end73:                                         ; preds = %if.else70, %if.then69
  br label %do.body74, !dbg !2192

do.body74:                                        ; preds = %if.end73
  %68 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2193
  %69 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2193
  %allocptr75 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %69, i32 0, i32 52, !dbg !2193
  %ref = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr75, i32 0, i32 5, !dbg !2193
  %70 = load i8*, i8** %ref, align 8, !dbg !2193
  call void %68(i8* %70), !dbg !2193
  %71 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2193
  %allocptr76 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 52, !dbg !2193
  %ref77 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr76, i32 0, i32 5, !dbg !2193
  store i8* null, i8** %ref77, align 8, !dbg !2193
  br label %do.end78, !dbg !2193

do.end78:                                         ; preds = %do.body74
  %72 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2196
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %72, i32 0, i32 14, !dbg !2198
  %referer = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 2, !dbg !2199
  %73 = load i8*, i8** %referer, align 8, !dbg !2199
  %tobool79 = icmp ne i8* %73, null, !dbg !2196
  br i1 %tobool79, label %land.lhs.true80, label %if.else94, !dbg !2200

land.lhs.true80:                                  ; preds = %do.end78
  %74 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2201
  %call81 = call i8* @Curl_checkheaders(%struct.connectdata* %74, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0)), !dbg !2203
  %tobool82 = icmp ne i8* %call81, null, !dbg !2203
  br i1 %tobool82, label %if.else94, label %if.then83, !dbg !2204

if.then83:                                        ; preds = %land.lhs.true80
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2205
  %change84 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %75, i32 0, i32 14, !dbg !2207
  %referer85 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change84, i32 0, i32 2, !dbg !2208
  %76 = load i8*, i8** %referer85, align 8, !dbg !2208
  %call86 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i8* %76), !dbg !2209
  %77 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2210
  %allocptr87 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %77, i32 0, i32 52, !dbg !2211
  %ref88 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr87, i32 0, i32 5, !dbg !2212
  store i8* %call86, i8** %ref88, align 8, !dbg !2213
  %78 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2214
  %allocptr89 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 52, !dbg !2216
  %ref90 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr89, i32 0, i32 5, !dbg !2217
  %79 = load i8*, i8** %ref90, align 8, !dbg !2217
  %tobool91 = icmp ne i8* %79, null, !dbg !2214
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !2218

if.then92:                                        ; preds = %if.then83
  store i32 27, i32* %retval, align 4, !dbg !2219
  br label %return, !dbg !2219

if.end93:                                         ; preds = %if.then83
  br label %if.end97, !dbg !2220

if.else94:                                        ; preds = %land.lhs.true80, %do.end78
  %80 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2221
  %allocptr95 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %80, i32 0, i32 52, !dbg !2222
  %ref96 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr95, i32 0, i32 5, !dbg !2223
  store i8* null, i8** %ref96, align 8, !dbg !2224
  br label %if.end97

if.end97:                                         ; preds = %if.else94, %if.end93
  %81 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2225
  %set98 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %81, i32 0, i32 13, !dbg !2227
  %str99 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set98, i32 0, i32 128, !dbg !2228
  %arrayidx100 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str99, i64 0, i64 4, !dbg !2225
  %82 = load i8*, i8** %arrayidx100, align 8, !dbg !2225
  %tobool101 = icmp ne i8* %82, null, !dbg !2225
  br i1 %tobool101, label %land.lhs.true102, label %if.end109, !dbg !2229

land.lhs.true102:                                 ; preds = %if.end97
  %83 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2230
  %call103 = call i8* @Curl_checkheaders(%struct.connectdata* %83, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0)), !dbg !2232
  %tobool104 = icmp ne i8* %call103, null, !dbg !2232
  br i1 %tobool104, label %if.end109, label %if.then105, !dbg !2233

if.then105:                                       ; preds = %land.lhs.true102
  %84 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2234
  %set106 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %84, i32 0, i32 13, !dbg !2235
  %str107 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set106, i32 0, i32 128, !dbg !2236
  %arrayidx108 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str107, i64 0, i64 4, !dbg !2234
  %85 = load i8*, i8** %arrayidx108, align 8, !dbg !2234
  store i8* %85, i8** %addcookies, align 8, !dbg !2237
  br label %if.end109, !dbg !2238

if.end109:                                        ; preds = %if.then105, %land.lhs.true102, %if.end97
  %86 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2239
  %call110 = call i8* @Curl_checkheaders(%struct.connectdata* %86, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0)), !dbg !2241
  %tobool111 = icmp ne i8* %call110, null, !dbg !2241
  br i1 %tobool111, label %if.else134, label %land.lhs.true112, !dbg !2242

land.lhs.true112:                                 ; preds = %if.end109
  %87 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2243
  %set113 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %87, i32 0, i32 13, !dbg !2244
  %str114 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set113, i32 0, i32 128, !dbg !2245
  %arrayidx115 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str114, i64 0, i64 9, !dbg !2243
  %88 = load i8*, i8** %arrayidx115, align 8, !dbg !2243
  %tobool116 = icmp ne i8* %88, null, !dbg !2243
  br i1 %tobool116, label %if.then117, label %if.else134, !dbg !2246

if.then117:                                       ; preds = %land.lhs.true112
  br label %do.body118, !dbg !2247

do.body118:                                       ; preds = %if.then117
  %89 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2249
  %90 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2249
  %allocptr119 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %90, i32 0, i32 52, !dbg !2249
  %accept_encoding = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr119, i32 0, i32 2, !dbg !2249
  %91 = load i8*, i8** %accept_encoding, align 8, !dbg !2249
  call void %89(i8* %91), !dbg !2249
  %92 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2249
  %allocptr120 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %92, i32 0, i32 52, !dbg !2249
  %accept_encoding121 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr120, i32 0, i32 2, !dbg !2249
  store i8* null, i8** %accept_encoding121, align 8, !dbg !2249
  br label %do.end122, !dbg !2249

do.end122:                                        ; preds = %do.body118
  %93 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2252
  %set123 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %93, i32 0, i32 13, !dbg !2253
  %str124 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set123, i32 0, i32 128, !dbg !2254
  %arrayidx125 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str124, i64 0, i64 9, !dbg !2252
  %94 = load i8*, i8** %arrayidx125, align 8, !dbg !2252
  %call126 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0), i8* %94), !dbg !2255
  %95 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2256
  %allocptr127 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %95, i32 0, i32 52, !dbg !2257
  %accept_encoding128 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr127, i32 0, i32 2, !dbg !2258
  store i8* %call126, i8** %accept_encoding128, align 8, !dbg !2259
  %96 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2260
  %allocptr129 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %96, i32 0, i32 52, !dbg !2262
  %accept_encoding130 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr129, i32 0, i32 2, !dbg !2263
  %97 = load i8*, i8** %accept_encoding130, align 8, !dbg !2263
  %tobool131 = icmp ne i8* %97, null, !dbg !2260
  br i1 %tobool131, label %if.end133, label %if.then132, !dbg !2264

if.then132:                                       ; preds = %do.end122
  store i32 27, i32* %retval, align 4, !dbg !2265
  br label %return, !dbg !2265

if.end133:                                        ; preds = %do.end122
  br label %if.end143, !dbg !2266

if.else134:                                       ; preds = %land.lhs.true112, %if.end109
  br label %do.body135, !dbg !2267

do.body135:                                       ; preds = %if.else134
  %98 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2269
  %99 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2269
  %allocptr136 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %99, i32 0, i32 52, !dbg !2269
  %accept_encoding137 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr136, i32 0, i32 2, !dbg !2269
  %100 = load i8*, i8** %accept_encoding137, align 8, !dbg !2269
  call void %98(i8* %100), !dbg !2269
  %101 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2269
  %allocptr138 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %101, i32 0, i32 52, !dbg !2269
  %accept_encoding139 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr138, i32 0, i32 2, !dbg !2269
  store i8* null, i8** %accept_encoding139, align 8, !dbg !2269
  br label %do.end140, !dbg !2269

do.end140:                                        ; preds = %do.body135
  %102 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2272
  %allocptr141 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %102, i32 0, i32 52, !dbg !2273
  %accept_encoding142 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr141, i32 0, i32 2, !dbg !2274
  store i8* null, i8** %accept_encoding142, align 8, !dbg !2275
  br label %if.end143

if.end143:                                        ; preds = %do.end140, %if.end133
  %103 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2276
  %call144 = call i8* @Curl_checkheaders(%struct.connectdata* %103, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0)), !dbg !2277
  store i8* %call144, i8** %ptr, align 8, !dbg !2278
  %104 = load i8*, i8** %ptr, align 8, !dbg !2279
  %tobool145 = icmp ne i8* %104, null, !dbg !2279
  br i1 %tobool145, label %if.then146, label %if.else149, !dbg !2281

if.then146:                                       ; preds = %if.end143
  %105 = load i8*, i8** %ptr, align 8, !dbg !2282
  %call147 = call zeroext i1 @Curl_compareheader(i8* %105, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0)), !dbg !2284
  %106 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2285
  %req148 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %106, i32 0, i32 12, !dbg !2286
  %upload_chunky = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req148, i32 0, i32 40, !dbg !2287
  %frombool = zext i1 %call147 to i8, !dbg !2288
  store i8 %frombool, i8* %upload_chunky, align 1, !dbg !2288
  br label %if.end183, !dbg !2289

if.else149:                                       ; preds = %if.end143
  %107 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2290
  %handler150 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %107, i32 0, i32 47, !dbg !2293
  %108 = load %struct.Curl_handler*, %struct.Curl_handler** %handler150, align 8, !dbg !2293
  %protocol151 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %108, i32 0, i32 15, !dbg !2294
  %109 = load i32, i32* %protocol151, align 8, !dbg !2294
  %and152 = and i32 %109, 3, !dbg !2295
  %tobool153 = icmp ne i32 %and152, 0, !dbg !2295
  br i1 %tobool153, label %land.lhs.true154, label %if.else174, !dbg !2296

land.lhs.true154:                                 ; preds = %if.else149
  %110 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2297
  %set155 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %110, i32 0, i32 13, !dbg !2298
  %upload156 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set155, i32 0, i32 104, !dbg !2299
  %111 = load i8, i8* %upload156, align 1, !dbg !2299
  %tobool157 = trunc i8 %111 to i1, !dbg !2299
  br i1 %tobool157, label %land.lhs.true158, label %if.else174, !dbg !2300

land.lhs.true158:                                 ; preds = %land.lhs.true154
  %112 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2301
  %state159 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %112, i32 0, i32 17, !dbg !2302
  %infilesize = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state159, i32 0, i32 47, !dbg !2303
  %113 = load i64, i64* %infilesize, align 8, !dbg !2303
  %cmp160 = icmp eq i64 %113, -1, !dbg !2304
  br i1 %cmp160, label %if.then161, label %if.else174, !dbg !2305

if.then161:                                       ; preds = %land.lhs.true158
  %114 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2307
  %bits162 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %114, i32 0, i32 43, !dbg !2310
  %authneg163 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits162, i32 0, i32 16, !dbg !2311
  %115 = load i8, i8* %authneg163, align 1, !dbg !2311
  %tobool164 = trunc i8 %115 to i1, !dbg !2311
  br i1 %tobool164, label %if.then165, label %if.else166, !dbg !2312

if.then165:                                       ; preds = %if.then161
  br label %if.end173, !dbg !2313

if.else166:                                       ; preds = %if.then161
  %116 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2315
  %117 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2317
  %call167 = call zeroext i1 @use_http_1_1plus(%struct.Curl_easy* %116, %struct.connectdata* %117), !dbg !2318
  br i1 %call167, label %if.then168, label %if.else171, !dbg !2319

if.then168:                                       ; preds = %if.else166
  %118 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2320
  %req169 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %118, i32 0, i32 12, !dbg !2322
  %upload_chunky170 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req169, i32 0, i32 40, !dbg !2323
  store i8 1, i8* %upload_chunky170, align 1, !dbg !2324
  br label %if.end172, !dbg !2325

if.else171:                                       ; preds = %if.else166
  %119 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2326
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %119, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30, i32 0, i32 0)), !dbg !2328
  store i32 25, i32* %retval, align 4, !dbg !2329
  br label %return, !dbg !2329

if.end172:                                        ; preds = %if.then168
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then165
  br label %if.end177, !dbg !2330

if.else174:                                       ; preds = %land.lhs.true158, %land.lhs.true154, %if.else149
  %120 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2331
  %req175 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %120, i32 0, i32 12, !dbg !2333
  %upload_chunky176 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req175, i32 0, i32 40, !dbg !2334
  store i8 0, i8* %upload_chunky176, align 1, !dbg !2335
  br label %if.end177

if.end177:                                        ; preds = %if.else174, %if.end173
  %121 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2336
  %req178 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %121, i32 0, i32 12, !dbg !2338
  %upload_chunky179 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req178, i32 0, i32 40, !dbg !2339
  %122 = load i8, i8* %upload_chunky179, align 1, !dbg !2339
  %tobool180 = trunc i8 %122 to i1, !dbg !2339
  br i1 %tobool180, label %if.then181, label %if.end182, !dbg !2340

if.then181:                                       ; preds = %if.end177
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i8** %te, align 8, !dbg !2341
  br label %if.end182, !dbg !2342

if.end182:                                        ; preds = %if.then181, %if.end177
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then146
  br label %do.body184, !dbg !2343

do.body184:                                       ; preds = %if.end183
  %123 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2344
  %124 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2344
  %allocptr185 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %124, i32 0, i32 52, !dbg !2344
  %host186 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr185, i32 0, i32 6, !dbg !2344
  %125 = load i8*, i8** %host186, align 8, !dbg !2344
  call void %123(i8* %125), !dbg !2344
  %126 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2344
  %allocptr187 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %126, i32 0, i32 52, !dbg !2344
  %host188 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr187, i32 0, i32 6, !dbg !2344
  store i8* null, i8** %host188, align 8, !dbg !2344
  br label %do.end189, !dbg !2344

do.end189:                                        ; preds = %do.body184
  %127 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2347
  %call190 = call i8* @Curl_checkheaders(%struct.connectdata* %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)), !dbg !2348
  store i8* %call190, i8** %ptr, align 8, !dbg !2349
  %128 = load i8*, i8** %ptr, align 8, !dbg !2350
  %tobool191 = icmp ne i8* %128, null, !dbg !2350
  br i1 %tobool191, label %land.lhs.true192, label %if.else250, !dbg !2352

land.lhs.true192:                                 ; preds = %do.end189
  %129 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2353
  %state193 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %129, i32 0, i32 17, !dbg !2355
  %this_is_a_follow194 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state193, i32 0, i32 9, !dbg !2356
  %130 = load i8, i8* %this_is_a_follow194, align 8, !dbg !2356
  %tobool195 = trunc i8 %130 to i1, !dbg !2356
  br i1 %tobool195, label %lor.lhs.false196, label %if.then203, !dbg !2357

lor.lhs.false196:                                 ; preds = %land.lhs.true192
  %131 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2358
  %state197 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %131, i32 0, i32 17, !dbg !2358
  %first_host198 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state197, i32 0, i32 10, !dbg !2358
  %132 = load i8*, i8** %first_host198, align 8, !dbg !2358
  %133 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2358
  %host199 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %133, i32 0, i32 12, !dbg !2358
  %name200 = getelementptr inbounds %struct.hostname, %struct.hostname* %host199, i32 0, i32 2, !dbg !2358
  %134 = load i8*, i8** %name200, align 8, !dbg !2358
  %call201 = call i32 @Curl_strcasecompare(i8* %132, i8* %134), !dbg !2358
  %tobool202 = icmp ne i32 %call201, 0, !dbg !2358
  br i1 %tobool202, label %if.then203, label %if.else250, !dbg !2359

if.then203:                                       ; preds = %lor.lhs.false196, %land.lhs.true192
  call void @llvm.dbg.declare(metadata i8** %cookiehost, metadata !2360, metadata !1950), !dbg !2362
  %135 = load i8*, i8** %ptr, align 8, !dbg !2363
  %call204 = call i8* @Curl_copy_header_value(i8* %135), !dbg !2364
  store i8* %call204, i8** %cookiehost, align 8, !dbg !2362
  %136 = load i8*, i8** %cookiehost, align 8, !dbg !2365
  %tobool205 = icmp ne i8* %136, null, !dbg !2365
  br i1 %tobool205, label %if.end207, label %if.then206, !dbg !2367

if.then206:                                       ; preds = %if.then203
  store i32 27, i32* %retval, align 4, !dbg !2368
  br label %return, !dbg !2368

if.end207:                                        ; preds = %if.then203
  %137 = load i8*, i8** %cookiehost, align 8, !dbg !2369
  %138 = load i8, i8* %137, align 1, !dbg !2371
  %tobool208 = icmp ne i8 %138, 0, !dbg !2371
  br i1 %tobool208, label %if.else210, label %if.then209, !dbg !2372

if.then209:                                       ; preds = %if.end207
  %139 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2373
  %140 = load i8*, i8** %cookiehost, align 8, !dbg !2373
  call void %139(i8* %140), !dbg !2373
  br label %if.end234, !dbg !2373

if.else210:                                       ; preds = %if.end207
  call void @llvm.dbg.declare(metadata i32* %startsearch, metadata !2374, metadata !1950), !dbg !2376
  store i32 0, i32* %startsearch, align 4, !dbg !2376
  %141 = load i8*, i8** %cookiehost, align 8, !dbg !2377
  %142 = load i8, i8* %141, align 1, !dbg !2379
  %conv = sext i8 %142 to i32, !dbg !2379
  %cmp211 = icmp eq i32 %conv, 91, !dbg !2380
  br i1 %cmp211, label %if.then213, label %if.else219, !dbg !2381

if.then213:                                       ; preds = %if.else210
  call void @llvm.dbg.declare(metadata i8** %closingbracket, metadata !2382, metadata !1950), !dbg !2384
  %143 = load i8*, i8** %cookiehost, align 8, !dbg !2385
  %144 = load i8*, i8** %cookiehost, align 8, !dbg !2386
  %add.ptr = getelementptr inbounds i8, i8* %144, i64 1, !dbg !2387
  %145 = load i8*, i8** %cookiehost, align 8, !dbg !2388
  %call214 = call i64 @strlen(i8* %145) #8, !dbg !2389
  %sub = sub i64 %call214, 1, !dbg !2390
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %143, i8* %add.ptr, i64 %sub, i32 1, i1 false), !dbg !2391
  %146 = load i8*, i8** %cookiehost, align 8, !dbg !2393
  %call215 = call i8* @strchr(i8* %146, i32 93) #8, !dbg !2394
  store i8* %call215, i8** %closingbracket, align 8, !dbg !2395
  %147 = load i8*, i8** %closingbracket, align 8, !dbg !2396
  %tobool216 = icmp ne i8* %147, null, !dbg !2396
  br i1 %tobool216, label %if.then217, label %if.end218, !dbg !2398

if.then217:                                       ; preds = %if.then213
  %148 = load i8*, i8** %closingbracket, align 8, !dbg !2399
  store i8 0, i8* %148, align 1, !dbg !2400
  br label %if.end218, !dbg !2401

if.end218:                                        ; preds = %if.then217, %if.then213
  br label %if.end225, !dbg !2402

if.else219:                                       ; preds = %if.else210
  call void @llvm.dbg.declare(metadata i8** %colon, metadata !2403, metadata !1950), !dbg !2405
  %149 = load i8*, i8** %cookiehost, align 8, !dbg !2406
  %150 = load i32, i32* %startsearch, align 4, !dbg !2407
  %idx.ext = sext i32 %150 to i64, !dbg !2408
  %add.ptr220 = getelementptr inbounds i8, i8* %149, i64 %idx.ext, !dbg !2408
  %call221 = call i8* @strchr(i8* %add.ptr220, i32 58) #8, !dbg !2409
  store i8* %call221, i8** %colon, align 8, !dbg !2405
  %151 = load i8*, i8** %colon, align 8, !dbg !2410
  %tobool222 = icmp ne i8* %151, null, !dbg !2410
  br i1 %tobool222, label %if.then223, label %if.end224, !dbg !2412

if.then223:                                       ; preds = %if.else219
  %152 = load i8*, i8** %colon, align 8, !dbg !2413
  store i8 0, i8* %152, align 1, !dbg !2414
  br label %if.end224, !dbg !2415

if.end224:                                        ; preds = %if.then223, %if.else219
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.end218
  br label %do.body226, !dbg !2416

do.body226:                                       ; preds = %if.end225
  %153 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2417
  %154 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2417
  %allocptr227 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %154, i32 0, i32 52, !dbg !2417
  %cookiehost228 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr227, i32 0, i32 7, !dbg !2417
  %155 = load i8*, i8** %cookiehost228, align 8, !dbg !2417
  call void %153(i8* %155), !dbg !2417
  %156 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2417
  %allocptr229 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %156, i32 0, i32 52, !dbg !2417
  %cookiehost230 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr229, i32 0, i32 7, !dbg !2417
  store i8* null, i8** %cookiehost230, align 8, !dbg !2417
  br label %do.end231, !dbg !2417

do.end231:                                        ; preds = %do.body226
  %157 = load i8*, i8** %cookiehost, align 8, !dbg !2420
  %158 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2421
  %allocptr232 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %158, i32 0, i32 52, !dbg !2422
  %cookiehost233 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr232, i32 0, i32 7, !dbg !2423
  store i8* %157, i8** %cookiehost233, align 8, !dbg !2424
  br label %if.end234

if.end234:                                        ; preds = %do.end231, %if.then209
  %159 = load i8*, i8** %ptr, align 8, !dbg !2425
  %call235 = call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* %159) #8, !dbg !2427
  %tobool236 = icmp ne i32 %call235, 0, !dbg !2427
  br i1 %tobool236, label %if.then237, label %if.else246, !dbg !2428

if.then237:                                       ; preds = %if.end234
  %160 = load i8*, i8** %ptr, align 8, !dbg !2429
  %call238 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* %160), !dbg !2431
  %161 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2432
  %allocptr239 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %161, i32 0, i32 52, !dbg !2433
  %host240 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr239, i32 0, i32 6, !dbg !2434
  store i8* %call238, i8** %host240, align 8, !dbg !2435
  %162 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2436
  %allocptr241 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %162, i32 0, i32 52, !dbg !2438
  %host242 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr241, i32 0, i32 6, !dbg !2439
  %163 = load i8*, i8** %host242, align 8, !dbg !2439
  %tobool243 = icmp ne i8* %163, null, !dbg !2436
  br i1 %tobool243, label %if.end245, label %if.then244, !dbg !2440

if.then244:                                       ; preds = %if.then237
  store i32 27, i32* %retval, align 4, !dbg !2441
  br label %return, !dbg !2441

if.end245:                                        ; preds = %if.then237
  br label %if.end249, !dbg !2442

if.else246:                                       ; preds = %if.end234
  %164 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2443
  %allocptr247 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %164, i32 0, i32 52, !dbg !2444
  %host248 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr247, i32 0, i32 6, !dbg !2445
  store i8* null, i8** %host248, align 8, !dbg !2446
  br label %if.end249

if.end249:                                        ; preds = %if.else246, %if.end245
  br label %if.end300, !dbg !2447

if.else250:                                       ; preds = %lor.lhs.false196, %do.end189
  %165 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2448
  %given = getelementptr inbounds %struct.connectdata, %struct.connectdata* %165, i32 0, i32 48, !dbg !2451
  %166 = load %struct.Curl_handler*, %struct.Curl_handler** %given, align 8, !dbg !2451
  %protocol251 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %166, i32 0, i32 15, !dbg !2452
  %167 = load i32, i32* %protocol251, align 8, !dbg !2452
  %and252 = and i32 %167, 2, !dbg !2453
  %tobool253 = icmp ne i32 %and252, 0, !dbg !2453
  br i1 %tobool253, label %land.lhs.true254, label %lor.lhs.false258, !dbg !2454

land.lhs.true254:                                 ; preds = %if.else250
  %168 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2455
  %remote_port255 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %168, i32 0, i32 18, !dbg !2456
  %169 = load i32, i32* %remote_port255, align 8, !dbg !2456
  %cmp256 = icmp eq i32 %169, 443, !dbg !2457
  br i1 %cmp256, label %if.then267, label %lor.lhs.false258, !dbg !2458

lor.lhs.false258:                                 ; preds = %land.lhs.true254, %if.else250
  %170 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2459
  %given259 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %170, i32 0, i32 48, !dbg !2460
  %171 = load %struct.Curl_handler*, %struct.Curl_handler** %given259, align 8, !dbg !2460
  %protocol260 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %171, i32 0, i32 15, !dbg !2461
  %172 = load i32, i32* %protocol260, align 8, !dbg !2461
  %and261 = and i32 %172, 1, !dbg !2462
  %tobool262 = icmp ne i32 %and261, 0, !dbg !2462
  br i1 %tobool262, label %land.lhs.true263, label %if.else279, !dbg !2463

land.lhs.true263:                                 ; preds = %lor.lhs.false258
  %173 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2464
  %remote_port264 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %173, i32 0, i32 18, !dbg !2465
  %174 = load i32, i32* %remote_port264, align 8, !dbg !2465
  %cmp265 = icmp eq i32 %174, 80, !dbg !2466
  br i1 %cmp265, label %if.then267, label %if.else279, !dbg !2467

if.then267:                                       ; preds = %land.lhs.true263, %land.lhs.true254
  %175 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2469
  %bits268 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %175, i32 0, i32 43, !dbg !2470
  %ipv6_ip = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits268, i32 0, i32 9, !dbg !2471
  %176 = load i8, i8* %ipv6_ip, align 1, !dbg !2471
  %tobool269 = trunc i8 %176 to i1, !dbg !2471
  %cond = select i1 %tobool269, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !2469
  %177 = load i8*, i8** %host, align 8, !dbg !2472
  %178 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2473
  %bits271 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %178, i32 0, i32 43, !dbg !2474
  %ipv6_ip272 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits271, i32 0, i32 9, !dbg !2475
  %179 = load i8, i8* %ipv6_ip272, align 1, !dbg !2475
  %tobool273 = trunc i8 %179 to i1, !dbg !2475
  %cond275 = select i1 %tobool273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !2473
  %call276 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i8* %cond, i8* %177, i8* %cond275), !dbg !2476
  %180 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2477
  %allocptr277 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %180, i32 0, i32 52, !dbg !2478
  %host278 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr277, i32 0, i32 6, !dbg !2479
  store i8* %call276, i8** %host278, align 8, !dbg !2480
  br label %if.end294, !dbg !2477

if.else279:                                       ; preds = %land.lhs.true263, %lor.lhs.false258
  %181 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2481
  %bits280 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %181, i32 0, i32 43, !dbg !2482
  %ipv6_ip281 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits280, i32 0, i32 9, !dbg !2483
  %182 = load i8, i8* %ipv6_ip281, align 1, !dbg !2483
  %tobool282 = trunc i8 %182 to i1, !dbg !2483
  %cond284 = select i1 %tobool282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !2481
  %183 = load i8*, i8** %host, align 8, !dbg !2484
  %184 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2485
  %bits285 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %184, i32 0, i32 43, !dbg !2486
  %ipv6_ip286 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits285, i32 0, i32 9, !dbg !2487
  %185 = load i8, i8* %ipv6_ip286, align 1, !dbg !2487
  %tobool287 = trunc i8 %185 to i1, !dbg !2487
  %cond289 = select i1 %tobool287, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !2485
  %186 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2488
  %remote_port290 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %186, i32 0, i32 18, !dbg !2489
  %187 = load i32, i32* %remote_port290, align 8, !dbg !2489
  %call291 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), i8* %cond284, i8* %183, i8* %cond289, i32 %187), !dbg !2490
  %188 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2491
  %allocptr292 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %188, i32 0, i32 52, !dbg !2492
  %host293 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr292, i32 0, i32 6, !dbg !2493
  store i8* %call291, i8** %host293, align 8, !dbg !2494
  br label %if.end294

if.end294:                                        ; preds = %if.else279, %if.then267
  %189 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2495
  %allocptr295 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %189, i32 0, i32 52, !dbg !2497
  %host296 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr295, i32 0, i32 6, !dbg !2498
  %190 = load i8*, i8** %host296, align 8, !dbg !2498
  %tobool297 = icmp ne i8* %190, null, !dbg !2495
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !2499

if.then298:                                       ; preds = %if.end294
  store i32 27, i32* %retval, align 4, !dbg !2500
  br label %return, !dbg !2500

if.end299:                                        ; preds = %if.end294
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.end249
  %191 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2501
  %bits301 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %191, i32 0, i32 43, !dbg !2503
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits301, i32 0, i32 5, !dbg !2504
  %192 = load i8, i8* %httpproxy, align 1, !dbg !2504
  %tobool302 = trunc i8 %192 to i1, !dbg !2504
  br i1 %tobool302, label %land.lhs.true304, label %if.end428, !dbg !2505

land.lhs.true304:                                 ; preds = %if.end300
  %193 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2506
  %bits305 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %193, i32 0, i32 43, !dbg !2508
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits305, i32 0, i32 15, !dbg !2509
  %194 = load i8, i8* %tunnel_proxy, align 1, !dbg !2509
  %tobool306 = trunc i8 %194 to i1, !dbg !2509
  br i1 %tobool306, label %if.end428, label %if.then307, !dbg !2510

if.then307:                                       ; preds = %land.lhs.true304
  %195 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2511
  %host308 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %195, i32 0, i32 12, !dbg !2514
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %host308, i32 0, i32 3, !dbg !2515
  %196 = load i8*, i8** %dispname, align 8, !dbg !2515
  %197 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2516
  %host309 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %197, i32 0, i32 12, !dbg !2517
  %name310 = getelementptr inbounds %struct.hostname, %struct.hostname* %host309, i32 0, i32 2, !dbg !2518
  %198 = load i8*, i8** %name310, align 8, !dbg !2518
  %cmp311 = icmp ne i8* %196, %198, !dbg !2519
  br i1 %cmp311, label %if.then313, label %if.end370, !dbg !2520

if.then313:                                       ; preds = %if.then307
  call void @llvm.dbg.declare(metadata i8** %url, metadata !2521, metadata !1950), !dbg !2523
  %199 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2524
  %change314 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %199, i32 0, i32 14, !dbg !2525
  %url315 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change314, i32 0, i32 0, !dbg !2526
  %200 = load i8*, i8** %url315, align 8, !dbg !2526
  store i8* %200, i8** %url, align 8, !dbg !2523
  %201 = load i8*, i8** %url, align 8, !dbg !2527
  %202 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2528
  %host316 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %202, i32 0, i32 12, !dbg !2529
  %dispname317 = getelementptr inbounds %struct.hostname, %struct.hostname* %host316, i32 0, i32 3, !dbg !2530
  %203 = load i8*, i8** %dispname317, align 8, !dbg !2530
  %call318 = call i8* @strstr(i8* %201, i8* %203) #8, !dbg !2531
  store i8* %call318, i8** %ptr, align 8, !dbg !2532
  %204 = load i8*, i8** %ptr, align 8, !dbg !2533
  %tobool319 = icmp ne i8* %204, null, !dbg !2533
  br i1 %tobool319, label %if.then320, label %if.end369, !dbg !2535

if.then320:                                       ; preds = %if.then313
  call void @llvm.dbg.declare(metadata i64* %currlen, metadata !2536, metadata !1950), !dbg !2538
  %205 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2539
  %host321 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %205, i32 0, i32 12, !dbg !2540
  %dispname322 = getelementptr inbounds %struct.hostname, %struct.hostname* %host321, i32 0, i32 3, !dbg !2541
  %206 = load i8*, i8** %dispname322, align 8, !dbg !2541
  %call323 = call i64 @strlen(i8* %206) #8, !dbg !2542
  store i64 %call323, i64* %currlen, align 8, !dbg !2538
  call void @llvm.dbg.declare(metadata i64* %newlen, metadata !2543, metadata !1950), !dbg !2544
  %207 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2545
  %host324 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %207, i32 0, i32 12, !dbg !2546
  %name325 = getelementptr inbounds %struct.hostname, %struct.hostname* %host324, i32 0, i32 2, !dbg !2547
  %208 = load i8*, i8** %name325, align 8, !dbg !2547
  %call326 = call i64 @strlen(i8* %208) #8, !dbg !2548
  store i64 %call326, i64* %newlen, align 8, !dbg !2544
  call void @llvm.dbg.declare(metadata i64* %urllen, metadata !2549, metadata !1950), !dbg !2550
  %209 = load i8*, i8** %url, align 8, !dbg !2551
  %call327 = call i64 @strlen(i8* %209) #8, !dbg !2552
  store i64 %call327, i64* %urllen, align 8, !dbg !2550
  call void @llvm.dbg.declare(metadata i8** %newurl, metadata !2553, metadata !1950), !dbg !2554
  %210 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !2555
  %211 = load i64, i64* %urllen, align 8, !dbg !2555
  %212 = load i64, i64* %newlen, align 8, !dbg !2555
  %add = add i64 %211, %212, !dbg !2555
  %213 = load i64, i64* %currlen, align 8, !dbg !2555
  %sub328 = sub i64 %add, %213, !dbg !2555
  %add329 = add i64 %sub328, 1, !dbg !2555
  %call330 = call i8* %210(i64 %add329), !dbg !2555
  store i8* %call330, i8** %newurl, align 8, !dbg !2556
  %214 = load i8*, i8** %newurl, align 8, !dbg !2557
  %tobool331 = icmp ne i8* %214, null, !dbg !2557
  br i1 %tobool331, label %if.then332, label %if.else367, !dbg !2559

if.then332:                                       ; preds = %if.then320
  %215 = load i8*, i8** %newurl, align 8, !dbg !2560
  %216 = load i8*, i8** %url, align 8, !dbg !2562
  %217 = load i8*, i8** %ptr, align 8, !dbg !2563
  %218 = load i8*, i8** %url, align 8, !dbg !2564
  %sub.ptr.lhs.cast = ptrtoint i8* %217 to i64, !dbg !2565
  %sub.ptr.rhs.cast = ptrtoint i8* %218 to i64, !dbg !2565
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* %216, i64 %sub.ptr.sub, i32 1, i1 false), !dbg !2566
  %219 = load i8*, i8** %newurl, align 8, !dbg !2567
  %220 = load i8*, i8** %ptr, align 8, !dbg !2568
  %221 = load i8*, i8** %url, align 8, !dbg !2569
  %sub.ptr.lhs.cast333 = ptrtoint i8* %220 to i64, !dbg !2570
  %sub.ptr.rhs.cast334 = ptrtoint i8* %221 to i64, !dbg !2570
  %sub.ptr.sub335 = sub i64 %sub.ptr.lhs.cast333, %sub.ptr.rhs.cast334, !dbg !2570
  %add.ptr336 = getelementptr inbounds i8, i8* %219, i64 %sub.ptr.sub335, !dbg !2571
  %222 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2572
  %host337 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %222, i32 0, i32 12, !dbg !2573
  %name338 = getelementptr inbounds %struct.hostname, %struct.hostname* %host337, i32 0, i32 2, !dbg !2574
  %223 = load i8*, i8** %name338, align 8, !dbg !2574
  %224 = load i64, i64* %newlen, align 8, !dbg !2575
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr336, i8* %223, i64 %224, i32 1, i1 false), !dbg !2576
  %225 = load i8*, i8** %newurl, align 8, !dbg !2577
  %226 = load i64, i64* %newlen, align 8, !dbg !2578
  %add.ptr339 = getelementptr inbounds i8, i8* %225, i64 %226, !dbg !2579
  %227 = load i8*, i8** %ptr, align 8, !dbg !2580
  %228 = load i8*, i8** %url, align 8, !dbg !2581
  %sub.ptr.lhs.cast340 = ptrtoint i8* %227 to i64, !dbg !2582
  %sub.ptr.rhs.cast341 = ptrtoint i8* %228 to i64, !dbg !2582
  %sub.ptr.sub342 = sub i64 %sub.ptr.lhs.cast340, %sub.ptr.rhs.cast341, !dbg !2582
  %add.ptr343 = getelementptr inbounds i8, i8* %add.ptr339, i64 %sub.ptr.sub342, !dbg !2583
  %229 = load i8*, i8** %ptr, align 8, !dbg !2584
  %230 = load i64, i64* %currlen, align 8, !dbg !2585
  %add.ptr344 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !2586
  %231 = load i64, i64* %urllen, align 8, !dbg !2587
  %232 = load i8*, i8** %ptr, align 8, !dbg !2588
  %233 = load i8*, i8** %url, align 8, !dbg !2589
  %sub.ptr.lhs.cast345 = ptrtoint i8* %232 to i64, !dbg !2590
  %sub.ptr.rhs.cast346 = ptrtoint i8* %233 to i64, !dbg !2590
  %sub.ptr.sub347 = sub i64 %sub.ptr.lhs.cast345, %sub.ptr.rhs.cast346, !dbg !2590
  %sub348 = sub i64 %231, %sub.ptr.sub347, !dbg !2591
  %234 = load i64, i64* %currlen, align 8, !dbg !2592
  %sub349 = sub i64 %sub348, %234, !dbg !2593
  %add350 = add i64 %sub349, 1, !dbg !2594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr343, i8* %add.ptr344, i64 %add350, i32 1, i1 false), !dbg !2595
  %235 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2596
  %change351 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %235, i32 0, i32 14, !dbg !2598
  %url_alloc = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change351, i32 0, i32 1, !dbg !2599
  %236 = load i8, i8* %url_alloc, align 8, !dbg !2599
  %tobool352 = trunc i8 %236 to i1, !dbg !2599
  br i1 %tobool352, label %if.then353, label %if.end362, !dbg !2600

if.then353:                                       ; preds = %if.then332
  br label %do.body354, !dbg !2601

do.body354:                                       ; preds = %if.then353
  %237 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2603
  %238 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2603
  %change355 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %238, i32 0, i32 14, !dbg !2603
  %url356 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change355, i32 0, i32 0, !dbg !2603
  %239 = load i8*, i8** %url356, align 8, !dbg !2603
  call void %237(i8* %239), !dbg !2603
  %240 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2603
  %change357 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %240, i32 0, i32 14, !dbg !2603
  %url358 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change357, i32 0, i32 0, !dbg !2603
  store i8* null, i8** %url358, align 8, !dbg !2603
  br label %do.end359, !dbg !2603

do.end359:                                        ; preds = %do.body354
  %241 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2606
  %change360 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %241, i32 0, i32 14, !dbg !2607
  %url_alloc361 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change360, i32 0, i32 1, !dbg !2608
  store i8 0, i8* %url_alloc361, align 8, !dbg !2609
  br label %if.end362, !dbg !2610

if.end362:                                        ; preds = %do.end359, %if.then332
  %242 = load i8*, i8** %newurl, align 8, !dbg !2611
  %243 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2612
  %change363 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %243, i32 0, i32 14, !dbg !2613
  %url364 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change363, i32 0, i32 0, !dbg !2614
  store i8* %242, i8** %url364, align 8, !dbg !2615
  %244 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2616
  %change365 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %244, i32 0, i32 14, !dbg !2617
  %url_alloc366 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change365, i32 0, i32 1, !dbg !2618
  store i8 1, i8* %url_alloc366, align 8, !dbg !2619
  br label %if.end368, !dbg !2620

if.else367:                                       ; preds = %if.then320
  store i32 27, i32* %retval, align 4, !dbg !2621
  br label %return, !dbg !2621

if.end368:                                        ; preds = %if.end362
  br label %if.end369, !dbg !2622

if.end369:                                        ; preds = %if.end368, %if.then313
  br label %if.end370, !dbg !2623

if.end370:                                        ; preds = %if.end369, %if.then307
  %245 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2624
  %change371 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %245, i32 0, i32 14, !dbg !2625
  %url372 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change371, i32 0, i32 0, !dbg !2626
  %246 = load i8*, i8** %url372, align 8, !dbg !2626
  store i8* %246, i8** %ppath, align 8, !dbg !2627
  %247 = load i8*, i8** %ppath, align 8, !dbg !2628
  %call373 = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), i8* %247, i64 6), !dbg !2628
  %tobool374 = icmp ne i32 %call373, 0, !dbg !2628
  br i1 %tobool374, label %if.then375, label %if.end427, !dbg !2630

if.then375:                                       ; preds = %if.end370
  %248 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2631
  %set376 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %248, i32 0, i32 13, !dbg !2634
  %proxy_transfer_mode = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set376, i32 0, i32 127, !dbg !2635
  %249 = load i8, i8* %proxy_transfer_mode, align 8, !dbg !2635
  %tobool377 = trunc i8 %249 to i1, !dbg !2635
  br i1 %tobool377, label %if.then378, label %if.end418, !dbg !2636

if.then378:                                       ; preds = %if.then375
  call void @llvm.dbg.declare(metadata i8** %type, metadata !2637, metadata !1950), !dbg !2639
  %250 = load i8*, i8** %ppath, align 8, !dbg !2640
  %call379 = call i8* @strstr(i8* %250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0)) #8, !dbg !2641
  store i8* %call379, i8** %type, align 8, !dbg !2639
  %251 = load i8*, i8** %type, align 8, !dbg !2642
  %tobool380 = icmp ne i8* %251, null, !dbg !2642
  br i1 %tobool380, label %land.lhs.true381, label %if.end397, !dbg !2644

land.lhs.true381:                                 ; preds = %if.then378
  %252 = load i8*, i8** %type, align 8, !dbg !2645
  %arrayidx382 = getelementptr inbounds i8, i8* %252, i64 6, !dbg !2645
  %253 = load i8, i8* %arrayidx382, align 1, !dbg !2645
  %conv383 = sext i8 %253 to i32, !dbg !2645
  %tobool384 = icmp ne i32 %conv383, 0, !dbg !2645
  br i1 %tobool384, label %land.lhs.true385, label %if.end397, !dbg !2647

land.lhs.true385:                                 ; preds = %land.lhs.true381
  %254 = load i8*, i8** %type, align 8, !dbg !2648
  %arrayidx386 = getelementptr inbounds i8, i8* %254, i64 7, !dbg !2648
  %255 = load i8, i8* %arrayidx386, align 1, !dbg !2648
  %conv387 = sext i8 %255 to i32, !dbg !2648
  %cmp388 = icmp eq i32 %conv387, 0, !dbg !2650
  br i1 %cmp388, label %if.then390, label %if.end397, !dbg !2651

if.then390:                                       ; preds = %land.lhs.true385
  %256 = load i8*, i8** %type, align 8, !dbg !2652
  %arrayidx391 = getelementptr inbounds i8, i8* %256, i64 6, !dbg !2652
  %257 = load i8, i8* %arrayidx391, align 1, !dbg !2652
  %call392 = call signext i8 @Curl_raw_toupper(i8 signext %257), !dbg !2654
  %conv393 = sext i8 %call392 to i32, !dbg !2654
  switch i32 %conv393, label %sw.default395 [
    i32 65, label %sw.bb394
    i32 68, label %sw.bb394
    i32 73, label %sw.bb394
  ], !dbg !2655

sw.bb394:                                         ; preds = %if.then390, %if.then390, %if.then390
  br label %sw.epilog396, !dbg !2656

sw.default395:                                    ; preds = %if.then390
  store i8* null, i8** %type, align 8, !dbg !2658
  br label %sw.epilog396, !dbg !2659

sw.epilog396:                                     ; preds = %sw.default395, %sw.bb394
  br label %if.end397, !dbg !2660

if.end397:                                        ; preds = %sw.epilog396, %land.lhs.true385, %land.lhs.true381, %if.then378
  %258 = load i8*, i8** %type, align 8, !dbg !2661
  %tobool398 = icmp ne i8* %258, null, !dbg !2661
  br i1 %tobool398, label %if.end417, label %if.then399, !dbg !2663

if.then399:                                       ; preds = %if.end397
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2664, metadata !1950), !dbg !2666
  %arraydecay = getelementptr inbounds [9 x i8], [9 x i8]* %ftp_typecode, i32 0, i32 0, !dbg !2667
  store i8* %arraydecay, i8** %p, align 8, !dbg !2666
  %259 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2668
  %state400 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %259, i32 0, i32 17, !dbg !2670
  %path401 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state400, i32 0, i32 38, !dbg !2671
  %260 = load i8*, i8** %path401, align 8, !dbg !2671
  %261 = load i8, i8* %260, align 1, !dbg !2672
  %tobool402 = icmp ne i8 %261, 0, !dbg !2672
  br i1 %tobool402, label %if.end411, label %land.lhs.true403, !dbg !2673

land.lhs.true403:                                 ; preds = %if.then399
  %262 = load i8*, i8** %ppath, align 8, !dbg !2674
  %call404 = call i64 @strlen(i8* %262) #8, !dbg !2676
  %sub405 = sub i64 %call404, 1, !dbg !2677
  %263 = load i8*, i8** %ppath, align 8, !dbg !2678
  %arrayidx406 = getelementptr inbounds i8, i8* %263, i64 %sub405, !dbg !2678
  %264 = load i8, i8* %arrayidx406, align 1, !dbg !2678
  %conv407 = sext i8 %264 to i32, !dbg !2678
  %cmp408 = icmp ne i32 %conv407, 47, !dbg !2679
  br i1 %cmp408, label %if.then410, label %if.end411, !dbg !2680

if.then410:                                       ; preds = %land.lhs.true403
  %265 = load i8*, i8** %p, align 8, !dbg !2681
  %incdec.ptr = getelementptr inbounds i8, i8* %265, i32 1, !dbg !2681
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2681
  store i8 47, i8* %265, align 1, !dbg !2683
  br label %if.end411, !dbg !2684

if.end411:                                        ; preds = %if.then410, %land.lhs.true403, %if.then399
  %266 = load i8*, i8** %p, align 8, !dbg !2685
  %267 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2686
  %set412 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %267, i32 0, i32 13, !dbg !2687
  %prefer_ascii = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set412, i32 0, i32 90, !dbg !2688
  %268 = load i8, i8* %prefer_ascii, align 1, !dbg !2688
  %tobool413 = trunc i8 %268 to i1, !dbg !2688
  %cond415 = select i1 %tobool413, i32 97, i32 105, !dbg !2686
  %call416 = call i32 (i8*, i64, i8*, ...) @curl_msnprintf(i8* %266, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i32 %cond415), !dbg !2689
  br label %if.end417, !dbg !2690

if.end417:                                        ; preds = %if.end411, %if.end397
  br label %if.end418, !dbg !2691

if.end418:                                        ; preds = %if.end417, %if.then375
  %269 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2692
  %bits419 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %269, i32 0, i32 43, !dbg !2694
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits419, i32 0, i32 7, !dbg !2695
  %270 = load i8, i8* %user_passwd, align 1, !dbg !2695
  %tobool420 = trunc i8 %270 to i1, !dbg !2695
  br i1 %tobool420, label %land.lhs.true422, label %if.end426, !dbg !2696

land.lhs.true422:                                 ; preds = %if.end418
  %271 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2697
  %bits423 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %271, i32 0, i32 43, !dbg !2699
  %userpwd_in_url = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits423, i32 0, i32 22, !dbg !2700
  %272 = load i8, i8* %userpwd_in_url, align 1, !dbg !2700
  %tobool424 = trunc i8 %272 to i1, !dbg !2700
  br i1 %tobool424, label %if.end426, label %if.then425, !dbg !2701

if.then425:                                       ; preds = %land.lhs.true422
  store i8 1, i8* %paste_ftp_userpwd, align 1, !dbg !2702
  br label %if.end426, !dbg !2703

if.end426:                                        ; preds = %if.then425, %land.lhs.true422, %if.end418
  br label %if.end427, !dbg !2704

if.end427:                                        ; preds = %if.end426, %if.end370
  br label %if.end428, !dbg !2705

if.end428:                                        ; preds = %if.end427, %land.lhs.true304, %if.end300
  %273 = load i32, i32* %httpreq, align 4, !dbg !2706
  %cmp429 = icmp eq i32 3, %273, !dbg !2708
  br i1 %cmp429, label %if.then431, label %if.end439, !dbg !2709

if.then431:                                       ; preds = %if.end428
  %274 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2710
  %275 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !2712
  %sendit = getelementptr inbounds %struct.HTTP, %struct.HTTP* %275, i32 0, i32 0, !dbg !2713
  %276 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2714
  %set432 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %276, i32 0, i32 13, !dbg !2715
  %httppost = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set432, i32 0, i32 56, !dbg !2716
  %277 = load %struct.curl_httppost*, %struct.curl_httppost** %httppost, align 8, !dbg !2716
  %278 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2717
  %call433 = call i8* @Curl_checkheaders(%struct.connectdata* %278, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0)), !dbg !2718
  %279 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !2719
  %postsize434 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %279, i32 0, i32 1, !dbg !2720
  %call435 = call i32 @Curl_getformdata(%struct.Curl_easy* %274, %struct.FormData** %sendit, %struct.curl_httppost* %277, i8* %call433, i64* %postsize434), !dbg !2721
  store i32 %call435, i32* %result, align 4, !dbg !2722
  %280 = load i32, i32* %result, align 4, !dbg !2723
  %tobool436 = icmp ne i32 %280, 0, !dbg !2723
  br i1 %tobool436, label %if.then437, label %if.end438, !dbg !2725

if.then437:                                       ; preds = %if.then431
  %281 = load i32, i32* %result, align 4, !dbg !2726
  store i32 %281, i32* %retval, align 4, !dbg !2727
  br label %return, !dbg !2727

if.end438:                                        ; preds = %if.then431
  br label %if.end439, !dbg !2728

if.end439:                                        ; preds = %if.end438, %if.end428
  %282 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2729
  %call440 = call i8* @Curl_checkheaders(%struct.connectdata* %282, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0)), !dbg !2730
  %tobool441 = icmp ne i8* %call440, null, !dbg !2730
  %cond442 = select i1 %tobool441, i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), !dbg !2730
  %283 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !2731
  %p_accept = getelementptr inbounds %struct.HTTP, %struct.HTTP* %283, i32 0, i32 4, !dbg !2732
  store i8* %cond442, i8** %p_accept, align 8, !dbg !2733
  %284 = load i32, i32* %httpreq, align 4, !dbg !2734
  %cmp443 = icmp eq i32 2, %284, !dbg !2736
  br i1 %cmp443, label %land.lhs.true451, label %lor.lhs.false445, !dbg !2737

lor.lhs.false445:                                 ; preds = %if.end439
  %285 = load i32, i32* %httpreq, align 4, !dbg !2738
  %cmp446 = icmp eq i32 3, %285, !dbg !2739
  br i1 %cmp446, label %land.lhs.true451, label %lor.lhs.false448, !dbg !2740

lor.lhs.false448:                                 ; preds = %lor.lhs.false445
  %286 = load i32, i32* %httpreq, align 4, !dbg !2741
  %cmp449 = icmp eq i32 4, %286, !dbg !2742
  br i1 %cmp449, label %land.lhs.true451, label %if.end532, !dbg !2743

land.lhs.true451:                                 ; preds = %lor.lhs.false448, %lor.lhs.false445, %if.end439
  %287 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2744
  %state452 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %287, i32 0, i32 17, !dbg !2745
  %resume_from = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state452, i32 0, i32 43, !dbg !2746
  %288 = load i64, i64* %resume_from, align 8, !dbg !2746
  %tobool453 = icmp ne i64 %288, 0, !dbg !2744
  br i1 %tobool453, label %if.then454, label %if.end532, !dbg !2747

if.then454:                                       ; preds = %land.lhs.true451
  %289 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2748
  %state455 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %289, i32 0, i32 17, !dbg !2751
  %resume_from456 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state455, i32 0, i32 43, !dbg !2752
  %290 = load i64, i64* %resume_from456, align 8, !dbg !2752
  %cmp457 = icmp slt i64 %290, 0, !dbg !2753
  br i1 %cmp457, label %if.then459, label %if.end462, !dbg !2754

if.then459:                                       ; preds = %if.then454
  %291 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2755
  %state460 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %291, i32 0, i32 17, !dbg !2757
  %resume_from461 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state460, i32 0, i32 43, !dbg !2758
  store i64 0, i64* %resume_from461, align 8, !dbg !2759
  br label %if.end462, !dbg !2760

if.end462:                                        ; preds = %if.then459, %if.then454
  %292 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2761
  %state463 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %292, i32 0, i32 17, !dbg !2763
  %resume_from464 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state463, i32 0, i32 43, !dbg !2764
  %293 = load i64, i64* %resume_from464, align 8, !dbg !2764
  %tobool465 = icmp ne i64 %293, 0, !dbg !2761
  br i1 %tobool465, label %land.lhs.true466, label %if.end531, !dbg !2765

land.lhs.true466:                                 ; preds = %if.end462
  %294 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2766
  %state467 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %294, i32 0, i32 17, !dbg !2768
  %this_is_a_follow468 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state467, i32 0, i32 9, !dbg !2769
  %295 = load i8, i8* %this_is_a_follow468, align 8, !dbg !2769
  %tobool469 = trunc i8 %295 to i1, !dbg !2769
  br i1 %tobool469, label %if.end531, label %if.then470, !dbg !2770

if.then470:                                       ; preds = %land.lhs.true466
  %296 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2771
  %seek_func = getelementptr inbounds %struct.connectdata, %struct.connectdata* %296, i32 0, i32 60, !dbg !2774
  %297 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** %seek_func, align 8, !dbg !2774
  %tobool471 = icmp ne i32 (i8*, i64, i32)* %297, null, !dbg !2771
  br i1 %tobool471, label %if.then472, label %if.end477, !dbg !2775

if.then472:                                       ; preds = %if.then470
  %298 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2776
  %seek_func473 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %298, i32 0, i32 60, !dbg !2778
  %299 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** %seek_func473, align 8, !dbg !2778
  %300 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2779
  %seek_client = getelementptr inbounds %struct.connectdata, %struct.connectdata* %300, i32 0, i32 61, !dbg !2780
  %301 = load i8*, i8** %seek_client, align 8, !dbg !2780
  %302 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2781
  %state474 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %302, i32 0, i32 17, !dbg !2782
  %resume_from475 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state474, i32 0, i32 43, !dbg !2783
  %303 = load i64, i64* %resume_from475, align 8, !dbg !2783
  %call476 = call i32 %299(i8* %301, i64 %303, i32 0), !dbg !2776
  store i32 %call476, i32* %seekerr, align 4, !dbg !2784
  br label %if.end477, !dbg !2785

if.end477:                                        ; preds = %if.then472, %if.then470
  %304 = load i32, i32* %seekerr, align 4, !dbg !2786
  %cmp478 = icmp ne i32 %304, 0, !dbg !2788
  br i1 %cmp478, label %if.then480, label %if.end513, !dbg !2789

if.then480:                                       ; preds = %if.end477
  call void @llvm.dbg.declare(metadata i64* %passed, metadata !2790, metadata !1950), !dbg !2792
  store i64 0, i64* %passed, align 8, !dbg !2792
  %305 = load i32, i32* %seekerr, align 4, !dbg !2793
  %cmp481 = icmp ne i32 %305, 2, !dbg !2795
  br i1 %cmp481, label %if.then483, label %if.end484, !dbg !2796

if.then483:                                       ; preds = %if.then480
  %306 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2797
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %306, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0)), !dbg !2799
  store i32 26, i32* %retval, align 4, !dbg !2800
  br label %return, !dbg !2800

if.end484:                                        ; preds = %if.then480
  br label %do.body485, !dbg !2801

do.body485:                                       ; preds = %do.cond, %if.end484
  call void @llvm.dbg.declare(metadata i64* %readthisamountnow, metadata !2802, metadata !1950), !dbg !2804
  %307 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2805
  %state486 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %307, i32 0, i32 17, !dbg !2806
  %resume_from487 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state486, i32 0, i32 43, !dbg !2807
  %308 = load i64, i64* %resume_from487, align 8, !dbg !2807
  %309 = load i64, i64* %passed, align 8, !dbg !2808
  %sub488 = sub nsw i64 %308, %309, !dbg !2809
  %cmp489 = icmp sgt i64 %sub488, 16384, !dbg !2810
  br i1 %cmp489, label %cond.true, label %cond.false, !dbg !2811

cond.true:                                        ; preds = %do.body485
  br label %cond.end, !dbg !2812

cond.false:                                       ; preds = %do.body485
  %310 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2814
  %state491 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %310, i32 0, i32 17, !dbg !2815
  %resume_from492 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state491, i32 0, i32 43, !dbg !2816
  %311 = load i64, i64* %resume_from492, align 8, !dbg !2816
  %312 = load i64, i64* %passed, align 8, !dbg !2817
  %sub493 = sub nsw i64 %311, %312, !dbg !2818
  %call494 = call i64 @curlx_sotouz(i64 %sub493), !dbg !2819
  br label %cond.end, !dbg !2820

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond495 = phi i64 [ 16384, %cond.true ], [ %call494, %cond.false ], !dbg !2822
  store i64 %cond495, i64* %readthisamountnow, align 8, !dbg !2804
  call void @llvm.dbg.declare(metadata i64* %actuallyread, metadata !2824, metadata !1950), !dbg !2825
  %313 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2826
  %state496 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %313, i32 0, i32 17, !dbg !2827
  %fread_func = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state496, i32 0, i32 50, !dbg !2828
  %314 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fread_func, align 8, !dbg !2828
  %315 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2829
  %state497 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %315, i32 0, i32 17, !dbg !2830
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state497, i32 0, i32 6, !dbg !2831
  %316 = load i8*, i8** %buffer, align 8, !dbg !2831
  %317 = load i64, i64* %readthisamountnow, align 8, !dbg !2832
  %318 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2833
  %state498 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %318, i32 0, i32 17, !dbg !2834
  %in = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state498, i32 0, i32 51, !dbg !2835
  %319 = load i8*, i8** %in, align 8, !dbg !2835
  %call499 = call i64 %314(i8* %316, i64 1, i64 %317, i8* %319), !dbg !2826
  store i64 %call499, i64* %actuallyread, align 8, !dbg !2825
  %320 = load i64, i64* %actuallyread, align 8, !dbg !2836
  %321 = load i64, i64* %passed, align 8, !dbg !2837
  %add500 = add i64 %321, %320, !dbg !2837
  store i64 %add500, i64* %passed, align 8, !dbg !2837
  %322 = load i64, i64* %actuallyread, align 8, !dbg !2838
  %cmp501 = icmp eq i64 %322, 0, !dbg !2840
  br i1 %cmp501, label %if.then506, label %lor.lhs.false503, !dbg !2841

lor.lhs.false503:                                 ; preds = %cond.end
  %323 = load i64, i64* %actuallyread, align 8, !dbg !2842
  %324 = load i64, i64* %readthisamountnow, align 8, !dbg !2844
  %cmp504 = icmp ugt i64 %323, %324, !dbg !2845
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !2846

if.then506:                                       ; preds = %lor.lhs.false503, %cond.end
  %325 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2847
  %326 = load i64, i64* %passed, align 8, !dbg !2849
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %325, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i32 0, i32 0), i64 %326), !dbg !2850
  store i32 26, i32* %retval, align 4, !dbg !2851
  br label %return, !dbg !2851

if.end507:                                        ; preds = %lor.lhs.false503
  br label %do.cond, !dbg !2852

do.cond:                                          ; preds = %if.end507
  %327 = load i64, i64* %passed, align 8, !dbg !2853
  %328 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2855
  %state508 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %328, i32 0, i32 17, !dbg !2856
  %resume_from509 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state508, i32 0, i32 43, !dbg !2857
  %329 = load i64, i64* %resume_from509, align 8, !dbg !2857
  %cmp510 = icmp slt i64 %327, %329, !dbg !2858
  br i1 %cmp510, label %do.body485, label %do.end512, !dbg !2859

do.end512:                                        ; preds = %do.cond
  br label %if.end513, !dbg !2860

if.end513:                                        ; preds = %do.end512, %if.end477
  %330 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2861
  %state514 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %330, i32 0, i32 17, !dbg !2863
  %infilesize515 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state514, i32 0, i32 47, !dbg !2864
  %331 = load i64, i64* %infilesize515, align 8, !dbg !2864
  %cmp516 = icmp sgt i64 %331, 0, !dbg !2865
  br i1 %cmp516, label %if.then518, label %if.end530, !dbg !2866

if.then518:                                       ; preds = %if.end513
  %332 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2867
  %state519 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %332, i32 0, i32 17, !dbg !2869
  %resume_from520 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state519, i32 0, i32 43, !dbg !2870
  %333 = load i64, i64* %resume_from520, align 8, !dbg !2870
  %334 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2871
  %state521 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %334, i32 0, i32 17, !dbg !2872
  %infilesize522 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state521, i32 0, i32 47, !dbg !2873
  %335 = load i64, i64* %infilesize522, align 8, !dbg !2874
  %sub523 = sub nsw i64 %335, %333, !dbg !2874
  store i64 %sub523, i64* %infilesize522, align 8, !dbg !2874
  %336 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2875
  %state524 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %336, i32 0, i32 17, !dbg !2877
  %infilesize525 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state524, i32 0, i32 47, !dbg !2878
  %337 = load i64, i64* %infilesize525, align 8, !dbg !2878
  %cmp526 = icmp sle i64 %337, 0, !dbg !2879
  br i1 %cmp526, label %if.then528, label %if.end529, !dbg !2880

if.then528:                                       ; preds = %if.then518
  %338 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2881
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %338, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i32 0, i32 0)), !dbg !2883
  store i32 18, i32* %retval, align 4, !dbg !2884
  br label %return, !dbg !2884

if.end529:                                        ; preds = %if.then518
  br label %if.end530, !dbg !2885

if.end530:                                        ; preds = %if.end529, %if.end513
  br label %if.end531, !dbg !2886

if.end531:                                        ; preds = %if.end530, %land.lhs.true466, %if.end462
  br label %if.end532, !dbg !2887

if.end532:                                        ; preds = %if.end531, %land.lhs.true451, %lor.lhs.false448
  %339 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2888
  %state533 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %339, i32 0, i32 17, !dbg !2890
  %use_range = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state533, i32 0, i32 40, !dbg !2891
  %340 = load i8, i8* %use_range, align 1, !dbg !2891
  %tobool534 = trunc i8 %340 to i1, !dbg !2891
  br i1 %tobool534, label %if.then535, label %if.end604, !dbg !2892

if.then535:                                       ; preds = %if.end532
  %341 = load i32, i32* %httpreq, align 4, !dbg !2893
  %cmp536 = icmp eq i32 %341, 1, !dbg !2896
  br i1 %cmp536, label %land.lhs.true541, label %lor.lhs.false538, !dbg !2897

lor.lhs.false538:                                 ; preds = %if.then535
  %342 = load i32, i32* %httpreq, align 4, !dbg !2898
  %cmp539 = icmp eq i32 %342, 5, !dbg !2900
  br i1 %cmp539, label %land.lhs.true541, label %if.else550, !dbg !2901

land.lhs.true541:                                 ; preds = %lor.lhs.false538, %if.then535
  %343 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2902
  %call542 = call i8* @Curl_checkheaders(%struct.connectdata* %343, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0)), !dbg !2903
  %tobool543 = icmp ne i8* %call542, null, !dbg !2903
  br i1 %tobool543, label %if.else550, label %if.then544, !dbg !2904

if.then544:                                       ; preds = %land.lhs.true541
  %344 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2906
  %345 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2906
  %allocptr545 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %345, i32 0, i32 52, !dbg !2906
  %rangeline = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr545, i32 0, i32 4, !dbg !2906
  %346 = load i8*, i8** %rangeline, align 8, !dbg !2906
  call void %344(i8* %346), !dbg !2906
  %347 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2908
  %state546 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %347, i32 0, i32 17, !dbg !2909
  %range = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state546, i32 0, i32 42, !dbg !2910
  %348 = load i8*, i8** %range, align 8, !dbg !2910
  %call547 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i8* %348), !dbg !2911
  %349 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2912
  %allocptr548 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %349, i32 0, i32 52, !dbg !2913
  %rangeline549 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr548, i32 0, i32 4, !dbg !2914
  store i8* %call547, i8** %rangeline549, align 8, !dbg !2915
  br label %if.end603, !dbg !2916

if.else550:                                       ; preds = %land.lhs.true541, %lor.lhs.false538
  %350 = load i32, i32* %httpreq, align 4, !dbg !2917
  %cmp551 = icmp ne i32 %350, 1, !dbg !2919
  br i1 %cmp551, label %land.lhs.true553, label %if.end602, !dbg !2920

land.lhs.true553:                                 ; preds = %if.else550
  %351 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2921
  %call554 = call i8* @Curl_checkheaders(%struct.connectdata* %351, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0)), !dbg !2922
  %tobool555 = icmp ne i8* %call554, null, !dbg !2922
  br i1 %tobool555, label %if.end602, label %if.then556, !dbg !2923

if.then556:                                       ; preds = %land.lhs.true553
  %352 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2924
  %353 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2924
  %allocptr557 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %353, i32 0, i32 52, !dbg !2924
  %rangeline558 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr557, i32 0, i32 4, !dbg !2924
  %354 = load i8*, i8** %rangeline558, align 8, !dbg !2924
  call void %352(i8* %354), !dbg !2924
  %355 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2926
  %set559 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %355, i32 0, i32 13, !dbg !2928
  %set_resume_from = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set559, i32 0, i32 53, !dbg !2929
  %356 = load i64, i64* %set_resume_from, align 8, !dbg !2929
  %cmp560 = icmp slt i64 %356, 0, !dbg !2930
  br i1 %cmp560, label %if.then562, label %if.else571, !dbg !2931

if.then562:                                       ; preds = %if.then556
  %357 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2932
  %state563 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %357, i32 0, i32 17, !dbg !2934
  %infilesize564 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state563, i32 0, i32 47, !dbg !2935
  %358 = load i64, i64* %infilesize564, align 8, !dbg !2935
  %sub565 = sub nsw i64 %358, 1, !dbg !2936
  %359 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2937
  %state566 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %359, i32 0, i32 17, !dbg !2938
  %infilesize567 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state566, i32 0, i32 47, !dbg !2939
  %360 = load i64, i64* %infilesize567, align 8, !dbg !2939
  %call568 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i32 0, i32 0), i64 %sub565, i64 %360), !dbg !2940
  %361 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2941
  %allocptr569 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %361, i32 0, i32 52, !dbg !2942
  %rangeline570 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr569, i32 0, i32 4, !dbg !2943
  store i8* %call568, i8** %rangeline570, align 8, !dbg !2944
  br label %if.end596, !dbg !2945

if.else571:                                       ; preds = %if.then556
  %362 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2946
  %state572 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %362, i32 0, i32 17, !dbg !2948
  %resume_from573 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state572, i32 0, i32 43, !dbg !2949
  %363 = load i64, i64* %resume_from573, align 8, !dbg !2949
  %tobool574 = icmp ne i64 %363, 0, !dbg !2946
  br i1 %tobool574, label %if.then575, label %if.else587, !dbg !2950

if.then575:                                       ; preds = %if.else571
  call void @llvm.dbg.declare(metadata i64* %total_expected_size, metadata !2951, metadata !1950), !dbg !2953
  %364 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2954
  %state576 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %364, i32 0, i32 17, !dbg !2955
  %resume_from577 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state576, i32 0, i32 43, !dbg !2956
  %365 = load i64, i64* %resume_from577, align 8, !dbg !2956
  %366 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2957
  %state578 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %366, i32 0, i32 17, !dbg !2958
  %infilesize579 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state578, i32 0, i32 47, !dbg !2959
  %367 = load i64, i64* %infilesize579, align 8, !dbg !2959
  %add580 = add nsw i64 %365, %367, !dbg !2960
  store i64 %add580, i64* %total_expected_size, align 8, !dbg !2953
  %368 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2961
  %state581 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %368, i32 0, i32 17, !dbg !2962
  %range582 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state581, i32 0, i32 42, !dbg !2963
  %369 = load i8*, i8** %range582, align 8, !dbg !2963
  %370 = load i64, i64* %total_expected_size, align 8, !dbg !2964
  %sub583 = sub nsw i64 %370, 1, !dbg !2965
  %371 = load i64, i64* %total_expected_size, align 8, !dbg !2966
  %call584 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i32 0, i32 0), i8* %369, i64 %sub583, i64 %371), !dbg !2967
  %372 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2968
  %allocptr585 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %372, i32 0, i32 52, !dbg !2969
  %rangeline586 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr585, i32 0, i32 4, !dbg !2970
  store i8* %call584, i8** %rangeline586, align 8, !dbg !2971
  br label %if.end595, !dbg !2972

if.else587:                                       ; preds = %if.else571
  %373 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2973
  %state588 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %373, i32 0, i32 17, !dbg !2975
  %range589 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state588, i32 0, i32 42, !dbg !2976
  %374 = load i8*, i8** %range589, align 8, !dbg !2976
  %375 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2977
  %state590 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %375, i32 0, i32 17, !dbg !2978
  %infilesize591 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state590, i32 0, i32 47, !dbg !2979
  %376 = load i64, i64* %infilesize591, align 8, !dbg !2979
  %call592 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i32 0, i32 0), i8* %374, i64 %376), !dbg !2980
  %377 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2981
  %allocptr593 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %377, i32 0, i32 52, !dbg !2982
  %rangeline594 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr593, i32 0, i32 4, !dbg !2983
  store i8* %call592, i8** %rangeline594, align 8, !dbg !2984
  br label %if.end595

if.end595:                                        ; preds = %if.else587, %if.then575
  br label %if.end596

if.end596:                                        ; preds = %if.end595, %if.then562
  %378 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2985
  %allocptr597 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %378, i32 0, i32 52, !dbg !2987
  %rangeline598 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr597, i32 0, i32 4, !dbg !2988
  %379 = load i8*, i8** %rangeline598, align 8, !dbg !2988
  %tobool599 = icmp ne i8* %379, null, !dbg !2985
  br i1 %tobool599, label %if.end601, label %if.then600, !dbg !2989

if.then600:                                       ; preds = %if.end596
  store i32 27, i32* %retval, align 4, !dbg !2990
  br label %return, !dbg !2990

if.end601:                                        ; preds = %if.end596
  br label %if.end602, !dbg !2991

if.end602:                                        ; preds = %if.end601, %land.lhs.true553, %if.else550
  br label %if.end603

if.end603:                                        ; preds = %if.end602, %if.then544
  br label %if.end604, !dbg !2992

if.end604:                                        ; preds = %if.end603, %if.end532
  %380 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2993
  %381 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !2994
  %call605 = call i8* @get_http_string(%struct.Curl_easy* %380, %struct.connectdata* %381), !dbg !2995
  store i8* %call605, i8** %httpstring, align 8, !dbg !2996
  %call606 = call %struct.Curl_send_buffer* @Curl_add_buffer_init(), !dbg !2997
  store %struct.Curl_send_buffer* %call606, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !2998
  %382 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !2999
  %tobool607 = icmp ne %struct.Curl_send_buffer* %382, null, !dbg !2999
  br i1 %tobool607, label %if.end609, label %if.then608, !dbg !3001

if.then608:                                       ; preds = %if.end604
  store i32 27, i32* %retval, align 4, !dbg !3002
  br label %return, !dbg !3002

if.end609:                                        ; preds = %if.end604
  %383 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3003
  %384 = load i8*, i8** %request, align 8, !dbg !3004
  %call610 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %383, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i8* %384), !dbg !3005
  store i32 %call610, i32* %result, align 4, !dbg !3006
  %385 = load i32, i32* %result, align 4, !dbg !3007
  %tobool611 = icmp ne i32 %385, 0, !dbg !3007
  br i1 %tobool611, label %if.then612, label %if.end613, !dbg !3009

if.then612:                                       ; preds = %if.end609
  %386 = load i32, i32* %result, align 4, !dbg !3010
  store i32 %386, i32* %retval, align 4, !dbg !3011
  br label %return, !dbg !3011

if.end613:                                        ; preds = %if.end609
  %387 = load i8, i8* %paste_ftp_userpwd, align 1, !dbg !3012
  %tobool614 = trunc i8 %387 to i1, !dbg !3012
  br i1 %tobool614, label %if.then615, label %if.else619, !dbg !3014

if.then615:                                       ; preds = %if.end613
  %388 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3015
  %389 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3016
  %user = getelementptr inbounds %struct.connectdata, %struct.connectdata* %389, i32 0, i32 25, !dbg !3017
  %390 = load i8*, i8** %user, align 8, !dbg !3017
  %391 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3018
  %passwd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %391, i32 0, i32 26, !dbg !3019
  %392 = load i8*, i8** %passwd, align 8, !dbg !3019
  %393 = load i8*, i8** %ppath, align 8, !dbg !3020
  %add.ptr616 = getelementptr inbounds i8, i8* %393, i64 7, !dbg !3021
  %add.ptr617 = getelementptr inbounds i8, i8* %add.ptr616, i64 -1, !dbg !3022
  %call618 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %388, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* %390, i8* %392, i8* %add.ptr617), !dbg !3023
  store i32 %call618, i32* %result, align 4, !dbg !3024
  br label %if.end622, !dbg !3025

if.else619:                                       ; preds = %if.end613
  %394 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3026
  %395 = load i8*, i8** %ppath, align 8, !dbg !3027
  %396 = load i8*, i8** %ppath, align 8, !dbg !3028
  %call620 = call i64 @strlen(i8* %396) #8, !dbg !3029
  %call621 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %394, i8* %395, i64 %call620), !dbg !3030
  store i32 %call621, i32* %result, align 4, !dbg !3032
  br label %if.end622

if.end622:                                        ; preds = %if.else619, %if.then615
  %397 = load i32, i32* %result, align 4, !dbg !3033
  %tobool623 = icmp ne i32 %397, 0, !dbg !3033
  br i1 %tobool623, label %if.then624, label %if.end625, !dbg !3035

if.then624:                                       ; preds = %if.end622
  %398 = load i32, i32* %result, align 4, !dbg !3036
  store i32 %398, i32* %retval, align 4, !dbg !3037
  br label %return, !dbg !3037

if.end625:                                        ; preds = %if.end622
  %399 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3038
  %arraydecay626 = getelementptr inbounds [9 x i8], [9 x i8]* %ftp_typecode, i32 0, i32 0, !dbg !3039
  %400 = load i8*, i8** %httpstring, align 8, !dbg !3040
  %401 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3041
  %allocptr627 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %401, i32 0, i32 52, !dbg !3042
  %host628 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr627, i32 0, i32 6, !dbg !3043
  %402 = load i8*, i8** %host628, align 8, !dbg !3043
  %tobool629 = icmp ne i8* %402, null, !dbg !3041
  br i1 %tobool629, label %cond.true630, label %cond.false633, !dbg !3041

cond.true630:                                     ; preds = %if.end625
  %403 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3044
  %allocptr631 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %403, i32 0, i32 52, !dbg !3045
  %host632 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr631, i32 0, i32 6, !dbg !3046
  %404 = load i8*, i8** %host632, align 8, !dbg !3046
  br label %cond.end634, !dbg !3047

cond.false633:                                    ; preds = %if.end625
  br label %cond.end634, !dbg !3048

cond.end634:                                      ; preds = %cond.false633, %cond.true630
  %cond635 = phi i8* [ %404, %cond.true630 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false633 ], !dbg !3049
  %405 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3051
  %allocptr636 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %405, i32 0, i32 52, !dbg !3052
  %proxyuserpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr636, i32 0, i32 0, !dbg !3053
  %406 = load i8*, i8** %proxyuserpwd, align 8, !dbg !3053
  %tobool637 = icmp ne i8* %406, null, !dbg !3051
  br i1 %tobool637, label %cond.true638, label %cond.false641, !dbg !3051

cond.true638:                                     ; preds = %cond.end634
  %407 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3054
  %allocptr639 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %407, i32 0, i32 52, !dbg !3055
  %proxyuserpwd640 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr639, i32 0, i32 0, !dbg !3056
  %408 = load i8*, i8** %proxyuserpwd640, align 8, !dbg !3056
  br label %cond.end642, !dbg !3057

cond.false641:                                    ; preds = %cond.end634
  br label %cond.end642, !dbg !3058

cond.end642:                                      ; preds = %cond.false641, %cond.true638
  %cond643 = phi i8* [ %408, %cond.true638 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false641 ], !dbg !3059
  %409 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3060
  %allocptr644 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %409, i32 0, i32 52, !dbg !3061
  %userpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr644, i32 0, i32 3, !dbg !3062
  %410 = load i8*, i8** %userpwd, align 8, !dbg !3062
  %tobool645 = icmp ne i8* %410, null, !dbg !3060
  br i1 %tobool645, label %cond.true646, label %cond.false649, !dbg !3060

cond.true646:                                     ; preds = %cond.end642
  %411 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3063
  %allocptr647 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %411, i32 0, i32 52, !dbg !3064
  %userpwd648 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr647, i32 0, i32 3, !dbg !3065
  %412 = load i8*, i8** %userpwd648, align 8, !dbg !3065
  br label %cond.end650, !dbg !3066

cond.false649:                                    ; preds = %cond.end642
  br label %cond.end650, !dbg !3067

cond.end650:                                      ; preds = %cond.false649, %cond.true646
  %cond651 = phi i8* [ %412, %cond.true646 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false649 ], !dbg !3068
  %413 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3069
  %state652 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %413, i32 0, i32 17, !dbg !3070
  %use_range653 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state652, i32 0, i32 40, !dbg !3071
  %414 = load i8, i8* %use_range653, align 1, !dbg !3071
  %tobool654 = trunc i8 %414 to i1, !dbg !3071
  br i1 %tobool654, label %land.lhs.true656, label %cond.false663, !dbg !3072

land.lhs.true656:                                 ; preds = %cond.end650
  %415 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3073
  %allocptr657 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %415, i32 0, i32 52, !dbg !3074
  %rangeline658 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr657, i32 0, i32 4, !dbg !3075
  %416 = load i8*, i8** %rangeline658, align 8, !dbg !3075
  %tobool659 = icmp ne i8* %416, null, !dbg !3073
  br i1 %tobool659, label %cond.true660, label %cond.false663, !dbg !3076

cond.true660:                                     ; preds = %land.lhs.true656
  %417 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3077
  %allocptr661 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %417, i32 0, i32 52, !dbg !3078
  %rangeline662 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr661, i32 0, i32 4, !dbg !3079
  %418 = load i8*, i8** %rangeline662, align 8, !dbg !3079
  br label %cond.end664, !dbg !3080

cond.false663:                                    ; preds = %land.lhs.true656, %cond.end650
  br label %cond.end664, !dbg !3081

cond.end664:                                      ; preds = %cond.false663, %cond.true660
  %cond665 = phi i8* [ %418, %cond.true660 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false663 ], !dbg !3082
  %419 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3084
  %set666 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %419, i32 0, i32 13, !dbg !3085
  %str667 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set666, i32 0, i32 128, !dbg !3086
  %arrayidx668 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str667, i64 0, i64 36, !dbg !3084
  %420 = load i8*, i8** %arrayidx668, align 8, !dbg !3084
  %tobool669 = icmp ne i8* %420, null, !dbg !3084
  br i1 %tobool669, label %land.lhs.true670, label %cond.false683, !dbg !3087

land.lhs.true670:                                 ; preds = %cond.end664
  %421 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3088
  %set671 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %421, i32 0, i32 13, !dbg !3089
  %str672 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set671, i32 0, i32 128, !dbg !3090
  %arrayidx673 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str672, i64 0, i64 36, !dbg !3088
  %422 = load i8*, i8** %arrayidx673, align 8, !dbg !3088
  %423 = load i8, i8* %422, align 1, !dbg !3091
  %conv674 = sext i8 %423 to i32, !dbg !3091
  %tobool675 = icmp ne i32 %conv674, 0, !dbg !3091
  br i1 %tobool675, label %land.lhs.true676, label %cond.false683, !dbg !3092

land.lhs.true676:                                 ; preds = %land.lhs.true670
  %424 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3093
  %allocptr677 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %424, i32 0, i32 52, !dbg !3094
  %uagent678 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr677, i32 0, i32 1, !dbg !3095
  %425 = load i8*, i8** %uagent678, align 8, !dbg !3095
  %tobool679 = icmp ne i8* %425, null, !dbg !3093
  br i1 %tobool679, label %cond.true680, label %cond.false683, !dbg !3096

cond.true680:                                     ; preds = %land.lhs.true676
  %426 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3097
  %allocptr681 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %426, i32 0, i32 52, !dbg !3098
  %uagent682 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr681, i32 0, i32 1, !dbg !3099
  %427 = load i8*, i8** %uagent682, align 8, !dbg !3099
  br label %cond.end684, !dbg !3100

cond.false683:                                    ; preds = %land.lhs.true676, %land.lhs.true670, %cond.end664
  br label %cond.end684, !dbg !3101

cond.end684:                                      ; preds = %cond.false683, %cond.true680
  %cond685 = phi i8* [ %427, %cond.true680 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false683 ], !dbg !3102
  %428 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3103
  %p_accept686 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %428, i32 0, i32 4, !dbg !3104
  %429 = load i8*, i8** %p_accept686, align 8, !dbg !3104
  %tobool687 = icmp ne i8* %429, null, !dbg !3103
  br i1 %tobool687, label %cond.true688, label %cond.false690, !dbg !3103

cond.true688:                                     ; preds = %cond.end684
  %430 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3105
  %p_accept689 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %430, i32 0, i32 4, !dbg !3106
  %431 = load i8*, i8** %p_accept689, align 8, !dbg !3106
  br label %cond.end691, !dbg !3107

cond.false690:                                    ; preds = %cond.end684
  br label %cond.end691, !dbg !3108

cond.end691:                                      ; preds = %cond.false690, %cond.true688
  %cond692 = phi i8* [ %431, %cond.true688 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false690 ], !dbg !3109
  %432 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3110
  %allocptr693 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %432, i32 0, i32 52, !dbg !3111
  %te694 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr693, i32 0, i32 9, !dbg !3112
  %433 = load i8*, i8** %te694, align 8, !dbg !3112
  %tobool695 = icmp ne i8* %433, null, !dbg !3110
  br i1 %tobool695, label %cond.true696, label %cond.false699, !dbg !3110

cond.true696:                                     ; preds = %cond.end691
  %434 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3113
  %allocptr697 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %434, i32 0, i32 52, !dbg !3114
  %te698 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr697, i32 0, i32 9, !dbg !3115
  %435 = load i8*, i8** %te698, align 8, !dbg !3115
  br label %cond.end700, !dbg !3116

cond.false699:                                    ; preds = %cond.end691
  br label %cond.end700, !dbg !3117

cond.end700:                                      ; preds = %cond.false699, %cond.true696
  %cond701 = phi i8* [ %435, %cond.true696 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false699 ], !dbg !3118
  %436 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3119
  %set702 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %436, i32 0, i32 13, !dbg !3120
  %str703 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set702, i32 0, i32 128, !dbg !3121
  %arrayidx704 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str703, i64 0, i64 9, !dbg !3119
  %437 = load i8*, i8** %arrayidx704, align 8, !dbg !3119
  %tobool705 = icmp ne i8* %437, null, !dbg !3119
  br i1 %tobool705, label %land.lhs.true706, label %cond.false719, !dbg !3122

land.lhs.true706:                                 ; preds = %cond.end700
  %438 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3123
  %set707 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %438, i32 0, i32 13, !dbg !3124
  %str708 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set707, i32 0, i32 128, !dbg !3125
  %arrayidx709 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str708, i64 0, i64 9, !dbg !3123
  %439 = load i8*, i8** %arrayidx709, align 8, !dbg !3123
  %440 = load i8, i8* %439, align 1, !dbg !3126
  %conv710 = sext i8 %440 to i32, !dbg !3126
  %tobool711 = icmp ne i32 %conv710, 0, !dbg !3126
  br i1 %tobool711, label %land.lhs.true712, label %cond.false719, !dbg !3127

land.lhs.true712:                                 ; preds = %land.lhs.true706
  %441 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3128
  %allocptr713 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %441, i32 0, i32 52, !dbg !3129
  %accept_encoding714 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr713, i32 0, i32 2, !dbg !3130
  %442 = load i8*, i8** %accept_encoding714, align 8, !dbg !3130
  %tobool715 = icmp ne i8* %442, null, !dbg !3128
  br i1 %tobool715, label %cond.true716, label %cond.false719, !dbg !3131

cond.true716:                                     ; preds = %land.lhs.true712
  %443 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3132
  %allocptr717 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %443, i32 0, i32 52, !dbg !3133
  %accept_encoding718 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr717, i32 0, i32 2, !dbg !3134
  %444 = load i8*, i8** %accept_encoding718, align 8, !dbg !3134
  br label %cond.end720, !dbg !3135

cond.false719:                                    ; preds = %land.lhs.true712, %land.lhs.true706, %cond.end700
  br label %cond.end720, !dbg !3136

cond.end720:                                      ; preds = %cond.false719, %cond.true716
  %cond721 = phi i8* [ %444, %cond.true716 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false719 ], !dbg !3137
  %445 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3138
  %change722 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %445, i32 0, i32 14, !dbg !3139
  %referer723 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change722, i32 0, i32 2, !dbg !3140
  %446 = load i8*, i8** %referer723, align 8, !dbg !3140
  %tobool724 = icmp ne i8* %446, null, !dbg !3138
  br i1 %tobool724, label %land.lhs.true725, label %cond.false732, !dbg !3141

land.lhs.true725:                                 ; preds = %cond.end720
  %447 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3142
  %allocptr726 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %447, i32 0, i32 52, !dbg !3143
  %ref727 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr726, i32 0, i32 5, !dbg !3144
  %448 = load i8*, i8** %ref727, align 8, !dbg !3144
  %tobool728 = icmp ne i8* %448, null, !dbg !3142
  br i1 %tobool728, label %cond.true729, label %cond.false732, !dbg !3145

cond.true729:                                     ; preds = %land.lhs.true725
  %449 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3146
  %allocptr730 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %449, i32 0, i32 52, !dbg !3147
  %ref731 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr730, i32 0, i32 5, !dbg !3148
  %450 = load i8*, i8** %ref731, align 8, !dbg !3148
  br label %cond.end733, !dbg !3149

cond.false732:                                    ; preds = %land.lhs.true725, %cond.end720
  br label %cond.end733, !dbg !3150

cond.end733:                                      ; preds = %cond.false732, %cond.true729
  %cond734 = phi i8* [ %450, %cond.true729 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false732 ], !dbg !3151
  %451 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3152
  %bits735 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %451, i32 0, i32 43, !dbg !3153
  %httpproxy736 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits735, i32 0, i32 5, !dbg !3154
  %452 = load i8, i8* %httpproxy736, align 1, !dbg !3154
  %tobool737 = trunc i8 %452 to i1, !dbg !3154
  br i1 %tobool737, label %land.lhs.true739, label %land.end, !dbg !3155

land.lhs.true739:                                 ; preds = %cond.end733
  %453 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3156
  %bits740 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %453, i32 0, i32 43, !dbg !3157
  %tunnel_proxy741 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits740, i32 0, i32 15, !dbg !3158
  %454 = load i8, i8* %tunnel_proxy741, align 1, !dbg !3158
  %tobool742 = trunc i8 %454 to i1, !dbg !3158
  br i1 %tobool742, label %land.end, label %land.rhs, !dbg !3159

land.rhs:                                         ; preds = %land.lhs.true739
  %455 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3160
  %call743 = call i8* @Curl_checkProxyheaders(%struct.connectdata* %455, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0)), !dbg !3161
  %tobool744 = icmp ne i8* %call743, null, !dbg !3162
  %lnot = xor i1 %tobool744, true, !dbg !3162
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true739, %cond.end733
  %456 = phi i1 [ false, %land.lhs.true739 ], [ false, %cond.end733 ], [ %lnot, %land.rhs ]
  %cond745 = select i1 %456, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !3163
  %457 = load i8*, i8** %te, align 8, !dbg !3164
  %call746 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %399, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.52, i32 0, i32 0), i8* %arraydecay626, i8* %400, i8* %cond635, i8* %cond643, i8* %cond651, i8* %cond665, i8* %cond685, i8* %cond692, i8* %cond701, i8* %cond721, i8* %cond734, i8* %cond745, i8* %457), !dbg !3165
  store i32 %call746, i32* %result, align 4, !dbg !3166
  br label %do.body747, !dbg !3167

do.body747:                                       ; preds = %land.end
  %458 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3168
  %459 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3168
  %allocptr748 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %459, i32 0, i32 52, !dbg !3168
  %userpwd749 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr748, i32 0, i32 3, !dbg !3168
  %460 = load i8*, i8** %userpwd749, align 8, !dbg !3168
  call void %458(i8* %460), !dbg !3168
  %461 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3168
  %allocptr750 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %461, i32 0, i32 52, !dbg !3168
  %userpwd751 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr750, i32 0, i32 3, !dbg !3168
  store i8* null, i8** %userpwd751, align 8, !dbg !3168
  br label %do.end753, !dbg !3168

do.end753:                                        ; preds = %do.body747
  br label %do.body754, !dbg !3171

do.body754:                                       ; preds = %do.end753
  %462 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3172
  %463 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3172
  %allocptr755 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %463, i32 0, i32 52, !dbg !3172
  %proxyuserpwd756 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr755, i32 0, i32 0, !dbg !3172
  %464 = load i8*, i8** %proxyuserpwd756, align 8, !dbg !3172
  call void %462(i8* %464), !dbg !3172
  %465 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3172
  %allocptr757 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %465, i32 0, i32 52, !dbg !3172
  %proxyuserpwd758 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr757, i32 0, i32 0, !dbg !3172
  store i8* null, i8** %proxyuserpwd758, align 8, !dbg !3172
  br label %do.end760, !dbg !3172

do.end760:                                        ; preds = %do.body754
  %466 = load i32, i32* %result, align 4, !dbg !3175
  %tobool761 = icmp ne i32 %466, 0, !dbg !3175
  br i1 %tobool761, label %if.then762, label %if.end763, !dbg !3177

if.then762:                                       ; preds = %do.end760
  %467 = load i32, i32* %result, align 4, !dbg !3178
  store i32 %467, i32* %retval, align 4, !dbg !3179
  br label %return, !dbg !3179

if.end763:                                        ; preds = %do.end760
  %468 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3180
  %handler764 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %468, i32 0, i32 47, !dbg !3182
  %469 = load %struct.Curl_handler*, %struct.Curl_handler** %handler764, align 8, !dbg !3182
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %469, i32 0, i32 16, !dbg !3183
  %470 = load i32, i32* %flags, align 4, !dbg !3183
  %and765 = and i32 %470, 1, !dbg !3184
  %tobool766 = icmp ne i32 %and765, 0, !dbg !3184
  br i1 %tobool766, label %if.end780, label %land.lhs.true767, !dbg !3185

land.lhs.true767:                                 ; preds = %if.end763
  %471 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3186
  %httpversion768 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %471, i32 0, i32 29, !dbg !3187
  %472 = load i32, i32* %httpversion768, align 8, !dbg !3187
  %cmp769 = icmp ne i32 %472, 20, !dbg !3188
  br i1 %cmp769, label %land.lhs.true771, label %if.end780, !dbg !3189

land.lhs.true771:                                 ; preds = %land.lhs.true767
  %473 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3190
  %set772 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %473, i32 0, i32 13, !dbg !3191
  %httpversion773 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set772, i32 0, i32 72, !dbg !3192
  %474 = load i64, i64* %httpversion773, align 8, !dbg !3192
  %cmp774 = icmp eq i64 %474, 3, !dbg !3193
  br i1 %cmp774, label %if.then776, label %if.end780, !dbg !3194

if.then776:                                       ; preds = %land.lhs.true771
  store i32 1, i32* %result, align 4, !dbg !3195
  %475 = load i32, i32* %result, align 4, !dbg !3197
  %tobool777 = icmp ne i32 %475, 0, !dbg !3197
  br i1 %tobool777, label %if.then778, label %if.end779, !dbg !3199

if.then778:                                       ; preds = %if.then776
  %476 = load i32, i32* %result, align 4, !dbg !3200
  store i32 %476, i32* %retval, align 4, !dbg !3201
  br label %return, !dbg !3201

if.end779:                                        ; preds = %if.then776
  br label %if.end780, !dbg !3202

if.end780:                                        ; preds = %if.end779, %land.lhs.true771, %land.lhs.true767, %if.end763
  %477 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3203
  %cookies = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %477, i32 0, i32 15, !dbg !3205
  %478 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies, align 8, !dbg !3205
  %tobool781 = icmp ne %struct.CookieInfo* %478, null, !dbg !3203
  br i1 %tobool781, label %if.then784, label %lor.lhs.false782, !dbg !3206

lor.lhs.false782:                                 ; preds = %if.end780
  %479 = load i8*, i8** %addcookies, align 8, !dbg !3207
  %tobool783 = icmp ne i8* %479, null, !dbg !3207
  br i1 %tobool783, label %if.then784, label %if.end858, !dbg !3209

if.then784:                                       ; preds = %lor.lhs.false782, %if.end780
  call void @llvm.dbg.declare(metadata %struct.Cookie** %co, metadata !3210, metadata !1950), !dbg !3212
  store %struct.Cookie* null, %struct.Cookie** %co, align 8, !dbg !3212
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3213, metadata !1950), !dbg !3214
  store i32 0, i32* %count, align 4, !dbg !3214
  %480 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3215
  %cookies785 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %480, i32 0, i32 15, !dbg !3217
  %481 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies785, align 8, !dbg !3217
  %tobool786 = icmp ne %struct.CookieInfo* %481, null, !dbg !3215
  br i1 %tobool786, label %if.then787, label %if.end809, !dbg !3218

if.then787:                                       ; preds = %if.then784
  %482 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3219
  %call788 = call i32 @Curl_share_lock(%struct.Curl_easy* %482, i32 2, i32 2), !dbg !3221
  %483 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3222
  %cookies789 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %483, i32 0, i32 15, !dbg !3223
  %484 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies789, align 8, !dbg !3223
  %485 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3224
  %allocptr790 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %485, i32 0, i32 52, !dbg !3225
  %cookiehost791 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr790, i32 0, i32 7, !dbg !3226
  %486 = load i8*, i8** %cookiehost791, align 8, !dbg !3226
  %tobool792 = icmp ne i8* %486, null, !dbg !3224
  br i1 %tobool792, label %cond.true793, label %cond.false796, !dbg !3224

cond.true793:                                     ; preds = %if.then787
  %487 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3227
  %allocptr794 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %487, i32 0, i32 52, !dbg !3228
  %cookiehost795 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr794, i32 0, i32 7, !dbg !3229
  %488 = load i8*, i8** %cookiehost795, align 8, !dbg !3229
  br label %cond.end797, !dbg !3230

cond.false796:                                    ; preds = %if.then787
  %489 = load i8*, i8** %host, align 8, !dbg !3232
  br label %cond.end797, !dbg !3233

cond.end797:                                      ; preds = %cond.false796, %cond.true793
  %cond798 = phi i8* [ %488, %cond.true793 ], [ %489, %cond.false796 ], !dbg !3235
  %490 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3237
  %state799 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %490, i32 0, i32 17, !dbg !3238
  %path800 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state799, i32 0, i32 38, !dbg !3239
  %491 = load i8*, i8** %path800, align 8, !dbg !3239
  %492 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3240
  %handler801 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %492, i32 0, i32 47, !dbg !3241
  %493 = load %struct.Curl_handler*, %struct.Curl_handler** %handler801, align 8, !dbg !3241
  %protocol802 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %493, i32 0, i32 15, !dbg !3242
  %494 = load i32, i32* %protocol802, align 8, !dbg !3242
  %and803 = and i32 %494, 2, !dbg !3243
  %tobool804 = icmp ne i32 %and803, 0, !dbg !3244
  %cond805 = select i1 %tobool804, i32 1, i32 0, !dbg !3244
  %tobool806 = icmp ne i32 %cond805, 0, !dbg !3244
  %call807 = call %struct.Cookie* @Curl_cookie_getlist(%struct.CookieInfo* %484, i8* %cond798, i8* %491, i1 zeroext %tobool806), !dbg !3245
  store %struct.Cookie* %call807, %struct.Cookie** %co, align 8, !dbg !3246
  %495 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3247
  %call808 = call i32 @Curl_share_unlock(%struct.Curl_easy* %495, i32 2), !dbg !3248
  br label %if.end809, !dbg !3249

if.end809:                                        ; preds = %cond.end797, %if.then784
  %496 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3250
  %tobool810 = icmp ne %struct.Cookie* %496, null, !dbg !3250
  br i1 %tobool810, label %if.then811, label %if.end832, !dbg !3252

if.then811:                                       ; preds = %if.end809
  call void @llvm.dbg.declare(metadata %struct.Cookie** %store, metadata !3253, metadata !1950), !dbg !3255
  %497 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3256
  store %struct.Cookie* %497, %struct.Cookie** %store, align 8, !dbg !3255
  br label %while.cond, !dbg !3257

while.cond:                                       ; preds = %if.end831, %if.then811
  %498 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3258
  %tobool812 = icmp ne %struct.Cookie* %498, null, !dbg !3260
  br i1 %tobool812, label %while.body, label %while.end, !dbg !3260

while.body:                                       ; preds = %while.cond
  %499 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3261
  %value = getelementptr inbounds %struct.Cookie, %struct.Cookie* %499, i32 0, i32 2, !dbg !3264
  %500 = load i8*, i8** %value, align 8, !dbg !3264
  %tobool813 = icmp ne i8* %500, null, !dbg !3261
  br i1 %tobool813, label %if.then814, label %if.end831, !dbg !3265

if.then814:                                       ; preds = %while.body
  %501 = load i32, i32* %count, align 4, !dbg !3266
  %cmp815 = icmp eq i32 0, %501, !dbg !3269
  br i1 %cmp815, label %if.then817, label %if.end822, !dbg !3270

if.then817:                                       ; preds = %if.then814
  %502 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3271
  %call818 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %502, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i32 0, i32 0)), !dbg !3273
  store i32 %call818, i32* %result, align 4, !dbg !3274
  %503 = load i32, i32* %result, align 4, !dbg !3275
  %tobool819 = icmp ne i32 %503, 0, !dbg !3275
  br i1 %tobool819, label %if.then820, label %if.end821, !dbg !3277

if.then820:                                       ; preds = %if.then817
  br label %while.end, !dbg !3278

if.end821:                                        ; preds = %if.then817
  br label %if.end822, !dbg !3279

if.end822:                                        ; preds = %if.end821, %if.then814
  %504 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3280
  %505 = load i32, i32* %count, align 4, !dbg !3281
  %tobool823 = icmp ne i32 %505, 0, !dbg !3281
  %cond824 = select i1 %tobool823, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !3281
  %506 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3282
  %name825 = getelementptr inbounds %struct.Cookie, %struct.Cookie* %506, i32 0, i32 1, !dbg !3283
  %507 = load i8*, i8** %name825, align 8, !dbg !3283
  %508 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3284
  %value826 = getelementptr inbounds %struct.Cookie, %struct.Cookie* %508, i32 0, i32 2, !dbg !3285
  %509 = load i8*, i8** %value826, align 8, !dbg !3285
  %call827 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %504, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i8* %cond824, i8* %507, i8* %509), !dbg !3286
  store i32 %call827, i32* %result, align 4, !dbg !3287
  %510 = load i32, i32* %result, align 4, !dbg !3288
  %tobool828 = icmp ne i32 %510, 0, !dbg !3288
  br i1 %tobool828, label %if.then829, label %if.end830, !dbg !3290

if.then829:                                       ; preds = %if.end822
  br label %while.end, !dbg !3291

if.end830:                                        ; preds = %if.end822
  %511 = load i32, i32* %count, align 4, !dbg !3292
  %inc = add nsw i32 %511, 1, !dbg !3292
  store i32 %inc, i32* %count, align 4, !dbg !3292
  br label %if.end831, !dbg !3293

if.end831:                                        ; preds = %if.end830, %while.body
  %512 = load %struct.Cookie*, %struct.Cookie** %co, align 8, !dbg !3294
  %next = getelementptr inbounds %struct.Cookie, %struct.Cookie* %512, i32 0, i32 0, !dbg !3295
  %513 = load %struct.Cookie*, %struct.Cookie** %next, align 8, !dbg !3295
  store %struct.Cookie* %513, %struct.Cookie** %co, align 8, !dbg !3296
  br label %while.cond, !dbg !3297

while.end:                                        ; preds = %if.then829, %if.then820, %while.cond
  %514 = load %struct.Cookie*, %struct.Cookie** %store, align 8, !dbg !3299
  call void @Curl_cookie_freelist(%struct.Cookie* %514), !dbg !3300
  br label %if.end832, !dbg !3301

if.end832:                                        ; preds = %while.end, %if.end809
  %515 = load i8*, i8** %addcookies, align 8, !dbg !3302
  %tobool833 = icmp ne i8* %515, null, !dbg !3302
  br i1 %tobool833, label %land.lhs.true834, label %if.end848, !dbg !3304

land.lhs.true834:                                 ; preds = %if.end832
  %516 = load i32, i32* %result, align 4, !dbg !3305
  %tobool835 = icmp ne i32 %516, 0, !dbg !3305
  br i1 %tobool835, label %if.end848, label %if.then836, !dbg !3307

if.then836:                                       ; preds = %land.lhs.true834
  %517 = load i32, i32* %count, align 4, !dbg !3308
  %tobool837 = icmp ne i32 %517, 0, !dbg !3308
  br i1 %tobool837, label %if.end840, label %if.then838, !dbg !3311

if.then838:                                       ; preds = %if.then836
  %518 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3312
  %call839 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %518, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i32 0, i32 0)), !dbg !3313
  store i32 %call839, i32* %result, align 4, !dbg !3314
  br label %if.end840, !dbg !3315

if.end840:                                        ; preds = %if.then838, %if.then836
  %519 = load i32, i32* %result, align 4, !dbg !3316
  %tobool841 = icmp ne i32 %519, 0, !dbg !3316
  br i1 %tobool841, label %if.end847, label %if.then842, !dbg !3318

if.then842:                                       ; preds = %if.end840
  %520 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3319
  %521 = load i32, i32* %count, align 4, !dbg !3321
  %tobool843 = icmp ne i32 %521, 0, !dbg !3321
  %cond844 = select i1 %tobool843, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !3321
  %522 = load i8*, i8** %addcookies, align 8, !dbg !3322
  %call845 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %520, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8* %cond844, i8* %522), !dbg !3323
  store i32 %call845, i32* %result, align 4, !dbg !3324
  %523 = load i32, i32* %count, align 4, !dbg !3325
  %inc846 = add nsw i32 %523, 1, !dbg !3325
  store i32 %inc846, i32* %count, align 4, !dbg !3325
  br label %if.end847, !dbg !3326

if.end847:                                        ; preds = %if.then842, %if.end840
  br label %if.end848, !dbg !3327

if.end848:                                        ; preds = %if.end847, %land.lhs.true834, %if.end832
  %524 = load i32, i32* %count, align 4, !dbg !3328
  %tobool849 = icmp ne i32 %524, 0, !dbg !3328
  br i1 %tobool849, label %land.lhs.true850, label %if.end854, !dbg !3330

land.lhs.true850:                                 ; preds = %if.end848
  %525 = load i32, i32* %result, align 4, !dbg !3331
  %tobool851 = icmp ne i32 %525, 0, !dbg !3331
  br i1 %tobool851, label %if.end854, label %if.then852, !dbg !3333

if.then852:                                       ; preds = %land.lhs.true850
  %526 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3334
  %call853 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %526, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3335
  store i32 %call853, i32* %result, align 4, !dbg !3336
  br label %if.end854, !dbg !3337

if.end854:                                        ; preds = %if.then852, %land.lhs.true850, %if.end848
  %527 = load i32, i32* %result, align 4, !dbg !3338
  %tobool855 = icmp ne i32 %527, 0, !dbg !3338
  br i1 %tobool855, label %if.then856, label %if.end857, !dbg !3340

if.then856:                                       ; preds = %if.end854
  %528 = load i32, i32* %result, align 4, !dbg !3341
  store i32 %528, i32* %retval, align 4, !dbg !3342
  br label %return, !dbg !3342

if.end857:                                        ; preds = %if.end854
  br label %if.end858, !dbg !3343

if.end858:                                        ; preds = %if.end857, %lor.lhs.false782
  %529 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3344
  %530 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3345
  %call859 = call i32 @Curl_add_timecondition(%struct.Curl_easy* %529, %struct.Curl_send_buffer* %530), !dbg !3346
  store i32 %call859, i32* %result, align 4, !dbg !3347
  %531 = load i32, i32* %result, align 4, !dbg !3348
  %tobool860 = icmp ne i32 %531, 0, !dbg !3348
  br i1 %tobool860, label %if.then861, label %if.end862, !dbg !3350

if.then861:                                       ; preds = %if.end858
  %532 = load i32, i32* %result, align 4, !dbg !3351
  store i32 %532, i32* %retval, align 4, !dbg !3352
  br label %return, !dbg !3352

if.end862:                                        ; preds = %if.end858
  %533 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3353
  %534 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3354
  %call863 = call i32 @Curl_add_custom_headers(%struct.connectdata* %533, i1 zeroext false, %struct.Curl_send_buffer* %534), !dbg !3355
  store i32 %call863, i32* %result, align 4, !dbg !3356
  %535 = load i32, i32* %result, align 4, !dbg !3357
  %tobool864 = icmp ne i32 %535, 0, !dbg !3357
  br i1 %tobool864, label %if.then865, label %if.end866, !dbg !3359

if.then865:                                       ; preds = %if.end862
  %536 = load i32, i32* %result, align 4, !dbg !3360
  store i32 %536, i32* %retval, align 4, !dbg !3361
  br label %return, !dbg !3361

if.end866:                                        ; preds = %if.end862
  %537 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3362
  %postdata = getelementptr inbounds %struct.HTTP, %struct.HTTP* %537, i32 0, i32 2, !dbg !3363
  store i8* null, i8** %postdata, align 8, !dbg !3364
  %538 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3365
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %538, i64 -1), !dbg !3366
  %539 = load i32, i32* %httpreq, align 4, !dbg !3367
  switch i32 %539, label %sw.default1211 [
    i32 3, label %sw.bb867
    i32 4, label %sw.bb949
    i32 2, label %sw.bb1009
  ], !dbg !3368

sw.bb867:                                         ; preds = %if.end866
  %540 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3369
  %sendit868 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %540, i32 0, i32 0, !dbg !3372
  %541 = load %struct.FormData*, %struct.FormData** %sendit868, align 8, !dbg !3372
  %tobool869 = icmp ne %struct.FormData* %541, null, !dbg !3369
  br i1 %tobool869, label %lor.lhs.false870, label %if.then875, !dbg !3373

lor.lhs.false870:                                 ; preds = %sw.bb867
  %542 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3374
  %bits871 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %542, i32 0, i32 43, !dbg !3376
  %authneg872 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits871, i32 0, i32 16, !dbg !3377
  %543 = load i8, i8* %authneg872, align 1, !dbg !3377
  %tobool873 = trunc i8 %543 to i1, !dbg !3377
  br i1 %tobool873, label %if.then875, label %if.end886, !dbg !3378

if.then875:                                       ; preds = %lor.lhs.false870, %sw.bb867
  %544 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3379
  %call876 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %544, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i32 0, i32 0)), !dbg !3381
  store i32 %call876, i32* %result, align 4, !dbg !3382
  %545 = load i32, i32* %result, align 4, !dbg !3383
  %tobool877 = icmp ne i32 %545, 0, !dbg !3383
  br i1 %tobool877, label %if.then878, label %if.end879, !dbg !3385

if.then878:                                       ; preds = %if.then875
  %546 = load i32, i32* %result, align 4, !dbg !3386
  store i32 %546, i32* %retval, align 4, !dbg !3387
  br label %return, !dbg !3387

if.end879:                                        ; preds = %if.then875
  %547 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3388
  %548 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3389
  %549 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3390
  %info = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %549, i32 0, i32 19, !dbg !3391
  %request_size = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info, i32 0, i32 6, !dbg !3392
  %call880 = call i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %547, %struct.connectdata* %548, i64* %request_size, i64 0, i32 0), !dbg !3393
  store i32 %call880, i32* %result, align 4, !dbg !3394
  %550 = load i32, i32* %result, align 4, !dbg !3395
  %tobool881 = icmp ne i32 %550, 0, !dbg !3395
  br i1 %tobool881, label %if.then882, label %if.else883, !dbg !3397

if.then882:                                       ; preds = %if.end879
  %551 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3398
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %551, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i32 0, i32 0)), !dbg !3399
  br label %if.end885, !dbg !3399

if.else883:                                       ; preds = %if.end879
  %552 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3400
  %553 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3401
  %readbytecount884 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %553, i32 0, i32 5, !dbg !3402
  call void @Curl_setup_transfer(%struct.connectdata* %552, i32 0, i64 -1, i1 zeroext true, i64* %readbytecount884, i32 -1, i64* null), !dbg !3403
  br label %if.end885

if.end885:                                        ; preds = %if.else883, %if.then882
  br label %sw.epilog1234, !dbg !3404

if.end886:                                        ; preds = %lor.lhs.false870
  %554 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3405
  %form = getelementptr inbounds %struct.HTTP, %struct.HTTP* %554, i32 0, i32 7, !dbg !3407
  %555 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3408
  %sendit887 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %555, i32 0, i32 0, !dbg !3409
  %556 = load %struct.FormData*, %struct.FormData** %sendit887, align 8, !dbg !3409
  %call888 = call i32 @Curl_FormInit(%struct.Form* %form, %struct.FormData* %556), !dbg !3410
  %tobool889 = icmp ne i32 %call888, 0, !dbg !3410
  br i1 %tobool889, label %if.then890, label %if.end891, !dbg !3411

if.then890:                                       ; preds = %if.end886
  %557 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3412
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %557, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0)), !dbg !3414
  store i32 34, i32* %retval, align 4, !dbg !3415
  br label %return, !dbg !3415

if.end891:                                        ; preds = %if.end886
  %558 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3416
  %state892 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %558, i32 0, i32 17, !dbg !3417
  %fread_func893 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state892, i32 0, i32 50, !dbg !3418
  %559 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fread_func893, align 8, !dbg !3418
  %560 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3419
  %form894 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %560, i32 0, i32 7, !dbg !3420
  %fread_func895 = getelementptr inbounds %struct.Form, %struct.Form* %form894, i32 0, i32 3, !dbg !3421
  store i64 (i8*, i64, i64, i8*)* %559, i64 (i8*, i64, i64, i8*)** %fread_func895, align 8, !dbg !3422
  %561 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3423
  %state896 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %561, i32 0, i32 17, !dbg !3424
  %fread_func897 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state896, i32 0, i32 50, !dbg !3425
  store i64 (i8*, i64, i64, i8*)* bitcast (i64 (i8*, i64, i64, %struct._IO_FILE*)* @Curl_FormReader to i64 (i8*, i64, i64, i8*)*), i64 (i8*, i64, i64, i8*)** %fread_func897, align 8, !dbg !3426
  %562 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3427
  %form898 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %562, i32 0, i32 7, !dbg !3428
  %563 = bitcast %struct.Form* %form898 to i8*, !dbg !3429
  %564 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3430
  %state899 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %564, i32 0, i32 17, !dbg !3431
  %in900 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state899, i32 0, i32 51, !dbg !3432
  store i8* %563, i8** %in900, align 8, !dbg !3433
  %565 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3434
  %sending = getelementptr inbounds %struct.HTTP, %struct.HTTP* %565, i32 0, i32 9, !dbg !3435
  store i32 2, i32* %sending, align 8, !dbg !3436
  %566 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3437
  %req901 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %566, i32 0, i32 12, !dbg !3439
  %upload_chunky902 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req901, i32 0, i32 40, !dbg !3440
  %567 = load i8, i8* %upload_chunky902, align 1, !dbg !3440
  %tobool903 = trunc i8 %567 to i1, !dbg !3440
  br i1 %tobool903, label %if.end913, label %land.lhs.true904, !dbg !3441

land.lhs.true904:                                 ; preds = %if.end891
  %568 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3442
  %call905 = call i8* @Curl_checkheaders(%struct.connectdata* %568, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0)), !dbg !3443
  %tobool906 = icmp ne i8* %call905, null, !dbg !3443
  br i1 %tobool906, label %if.end913, label %if.then907, !dbg !3444

if.then907:                                       ; preds = %land.lhs.true904
  %569 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3446
  %570 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3448
  %postsize908 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %570, i32 0, i32 1, !dbg !3449
  %571 = load i64, i64* %postsize908, align 8, !dbg !3449
  %call909 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %569, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0), i64 %571), !dbg !3450
  store i32 %call909, i32* %result, align 4, !dbg !3451
  %572 = load i32, i32* %result, align 4, !dbg !3452
  %tobool910 = icmp ne i32 %572, 0, !dbg !3452
  br i1 %tobool910, label %if.then911, label %if.end912, !dbg !3454

if.then911:                                       ; preds = %if.then907
  %573 = load i32, i32* %result, align 4, !dbg !3455
  store i32 %573, i32* %retval, align 4, !dbg !3456
  br label %return, !dbg !3456

if.end912:                                        ; preds = %if.then907
  br label %if.end913, !dbg !3457

if.end913:                                        ; preds = %if.end912, %land.lhs.true904, %if.end891
  %574 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3458
  %575 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3459
  %576 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3460
  %call914 = call i32 @expect100(%struct.Curl_easy* %574, %struct.connectdata* %575, %struct.Curl_send_buffer* %576), !dbg !3461
  store i32 %call914, i32* %result, align 4, !dbg !3462
  %577 = load i32, i32* %result, align 4, !dbg !3463
  %tobool915 = icmp ne i32 %577, 0, !dbg !3463
  br i1 %tobool915, label %if.then916, label %if.end917, !dbg !3465

if.then916:                                       ; preds = %if.end913
  %578 = load i32, i32* %result, align 4, !dbg !3466
  store i32 %578, i32* %retval, align 4, !dbg !3467
  br label %return, !dbg !3467

if.end917:                                        ; preds = %if.end913
  call void @llvm.dbg.declare(metadata i8** %contentType, metadata !3468, metadata !1950), !dbg !3470
  call void @llvm.dbg.declare(metadata i64* %linelength, metadata !3471, metadata !1950), !dbg !3472
  store i64 0, i64* %linelength, align 8, !dbg !3472
  %579 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3473
  %form918 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %579, i32 0, i32 7, !dbg !3474
  %580 = bitcast %struct.Form* %form918 to i8*, !dbg !3475
  %call919 = call i8* @Curl_formpostheader(i8* %580, i64* %linelength), !dbg !3476
  store i8* %call919, i8** %contentType, align 8, !dbg !3477
  %581 = load i8*, i8** %contentType, align 8, !dbg !3478
  %tobool920 = icmp ne i8* %581, null, !dbg !3478
  br i1 %tobool920, label %if.end922, label %if.then921, !dbg !3480

if.then921:                                       ; preds = %if.end917
  %582 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3481
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %582, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.65, i32 0, i32 0)), !dbg !3483
  store i32 34, i32* %retval, align 4, !dbg !3484
  br label %return, !dbg !3484

if.end922:                                        ; preds = %if.end917
  %583 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3485
  %584 = load i8*, i8** %contentType, align 8, !dbg !3486
  %585 = load i64, i64* %linelength, align 8, !dbg !3487
  %call923 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %583, i8* %584, i64 %585), !dbg !3488
  store i32 %call923, i32* %result, align 4, !dbg !3489
  %586 = load i32, i32* %result, align 4, !dbg !3490
  %tobool924 = icmp ne i32 %586, 0, !dbg !3490
  br i1 %tobool924, label %if.then925, label %if.end926, !dbg !3492

if.then925:                                       ; preds = %if.end922
  %587 = load i32, i32* %result, align 4, !dbg !3493
  store i32 %587, i32* %retval, align 4, !dbg !3494
  br label %return, !dbg !3494

if.end926:                                        ; preds = %if.end922
  %588 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3495
  %call927 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %588, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3496
  store i32 %call927, i32* %result, align 4, !dbg !3497
  %589 = load i32, i32* %result, align 4, !dbg !3498
  %tobool928 = icmp ne i32 %589, 0, !dbg !3498
  br i1 %tobool928, label %if.then929, label %if.end930, !dbg !3500

if.then929:                                       ; preds = %if.end926
  %590 = load i32, i32* %result, align 4, !dbg !3501
  store i32 %590, i32* %retval, align 4, !dbg !3502
  br label %return, !dbg !3502

if.end930:                                        ; preds = %if.end926
  %591 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3503
  %592 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3504
  %postsize931 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %592, i32 0, i32 1, !dbg !3505
  %593 = load i64, i64* %postsize931, align 8, !dbg !3505
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %591, i64 %593), !dbg !3506
  %594 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3507
  %595 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3508
  %596 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3509
  %info932 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %596, i32 0, i32 19, !dbg !3510
  %request_size933 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info932, i32 0, i32 6, !dbg !3511
  %call934 = call i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %594, %struct.connectdata* %595, i64* %request_size933, i64 0, i32 0), !dbg !3512
  store i32 %call934, i32* %result, align 4, !dbg !3513
  %597 = load i32, i32* %result, align 4, !dbg !3514
  %tobool935 = icmp ne i32 %597, 0, !dbg !3514
  br i1 %tobool935, label %if.then936, label %if.else937, !dbg !3516

if.then936:                                       ; preds = %if.end930
  %598 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3517
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %598, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i32 0, i32 0)), !dbg !3518
  br label %if.end940, !dbg !3518

if.else937:                                       ; preds = %if.end930
  %599 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3519
  %600 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3520
  %readbytecount938 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %600, i32 0, i32 5, !dbg !3521
  %601 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3522
  %writebytecount939 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %601, i32 0, i32 6, !dbg !3523
  call void @Curl_setup_transfer(%struct.connectdata* %599, i32 0, i64 -1, i1 zeroext true, i64* %readbytecount938, i32 0, i64* %writebytecount939), !dbg !3524
  br label %if.end940

if.end940:                                        ; preds = %if.else937, %if.then936
  %602 = load i32, i32* %result, align 4, !dbg !3525
  %tobool941 = icmp ne i32 %602, 0, !dbg !3525
  br i1 %tobool941, label %if.then942, label %if.end944, !dbg !3527

if.then942:                                       ; preds = %if.end940
  %603 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3528
  %sendit943 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %603, i32 0, i32 0, !dbg !3530
  call void @Curl_formclean(%struct.FormData** %sendit943), !dbg !3531
  %604 = load i32, i32* %result, align 4, !dbg !3532
  store i32 %604, i32* %retval, align 4, !dbg !3533
  br label %return, !dbg !3533

if.end944:                                        ; preds = %if.end940
  store i32 0, i32* %result, align 4, !dbg !3534
  %605 = load i32, i32* %result, align 4, !dbg !3535
  %tobool945 = icmp ne i32 %605, 0, !dbg !3535
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !3537

if.then946:                                       ; preds = %if.end944
  %606 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3538
  %sendit947 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %606, i32 0, i32 0, !dbg !3540
  call void @Curl_formclean(%struct.FormData** %sendit947), !dbg !3541
  %607 = load i32, i32* %result, align 4, !dbg !3542
  store i32 %607, i32* %retval, align 4, !dbg !3543
  br label %return, !dbg !3543

if.end948:                                        ; preds = %if.end944
  br label %sw.epilog1234, !dbg !3544

sw.bb949:                                         ; preds = %if.end866
  %608 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3545
  %bits950 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %608, i32 0, i32 43, !dbg !3547
  %authneg951 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits950, i32 0, i32 16, !dbg !3548
  %609 = load i8, i8* %authneg951, align 1, !dbg !3548
  %tobool952 = trunc i8 %609 to i1, !dbg !3548
  br i1 %tobool952, label %if.then953, label %if.else954, !dbg !3549

if.then953:                                       ; preds = %sw.bb949
  store i64 0, i64* %postsize, align 8, !dbg !3550
  br label %if.end957, !dbg !3551

if.else954:                                       ; preds = %sw.bb949
  %610 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3552
  %state955 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %610, i32 0, i32 17, !dbg !3553
  %infilesize956 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state955, i32 0, i32 47, !dbg !3554
  %611 = load i64, i64* %infilesize956, align 8, !dbg !3554
  store i64 %611, i64* %postsize, align 8, !dbg !3555
  br label %if.end957

if.end957:                                        ; preds = %if.else954, %if.then953
  %612 = load i64, i64* %postsize, align 8, !dbg !3556
  %cmp958 = icmp ne i64 %612, -1, !dbg !3558
  br i1 %cmp958, label %land.lhs.true960, label %if.end977, !dbg !3559

land.lhs.true960:                                 ; preds = %if.end957
  %613 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3560
  %req961 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %613, i32 0, i32 12, !dbg !3562
  %upload_chunky962 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req961, i32 0, i32 40, !dbg !3563
  %614 = load i8, i8* %upload_chunky962, align 1, !dbg !3563
  %tobool963 = trunc i8 %614 to i1, !dbg !3563
  br i1 %tobool963, label %if.end977, label %land.lhs.true964, !dbg !3564

land.lhs.true964:                                 ; preds = %land.lhs.true960
  %615 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3565
  %bits965 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %615, i32 0, i32 43, !dbg !3566
  %authneg966 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits965, i32 0, i32 16, !dbg !3567
  %616 = load i8, i8* %authneg966, align 1, !dbg !3567
  %tobool967 = trunc i8 %616 to i1, !dbg !3567
  br i1 %tobool967, label %if.then972, label %lor.lhs.false969, !dbg !3568

lor.lhs.false969:                                 ; preds = %land.lhs.true964
  %617 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3569
  %call970 = call i8* @Curl_checkheaders(%struct.connectdata* %617, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0)), !dbg !3570
  %tobool971 = icmp ne i8* %call970, null, !dbg !3570
  br i1 %tobool971, label %if.end977, label %if.then972, !dbg !3571

if.then972:                                       ; preds = %lor.lhs.false969, %land.lhs.true964
  %618 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3573
  %619 = load i64, i64* %postsize, align 8, !dbg !3575
  %call973 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %618, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0), i64 %619), !dbg !3576
  store i32 %call973, i32* %result, align 4, !dbg !3577
  %620 = load i32, i32* %result, align 4, !dbg !3578
  %tobool974 = icmp ne i32 %620, 0, !dbg !3578
  br i1 %tobool974, label %if.then975, label %if.end976, !dbg !3580

if.then975:                                       ; preds = %if.then972
  %621 = load i32, i32* %result, align 4, !dbg !3581
  store i32 %621, i32* %retval, align 4, !dbg !3582
  br label %return, !dbg !3582

if.end976:                                        ; preds = %if.then972
  br label %if.end977, !dbg !3583

if.end977:                                        ; preds = %if.end976, %lor.lhs.false969, %land.lhs.true960, %if.end957
  %622 = load i64, i64* %postsize, align 8, !dbg !3584
  %cmp978 = icmp ne i64 %622, 0, !dbg !3586
  br i1 %cmp978, label %if.then980, label %if.end985, !dbg !3587

if.then980:                                       ; preds = %if.end977
  %623 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3588
  %624 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3590
  %625 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3591
  %call981 = call i32 @expect100(%struct.Curl_easy* %623, %struct.connectdata* %624, %struct.Curl_send_buffer* %625), !dbg !3592
  store i32 %call981, i32* %result, align 4, !dbg !3593
  %626 = load i32, i32* %result, align 4, !dbg !3594
  %tobool982 = icmp ne i32 %626, 0, !dbg !3594
  br i1 %tobool982, label %if.then983, label %if.end984, !dbg !3596

if.then983:                                       ; preds = %if.then980
  %627 = load i32, i32* %result, align 4, !dbg !3597
  store i32 %627, i32* %retval, align 4, !dbg !3598
  br label %return, !dbg !3598

if.end984:                                        ; preds = %if.then980
  br label %if.end985, !dbg !3599

if.end985:                                        ; preds = %if.end984, %if.end977
  %628 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3600
  %call986 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %628, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3601
  store i32 %call986, i32* %result, align 4, !dbg !3602
  %629 = load i32, i32* %result, align 4, !dbg !3603
  %tobool987 = icmp ne i32 %629, 0, !dbg !3603
  br i1 %tobool987, label %if.then988, label %if.end989, !dbg !3605

if.then988:                                       ; preds = %if.end985
  %630 = load i32, i32* %result, align 4, !dbg !3606
  store i32 %630, i32* %retval, align 4, !dbg !3607
  br label %return, !dbg !3607

if.end989:                                        ; preds = %if.end985
  %631 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3608
  %632 = load i64, i64* %postsize, align 8, !dbg !3609
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %631, i64 %632), !dbg !3610
  %633 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3611
  %634 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3612
  %635 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3613
  %info990 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %635, i32 0, i32 19, !dbg !3614
  %request_size991 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info990, i32 0, i32 6, !dbg !3615
  %call992 = call i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %633, %struct.connectdata* %634, i64* %request_size991, i64 0, i32 0), !dbg !3616
  store i32 %call992, i32* %result, align 4, !dbg !3617
  %636 = load i32, i32* %result, align 4, !dbg !3618
  %tobool993 = icmp ne i32 %636, 0, !dbg !3618
  br i1 %tobool993, label %if.then994, label %if.else995, !dbg !3620

if.then994:                                       ; preds = %if.end989
  %637 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3621
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %637, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i32 0, i32 0)), !dbg !3622
  br label %if.end1005, !dbg !3622

if.else995:                                       ; preds = %if.end989
  %638 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3623
  %639 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3624
  %readbytecount996 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %639, i32 0, i32 5, !dbg !3625
  %640 = load i64, i64* %postsize, align 8, !dbg !3626
  %tobool997 = icmp ne i64 %640, 0, !dbg !3626
  %cond998 = select i1 %tobool997, i32 0, i32 -1, !dbg !3626
  %641 = load i64, i64* %postsize, align 8, !dbg !3627
  %tobool999 = icmp ne i64 %641, 0, !dbg !3627
  br i1 %tobool999, label %cond.true1000, label %cond.false1002, !dbg !3627

cond.true1000:                                    ; preds = %if.else995
  %642 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3628
  %writebytecount1001 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %642, i32 0, i32 6, !dbg !3630
  br label %cond.end1003, !dbg !3631

cond.false1002:                                   ; preds = %if.else995
  br label %cond.end1003, !dbg !3632

cond.end1003:                                     ; preds = %cond.false1002, %cond.true1000
  %cond1004 = phi i64* [ %writebytecount1001, %cond.true1000 ], [ null, %cond.false1002 ], !dbg !3634
  call void @Curl_setup_transfer(%struct.connectdata* %638, i32 0, i64 -1, i1 zeroext true, i64* %readbytecount996, i32 %cond998, i64* %cond1004), !dbg !3636
  br label %if.end1005

if.end1005:                                       ; preds = %cond.end1003, %if.then994
  %643 = load i32, i32* %result, align 4, !dbg !3637
  %tobool1006 = icmp ne i32 %643, 0, !dbg !3637
  br i1 %tobool1006, label %if.then1007, label %if.end1008, !dbg !3639

if.then1007:                                      ; preds = %if.end1005
  %644 = load i32, i32* %result, align 4, !dbg !3640
  store i32 %644, i32* %retval, align 4, !dbg !3641
  br label %return, !dbg !3641

if.end1008:                                       ; preds = %if.end1005
  br label %sw.epilog1234, !dbg !3642

sw.bb1009:                                        ; preds = %if.end866
  %645 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3643
  %bits1010 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %645, i32 0, i32 43, !dbg !3645
  %authneg1011 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1010, i32 0, i32 16, !dbg !3646
  %646 = load i8, i8* %authneg1011, align 1, !dbg !3646
  %tobool1012 = trunc i8 %646 to i1, !dbg !3646
  br i1 %tobool1012, label %if.then1013, label %if.else1014, !dbg !3647

if.then1013:                                      ; preds = %sw.bb1009
  store i64 0, i64* %postsize, align 8, !dbg !3648
  br label %if.end1034, !dbg !3649

if.else1014:                                      ; preds = %sw.bb1009
  %647 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3650
  %state1015 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %647, i32 0, i32 17, !dbg !3652
  %infilesize1016 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1015, i32 0, i32 47, !dbg !3653
  %648 = load i64, i64* %infilesize1016, align 8, !dbg !3653
  %cmp1017 = icmp ne i64 %648, -1, !dbg !3654
  br i1 %cmp1017, label %cond.true1019, label %cond.false1022, !dbg !3655

cond.true1019:                                    ; preds = %if.else1014
  %649 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3656
  %state1020 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %649, i32 0, i32 17, !dbg !3657
  %infilesize1021 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1020, i32 0, i32 47, !dbg !3658
  %650 = load i64, i64* %infilesize1021, align 8, !dbg !3658
  br label %cond.end1032, !dbg !3659

cond.false1022:                                   ; preds = %if.else1014
  %651 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3661
  %set1023 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %651, i32 0, i32 13, !dbg !3662
  %postfields = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1023, i32 0, i32 15, !dbg !3663
  %652 = load i8*, i8** %postfields, align 8, !dbg !3663
  %tobool1024 = icmp ne i8* %652, null, !dbg !3661
  br i1 %tobool1024, label %cond.true1025, label %cond.false1029, !dbg !3661

cond.true1025:                                    ; preds = %cond.false1022
  %653 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3664
  %set1026 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %653, i32 0, i32 13, !dbg !3665
  %postfields1027 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1026, i32 0, i32 15, !dbg !3666
  %654 = load i8*, i8** %postfields1027, align 8, !dbg !3666
  %call1028 = call i64 @strlen(i8* %654) #8, !dbg !3667
  br label %cond.end1030, !dbg !3668

cond.false1029:                                   ; preds = %cond.false1022
  br label %cond.end1030, !dbg !3669

cond.end1030:                                     ; preds = %cond.false1029, %cond.true1025
  %cond1031 = phi i64 [ %call1028, %cond.true1025 ], [ -1, %cond.false1029 ], !dbg !3671
  br label %cond.end1032, !dbg !3673

cond.end1032:                                     ; preds = %cond.end1030, %cond.true1019
  %cond1033 = phi i64 [ %650, %cond.true1019 ], [ %cond1031, %cond.end1030 ], !dbg !3674
  store i64 %cond1033, i64* %postsize, align 8, !dbg !3675
  br label %if.end1034

if.end1034:                                       ; preds = %cond.end1032, %if.then1013
  %655 = load i64, i64* %postsize, align 8, !dbg !3676
  %cmp1035 = icmp ne i64 %655, -1, !dbg !3678
  br i1 %cmp1035, label %land.lhs.true1037, label %if.end1054, !dbg !3679

land.lhs.true1037:                                ; preds = %if.end1034
  %656 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3680
  %req1038 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %656, i32 0, i32 12, !dbg !3682
  %upload_chunky1039 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1038, i32 0, i32 40, !dbg !3683
  %657 = load i8, i8* %upload_chunky1039, align 1, !dbg !3683
  %tobool1040 = trunc i8 %657 to i1, !dbg !3683
  br i1 %tobool1040, label %if.end1054, label %land.lhs.true1041, !dbg !3684

land.lhs.true1041:                                ; preds = %land.lhs.true1037
  %658 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3685
  %bits1042 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %658, i32 0, i32 43, !dbg !3686
  %authneg1043 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1042, i32 0, i32 16, !dbg !3687
  %659 = load i8, i8* %authneg1043, align 1, !dbg !3687
  %tobool1044 = trunc i8 %659 to i1, !dbg !3687
  br i1 %tobool1044, label %if.then1049, label %lor.lhs.false1046, !dbg !3688

lor.lhs.false1046:                                ; preds = %land.lhs.true1041
  %660 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3689
  %call1047 = call i8* @Curl_checkheaders(%struct.connectdata* %660, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0)), !dbg !3690
  %tobool1048 = icmp ne i8* %call1047, null, !dbg !3690
  br i1 %tobool1048, label %if.end1054, label %if.then1049, !dbg !3691

if.then1049:                                      ; preds = %lor.lhs.false1046, %land.lhs.true1041
  %661 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3692
  %662 = load i64, i64* %postsize, align 8, !dbg !3694
  %call1050 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %661, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i32 0, i32 0), i64 %662), !dbg !3695
  store i32 %call1050, i32* %result, align 4, !dbg !3696
  %663 = load i32, i32* %result, align 4, !dbg !3697
  %tobool1051 = icmp ne i32 %663, 0, !dbg !3697
  br i1 %tobool1051, label %if.then1052, label %if.end1053, !dbg !3699

if.then1052:                                      ; preds = %if.then1049
  %664 = load i32, i32* %result, align 4, !dbg !3700
  store i32 %664, i32* %retval, align 4, !dbg !3701
  br label %return, !dbg !3701

if.end1053:                                       ; preds = %if.then1049
  br label %if.end1054, !dbg !3702

if.end1054:                                       ; preds = %if.end1053, %lor.lhs.false1046, %land.lhs.true1037, %if.end1034
  %665 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3703
  %call1055 = call i8* @Curl_checkheaders(%struct.connectdata* %665, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0)), !dbg !3705
  %tobool1056 = icmp ne i8* %call1055, null, !dbg !3705
  br i1 %tobool1056, label %if.end1062, label %if.then1057, !dbg !3706

if.then1057:                                      ; preds = %if.end1054
  %666 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3707
  %call1058 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %666, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.67, i32 0, i32 0)), !dbg !3709
  store i32 %call1058, i32* %result, align 4, !dbg !3710
  %667 = load i32, i32* %result, align 4, !dbg !3711
  %tobool1059 = icmp ne i32 %667, 0, !dbg !3711
  br i1 %tobool1059, label %if.then1060, label %if.end1061, !dbg !3713

if.then1060:                                      ; preds = %if.then1057
  %668 = load i32, i32* %result, align 4, !dbg !3714
  store i32 %668, i32* %retval, align 4, !dbg !3715
  br label %return, !dbg !3715

if.end1061:                                       ; preds = %if.then1057
  br label %if.end1062, !dbg !3716

if.end1062:                                       ; preds = %if.end1061, %if.end1054
  %669 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3717
  %call1063 = call i8* @Curl_checkheaders(%struct.connectdata* %669, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0)), !dbg !3718
  store i8* %call1063, i8** %ptr, align 8, !dbg !3719
  %670 = load i8*, i8** %ptr, align 8, !dbg !3720
  %tobool1064 = icmp ne i8* %670, null, !dbg !3720
  br i1 %tobool1064, label %if.then1065, label %if.else1069, !dbg !3722

if.then1065:                                      ; preds = %if.end1062
  %671 = load i8*, i8** %ptr, align 8, !dbg !3723
  %call1066 = call zeroext i1 @Curl_compareheader(i8* %671, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0)), !dbg !3725
  %672 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3726
  %state1067 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %672, i32 0, i32 17, !dbg !3727
  %expect100header = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1067, i32 0, i32 33, !dbg !3728
  %frombool1068 = zext i1 %call1066 to i8, !dbg !3729
  store i8 %frombool1068, i8* %expect100header, align 8, !dbg !3729
  br label %if.end1084, !dbg !3730

if.else1069:                                      ; preds = %if.end1062
  %673 = load i64, i64* %postsize, align 8, !dbg !3731
  %cmp1070 = icmp sgt i64 %673, 1024, !dbg !3733
  br i1 %cmp1070, label %if.then1075, label %lor.lhs.false1072, !dbg !3734

lor.lhs.false1072:                                ; preds = %if.else1069
  %674 = load i64, i64* %postsize, align 8, !dbg !3735
  %cmp1073 = icmp slt i64 %674, 0, !dbg !3737
  br i1 %cmp1073, label %if.then1075, label %if.else1080, !dbg !3738

if.then1075:                                      ; preds = %lor.lhs.false1072, %if.else1069
  %675 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3739
  %676 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3741
  %677 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3742
  %call1076 = call i32 @expect100(%struct.Curl_easy* %675, %struct.connectdata* %676, %struct.Curl_send_buffer* %677), !dbg !3743
  store i32 %call1076, i32* %result, align 4, !dbg !3744
  %678 = load i32, i32* %result, align 4, !dbg !3745
  %tobool1077 = icmp ne i32 %678, 0, !dbg !3745
  br i1 %tobool1077, label %if.then1078, label %if.end1079, !dbg !3747

if.then1078:                                      ; preds = %if.then1075
  %679 = load i32, i32* %result, align 4, !dbg !3748
  store i32 %679, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

if.end1079:                                       ; preds = %if.then1075
  br label %if.end1083, !dbg !3750

if.else1080:                                      ; preds = %lor.lhs.false1072
  %680 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3751
  %state1081 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %680, i32 0, i32 17, !dbg !3752
  %expect100header1082 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1081, i32 0, i32 33, !dbg !3753
  store i8 0, i8* %expect100header1082, align 8, !dbg !3754
  br label %if.end1083

if.end1083:                                       ; preds = %if.else1080, %if.end1079
  br label %if.end1084

if.end1084:                                       ; preds = %if.end1083, %if.then1065
  %681 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3755
  %set1085 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %681, i32 0, i32 13, !dbg !3757
  %postfields1086 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1085, i32 0, i32 15, !dbg !3758
  %682 = load i8*, i8** %postfields1086, align 8, !dbg !3758
  %tobool1087 = icmp ne i8* %682, null, !dbg !3755
  br i1 %tobool1087, label %if.then1088, label %if.else1153, !dbg !3759

if.then1088:                                      ; preds = %if.end1084
  %683 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3760
  %httpversion1089 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %683, i32 0, i32 29, !dbg !3763
  %684 = load i32, i32* %httpversion1089, align 8, !dbg !3763
  %cmp1090 = icmp ne i32 %684, 20, !dbg !3764
  br i1 %cmp1090, label %land.lhs.true1092, label %if.else1137, !dbg !3765

land.lhs.true1092:                                ; preds = %if.then1088
  %685 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3766
  %state1093 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %685, i32 0, i32 17, !dbg !3767
  %expect100header1094 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1093, i32 0, i32 33, !dbg !3768
  %686 = load i8, i8* %expect100header1094, align 8, !dbg !3768
  %tobool1095 = trunc i8 %686 to i1, !dbg !3768
  br i1 %tobool1095, label %if.else1137, label %land.lhs.true1096, !dbg !3769

land.lhs.true1096:                                ; preds = %land.lhs.true1092
  %687 = load i64, i64* %postsize, align 8, !dbg !3770
  %cmp1097 = icmp slt i64 %687, 65536, !dbg !3771
  br i1 %cmp1097, label %if.then1099, label %if.else1137, !dbg !3772

if.then1099:                                      ; preds = %land.lhs.true1096
  %688 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3774
  %call1100 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %688, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3776
  store i32 %call1100, i32* %result, align 4, !dbg !3777
  %689 = load i32, i32* %result, align 4, !dbg !3778
  %tobool1101 = icmp ne i32 %689, 0, !dbg !3778
  br i1 %tobool1101, label %if.then1102, label %if.end1103, !dbg !3780

if.then1102:                                      ; preds = %if.then1099
  %690 = load i32, i32* %result, align 4, !dbg !3781
  store i32 %690, i32* %retval, align 4, !dbg !3782
  br label %return, !dbg !3782

if.end1103:                                       ; preds = %if.then1099
  %691 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3783
  %req1104 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %691, i32 0, i32 12, !dbg !3785
  %upload_chunky1105 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1104, i32 0, i32 40, !dbg !3786
  %692 = load i8, i8* %upload_chunky1105, align 1, !dbg !3786
  %tobool1106 = trunc i8 %692 to i1, !dbg !3786
  br i1 %tobool1106, label %if.else1111, label %if.then1107, !dbg !3787

if.then1107:                                      ; preds = %if.end1103
  %693 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3788
  %694 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3790
  %set1108 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %694, i32 0, i32 13, !dbg !3791
  %postfields1109 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1108, i32 0, i32 15, !dbg !3792
  %695 = load i8*, i8** %postfields1109, align 8, !dbg !3792
  %696 = load i64, i64* %postsize, align 8, !dbg !3793
  %call1110 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %693, i8* %695, i64 %696), !dbg !3794
  store i32 %call1110, i32* %result, align 4, !dbg !3795
  %697 = load i64, i64* %postsize, align 8, !dbg !3796
  store i64 %697, i64* %included_body, align 8, !dbg !3797
  br label %if.end1133, !dbg !3798

if.else1111:                                      ; preds = %if.end1103
  %698 = load i64, i64* %postsize, align 8, !dbg !3799
  %tobool1112 = icmp ne i64 %698, 0, !dbg !3799
  br i1 %tobool1112, label %if.then1113, label %if.end1127, !dbg !3802

if.then1113:                                      ; preds = %if.else1111
  %699 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3803
  %700 = load i64, i64* %postsize, align 8, !dbg !3805
  %conv1114 = trunc i64 %700 to i32, !dbg !3806
  %call1115 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %699, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i32 %conv1114), !dbg !3807
  store i32 %call1115, i32* %result, align 4, !dbg !3808
  %701 = load i32, i32* %result, align 4, !dbg !3809
  %tobool1116 = icmp ne i32 %701, 0, !dbg !3809
  br i1 %tobool1116, label %if.end1126, label %if.then1117, !dbg !3811

if.then1117:                                      ; preds = %if.then1113
  %702 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3812
  %703 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3814
  %set1118 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %703, i32 0, i32 13, !dbg !3815
  %postfields1119 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1118, i32 0, i32 15, !dbg !3816
  %704 = load i8*, i8** %postfields1119, align 8, !dbg !3816
  %705 = load i64, i64* %postsize, align 8, !dbg !3817
  %call1120 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %702, i8* %704, i64 %705), !dbg !3818
  store i32 %call1120, i32* %result, align 4, !dbg !3819
  %706 = load i32, i32* %result, align 4, !dbg !3820
  %tobool1121 = icmp ne i32 %706, 0, !dbg !3820
  br i1 %tobool1121, label %if.end1124, label %if.then1122, !dbg !3822

if.then1122:                                      ; preds = %if.then1117
  %707 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3823
  %call1123 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %707, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3824
  store i32 %call1123, i32* %result, align 4, !dbg !3825
  br label %if.end1124, !dbg !3826

if.end1124:                                       ; preds = %if.then1122, %if.then1117
  %708 = load i64, i64* %postsize, align 8, !dbg !3827
  %add1125 = add nsw i64 %708, 2, !dbg !3828
  store i64 %add1125, i64* %included_body, align 8, !dbg !3829
  br label %if.end1126, !dbg !3830

if.end1126:                                       ; preds = %if.end1124, %if.then1113
  br label %if.end1127, !dbg !3831

if.end1127:                                       ; preds = %if.end1126, %if.else1111
  %709 = load i32, i32* %result, align 4, !dbg !3832
  %tobool1128 = icmp ne i32 %709, 0, !dbg !3832
  br i1 %tobool1128, label %if.end1131, label %if.then1129, !dbg !3834

if.then1129:                                      ; preds = %if.end1127
  %710 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3835
  %call1130 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %710, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i64 5), !dbg !3836
  store i32 %call1130, i32* %result, align 4, !dbg !3837
  br label %if.end1131, !dbg !3838

if.end1131:                                       ; preds = %if.then1129, %if.end1127
  %711 = load i64, i64* %included_body, align 8, !dbg !3839
  %add1132 = add nsw i64 %711, 5, !dbg !3839
  store i64 %add1132, i64* %included_body, align 8, !dbg !3839
  br label %if.end1133

if.end1133:                                       ; preds = %if.end1131, %if.then1107
  %712 = load i32, i32* %result, align 4, !dbg !3840
  %tobool1134 = icmp ne i32 %712, 0, !dbg !3840
  br i1 %tobool1134, label %if.then1135, label %if.end1136, !dbg !3842

if.then1135:                                      ; preds = %if.end1133
  %713 = load i32, i32* %result, align 4, !dbg !3843
  store i32 %713, i32* %retval, align 4, !dbg !3844
  br label %return, !dbg !3844

if.end1136:                                       ; preds = %if.end1133
  %714 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3845
  %715 = load i64, i64* %postsize, align 8, !dbg !3846
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %714, i64 %715), !dbg !3847
  br label %if.end1152, !dbg !3848

if.else1137:                                      ; preds = %land.lhs.true1096, %land.lhs.true1092, %if.then1088
  %716 = load i64, i64* %postsize, align 8, !dbg !3849
  %717 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3851
  %postsize1138 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %717, i32 0, i32 1, !dbg !3852
  store i64 %716, i64* %postsize1138, align 8, !dbg !3853
  %718 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3854
  %set1139 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %718, i32 0, i32 13, !dbg !3855
  %postfields1140 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1139, i32 0, i32 15, !dbg !3856
  %719 = load i8*, i8** %postfields1140, align 8, !dbg !3856
  %720 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3857
  %postdata1141 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %720, i32 0, i32 2, !dbg !3858
  store i8* %719, i8** %postdata1141, align 8, !dbg !3859
  %721 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3860
  %sending1142 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %721, i32 0, i32 9, !dbg !3861
  store i32 2, i32* %sending1142, align 8, !dbg !3862
  %722 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3863
  %state1143 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %722, i32 0, i32 17, !dbg !3864
  %fread_func1144 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1143, i32 0, i32 50, !dbg !3865
  store i64 (i8*, i64, i64, i8*)* @readmoredata, i64 (i8*, i64, i64, i8*)** %fread_func1144, align 8, !dbg !3866
  %723 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3867
  %724 = bitcast %struct.connectdata* %723 to i8*, !dbg !3868
  %725 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3869
  %state1145 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %725, i32 0, i32 17, !dbg !3870
  %in1146 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1145, i32 0, i32 51, !dbg !3871
  store i8* %724, i8** %in1146, align 8, !dbg !3872
  %726 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3873
  %727 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3874
  %postsize1147 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %727, i32 0, i32 1, !dbg !3875
  %728 = load i64, i64* %postsize1147, align 8, !dbg !3875
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %726, i64 %728), !dbg !3876
  %729 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3877
  %call1148 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %729, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3878
  store i32 %call1148, i32* %result, align 4, !dbg !3879
  %730 = load i32, i32* %result, align 4, !dbg !3880
  %tobool1149 = icmp ne i32 %730, 0, !dbg !3880
  br i1 %tobool1149, label %if.then1150, label %if.end1151, !dbg !3882

if.then1150:                                      ; preds = %if.else1137
  %731 = load i32, i32* %result, align 4, !dbg !3883
  store i32 %731, i32* %retval, align 4, !dbg !3884
  br label %return, !dbg !3884

if.end1151:                                       ; preds = %if.else1137
  br label %if.end1152

if.end1152:                                       ; preds = %if.end1151, %if.end1136
  br label %if.end1192, !dbg !3885

if.else1153:                                      ; preds = %if.end1084
  %732 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3886
  %call1154 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %732, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3888
  store i32 %call1154, i32* %result, align 4, !dbg !3889
  %733 = load i32, i32* %result, align 4, !dbg !3890
  %tobool1155 = icmp ne i32 %733, 0, !dbg !3890
  br i1 %tobool1155, label %if.then1156, label %if.end1157, !dbg !3892

if.then1156:                                      ; preds = %if.else1153
  %734 = load i32, i32* %result, align 4, !dbg !3893
  store i32 %734, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

if.end1157:                                       ; preds = %if.else1153
  %735 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3895
  %req1158 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %735, i32 0, i32 12, !dbg !3897
  %upload_chunky1159 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1158, i32 0, i32 40, !dbg !3898
  %736 = load i8, i8* %upload_chunky1159, align 1, !dbg !3898
  %tobool1160 = trunc i8 %736 to i1, !dbg !3898
  br i1 %tobool1160, label %land.lhs.true1162, label %if.else1172, !dbg !3899

land.lhs.true1162:                                ; preds = %if.end1157
  %737 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3900
  %bits1163 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %737, i32 0, i32 43, !dbg !3902
  %authneg1164 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1163, i32 0, i32 16, !dbg !3903
  %738 = load i8, i8* %authneg1164, align 1, !dbg !3903
  %tobool1165 = trunc i8 %738 to i1, !dbg !3903
  br i1 %tobool1165, label %if.then1167, label %if.else1172, !dbg !3904

if.then1167:                                      ; preds = %land.lhs.true1162
  %739 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3905
  %call1168 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %739, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i64 5), !dbg !3907
  store i32 %call1168, i32* %result, align 4, !dbg !3908
  %740 = load i32, i32* %result, align 4, !dbg !3909
  %tobool1169 = icmp ne i32 %740, 0, !dbg !3909
  br i1 %tobool1169, label %if.then1170, label %if.end1171, !dbg !3911

if.then1170:                                      ; preds = %if.then1167
  %741 = load i32, i32* %result, align 4, !dbg !3912
  store i32 %741, i32* %retval, align 4, !dbg !3913
  br label %return, !dbg !3913

if.end1171:                                       ; preds = %if.then1167
  br label %if.end1191, !dbg !3914

if.else1172:                                      ; preds = %land.lhs.true1162, %if.end1157
  %742 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3915
  %state1173 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %742, i32 0, i32 17, !dbg !3917
  %infilesize1174 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1173, i32 0, i32 47, !dbg !3918
  %743 = load i64, i64* %infilesize1174, align 8, !dbg !3918
  %tobool1175 = icmp ne i64 %743, 0, !dbg !3915
  br i1 %tobool1175, label %if.then1176, label %if.end1190, !dbg !3919

if.then1176:                                      ; preds = %if.else1172
  %744 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3920
  %745 = load i64, i64* %postsize, align 8, !dbg !3922
  %tobool1177 = icmp ne i64 %745, 0, !dbg !3922
  br i1 %tobool1177, label %cond.true1178, label %cond.false1179, !dbg !3922

cond.true1178:                                    ; preds = %if.then1176
  %746 = load i64, i64* %postsize, align 8, !dbg !3923
  br label %cond.end1180, !dbg !3925

cond.false1179:                                   ; preds = %if.then1176
  br label %cond.end1180, !dbg !3926

cond.end1180:                                     ; preds = %cond.false1179, %cond.true1178
  %cond1181 = phi i64 [ %746, %cond.true1178 ], [ -1, %cond.false1179 ], !dbg !3928
  call void @Curl_pgrsSetUploadSize(%struct.Curl_easy* %744, i64 %cond1181), !dbg !3930
  %747 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3931
  %bits1182 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %747, i32 0, i32 43, !dbg !3933
  %authneg1183 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits1182, i32 0, i32 16, !dbg !3934
  %748 = load i8, i8* %authneg1183, align 1, !dbg !3934
  %tobool1184 = trunc i8 %748 to i1, !dbg !3934
  br i1 %tobool1184, label %if.end1189, label %if.then1185, !dbg !3935

if.then1185:                                      ; preds = %cond.end1180
  %749 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3936
  %postdata1186 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %749, i32 0, i32 2, !dbg !3938
  %750 = bitcast i8** %postdata1186 to i8*, !dbg !3939
  %751 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3940
  %postdata1187 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %751, i32 0, i32 2, !dbg !3941
  store i8* %750, i8** %postdata1187, align 8, !dbg !3942
  %752 = load i64, i64* %postsize, align 8, !dbg !3943
  %753 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3944
  %postsize1188 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %753, i32 0, i32 1, !dbg !3945
  store i64 %752, i64* %postsize1188, align 8, !dbg !3946
  br label %if.end1189, !dbg !3947

if.end1189:                                       ; preds = %if.then1185, %cond.end1180
  br label %if.end1190, !dbg !3948

if.end1190:                                       ; preds = %if.end1189, %if.else1172
  br label %if.end1191

if.end1191:                                       ; preds = %if.end1190, %if.end1171
  br label %if.end1192

if.end1192:                                       ; preds = %if.end1191, %if.end1152
  %754 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3949
  %755 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3950
  %756 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3951
  %info1193 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %756, i32 0, i32 19, !dbg !3952
  %request_size1194 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info1193, i32 0, i32 6, !dbg !3953
  %757 = load i64, i64* %included_body, align 8, !dbg !3954
  %call1195 = call i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %754, %struct.connectdata* %755, i64* %request_size1194, i64 %757, i32 0), !dbg !3955
  store i32 %call1195, i32* %result, align 4, !dbg !3956
  %758 = load i32, i32* %result, align 4, !dbg !3957
  %tobool1196 = icmp ne i32 %758, 0, !dbg !3957
  br i1 %tobool1196, label %if.then1197, label %if.else1198, !dbg !3959

if.then1197:                                      ; preds = %if.end1192
  %759 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3960
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %759, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i32 0, i32 0)), !dbg !3961
  br label %if.end1210, !dbg !3961

if.else1198:                                      ; preds = %if.end1192
  %760 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3962
  %761 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3963
  %readbytecount1199 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %761, i32 0, i32 5, !dbg !3964
  %762 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3965
  %postdata1200 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %762, i32 0, i32 2, !dbg !3966
  %763 = load i8*, i8** %postdata1200, align 8, !dbg !3966
  %tobool1201 = icmp ne i8* %763, null, !dbg !3965
  %cond1202 = select i1 %tobool1201, i32 0, i32 -1, !dbg !3965
  %764 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3967
  %postdata1203 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %764, i32 0, i32 2, !dbg !3968
  %765 = load i8*, i8** %postdata1203, align 8, !dbg !3968
  %tobool1204 = icmp ne i8* %765, null, !dbg !3967
  br i1 %tobool1204, label %cond.true1205, label %cond.false1207, !dbg !3967

cond.true1205:                                    ; preds = %if.else1198
  %766 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !3969
  %writebytecount1206 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %766, i32 0, i32 6, !dbg !3971
  br label %cond.end1208, !dbg !3972

cond.false1207:                                   ; preds = %if.else1198
  br label %cond.end1208, !dbg !3973

cond.end1208:                                     ; preds = %cond.false1207, %cond.true1205
  %cond1209 = phi i64* [ %writebytecount1206, %cond.true1205 ], [ null, %cond.false1207 ], !dbg !3975
  call void @Curl_setup_transfer(%struct.connectdata* %760, i32 0, i64 -1, i1 zeroext true, i64* %readbytecount1199, i32 %cond1202, i64* %cond1209), !dbg !3977
  br label %if.end1210

if.end1210:                                       ; preds = %cond.end1208, %if.then1197
  br label %sw.epilog1234, !dbg !3978

sw.default1211:                                   ; preds = %if.end866
  %767 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3979
  %call1212 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %767, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 2), !dbg !3980
  store i32 %call1212, i32* %result, align 4, !dbg !3981
  %768 = load i32, i32* %result, align 4, !dbg !3982
  %tobool1213 = icmp ne i32 %768, 0, !dbg !3982
  br i1 %tobool1213, label %if.then1214, label %if.end1215, !dbg !3984

if.then1214:                                      ; preds = %sw.default1211
  %769 = load i32, i32* %result, align 4, !dbg !3985
  store i32 %769, i32* %retval, align 4, !dbg !3986
  br label %return, !dbg !3986

if.end1215:                                       ; preds = %sw.default1211
  %770 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer, align 8, !dbg !3987
  %771 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3988
  %772 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3989
  %info1216 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %772, i32 0, i32 19, !dbg !3990
  %request_size1217 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info1216, i32 0, i32 6, !dbg !3991
  %call1218 = call i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %770, %struct.connectdata* %771, i64* %request_size1217, i64 0, i32 0), !dbg !3992
  store i32 %call1218, i32* %result, align 4, !dbg !3993
  %773 = load i32, i32* %result, align 4, !dbg !3994
  %tobool1219 = icmp ne i32 %773, 0, !dbg !3994
  br i1 %tobool1219, label %if.then1220, label %if.else1221, !dbg !3996

if.then1220:                                      ; preds = %if.end1215
  %774 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3997
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %774, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0)), !dbg !3998
  br label %if.end1233, !dbg !3998

if.else1221:                                      ; preds = %if.end1215
  %775 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !3999
  %776 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4000
  %readbytecount1222 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %776, i32 0, i32 5, !dbg !4001
  %777 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4002
  %postdata1223 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %777, i32 0, i32 2, !dbg !4003
  %778 = load i8*, i8** %postdata1223, align 8, !dbg !4003
  %tobool1224 = icmp ne i8* %778, null, !dbg !4002
  %cond1225 = select i1 %tobool1224, i32 0, i32 -1, !dbg !4002
  %779 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4004
  %postdata1226 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %779, i32 0, i32 2, !dbg !4005
  %780 = load i8*, i8** %postdata1226, align 8, !dbg !4005
  %tobool1227 = icmp ne i8* %780, null, !dbg !4004
  br i1 %tobool1227, label %cond.true1228, label %cond.false1230, !dbg !4004

cond.true1228:                                    ; preds = %if.else1221
  %781 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4006
  %writebytecount1229 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %781, i32 0, i32 6, !dbg !4008
  br label %cond.end1231, !dbg !4009

cond.false1230:                                   ; preds = %if.else1221
  br label %cond.end1231, !dbg !4010

cond.end1231:                                     ; preds = %cond.false1230, %cond.true1228
  %cond1232 = phi i64* [ %writebytecount1229, %cond.true1228 ], [ null, %cond.false1230 ], !dbg !4012
  call void @Curl_setup_transfer(%struct.connectdata* %775, i32 0, i64 -1, i1 zeroext true, i64* %readbytecount1222, i32 %cond1225, i64* %cond1232), !dbg !4014
  br label %if.end1233

if.end1233:                                       ; preds = %cond.end1231, %if.then1220
  br label %sw.epilog1234, !dbg !4015

sw.epilog1234:                                    ; preds = %if.end1233, %if.end1210, %if.end1008, %if.end948, %if.end885
  %782 = load i32, i32* %result, align 4, !dbg !4016
  %tobool1235 = icmp ne i32 %782, 0, !dbg !4016
  br i1 %tobool1235, label %if.then1236, label %if.end1237, !dbg !4018

if.then1236:                                      ; preds = %sw.epilog1234
  %783 = load i32, i32* %result, align 4, !dbg !4019
  store i32 %783, i32* %retval, align 4, !dbg !4020
  br label %return, !dbg !4020

if.end1237:                                       ; preds = %sw.epilog1234
  %784 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4021
  %writebytecount1238 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %784, i32 0, i32 6, !dbg !4023
  %785 = load i64, i64* %writebytecount1238, align 8, !dbg !4023
  %tobool1239 = icmp ne i64 %785, 0, !dbg !4021
  br i1 %tobool1239, label %if.then1240, label %if.end1256, !dbg !4024

if.then1240:                                      ; preds = %if.end1237
  %786 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4025
  %787 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4027
  %writebytecount1241 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %787, i32 0, i32 6, !dbg !4028
  %788 = load i64, i64* %writebytecount1241, align 8, !dbg !4028
  call void @Curl_pgrsSetUploadCounter(%struct.Curl_easy* %786, i64 %788), !dbg !4029
  %789 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4030
  %call1242 = call i32 @Curl_pgrsUpdate(%struct.connectdata* %789), !dbg !4032
  %tobool1243 = icmp ne i32 %call1242, 0, !dbg !4032
  br i1 %tobool1243, label %if.then1244, label %if.end1245, !dbg !4033

if.then1244:                                      ; preds = %if.then1240
  store i32 42, i32* %result, align 4, !dbg !4034
  br label %if.end1245, !dbg !4035

if.end1245:                                       ; preds = %if.then1244, %if.then1240
  %790 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4036
  %writebytecount1246 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %790, i32 0, i32 6, !dbg !4038
  %791 = load i64, i64* %writebytecount1246, align 8, !dbg !4038
  %792 = load i64, i64* %postsize, align 8, !dbg !4039
  %cmp1247 = icmp sge i64 %791, %792, !dbg !4040
  br i1 %cmp1247, label %if.then1249, label %if.end1255, !dbg !4041

if.then1249:                                      ; preds = %if.end1245
  %793 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4042
  %794 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4044
  %writebytecount1250 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %794, i32 0, i32 6, !dbg !4045
  %795 = load i64, i64* %writebytecount1250, align 8, !dbg !4045
  %796 = load i64, i64* %postsize, align 8, !dbg !4046
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %793, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.74, i32 0, i32 0), i64 %795, i64 %796), !dbg !4047
  %797 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4048
  %req1251 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %797, i32 0, i32 12, !dbg !4049
  %upload_done = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1251, i32 0, i32 32, !dbg !4050
  store i8 1, i8* %upload_done, align 8, !dbg !4051
  %798 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4052
  %req1252 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %798, i32 0, i32 12, !dbg !4053
  %keepon = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1252, i32 0, i32 31, !dbg !4054
  %799 = load i32, i32* %keepon, align 4, !dbg !4055
  %and1253 = and i32 %799, -3, !dbg !4055
  store i32 %and1253, i32* %keepon, align 4, !dbg !4055
  %800 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4056
  %req1254 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %800, i32 0, i32 12, !dbg !4057
  %exp100 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1254, i32 0, i32 23, !dbg !4058
  store i32 0, i32* %exp100, align 8, !dbg !4059
  br label %if.end1255, !dbg !4060

if.end1255:                                       ; preds = %if.then1249, %if.end1245
  br label %if.end1256, !dbg !4061

if.end1256:                                       ; preds = %if.end1255, %if.end1237
  %801 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4062
  %httpversion1257 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %801, i32 0, i32 29, !dbg !4064
  %802 = load i32, i32* %httpversion1257, align 8, !dbg !4064
  %cmp1258 = icmp eq i32 %802, 20, !dbg !4065
  br i1 %cmp1258, label %land.lhs.true1260, label %if.end1268, !dbg !4066

land.lhs.true1260:                                ; preds = %if.end1256
  %803 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4067
  %req1261 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %803, i32 0, i32 12, !dbg !4069
  %upload_chunky1262 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1261, i32 0, i32 40, !dbg !4070
  %804 = load i8, i8* %upload_chunky1262, align 1, !dbg !4070
  %tobool1263 = trunc i8 %804 to i1, !dbg !4070
  br i1 %tobool1263, label %if.then1265, label %if.end1268, !dbg !4071

if.then1265:                                      ; preds = %land.lhs.true1260
  %805 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4072
  %req1266 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %805, i32 0, i32 12, !dbg !4073
  %upload_chunky1267 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req1266, i32 0, i32 40, !dbg !4074
  store i8 0, i8* %upload_chunky1267, align 1, !dbg !4075
  br label %if.end1268, !dbg !4072

if.end1268:                                       ; preds = %if.then1265, %land.lhs.true1260, %if.end1256
  %806 = load i32, i32* %result, align 4, !dbg !4076
  store i32 %806, i32* %retval, align 4, !dbg !4077
  br label %return, !dbg !4077

return:                                           ; preds = %if.end1268, %if.then1236, %if.then1214, %if.then1170, %if.then1156, %if.then1150, %if.then1135, %if.then1102, %if.then1078, %if.then1060, %if.then1052, %if.then1007, %if.then988, %if.then983, %if.then975, %if.then946, %if.then942, %if.then929, %if.then925, %if.then921, %if.then916, %if.then911, %if.then890, %if.then878, %if.then865, %if.then861, %if.then856, %if.then778, %if.then762, %if.then624, %if.then612, %if.then608, %if.then600, %if.then528, %if.then506, %if.then483, %if.then437, %if.else367, %if.then298, %if.then244, %if.then206, %if.else171, %if.then132, %if.then92, %if.then58, %if.then22, %if.then8, %if.then5
  %807 = load i32, i32* %retval, align 4, !dbg !4078
  ret i32 %807, !dbg !4078
}

; Function Attrs: nounwind uwtable
define i32 @Curl_http_done(%struct.connectdata* %conn, i32 %status, i1 zeroext %premature) #0 !dbg !1897 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %status.addr = alloca i32, align 4
  %premature.addr = alloca i8, align 1
  %data = alloca %struct.Curl_easy*, align 8
  %http = alloca %struct.HTTP*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4079, metadata !1950), !dbg !4080
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !4081, metadata !1950), !dbg !4082
  %frombool = zext i1 %premature to i8
  store i8 %frombool, i8* %premature.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %premature.addr, metadata !4083, metadata !1950), !dbg !4084
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4085, metadata !1950), !dbg !4086
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4087
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !4088
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4088
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !4086
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !4089, metadata !1950), !dbg !4090
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4091
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 12, !dbg !4092
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !4093
  %3 = load i8*, i8** %protop, align 8, !dbg !4093
  %4 = bitcast i8* %3 to %struct.HTTP*, !dbg !4091
  store %struct.HTTP* %4, %struct.HTTP** %http, align 8, !dbg !4090
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4094
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 17, !dbg !4095
  %authhost = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 23, !dbg !4096
  %multipass = getelementptr inbounds %struct.auth, %struct.auth* %authhost, i32 0, i32 4, !dbg !4097
  store i8 0, i8* %multipass, align 1, !dbg !4098
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4099
  %state2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 17, !dbg !4100
  %authproxy = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state2, i32 0, i32 24, !dbg !4101
  %multipass3 = getelementptr inbounds %struct.auth, %struct.auth* %authproxy, i32 0, i32 4, !dbg !4102
  store i8 0, i8* %multipass3, align 1, !dbg !4103
  br label %do.body, !dbg !4104

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4105

do.end:                                           ; preds = %do.body
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4108
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !4109
  %seek_func = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 16, !dbg !4110
  %8 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** %seek_func, align 8, !dbg !4110
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4111
  %seek_func4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 60, !dbg !4112
  store i32 (i8*, i64, i32)* %8, i32 (i8*, i64, i32)** %seek_func4, align 8, !dbg !4113
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4114
  %set5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !4115
  %seek_client = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set5, i32 0, i32 36, !dbg !4116
  %11 = load i8*, i8** %seek_client, align 8, !dbg !4116
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4117
  %seek_client6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 61, !dbg !4118
  store i8* %11, i8** %seek_client6, align 8, !dbg !4119
  %13 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4120
  %tobool = icmp ne %struct.HTTP* %13, null, !dbg !4120
  br i1 %tobool, label %if.end, label %if.then, !dbg !4122

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !4123
  br label %return, !dbg !4123

if.end:                                           ; preds = %do.end
  %14 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4124
  %send_buffer = getelementptr inbounds %struct.HTTP, %struct.HTTP* %14, i32 0, i32 10, !dbg !4126
  %15 = load i8*, i8** %send_buffer, align 8, !dbg !4126
  %tobool7 = icmp ne i8* %15, null, !dbg !4124
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4127

if.then8:                                         ; preds = %if.end
  %16 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4128
  %send_buffer9 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %16, i32 0, i32 10, !dbg !4130
  %17 = load i8*, i8** %send_buffer9, align 8, !dbg !4130
  %18 = bitcast i8* %17 to %struct.Curl_send_buffer*, !dbg !4128
  call void @Curl_add_buffer_free(%struct.Curl_send_buffer* %18), !dbg !4131
  %19 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4132
  %send_buffer10 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %19, i32 0, i32 10, !dbg !4133
  store i8* null, i8** %send_buffer10, align 8, !dbg !4134
  br label %if.end11, !dbg !4135

if.end11:                                         ; preds = %if.then8, %if.end
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4136
  %set12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 13, !dbg !4138
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set12, i32 0, i32 71, !dbg !4139
  %21 = load i32, i32* %httpreq, align 8, !dbg !4139
  %cmp = icmp eq i32 3, %21, !dbg !4140
  br i1 %cmp, label %if.then13, label %if.else, !dbg !4141

if.then13:                                        ; preds = %if.end11
  %22 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4142
  %readbytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %22, i32 0, i32 5, !dbg !4144
  %23 = load i64, i64* %readbytecount, align 8, !dbg !4144
  %24 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4145
  %writebytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %24, i32 0, i32 6, !dbg !4146
  %25 = load i64, i64* %writebytecount, align 8, !dbg !4146
  %add = add nsw i64 %23, %25, !dbg !4147
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4148
  %req14 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 12, !dbg !4149
  %bytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req14, i32 0, i32 4, !dbg !4150
  store i64 %add, i64* %bytecount, align 8, !dbg !4151
  %27 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4152
  %sendit = getelementptr inbounds %struct.HTTP, %struct.HTTP* %27, i32 0, i32 0, !dbg !4153
  call void @Curl_formclean(%struct.FormData** %sendit), !dbg !4154
  %28 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4155
  %form = getelementptr inbounds %struct.HTTP, %struct.HTTP* %28, i32 0, i32 7, !dbg !4157
  %fp = getelementptr inbounds %struct.Form, %struct.Form* %form, i32 0, i32 2, !dbg !4158
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !4158
  %tobool15 = icmp ne %struct._IO_FILE* %29, null, !dbg !4155
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !4159

if.then16:                                        ; preds = %if.then13
  %30 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4160
  %form17 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %30, i32 0, i32 7, !dbg !4162
  %fp18 = getelementptr inbounds %struct.Form, %struct.Form* %form17, i32 0, i32 2, !dbg !4163
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp18, align 8, !dbg !4163
  %call = call i32 @fclose(%struct._IO_FILE* %31), !dbg !4164
  %32 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4165
  %form19 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %32, i32 0, i32 7, !dbg !4166
  %fp20 = getelementptr inbounds %struct.Form, %struct.Form* %form19, i32 0, i32 2, !dbg !4167
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp20, align 8, !dbg !4168
  br label %if.end21, !dbg !4169

if.end21:                                         ; preds = %if.then16, %if.then13
  br label %if.end32, !dbg !4170

if.else:                                          ; preds = %if.end11
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4171
  %set22 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 13, !dbg !4173
  %httpreq23 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set22, i32 0, i32 71, !dbg !4174
  %34 = load i32, i32* %httpreq23, align 8, !dbg !4174
  %cmp24 = icmp eq i32 4, %34, !dbg !4175
  br i1 %cmp24, label %if.then25, label %if.end31, !dbg !4176

if.then25:                                        ; preds = %if.else
  %35 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4177
  %readbytecount26 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %35, i32 0, i32 5, !dbg !4178
  %36 = load i64, i64* %readbytecount26, align 8, !dbg !4178
  %37 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4179
  %writebytecount27 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %37, i32 0, i32 6, !dbg !4180
  %38 = load i64, i64* %writebytecount27, align 8, !dbg !4180
  %add28 = add nsw i64 %36, %38, !dbg !4181
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4182
  %req29 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %39, i32 0, i32 12, !dbg !4183
  %bytecount30 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req29, i32 0, i32 4, !dbg !4184
  store i64 %add28, i64* %bytecount30, align 8, !dbg !4185
  br label %if.end31, !dbg !4182

if.end31:                                         ; preds = %if.then25, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end21
  %40 = load i32, i32* %status.addr, align 4, !dbg !4186
  %tobool33 = icmp ne i32 %40, 0, !dbg !4186
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !4188

if.then34:                                        ; preds = %if.end32
  %41 = load i32, i32* %status.addr, align 4, !dbg !4189
  store i32 %41, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

if.end35:                                         ; preds = %if.end32
  %42 = load i8, i8* %premature.addr, align 1, !dbg !4191
  %tobool36 = trunc i8 %42 to i1, !dbg !4191
  br i1 %tobool36, label %if.end48, label %land.lhs.true, !dbg !4193

land.lhs.true:                                    ; preds = %if.end35
  %43 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4194
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %43, i32 0, i32 43, !dbg !4195
  %retry = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 14, !dbg !4196
  %44 = load i8, i8* %retry, align 1, !dbg !4196
  %tobool37 = trunc i8 %44 to i1, !dbg !4196
  br i1 %tobool37, label %if.end48, label %land.lhs.true38, !dbg !4197

land.lhs.true38:                                  ; preds = %land.lhs.true
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4198
  %set39 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 13, !dbg !4199
  %connect_only = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set39, i32 0, i32 121, !dbg !4200
  %46 = load i8, i8* %connect_only, align 1, !dbg !4200
  %tobool40 = trunc i8 %46 to i1, !dbg !4200
  br i1 %tobool40, label %if.end48, label %land.lhs.true41, !dbg !4201

land.lhs.true41:                                  ; preds = %land.lhs.true38
  %47 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4202
  %readbytecount42 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %47, i32 0, i32 5, !dbg !4203
  %48 = load i64, i64* %readbytecount42, align 8, !dbg !4203
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4204
  %req43 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %49, i32 0, i32 12, !dbg !4205
  %headerbytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req43, i32 0, i32 6, !dbg !4206
  %50 = load i64, i64* %headerbytecount, align 8, !dbg !4206
  %add44 = add nsw i64 %48, %50, !dbg !4207
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4208
  %req45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 12, !dbg !4209
  %deductheadercount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req45, i32 0, i32 7, !dbg !4210
  %52 = load i64, i64* %deductheadercount, align 8, !dbg !4210
  %sub = sub nsw i64 %add44, %52, !dbg !4211
  %cmp46 = icmp sle i64 %sub, 0, !dbg !4212
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !4213

if.then47:                                        ; preds = %land.lhs.true41
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4215
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i32 0, i32 0)), !dbg !4217
  store i32 52, i32* %retval, align 4, !dbg !4218
  br label %return, !dbg !4218

if.end48:                                         ; preds = %land.lhs.true41, %land.lhs.true38, %land.lhs.true, %if.end35
  store i32 0, i32* %retval, align 4, !dbg !4219
  br label %return, !dbg !4219

return:                                           ; preds = %if.end48, %if.then47, %if.then34, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !4220
  ret i32 %54, !dbg !4220
}

; Function Attrs: nounwind uwtable
define i32 @Curl_http_connect(%struct.connectdata* %conn, i8* %done) #0 !dbg !1896 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4221, metadata !1950), !dbg !4222
  store i8* %done, i8** %done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %done.addr, metadata !4223, metadata !1950), !dbg !4224
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4225, metadata !1950), !dbg !4226
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4227
  call void @Curl_conncontrol(%struct.connectdata* %0, i32 0), !dbg !4227
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4228
  %call = call i32 @Curl_proxy_connect(%struct.connectdata* %1, i32 0), !dbg !4229
  store i32 %call, i32* %result, align 4, !dbg !4230
  %2 = load i32, i32* %result, align 4, !dbg !4231
  %tobool = icmp ne i32 %2, 0, !dbg !4231
  br i1 %tobool, label %if.then, label %if.end, !dbg !4233

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !4234
  store i32 %3, i32* %retval, align 4, !dbg !4235
  br label %return, !dbg !4235

if.end:                                           ; preds = %entry
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4236
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 43, !dbg !4238
  %proxy_connect_closed = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 24, !dbg !4239
  %5 = load i8, i8* %proxy_connect_closed, align 1, !dbg !4239
  %tobool1 = trunc i8 %5 to i1, !dbg !4239
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4240

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4241
  br label %return, !dbg !4241

if.end3:                                          ; preds = %if.end
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4242
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 16, !dbg !4242
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 2, !dbg !4242
  %7 = load i32, i32* %proxytype, align 8, !dbg !4242
  %cmp = icmp eq i32 %7, 2, !dbg !4242
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !4242

land.lhs.true:                                    ; preds = %if.end3
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4244
  %bits4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 43, !dbg !4244
  %proxy_ssl_connected = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits4, i32 0, i32 31, !dbg !4244
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %proxy_ssl_connected, i64 0, i64 0, !dbg !4244
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4244
  %tobool5 = trunc i8 %9 to i1, !dbg !4244
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !4244

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4246
  br label %return, !dbg !4246

if.end7:                                          ; preds = %land.lhs.true, %if.end3
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4247
  %tunnel_state = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 72, !dbg !4249
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state, i64 0, i64 0, !dbg !4247
  %11 = load i32, i32* %arrayidx8, align 8, !dbg !4247
  %cmp9 = icmp eq i32 %11, 1, !dbg !4250
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4251

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !4252
  br label %return, !dbg !4252

if.end11:                                         ; preds = %if.end7
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4253
  %given = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 48, !dbg !4255
  %13 = load %struct.Curl_handler*, %struct.Curl_handler** %given, align 8, !dbg !4255
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %13, i32 0, i32 15, !dbg !4256
  %14 = load i32, i32* %protocol, align 8, !dbg !4256
  %and = and i32 %14, 2, !dbg !4257
  %tobool12 = icmp ne i32 %and, 0, !dbg !4257
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !4258

if.then13:                                        ; preds = %if.end11
  store i32 7, i32* %result, align 4, !dbg !4259
  %15 = load i32, i32* %result, align 4, !dbg !4261
  %tobool14 = icmp ne i32 %15, 0, !dbg !4261
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4263

if.then15:                                        ; preds = %if.then13
  %16 = load i32, i32* %result, align 4, !dbg !4264
  store i32 %16, i32* %retval, align 4, !dbg !4265
  br label %return, !dbg !4265

if.end16:                                         ; preds = %if.then13
  br label %if.end17, !dbg !4266

if.else:                                          ; preds = %if.end11
  %17 = load i8*, i8** %done.addr, align 8, !dbg !4267
  store i8 1, i8* %17, align 1, !dbg !4268
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  store i32 0, i32* %retval, align 4, !dbg !4269
  br label %return, !dbg !4269

return:                                           ; preds = %if.end17, %if.then15, %if.then10, %if.then6, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !4270
  ret i32 %18, !dbg !4270
}

; Function Attrs: nounwind uwtable
define internal i32 @http_getsock_do(%struct.connectdata* %conn, i32* %socks, i32 %numsocks) #0 !dbg !1919 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %socks.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4271, metadata !1950), !dbg !4272
  store i32* %socks, i32** %socks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %socks.addr, metadata !4273, metadata !1950), !dbg !4274
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !4275, metadata !1950), !dbg !4276
  %0 = load i32, i32* %numsocks.addr, align 4, !dbg !4277
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4278
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 33, !dbg !4279
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 0, !dbg !4278
  %2 = load i32, i32* %arrayidx, align 8, !dbg !4278
  %3 = load i32*, i32** %socks.addr, align 8, !dbg !4280
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !4280
  store i32 %2, i32* %arrayidx1, align 4, !dbg !4281
  ret i32 65536, !dbg !4282
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i8* @Curl_checkheaders(%struct.connectdata* %conn, i8* %thisheader) #0 !dbg !1856 {
entry:
  %retval = alloca i8*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %thisheader.addr = alloca i8*, align 8
  %head = alloca %struct.curl_slist*, align 8
  %thislen = alloca i64, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4283, metadata !1950), !dbg !4284
  store i8* %thisheader, i8** %thisheader.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thisheader.addr, metadata !4285, metadata !1950), !dbg !4286
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %head, metadata !4287, metadata !1950), !dbg !4288
  call void @llvm.dbg.declare(metadata i64* %thislen, metadata !4289, metadata !1950), !dbg !4290
  %0 = load i8*, i8** %thisheader.addr, align 8, !dbg !4291
  %call = call i64 @strlen(i8* %0) #8, !dbg !4292
  store i64 %call, i64* %thislen, align 8, !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4293, metadata !1950), !dbg !4294
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4295
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 0, !dbg !4296
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4296
  store %struct.Curl_easy* %2, %struct.Curl_easy** %data, align 8, !dbg !4294
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4297
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 13, !dbg !4299
  %headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 54, !dbg !4300
  %4 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !4300
  store %struct.curl_slist* %4, %struct.curl_slist** %head, align 8, !dbg !4301
  br label %for.cond, !dbg !4302

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4303
  %tobool = icmp ne %struct.curl_slist* %5, null, !dbg !4306
  br i1 %tobool, label %for.body, label %for.end, !dbg !4306

for.body:                                         ; preds = %for.cond
  %6 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4307
  %data2 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %6, i32 0, i32 0, !dbg !4307
  %7 = load i8*, i8** %data2, align 8, !dbg !4307
  %8 = load i8*, i8** %thisheader.addr, align 8, !dbg !4307
  %9 = load i64, i64* %thislen, align 8, !dbg !4307
  %call3 = call i32 @Curl_strncasecompare(i8* %7, i8* %8, i64 %9), !dbg !4307
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4307
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4310

if.then:                                          ; preds = %for.body
  %10 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4311
  %data5 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %10, i32 0, i32 0, !dbg !4312
  %11 = load i8*, i8** %data5, align 8, !dbg !4312
  store i8* %11, i8** %retval, align 8, !dbg !4313
  br label %return, !dbg !4313

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4314

for.inc:                                          ; preds = %if.end
  %12 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4315
  %next = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %12, i32 0, i32 1, !dbg !4317
  %13 = load %struct.curl_slist*, %struct.curl_slist** %next, align 8, !dbg !4317
  store %struct.curl_slist* %13, %struct.curl_slist** %head, align 8, !dbg !4318
  br label %for.cond, !dbg !4319

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !4320
  br label %return, !dbg !4320

return:                                           ; preds = %for.end, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !4321
  ret i8* %14, !dbg !4321
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

declare i32 @Curl_strncasecompare(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define i8* @Curl_checkProxyheaders(%struct.connectdata* %conn, i8* %thisheader) #0 !dbg !1859 {
entry:
  %retval = alloca i8*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %thisheader.addr = alloca i8*, align 8
  %head = alloca %struct.curl_slist*, align 8
  %thislen = alloca i64, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4322, metadata !1950), !dbg !4323
  store i8* %thisheader, i8** %thisheader.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thisheader.addr, metadata !4324, metadata !1950), !dbg !4325
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %head, metadata !4326, metadata !1950), !dbg !4327
  call void @llvm.dbg.declare(metadata i64* %thislen, metadata !4328, metadata !1950), !dbg !4329
  %0 = load i8*, i8** %thisheader.addr, align 8, !dbg !4330
  %call = call i64 @strlen(i8* %0) #8, !dbg !4331
  store i64 %call, i64* %thislen, align 8, !dbg !4329
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4332, metadata !1950), !dbg !4333
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4334
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 0, !dbg !4335
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4335
  store %struct.Curl_easy* %2, %struct.Curl_easy** %data, align 8, !dbg !4333
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4336
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !4338
  %proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 4, !dbg !4339
  %4 = load i8, i8* %proxy, align 1, !dbg !4339
  %tobool = trunc i8 %4 to i1, !dbg !4339
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !4340

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4341
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 13, !dbg !4343
  %sep_headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 57, !dbg !4344
  %6 = load i8, i8* %sep_headers, align 8, !dbg !4344
  %tobool2 = trunc i8 %6 to i1, !dbg !4344
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !4345

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4346
  %set3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 13, !dbg !4347
  %proxyheaders = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set3, i32 0, i32 55, !dbg !4348
  %8 = load %struct.curl_slist*, %struct.curl_slist** %proxyheaders, align 8, !dbg !4348
  br label %cond.end, !dbg !4349

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4351
  %set4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 13, !dbg !4352
  %headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set4, i32 0, i32 54, !dbg !4353
  %10 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !4353
  br label %cond.end, !dbg !4354

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.curl_slist* [ %8, %cond.true ], [ %10, %cond.false ], !dbg !4356
  store %struct.curl_slist* %cond, %struct.curl_slist** %head, align 8, !dbg !4358
  br label %for.cond, !dbg !4359

for.cond:                                         ; preds = %for.inc, %cond.end
  %11 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4360
  %tobool5 = icmp ne %struct.curl_slist* %11, null, !dbg !4362
  br i1 %tobool5, label %for.body, label %for.end, !dbg !4362

for.body:                                         ; preds = %for.cond
  %12 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4364
  %data6 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %12, i32 0, i32 0, !dbg !4364
  %13 = load i8*, i8** %data6, align 8, !dbg !4364
  %14 = load i8*, i8** %thisheader.addr, align 8, !dbg !4364
  %15 = load i64, i64* %thislen, align 8, !dbg !4364
  %call7 = call i32 @Curl_strncasecompare(i8* %13, i8* %14, i64 %15), !dbg !4364
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4364
  br i1 %tobool8, label %if.then, label %if.end, !dbg !4367

if.then:                                          ; preds = %for.body
  %16 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4368
  %data9 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %16, i32 0, i32 0, !dbg !4369
  %17 = load i8*, i8** %data9, align 8, !dbg !4369
  store i8* %17, i8** %retval, align 8, !dbg !4370
  br label %return, !dbg !4370

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4371

for.inc:                                          ; preds = %if.end
  %18 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !4372
  %next = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %18, i32 0, i32 1, !dbg !4374
  %19 = load %struct.curl_slist*, %struct.curl_slist** %next, align 8, !dbg !4374
  store %struct.curl_slist* %19, %struct.curl_slist** %head, align 8, !dbg !4375
  br label %for.cond, !dbg !4376

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !4378
  br label %return, !dbg !4378

return:                                           ; preds = %for.end, %if.then
  %20 = load i8*, i8** %retval, align 8, !dbg !4379
  ret i8* %20, !dbg !4379
}

; Function Attrs: nounwind uwtable
define i8* @Curl_copy_header_value(i8* %header) #0 !dbg !1860 {
entry:
  %retval = alloca i8*, align 8
  %header.addr = alloca i8*, align 8
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  %value = alloca i8*, align 8
  %len = alloca i64, align 8
  store i8* %header, i8** %header.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %header.addr, metadata !4380, metadata !1950), !dbg !4381
  call void @llvm.dbg.declare(metadata i8** %start, metadata !4382, metadata !1950), !dbg !4383
  call void @llvm.dbg.declare(metadata i8** %end, metadata !4384, metadata !1950), !dbg !4385
  call void @llvm.dbg.declare(metadata i8** %value, metadata !4386, metadata !1950), !dbg !4387
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4388, metadata !1950), !dbg !4389
  br label %do.body, !dbg !4390

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4391

do.end:                                           ; preds = %do.body
  br label %while.cond, !dbg !4394

while.cond:                                       ; preds = %while.body, %do.end
  %0 = load i8*, i8** %header.addr, align 8, !dbg !4395
  %1 = load i8, i8* %0, align 1, !dbg !4397
  %conv = sext i8 %1 to i32, !dbg !4397
  %tobool = icmp ne i32 %conv, 0, !dbg !4397
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4398

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %header.addr, align 8, !dbg !4399
  %3 = load i8, i8* %2, align 1, !dbg !4401
  %conv1 = sext i8 %3 to i32, !dbg !4401
  %cmp = icmp ne i32 %conv1, 58, !dbg !4402
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !4403

while.body:                                       ; preds = %land.end
  %5 = load i8*, i8** %header.addr, align 8, !dbg !4405
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !4405
  store i8* %incdec.ptr, i8** %header.addr, align 8, !dbg !4405
  br label %while.cond, !dbg !4406

while.end:                                        ; preds = %land.end
  %6 = load i8*, i8** %header.addr, align 8, !dbg !4408
  %7 = load i8, i8* %6, align 1, !dbg !4410
  %tobool3 = icmp ne i8 %7, 0, !dbg !4410
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4411

if.then:                                          ; preds = %while.end
  %8 = load i8*, i8** %header.addr, align 8, !dbg !4412
  %incdec.ptr4 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4412
  store i8* %incdec.ptr4, i8** %header.addr, align 8, !dbg !4412
  br label %if.end, !dbg !4412

if.end:                                           ; preds = %if.then, %while.end
  %9 = load i8*, i8** %header.addr, align 8, !dbg !4413
  store i8* %9, i8** %start, align 8, !dbg !4414
  br label %while.cond5, !dbg !4415

while.cond5:                                      ; preds = %while.body13, %if.end
  %10 = load i8*, i8** %start, align 8, !dbg !4416
  %11 = load i8, i8* %10, align 1, !dbg !4417
  %conv6 = sext i8 %11 to i32, !dbg !4417
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !4417
  br i1 %tobool7, label %land.rhs8, label %land.end12, !dbg !4418

land.rhs8:                                        ; preds = %while.cond5
  %12 = load i8*, i8** %start, align 8, !dbg !4419
  %13 = load i8, i8* %12, align 1, !dbg !4419
  %conv9 = zext i8 %13 to i32, !dbg !4419
  %idxprom = sext i32 %conv9 to i64, !dbg !4419
  %call = call i16** @__ctype_b_loc() #1, !dbg !4419
  %14 = load i16*, i16** %call, align 8, !dbg !4419
  %arrayidx = getelementptr inbounds i16, i16* %14, i64 %idxprom, !dbg !4419
  %15 = load i16, i16* %arrayidx, align 2, !dbg !4419
  %conv10 = zext i16 %15 to i32, !dbg !4419
  %and = and i32 %conv10, 8192, !dbg !4419
  %tobool11 = icmp ne i32 %and, 0, !dbg !4420
  br label %land.end12

land.end12:                                       ; preds = %land.rhs8, %while.cond5
  %16 = phi i1 [ false, %while.cond5 ], [ %tobool11, %land.rhs8 ]
  br i1 %16, label %while.body13, label %while.end15, !dbg !4421

while.body13:                                     ; preds = %land.end12
  %17 = load i8*, i8** %start, align 8, !dbg !4422
  %incdec.ptr14 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !4422
  store i8* %incdec.ptr14, i8** %start, align 8, !dbg !4422
  br label %while.cond5, !dbg !4423

while.end15:                                      ; preds = %land.end12
  %18 = load i8*, i8** %start, align 8, !dbg !4424
  %call16 = call i8* @strchr(i8* %18, i32 13) #8, !dbg !4425
  store i8* %call16, i8** %end, align 8, !dbg !4426
  %19 = load i8*, i8** %end, align 8, !dbg !4427
  %tobool17 = icmp ne i8* %19, null, !dbg !4427
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !4429

if.then18:                                        ; preds = %while.end15
  %20 = load i8*, i8** %start, align 8, !dbg !4430
  %call19 = call i8* @strchr(i8* %20, i32 10) #8, !dbg !4431
  store i8* %call19, i8** %end, align 8, !dbg !4432
  br label %if.end20, !dbg !4433

if.end20:                                         ; preds = %if.then18, %while.end15
  %21 = load i8*, i8** %end, align 8, !dbg !4434
  %tobool21 = icmp ne i8* %21, null, !dbg !4434
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !4436

if.then22:                                        ; preds = %if.end20
  %22 = load i8*, i8** %start, align 8, !dbg !4437
  %call23 = call i8* @strchr(i8* %22, i32 0) #8, !dbg !4438
  store i8* %call23, i8** %end, align 8, !dbg !4439
  br label %if.end24, !dbg !4440

if.end24:                                         ; preds = %if.then22, %if.end20
  %23 = load i8*, i8** %end, align 8, !dbg !4441
  %tobool25 = icmp ne i8* %23, null, !dbg !4441
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4443

if.then26:                                        ; preds = %if.end24
  store i8* null, i8** %retval, align 8, !dbg !4444
  br label %return, !dbg !4444

if.end27:                                         ; preds = %if.end24
  br label %while.cond28, !dbg !4445

while.cond28:                                     ; preds = %while.body40, %if.end27
  %24 = load i8*, i8** %end, align 8, !dbg !4446
  %25 = load i8*, i8** %start, align 8, !dbg !4447
  %cmp29 = icmp ugt i8* %24, %25, !dbg !4448
  br i1 %cmp29, label %land.rhs31, label %land.end39, !dbg !4449

land.rhs31:                                       ; preds = %while.cond28
  %26 = load i8*, i8** %end, align 8, !dbg !4450
  %27 = load i8, i8* %26, align 1, !dbg !4450
  %conv32 = zext i8 %27 to i32, !dbg !4450
  %idxprom33 = sext i32 %conv32 to i64, !dbg !4450
  %call34 = call i16** @__ctype_b_loc() #1, !dbg !4450
  %28 = load i16*, i16** %call34, align 8, !dbg !4450
  %arrayidx35 = getelementptr inbounds i16, i16* %28, i64 %idxprom33, !dbg !4450
  %29 = load i16, i16* %arrayidx35, align 2, !dbg !4450
  %conv36 = zext i16 %29 to i32, !dbg !4450
  %and37 = and i32 %conv36, 8192, !dbg !4450
  %tobool38 = icmp ne i32 %and37, 0, !dbg !4451
  br label %land.end39

land.end39:                                       ; preds = %land.rhs31, %while.cond28
  %30 = phi i1 [ false, %while.cond28 ], [ %tobool38, %land.rhs31 ]
  br i1 %30, label %while.body40, label %while.end42, !dbg !4452

while.body40:                                     ; preds = %land.end39
  %31 = load i8*, i8** %end, align 8, !dbg !4453
  %incdec.ptr41 = getelementptr inbounds i8, i8* %31, i32 -1, !dbg !4453
  store i8* %incdec.ptr41, i8** %end, align 8, !dbg !4453
  br label %while.cond28, !dbg !4454

while.end42:                                      ; preds = %land.end39
  %32 = load i8*, i8** %end, align 8, !dbg !4455
  %33 = load i8*, i8** %start, align 8, !dbg !4456
  %sub.ptr.lhs.cast = ptrtoint i8* %32 to i64, !dbg !4457
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i64, !dbg !4457
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4457
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !4458
  store i64 %add, i64* %len, align 8, !dbg !4459
  %34 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !4460
  %35 = load i64, i64* %len, align 8, !dbg !4460
  %add43 = add i64 %35, 1, !dbg !4460
  %call44 = call i8* %34(i64 %add43), !dbg !4460
  store i8* %call44, i8** %value, align 8, !dbg !4461
  %36 = load i8*, i8** %value, align 8, !dbg !4462
  %tobool45 = icmp ne i8* %36, null, !dbg !4462
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !4464

if.then46:                                        ; preds = %while.end42
  store i8* null, i8** %retval, align 8, !dbg !4465
  br label %return, !dbg !4465

if.end47:                                         ; preds = %while.end42
  %37 = load i8*, i8** %value, align 8, !dbg !4466
  %38 = load i8*, i8** %start, align 8, !dbg !4467
  %39 = load i64, i64* %len, align 8, !dbg !4468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 %39, i32 1, i1 false), !dbg !4469
  %40 = load i64, i64* %len, align 8, !dbg !4470
  %41 = load i8*, i8** %value, align 8, !dbg !4471
  %arrayidx48 = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !4471
  store i8 0, i8* %arrayidx48, align 1, !dbg !4472
  %42 = load i8*, i8** %value, align 8, !dbg !4473
  store i8* %42, i8** %retval, align 8, !dbg !4474
  br label %return, !dbg !4474

return:                                           ; preds = %if.end47, %if.then46, %if.then26
  %43 = load i8*, i8** %retval, align 8, !dbg !4475
  ret i8* %43, !dbg !4475
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define i32 @Curl_http_auth_act(%struct.connectdata* %conn) #0 !dbg !1863 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %pickhost = alloca i8, align 1
  %pickproxy = alloca i8, align 1
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4476, metadata !1950), !dbg !4477
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4478, metadata !1950), !dbg !4479
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4480
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !4481
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4481
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !4479
  call void @llvm.dbg.declare(metadata i8* %pickhost, metadata !4482, metadata !1950), !dbg !4483
  store i8 0, i8* %pickhost, align 1, !dbg !4483
  call void @llvm.dbg.declare(metadata i8* %pickproxy, metadata !4484, metadata !1950), !dbg !4485
  store i8 0, i8* %pickproxy, align 1, !dbg !4485
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4486, metadata !1950), !dbg !4487
  store i32 0, i32* %result, align 4, !dbg !4487
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4488
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 12, !dbg !4490
  %httpcode = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 21, !dbg !4491
  %3 = load i32, i32* %httpcode, align 8, !dbg !4491
  %cmp = icmp sle i32 100, %3, !dbg !4492
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4493

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4494
  %req2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 12, !dbg !4496
  %httpcode3 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req2, i32 0, i32 21, !dbg !4497
  %5 = load i32, i32* %httpcode3, align 8, !dbg !4497
  %cmp4 = icmp sge i32 199, %5, !dbg !4498
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4499

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4500
  br label %return, !dbg !4500

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4501
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 17, !dbg !4503
  %authproblem = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 25, !dbg !4504
  %7 = load i8, i8* %authproblem, align 8, !dbg !4504
  %tobool = trunc i8 %7 to i1, !dbg !4504
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !4505

if.then5:                                         ; preds = %if.end
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4506
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !4507
  %http_fail_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 95, !dbg !4508
  %9 = load i8, i8* %http_fail_on_error, align 8, !dbg !4508
  %tobool6 = trunc i8 %9 to i1, !dbg !4508
  %cond = select i1 %tobool6, i32 22, i32 0, !dbg !4506
  store i32 %cond, i32* %retval, align 4, !dbg !4509
  br label %return, !dbg !4509

if.end7:                                          ; preds = %if.end
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4510
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 43, !dbg !4512
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 7, !dbg !4513
  %11 = load i8, i8* %user_passwd, align 1, !dbg !4513
  %tobool8 = trunc i8 %11 to i1, !dbg !4513
  br i1 %tobool8, label %land.lhs.true9, label %if.end26, !dbg !4514

land.lhs.true9:                                   ; preds = %if.end7
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4515
  %req10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %12, i32 0, i32 12, !dbg !4516
  %httpcode11 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req10, i32 0, i32 21, !dbg !4517
  %13 = load i32, i32* %httpcode11, align 8, !dbg !4517
  %cmp12 = icmp eq i32 %13, 401, !dbg !4518
  br i1 %cmp12, label %if.then19, label %lor.lhs.false, !dbg !4519

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %14 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4520
  %bits13 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 43, !dbg !4521
  %authneg = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits13, i32 0, i32 16, !dbg !4522
  %15 = load i8, i8* %authneg, align 1, !dbg !4522
  %tobool14 = trunc i8 %15 to i1, !dbg !4522
  br i1 %tobool14, label %land.lhs.true15, label %if.end26, !dbg !4523

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4524
  %req16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 12, !dbg !4526
  %httpcode17 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req16, i32 0, i32 21, !dbg !4527
  %17 = load i32, i32* %httpcode17, align 8, !dbg !4527
  %cmp18 = icmp slt i32 %17, 300, !dbg !4528
  br i1 %cmp18, label %if.then19, label %if.end26, !dbg !4529

if.then19:                                        ; preds = %land.lhs.true15, %land.lhs.true9
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4531
  %state20 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 17, !dbg !4533
  %authhost = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state20, i32 0, i32 23, !dbg !4534
  %call = call zeroext i1 @pickoneauth(%struct.auth* %authhost), !dbg !4535
  %frombool = zext i1 %call to i8, !dbg !4536
  store i8 %frombool, i8* %pickhost, align 1, !dbg !4536
  %19 = load i8, i8* %pickhost, align 1, !dbg !4537
  %tobool21 = trunc i8 %19 to i1, !dbg !4537
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !4539

if.then22:                                        ; preds = %if.then19
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4540
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 17, !dbg !4541
  %authproblem24 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 25, !dbg !4542
  store i8 1, i8* %authproblem24, align 8, !dbg !4543
  br label %if.end25, !dbg !4540

if.end25:                                         ; preds = %if.then22, %if.then19
  br label %if.end26, !dbg !4544

if.end26:                                         ; preds = %if.end25, %land.lhs.true15, %lor.lhs.false, %if.end7
  %21 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4545
  %bits27 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 43, !dbg !4547
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits27, i32 0, i32 8, !dbg !4548
  %22 = load i8, i8* %proxy_user_passwd, align 1, !dbg !4548
  %tobool28 = trunc i8 %22 to i1, !dbg !4548
  br i1 %tobool28, label %land.lhs.true29, label %if.end50, !dbg !4549

land.lhs.true29:                                  ; preds = %if.end26
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4550
  %req30 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 12, !dbg !4551
  %httpcode31 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req30, i32 0, i32 21, !dbg !4552
  %24 = load i32, i32* %httpcode31, align 8, !dbg !4552
  %cmp32 = icmp eq i32 %24, 407, !dbg !4553
  br i1 %cmp32, label %if.then41, label %lor.lhs.false33, !dbg !4554

lor.lhs.false33:                                  ; preds = %land.lhs.true29
  %25 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4555
  %bits34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %25, i32 0, i32 43, !dbg !4556
  %authneg35 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits34, i32 0, i32 16, !dbg !4557
  %26 = load i8, i8* %authneg35, align 1, !dbg !4557
  %tobool36 = trunc i8 %26 to i1, !dbg !4557
  br i1 %tobool36, label %land.lhs.true37, label %if.end50, !dbg !4558

land.lhs.true37:                                  ; preds = %lor.lhs.false33
  %27 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4559
  %req38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %27, i32 0, i32 12, !dbg !4561
  %httpcode39 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req38, i32 0, i32 21, !dbg !4562
  %28 = load i32, i32* %httpcode39, align 8, !dbg !4562
  %cmp40 = icmp slt i32 %28, 300, !dbg !4563
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !4564

if.then41:                                        ; preds = %land.lhs.true37, %land.lhs.true29
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4565
  %state42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %29, i32 0, i32 17, !dbg !4567
  %authproxy = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state42, i32 0, i32 24, !dbg !4568
  %call43 = call zeroext i1 @pickoneauth(%struct.auth* %authproxy), !dbg !4569
  %frombool44 = zext i1 %call43 to i8, !dbg !4570
  store i8 %frombool44, i8* %pickproxy, align 1, !dbg !4570
  %30 = load i8, i8* %pickproxy, align 1, !dbg !4571
  %tobool45 = trunc i8 %30 to i1, !dbg !4571
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !4573

if.then46:                                        ; preds = %if.then41
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4574
  %state47 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 17, !dbg !4575
  %authproblem48 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state47, i32 0, i32 25, !dbg !4576
  store i8 1, i8* %authproblem48, align 8, !dbg !4577
  br label %if.end49, !dbg !4574

if.end49:                                         ; preds = %if.then46, %if.then41
  br label %if.end50, !dbg !4578

if.end50:                                         ; preds = %if.end49, %land.lhs.true37, %lor.lhs.false33, %if.end26
  %32 = load i8, i8* %pickhost, align 1, !dbg !4579
  %tobool51 = trunc i8 %32 to i1, !dbg !4579
  br i1 %tobool51, label %if.then54, label %lor.lhs.false52, !dbg !4581

lor.lhs.false52:                                  ; preds = %if.end50
  %33 = load i8, i8* %pickproxy, align 1, !dbg !4582
  %tobool53 = trunc i8 %33 to i1, !dbg !4582
  br i1 %tobool53, label %if.then54, label %if.else, !dbg !4584

if.then54:                                        ; preds = %lor.lhs.false52, %if.end50
  br label %do.body, !dbg !4585

do.body:                                          ; preds = %if.then54
  %34 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !4587
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4587
  %req55 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 12, !dbg !4587
  %newurl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req55, i32 0, i32 36, !dbg !4587
  %36 = load i8*, i8** %newurl, align 8, !dbg !4587
  call void %34(i8* %36), !dbg !4587
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4587
  %req56 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %37, i32 0, i32 12, !dbg !4587
  %newurl57 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req56, i32 0, i32 36, !dbg !4587
  store i8* null, i8** %newurl57, align 8, !dbg !4587
  br label %do.end, !dbg !4587

do.end:                                           ; preds = %do.body
  %38 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !4590
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4590
  %change = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %39, i32 0, i32 14, !dbg !4590
  %url = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change, i32 0, i32 0, !dbg !4590
  %40 = load i8*, i8** %url, align 8, !dbg !4590
  %call58 = call i8* %38(i8* %40), !dbg !4590
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4591
  %req59 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %41, i32 0, i32 12, !dbg !4592
  %newurl60 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req59, i32 0, i32 36, !dbg !4593
  store i8* %call58, i8** %newurl60, align 8, !dbg !4594
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4595
  %req61 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 12, !dbg !4597
  %newurl62 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req61, i32 0, i32 36, !dbg !4598
  %43 = load i8*, i8** %newurl62, align 8, !dbg !4598
  %tobool63 = icmp ne i8* %43, null, !dbg !4595
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !4599

if.then64:                                        ; preds = %do.end
  store i32 27, i32* %retval, align 4, !dbg !4600
  br label %return, !dbg !4600

if.end65:                                         ; preds = %do.end
  %44 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4601
  %set66 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %44, i32 0, i32 13, !dbg !4603
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set66, i32 0, i32 71, !dbg !4604
  %45 = load i32, i32* %httpreq, align 8, !dbg !4604
  %cmp67 = icmp ne i32 %45, 1, !dbg !4605
  br i1 %cmp67, label %land.lhs.true68, label %if.end80, !dbg !4606

land.lhs.true68:                                  ; preds = %if.end65
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4607
  %set69 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 13, !dbg !4608
  %httpreq70 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set69, i32 0, i32 71, !dbg !4609
  %47 = load i32, i32* %httpreq70, align 8, !dbg !4609
  %cmp71 = icmp ne i32 %47, 5, !dbg !4610
  br i1 %cmp71, label %land.lhs.true72, label %if.end80, !dbg !4611

land.lhs.true72:                                  ; preds = %land.lhs.true68
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4612
  %bits73 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 43, !dbg !4613
  %rewindaftersend = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits73, i32 0, i32 17, !dbg !4614
  %49 = load i8, i8* %rewindaftersend, align 1, !dbg !4614
  %tobool74 = trunc i8 %49 to i1, !dbg !4614
  br i1 %tobool74, label %if.end80, label %if.then75, !dbg !4615

if.then75:                                        ; preds = %land.lhs.true72
  %50 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4617
  %call76 = call i32 @http_perhapsrewind(%struct.connectdata* %50), !dbg !4619
  store i32 %call76, i32* %result, align 4, !dbg !4620
  %51 = load i32, i32* %result, align 4, !dbg !4621
  %tobool77 = icmp ne i32 %51, 0, !dbg !4621
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !4623

if.then78:                                        ; preds = %if.then75
  %52 = load i32, i32* %result, align 4, !dbg !4624
  store i32 %52, i32* %retval, align 4, !dbg !4625
  br label %return, !dbg !4625

if.end79:                                         ; preds = %if.then75
  br label %if.end80, !dbg !4626

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %land.lhs.true68, %if.end65
  br label %if.end116, !dbg !4627

if.else:                                          ; preds = %lor.lhs.false52
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4628
  %req81 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %53, i32 0, i32 12, !dbg !4630
  %httpcode82 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req81, i32 0, i32 21, !dbg !4631
  %54 = load i32, i32* %httpcode82, align 8, !dbg !4631
  %cmp83 = icmp slt i32 %54, 300, !dbg !4632
  br i1 %cmp83, label %land.lhs.true84, label %if.end115, !dbg !4633

land.lhs.true84:                                  ; preds = %if.else
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4634
  %state85 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %55, i32 0, i32 17, !dbg !4635
  %authhost86 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state85, i32 0, i32 23, !dbg !4636
  %done = getelementptr inbounds %struct.auth, %struct.auth* %authhost86, i32 0, i32 3, !dbg !4637
  %56 = load i8, i8* %done, align 8, !dbg !4637
  %tobool87 = trunc i8 %56 to i1, !dbg !4637
  br i1 %tobool87, label %if.end115, label %land.lhs.true88, !dbg !4638

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %57 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4639
  %bits89 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %57, i32 0, i32 43, !dbg !4640
  %authneg90 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits89, i32 0, i32 16, !dbg !4641
  %58 = load i8, i8* %authneg90, align 1, !dbg !4641
  %tobool91 = trunc i8 %58 to i1, !dbg !4641
  br i1 %tobool91, label %if.then92, label %if.end115, !dbg !4642

if.then92:                                        ; preds = %land.lhs.true88
  %59 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4643
  %set93 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %59, i32 0, i32 13, !dbg !4646
  %httpreq94 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set93, i32 0, i32 71, !dbg !4647
  %60 = load i32, i32* %httpreq94, align 8, !dbg !4647
  %cmp95 = icmp ne i32 %60, 1, !dbg !4648
  br i1 %cmp95, label %land.lhs.true96, label %if.end114, !dbg !4649

land.lhs.true96:                                  ; preds = %if.then92
  %61 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4650
  %set97 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %61, i32 0, i32 13, !dbg !4651
  %httpreq98 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set97, i32 0, i32 71, !dbg !4652
  %62 = load i32, i32* %httpreq98, align 8, !dbg !4652
  %cmp99 = icmp ne i32 %62, 5, !dbg !4653
  br i1 %cmp99, label %if.then100, label %if.end114, !dbg !4654

if.then100:                                       ; preds = %land.lhs.true96
  %63 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !4656
  %64 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4656
  %change101 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %64, i32 0, i32 14, !dbg !4656
  %url102 = getelementptr inbounds %struct.DynamicStatic, %struct.DynamicStatic* %change101, i32 0, i32 0, !dbg !4656
  %65 = load i8*, i8** %url102, align 8, !dbg !4656
  %call103 = call i8* %63(i8* %65), !dbg !4656
  %66 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4658
  %req104 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %66, i32 0, i32 12, !dbg !4659
  %newurl105 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req104, i32 0, i32 36, !dbg !4660
  store i8* %call103, i8** %newurl105, align 8, !dbg !4661
  %67 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4662
  %req106 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %67, i32 0, i32 12, !dbg !4664
  %newurl107 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req106, i32 0, i32 36, !dbg !4665
  %68 = load i8*, i8** %newurl107, align 8, !dbg !4665
  %tobool108 = icmp ne i8* %68, null, !dbg !4662
  br i1 %tobool108, label %if.end110, label %if.then109, !dbg !4666

if.then109:                                       ; preds = %if.then100
  store i32 27, i32* %retval, align 4, !dbg !4667
  br label %return, !dbg !4667

if.end110:                                        ; preds = %if.then100
  %69 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4668
  %state111 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %69, i32 0, i32 17, !dbg !4669
  %authhost112 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state111, i32 0, i32 23, !dbg !4670
  %done113 = getelementptr inbounds %struct.auth, %struct.auth* %authhost112, i32 0, i32 3, !dbg !4671
  store i8 1, i8* %done113, align 8, !dbg !4672
  br label %if.end114, !dbg !4673

if.end114:                                        ; preds = %if.end110, %land.lhs.true96, %if.then92
  br label %if.end115, !dbg !4674

if.end115:                                        ; preds = %if.end114, %land.lhs.true88, %land.lhs.true84, %if.else
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.end80
  %70 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4675
  %call117 = call i32 @http_should_fail(%struct.connectdata* %70), !dbg !4677
  %tobool118 = icmp ne i32 %call117, 0, !dbg !4677
  br i1 %tobool118, label %if.then119, label %if.end122, !dbg !4678

if.then119:                                       ; preds = %if.end116
  %71 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4679
  %72 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4681
  %req120 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %72, i32 0, i32 12, !dbg !4682
  %httpcode121 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req120, i32 0, i32 21, !dbg !4683
  %73 = load i32, i32* %httpcode121, align 8, !dbg !4683
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %71, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i32 0, i32 0), i32 %73), !dbg !4684
  store i32 22, i32* %result, align 4, !dbg !4685
  br label %if.end122, !dbg !4686

if.end122:                                        ; preds = %if.then119, %if.end116
  %74 = load i32, i32* %result, align 4, !dbg !4687
  store i32 %74, i32* %retval, align 4, !dbg !4688
  br label %return, !dbg !4688

return:                                           ; preds = %if.end122, %if.then109, %if.then78, %if.then64, %if.then5, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !4689
  ret i32 %75, !dbg !4689
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @pickoneauth(%struct.auth* %pick) #0 !dbg !1906 {
entry:
  %pick.addr = alloca %struct.auth*, align 8
  %picked = alloca i8, align 1
  %avail = alloca i64, align 8
  store %struct.auth* %pick, %struct.auth** %pick.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.auth** %pick.addr, metadata !4690, metadata !1950), !dbg !4691
  call void @llvm.dbg.declare(metadata i8* %picked, metadata !4692, metadata !1950), !dbg !4693
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !4694, metadata !1950), !dbg !4695
  %0 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4696
  %avail1 = getelementptr inbounds %struct.auth, %struct.auth* %0, i32 0, i32 2, !dbg !4697
  %1 = load i64, i64* %avail1, align 8, !dbg !4697
  %2 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4698
  %want = getelementptr inbounds %struct.auth, %struct.auth* %2, i32 0, i32 0, !dbg !4699
  %3 = load i64, i64* %want, align 8, !dbg !4699
  %and = and i64 %1, %3, !dbg !4700
  store i64 %and, i64* %avail, align 8, !dbg !4695
  store i8 1, i8* %picked, align 1, !dbg !4701
  %4 = load i64, i64* %avail, align 8, !dbg !4702
  %and2 = and i64 %4, 4, !dbg !4704
  %tobool = icmp ne i64 %and2, 0, !dbg !4704
  br i1 %tobool, label %if.then, label %if.else, !dbg !4705

if.then:                                          ; preds = %entry
  %5 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4706
  %picked3 = getelementptr inbounds %struct.auth, %struct.auth* %5, i32 0, i32 1, !dbg !4707
  store i64 4, i64* %picked3, align 8, !dbg !4708
  br label %if.end28, !dbg !4706

if.else:                                          ; preds = %entry
  %6 = load i64, i64* %avail, align 8, !dbg !4709
  %and4 = and i64 %6, 2, !dbg !4711
  %tobool5 = icmp ne i64 %and4, 0, !dbg !4711
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !4712

if.then6:                                         ; preds = %if.else
  %7 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4713
  %picked7 = getelementptr inbounds %struct.auth, %struct.auth* %7, i32 0, i32 1, !dbg !4714
  store i64 2, i64* %picked7, align 8, !dbg !4715
  br label %if.end27, !dbg !4713

if.else8:                                         ; preds = %if.else
  %8 = load i64, i64* %avail, align 8, !dbg !4716
  %and9 = and i64 %8, 8, !dbg !4718
  %tobool10 = icmp ne i64 %and9, 0, !dbg !4718
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !4719

if.then11:                                        ; preds = %if.else8
  %9 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4720
  %picked12 = getelementptr inbounds %struct.auth, %struct.auth* %9, i32 0, i32 1, !dbg !4721
  store i64 8, i64* %picked12, align 8, !dbg !4722
  br label %if.end26, !dbg !4720

if.else13:                                        ; preds = %if.else8
  %10 = load i64, i64* %avail, align 8, !dbg !4723
  %and14 = and i64 %10, 32, !dbg !4725
  %tobool15 = icmp ne i64 %and14, 0, !dbg !4725
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !4726

if.then16:                                        ; preds = %if.else13
  %11 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4727
  %picked17 = getelementptr inbounds %struct.auth, %struct.auth* %11, i32 0, i32 1, !dbg !4728
  store i64 32, i64* %picked17, align 8, !dbg !4729
  br label %if.end25, !dbg !4727

if.else18:                                        ; preds = %if.else13
  %12 = load i64, i64* %avail, align 8, !dbg !4730
  %and19 = and i64 %12, 1, !dbg !4732
  %tobool20 = icmp ne i64 %and19, 0, !dbg !4732
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !4733

if.then21:                                        ; preds = %if.else18
  %13 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4734
  %picked22 = getelementptr inbounds %struct.auth, %struct.auth* %13, i32 0, i32 1, !dbg !4735
  store i64 1, i64* %picked22, align 8, !dbg !4736
  br label %if.end, !dbg !4734

if.else23:                                        ; preds = %if.else18
  %14 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4737
  %picked24 = getelementptr inbounds %struct.auth, %struct.auth* %14, i32 0, i32 1, !dbg !4739
  store i64 1073741824, i64* %picked24, align 8, !dbg !4740
  store i8 0, i8* %picked, align 1, !dbg !4741
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then21
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then16
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then11
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then6
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %15 = load %struct.auth*, %struct.auth** %pick.addr, align 8, !dbg !4742
  %avail29 = getelementptr inbounds %struct.auth, %struct.auth* %15, i32 0, i32 2, !dbg !4743
  store i64 0, i64* %avail29, align 8, !dbg !4744
  %16 = load i8, i8* %picked, align 1, !dbg !4745
  %tobool30 = trunc i8 %16 to i1, !dbg !4745
  ret i1 %tobool30, !dbg !4746
}

; Function Attrs: nounwind uwtable
define internal i32 @http_perhapsrewind(%struct.connectdata* %conn) #0 !dbg !1910 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %http = alloca %struct.HTTP*, align 8
  %bytessent = alloca i64, align 8
  %expectsend = alloca i64, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4747, metadata !1950), !dbg !4748
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4749, metadata !1950), !dbg !4750
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4751
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !4752
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4752
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !4753, metadata !1950), !dbg !4754
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4755
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 12, !dbg !4756
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !4757
  %3 = load i8*, i8** %protop, align 8, !dbg !4757
  %4 = bitcast i8* %3 to %struct.HTTP*, !dbg !4755
  store %struct.HTTP* %4, %struct.HTTP** %http, align 8, !dbg !4754
  call void @llvm.dbg.declare(metadata i64* %bytessent, metadata !4758, metadata !1950), !dbg !4759
  call void @llvm.dbg.declare(metadata i64* %expectsend, metadata !4760, metadata !1950), !dbg !4761
  store i64 -1, i64* %expectsend, align 8, !dbg !4761
  %5 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4762
  %tobool = icmp ne %struct.HTTP* %5, null, !dbg !4762
  br i1 %tobool, label %if.end, label %if.then, !dbg !4764

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4765
  br label %return, !dbg !4765

if.end:                                           ; preds = %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4766
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 13, !dbg !4767
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 71, !dbg !4768
  %7 = load i32, i32* %httpreq, align 8, !dbg !4768
  switch i32 %7, label %sw.default [
    i32 1, label %sw.bb
    i32 5, label %sw.bb
  ], !dbg !4769

sw.bb:                                            ; preds = %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4770
  br label %return, !dbg !4770

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !4772

sw.epilog:                                        ; preds = %sw.default
  %8 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4773
  %writebytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %8, i32 0, i32 6, !dbg !4774
  %9 = load i64, i64* %writebytecount, align 8, !dbg !4774
  store i64 %9, i64* %bytessent, align 8, !dbg !4775
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4776
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 43, !dbg !4778
  %authneg = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 16, !dbg !4779
  %11 = load i8, i8* %authneg, align 1, !dbg !4779
  %tobool2 = trunc i8 %11 to i1, !dbg !4779
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !4780

if.then3:                                         ; preds = %sw.epilog
  store i64 0, i64* %expectsend, align 8, !dbg !4781
  br label %if.end34, !dbg !4783

if.else:                                          ; preds = %sw.epilog
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4784
  %bits4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 43, !dbg !4786
  %protoconnstart = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits4, i32 0, i32 13, !dbg !4787
  %13 = load i8, i8* %protoconnstart, align 1, !dbg !4787
  %tobool5 = trunc i8 %13 to i1, !dbg !4787
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !4788

if.then6:                                         ; preds = %if.else
  store i64 0, i64* %expectsend, align 8, !dbg !4789
  br label %if.end33, !dbg !4791

if.else7:                                         ; preds = %if.else
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4792
  %set8 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 13, !dbg !4794
  %httpreq9 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set8, i32 0, i32 71, !dbg !4795
  %15 = load i32, i32* %httpreq9, align 8, !dbg !4795
  switch i32 %15, label %sw.default31 [
    i32 2, label %sw.bb10
    i32 4, label %sw.bb22
    i32 3, label %sw.bb30
  ], !dbg !4796

sw.bb10:                                          ; preds = %if.else7
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4797
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 17, !dbg !4800
  %infilesize = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 47, !dbg !4801
  %17 = load i64, i64* %infilesize, align 8, !dbg !4801
  %cmp = icmp ne i64 %17, -1, !dbg !4802
  br i1 %cmp, label %if.then11, label %if.else14, !dbg !4803

if.then11:                                        ; preds = %sw.bb10
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4804
  %state12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 17, !dbg !4805
  %infilesize13 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state12, i32 0, i32 47, !dbg !4806
  %19 = load i64, i64* %infilesize13, align 8, !dbg !4806
  store i64 %19, i64* %expectsend, align 8, !dbg !4807
  br label %if.end21, !dbg !4808

if.else14:                                        ; preds = %sw.bb10
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4809
  %set15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 13, !dbg !4811
  %postfields = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set15, i32 0, i32 15, !dbg !4812
  %21 = load i8*, i8** %postfields, align 8, !dbg !4812
  %tobool16 = icmp ne i8* %21, null, !dbg !4809
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !4813

if.then17:                                        ; preds = %if.else14
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4814
  %set18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 13, !dbg !4815
  %postfields19 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set18, i32 0, i32 15, !dbg !4816
  %23 = load i8*, i8** %postfields19, align 8, !dbg !4816
  %call = call i64 @strlen(i8* %23) #8, !dbg !4817
  store i64 %call, i64* %expectsend, align 8, !dbg !4818
  br label %if.end20, !dbg !4819

if.end20:                                         ; preds = %if.then17, %if.else14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then11
  br label %sw.epilog32, !dbg !4820

sw.bb22:                                          ; preds = %if.else7
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4821
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 17, !dbg !4823
  %infilesize24 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 47, !dbg !4824
  %25 = load i64, i64* %infilesize24, align 8, !dbg !4824
  %cmp25 = icmp ne i64 %25, -1, !dbg !4825
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !4826

if.then26:                                        ; preds = %sw.bb22
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4827
  %state27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 17, !dbg !4828
  %infilesize28 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state27, i32 0, i32 47, !dbg !4829
  %27 = load i64, i64* %infilesize28, align 8, !dbg !4829
  store i64 %27, i64* %expectsend, align 8, !dbg !4830
  br label %if.end29, !dbg !4831

if.end29:                                         ; preds = %if.then26, %sw.bb22
  br label %sw.epilog32, !dbg !4832

sw.bb30:                                          ; preds = %if.else7
  %28 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !4833
  %postsize = getelementptr inbounds %struct.HTTP, %struct.HTTP* %28, i32 0, i32 1, !dbg !4834
  %29 = load i64, i64* %postsize, align 8, !dbg !4834
  store i64 %29, i64* %expectsend, align 8, !dbg !4835
  br label %sw.epilog32, !dbg !4836

sw.default31:                                     ; preds = %if.else7
  br label %sw.epilog32, !dbg !4837

sw.epilog32:                                      ; preds = %sw.default31, %sw.bb30, %if.end29, %if.end21
  br label %if.end33

if.end33:                                         ; preds = %sw.epilog32, %if.then6
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then3
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4838
  %bits35 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 43, !dbg !4839
  %rewindaftersend = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits35, i32 0, i32 17, !dbg !4840
  store i8 0, i8* %rewindaftersend, align 1, !dbg !4841
  %31 = load i64, i64* %expectsend, align 8, !dbg !4842
  %cmp36 = icmp eq i64 %31, -1, !dbg !4844
  br i1 %cmp36, label %if.then38, label %lor.lhs.false, !dbg !4845

lor.lhs.false:                                    ; preds = %if.end34
  %32 = load i64, i64* %expectsend, align 8, !dbg !4846
  %33 = load i64, i64* %bytessent, align 8, !dbg !4848
  %cmp37 = icmp sgt i64 %32, %33, !dbg !4849
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !4850

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4851
  call void @Curl_conncontrol(%struct.connectdata* %34, i32 2), !dbg !4851
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4853
  %req39 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 12, !dbg !4854
  %size = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req39, i32 0, i32 0, !dbg !4855
  store i64 0, i64* %size, align 8, !dbg !4856
  br label %if.end40, !dbg !4857

if.end40:                                         ; preds = %if.then38, %lor.lhs.false
  %36 = load i64, i64* %bytessent, align 8, !dbg !4858
  %tobool41 = icmp ne i64 %36, 0, !dbg !4858
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !4860

if.then42:                                        ; preds = %if.end40
  %37 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4861
  %call43 = call i32 @Curl_readrewind(%struct.connectdata* %37), !dbg !4862
  store i32 %call43, i32* %retval, align 4, !dbg !4863
  br label %return, !dbg !4863

if.end44:                                         ; preds = %if.end40
  store i32 0, i32* %retval, align 4, !dbg !4864
  br label %return, !dbg !4864

return:                                           ; preds = %if.end44, %if.then42, %sw.bb, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !4865
  ret i32 %38, !dbg !4865
}

; Function Attrs: nounwind uwtable
define internal i32 @http_should_fail(%struct.connectdata* %conn) #0 !dbg !1915 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %httpcode = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4866, metadata !1950), !dbg !4867
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4868, metadata !1950), !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %httpcode, metadata !4870, metadata !1950), !dbg !4871
  br label %do.body, !dbg !4872

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4873

do.end:                                           ; preds = %do.body
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4876
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !4877
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4877
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !4878
  br label %do.body2, !dbg !4879

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !4880

do.end3:                                          ; preds = %do.body2
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4883
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 12, !dbg !4884
  %httpcode4 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 21, !dbg !4885
  %3 = load i32, i32* %httpcode4, align 8, !dbg !4885
  store i32 %3, i32* %httpcode, align 4, !dbg !4886
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4887
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 13, !dbg !4889
  %http_fail_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 95, !dbg !4890
  %5 = load i8, i8* %http_fail_on_error, align 8, !dbg !4890
  %tobool = trunc i8 %5 to i1, !dbg !4890
  br i1 %tobool, label %if.end, label %if.then, !dbg !4891

if.then:                                          ; preds = %do.end3
  store i32 0, i32* %retval, align 4, !dbg !4892
  br label %return, !dbg !4892

if.end:                                           ; preds = %do.end3
  %6 = load i32, i32* %httpcode, align 4, !dbg !4893
  %cmp = icmp slt i32 %6, 400, !dbg !4895
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !4896

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4897
  br label %return, !dbg !4897

if.end6:                                          ; preds = %if.end
  %7 = load i32, i32* %httpcode, align 4, !dbg !4898
  %cmp7 = icmp ne i32 %7, 401, !dbg !4900
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !4901

land.lhs.true:                                    ; preds = %if.end6
  %8 = load i32, i32* %httpcode, align 4, !dbg !4902
  %cmp8 = icmp ne i32 %8, 407, !dbg !4904
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4905

if.then9:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4906
  br label %return, !dbg !4906

if.end10:                                         ; preds = %land.lhs.true, %if.end6
  br label %do.body11, !dbg !4907

do.body11:                                        ; preds = %if.end10
  br label %do.end12, !dbg !4908

do.end12:                                         ; preds = %do.body11
  %9 = load i32, i32* %httpcode, align 4, !dbg !4911
  %cmp13 = icmp eq i32 %9, 401, !dbg !4913
  br i1 %cmp13, label %land.lhs.true14, label %if.end17, !dbg !4914

land.lhs.true14:                                  ; preds = %do.end12
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4915
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 43, !dbg !4917
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 7, !dbg !4918
  %11 = load i8, i8* %user_passwd, align 1, !dbg !4918
  %tobool15 = trunc i8 %11 to i1, !dbg !4918
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4919

if.then16:                                        ; preds = %land.lhs.true14
  store i32 1, i32* %retval, align 4, !dbg !4920
  br label %return, !dbg !4920

if.end17:                                         ; preds = %land.lhs.true14, %do.end12
  %12 = load i32, i32* %httpcode, align 4, !dbg !4921
  %cmp18 = icmp eq i32 %12, 407, !dbg !4923
  br i1 %cmp18, label %land.lhs.true19, label %if.end23, !dbg !4924

land.lhs.true19:                                  ; preds = %if.end17
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4925
  %bits20 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 43, !dbg !4927
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits20, i32 0, i32 8, !dbg !4928
  %14 = load i8, i8* %proxy_user_passwd, align 1, !dbg !4928
  %tobool21 = trunc i8 %14 to i1, !dbg !4928
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4929

if.then22:                                        ; preds = %land.lhs.true19
  store i32 1, i32* %retval, align 4, !dbg !4930
  br label %return, !dbg !4930

if.end23:                                         ; preds = %land.lhs.true19, %if.end17
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4931
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 17, !dbg !4932
  %authproblem = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 25, !dbg !4933
  %16 = load i8, i8* %authproblem, align 8, !dbg !4933
  %tobool24 = trunc i8 %16 to i1, !dbg !4933
  %conv = zext i1 %tobool24 to i32, !dbg !4931
  store i32 %conv, i32* %retval, align 4, !dbg !4934
  br label %return, !dbg !4934

return:                                           ; preds = %if.end23, %if.then22, %if.then16, %if.then9, %if.then5, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4935
  ret i32 %17, !dbg !4935
}

declare void @Curl_failf(%struct.Curl_easy*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_http_output_auth(%struct.connectdata* %conn, i8* %request, i8* %path, i1 zeroext %proxytunnel) #0 !dbg !1864 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %request.addr = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %proxytunnel.addr = alloca i8, align 1
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  %authhost = alloca %struct.auth*, align 8
  %authproxy = alloca %struct.auth*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !4936, metadata !1950), !dbg !4937
  store i8* %request, i8** %request.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %request.addr, metadata !4938, metadata !1950), !dbg !4939
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4940, metadata !1950), !dbg !4941
  %frombool = zext i1 %proxytunnel to i8
  store i8 %frombool, i8* %proxytunnel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %proxytunnel.addr, metadata !4942, metadata !1950), !dbg !4943
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4944, metadata !1950), !dbg !4945
  store i32 0, i32* %result, align 4, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4946, metadata !1950), !dbg !4947
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4948
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !4949
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !4949
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !4947
  call void @llvm.dbg.declare(metadata %struct.auth** %authhost, metadata !4950, metadata !1950), !dbg !4951
  call void @llvm.dbg.declare(metadata %struct.auth** %authproxy, metadata !4952, metadata !1950), !dbg !4953
  br label %do.body, !dbg !4954

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4955

do.end:                                           ; preds = %do.body
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4958
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 17, !dbg !4959
  %authhost2 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 23, !dbg !4960
  store %struct.auth* %authhost2, %struct.auth** %authhost, align 8, !dbg !4961
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4962
  %state3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 17, !dbg !4963
  %authproxy4 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state3, i32 0, i32 24, !dbg !4964
  store %struct.auth* %authproxy4, %struct.auth** %authproxy, align 8, !dbg !4965
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4966
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 43, !dbg !4968
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 5, !dbg !4969
  %5 = load i8, i8* %httpproxy, align 1, !dbg !4969
  %tobool = trunc i8 %5 to i1, !dbg !4969
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !4970

land.lhs.true:                                    ; preds = %do.end
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4971
  %bits5 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 43, !dbg !4973
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits5, i32 0, i32 8, !dbg !4974
  %7 = load i8, i8* %proxy_user_passwd, align 1, !dbg !4974
  %tobool6 = trunc i8 %7 to i1, !dbg !4974
  br i1 %tobool6, label %if.then, label %lor.lhs.false, !dbg !4975

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.end
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4976
  %bits7 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 43, !dbg !4977
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits7, i32 0, i32 7, !dbg !4978
  %9 = load i8, i8* %user_passwd, align 1, !dbg !4978
  %tobool8 = trunc i8 %9 to i1, !dbg !4978
  br i1 %tobool8, label %if.then, label %if.else, !dbg !4979

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end, !dbg !4981

if.else:                                          ; preds = %lor.lhs.false
  %10 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !4983
  %done = getelementptr inbounds %struct.auth, %struct.auth* %10, i32 0, i32 3, !dbg !4985
  store i8 1, i8* %done, align 8, !dbg !4986
  %11 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !4987
  %done9 = getelementptr inbounds %struct.auth, %struct.auth* %11, i32 0, i32 3, !dbg !4988
  store i8 1, i8* %done9, align 8, !dbg !4989
  store i32 0, i32* %retval, align 4, !dbg !4990
  br label %return, !dbg !4990

if.end:                                           ; preds = %if.then
  %12 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !4991
  %want = getelementptr inbounds %struct.auth, %struct.auth* %12, i32 0, i32 0, !dbg !4993
  %13 = load i64, i64* %want, align 8, !dbg !4993
  %tobool10 = icmp ne i64 %13, 0, !dbg !4991
  br i1 %tobool10, label %land.lhs.true11, label %if.end16, !dbg !4994

land.lhs.true11:                                  ; preds = %if.end
  %14 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !4995
  %picked = getelementptr inbounds %struct.auth, %struct.auth* %14, i32 0, i32 1, !dbg !4997
  %15 = load i64, i64* %picked, align 8, !dbg !4997
  %tobool12 = icmp ne i64 %15, 0, !dbg !4995
  br i1 %tobool12, label %if.end16, label %if.then13, !dbg !4998

if.then13:                                        ; preds = %land.lhs.true11
  %16 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !4999
  %want14 = getelementptr inbounds %struct.auth, %struct.auth* %16, i32 0, i32 0, !dbg !5000
  %17 = load i64, i64* %want14, align 8, !dbg !5000
  %18 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !5001
  %picked15 = getelementptr inbounds %struct.auth, %struct.auth* %18, i32 0, i32 1, !dbg !5002
  store i64 %17, i64* %picked15, align 8, !dbg !5003
  br label %if.end16, !dbg !5001

if.end16:                                         ; preds = %if.then13, %land.lhs.true11, %if.end
  %19 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5004
  %want17 = getelementptr inbounds %struct.auth, %struct.auth* %19, i32 0, i32 0, !dbg !5006
  %20 = load i64, i64* %want17, align 8, !dbg !5006
  %tobool18 = icmp ne i64 %20, 0, !dbg !5004
  br i1 %tobool18, label %land.lhs.true19, label %if.end25, !dbg !5007

land.lhs.true19:                                  ; preds = %if.end16
  %21 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5008
  %picked20 = getelementptr inbounds %struct.auth, %struct.auth* %21, i32 0, i32 1, !dbg !5010
  %22 = load i64, i64* %picked20, align 8, !dbg !5010
  %tobool21 = icmp ne i64 %22, 0, !dbg !5008
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !5011

if.then22:                                        ; preds = %land.lhs.true19
  %23 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5012
  %want23 = getelementptr inbounds %struct.auth, %struct.auth* %23, i32 0, i32 0, !dbg !5013
  %24 = load i64, i64* %want23, align 8, !dbg !5013
  %25 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5014
  %picked24 = getelementptr inbounds %struct.auth, %struct.auth* %25, i32 0, i32 1, !dbg !5015
  store i64 %24, i64* %picked24, align 8, !dbg !5016
  br label %if.end25, !dbg !5014

if.end25:                                         ; preds = %if.then22, %land.lhs.true19, %if.end16
  %26 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5017
  %bits26 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %26, i32 0, i32 43, !dbg !5019
  %httpproxy27 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits26, i32 0, i32 5, !dbg !5020
  %27 = load i8, i8* %httpproxy27, align 1, !dbg !5020
  %tobool28 = trunc i8 %27 to i1, !dbg !5020
  br i1 %tobool28, label %land.lhs.true29, label %if.else39, !dbg !5021

land.lhs.true29:                                  ; preds = %if.end25
  %28 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5022
  %bits30 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %28, i32 0, i32 43, !dbg !5023
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits30, i32 0, i32 15, !dbg !5024
  %29 = load i8, i8* %tunnel_proxy, align 1, !dbg !5024
  %tobool31 = trunc i8 %29 to i1, !dbg !5024
  %conv = zext i1 %tobool31 to i32, !dbg !5022
  %30 = load i8, i8* %proxytunnel.addr, align 1, !dbg !5025
  %tobool32 = trunc i8 %30 to i1, !dbg !5025
  %conv33 = zext i1 %tobool32 to i32, !dbg !5025
  %cmp = icmp eq i32 %conv, %conv33, !dbg !5026
  br i1 %cmp, label %if.then35, label %if.else39, !dbg !5027

if.then35:                                        ; preds = %land.lhs.true29
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5029
  %32 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5031
  %33 = load i8*, i8** %request.addr, align 8, !dbg !5032
  %34 = load i8*, i8** %path.addr, align 8, !dbg !5033
  %call = call i32 @output_auth_headers(%struct.connectdata* %31, %struct.auth* %32, i8* %33, i8* %34, i1 zeroext true), !dbg !5034
  store i32 %call, i32* %result, align 4, !dbg !5035
  %35 = load i32, i32* %result, align 4, !dbg !5036
  %tobool36 = icmp ne i32 %35, 0, !dbg !5036
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5038

if.then37:                                        ; preds = %if.then35
  %36 = load i32, i32* %result, align 4, !dbg !5039
  store i32 %36, i32* %retval, align 4, !dbg !5040
  br label %return, !dbg !5040

if.end38:                                         ; preds = %if.then35
  br label %if.end41, !dbg !5041

if.else39:                                        ; preds = %land.lhs.true29, %if.end25
  %37 = load %struct.auth*, %struct.auth** %authproxy, align 8, !dbg !5042
  %done40 = getelementptr inbounds %struct.auth, %struct.auth* %37, i32 0, i32 3, !dbg !5043
  store i8 1, i8* %done40, align 8, !dbg !5044
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.end38
  %38 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5045
  %state42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %38, i32 0, i32 17, !dbg !5047
  %this_is_a_follow = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state42, i32 0, i32 9, !dbg !5048
  %39 = load i8, i8* %this_is_a_follow, align 8, !dbg !5048
  %tobool43 = trunc i8 %39 to i1, !dbg !5048
  br i1 %tobool43, label %lor.lhs.false44, label %if.then59, !dbg !5049

lor.lhs.false44:                                  ; preds = %if.end41
  %40 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5050
  %bits45 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %40, i32 0, i32 43, !dbg !5051
  %netrc = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits45, i32 0, i32 21, !dbg !5052
  %41 = load i8, i8* %netrc, align 1, !dbg !5052
  %tobool46 = trunc i8 %41 to i1, !dbg !5052
  br i1 %tobool46, label %if.then59, label %lor.lhs.false48, !dbg !5053

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5054
  %state49 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 17, !dbg !5055
  %first_host = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state49, i32 0, i32 10, !dbg !5056
  %43 = load i8*, i8** %first_host, align 8, !dbg !5056
  %tobool50 = icmp ne i8* %43, null, !dbg !5054
  br i1 %tobool50, label %lor.lhs.false51, label %if.then59, !dbg !5057

lor.lhs.false51:                                  ; preds = %lor.lhs.false48
  %44 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5058
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %44, i32 0, i32 13, !dbg !5059
  %http_disable_hostname_check_before_authentication = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 99, !dbg !5060
  %45 = load i8, i8* %http_disable_hostname_check_before_authentication, align 4, !dbg !5060
  %tobool52 = trunc i8 %45 to i1, !dbg !5060
  br i1 %tobool52, label %if.then59, label %lor.lhs.false54, !dbg !5061

lor.lhs.false54:                                  ; preds = %lor.lhs.false51
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5062
  %state55 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 17, !dbg !5062
  %first_host56 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state55, i32 0, i32 10, !dbg !5062
  %47 = load i8*, i8** %first_host56, align 8, !dbg !5062
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5062
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 12, !dbg !5062
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !5062
  %49 = load i8*, i8** %name, align 8, !dbg !5062
  %call57 = call i32 @Curl_strcasecompare(i8* %47, i8* %49), !dbg !5062
  %tobool58 = icmp ne i32 %call57, 0, !dbg !5062
  br i1 %tobool58, label %if.then59, label %if.else61, !dbg !5063

if.then59:                                        ; preds = %lor.lhs.false54, %lor.lhs.false51, %lor.lhs.false48, %lor.lhs.false44, %if.end41
  %50 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5064
  %51 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !5066
  %52 = load i8*, i8** %request.addr, align 8, !dbg !5067
  %53 = load i8*, i8** %path.addr, align 8, !dbg !5068
  %call60 = call i32 @output_auth_headers(%struct.connectdata* %50, %struct.auth* %51, i8* %52, i8* %53, i1 zeroext false), !dbg !5069
  store i32 %call60, i32* %result, align 4, !dbg !5070
  br label %if.end63, !dbg !5071

if.else61:                                        ; preds = %lor.lhs.false54
  %54 = load %struct.auth*, %struct.auth** %authhost, align 8, !dbg !5072
  %done62 = getelementptr inbounds %struct.auth, %struct.auth* %54, i32 0, i32 3, !dbg !5073
  store i8 1, i8* %done62, align 8, !dbg !5074
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then59
  %55 = load i32, i32* %result, align 4, !dbg !5075
  store i32 %55, i32* %retval, align 4, !dbg !5076
  br label %return, !dbg !5076

return:                                           ; preds = %if.end63, %if.then37, %if.else
  %56 = load i32, i32* %retval, align 4, !dbg !5077
  ret i32 %56, !dbg !5077
}

; Function Attrs: nounwind uwtable
define internal i32 @output_auth_headers(%struct.connectdata* %conn, %struct.auth* %authstatus, i8* %request, i8* %path, i1 zeroext %proxy) #0 !dbg !1911 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %authstatus.addr = alloca %struct.auth*, align 8
  %request.addr = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %proxy.addr = alloca i8, align 1
  %auth = alloca i8*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5078, metadata !1950), !dbg !5079
  store %struct.auth* %authstatus, %struct.auth** %authstatus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.auth** %authstatus.addr, metadata !5080, metadata !1950), !dbg !5081
  store i8* %request, i8** %request.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %request.addr, metadata !5082, metadata !1950), !dbg !5083
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5084, metadata !1950), !dbg !5085
  %frombool = zext i1 %proxy to i8
  store i8 %frombool, i8* %proxy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %proxy.addr, metadata !5086, metadata !1950), !dbg !5087
  call void @llvm.dbg.declare(metadata i8** %auth, metadata !5088, metadata !1950), !dbg !5089
  store i8* null, i8** %auth, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5090, metadata !1950), !dbg !5091
  store i32 0, i32* %result, align 4, !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5092, metadata !1950), !dbg !5093
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5094
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !5095
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !5095
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !5093
  %2 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5096
  %picked = getelementptr inbounds %struct.auth, %struct.auth* %2, i32 0, i32 1, !dbg !5098
  %3 = load i64, i64* %picked, align 8, !dbg !5098
  %cmp = icmp eq i64 %3, 2, !dbg !5099
  br i1 %cmp, label %if.then, label %if.else, !dbg !5100

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8** %auth, align 8, !dbg !5101
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5103
  %5 = load i8, i8* %proxy.addr, align 1, !dbg !5104
  %tobool = trunc i8 %5 to i1, !dbg !5104
  %6 = load i8*, i8** %request.addr, align 8, !dbg !5105
  %7 = load i8*, i8** %path.addr, align 8, !dbg !5106
  %call = call i32 @Curl_output_digest(%struct.connectdata* %4, i1 zeroext %tobool, i8* %6, i8* %7), !dbg !5107
  store i32 %call, i32* %result, align 4, !dbg !5108
  %8 = load i32, i32* %result, align 4, !dbg !5109
  %tobool2 = icmp ne i32 %8, 0, !dbg !5109
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5111

if.then3:                                         ; preds = %if.then
  %9 = load i32, i32* %result, align 4, !dbg !5112
  store i32 %9, i32* %retval, align 4, !dbg !5113
  br label %return, !dbg !5113

if.end:                                           ; preds = %if.then
  br label %if.end27, !dbg !5114

if.else:                                          ; preds = %entry
  %10 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5115
  %picked4 = getelementptr inbounds %struct.auth, %struct.auth* %10, i32 0, i32 1, !dbg !5117
  %11 = load i64, i64* %picked4, align 8, !dbg !5117
  %cmp5 = icmp eq i64 %11, 1, !dbg !5118
  br i1 %cmp5, label %if.then6, label %if.end26, !dbg !5119

if.then6:                                         ; preds = %if.else
  %12 = load i8, i8* %proxy.addr, align 1, !dbg !5120
  %tobool7 = trunc i8 %12 to i1, !dbg !5120
  br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !5123

land.lhs.true:                                    ; preds = %if.then6
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5124
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 43, !dbg !5126
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 8, !dbg !5127
  %14 = load i8, i8* %proxy_user_passwd, align 1, !dbg !5127
  %tobool8 = trunc i8 %14 to i1, !dbg !5127
  br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !5128

land.lhs.true9:                                   ; preds = %land.lhs.true
  %15 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5129
  %call10 = call i8* @Curl_checkProxyheaders(%struct.connectdata* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i32 0, i32 0)), !dbg !5130
  %tobool11 = icmp ne i8* %call10, null, !dbg !5130
  br i1 %tobool11, label %lor.lhs.false, label %if.then19, !dbg !5131

lor.lhs.false:                                    ; preds = %land.lhs.true9, %land.lhs.true, %if.then6
  %16 = load i8, i8* %proxy.addr, align 1, !dbg !5132
  %tobool12 = trunc i8 %16 to i1, !dbg !5132
  br i1 %tobool12, label %if.end25, label %land.lhs.true13, !dbg !5133

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5134
  %bits14 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 43, !dbg !5135
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits14, i32 0, i32 7, !dbg !5136
  %18 = load i8, i8* %user_passwd, align 1, !dbg !5136
  %tobool15 = trunc i8 %18 to i1, !dbg !5136
  br i1 %tobool15, label %land.lhs.true16, label %if.end25, !dbg !5137

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %19 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5138
  %call17 = call i8* @Curl_checkheaders(%struct.connectdata* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0)), !dbg !5139
  %tobool18 = icmp ne i8* %call17, null, !dbg !5139
  br i1 %tobool18, label %if.end25, label %if.then19, !dbg !5140

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true9
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %auth, align 8, !dbg !5142
  %20 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5144
  %21 = load i8, i8* %proxy.addr, align 1, !dbg !5145
  %tobool20 = trunc i8 %21 to i1, !dbg !5145
  %call21 = call i32 @http_output_basic(%struct.connectdata* %20, i1 zeroext %tobool20), !dbg !5146
  store i32 %call21, i32* %result, align 4, !dbg !5147
  %22 = load i32, i32* %result, align 4, !dbg !5148
  %tobool22 = icmp ne i32 %22, 0, !dbg !5148
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5150

if.then23:                                        ; preds = %if.then19
  %23 = load i32, i32* %result, align 4, !dbg !5151
  store i32 %23, i32* %retval, align 4, !dbg !5152
  br label %return, !dbg !5152

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !5153

if.end25:                                         ; preds = %if.end24, %land.lhs.true16, %land.lhs.true13, %lor.lhs.false
  %24 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5154
  %done = getelementptr inbounds %struct.auth, %struct.auth* %24, i32 0, i32 3, !dbg !5155
  store i8 1, i8* %done, align 8, !dbg !5156
  br label %if.end26, !dbg !5157

if.end26:                                         ; preds = %if.end25, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  %25 = load i8*, i8** %auth, align 8, !dbg !5158
  %tobool28 = icmp ne i8* %25, null, !dbg !5158
  br i1 %tobool28, label %if.then29, label %if.else52, !dbg !5160

if.then29:                                        ; preds = %if.end27
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5161
  %27 = load i8, i8* %proxy.addr, align 1, !dbg !5163
  %tobool30 = trunc i8 %27 to i1, !dbg !5163
  %cond = select i1 %tobool30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), !dbg !5163
  %28 = load i8*, i8** %auth, align 8, !dbg !5164
  %29 = load i8, i8* %proxy.addr, align 1, !dbg !5165
  %tobool31 = trunc i8 %29 to i1, !dbg !5165
  br i1 %tobool31, label %cond.true, label %cond.false37, !dbg !5165

cond.true:                                        ; preds = %if.then29
  %30 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5166
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 16, !dbg !5168
  %user = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 3, !dbg !5169
  %31 = load i8*, i8** %user, align 8, !dbg !5169
  %tobool32 = icmp ne i8* %31, null, !dbg !5166
  br i1 %tobool32, label %cond.true33, label %cond.false, !dbg !5166

cond.true33:                                      ; preds = %cond.true
  %32 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5170
  %http_proxy34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 16, !dbg !5172
  %user35 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy34, i32 0, i32 3, !dbg !5173
  %33 = load i8*, i8** %user35, align 8, !dbg !5173
  br label %cond.end, !dbg !5174

cond.false:                                       ; preds = %cond.true
  br label %cond.end, !dbg !5175

cond.end:                                         ; preds = %cond.false, %cond.true33
  %cond36 = phi i8* [ %33, %cond.true33 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false ], !dbg !5177
  br label %cond.end45, !dbg !5179

cond.false37:                                     ; preds = %if.then29
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5180
  %user38 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 25, !dbg !5181
  %35 = load i8*, i8** %user38, align 8, !dbg !5181
  %tobool39 = icmp ne i8* %35, null, !dbg !5180
  br i1 %tobool39, label %cond.true40, label %cond.false42, !dbg !5180

cond.true40:                                      ; preds = %cond.false37
  %36 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5182
  %user41 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %36, i32 0, i32 25, !dbg !5183
  %37 = load i8*, i8** %user41, align 8, !dbg !5183
  br label %cond.end43, !dbg !5184

cond.false42:                                     ; preds = %cond.false37
  br label %cond.end43, !dbg !5185

cond.end43:                                       ; preds = %cond.false42, %cond.true40
  %cond44 = phi i8* [ %37, %cond.true40 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), %cond.false42 ], !dbg !5186
  br label %cond.end45, !dbg !5187

cond.end45:                                       ; preds = %cond.end43, %cond.end
  %cond46 = phi i8* [ %cond36, %cond.end ], [ %cond44, %cond.end43 ], !dbg !5189
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %26, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.107, i32 0, i32 0), i8* %cond, i8* %28, i8* %cond46), !dbg !5191
  %38 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5192
  %done47 = getelementptr inbounds %struct.auth, %struct.auth* %38, i32 0, i32 3, !dbg !5193
  %39 = load i8, i8* %done47, align 8, !dbg !5193
  %tobool48 = trunc i8 %39 to i1, !dbg !5193
  %lnot = xor i1 %tobool48, true, !dbg !5194
  %cond49 = select i1 %lnot, i32 1, i32 0, !dbg !5195
  %tobool50 = icmp ne i32 %cond49, 0, !dbg !5195
  %40 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5196
  %multipass = getelementptr inbounds %struct.auth, %struct.auth* %40, i32 0, i32 4, !dbg !5197
  %frombool51 = zext i1 %tobool50 to i8, !dbg !5198
  store i8 %frombool51, i8* %multipass, align 1, !dbg !5198
  br label %if.end54, !dbg !5199

if.else52:                                        ; preds = %if.end27
  %41 = load %struct.auth*, %struct.auth** %authstatus.addr, align 8, !dbg !5200
  %multipass53 = getelementptr inbounds %struct.auth, %struct.auth* %41, i32 0, i32 4, !dbg !5201
  store i8 0, i8* %multipass53, align 1, !dbg !5202
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %cond.end45
  store i32 0, i32* %retval, align 4, !dbg !5203
  br label %return, !dbg !5203

return:                                           ; preds = %if.end54, %if.then23, %if.then3
  %42 = load i32, i32* %retval, align 4, !dbg !5204
  ret i32 %42, !dbg !5204
}

declare i32 @Curl_strcasecompare(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_http_input_auth(%struct.connectdata* %conn, i1 zeroext %proxy, i8* %auth) #0 !dbg !1867 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxy.addr = alloca i8, align 1
  %auth.addr = alloca i8*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %availp = alloca i64*, align 8
  %authp = alloca %struct.auth*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5205, metadata !1950), !dbg !5206
  %frombool = zext i1 %proxy to i8
  store i8 %frombool, i8* %proxy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %proxy.addr, metadata !5207, metadata !1950), !dbg !5208
  store i8* %auth, i8** %auth.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %auth.addr, metadata !5209, metadata !1950), !dbg !5210
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5211, metadata !1950), !dbg !5212
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5213
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !5214
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !5214
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !5212
  call void @llvm.dbg.declare(metadata i64** %availp, metadata !5215, metadata !1950), !dbg !5217
  call void @llvm.dbg.declare(metadata %struct.auth** %authp, metadata !5218, metadata !1950), !dbg !5219
  %2 = load i8, i8* %proxy.addr, align 1, !dbg !5220
  %tobool = trunc i8 %2 to i1, !dbg !5220
  br i1 %tobool, label %if.then, label %if.else, !dbg !5222

if.then:                                          ; preds = %entry
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5223
  %info = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 19, !dbg !5225
  %proxyauthavail = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info, i32 0, i32 7, !dbg !5226
  store i64* %proxyauthavail, i64** %availp, align 8, !dbg !5227
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5228
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 17, !dbg !5229
  %authproxy = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 24, !dbg !5230
  store %struct.auth* %authproxy, %struct.auth** %authp, align 8, !dbg !5231
  br label %if.end, !dbg !5232

if.else:                                          ; preds = %entry
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5233
  %info2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 19, !dbg !5235
  %httpauthavail = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info2, i32 0, i32 8, !dbg !5236
  store i64* %httpauthavail, i64** %availp, align 8, !dbg !5237
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5238
  %state3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 17, !dbg !5239
  %authhost = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state3, i32 0, i32 23, !dbg !5240
  store %struct.auth* %authhost, %struct.auth** %authp, align 8, !dbg !5241
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !5242

while.cond:                                       ; preds = %while.end60, %if.end
  %7 = load i8*, i8** %auth.addr, align 8, !dbg !5243
  %8 = load i8, i8* %7, align 1, !dbg !5245
  %tobool4 = icmp ne i8 %8, 0, !dbg !5246
  br i1 %tobool4, label %while.body, label %while.end61, !dbg !5246

while.body:                                       ; preds = %while.cond
  %9 = load i8*, i8** %auth.addr, align 8, !dbg !5247
  %call = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* %9, i64 6), !dbg !5247
  %tobool5 = icmp ne i32 %call, 0, !dbg !5247
  br i1 %tobool5, label %if.then6, label %if.else21, !dbg !5250

if.then6:                                         ; preds = %while.body
  %10 = load %struct.auth*, %struct.auth** %authp, align 8, !dbg !5251
  %avail = getelementptr inbounds %struct.auth, %struct.auth* %10, i32 0, i32 2, !dbg !5254
  %11 = load i64, i64* %avail, align 8, !dbg !5254
  %and = and i64 %11, 2, !dbg !5255
  %cmp = icmp ne i64 %and, 0, !dbg !5256
  br i1 %cmp, label %if.then7, label %if.else8, !dbg !5257

if.then7:                                         ; preds = %if.then6
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5258
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0)), !dbg !5259
  br label %if.end20, !dbg !5259

if.else8:                                         ; preds = %if.then6
  %call9 = call zeroext i1 @Curl_auth_is_digest_supported(), !dbg !5260
  br i1 %call9, label %if.then10, label %if.end19, !dbg !5262

if.then10:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5263, metadata !1950), !dbg !5265
  %13 = load i64*, i64** %availp, align 8, !dbg !5266
  %14 = load i64, i64* %13, align 8, !dbg !5267
  %or = or i64 %14, 2, !dbg !5267
  store i64 %or, i64* %13, align 8, !dbg !5267
  %15 = load %struct.auth*, %struct.auth** %authp, align 8, !dbg !5268
  %avail11 = getelementptr inbounds %struct.auth, %struct.auth* %15, i32 0, i32 2, !dbg !5269
  %16 = load i64, i64* %avail11, align 8, !dbg !5270
  %or12 = or i64 %16, 2, !dbg !5270
  store i64 %or12, i64* %avail11, align 8, !dbg !5270
  %17 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5271
  %18 = load i8, i8* %proxy.addr, align 1, !dbg !5272
  %tobool13 = trunc i8 %18 to i1, !dbg !5272
  %19 = load i8*, i8** %auth.addr, align 8, !dbg !5273
  %call14 = call i32 @Curl_input_digest(%struct.connectdata* %17, i1 zeroext %tobool13, i8* %19), !dbg !5274
  store i32 %call14, i32* %result, align 4, !dbg !5275
  %20 = load i32, i32* %result, align 4, !dbg !5276
  %tobool15 = icmp ne i32 %20, 0, !dbg !5276
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !5278

if.then16:                                        ; preds = %if.then10
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5279
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0)), !dbg !5281
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5282
  %state17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !5283
  %authproblem = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state17, i32 0, i32 25, !dbg !5284
  store i8 1, i8* %authproblem, align 8, !dbg !5285
  br label %if.end18, !dbg !5286

if.end18:                                         ; preds = %if.then16, %if.then10
  br label %if.end19, !dbg !5287

if.end19:                                         ; preds = %if.end18, %if.else8
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then7
  br label %if.end35, !dbg !5288

if.else21:                                        ; preds = %while.body
  %23 = load i8*, i8** %auth.addr, align 8, !dbg !5289
  %call22 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* %23, i64 5), !dbg !5289
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5289
  br i1 %tobool23, label %if.then24, label %if.end34, !dbg !5291

if.then24:                                        ; preds = %if.else21
  %24 = load i64*, i64** %availp, align 8, !dbg !5292
  %25 = load i64, i64* %24, align 8, !dbg !5294
  %or25 = or i64 %25, 1, !dbg !5294
  store i64 %or25, i64* %24, align 8, !dbg !5294
  %26 = load %struct.auth*, %struct.auth** %authp, align 8, !dbg !5295
  %avail26 = getelementptr inbounds %struct.auth, %struct.auth* %26, i32 0, i32 2, !dbg !5296
  %27 = load i64, i64* %avail26, align 8, !dbg !5297
  %or27 = or i64 %27, 1, !dbg !5297
  store i64 %or27, i64* %avail26, align 8, !dbg !5297
  %28 = load %struct.auth*, %struct.auth** %authp, align 8, !dbg !5298
  %picked = getelementptr inbounds %struct.auth, %struct.auth* %28, i32 0, i32 1, !dbg !5300
  %29 = load i64, i64* %picked, align 8, !dbg !5300
  %cmp28 = icmp eq i64 %29, 1, !dbg !5301
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !5302

if.then29:                                        ; preds = %if.then24
  %30 = load %struct.auth*, %struct.auth** %authp, align 8, !dbg !5303
  %avail30 = getelementptr inbounds %struct.auth, %struct.auth* %30, i32 0, i32 2, !dbg !5305
  store i64 0, i64* %avail30, align 8, !dbg !5306
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5307
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %31, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0)), !dbg !5308
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5309
  %state31 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %32, i32 0, i32 17, !dbg !5310
  %authproblem32 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state31, i32 0, i32 25, !dbg !5311
  store i8 1, i8* %authproblem32, align 8, !dbg !5312
  br label %if.end33, !dbg !5313

if.end33:                                         ; preds = %if.then29, %if.then24
  br label %if.end34, !dbg !5314

if.end34:                                         ; preds = %if.end33, %if.else21
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end20
  br label %while.cond36, !dbg !5315

while.cond36:                                     ; preds = %while.body41, %if.end35
  %33 = load i8*, i8** %auth.addr, align 8, !dbg !5316
  %34 = load i8, i8* %33, align 1, !dbg !5318
  %conv = sext i8 %34 to i32, !dbg !5318
  %tobool37 = icmp ne i32 %conv, 0, !dbg !5318
  br i1 %tobool37, label %land.rhs, label %land.end, !dbg !5319

land.rhs:                                         ; preds = %while.cond36
  %35 = load i8*, i8** %auth.addr, align 8, !dbg !5320
  %36 = load i8, i8* %35, align 1, !dbg !5322
  %conv38 = sext i8 %36 to i32, !dbg !5322
  %cmp39 = icmp ne i32 %conv38, 44, !dbg !5323
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond36
  %37 = phi i1 [ false, %while.cond36 ], [ %cmp39, %land.rhs ]
  br i1 %37, label %while.body41, label %while.end, !dbg !5324

while.body41:                                     ; preds = %land.end
  %38 = load i8*, i8** %auth.addr, align 8, !dbg !5326
  %incdec.ptr = getelementptr inbounds i8, i8* %38, i32 1, !dbg !5326
  store i8* %incdec.ptr, i8** %auth.addr, align 8, !dbg !5326
  br label %while.cond36, !dbg !5327

while.end:                                        ; preds = %land.end
  %39 = load i8*, i8** %auth.addr, align 8, !dbg !5329
  %40 = load i8, i8* %39, align 1, !dbg !5331
  %conv42 = sext i8 %40 to i32, !dbg !5331
  %cmp43 = icmp eq i32 %conv42, 44, !dbg !5332
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !5333

if.then45:                                        ; preds = %while.end
  %41 = load i8*, i8** %auth.addr, align 8, !dbg !5334
  %incdec.ptr46 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5334
  store i8* %incdec.ptr46, i8** %auth.addr, align 8, !dbg !5334
  br label %if.end47, !dbg !5335

if.end47:                                         ; preds = %if.then45, %while.end
  br label %while.cond48, !dbg !5336

while.cond48:                                     ; preds = %while.body58, %if.end47
  %42 = load i8*, i8** %auth.addr, align 8, !dbg !5337
  %43 = load i8, i8* %42, align 1, !dbg !5338
  %conv49 = sext i8 %43 to i32, !dbg !5338
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !5338
  br i1 %tobool50, label %land.rhs51, label %land.end57, !dbg !5339

land.rhs51:                                       ; preds = %while.cond48
  %44 = load i8*, i8** %auth.addr, align 8, !dbg !5340
  %45 = load i8, i8* %44, align 1, !dbg !5340
  %conv52 = zext i8 %45 to i32, !dbg !5340
  %idxprom = sext i32 %conv52 to i64, !dbg !5340
  %call53 = call i16** @__ctype_b_loc() #1, !dbg !5340
  %46 = load i16*, i16** %call53, align 8, !dbg !5340
  %arrayidx = getelementptr inbounds i16, i16* %46, i64 %idxprom, !dbg !5340
  %47 = load i16, i16* %arrayidx, align 2, !dbg !5340
  %conv54 = zext i16 %47 to i32, !dbg !5340
  %and55 = and i32 %conv54, 8192, !dbg !5340
  %tobool56 = icmp ne i32 %and55, 0, !dbg !5341
  br label %land.end57

land.end57:                                       ; preds = %land.rhs51, %while.cond48
  %48 = phi i1 [ false, %while.cond48 ], [ %tobool56, %land.rhs51 ]
  br i1 %48, label %while.body58, label %while.end60, !dbg !5342

while.body58:                                     ; preds = %land.end57
  %49 = load i8*, i8** %auth.addr, align 8, !dbg !5343
  %incdec.ptr59 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !5343
  store i8* %incdec.ptr59, i8** %auth.addr, align 8, !dbg !5343
  br label %while.cond48, !dbg !5344

while.end60:                                      ; preds = %land.end57
  br label %while.cond, !dbg !5345

while.end61:                                      ; preds = %while.cond
  ret i32 0, !dbg !5347
}

declare i32 @curl_strnequal(i8*, i8*, i64) #3

declare void @Curl_infof(%struct.Curl_easy*, i8*, ...) #3

declare zeroext i1 @Curl_auth_is_digest_supported() #3

declare i32 @Curl_input_digest(%struct.connectdata*, i1 zeroext, i8*) #3

; Function Attrs: nounwind uwtable
define %struct.Curl_send_buffer* @Curl_add_buffer_init() #0 !dbg !1870 {
entry:
  %0 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !5348
  %call = call i8* %0(i64 1, i64 24), !dbg !5348
  %1 = bitcast i8* %call to %struct.Curl_send_buffer*, !dbg !5348
  ret %struct.Curl_send_buffer* %1, !dbg !5349
}

; Function Attrs: nounwind uwtable
define void @Curl_add_buffer_free(%struct.Curl_send_buffer* %buff) #0 !dbg !1880 {
entry:
  %buff.addr = alloca %struct.Curl_send_buffer*, align 8
  store %struct.Curl_send_buffer* %buff, %struct.Curl_send_buffer** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %buff.addr, metadata !5350, metadata !1950), !dbg !5351
  %0 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %buff.addr, align 8, !dbg !5352
  %tobool = icmp ne %struct.Curl_send_buffer* %0, null, !dbg !5352
  br i1 %tobool, label %if.then, label %if.end, !dbg !5354

if.then:                                          ; preds = %entry
  %1 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5355
  %2 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %buff.addr, align 8, !dbg !5355
  %buffer = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %2, i32 0, i32 0, !dbg !5355
  %3 = load i8*, i8** %buffer, align 8, !dbg !5355
  call void %1(i8* %3), !dbg !5355
  br label %if.end, !dbg !5355

if.end:                                           ; preds = %if.then, %entry
  %4 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5356
  %5 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %buff.addr, align 8, !dbg !5356
  %6 = bitcast %struct.Curl_send_buffer* %5 to i8*, !dbg !5356
  call void %4(i8* %6), !dbg !5356
  ret void, !dbg !5357
}

; Function Attrs: nounwind uwtable
define i32 @Curl_add_buffer_send(%struct.Curl_send_buffer* %in, %struct.connectdata* %conn, i64* %bytes_written, i64 %included_body_bytes, i32 %socketindex) #0 !dbg !1883 {
entry:
  %retval = alloca i32, align 4
  %in.addr = alloca %struct.Curl_send_buffer*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %bytes_written.addr = alloca i64*, align 8
  %included_body_bytes.addr = alloca i64, align 8
  %socketindex.addr = alloca i32, align 4
  %amount = alloca i64, align 8
  %result = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %size = alloca i64, align 8
  %http = alloca %struct.HTTP*, align 8
  %sendsize = alloca i64, align 8
  %sockfd = alloca i32, align 4
  %headersize = alloca i64, align 8
  %headlen = alloca i64, align 8
  %bodylen = alloca i64, align 8
  store %struct.Curl_send_buffer* %in, %struct.Curl_send_buffer** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %in.addr, metadata !5358, metadata !1950), !dbg !5359
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5360, metadata !1950), !dbg !5361
  store i64* %bytes_written, i64** %bytes_written.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bytes_written.addr, metadata !5362, metadata !1950), !dbg !5363
  store i64 %included_body_bytes, i64* %included_body_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %included_body_bytes.addr, metadata !5364, metadata !1950), !dbg !5365
  store i32 %socketindex, i32* %socketindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %socketindex.addr, metadata !5366, metadata !1950), !dbg !5367
  call void @llvm.dbg.declare(metadata i64* %amount, metadata !5368, metadata !1950), !dbg !5369
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5370, metadata !1950), !dbg !5371
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5372, metadata !1950), !dbg !5373
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5374, metadata !1950), !dbg !5375
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !5376, metadata !1950), !dbg !5377
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5378
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !5379
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5379
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 12, !dbg !5380
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !5381
  %2 = load i8*, i8** %protop, align 8, !dbg !5381
  %3 = bitcast i8* %2 to %struct.HTTP*, !dbg !5378
  store %struct.HTTP* %3, %struct.HTTP** %http, align 8, !dbg !5377
  call void @llvm.dbg.declare(metadata i64* %sendsize, metadata !5382, metadata !1950), !dbg !5383
  call void @llvm.dbg.declare(metadata i32* %sockfd, metadata !5384, metadata !1950), !dbg !5385
  call void @llvm.dbg.declare(metadata i64* %headersize, metadata !5386, metadata !1950), !dbg !5387
  br label %do.body, !dbg !5388

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5389

do.end:                                           ; preds = %do.body
  %4 = load i32, i32* %socketindex.addr, align 4, !dbg !5392
  %idxprom = sext i32 %4 to i64, !dbg !5393
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5393
  %sock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 33, !dbg !5394
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock, i64 0, i64 %idxprom, !dbg !5393
  %6 = load i32, i32* %arrayidx, align 4, !dbg !5393
  store i32 %6, i32* %sockfd, align 4, !dbg !5395
  %7 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5396
  %buffer = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %7, i32 0, i32 0, !dbg !5397
  %8 = load i8*, i8** %buffer, align 8, !dbg !5397
  store i8* %8, i8** %ptr, align 8, !dbg !5398
  %9 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5399
  %size_used = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %9, i32 0, i32 2, !dbg !5400
  %10 = load i64, i64* %size_used, align 8, !dbg !5400
  store i64 %10, i64* %size, align 8, !dbg !5401
  %11 = load i64, i64* %size, align 8, !dbg !5402
  %12 = load i64, i64* %included_body_bytes.addr, align 8, !dbg !5403
  %sub = sub i64 %11, %12, !dbg !5404
  store i64 %sub, i64* %headersize, align 8, !dbg !5405
  br label %do.body1, !dbg !5406

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5407

do.end2:                                          ; preds = %do.body1
  %13 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5410
  %data3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 0, !dbg !5410
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data3, align 8, !dbg !5410
  store i32 0, i32* %result, align 4, !dbg !5411
  %15 = load i32, i32* %result, align 4, !dbg !5412
  %tobool = icmp ne i32 %15, 0, !dbg !5412
  br i1 %tobool, label %if.then, label %if.end, !dbg !5414

if.then:                                          ; preds = %do.end2
  %16 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5415
  call void @Curl_add_buffer_free(%struct.Curl_send_buffer* %16), !dbg !5417
  %17 = load i32, i32* %result, align 4, !dbg !5418
  store i32 %17, i32* %retval, align 4, !dbg !5419
  br label %return, !dbg !5419

if.end:                                           ; preds = %do.end2
  %18 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5420
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %18, i32 0, i32 47, !dbg !5422
  %19 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !5422
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %19, i32 0, i32 16, !dbg !5423
  %20 = load i32, i32* %flags, align 4, !dbg !5423
  %and = and i32 %20, 1, !dbg !5424
  %tobool4 = icmp ne i32 %and, 0, !dbg !5424
  br i1 %tobool4, label %land.lhs.true, label %lor.lhs.false, !dbg !5425

lor.lhs.false:                                    ; preds = %if.end
  %21 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5426
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 16, !dbg !5427
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 2, !dbg !5428
  %22 = load i32, i32* %proxytype, align 8, !dbg !5428
  %cmp = icmp eq i32 %22, 2, !dbg !5429
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5430

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %23 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5431
  %httpversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %23, i32 0, i32 29, !dbg !5433
  %24 = load i32, i32* %httpversion, align 8, !dbg !5433
  %cmp5 = icmp ne i32 %24, 20, !dbg !5434
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5435

if.then6:                                         ; preds = %land.lhs.true
  %25 = load i64, i64* %size, align 8, !dbg !5437
  %cmp7 = icmp ugt i64 %25, 16384, !dbg !5439
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5440

cond.true:                                        ; preds = %if.then6
  br label %cond.end, !dbg !5441

cond.false:                                       ; preds = %if.then6
  %26 = load i64, i64* %size, align 8, !dbg !5443
  br label %cond.end, !dbg !5445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 16384, %cond.true ], [ %26, %cond.false ], !dbg !5446
  store i64 %cond, i64* %sendsize, align 8, !dbg !5448
  %27 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5449
  %data8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %27, i32 0, i32 0, !dbg !5450
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data8, align 8, !dbg !5450
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 17, !dbg !5451
  %uploadbuffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 7, !dbg !5452
  %arraydecay = getelementptr inbounds [16385 x i8], [16385 x i8]* %uploadbuffer, i32 0, i32 0, !dbg !5453
  %29 = load i8*, i8** %ptr, align 8, !dbg !5454
  %30 = load i64, i64* %sendsize, align 8, !dbg !5455
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %29, i64 %30, i32 1, i1 false), !dbg !5453
  %31 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5456
  %data9 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 0, !dbg !5457
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data9, align 8, !dbg !5457
  %state10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %32, i32 0, i32 17, !dbg !5458
  %uploadbuffer11 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state10, i32 0, i32 7, !dbg !5459
  %arraydecay12 = getelementptr inbounds [16385 x i8], [16385 x i8]* %uploadbuffer11, i32 0, i32 0, !dbg !5456
  store i8* %arraydecay12, i8** %ptr, align 8, !dbg !5460
  br label %if.end13, !dbg !5461

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %33 = load i64, i64* %size, align 8, !dbg !5462
  store i64 %33, i64* %sendsize, align 8, !dbg !5463
  br label %if.end13

if.end13:                                         ; preds = %if.else, %cond.end
  %34 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5464
  %35 = load i32, i32* %sockfd, align 4, !dbg !5465
  %36 = load i8*, i8** %ptr, align 8, !dbg !5466
  %37 = load i64, i64* %sendsize, align 8, !dbg !5467
  %call = call i32 @Curl_write(%struct.connectdata* %34, i32 %35, i8* %36, i64 %37, i64* %amount), !dbg !5468
  store i32 %call, i32* %result, align 4, !dbg !5469
  %38 = load i32, i32* %result, align 4, !dbg !5470
  %tobool14 = icmp ne i32 %38, 0, !dbg !5470
  br i1 %tobool14, label %if.end67, label %if.then15, !dbg !5472

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i64* %headlen, metadata !5473, metadata !1950), !dbg !5475
  %39 = load i64, i64* %amount, align 8, !dbg !5476
  %40 = load i64, i64* %headersize, align 8, !dbg !5477
  %cmp16 = icmp ugt i64 %39, %40, !dbg !5478
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !5479

cond.true17:                                      ; preds = %if.then15
  %41 = load i64, i64* %headersize, align 8, !dbg !5480
  br label %cond.end19, !dbg !5482

cond.false18:                                     ; preds = %if.then15
  %42 = load i64, i64* %amount, align 8, !dbg !5483
  br label %cond.end19, !dbg !5485

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i64 [ %41, %cond.true17 ], [ %42, %cond.false18 ], !dbg !5486
  store i64 %cond20, i64* %headlen, align 8, !dbg !5488
  call void @llvm.dbg.declare(metadata i64* %bodylen, metadata !5489, metadata !1950), !dbg !5490
  %43 = load i64, i64* %amount, align 8, !dbg !5491
  %44 = load i64, i64* %headlen, align 8, !dbg !5492
  %sub21 = sub i64 %43, %44, !dbg !5493
  store i64 %sub21, i64* %bodylen, align 8, !dbg !5490
  %45 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5494
  %data22 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %45, i32 0, i32 0, !dbg !5496
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data22, align 8, !dbg !5496
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 13, !dbg !5497
  %verbose = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 106, !dbg !5498
  %47 = load i8, i8* %verbose, align 8, !dbg !5498
  %tobool23 = trunc i8 %47 to i1, !dbg !5498
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !5499

if.then24:                                        ; preds = %cond.end19
  %48 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5500
  %data25 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 0, !dbg !5502
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data25, align 8, !dbg !5502
  %50 = load i8*, i8** %ptr, align 8, !dbg !5503
  %51 = load i64, i64* %headlen, align 8, !dbg !5504
  %52 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5505
  %call26 = call i32 @Curl_debug(%struct.Curl_easy* %49, i32 2, i8* %50, i64 %51, %struct.connectdata* %52), !dbg !5506
  %53 = load i64, i64* %bodylen, align 8, !dbg !5507
  %tobool27 = icmp ne i64 %53, 0, !dbg !5507
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !5509

if.then28:                                        ; preds = %if.then24
  %54 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5510
  %data29 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %54, i32 0, i32 0, !dbg !5512
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data29, align 8, !dbg !5512
  %56 = load i8*, i8** %ptr, align 8, !dbg !5513
  %57 = load i64, i64* %headlen, align 8, !dbg !5514
  %add.ptr = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !5515
  %58 = load i64, i64* %bodylen, align 8, !dbg !5516
  %59 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5517
  %call30 = call i32 @Curl_debug(%struct.Curl_easy* %55, i32 4, i8* %add.ptr, i64 %58, %struct.connectdata* %59), !dbg !5518
  br label %if.end31, !dbg !5519

if.end31:                                         ; preds = %if.then28, %if.then24
  br label %if.end32, !dbg !5520

if.end32:                                         ; preds = %if.end31, %cond.end19
  %60 = load i64, i64* %amount, align 8, !dbg !5521
  %61 = load i64*, i64** %bytes_written.addr, align 8, !dbg !5522
  %62 = load i64, i64* %61, align 8, !dbg !5523
  %add = add nsw i64 %62, %60, !dbg !5523
  store i64 %add, i64* %61, align 8, !dbg !5523
  %63 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5524
  %tobool33 = icmp ne %struct.HTTP* %63, null, !dbg !5524
  br i1 %tobool33, label %if.then34, label %if.else62, !dbg !5526

if.then34:                                        ; preds = %if.end32
  %64 = load i64, i64* %bodylen, align 8, !dbg !5527
  %65 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5529
  %writebytecount = getelementptr inbounds %struct.HTTP, %struct.HTTP* %65, i32 0, i32 6, !dbg !5530
  %66 = load i64, i64* %writebytecount, align 8, !dbg !5531
  %add35 = add i64 %66, %64, !dbg !5531
  store i64 %add35, i64* %writebytecount, align 8, !dbg !5531
  %67 = load i64, i64* %amount, align 8, !dbg !5532
  %68 = load i64, i64* %size, align 8, !dbg !5534
  %cmp36 = icmp ne i64 %67, %68, !dbg !5535
  br i1 %cmp36, label %if.then37, label %if.end60, !dbg !5536

if.then37:                                        ; preds = %if.then34
  %69 = load i64, i64* %amount, align 8, !dbg !5537
  %70 = load i64, i64* %size, align 8, !dbg !5539
  %sub38 = sub i64 %70, %69, !dbg !5539
  store i64 %sub38, i64* %size, align 8, !dbg !5539
  %71 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5540
  %buffer39 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %71, i32 0, i32 0, !dbg !5541
  %72 = load i8*, i8** %buffer39, align 8, !dbg !5541
  %73 = load i64, i64* %amount, align 8, !dbg !5542
  %add.ptr40 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !5543
  store i8* %add.ptr40, i8** %ptr, align 8, !dbg !5544
  %74 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5545
  %data41 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %74, i32 0, i32 0, !dbg !5546
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %data41, align 8, !dbg !5546
  %state42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %75, i32 0, i32 17, !dbg !5547
  %fread_func = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state42, i32 0, i32 50, !dbg !5548
  %76 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fread_func, align 8, !dbg !5548
  %77 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5549
  %backup = getelementptr inbounds %struct.HTTP, %struct.HTTP* %77, i32 0, i32 8, !dbg !5550
  %fread_func43 = getelementptr inbounds %struct.back, %struct.back* %backup, i32 0, i32 0, !dbg !5551
  store i64 (i8*, i64, i64, i8*)* %76, i64 (i8*, i64, i64, i8*)** %fread_func43, align 8, !dbg !5552
  %78 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5553
  %data44 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 0, !dbg !5554
  %79 = load %struct.Curl_easy*, %struct.Curl_easy** %data44, align 8, !dbg !5554
  %state45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %79, i32 0, i32 17, !dbg !5555
  %in46 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state45, i32 0, i32 51, !dbg !5556
  %80 = load i8*, i8** %in46, align 8, !dbg !5556
  %81 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5557
  %backup47 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %81, i32 0, i32 8, !dbg !5558
  %fread_in = getelementptr inbounds %struct.back, %struct.back* %backup47, i32 0, i32 1, !dbg !5559
  store i8* %80, i8** %fread_in, align 8, !dbg !5560
  %82 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5561
  %postdata = getelementptr inbounds %struct.HTTP, %struct.HTTP* %82, i32 0, i32 2, !dbg !5562
  %83 = load i8*, i8** %postdata, align 8, !dbg !5562
  %84 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5563
  %backup48 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %84, i32 0, i32 8, !dbg !5564
  %postdata49 = getelementptr inbounds %struct.back, %struct.back* %backup48, i32 0, i32 2, !dbg !5565
  store i8* %83, i8** %postdata49, align 8, !dbg !5566
  %85 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5567
  %postsize = getelementptr inbounds %struct.HTTP, %struct.HTTP* %85, i32 0, i32 1, !dbg !5568
  %86 = load i64, i64* %postsize, align 8, !dbg !5568
  %87 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5569
  %backup50 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %87, i32 0, i32 8, !dbg !5570
  %postsize51 = getelementptr inbounds %struct.back, %struct.back* %backup50, i32 0, i32 3, !dbg !5571
  store i64 %86, i64* %postsize51, align 8, !dbg !5572
  %88 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5573
  %data52 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %88, i32 0, i32 0, !dbg !5574
  %89 = load %struct.Curl_easy*, %struct.Curl_easy** %data52, align 8, !dbg !5574
  %state53 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %89, i32 0, i32 17, !dbg !5575
  %fread_func54 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state53, i32 0, i32 50, !dbg !5576
  store i64 (i8*, i64, i64, i8*)* @readmoredata, i64 (i8*, i64, i64, i8*)** %fread_func54, align 8, !dbg !5577
  %90 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5578
  %91 = bitcast %struct.connectdata* %90 to i8*, !dbg !5579
  %92 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5580
  %data55 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %92, i32 0, i32 0, !dbg !5581
  %93 = load %struct.Curl_easy*, %struct.Curl_easy** %data55, align 8, !dbg !5581
  %state56 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %93, i32 0, i32 17, !dbg !5582
  %in57 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state56, i32 0, i32 51, !dbg !5583
  store i8* %91, i8** %in57, align 8, !dbg !5584
  %94 = load i8*, i8** %ptr, align 8, !dbg !5585
  %95 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5586
  %postdata58 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %95, i32 0, i32 2, !dbg !5587
  store i8* %94, i8** %postdata58, align 8, !dbg !5588
  %96 = load i64, i64* %size, align 8, !dbg !5589
  %97 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5590
  %postsize59 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %97, i32 0, i32 1, !dbg !5591
  store i64 %96, i64* %postsize59, align 8, !dbg !5592
  %98 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5593
  %99 = bitcast %struct.Curl_send_buffer* %98 to i8*, !dbg !5593
  %100 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5594
  %send_buffer = getelementptr inbounds %struct.HTTP, %struct.HTTP* %100, i32 0, i32 10, !dbg !5595
  store i8* %99, i8** %send_buffer, align 8, !dbg !5596
  %101 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5597
  %sending = getelementptr inbounds %struct.HTTP, %struct.HTTP* %101, i32 0, i32 9, !dbg !5598
  store i32 1, i32* %sending, align 8, !dbg !5599
  store i32 0, i32* %retval, align 4, !dbg !5600
  br label %return, !dbg !5600

if.end60:                                         ; preds = %if.then34
  %102 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5601
  %sending61 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %102, i32 0, i32 9, !dbg !5602
  store i32 2, i32* %sending61, align 8, !dbg !5603
  br label %if.end66, !dbg !5604

if.else62:                                        ; preds = %if.end32
  %103 = load i64, i64* %amount, align 8, !dbg !5605
  %104 = load i64, i64* %size, align 8, !dbg !5608
  %cmp63 = icmp ne i64 %103, %104, !dbg !5609
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !5610

if.then64:                                        ; preds = %if.else62
  store i32 55, i32* %retval, align 4, !dbg !5611
  br label %return, !dbg !5611

if.end65:                                         ; preds = %if.else62
  %105 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5612
  call void @Curl_pipeline_leave_write(%struct.connectdata* %105), !dbg !5613
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end60
  br label %if.end67, !dbg !5614

if.end67:                                         ; preds = %if.end66, %if.end13
  %106 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5615
  call void @Curl_add_buffer_free(%struct.Curl_send_buffer* %106), !dbg !5616
  %107 = load i32, i32* %result, align 4, !dbg !5617
  store i32 %107, i32* %retval, align 4, !dbg !5618
  br label %return, !dbg !5618

return:                                           ; preds = %if.end67, %if.then64, %if.then37, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !5619
  ret i32 %108, !dbg !5619
}

declare i32 @Curl_write(%struct.connectdata*, i32, i8*, i64, i64*) #3

declare i32 @Curl_debug(%struct.Curl_easy*, i32, i8*, i64, %struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define internal i64 @readmoredata(i8* %buffer, i64 %size, i64 %nitems, i8* %userp) #0 !dbg !1918 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %nitems.addr = alloca i64, align 8
  %userp.addr = alloca i8*, align 8
  %conn = alloca %struct.connectdata*, align 8
  %http = alloca %struct.HTTP*, align 8
  %fullsize = alloca i64, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5620, metadata !1950), !dbg !5621
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5622, metadata !1950), !dbg !5623
  store i64 %nitems, i64* %nitems.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !5624, metadata !1950), !dbg !5625
  store i8* %userp, i8** %userp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userp.addr, metadata !5626, metadata !1950), !dbg !5627
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !5628, metadata !1950), !dbg !5629
  %0 = load i8*, i8** %userp.addr, align 8, !dbg !5630
  %1 = bitcast i8* %0 to %struct.connectdata*, !dbg !5631
  store %struct.connectdata* %1, %struct.connectdata** %conn, align 8, !dbg !5629
  call void @llvm.dbg.declare(metadata %struct.HTTP** %http, metadata !5632, metadata !1950), !dbg !5633
  %2 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5634
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 0, !dbg !5635
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5635
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 12, !dbg !5636
  %protop = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 43, !dbg !5637
  %4 = load i8*, i8** %protop, align 8, !dbg !5637
  %5 = bitcast i8* %4 to %struct.HTTP*, !dbg !5634
  store %struct.HTTP* %5, %struct.HTTP** %http, align 8, !dbg !5633
  call void @llvm.dbg.declare(metadata i64* %fullsize, metadata !5638, metadata !1950), !dbg !5639
  %6 = load i64, i64* %size.addr, align 8, !dbg !5640
  %7 = load i64, i64* %nitems.addr, align 8, !dbg !5641
  %mul = mul i64 %6, %7, !dbg !5642
  store i64 %mul, i64* %fullsize, align 8, !dbg !5639
  %8 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5643
  %postsize = getelementptr inbounds %struct.HTTP, %struct.HTTP* %8, i32 0, i32 1, !dbg !5645
  %9 = load i64, i64* %postsize, align 8, !dbg !5645
  %tobool = icmp ne i64 %9, 0, !dbg !5643
  br i1 %tobool, label %if.end, label %if.then, !dbg !5646

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5647
  br label %return, !dbg !5647

if.end:                                           ; preds = %entry
  %10 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5648
  %sending = getelementptr inbounds %struct.HTTP, %struct.HTTP* %10, i32 0, i32 9, !dbg !5649
  %11 = load i32, i32* %sending, align 8, !dbg !5649
  %cmp = icmp eq i32 %11, 1, !dbg !5650
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !5651
  %tobool1 = icmp ne i32 %cond, 0, !dbg !5651
  %12 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5652
  %data2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 0, !dbg !5653
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data2, align 8, !dbg !5653
  %req3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 12, !dbg !5654
  %forbidchunk = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req3, i32 0, i32 42, !dbg !5655
  %frombool = zext i1 %tobool1 to i8, !dbg !5656
  store i8 %frombool, i8* %forbidchunk, align 1, !dbg !5656
  %14 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5657
  %postsize4 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %14, i32 0, i32 1, !dbg !5659
  %15 = load i64, i64* %postsize4, align 8, !dbg !5659
  %16 = load i64, i64* %fullsize, align 8, !dbg !5660
  %cmp5 = icmp sle i64 %15, %16, !dbg !5661
  br i1 %cmp5, label %if.then6, label %if.end29, !dbg !5662

if.then6:                                         ; preds = %if.end
  %17 = load i8*, i8** %buffer.addr, align 8, !dbg !5663
  %18 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5665
  %postdata = getelementptr inbounds %struct.HTTP, %struct.HTTP* %18, i32 0, i32 2, !dbg !5666
  %19 = load i8*, i8** %postdata, align 8, !dbg !5666
  %20 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5667
  %postsize7 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %20, i32 0, i32 1, !dbg !5668
  %21 = load i64, i64* %postsize7, align 8, !dbg !5668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %21, i32 1, i1 false), !dbg !5669
  %22 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5670
  %postsize8 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %22, i32 0, i32 1, !dbg !5671
  %23 = load i64, i64* %postsize8, align 8, !dbg !5671
  store i64 %23, i64* %fullsize, align 8, !dbg !5672
  %24 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5673
  %backup = getelementptr inbounds %struct.HTTP, %struct.HTTP* %24, i32 0, i32 8, !dbg !5675
  %postsize9 = getelementptr inbounds %struct.back, %struct.back* %backup, i32 0, i32 3, !dbg !5676
  %25 = load i64, i64* %postsize9, align 8, !dbg !5676
  %tobool10 = icmp ne i64 %25, 0, !dbg !5673
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !5677

if.then11:                                        ; preds = %if.then6
  %26 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5678
  %backup12 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %26, i32 0, i32 8, !dbg !5680
  %postdata13 = getelementptr inbounds %struct.back, %struct.back* %backup12, i32 0, i32 2, !dbg !5681
  %27 = load i8*, i8** %postdata13, align 8, !dbg !5681
  %28 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5682
  %postdata14 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %28, i32 0, i32 2, !dbg !5683
  store i8* %27, i8** %postdata14, align 8, !dbg !5684
  %29 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5685
  %backup15 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %29, i32 0, i32 8, !dbg !5686
  %postsize16 = getelementptr inbounds %struct.back, %struct.back* %backup15, i32 0, i32 3, !dbg !5687
  %30 = load i64, i64* %postsize16, align 8, !dbg !5687
  %31 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5688
  %postsize17 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %31, i32 0, i32 1, !dbg !5689
  store i64 %30, i64* %postsize17, align 8, !dbg !5690
  %32 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5691
  %backup18 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %32, i32 0, i32 8, !dbg !5692
  %fread_func = getelementptr inbounds %struct.back, %struct.back* %backup18, i32 0, i32 0, !dbg !5693
  %33 = load i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)** %fread_func, align 8, !dbg !5693
  %34 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5694
  %data19 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %34, i32 0, i32 0, !dbg !5695
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data19, align 8, !dbg !5695
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 17, !dbg !5696
  %fread_func20 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 50, !dbg !5697
  store i64 (i8*, i64, i64, i8*)* %33, i64 (i8*, i64, i64, i8*)** %fread_func20, align 8, !dbg !5698
  %36 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5699
  %backup21 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %36, i32 0, i32 8, !dbg !5700
  %fread_in = getelementptr inbounds %struct.back, %struct.back* %backup21, i32 0, i32 1, !dbg !5701
  %37 = load i8*, i8** %fread_in, align 8, !dbg !5701
  %38 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5702
  %data22 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 0, !dbg !5703
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data22, align 8, !dbg !5703
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %39, i32 0, i32 17, !dbg !5704
  %in = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 51, !dbg !5705
  store i8* %37, i8** %in, align 8, !dbg !5706
  %40 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5707
  %sending24 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %40, i32 0, i32 9, !dbg !5708
  %41 = load i32, i32* %sending24, align 8, !dbg !5709
  %inc = add i32 %41, 1, !dbg !5709
  store i32 %inc, i32* %sending24, align 8, !dbg !5709
  %42 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5710
  %backup25 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %42, i32 0, i32 8, !dbg !5711
  %postsize26 = getelementptr inbounds %struct.back, %struct.back* %backup25, i32 0, i32 3, !dbg !5712
  store i64 0, i64* %postsize26, align 8, !dbg !5713
  br label %if.end28, !dbg !5714

if.else:                                          ; preds = %if.then6
  %43 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5715
  %postsize27 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %43, i32 0, i32 1, !dbg !5716
  store i64 0, i64* %postsize27, align 8, !dbg !5717
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then11
  %44 = load i64, i64* %fullsize, align 8, !dbg !5718
  store i64 %44, i64* %retval, align 8, !dbg !5719
  br label %return, !dbg !5719

if.end29:                                         ; preds = %if.end
  %45 = load i8*, i8** %buffer.addr, align 8, !dbg !5720
  %46 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5721
  %postdata30 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %46, i32 0, i32 2, !dbg !5722
  %47 = load i8*, i8** %postdata30, align 8, !dbg !5722
  %48 = load i64, i64* %fullsize, align 8, !dbg !5723
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %47, i64 %48, i32 1, i1 false), !dbg !5724
  %49 = load i64, i64* %fullsize, align 8, !dbg !5725
  %50 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5726
  %postdata31 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %50, i32 0, i32 2, !dbg !5727
  %51 = load i8*, i8** %postdata31, align 8, !dbg !5728
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 %49, !dbg !5728
  store i8* %add.ptr, i8** %postdata31, align 8, !dbg !5728
  %52 = load i64, i64* %fullsize, align 8, !dbg !5729
  %53 = load %struct.HTTP*, %struct.HTTP** %http, align 8, !dbg !5730
  %postsize32 = getelementptr inbounds %struct.HTTP, %struct.HTTP* %53, i32 0, i32 1, !dbg !5731
  %54 = load i64, i64* %postsize32, align 8, !dbg !5732
  %sub = sub i64 %54, %52, !dbg !5732
  store i64 %sub, i64* %postsize32, align 8, !dbg !5732
  %55 = load i64, i64* %fullsize, align 8, !dbg !5733
  store i64 %55, i64* %retval, align 8, !dbg !5734
  br label %return, !dbg !5734

return:                                           ; preds = %if.end29, %if.end28, %if.then
  %56 = load i64, i64* %retval, align 8, !dbg !5735
  ret i64 %56, !dbg !5735
}

declare void @Curl_pipeline_leave_write(%struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_add_bufferf(%struct.Curl_send_buffer* %in, i8* %fmt, ...) #0 !dbg !1887 {
entry:
  %retval = alloca i32, align 4
  %in.addr = alloca %struct.Curl_send_buffer*, align 8
  %fmt.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %result = alloca i32, align 4
  store %struct.Curl_send_buffer* %in, %struct.Curl_send_buffer** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %in.addr, metadata !5736, metadata !1950), !dbg !5737
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !5738, metadata !1950), !dbg !5739
  call void @llvm.dbg.declare(metadata i8** %s, metadata !5740, metadata !1950), !dbg !5741
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !5742, metadata !1950), !dbg !5754
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !5755
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5755
  call void @llvm.va_start(i8* %arraydecay1), !dbg !5755
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !5756
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !5757
  %call = call i8* @curl_mvaprintf(i8* %0, %struct.__va_list_tag* %arraydecay2), !dbg !5758
  store i8* %call, i8** %s, align 8, !dbg !5759
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !5760
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !5760
  call void @llvm.va_end(i8* %arraydecay34), !dbg !5760
  %1 = load i8*, i8** %s, align 8, !dbg !5761
  %tobool = icmp ne i8* %1, null, !dbg !5761
  br i1 %tobool, label %if.then, label %if.end, !dbg !5763

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5764, metadata !1950), !dbg !5766
  %2 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5767
  %3 = load i8*, i8** %s, align 8, !dbg !5768
  %4 = load i8*, i8** %s, align 8, !dbg !5769
  %call5 = call i64 @strlen(i8* %4) #8, !dbg !5770
  %call6 = call i32 @Curl_add_buffer(%struct.Curl_send_buffer* %2, i8* %3, i64 %call5), !dbg !5771
  store i32 %call6, i32* %result, align 4, !dbg !5766
  %5 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5773
  %6 = load i8*, i8** %s, align 8, !dbg !5773
  call void %5(i8* %6), !dbg !5773
  %7 = load i32, i32* %result, align 4, !dbg !5774
  store i32 %7, i32* %retval, align 4, !dbg !5775
  br label %return, !dbg !5775

if.end:                                           ; preds = %entry
  %8 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5776
  %9 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5776
  %buffer = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %9, i32 0, i32 0, !dbg !5776
  %10 = load i8*, i8** %buffer, align 8, !dbg !5776
  call void %8(i8* %10), !dbg !5776
  %11 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5777
  %12 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5777
  %13 = bitcast %struct.Curl_send_buffer* %12 to i8*, !dbg !5777
  call void %11(i8* %13), !dbg !5777
  store i32 27, i32* %retval, align 4, !dbg !5778
  br label %return, !dbg !5778

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !5779
  ret i32 %14, !dbg !5779
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

declare i8* @curl_mvaprintf(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind uwtable
define i32 @Curl_add_buffer(%struct.Curl_send_buffer* %in, i8* %inptr, i64 %size) #0 !dbg !1890 {
entry:
  %retval = alloca i32, align 4
  %in.addr = alloca %struct.Curl_send_buffer*, align 8
  %inptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %new_rb = alloca i8*, align 8
  %new_size = alloca i64, align 8
  store %struct.Curl_send_buffer* %in, %struct.Curl_send_buffer** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %in.addr, metadata !5780, metadata !1950), !dbg !5781
  store i8* %inptr, i8** %inptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inptr.addr, metadata !5782, metadata !1950), !dbg !5783
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5784, metadata !1950), !dbg !5785
  call void @llvm.dbg.declare(metadata i8** %new_rb, metadata !5786, metadata !1950), !dbg !5787
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !5788, metadata !1950), !dbg !5789
  %0 = load i64, i64* %size.addr, align 8, !dbg !5790
  %neg = xor i64 %0, -1, !dbg !5792
  %1 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5793
  %size_used = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %1, i32 0, i32 2, !dbg !5794
  %2 = load i64, i64* %size_used, align 8, !dbg !5794
  %cmp = icmp ult i64 %neg, %2, !dbg !5795
  br i1 %cmp, label %if.then, label %if.end, !dbg !5796

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5797

do.body:                                          ; preds = %if.then
  %3 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5799
  %4 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5799
  %buffer = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %4, i32 0, i32 0, !dbg !5799
  %5 = load i8*, i8** %buffer, align 8, !dbg !5799
  call void %3(i8* %5), !dbg !5799
  %6 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5799
  %buffer1 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %6, i32 0, i32 0, !dbg !5799
  store i8* null, i8** %buffer1, align 8, !dbg !5799
  br label %do.end, !dbg !5799

do.end:                                           ; preds = %do.body
  %7 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5802
  %8 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5802
  %9 = bitcast %struct.Curl_send_buffer* %8 to i8*, !dbg !5802
  call void %7(i8* %9), !dbg !5802
  store i32 27, i32* %retval, align 4, !dbg !5803
  br label %return, !dbg !5803

if.end:                                           ; preds = %entry
  %10 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5804
  %buffer2 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %10, i32 0, i32 0, !dbg !5806
  %11 = load i8*, i8** %buffer2, align 8, !dbg !5806
  %tobool = icmp ne i8* %11, null, !dbg !5804
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !5807

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5808
  %size_used3 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %12, i32 0, i32 2, !dbg !5809
  %13 = load i64, i64* %size_used3, align 8, !dbg !5809
  %14 = load i64, i64* %size.addr, align 8, !dbg !5810
  %add = add i64 %13, %14, !dbg !5811
  %15 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5812
  %size_max = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %15, i32 0, i32 1, !dbg !5813
  %16 = load i64, i64* %size_max, align 8, !dbg !5813
  %sub = sub i64 %16, 1, !dbg !5814
  %cmp4 = icmp ugt i64 %add, %sub, !dbg !5815
  br i1 %cmp4, label %if.then5, label %if.end32, !dbg !5816

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %17 = load i64, i64* %size.addr, align 8, !dbg !5818
  %cmp6 = icmp ugt i64 %17, 9223372036854775807, !dbg !5821
  br i1 %cmp6, label %if.then15, label %lor.lhs.false7, !dbg !5822

lor.lhs.false7:                                   ; preds = %if.then5
  %18 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5823
  %size_used8 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %18, i32 0, i32 2, !dbg !5825
  %19 = load i64, i64* %size_used8, align 8, !dbg !5825
  %cmp9 = icmp ugt i64 %19, 9223372036854775807, !dbg !5826
  br i1 %cmp9, label %if.then15, label %lor.lhs.false10, !dbg !5827

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %20 = load i64, i64* %size.addr, align 8, !dbg !5828
  %mul = mul i64 %20, 2, !dbg !5829
  %neg11 = xor i64 %mul, -1, !dbg !5830
  %21 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5831
  %size_used12 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %21, i32 0, i32 2, !dbg !5832
  %22 = load i64, i64* %size_used12, align 8, !dbg !5832
  %mul13 = mul i64 %22, 2, !dbg !5833
  %cmp14 = icmp ult i64 %neg11, %mul13, !dbg !5834
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !5835

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false7, %if.then5
  store i64 -1, i64* %new_size, align 8, !dbg !5837
  br label %if.end19, !dbg !5838

if.else:                                          ; preds = %lor.lhs.false10
  %23 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5839
  %size_used16 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %23, i32 0, i32 2, !dbg !5840
  %24 = load i64, i64* %size_used16, align 8, !dbg !5840
  %25 = load i64, i64* %size.addr, align 8, !dbg !5841
  %add17 = add i64 %24, %25, !dbg !5842
  %mul18 = mul i64 %add17, 2, !dbg !5843
  store i64 %mul18, i64* %new_size, align 8, !dbg !5844
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  %26 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5845
  %buffer20 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %26, i32 0, i32 0, !dbg !5847
  %27 = load i8*, i8** %buffer20, align 8, !dbg !5847
  %tobool21 = icmp ne i8* %27, null, !dbg !5845
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !5848

if.then22:                                        ; preds = %if.end19
  %28 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5849
  %buffer23 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %28, i32 0, i32 0, !dbg !5850
  %29 = load i8*, i8** %buffer23, align 8, !dbg !5850
  %30 = load i64, i64* %new_size, align 8, !dbg !5851
  %call = call i8* @Curl_saferealloc(i8* %29, i64 %30), !dbg !5852
  store i8* %call, i8** %new_rb, align 8, !dbg !5853
  br label %if.end26, !dbg !5854

if.else24:                                        ; preds = %if.end19
  %31 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !5855
  %32 = load i64, i64* %new_size, align 8, !dbg !5855
  %call25 = call i8* %31(i64 %32), !dbg !5855
  store i8* %call25, i8** %new_rb, align 8, !dbg !5856
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  %33 = load i8*, i8** %new_rb, align 8, !dbg !5857
  %tobool27 = icmp ne i8* %33, null, !dbg !5857
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !5859

if.then28:                                        ; preds = %if.end26
  %34 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5860
  %35 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5860
  %36 = bitcast %struct.Curl_send_buffer* %35 to i8*, !dbg !5860
  call void %34(i8* %36), !dbg !5860
  store i32 27, i32* %retval, align 4, !dbg !5862
  br label %return, !dbg !5862

if.end29:                                         ; preds = %if.end26
  %37 = load i8*, i8** %new_rb, align 8, !dbg !5863
  %38 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5864
  %buffer30 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %38, i32 0, i32 0, !dbg !5865
  store i8* %37, i8** %buffer30, align 8, !dbg !5866
  %39 = load i64, i64* %new_size, align 8, !dbg !5867
  %40 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5868
  %size_max31 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %40, i32 0, i32 1, !dbg !5869
  store i64 %39, i64* %size_max31, align 8, !dbg !5870
  br label %if.end32, !dbg !5871

if.end32:                                         ; preds = %if.end29, %lor.lhs.false
  %41 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5872
  %size_used33 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %41, i32 0, i32 2, !dbg !5873
  %42 = load i64, i64* %size_used33, align 8, !dbg !5873
  %43 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5874
  %buffer34 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %43, i32 0, i32 0, !dbg !5875
  %44 = load i8*, i8** %buffer34, align 8, !dbg !5875
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 %42, !dbg !5874
  %45 = load i8*, i8** %inptr.addr, align 8, !dbg !5876
  %46 = load i64, i64* %size.addr, align 8, !dbg !5877
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx, i8* %45, i64 %46, i32 1, i1 false), !dbg !5878
  %47 = load i64, i64* %size.addr, align 8, !dbg !5879
  %48 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %in.addr, align 8, !dbg !5880
  %size_used35 = getelementptr inbounds %struct.Curl_send_buffer, %struct.Curl_send_buffer* %48, i32 0, i32 2, !dbg !5881
  %49 = load i64, i64* %size_used35, align 8, !dbg !5882
  %add36 = add i64 %49, %47, !dbg !5882
  store i64 %add36, i64* %size_used35, align 8, !dbg !5882
  store i32 0, i32* %retval, align 4, !dbg !5883
  br label %return, !dbg !5883

return:                                           ; preds = %if.end32, %if.then28, %do.end
  %50 = load i32, i32* %retval, align 4, !dbg !5884
  ret i32 %50, !dbg !5884
}

declare i8* @Curl_saferealloc(i8*, i64) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @Curl_compareheader(i8* %headerline, i8* %header, i8* %content) #0 !dbg !1893 {
entry:
  %retval = alloca i1, align 1
  %headerline.addr = alloca i8*, align 8
  %header.addr = alloca i8*, align 8
  %content.addr = alloca i8*, align 8
  %hlen = alloca i64, align 8
  %clen = alloca i64, align 8
  %len = alloca i64, align 8
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  store i8* %headerline, i8** %headerline.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %headerline.addr, metadata !5885, metadata !1950), !dbg !5886
  store i8* %header, i8** %header.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %header.addr, metadata !5887, metadata !1950), !dbg !5888
  store i8* %content, i8** %content.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %content.addr, metadata !5889, metadata !1950), !dbg !5890
  call void @llvm.dbg.declare(metadata i64* %hlen, metadata !5891, metadata !1950), !dbg !5892
  %0 = load i8*, i8** %header.addr, align 8, !dbg !5893
  %call = call i64 @strlen(i8* %0) #8, !dbg !5894
  store i64 %call, i64* %hlen, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %clen, metadata !5895, metadata !1950), !dbg !5896
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5897, metadata !1950), !dbg !5898
  call void @llvm.dbg.declare(metadata i8** %start, metadata !5899, metadata !1950), !dbg !5900
  call void @llvm.dbg.declare(metadata i8** %end, metadata !5901, metadata !1950), !dbg !5902
  %1 = load i8*, i8** %headerline.addr, align 8, !dbg !5903
  %2 = load i8*, i8** %header.addr, align 8, !dbg !5903
  %3 = load i64, i64* %hlen, align 8, !dbg !5903
  %call1 = call i32 @Curl_strncasecompare(i8* %1, i8* %2, i64 %3), !dbg !5903
  %tobool = icmp ne i32 %call1, 0, !dbg !5903
  br i1 %tobool, label %if.end, label %if.then, !dbg !5905

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5906
  br label %return, !dbg !5906

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %hlen, align 8, !dbg !5907
  %5 = load i8*, i8** %headerline.addr, align 8, !dbg !5908
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %4, !dbg !5908
  store i8* %arrayidx, i8** %start, align 8, !dbg !5909
  br label %while.cond, !dbg !5910

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load i8*, i8** %start, align 8, !dbg !5911
  %7 = load i8, i8* %6, align 1, !dbg !5913
  %conv = sext i8 %7 to i32, !dbg !5913
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5913
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !5914

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %start, align 8, !dbg !5915
  %9 = load i8, i8* %8, align 1, !dbg !5915
  %conv3 = zext i8 %9 to i32, !dbg !5915
  %idxprom = sext i32 %conv3 to i64, !dbg !5915
  %call4 = call i16** @__ctype_b_loc() #1, !dbg !5915
  %10 = load i16*, i16** %call4, align 8, !dbg !5915
  %arrayidx5 = getelementptr inbounds i16, i16* %10, i64 %idxprom, !dbg !5915
  %11 = load i16, i16* %arrayidx5, align 2, !dbg !5915
  %conv6 = zext i16 %11 to i32, !dbg !5915
  %and = and i32 %conv6, 8192, !dbg !5915
  %tobool7 = icmp ne i32 %and, 0, !dbg !5917
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %tobool7, %land.rhs ]
  br i1 %12, label %while.body, label %while.end, !dbg !5918

while.body:                                       ; preds = %land.end
  %13 = load i8*, i8** %start, align 8, !dbg !5920
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5920
  store i8* %incdec.ptr, i8** %start, align 8, !dbg !5920
  br label %while.cond, !dbg !5921

while.end:                                        ; preds = %land.end
  %14 = load i8*, i8** %start, align 8, !dbg !5923
  %call8 = call i8* @strchr(i8* %14, i32 13) #8, !dbg !5924
  store i8* %call8, i8** %end, align 8, !dbg !5925
  %15 = load i8*, i8** %end, align 8, !dbg !5926
  %tobool9 = icmp ne i8* %15, null, !dbg !5926
  br i1 %tobool9, label %if.end16, label %if.then10, !dbg !5928

if.then10:                                        ; preds = %while.end
  %16 = load i8*, i8** %start, align 8, !dbg !5929
  %call11 = call i8* @strchr(i8* %16, i32 10) #8, !dbg !5931
  store i8* %call11, i8** %end, align 8, !dbg !5932
  %17 = load i8*, i8** %end, align 8, !dbg !5933
  %tobool12 = icmp ne i8* %17, null, !dbg !5933
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !5935

if.then13:                                        ; preds = %if.then10
  %18 = load i8*, i8** %start, align 8, !dbg !5936
  %call14 = call i8* @strchr(i8* %18, i32 0) #8, !dbg !5937
  store i8* %call14, i8** %end, align 8, !dbg !5938
  br label %if.end15, !dbg !5939

if.end15:                                         ; preds = %if.then13, %if.then10
  br label %if.end16, !dbg !5940

if.end16:                                         ; preds = %if.end15, %while.end
  %19 = load i8*, i8** %end, align 8, !dbg !5941
  %20 = load i8*, i8** %start, align 8, !dbg !5942
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64, !dbg !5943
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !5943
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5943
  store i64 %sub.ptr.sub, i64* %len, align 8, !dbg !5944
  %21 = load i8*, i8** %content.addr, align 8, !dbg !5945
  %call17 = call i64 @strlen(i8* %21) #8, !dbg !5946
  store i64 %call17, i64* %clen, align 8, !dbg !5947
  br label %for.cond, !dbg !5948

for.cond:                                         ; preds = %for.inc, %if.end16
  %22 = load i64, i64* %len, align 8, !dbg !5949
  %23 = load i64, i64* %clen, align 8, !dbg !5953
  %cmp = icmp uge i64 %22, %23, !dbg !5954
  br i1 %cmp, label %for.body, label %for.end, !dbg !5955

for.body:                                         ; preds = %for.cond
  %24 = load i8*, i8** %start, align 8, !dbg !5956
  %25 = load i8*, i8** %content.addr, align 8, !dbg !5956
  %26 = load i64, i64* %clen, align 8, !dbg !5956
  %call19 = call i32 @Curl_strncasecompare(i8* %24, i8* %25, i64 %26), !dbg !5956
  %tobool20 = icmp ne i32 %call19, 0, !dbg !5956
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5959

if.then21:                                        ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5960
  br label %return, !dbg !5960

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !5961

for.inc:                                          ; preds = %if.end22
  %27 = load i64, i64* %len, align 8, !dbg !5962
  %dec = add i64 %27, -1, !dbg !5962
  store i64 %dec, i64* %len, align 8, !dbg !5962
  %28 = load i8*, i8** %start, align 8, !dbg !5964
  %incdec.ptr23 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !5964
  store i8* %incdec.ptr23, i8** %start, align 8, !dbg !5964
  br label %for.cond, !dbg !5965

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5966
  br label %return, !dbg !5966

return:                                           ; preds = %for.end, %if.then21, %if.then
  %29 = load i1, i1* %retval, align 1, !dbg !5967
  ret i1 %29, !dbg !5967
}

declare void @Curl_conncontrol(%struct.connectdata*, i32) #3

declare i32 @Curl_proxy_connect(%struct.connectdata*, i32) #3

declare void @Curl_formclean(%struct.FormData**) #3

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_add_custom_headers(%struct.connectdata* %conn, i1 zeroext %is_connect, %struct.Curl_send_buffer* %req_buffer) #0 !dbg !1898 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %is_connect.addr = alloca i8, align 1
  %req_buffer.addr = alloca %struct.Curl_send_buffer*, align 8
  %ptr = alloca i8*, align 8
  %h = alloca [2 x %struct.curl_slist*], align 16
  %headers = alloca %struct.curl_slist*, align 8
  %numlists = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  %i = alloca i32, align 4
  %proxy = alloca i32, align 4
  %result = alloca i32, align 4
  %result128 = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5968, metadata !1950), !dbg !5969
  %frombool = zext i1 %is_connect to i8
  store i8 %frombool, i8* %is_connect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_connect.addr, metadata !5970, metadata !1950), !dbg !5971
  store %struct.Curl_send_buffer* %req_buffer, %struct.Curl_send_buffer** %req_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %req_buffer.addr, metadata !5972, metadata !1950), !dbg !5973
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5974, metadata !1950), !dbg !5975
  call void @llvm.dbg.declare(metadata [2 x %struct.curl_slist*]* %h, metadata !5976, metadata !1950), !dbg !5978
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %headers, metadata !5979, metadata !1950), !dbg !5980
  call void @llvm.dbg.declare(metadata i32* %numlists, metadata !5981, metadata !1950), !dbg !5982
  store i32 1, i32* %numlists, align 4, !dbg !5982
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5983, metadata !1950), !dbg !5984
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5985
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !5986
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !5986
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !5984
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5987, metadata !1950), !dbg !5988
  call void @llvm.dbg.declare(metadata i32* %proxy, metadata !5989, metadata !1950), !dbg !5990
  %2 = load i8, i8* %is_connect.addr, align 1, !dbg !5991
  %tobool = trunc i8 %2 to i1, !dbg !5991
  br i1 %tobool, label %if.then, label %if.else, !dbg !5993

if.then:                                          ; preds = %entry
  store i32 2, i32* %proxy, align 4, !dbg !5994
  br label %if.end, !dbg !5995

if.else:                                          ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5996
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 43, !dbg !5997
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 5, !dbg !5998
  %4 = load i8, i8* %httpproxy, align 1, !dbg !5998
  %tobool2 = trunc i8 %4 to i1, !dbg !5998
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !5999

land.rhs:                                         ; preds = %if.else
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6000
  %bits3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 43, !dbg !6002
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits3, i32 0, i32 15, !dbg !6003
  %6 = load i8, i8* %tunnel_proxy, align 1, !dbg !6003
  %tobool4 = trunc i8 %6 to i1, !dbg !6003
  %lnot = xor i1 %tobool4, true, !dbg !6004
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %7 = phi i1 [ false, %if.else ], [ %lnot, %land.rhs ]
  %cond = select i1 %7, i32 1, i32 0, !dbg !6005
  store i32 %cond, i32* %proxy, align 4, !dbg !6007
  br label %if.end

if.end:                                           ; preds = %land.end, %if.then
  %8 = load i32, i32* %proxy, align 4, !dbg !6008
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb16
  ], !dbg !6009

sw.bb:                                            ; preds = %if.end
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6010
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 13, !dbg !6012
  %headers5 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 54, !dbg !6013
  %10 = load %struct.curl_slist*, %struct.curl_slist** %headers5, align 8, !dbg !6013
  %arrayidx = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 0, !dbg !6014
  store %struct.curl_slist* %10, %struct.curl_slist** %arrayidx, align 16, !dbg !6015
  br label %sw.epilog, !dbg !6016

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6017
  %set7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 13, !dbg !6018
  %headers8 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set7, i32 0, i32 54, !dbg !6019
  %12 = load %struct.curl_slist*, %struct.curl_slist** %headers8, align 8, !dbg !6019
  %arrayidx9 = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 0, !dbg !6020
  store %struct.curl_slist* %12, %struct.curl_slist** %arrayidx9, align 16, !dbg !6021
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6022
  %set10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 13, !dbg !6024
  %sep_headers = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set10, i32 0, i32 57, !dbg !6025
  %14 = load i8, i8* %sep_headers, align 8, !dbg !6025
  %tobool11 = trunc i8 %14 to i1, !dbg !6025
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !6026

if.then12:                                        ; preds = %sw.bb6
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6027
  %set13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 13, !dbg !6029
  %proxyheaders = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set13, i32 0, i32 55, !dbg !6030
  %16 = load %struct.curl_slist*, %struct.curl_slist** %proxyheaders, align 8, !dbg !6030
  %arrayidx14 = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 1, !dbg !6031
  store %struct.curl_slist* %16, %struct.curl_slist** %arrayidx14, align 8, !dbg !6032
  %17 = load i32, i32* %numlists, align 4, !dbg !6033
  %inc = add nsw i32 %17, 1, !dbg !6033
  store i32 %inc, i32* %numlists, align 4, !dbg !6033
  br label %if.end15, !dbg !6034

if.end15:                                         ; preds = %if.then12, %sw.bb6
  br label %sw.epilog, !dbg !6035

sw.bb16:                                          ; preds = %if.end
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6036
  %set17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 13, !dbg !6038
  %sep_headers18 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set17, i32 0, i32 57, !dbg !6039
  %19 = load i8, i8* %sep_headers18, align 8, !dbg !6039
  %tobool19 = trunc i8 %19 to i1, !dbg !6039
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !6040

if.then20:                                        ; preds = %sw.bb16
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6041
  %set21 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 13, !dbg !6042
  %proxyheaders22 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set21, i32 0, i32 55, !dbg !6043
  %21 = load %struct.curl_slist*, %struct.curl_slist** %proxyheaders22, align 8, !dbg !6043
  %arrayidx23 = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 0, !dbg !6044
  store %struct.curl_slist* %21, %struct.curl_slist** %arrayidx23, align 16, !dbg !6045
  br label %if.end28, !dbg !6044

if.else24:                                        ; preds = %sw.bb16
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6046
  %set25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 13, !dbg !6047
  %headers26 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set25, i32 0, i32 54, !dbg !6048
  %23 = load %struct.curl_slist*, %struct.curl_slist** %headers26, align 8, !dbg !6048
  %arrayidx27 = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 0, !dbg !6049
  store %struct.curl_slist* %23, %struct.curl_slist** %arrayidx27, align 16, !dbg !6050
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %if.then20
  br label %sw.epilog, !dbg !6051

sw.epilog:                                        ; preds = %if.end, %if.end28, %if.end15, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !6052
  br label %for.cond, !dbg !6054

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %24 = load i32, i32* %i, align 4, !dbg !6055
  %25 = load i32, i32* %numlists, align 4, !dbg !6058
  %cmp = icmp slt i32 %24, %25, !dbg !6059
  br i1 %cmp, label %for.body, label %for.end, !dbg !6060

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !dbg !6061
  %idxprom = sext i32 %26 to i64, !dbg !6063
  %arrayidx29 = getelementptr inbounds [2 x %struct.curl_slist*], [2 x %struct.curl_slist*]* %h, i64 0, i64 %idxprom, !dbg !6063
  %27 = load %struct.curl_slist*, %struct.curl_slist** %arrayidx29, align 8, !dbg !6063
  store %struct.curl_slist* %27, %struct.curl_slist** %headers, align 8, !dbg !6064
  br label %while.cond, !dbg !6065

while.cond:                                       ; preds = %if.end137, %for.body
  %28 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6066
  %tobool30 = icmp ne %struct.curl_slist* %28, null, !dbg !6068
  br i1 %tobool30, label %while.body, label %while.end138, !dbg !6068

while.body:                                       ; preds = %while.cond
  %29 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6069
  %data31 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %29, i32 0, i32 0, !dbg !6071
  %30 = load i8*, i8** %data31, align 8, !dbg !6071
  %call = call i8* @strchr(i8* %30, i32 58) #8, !dbg !6072
  store i8* %call, i8** %ptr, align 8, !dbg !6073
  %31 = load i8*, i8** %ptr, align 8, !dbg !6074
  %tobool32 = icmp ne i8* %31, null, !dbg !6074
  br i1 %tobool32, label %if.then33, label %if.else99, !dbg !6076

if.then33:                                        ; preds = %while.body
  %32 = load i8*, i8** %ptr, align 8, !dbg !6077
  %incdec.ptr = getelementptr inbounds i8, i8* %32, i32 1, !dbg !6077
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !6077
  br label %while.cond34, !dbg !6079

while.cond34:                                     ; preds = %while.body44, %if.then33
  %33 = load i8*, i8** %ptr, align 8, !dbg !6080
  %34 = load i8, i8* %33, align 1, !dbg !6082
  %conv = sext i8 %34 to i32, !dbg !6082
  %tobool35 = icmp ne i32 %conv, 0, !dbg !6082
  br i1 %tobool35, label %land.rhs36, label %land.end43, !dbg !6083

land.rhs36:                                       ; preds = %while.cond34
  %35 = load i8*, i8** %ptr, align 8, !dbg !6084
  %36 = load i8, i8* %35, align 1, !dbg !6084
  %conv37 = zext i8 %36 to i32, !dbg !6084
  %idxprom38 = sext i32 %conv37 to i64, !dbg !6084
  %call39 = call i16** @__ctype_b_loc() #1, !dbg !6084
  %37 = load i16*, i16** %call39, align 8, !dbg !6084
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 %idxprom38, !dbg !6084
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !6084
  %conv41 = zext i16 %38 to i32, !dbg !6084
  %and = and i32 %conv41, 8192, !dbg !6084
  %tobool42 = icmp ne i32 %and, 0, !dbg !6086
  br label %land.end43

land.end43:                                       ; preds = %land.rhs36, %while.cond34
  %39 = phi i1 [ false, %while.cond34 ], [ %tobool42, %land.rhs36 ]
  br i1 %39, label %while.body44, label %while.end, !dbg !6087

while.body44:                                     ; preds = %land.end43
  %40 = load i8*, i8** %ptr, align 8, !dbg !6089
  %incdec.ptr45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6089
  store i8* %incdec.ptr45, i8** %ptr, align 8, !dbg !6089
  br label %while.cond34, !dbg !6090

while.end:                                        ; preds = %land.end43
  %41 = load i8*, i8** %ptr, align 8, !dbg !6092
  %42 = load i8, i8* %41, align 1, !dbg !6094
  %tobool46 = icmp ne i8 %42, 0, !dbg !6094
  br i1 %tobool46, label %if.then47, label %if.end98, !dbg !6095

if.then47:                                        ; preds = %while.end
  %43 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6096
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %43, i32 0, i32 52, !dbg !6099
  %host = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 6, !dbg !6100
  %44 = load i8*, i8** %host, align 8, !dbg !6100
  %tobool48 = icmp ne i8* %44, null, !dbg !6096
  br i1 %tobool48, label %land.lhs.true, label %if.else53, !dbg !6101

land.lhs.true:                                    ; preds = %if.then47
  %45 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6102
  %data49 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %45, i32 0, i32 0, !dbg !6102
  %46 = load i8*, i8** %data49, align 8, !dbg !6102
  %call50 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* %46, i64 5), !dbg !6102
  %tobool51 = icmp ne i32 %call50, 0, !dbg !6102
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !6103

if.then52:                                        ; preds = %land.lhs.true
  br label %if.end97, !dbg !6105

if.else53:                                        ; preds = %land.lhs.true, %if.then47
  %47 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6107
  %set54 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %47, i32 0, i32 13, !dbg !6109
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set54, i32 0, i32 71, !dbg !6110
  %48 = load i32, i32* %httpreq, align 8, !dbg !6110
  %cmp55 = icmp eq i32 %48, 3, !dbg !6111
  br i1 %cmp55, label %land.lhs.true57, label %if.else62, !dbg !6112

land.lhs.true57:                                  ; preds = %if.else53
  %49 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6113
  %data58 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %49, i32 0, i32 0, !dbg !6113
  %50 = load i8*, i8** %data58, align 8, !dbg !6113
  %call59 = call i32 @curl_strnequal(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* %50, i64 13), !dbg !6113
  %tobool60 = icmp ne i32 %call59, 0, !dbg !6113
  br i1 %tobool60, label %if.then61, label %if.else62, !dbg !6114

if.then61:                                        ; preds = %land.lhs.true57
  br label %if.end96, !dbg !6116

if.else62:                                        ; preds = %land.lhs.true57, %if.else53
  %51 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6118
  %bits63 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %51, i32 0, i32 43, !dbg !6120
  %authneg = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits63, i32 0, i32 16, !dbg !6121
  %52 = load i8, i8* %authneg, align 1, !dbg !6121
  %tobool64 = trunc i8 %52 to i1, !dbg !6121
  br i1 %tobool64, label %land.lhs.true66, label %if.else71, !dbg !6122

land.lhs.true66:                                  ; preds = %if.else62
  %53 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6123
  %data67 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %53, i32 0, i32 0, !dbg !6123
  %54 = load i8*, i8** %data67, align 8, !dbg !6123
  %call68 = call i32 @curl_strnequal(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* %54, i64 14), !dbg !6123
  %tobool69 = icmp ne i32 %call68, 0, !dbg !6123
  br i1 %tobool69, label %if.then70, label %if.else71, !dbg !6124

if.then70:                                        ; preds = %land.lhs.true66
  br label %if.end95, !dbg !6126

if.else71:                                        ; preds = %land.lhs.true66, %if.else62
  %55 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6128
  %allocptr72 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %55, i32 0, i32 52, !dbg !6130
  %te = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr72, i32 0, i32 9, !dbg !6131
  %56 = load i8*, i8** %te, align 8, !dbg !6131
  %tobool73 = icmp ne i8* %56, null, !dbg !6128
  br i1 %tobool73, label %land.lhs.true74, label %if.else79, !dbg !6132

land.lhs.true74:                                  ; preds = %if.else71
  %57 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6133
  %data75 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %57, i32 0, i32 0, !dbg !6133
  %58 = load i8*, i8** %data75, align 8, !dbg !6133
  %call76 = call i32 @curl_strnequal(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* %58, i64 10), !dbg !6133
  %tobool77 = icmp ne i32 %call76, 0, !dbg !6133
  br i1 %tobool77, label %if.then78, label %if.else79, !dbg !6134

if.then78:                                        ; preds = %land.lhs.true74
  br label %if.end94, !dbg !6136

if.else79:                                        ; preds = %land.lhs.true74, %if.else71
  %59 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6138
  %httpversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %59, i32 0, i32 29, !dbg !6140
  %60 = load i32, i32* %httpversion, align 8, !dbg !6140
  %cmp80 = icmp eq i32 %60, 20, !dbg !6141
  br i1 %cmp80, label %land.lhs.true82, label %if.else87, !dbg !6142

land.lhs.true82:                                  ; preds = %if.else79
  %61 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6143
  %data83 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %61, i32 0, i32 0, !dbg !6143
  %62 = load i8*, i8** %data83, align 8, !dbg !6143
  %call84 = call i32 @curl_strnequal(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* %62, i64 18), !dbg !6143
  %tobool85 = icmp ne i32 %call84, 0, !dbg !6143
  br i1 %tobool85, label %if.then86, label %if.else87, !dbg !6144

if.then86:                                        ; preds = %land.lhs.true82
  br label %if.end93, !dbg !6146

if.else87:                                        ; preds = %land.lhs.true82, %if.else79
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6148, metadata !1950), !dbg !6150
  %63 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6151
  %64 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6152
  %data88 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %64, i32 0, i32 0, !dbg !6153
  %65 = load i8*, i8** %data88, align 8, !dbg !6153
  %call89 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* %65), !dbg !6154
  store i32 %call89, i32* %result, align 4, !dbg !6150
  %66 = load i32, i32* %result, align 4, !dbg !6155
  %tobool90 = icmp ne i32 %66, 0, !dbg !6155
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !6157

if.then91:                                        ; preds = %if.else87
  %67 = load i32, i32* %result, align 4, !dbg !6158
  store i32 %67, i32* %retval, align 4, !dbg !6159
  br label %return, !dbg !6159

if.end92:                                         ; preds = %if.else87
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then86
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then78
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then61
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then52
  br label %if.end98, !dbg !6160

if.end98:                                         ; preds = %if.end97, %while.end
  br label %if.end137, !dbg !6161

if.else99:                                        ; preds = %while.body
  %68 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6162
  %data100 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %68, i32 0, i32 0, !dbg !6164
  %69 = load i8*, i8** %data100, align 8, !dbg !6164
  %call101 = call i8* @strchr(i8* %69, i32 59) #8, !dbg !6165
  store i8* %call101, i8** %ptr, align 8, !dbg !6166
  %70 = load i8*, i8** %ptr, align 8, !dbg !6167
  %tobool102 = icmp ne i8* %70, null, !dbg !6167
  br i1 %tobool102, label %if.then103, label %if.end136, !dbg !6169

if.then103:                                       ; preds = %if.else99
  %71 = load i8*, i8** %ptr, align 8, !dbg !6170
  %incdec.ptr104 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !6170
  store i8* %incdec.ptr104, i8** %ptr, align 8, !dbg !6170
  br label %while.cond105, !dbg !6172

while.cond105:                                    ; preds = %while.body117, %if.then103
  %72 = load i8*, i8** %ptr, align 8, !dbg !6173
  %73 = load i8, i8* %72, align 1, !dbg !6175
  %conv106 = sext i8 %73 to i32, !dbg !6175
  %tobool107 = icmp ne i32 %conv106, 0, !dbg !6175
  br i1 %tobool107, label %land.rhs108, label %land.end116, !dbg !6176

land.rhs108:                                      ; preds = %while.cond105
  %74 = load i8*, i8** %ptr, align 8, !dbg !6177
  %75 = load i8, i8* %74, align 1, !dbg !6177
  %conv109 = zext i8 %75 to i32, !dbg !6177
  %idxprom110 = sext i32 %conv109 to i64, !dbg !6177
  %call111 = call i16** @__ctype_b_loc() #1, !dbg !6177
  %76 = load i16*, i16** %call111, align 8, !dbg !6177
  %arrayidx112 = getelementptr inbounds i16, i16* %76, i64 %idxprom110, !dbg !6177
  %77 = load i16, i16* %arrayidx112, align 2, !dbg !6177
  %conv113 = zext i16 %77 to i32, !dbg !6177
  %and114 = and i32 %conv113, 8192, !dbg !6177
  %tobool115 = icmp ne i32 %and114, 0, !dbg !6179
  br label %land.end116

land.end116:                                      ; preds = %land.rhs108, %while.cond105
  %78 = phi i1 [ false, %while.cond105 ], [ %tobool115, %land.rhs108 ]
  br i1 %78, label %while.body117, label %while.end119, !dbg !6180

while.body117:                                    ; preds = %land.end116
  %79 = load i8*, i8** %ptr, align 8, !dbg !6182
  %incdec.ptr118 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !6182
  store i8* %incdec.ptr118, i8** %ptr, align 8, !dbg !6182
  br label %while.cond105, !dbg !6183

while.end119:                                     ; preds = %land.end116
  %80 = load i8*, i8** %ptr, align 8, !dbg !6185
  %81 = load i8, i8* %80, align 1, !dbg !6187
  %tobool120 = icmp ne i8 %81, 0, !dbg !6187
  br i1 %tobool120, label %if.then121, label %if.else122, !dbg !6188

if.then121:                                       ; preds = %while.end119
  br label %if.end135, !dbg !6189

if.else122:                                       ; preds = %while.end119
  %82 = load i8*, i8** %ptr, align 8, !dbg !6191
  %incdec.ptr123 = getelementptr inbounds i8, i8* %82, i32 -1, !dbg !6191
  store i8* %incdec.ptr123, i8** %ptr, align 8, !dbg !6191
  %83 = load i8, i8* %incdec.ptr123, align 1, !dbg !6194
  %conv124 = sext i8 %83 to i32, !dbg !6194
  %cmp125 = icmp eq i32 %conv124, 59, !dbg !6195
  br i1 %cmp125, label %if.then127, label %if.end134, !dbg !6196

if.then127:                                       ; preds = %if.else122
  call void @llvm.dbg.declare(metadata i32* %result128, metadata !6197, metadata !1950), !dbg !6199
  %84 = load i8*, i8** %ptr, align 8, !dbg !6200
  store i8 58, i8* %84, align 1, !dbg !6201
  %85 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6202
  %86 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6203
  %data129 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %86, i32 0, i32 0, !dbg !6204
  %87 = load i8*, i8** %data129, align 8, !dbg !6204
  %call130 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* %87), !dbg !6205
  store i32 %call130, i32* %result128, align 4, !dbg !6206
  %88 = load i32, i32* %result128, align 4, !dbg !6207
  %tobool131 = icmp ne i32 %88, 0, !dbg !6207
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6209

if.then132:                                       ; preds = %if.then127
  %89 = load i32, i32* %result128, align 4, !dbg !6210
  store i32 %89, i32* %retval, align 4, !dbg !6211
  br label %return, !dbg !6211

if.end133:                                        ; preds = %if.then127
  br label %if.end134, !dbg !6212

if.end134:                                        ; preds = %if.end133, %if.else122
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then121
  br label %if.end136, !dbg !6213

if.end136:                                        ; preds = %if.end135, %if.else99
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end98
  %90 = load %struct.curl_slist*, %struct.curl_slist** %headers, align 8, !dbg !6214
  %next = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %90, i32 0, i32 1, !dbg !6215
  %91 = load %struct.curl_slist*, %struct.curl_slist** %next, align 8, !dbg !6215
  store %struct.curl_slist* %91, %struct.curl_slist** %headers, align 8, !dbg !6216
  br label %while.cond, !dbg !6217

while.end138:                                     ; preds = %while.cond
  br label %for.inc, !dbg !6219

for.inc:                                          ; preds = %while.end138
  %92 = load i32, i32* %i, align 4, !dbg !6220
  %inc139 = add nsw i32 %92, 1, !dbg !6220
  store i32 %inc139, i32* %i, align 4, !dbg !6220
  br label %for.cond, !dbg !6222

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6223
  br label %return, !dbg !6223

return:                                           ; preds = %for.end, %if.then132, %if.then91
  %93 = load i32, i32* %retval, align 4, !dbg !6224
  ret i32 %93, !dbg !6224
}

; Function Attrs: nounwind uwtable
define i32 @Curl_add_timecondition(%struct.Curl_easy* %data, %struct.Curl_send_buffer* %req_buffer) #0 !dbg !1901 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %req_buffer.addr = alloca %struct.Curl_send_buffer*, align 8
  %tm = alloca %struct.tm*, align 8
  %buf = alloca i8*, align 8
  %keeptime = alloca %struct.tm, align 8
  %result = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6225, metadata !1950), !dbg !6226
  store %struct.Curl_send_buffer* %req_buffer, %struct.Curl_send_buffer** %req_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %req_buffer.addr, metadata !6227, metadata !1950), !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !6229, metadata !1950), !dbg !6245
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6246, metadata !1950), !dbg !6247
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6248
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !6249
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 6, !dbg !6250
  %1 = load i8*, i8** %buffer, align 8, !dbg !6250
  store i8* %1, i8** %buf, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.tm* %keeptime, metadata !6251, metadata !1950), !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6253, metadata !1950), !dbg !6254
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6255
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 13, !dbg !6257
  %timecondition = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 69, !dbg !6258
  %3 = load i32, i32* %timecondition, align 8, !dbg !6258
  %cmp = icmp eq i32 %3, 0, !dbg !6259
  br i1 %cmp, label %if.then, label %if.end, !dbg !6260

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6261
  br label %return, !dbg !6261

if.end:                                           ; preds = %entry
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6262
  %set1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 13, !dbg !6263
  %timevalue = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set1, i32 0, i32 70, !dbg !6264
  %5 = load i64, i64* %timevalue, align 8, !dbg !6264
  %call = call i32 @Curl_gmtime(i64 %5, %struct.tm* %keeptime), !dbg !6265
  store i32 %call, i32* %result, align 4, !dbg !6266
  %6 = load i32, i32* %result, align 4, !dbg !6267
  %tobool = icmp ne i32 %6, 0, !dbg !6267
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !6269

if.then2:                                         ; preds = %if.end
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6270
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0)), !dbg !6272
  %8 = load i32, i32* %result, align 4, !dbg !6273
  store i32 %8, i32* %retval, align 4, !dbg !6274
  br label %return, !dbg !6274

if.end3:                                          ; preds = %if.end
  store %struct.tm* %keeptime, %struct.tm** %tm, align 8, !dbg !6275
  %9 = load i8*, i8** %buf, align 8, !dbg !6276
  %10 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6277
  %tm_wday = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 6, !dbg !6278
  %11 = load i32, i32* %tm_wday, align 8, !dbg !6278
  %tobool4 = icmp ne i32 %11, 0, !dbg !6277
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6277

cond.true:                                        ; preds = %if.end3
  %12 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6279
  %tm_wday5 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 6, !dbg !6281
  %13 = load i32, i32* %tm_wday5, align 8, !dbg !6281
  %sub = sub nsw i32 %13, 1, !dbg !6282
  br label %cond.end, !dbg !6283

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !6284

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 6, %cond.false ], !dbg !6286
  %idxprom = sext i32 %cond to i64, !dbg !6288
  %arrayidx = getelementptr inbounds [7 x i8*], [7 x i8*]* @Curl_wkday, i64 0, i64 %idxprom, !dbg !6288
  %14 = load i8*, i8** %arrayidx, align 8, !dbg !6288
  %15 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6289
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %15, i32 0, i32 3, !dbg !6290
  %16 = load i32, i32* %tm_mday, align 4, !dbg !6290
  %17 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6291
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %17, i32 0, i32 4, !dbg !6292
  %18 = load i32, i32* %tm_mon, align 8, !dbg !6292
  %idxprom6 = sext i32 %18 to i64, !dbg !6293
  %arrayidx7 = getelementptr inbounds [12 x i8*], [12 x i8*]* @Curl_month, i64 0, i64 %idxprom6, !dbg !6293
  %19 = load i8*, i8** %arrayidx7, align 8, !dbg !6293
  %20 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6294
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 5, !dbg !6295
  %21 = load i32, i32* %tm_year, align 4, !dbg !6295
  %add = add nsw i32 %21, 1900, !dbg !6296
  %22 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6297
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %22, i32 0, i32 2, !dbg !6298
  %23 = load i32, i32* %tm_hour, align 8, !dbg !6298
  %24 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6299
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %24, i32 0, i32 1, !dbg !6300
  %25 = load i32, i32* %tm_min, align 4, !dbg !6300
  %26 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !6301
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %26, i32 0, i32 0, !dbg !6302
  %27 = load i32, i32* %tm_sec, align 8, !dbg !6302
  %call8 = call i32 (i8*, i64, i8*, ...) @curl_msnprintf(i8* %9, i64 16383, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i32 0, i32 0), i8* %14, i32 %16, i8* %19, i32 %add, i32 %23, i32 %25, i32 %27), !dbg !6303
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6304
  %set9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 13, !dbg !6305
  %timecondition10 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set9, i32 0, i32 69, !dbg !6306
  %29 = load i32, i32* %timecondition10, align 8, !dbg !6306
  switch i32 %29, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb12
    i32 3, label %sw.bb14
  ], !dbg !6307

sw.default:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !6308

sw.bb:                                            ; preds = %cond.end
  %30 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6310
  %31 = load i8*, i8** %buf, align 8, !dbg !6311
  %call11 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i8* %31), !dbg !6312
  store i32 %call11, i32* %result, align 4, !dbg !6313
  br label %sw.epilog, !dbg !6314

sw.bb12:                                          ; preds = %cond.end
  %32 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6315
  %33 = load i8*, i8** %buf, align 8, !dbg !6316
  %call13 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i8* %33), !dbg !6317
  store i32 %call13, i32* %result, align 4, !dbg !6318
  br label %sw.epilog, !dbg !6319

sw.bb14:                                          ; preds = %cond.end
  %34 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6320
  %35 = load i8*, i8** %buf, align 8, !dbg !6321
  %call15 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i8* %35), !dbg !6322
  store i32 %call15, i32* %result, align 4, !dbg !6323
  br label %sw.epilog, !dbg !6324

sw.epilog:                                        ; preds = %sw.bb14, %sw.bb12, %sw.bb, %sw.default
  %36 = load i32, i32* %result, align 4, !dbg !6325
  store i32 %36, i32* %retval, align 4, !dbg !6326
  br label %return, !dbg !6326

return:                                           ; preds = %sw.epilog, %if.then2, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !6327
  ret i32 %37, !dbg !6327
}

declare i32 @Curl_gmtime(i64, %struct.tm*) #3

declare i32 @curl_msnprintf(i8*, i64, i8*, ...) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare i8* @curl_maprintf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @use_http_1_1plus(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !1920 {
entry:
  %retval = alloca i1, align 1
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6328, metadata !1950), !dbg !6329
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6330, metadata !1950), !dbg !6331
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6332
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !6334
  %httpversion = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 32, !dbg !6335
  %1 = load i32, i32* %httpversion, align 4, !dbg !6335
  %cmp = icmp eq i32 %1, 10, !dbg !6336
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6337

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6338
  %httpversion1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 29, !dbg !6340
  %3 = load i32, i32* %httpversion1, align 8, !dbg !6340
  %cmp2 = icmp eq i32 %3, 10, !dbg !6341
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6342

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !6343
  br label %return, !dbg !6343

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6344
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 13, !dbg !6346
  %httpversion3 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 72, !dbg !6347
  %5 = load i64, i64* %httpversion3, align 8, !dbg !6347
  %cmp4 = icmp eq i64 %5, 1, !dbg !6348
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !6349

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6350
  %httpversion5 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 29, !dbg !6351
  %7 = load i32, i32* %httpversion5, align 8, !dbg !6351
  %cmp6 = icmp sle i32 %7, 10, !dbg !6352
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6353

if.then7:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !6355
  br label %return, !dbg !6355

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6356
  %set9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 13, !dbg !6357
  %httpversion10 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set9, i32 0, i32 72, !dbg !6358
  %9 = load i64, i64* %httpversion10, align 8, !dbg !6358
  %cmp11 = icmp eq i64 %9, 0, !dbg !6359
  br i1 %cmp11, label %lor.end, label %lor.rhs, !dbg !6360

lor.rhs:                                          ; preds = %if.end8
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6361
  %set12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !6362
  %httpversion13 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set12, i32 0, i32 72, !dbg !6363
  %11 = load i64, i64* %httpversion13, align 8, !dbg !6363
  %cmp14 = icmp sge i64 %11, 2, !dbg !6364
  br label %lor.end, !dbg !6365

lor.end:                                          ; preds = %lor.rhs, %if.end8
  %12 = phi i1 [ true, %if.end8 ], [ %cmp14, %lor.rhs ]
  store i1 %12, i1* %retval, align 1, !dbg !6366
  br label %return, !dbg !6366

return:                                           ; preds = %lor.end, %if.then7, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !6368
  ret i1 %13, !dbg !6368
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #2

declare signext i8 @Curl_raw_toupper(i8 signext) #3

declare i32 @Curl_getformdata(%struct.Curl_easy*, %struct.FormData**, %struct.curl_httppost*, i8*, i64*) #3

declare i64 @curlx_sotouz(i64) #3

; Function Attrs: nounwind uwtable
define internal i8* @get_http_string(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !1925 {
entry:
  %retval = alloca i8*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6369, metadata !1950), !dbg !6370
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6371, metadata !1950), !dbg !6372
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6373
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6375
  %call = call zeroext i1 @use_http_1_1plus(%struct.Curl_easy* %0, %struct.connectdata* %1), !dbg !6376
  br i1 %call, label %if.then, label %if.end, !dbg !6377

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i8** %retval, align 8, !dbg !6378
  br label %return, !dbg !6378

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8** %retval, align 8, !dbg !6379
  br label %return, !dbg !6379

return:                                           ; preds = %if.end, %if.then
  %2 = load i8*, i8** %retval, align 8, !dbg !6380
  ret i8* %2, !dbg !6380
}

declare i32 @Curl_share_lock(%struct.Curl_easy*, i32, i32) #3

declare %struct.Cookie* @Curl_cookie_getlist(%struct.CookieInfo*, i8*, i8*, i1 zeroext) #3

declare i32 @Curl_share_unlock(%struct.Curl_easy*, i32) #3

declare void @Curl_cookie_freelist(%struct.Cookie*) #3

declare void @Curl_pgrsSetUploadSize(%struct.Curl_easy*, i64) #3

declare void @Curl_setup_transfer(%struct.connectdata*, i32, i64, i1 zeroext, i64*, i32, i64*) #3

declare i32 @Curl_FormInit(%struct.Form*, %struct.FormData*) #3

declare i64 @Curl_FormReader(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define internal i32 @expect100(%struct.Curl_easy* %data, %struct.connectdata* %conn, %struct.Curl_send_buffer* %req_buffer) #0 !dbg !1928 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %req_buffer.addr = alloca %struct.Curl_send_buffer*, align 8
  %result = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6381, metadata !1950), !dbg !6382
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6383, metadata !1950), !dbg !6384
  store %struct.Curl_send_buffer* %req_buffer, %struct.Curl_send_buffer** %req_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_send_buffer** %req_buffer.addr, metadata !6385, metadata !1950), !dbg !6386
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6387, metadata !1950), !dbg !6388
  store i32 0, i32* %result, align 4, !dbg !6388
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6389, metadata !1950), !dbg !6390
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6391
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !6392
  %expect100header = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 33, !dbg !6393
  store i8 0, i8* %expect100header, align 8, !dbg !6394
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6395
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6397
  %call = call zeroext i1 @use_http_1_1plus(%struct.Curl_easy* %1, %struct.connectdata* %2), !dbg !6398
  br i1 %call, label %land.lhs.true, label %if.end12, !dbg !6399

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6400
  %httpversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 29, !dbg !6401
  %4 = load i32, i32* %httpversion, align 8, !dbg !6401
  %cmp = icmp ne i32 %4, 20, !dbg !6402
  br i1 %cmp, label %if.then, label %if.end12, !dbg !6403

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6405
  %call1 = call i8* @Curl_checkheaders(%struct.connectdata* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0)), !dbg !6407
  store i8* %call1, i8** %ptr, align 8, !dbg !6408
  %6 = load i8*, i8** %ptr, align 8, !dbg !6409
  %tobool = icmp ne i8* %6, null, !dbg !6409
  br i1 %tobool, label %if.then2, label %if.else, !dbg !6411

if.then2:                                         ; preds = %if.then
  %7 = load i8*, i8** %ptr, align 8, !dbg !6412
  %call3 = call zeroext i1 @Curl_compareheader(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0)), !dbg !6414
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6415
  %state4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 17, !dbg !6416
  %expect100header5 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state4, i32 0, i32 33, !dbg !6417
  %frombool = zext i1 %call3 to i8, !dbg !6418
  store i8 %frombool, i8* %expect100header5, align 8, !dbg !6418
  br label %if.end11, !dbg !6419

if.else:                                          ; preds = %if.then
  %9 = load %struct.Curl_send_buffer*, %struct.Curl_send_buffer** %req_buffer.addr, align 8, !dbg !6420
  %call6 = call i32 (%struct.Curl_send_buffer*, i8*, ...) @Curl_add_bufferf(%struct.Curl_send_buffer* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i32 0, i32 0)), !dbg !6422
  store i32 %call6, i32* %result, align 4, !dbg !6423
  %10 = load i32, i32* %result, align 4, !dbg !6424
  %tobool7 = icmp ne i32 %10, 0, !dbg !6424
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !6426

if.then8:                                         ; preds = %if.else
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6427
  %state9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 17, !dbg !6428
  %expect100header10 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state9, i32 0, i32 33, !dbg !6429
  store i8 1, i8* %expect100header10, align 8, !dbg !6430
  br label %if.end, !dbg !6427

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then2
  br label %if.end12, !dbg !6431

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %entry
  %12 = load i32, i32* %result, align 4, !dbg !6432
  ret i32 %12, !dbg !6433
}

declare i8* @Curl_formpostheader(i8*, i64*) #3

declare void @Curl_pgrsSetUploadCounter(%struct.Curl_easy*, i64) #3

declare i32 @Curl_pgrsUpdate(%struct.connectdata*) #3

; Function Attrs: nounwind uwtable
define i32 @Curl_http_readwrite_headers(%struct.Curl_easy* %data, %struct.connectdata* %conn, i64* %nread, i8* %stop_reading) #0 !dbg !1905 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %nread.addr = alloca i64*, align 8
  %stop_reading.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %k = alloca %struct.SingleRequest*, align 8
  %rest_length = alloca i64, align 8
  %full_length = alloca i64, align 8
  %writetype = alloca i32, align 4
  %headerlen = alloca i64, align 8
  %httpversion_major = alloca i32, align 4
  %rtspversion_major = alloca i32, align 4
  %nc = alloca i32, align 4
  %contentlength = alloca i64, align 8
  %contenttype = alloca i8*, align 8
  %server_name = alloca i8*, align 8
  %start = alloca i8*, align 8
  %start632 = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %secs = alloca i64, align 8
  %proxy = alloca i8, align 1
  %auth = alloca i8*, align 8
  %location809 = alloca i8*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6434, metadata !1950), !dbg !6435
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6436, metadata !1950), !dbg !6437
  store i64* %nread, i64** %nread.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %nread.addr, metadata !6438, metadata !1950), !dbg !6439
  store i8* %stop_reading, i8** %stop_reading.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stop_reading.addr, metadata !6440, metadata !1950), !dbg !6441
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6442, metadata !1950), !dbg !6443
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k, metadata !6444, metadata !1950), !dbg !6445
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6446
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 12, !dbg !6447
  store %struct.SingleRequest* %req, %struct.SingleRequest** %k, align 8, !dbg !6445
  br label %do.body, !dbg !6448

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %rest_length, metadata !6449, metadata !1950), !dbg !6451
  call void @llvm.dbg.declare(metadata i64* %full_length, metadata !6452, metadata !1950), !dbg !6453
  call void @llvm.dbg.declare(metadata i32* %writetype, metadata !6454, metadata !1950), !dbg !6455
  %1 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6456
  %str = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %1, i32 0, i32 15, !dbg !6457
  %2 = load i8*, i8** %str, align 8, !dbg !6457
  %3 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6458
  %str_start = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %3, i32 0, i32 16, !dbg !6459
  store i8* %2, i8** %str_start, align 8, !dbg !6460
  %4 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6461
  %str_start1 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %4, i32 0, i32 16, !dbg !6462
  %5 = load i8*, i8** %str_start1, align 8, !dbg !6462
  %6 = load i64*, i64** %nread.addr, align 8, !dbg !6463
  %7 = load i64, i64* %6, align 8, !dbg !6464
  %call = call i8* @memchr(i8* %5, i32 10, i64 %7) #8, !dbg !6465
  %8 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6466
  %end_ptr = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %8, i32 0, i32 17, !dbg !6467
  store i8* %call, i8** %end_ptr, align 8, !dbg !6468
  %9 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6469
  %end_ptr2 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %9, i32 0, i32 17, !dbg !6471
  %10 = load i8*, i8** %end_ptr2, align 8, !dbg !6471
  %tobool = icmp ne i8* %10, null, !dbg !6469
  br i1 %tobool, label %if.end12, label %if.then, !dbg !6472

if.then:                                          ; preds = %do.body
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6473
  %12 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6475
  %13 = load i64*, i64** %nread.addr, align 8, !dbg !6476
  %14 = load i64, i64* %13, align 8, !dbg !6477
  %call3 = call i32 @header_append(%struct.Curl_easy* %11, %struct.SingleRequest* %12, i64 %14), !dbg !6478
  store i32 %call3, i32* %result, align 4, !dbg !6479
  %15 = load i32, i32* %result, align 4, !dbg !6480
  %tobool4 = icmp ne i32 %15, 0, !dbg !6480
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6482

if.then5:                                         ; preds = %if.then
  %16 = load i32, i32* %result, align 4, !dbg !6483
  store i32 %16, i32* %retval, align 4, !dbg !6484
  br label %return, !dbg !6484

if.end:                                           ; preds = %if.then
  %17 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6485
  %headerline = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %17, i32 0, i32 12, !dbg !6487
  %18 = load i32, i32* %headerline, align 8, !dbg !6487
  %tobool6 = icmp ne i32 %18, 0, !dbg !6485
  br i1 %tobool6, label %if.end11, label %land.lhs.true, !dbg !6488

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6489
  %hbuflen = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %19, i32 0, i32 14, !dbg !6491
  %20 = load i64, i64* %hbuflen, align 8, !dbg !6491
  %cmp = icmp ugt i64 %20, 5, !dbg !6492
  br i1 %cmp, label %if.then7, label %if.end11, !dbg !6493

if.then7:                                         ; preds = %land.lhs.true
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6494
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6497
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6498
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 17, !dbg !6499
  %headerbuff = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 4, !dbg !6500
  %24 = load i8*, i8** %headerbuff, align 8, !dbg !6500
  %call8 = call zeroext i1 @checkprotoprefix(%struct.Curl_easy* %21, %struct.connectdata* %22, i8* %24), !dbg !6501
  br i1 %call8, label %if.end10, label %if.then9, !dbg !6502

if.then9:                                         ; preds = %if.then7
  %25 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6503
  %header = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %25, i32 0, i32 10, !dbg !6505
  store i8 0, i8* %header, align 8, !dbg !6506
  %26 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6507
  %badheader = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %26, i32 0, i32 11, !dbg !6508
  store i32 2, i32* %badheader, align 4, !dbg !6509
  br label %do.end898, !dbg !6510

if.end10:                                         ; preds = %if.then7
  br label %if.end11, !dbg !6511

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %if.end
  br label %do.end898, !dbg !6512

if.end12:                                         ; preds = %do.body
  %27 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6513
  %end_ptr13 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %27, i32 0, i32 17, !dbg !6514
  %28 = load i8*, i8** %end_ptr13, align 8, !dbg !6514
  %29 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6515
  %str14 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %29, i32 0, i32 15, !dbg !6516
  %30 = load i8*, i8** %str14, align 8, !dbg !6516
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i64, !dbg !6517
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !6517
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6517
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !6518
  store i64 %add, i64* %rest_length, align 8, !dbg !6519
  %31 = load i64, i64* %rest_length, align 8, !dbg !6520
  %32 = load i64*, i64** %nread.addr, align 8, !dbg !6521
  %33 = load i64, i64* %32, align 8, !dbg !6522
  %sub = sub nsw i64 %33, %31, !dbg !6522
  store i64 %sub, i64* %32, align 8, !dbg !6522
  %34 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6523
  %end_ptr15 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %34, i32 0, i32 17, !dbg !6524
  %35 = load i8*, i8** %end_ptr15, align 8, !dbg !6524
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 1, !dbg !6525
  %36 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6526
  %str16 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %36, i32 0, i32 15, !dbg !6527
  store i8* %add.ptr, i8** %str16, align 8, !dbg !6528
  %37 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6529
  %str17 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %37, i32 0, i32 15, !dbg !6530
  %38 = load i8*, i8** %str17, align 8, !dbg !6530
  %39 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6531
  %str_start18 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %39, i32 0, i32 16, !dbg !6532
  %40 = load i8*, i8** %str_start18, align 8, !dbg !6532
  %sub.ptr.lhs.cast19 = ptrtoint i8* %38 to i64, !dbg !6533
  %sub.ptr.rhs.cast20 = ptrtoint i8* %40 to i64, !dbg !6533
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20, !dbg !6533
  store i64 %sub.ptr.sub21, i64* %full_length, align 8, !dbg !6534
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6535
  %42 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6536
  %43 = load i64, i64* %full_length, align 8, !dbg !6537
  %call22 = call i32 @header_append(%struct.Curl_easy* %41, %struct.SingleRequest* %42, i64 %43), !dbg !6538
  store i32 %call22, i32* %result, align 4, !dbg !6539
  %44 = load i32, i32* %result, align 4, !dbg !6540
  %tobool23 = icmp ne i32 %44, 0, !dbg !6540
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6542

if.then24:                                        ; preds = %if.end12
  %45 = load i32, i32* %result, align 4, !dbg !6543
  store i32 %45, i32* %retval, align 4, !dbg !6544
  br label %return, !dbg !6544

if.end25:                                         ; preds = %if.end12
  %46 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6545
  %hbufp = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %46, i32 0, i32 13, !dbg !6546
  %47 = load i8*, i8** %hbufp, align 8, !dbg !6546
  %48 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6547
  %end_ptr26 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %48, i32 0, i32 17, !dbg !6548
  store i8* %47, i8** %end_ptr26, align 8, !dbg !6549
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6550
  %state27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %49, i32 0, i32 17, !dbg !6551
  %headerbuff28 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state27, i32 0, i32 4, !dbg !6552
  %50 = load i8*, i8** %headerbuff28, align 8, !dbg !6552
  %51 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6553
  %p = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %51, i32 0, i32 18, !dbg !6554
  store i8* %50, i8** %p, align 8, !dbg !6555
  %52 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6556
  %headerline29 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %52, i32 0, i32 12, !dbg !6558
  %53 = load i32, i32* %headerline29, align 8, !dbg !6558
  %tobool30 = icmp ne i32 %53, 0, !dbg !6556
  br i1 %tobool30, label %if.end46, label %if.then31, !dbg !6559

if.then31:                                        ; preds = %if.end25
  %54 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6560
  %hbuflen32 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %54, i32 0, i32 14, !dbg !6563
  %55 = load i64, i64* %hbuflen32, align 8, !dbg !6563
  %cmp33 = icmp ugt i64 %55, 5, !dbg !6564
  br i1 %cmp33, label %land.lhs.true34, label %if.end45, !dbg !6565

land.lhs.true34:                                  ; preds = %if.then31
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6566
  %57 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6567
  %58 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6568
  %state35 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %58, i32 0, i32 17, !dbg !6569
  %headerbuff36 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state35, i32 0, i32 4, !dbg !6570
  %59 = load i8*, i8** %headerbuff36, align 8, !dbg !6570
  %call37 = call zeroext i1 @checkprotoprefix(%struct.Curl_easy* %56, %struct.connectdata* %57, i8* %59), !dbg !6571
  br i1 %call37, label %if.end45, label %if.then38, !dbg !6572

if.then38:                                        ; preds = %land.lhs.true34
  %60 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6574
  %header39 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %60, i32 0, i32 10, !dbg !6576
  store i8 0, i8* %header39, align 8, !dbg !6577
  %61 = load i64*, i64** %nread.addr, align 8, !dbg !6578
  %62 = load i64, i64* %61, align 8, !dbg !6580
  %tobool40 = icmp ne i64 %62, 0, !dbg !6580
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !6581

if.then41:                                        ; preds = %if.then38
  %63 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6582
  %badheader42 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %63, i32 0, i32 11, !dbg !6583
  store i32 1, i32* %badheader42, align 4, !dbg !6584
  br label %if.end44, !dbg !6582

if.else:                                          ; preds = %if.then38
  %64 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6585
  %badheader43 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %64, i32 0, i32 11, !dbg !6587
  store i32 2, i32* %badheader43, align 4, !dbg !6588
  %65 = load i64, i64* %rest_length, align 8, !dbg !6589
  %66 = load i64*, i64** %nread.addr, align 8, !dbg !6590
  store i64 %65, i64* %66, align 8, !dbg !6591
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then41
  br label %do.end898, !dbg !6592

if.end45:                                         ; preds = %land.lhs.true34, %if.then31
  br label %if.end46, !dbg !6593

if.end46:                                         ; preds = %if.end45, %if.end25
  %67 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6594
  %p47 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %67, i32 0, i32 18, !dbg !6596
  %68 = load i8*, i8** %p47, align 8, !dbg !6596
  %69 = load i8, i8* %68, align 1, !dbg !6597
  %conv = sext i8 %69 to i32, !dbg !6597
  %cmp48 = icmp eq i32 10, %conv, !dbg !6598
  br i1 %cmp48, label %if.then54, label %lor.lhs.false, !dbg !6599

lor.lhs.false:                                    ; preds = %if.end46
  %70 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6600
  %p50 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %70, i32 0, i32 18, !dbg !6602
  %71 = load i8*, i8** %p50, align 8, !dbg !6602
  %72 = load i8, i8* %71, align 1, !dbg !6603
  %conv51 = sext i8 %72 to i32, !dbg !6603
  %cmp52 = icmp eq i32 13, %conv51, !dbg !6604
  br i1 %cmp52, label %if.then54, label %if.end252, !dbg !6605

if.then54:                                        ; preds = %lor.lhs.false, %if.end46
  call void @llvm.dbg.declare(metadata i64* %headerlen, metadata !6606, metadata !1950), !dbg !6608
  %73 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6609
  %p55 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %73, i32 0, i32 18, !dbg !6611
  %74 = load i8*, i8** %p55, align 8, !dbg !6611
  %75 = load i8, i8* %74, align 1, !dbg !6612
  %conv56 = sext i8 %75 to i32, !dbg !6612
  %cmp57 = icmp eq i32 13, %conv56, !dbg !6613
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !6614

if.then59:                                        ; preds = %if.then54
  %76 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6615
  %p60 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %76, i32 0, i32 18, !dbg !6616
  %77 = load i8*, i8** %p60, align 8, !dbg !6617
  %incdec.ptr = getelementptr inbounds i8, i8* %77, i32 1, !dbg !6617
  store i8* %incdec.ptr, i8** %p60, align 8, !dbg !6617
  br label %if.end61, !dbg !6615

if.end61:                                         ; preds = %if.then59, %if.then54
  %78 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6618
  %p62 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %78, i32 0, i32 18, !dbg !6620
  %79 = load i8*, i8** %p62, align 8, !dbg !6620
  %80 = load i8, i8* %79, align 1, !dbg !6621
  %conv63 = sext i8 %80 to i32, !dbg !6621
  %cmp64 = icmp eq i32 10, %conv63, !dbg !6622
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !6623

if.then66:                                        ; preds = %if.end61
  %81 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6624
  %p67 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %81, i32 0, i32 18, !dbg !6625
  %82 = load i8*, i8** %p67, align 8, !dbg !6626
  %incdec.ptr68 = getelementptr inbounds i8, i8* %82, i32 1, !dbg !6626
  store i8* %incdec.ptr68, i8** %p67, align 8, !dbg !6626
  br label %if.end69, !dbg !6624

if.end69:                                         ; preds = %if.then66, %if.end61
  %83 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6627
  %httpcode = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %83, i32 0, i32 21, !dbg !6629
  %84 = load i32, i32* %httpcode, align 8, !dbg !6629
  %cmp70 = icmp sle i32 100, %84, !dbg !6630
  br i1 %cmp70, label %land.lhs.true72, label %if.else100, !dbg !6631

land.lhs.true72:                                  ; preds = %if.end69
  %85 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6632
  %httpcode73 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %85, i32 0, i32 21, !dbg !6634
  %86 = load i32, i32* %httpcode73, align 8, !dbg !6634
  %cmp74 = icmp sge i32 199, %86, !dbg !6635
  br i1 %cmp74, label %if.then76, label %if.else100, !dbg !6636

if.then76:                                        ; preds = %land.lhs.true72
  %87 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6637
  %httpcode77 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %87, i32 0, i32 21, !dbg !6639
  %88 = load i32, i32* %httpcode77, align 8, !dbg !6639
  switch i32 %88, label %sw.default [
    i32 100, label %sw.bb
    i32 101, label %sw.bb85
  ], !dbg !6640

sw.bb:                                            ; preds = %if.then76
  %89 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6641
  %header78 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %89, i32 0, i32 10, !dbg !6643
  store i8 1, i8* %header78, align 8, !dbg !6644
  %90 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6645
  %headerline79 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %90, i32 0, i32 12, !dbg !6646
  store i32 0, i32* %headerline79, align 8, !dbg !6647
  %91 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6648
  %exp100 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %91, i32 0, i32 23, !dbg !6650
  %92 = load i32, i32* %exp100, align 8, !dbg !6650
  %cmp80 = icmp ugt i32 %92, 0, !dbg !6651
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !6652

if.then82:                                        ; preds = %sw.bb
  %93 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6653
  %exp10083 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %93, i32 0, i32 23, !dbg !6655
  store i32 0, i32* %exp10083, align 8, !dbg !6656
  %94 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6657
  %keepon = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %94, i32 0, i32 31, !dbg !6658
  %95 = load i32, i32* %keepon, align 4, !dbg !6659
  %or = or i32 %95, 2, !dbg !6659
  store i32 %or, i32* %keepon, align 4, !dbg !6659
  br label %if.end84, !dbg !6660

if.end84:                                         ; preds = %if.then82, %sw.bb
  br label %sw.epilog, !dbg !6661

sw.bb85:                                          ; preds = %if.then76
  %96 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6662
  %upgr101 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %96, i32 0, i32 24, !dbg !6664
  %97 = load i32, i32* %upgr101, align 4, !dbg !6664
  %cmp86 = icmp eq i32 %97, 1, !dbg !6665
  br i1 %cmp86, label %if.then88, label %if.else95, !dbg !6666

if.then88:                                        ; preds = %sw.bb85
  %98 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6667
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %98, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.75, i32 0, i32 0)), !dbg !6669
  %99 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6670
  %upgr10189 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %99, i32 0, i32 24, !dbg !6671
  store i32 2, i32* %upgr10189, align 4, !dbg !6672
  %100 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6673
  %header90 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %100, i32 0, i32 10, !dbg !6674
  store i8 1, i8* %header90, align 8, !dbg !6675
  %101 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6676
  %headerline91 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %101, i32 0, i32 12, !dbg !6677
  store i32 0, i32* %headerline91, align 8, !dbg !6678
  store i32 1, i32* %result, align 4, !dbg !6679
  %102 = load i32, i32* %result, align 4, !dbg !6680
  %tobool92 = icmp ne i32 %102, 0, !dbg !6680
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !6682

if.then93:                                        ; preds = %if.then88
  %103 = load i32, i32* %result, align 4, !dbg !6683
  store i32 %103, i32* %retval, align 4, !dbg !6684
  br label %return, !dbg !6684

if.end94:                                         ; preds = %if.then88
  %104 = load i64*, i64** %nread.addr, align 8, !dbg !6685
  store i64 0, i64* %104, align 8, !dbg !6686
  br label %if.end97, !dbg !6687

if.else95:                                        ; preds = %sw.bb85
  %105 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6688
  %header96 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %105, i32 0, i32 10, !dbg !6690
  store i8 0, i8* %header96, align 8, !dbg !6691
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.end94
  br label %sw.epilog, !dbg !6692

sw.default:                                       ; preds = %if.then76
  %106 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6693
  %header98 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %106, i32 0, i32 10, !dbg !6694
  store i8 1, i8* %header98, align 8, !dbg !6695
  %107 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6696
  %headerline99 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %107, i32 0, i32 12, !dbg !6697
  store i32 0, i32* %headerline99, align 8, !dbg !6698
  br label %sw.epilog, !dbg !6699

sw.epilog:                                        ; preds = %sw.default, %if.end97, %if.end84
  br label %if.end118, !dbg !6700

if.else100:                                       ; preds = %land.lhs.true72, %if.end69
  %108 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6701
  %header101 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %108, i32 0, i32 10, !dbg !6703
  store i8 0, i8* %header101, align 8, !dbg !6704
  %109 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6705
  %size = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %109, i32 0, i32 0, !dbg !6707
  %110 = load i64, i64* %size, align 8, !dbg !6707
  %cmp102 = icmp eq i64 %110, -1, !dbg !6708
  br i1 %cmp102, label %land.lhs.true104, label %if.end117, !dbg !6709

land.lhs.true104:                                 ; preds = %if.else100
  %111 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6710
  %chunk = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %111, i32 0, i32 39, !dbg !6712
  %112 = load i8, i8* %chunk, align 8, !dbg !6712
  %tobool105 = trunc i8 %112 to i1, !dbg !6712
  br i1 %tobool105, label %if.end117, label %land.lhs.true106, !dbg !6713

land.lhs.true106:                                 ; preds = %land.lhs.true104
  %113 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6714
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %113, i32 0, i32 43, !dbg !6716
  %close = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 0, !dbg !6717
  %114 = load i8, i8* %close, align 1, !dbg !6717
  %tobool107 = trunc i8 %114 to i1, !dbg !6717
  br i1 %tobool107, label %if.end117, label %land.lhs.true108, !dbg !6718

land.lhs.true108:                                 ; preds = %land.lhs.true106
  %115 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6719
  %httpversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %115, i32 0, i32 29, !dbg !6720
  %116 = load i32, i32* %httpversion, align 8, !dbg !6720
  %cmp109 = icmp eq i32 %116, 11, !dbg !6721
  br i1 %cmp109, label %land.lhs.true111, label %if.end117, !dbg !6722

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %117 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6723
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %117, i32 0, i32 47, !dbg !6724
  %118 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6724
  %protocol = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %118, i32 0, i32 15, !dbg !6725
  %119 = load i32, i32* %protocol, align 8, !dbg !6725
  %and = and i32 %119, 262144, !dbg !6726
  %tobool112 = icmp ne i32 %and, 0, !dbg !6726
  br i1 %tobool112, label %if.end117, label %land.lhs.true113, !dbg !6727

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %120 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6728
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %120, i32 0, i32 13, !dbg !6729
  %httpreq = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 71, !dbg !6730
  %121 = load i32, i32* %httpreq, align 8, !dbg !6730
  %cmp114 = icmp ne i32 %121, 5, !dbg !6731
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !6732

if.then116:                                       ; preds = %land.lhs.true113
  %122 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6734
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %122, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.76, i32 0, i32 0)), !dbg !6736
  %123 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6737
  call void @Curl_conncontrol(%struct.connectdata* %123, i32 2), !dbg !6737
  br label %if.end117, !dbg !6738

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true108, %land.lhs.true106, %land.lhs.true104, %if.else100
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %sw.epilog
  %124 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6739
  %call119 = call i32 @http_should_fail(%struct.connectdata* %124), !dbg !6741
  %tobool120 = icmp ne i32 %call119, 0, !dbg !6741
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !6742

if.then121:                                       ; preds = %if.end118
  %125 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6743
  %126 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6745
  %httpcode122 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %126, i32 0, i32 21, !dbg !6746
  %127 = load i32, i32* %httpcode122, align 8, !dbg !6746
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %125, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i32 0, i32 0), i32 %127), !dbg !6747
  store i32 22, i32* %retval, align 4, !dbg !6748
  br label %return, !dbg !6748

if.end123:                                        ; preds = %if.end118
  store i32 2, i32* %writetype, align 4, !dbg !6749
  %128 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6750
  %set124 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %128, i32 0, i32 13, !dbg !6752
  %include_header = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set124, i32 0, i32 100, !dbg !6753
  %129 = load i8, i8* %include_header, align 1, !dbg !6753
  %tobool125 = trunc i8 %129 to i1, !dbg !6753
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !6754

if.then126:                                       ; preds = %if.end123
  %130 = load i32, i32* %writetype, align 4, !dbg !6755
  %or127 = or i32 %130, 1, !dbg !6755
  store i32 %or127, i32* %writetype, align 4, !dbg !6755
  br label %if.end128, !dbg !6756

if.end128:                                        ; preds = %if.then126, %if.end123
  %131 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6757
  %p129 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %131, i32 0, i32 18, !dbg !6758
  %132 = load i8*, i8** %p129, align 8, !dbg !6758
  %133 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6759
  %state130 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %133, i32 0, i32 17, !dbg !6760
  %headerbuff131 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state130, i32 0, i32 4, !dbg !6761
  %134 = load i8*, i8** %headerbuff131, align 8, !dbg !6761
  %sub.ptr.lhs.cast132 = ptrtoint i8* %132 to i64, !dbg !6762
  %sub.ptr.rhs.cast133 = ptrtoint i8* %134 to i64, !dbg !6762
  %sub.ptr.sub134 = sub i64 %sub.ptr.lhs.cast132, %sub.ptr.rhs.cast133, !dbg !6762
  store i64 %sub.ptr.sub134, i64* %headerlen, align 8, !dbg !6763
  %135 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6764
  %136 = load i32, i32* %writetype, align 4, !dbg !6765
  %137 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6766
  %state135 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %137, i32 0, i32 17, !dbg !6767
  %headerbuff136 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state135, i32 0, i32 4, !dbg !6768
  %138 = load i8*, i8** %headerbuff136, align 8, !dbg !6768
  %139 = load i64, i64* %headerlen, align 8, !dbg !6769
  %call137 = call i32 @Curl_client_write(%struct.connectdata* %135, i32 %136, i8* %138, i64 %139), !dbg !6770
  store i32 %call137, i32* %result, align 4, !dbg !6771
  %140 = load i32, i32* %result, align 4, !dbg !6772
  %tobool138 = icmp ne i32 %140, 0, !dbg !6772
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !6774

if.then139:                                       ; preds = %if.end128
  %141 = load i32, i32* %result, align 4, !dbg !6775
  store i32 %141, i32* %retval, align 4, !dbg !6776
  br label %return, !dbg !6776

if.end140:                                        ; preds = %if.end128
  %142 = load i64, i64* %headerlen, align 8, !dbg !6777
  %143 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6778
  %info = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %143, i32 0, i32 19, !dbg !6779
  %header_size = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info, i32 0, i32 5, !dbg !6780
  %144 = load i64, i64* %header_size, align 8, !dbg !6781
  %add141 = add nsw i64 %144, %142, !dbg !6781
  store i64 %add141, i64* %header_size, align 8, !dbg !6781
  %145 = load i64, i64* %headerlen, align 8, !dbg !6782
  %146 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6783
  %req142 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %146, i32 0, i32 12, !dbg !6784
  %headerbytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req142, i32 0, i32 6, !dbg !6785
  %147 = load i64, i64* %headerbytecount, align 8, !dbg !6786
  %add143 = add nsw i64 %147, %145, !dbg !6786
  store i64 %add143, i64* %headerbytecount, align 8, !dbg !6786
  %148 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6787
  %httpcode144 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %148, i32 0, i32 21, !dbg !6788
  %149 = load i32, i32* %httpcode144, align 8, !dbg !6788
  %cmp145 = icmp sle i32 100, %149, !dbg !6789
  br i1 %cmp145, label %land.lhs.true147, label %cond.false, !dbg !6790

land.lhs.true147:                                 ; preds = %if.end140
  %150 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6791
  %httpcode148 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %150, i32 0, i32 21, !dbg !6793
  %151 = load i32, i32* %httpcode148, align 8, !dbg !6793
  %cmp149 = icmp sge i32 199, %151, !dbg !6794
  br i1 %cmp149, label %cond.true, label %cond.false, !dbg !6795

cond.true:                                        ; preds = %land.lhs.true147
  %152 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6796
  %req151 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %152, i32 0, i32 12, !dbg !6798
  %headerbytecount152 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req151, i32 0, i32 6, !dbg !6799
  %153 = load i64, i64* %headerbytecount152, align 8, !dbg !6799
  br label %cond.end, !dbg !6800

cond.false:                                       ; preds = %land.lhs.true147, %if.end140
  br label %cond.end, !dbg !6801

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %153, %cond.true ], [ 0, %cond.false ], !dbg !6803
  %154 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6805
  %req153 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %154, i32 0, i32 12, !dbg !6806
  %deductheadercount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req153, i32 0, i32 7, !dbg !6807
  store i64 %cond, i64* %deductheadercount, align 8, !dbg !6808
  %155 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6809
  %call154 = call i32 @Curl_http_auth_act(%struct.connectdata* %155), !dbg !6810
  store i32 %call154, i32* %result, align 4, !dbg !6811
  %156 = load i32, i32* %result, align 4, !dbg !6812
  %tobool155 = icmp ne i32 %156, 0, !dbg !6812
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !6814

if.then156:                                       ; preds = %cond.end
  %157 = load i32, i32* %result, align 4, !dbg !6815
  store i32 %157, i32* %retval, align 4, !dbg !6816
  br label %return, !dbg !6816

if.end157:                                        ; preds = %cond.end
  %158 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6817
  %httpcode158 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %158, i32 0, i32 21, !dbg !6819
  %159 = load i32, i32* %httpcode158, align 8, !dbg !6819
  %cmp159 = icmp sge i32 %159, 300, !dbg !6820
  br i1 %cmp159, label %if.then161, label %if.end209, !dbg !6821

if.then161:                                       ; preds = %if.end157
  %160 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6822
  %bits162 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %160, i32 0, i32 43, !dbg !6825
  %authneg = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits162, i32 0, i32 16, !dbg !6826
  %161 = load i8, i8* %authneg, align 1, !dbg !6826
  %tobool163 = trunc i8 %161 to i1, !dbg !6826
  br i1 %tobool163, label %if.end201, label %land.lhs.true164, !dbg !6827

land.lhs.true164:                                 ; preds = %if.then161
  %162 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6828
  %bits165 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %162, i32 0, i32 43, !dbg !6830
  %close166 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits165, i32 0, i32 0, !dbg !6831
  %163 = load i8, i8* %close166, align 1, !dbg !6831
  %tobool167 = trunc i8 %163 to i1, !dbg !6831
  br i1 %tobool167, label %if.end201, label %land.lhs.true168, !dbg !6832

land.lhs.true168:                                 ; preds = %land.lhs.true164
  %164 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6833
  %bits169 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %164, i32 0, i32 43, !dbg !6834
  %rewindaftersend = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits169, i32 0, i32 17, !dbg !6835
  %165 = load i8, i8* %rewindaftersend, align 1, !dbg !6835
  %tobool170 = trunc i8 %165 to i1, !dbg !6835
  br i1 %tobool170, label %if.end201, label %if.then171, !dbg !6836

if.then171:                                       ; preds = %land.lhs.true168
  %166 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6838
  %set172 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %166, i32 0, i32 13, !dbg !6840
  %httpreq173 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set172, i32 0, i32 71, !dbg !6841
  %167 = load i32, i32* %httpreq173, align 8, !dbg !6841
  switch i32 %167, label %sw.default199 [
    i32 4, label %sw.bb174
    i32 2, label %sw.bb174
    i32 3, label %sw.bb174
  ], !dbg !6842

sw.bb174:                                         ; preds = %if.then171, %if.then171, %if.then171
  %168 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6843
  %upload_done = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %168, i32 0, i32 32, !dbg !6846
  %169 = load i8, i8* %upload_done, align 8, !dbg !6846
  %tobool175 = trunc i8 %169 to i1, !dbg !6846
  br i1 %tobool175, label %if.end198, label %if.then176, !dbg !6847

if.then176:                                       ; preds = %sw.bb174
  %170 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6848
  %set177 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %170, i32 0, i32 13, !dbg !6851
  %http_keep_sending_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set177, i32 0, i32 96, !dbg !6852
  %171 = load i8, i8* %http_keep_sending_on_error, align 1, !dbg !6852
  %tobool178 = trunc i8 %171 to i1, !dbg !6852
  br i1 %tobool178, label %if.then179, label %if.else188, !dbg !6853

if.then179:                                       ; preds = %if.then176
  %172 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6854
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %172, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.77, i32 0, i32 0)), !dbg !6856
  %173 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6857
  %exp100180 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %173, i32 0, i32 23, !dbg !6859
  %174 = load i32, i32* %exp100180, align 8, !dbg !6859
  %cmp181 = icmp ugt i32 %174, 0, !dbg !6860
  br i1 %cmp181, label %if.then183, label %if.end187, !dbg !6861

if.then183:                                       ; preds = %if.then179
  %175 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6862
  %exp100184 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %175, i32 0, i32 23, !dbg !6864
  store i32 0, i32* %exp100184, align 8, !dbg !6865
  %176 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6866
  %keepon185 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %176, i32 0, i32 31, !dbg !6867
  %177 = load i32, i32* %keepon185, align 4, !dbg !6868
  %or186 = or i32 %177, 2, !dbg !6868
  store i32 %or186, i32* %keepon185, align 4, !dbg !6868
  br label %if.end187, !dbg !6869

if.end187:                                        ; preds = %if.then183, %if.then179
  br label %if.end197, !dbg !6870

if.else188:                                       ; preds = %if.then176
  %178 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6871
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %178, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.78, i32 0, i32 0)), !dbg !6873
  %179 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6874
  call void @Curl_conncontrol(%struct.connectdata* %179, i32 2), !dbg !6874
  %180 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6875
  %upload_done189 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %180, i32 0, i32 32, !dbg !6876
  store i8 1, i8* %upload_done189, align 8, !dbg !6877
  %181 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6878
  %keepon190 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %181, i32 0, i32 31, !dbg !6879
  %182 = load i32, i32* %keepon190, align 4, !dbg !6880
  %and191 = and i32 %182, -3, !dbg !6880
  store i32 %and191, i32* %keepon190, align 4, !dbg !6880
  %183 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6881
  %state192 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %183, i32 0, i32 17, !dbg !6883
  %expect100header = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state192, i32 0, i32 33, !dbg !6884
  %184 = load i8, i8* %expect100header, align 8, !dbg !6884
  %tobool193 = trunc i8 %184 to i1, !dbg !6884
  br i1 %tobool193, label %if.then194, label %if.end196, !dbg !6885

if.then194:                                       ; preds = %if.else188
  %185 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6886
  %exp100195 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %185, i32 0, i32 23, !dbg !6887
  store i32 3, i32* %exp100195, align 8, !dbg !6888
  br label %if.end196, !dbg !6886

if.end196:                                        ; preds = %if.then194, %if.else188
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.end187
  br label %if.end198, !dbg !6889

if.end198:                                        ; preds = %if.end197, %sw.bb174
  br label %sw.epilog200, !dbg !6890

sw.default199:                                    ; preds = %if.then171
  br label %sw.epilog200, !dbg !6891

sw.epilog200:                                     ; preds = %sw.default199, %if.end198
  br label %if.end201, !dbg !6892

if.end201:                                        ; preds = %sw.epilog200, %land.lhs.true168, %land.lhs.true164, %if.then161
  %186 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6893
  %bits202 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %186, i32 0, i32 43, !dbg !6895
  %rewindaftersend203 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits202, i32 0, i32 17, !dbg !6896
  %187 = load i8, i8* %rewindaftersend203, align 1, !dbg !6896
  %tobool204 = trunc i8 %187 to i1, !dbg !6896
  br i1 %tobool204, label %if.then205, label %if.end208, !dbg !6897

if.then205:                                       ; preds = %if.end201
  %188 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6898
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %188, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.79, i32 0, i32 0)), !dbg !6900
  %189 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6901
  %keepon206 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %189, i32 0, i32 31, !dbg !6902
  %190 = load i32, i32* %keepon206, align 4, !dbg !6903
  %or207 = or i32 %190, 2, !dbg !6903
  store i32 %or207, i32* %keepon206, align 4, !dbg !6903
  br label %if.end208, !dbg !6904

if.end208:                                        ; preds = %if.then205, %if.end201
  br label %if.end209, !dbg !6905

if.end209:                                        ; preds = %if.end208, %if.end157
  %191 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6906
  %header210 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %191, i32 0, i32 10, !dbg !6908
  %192 = load i8, i8* %header210, align 8, !dbg !6908
  %tobool211 = trunc i8 %192 to i1, !dbg !6908
  br i1 %tobool211, label %if.end247, label %if.then212, !dbg !6909

if.then212:                                       ; preds = %if.end209
  %193 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6910
  %set213 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %193, i32 0, i32 13, !dbg !6913
  %opt_no_body = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set213, i32 0, i32 103, !dbg !6914
  %194 = load i8, i8* %opt_no_body, align 8, !dbg !6914
  %tobool214 = trunc i8 %194 to i1, !dbg !6914
  br i1 %tobool214, label %if.then215, label %if.else216, !dbg !6915

if.then215:                                       ; preds = %if.then212
  %195 = load i8*, i8** %stop_reading.addr, align 8, !dbg !6916
  store i8 1, i8* %195, align 1, !dbg !6917
  br label %if.end222, !dbg !6918

if.else216:                                       ; preds = %if.then212
  %196 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6919
  %chunk217 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %196, i32 0, i32 39, !dbg !6922
  %197 = load i8, i8* %chunk217, align 8, !dbg !6922
  %tobool218 = trunc i8 %197 to i1, !dbg !6922
  br i1 %tobool218, label %if.then219, label %if.end221, !dbg !6923

if.then219:                                       ; preds = %if.else216
  %198 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6924
  %size220 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %198, i32 0, i32 0, !dbg !6925
  store i64 -1, i64* %size220, align 8, !dbg !6926
  %199 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6927
  %maxdownload = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %199, i32 0, i32 2, !dbg !6928
  store i64 -1, i64* %maxdownload, align 8, !dbg !6929
  br label %if.end221, !dbg !6927

if.end221:                                        ; preds = %if.then219, %if.else216
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then215
  %200 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6930
  %size223 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %200, i32 0, i32 0, !dbg !6932
  %201 = load i64, i64* %size223, align 8, !dbg !6932
  %cmp224 = icmp ne i64 -1, %201, !dbg !6933
  br i1 %cmp224, label %if.then226, label %if.end230, !dbg !6934

if.then226:                                       ; preds = %if.end222
  %202 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6935
  %203 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6937
  %size227 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %203, i32 0, i32 0, !dbg !6938
  %204 = load i64, i64* %size227, align 8, !dbg !6938
  call void @Curl_pgrsSetDownloadSize(%struct.Curl_easy* %202, i64 %204), !dbg !6939
  %205 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6940
  %size228 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %205, i32 0, i32 0, !dbg !6941
  %206 = load i64, i64* %size228, align 8, !dbg !6941
  %207 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6942
  %maxdownload229 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %207, i32 0, i32 2, !dbg !6943
  store i64 %206, i64* %maxdownload229, align 8, !dbg !6944
  br label %if.end230, !dbg !6945

if.end230:                                        ; preds = %if.then226, %if.end222
  %208 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6946
  %maxdownload231 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %208, i32 0, i32 2, !dbg !6948
  %209 = load i64, i64* %maxdownload231, align 8, !dbg !6948
  %cmp232 = icmp eq i64 0, %209, !dbg !6949
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !6950

if.then234:                                       ; preds = %if.end230
  %210 = load i8*, i8** %stop_reading.addr, align 8, !dbg !6951
  store i8 1, i8* %210, align 1, !dbg !6952
  br label %if.end235, !dbg !6953

if.end235:                                        ; preds = %if.then234, %if.end230
  %211 = load i8*, i8** %stop_reading.addr, align 8, !dbg !6954
  %212 = load i8, i8* %211, align 1, !dbg !6956
  %tobool236 = trunc i8 %212 to i1, !dbg !6956
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !6957

if.then237:                                       ; preds = %if.end235
  %213 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6958
  %keepon238 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %213, i32 0, i32 31, !dbg !6960
  %214 = load i32, i32* %keepon238, align 4, !dbg !6961
  %and239 = and i32 %214, -2, !dbg !6961
  store i32 %and239, i32* %keepon238, align 4, !dbg !6961
  br label %if.end240, !dbg !6962

if.end240:                                        ; preds = %if.then237, %if.end235
  %215 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6963
  %set241 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %215, i32 0, i32 13, !dbg !6965
  %verbose = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set241, i32 0, i32 106, !dbg !6966
  %216 = load i8, i8* %verbose, align 8, !dbg !6966
  %tobool242 = trunc i8 %216 to i1, !dbg !6966
  br i1 %tobool242, label %if.then243, label %if.end246, !dbg !6967

if.then243:                                       ; preds = %if.end240
  %217 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6968
  %218 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6969
  %str_start244 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %218, i32 0, i32 16, !dbg !6970
  %219 = load i8*, i8** %str_start244, align 8, !dbg !6970
  %220 = load i64, i64* %headerlen, align 8, !dbg !6971
  %221 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6972
  %call245 = call i32 @Curl_debug(%struct.Curl_easy* %217, i32 1, i8* %219, i64 %220, %struct.connectdata* %221), !dbg !6973
  br label %if.end246, !dbg !6973

if.end246:                                        ; preds = %if.then243, %if.end240
  br label %do.end898, !dbg !6974

if.end247:                                        ; preds = %if.end209
  %222 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6975
  %state248 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %222, i32 0, i32 17, !dbg !6976
  %headerbuff249 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state248, i32 0, i32 4, !dbg !6977
  %223 = load i8*, i8** %headerbuff249, align 8, !dbg !6977
  %224 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6978
  %hbufp250 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %224, i32 0, i32 13, !dbg !6979
  store i8* %223, i8** %hbufp250, align 8, !dbg !6980
  %225 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6981
  %hbuflen251 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %225, i32 0, i32 14, !dbg !6982
  store i64 0, i64* %hbuflen251, align 8, !dbg !6983
  br label %do.cond, !dbg !6984

if.end252:                                        ; preds = %lor.lhs.false
  %226 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !6985
  %headerline253 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %226, i32 0, i32 12, !dbg !6987
  %227 = load i32, i32* %headerline253, align 8, !dbg !6988
  %inc = add nsw i32 %227, 1, !dbg !6988
  store i32 %inc, i32* %headerline253, align 8, !dbg !6988
  %tobool254 = icmp ne i32 %227, 0, !dbg !6988
  br i1 %tobool254, label %if.end443, label %if.then255, !dbg !6989

if.then255:                                       ; preds = %if.end252
  call void @llvm.dbg.declare(metadata i32* %httpversion_major, metadata !6990, metadata !1950), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %rtspversion_major, metadata !6993, metadata !1950), !dbg !6994
  call void @llvm.dbg.declare(metadata i32* %nc, metadata !6995, metadata !1950), !dbg !6996
  store i32 0, i32* %nc, align 4, !dbg !6996
  %228 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6997
  %handler256 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %228, i32 0, i32 47, !dbg !6999
  %229 = load %struct.Curl_handler*, %struct.Curl_handler** %handler256, align 8, !dbg !6999
  %protocol257 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %229, i32 0, i32 15, !dbg !7000
  %230 = load i32, i32* %protocol257, align 8, !dbg !7000
  %and258 = and i32 %230, 3, !dbg !7001
  %tobool259 = icmp ne i32 %and258, 0, !dbg !7001
  br i1 %tobool259, label %if.then260, label %if.else309, !dbg !7002

if.then260:                                       ; preds = %if.then255
  %231 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7003
  %p261 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %231, i32 0, i32 18, !dbg !7003
  %232 = load i8*, i8** %p261, align 8, !dbg !7003
  %233 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7005
  %httpversion262 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %233, i32 0, i32 29, !dbg !7006
  %234 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7007
  %httpcode263 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %234, i32 0, i32 21, !dbg !7008
  %call264 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %232, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i32* %httpversion_major, i32* %httpversion262, i32* %httpcode263) #6, !dbg !7009
  store i32 %call264, i32* %nc, align 4, !dbg !7010
  %235 = load i32, i32* %nc, align 4, !dbg !7011
  %cmp265 = icmp eq i32 %235, 1, !dbg !7013
  br i1 %cmp265, label %land.lhs.true267, label %if.end278, !dbg !7014

land.lhs.true267:                                 ; preds = %if.then260
  %236 = load i32, i32* %httpversion_major, align 4, !dbg !7015
  %cmp268 = icmp eq i32 %236, 2, !dbg !7017
  br i1 %cmp268, label %land.lhs.true270, label %if.end278, !dbg !7018

land.lhs.true270:                                 ; preds = %land.lhs.true267
  %237 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7019
  %p271 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %237, i32 0, i32 18, !dbg !7019
  %238 = load i8*, i8** %p271, align 8, !dbg !7019
  %239 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7020
  %httpcode272 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %239, i32 0, i32 21, !dbg !7021
  %call273 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %238, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i32 0, i32 0), i32* %httpcode272) #6, !dbg !7022
  %cmp274 = icmp eq i32 1, %call273, !dbg !7023
  br i1 %cmp274, label %if.then276, label %if.end278, !dbg !7024

if.then276:                                       ; preds = %land.lhs.true270
  %240 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7026
  %httpversion277 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %240, i32 0, i32 29, !dbg !7028
  store i32 0, i32* %httpversion277, align 8, !dbg !7029
  store i32 3, i32* %nc, align 4, !dbg !7030
  br label %if.end278, !dbg !7031

if.end278:                                        ; preds = %if.then276, %land.lhs.true270, %land.lhs.true267, %if.then260
  %241 = load i32, i32* %nc, align 4, !dbg !7032
  %cmp279 = icmp eq i32 %241, 3, !dbg !7034
  br i1 %cmp279, label %if.then281, label %if.else294, !dbg !7035

if.then281:                                       ; preds = %if.end278
  %242 = load i32, i32* %httpversion_major, align 4, !dbg !7036
  %mul = mul nsw i32 10, %242, !dbg !7038
  %243 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7039
  %httpversion282 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %243, i32 0, i32 29, !dbg !7040
  %244 = load i32, i32* %httpversion282, align 8, !dbg !7041
  %add283 = add nsw i32 %244, %mul, !dbg !7041
  store i32 %add283, i32* %httpversion282, align 8, !dbg !7041
  %245 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7042
  %upgr101284 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %245, i32 0, i32 24, !dbg !7044
  %246 = load i32, i32* %upgr101284, align 4, !dbg !7044
  %cmp285 = icmp eq i32 %246, 2, !dbg !7045
  br i1 %cmp285, label %if.then287, label %if.end293, !dbg !7046

if.then287:                                       ; preds = %if.then281
  %247 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7047
  %httpversion288 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %247, i32 0, i32 29, !dbg !7050
  %248 = load i32, i32* %httpversion288, align 8, !dbg !7050
  %cmp289 = icmp ne i32 %248, 20, !dbg !7051
  br i1 %cmp289, label %if.then291, label %if.end292, !dbg !7052

if.then291:                                       ; preds = %if.then287
  %249 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7053
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %249, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.82, i32 0, i32 0)), !dbg !7054
  br label %if.end292, !dbg !7054

if.end292:                                        ; preds = %if.then291, %if.then287
  br label %if.end293, !dbg !7055

if.end293:                                        ; preds = %if.end292, %if.then281
  br label %if.end308, !dbg !7056

if.else294:                                       ; preds = %if.end278
  %250 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7057
  %p295 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %250, i32 0, i32 18, !dbg !7057
  %251 = load i8*, i8** %p295, align 8, !dbg !7057
  %252 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7059
  %httpcode296 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %252, i32 0, i32 21, !dbg !7060
  %call297 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %251, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i32 0, i32 0), i32* %httpcode296) #6, !dbg !7061
  store i32 %call297, i32* %nc, align 4, !dbg !7062
  %253 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7063
  %httpversion298 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %253, i32 0, i32 29, !dbg !7064
  store i32 10, i32* %httpversion298, align 8, !dbg !7065
  %254 = load i32, i32* %nc, align 4, !dbg !7066
  %tobool299 = icmp ne i32 %254, 0, !dbg !7066
  br i1 %tobool299, label %if.end307, label %if.then300, !dbg !7068

if.then300:                                       ; preds = %if.else294
  %255 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7069
  %256 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7072
  %p301 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %256, i32 0, i32 18, !dbg !7073
  %257 = load i8*, i8** %p301, align 8, !dbg !7073
  %call302 = call zeroext i1 @checkhttpprefix(%struct.Curl_easy* %255, i8* %257), !dbg !7074
  br i1 %call302, label %if.then303, label %if.end306, !dbg !7075

if.then303:                                       ; preds = %if.then300
  store i32 1, i32* %nc, align 4, !dbg !7076
  %258 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7078
  %httpcode304 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %258, i32 0, i32 21, !dbg !7079
  store i32 200, i32* %httpcode304, align 8, !dbg !7080
  %259 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7081
  %httpversion305 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %259, i32 0, i32 29, !dbg !7082
  store i32 10, i32* %httpversion305, align 8, !dbg !7083
  br label %if.end306, !dbg !7084

if.end306:                                        ; preds = %if.then303, %if.then300
  br label %if.end307, !dbg !7085

if.end307:                                        ; preds = %if.end306, %if.else294
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end293
  br label %if.end328, !dbg !7086

if.else309:                                       ; preds = %if.then255
  %260 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7087
  %handler310 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %260, i32 0, i32 47, !dbg !7089
  %261 = load %struct.Curl_handler*, %struct.Curl_handler** %handler310, align 8, !dbg !7089
  %protocol311 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %261, i32 0, i32 15, !dbg !7090
  %262 = load i32, i32* %protocol311, align 8, !dbg !7090
  %and312 = and i32 %262, 262144, !dbg !7091
  %tobool313 = icmp ne i32 %and312, 0, !dbg !7091
  br i1 %tobool313, label %if.then314, label %if.end327, !dbg !7092

if.then314:                                       ; preds = %if.else309
  %263 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7093
  %p315 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %263, i32 0, i32 18, !dbg !7093
  %264 = load i8*, i8** %p315, align 8, !dbg !7093
  %265 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7095
  %rtspversion = getelementptr inbounds %struct.connectdata, %struct.connectdata* %265, i32 0, i32 30, !dbg !7096
  %266 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7097
  %httpcode316 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %266, i32 0, i32 21, !dbg !7098
  %call317 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %264, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), i32* %rtspversion_major, i32* %rtspversion, i32* %httpcode316) #6, !dbg !7099
  store i32 %call317, i32* %nc, align 4, !dbg !7100
  %267 = load i32, i32* %nc, align 4, !dbg !7101
  %cmp318 = icmp eq i32 %267, 3, !dbg !7103
  br i1 %cmp318, label %if.then320, label %if.else325, !dbg !7104

if.then320:                                       ; preds = %if.then314
  %268 = load i32, i32* %rtspversion_major, align 4, !dbg !7105
  %mul321 = mul nsw i32 10, %268, !dbg !7107
  %269 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7108
  %rtspversion322 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %269, i32 0, i32 30, !dbg !7109
  %270 = load i32, i32* %rtspversion322, align 4, !dbg !7110
  %add323 = add nsw i32 %270, %mul321, !dbg !7110
  store i32 %add323, i32* %rtspversion322, align 4, !dbg !7110
  %271 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7111
  %httpversion324 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %271, i32 0, i32 29, !dbg !7112
  store i32 11, i32* %httpversion324, align 8, !dbg !7113
  br label %if.end326, !dbg !7114

if.else325:                                       ; preds = %if.then314
  store i32 0, i32* %nc, align 4, !dbg !7115
  br label %if.end326

if.end326:                                        ; preds = %if.else325, %if.then320
  br label %if.end327, !dbg !7117

if.end327:                                        ; preds = %if.end326, %if.else309
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end308
  %272 = load i32, i32* %nc, align 4, !dbg !7118
  %tobool329 = icmp ne i32 %272, 0, !dbg !7118
  br i1 %tobool329, label %if.then330, label %if.else440, !dbg !7120

if.then330:                                       ; preds = %if.end328
  %273 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7121
  %httpcode331 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %273, i32 0, i32 21, !dbg !7123
  %274 = load i32, i32* %httpcode331, align 8, !dbg !7123
  %275 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7124
  %info332 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %275, i32 0, i32 19, !dbg !7125
  %httpcode333 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info332, i32 0, i32 0, !dbg !7126
  store i32 %274, i32* %httpcode333, align 8, !dbg !7127
  %276 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7128
  %httpversion334 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %276, i32 0, i32 29, !dbg !7129
  %277 = load i32, i32* %httpversion334, align 8, !dbg !7129
  %278 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7130
  %info335 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %278, i32 0, i32 19, !dbg !7131
  %httpversion336 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info335, i32 0, i32 2, !dbg !7132
  store i32 %277, i32* %httpversion336, align 8, !dbg !7133
  %279 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7134
  %state337 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %279, i32 0, i32 17, !dbg !7136
  %httpversion338 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state337, i32 0, i32 32, !dbg !7137
  %280 = load i32, i32* %httpversion338, align 4, !dbg !7137
  %tobool339 = icmp ne i32 %280, 0, !dbg !7134
  br i1 %tobool339, label %lor.lhs.false340, label %if.then346, !dbg !7138

lor.lhs.false340:                                 ; preds = %if.then330
  %281 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7139
  %state341 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %281, i32 0, i32 17, !dbg !7140
  %httpversion342 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state341, i32 0, i32 32, !dbg !7141
  %282 = load i32, i32* %httpversion342, align 4, !dbg !7141
  %283 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7142
  %httpversion343 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %283, i32 0, i32 29, !dbg !7143
  %284 = load i32, i32* %httpversion343, align 8, !dbg !7143
  %cmp344 = icmp sgt i32 %282, %284, !dbg !7144
  br i1 %cmp344, label %if.then346, label %if.end350, !dbg !7145

if.then346:                                       ; preds = %lor.lhs.false340, %if.then330
  %285 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7147
  %httpversion347 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %285, i32 0, i32 29, !dbg !7148
  %286 = load i32, i32* %httpversion347, align 8, !dbg !7148
  %287 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7149
  %state348 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %287, i32 0, i32 17, !dbg !7150
  %httpversion349 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state348, i32 0, i32 32, !dbg !7151
  store i32 %286, i32* %httpversion349, align 4, !dbg !7152
  br label %if.end350, !dbg !7149

if.end350:                                        ; preds = %if.then346, %lor.lhs.false340
  %288 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7153
  %set351 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %288, i32 0, i32 13, !dbg !7155
  %http_fail_on_error = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set351, i32 0, i32 95, !dbg !7156
  %289 = load i8, i8* %http_fail_on_error, align 8, !dbg !7156
  %tobool352 = trunc i8 %289 to i1, !dbg !7156
  br i1 %tobool352, label %land.lhs.true354, label %if.end387, !dbg !7157

land.lhs.true354:                                 ; preds = %if.end350
  %290 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7158
  %httpcode355 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %290, i32 0, i32 21, !dbg !7160
  %291 = load i32, i32* %httpcode355, align 8, !dbg !7160
  %cmp356 = icmp sge i32 %291, 400, !dbg !7161
  br i1 %cmp356, label %land.lhs.true358, label %if.end387, !dbg !7162

land.lhs.true358:                                 ; preds = %land.lhs.true354
  %292 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7163
  %httpcode359 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %292, i32 0, i32 21, !dbg !7164
  %293 = load i32, i32* %httpcode359, align 8, !dbg !7164
  %cmp360 = icmp ne i32 %293, 401, !dbg !7165
  br i1 %cmp360, label %land.lhs.true365, label %lor.lhs.false362, !dbg !7166

lor.lhs.false362:                                 ; preds = %land.lhs.true358
  %294 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7167
  %bits363 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %294, i32 0, i32 43, !dbg !7168
  %user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits363, i32 0, i32 7, !dbg !7169
  %295 = load i8, i8* %user_passwd, align 1, !dbg !7169
  %tobool364 = trunc i8 %295 to i1, !dbg !7169
  br i1 %tobool364, label %if.end387, label %land.lhs.true365, !dbg !7170

land.lhs.true365:                                 ; preds = %lor.lhs.false362, %land.lhs.true358
  %296 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7171
  %httpcode366 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %296, i32 0, i32 21, !dbg !7172
  %297 = load i32, i32* %httpcode366, align 8, !dbg !7172
  %cmp367 = icmp ne i32 %297, 407, !dbg !7173
  br i1 %cmp367, label %if.then372, label %lor.lhs.false369, !dbg !7174

lor.lhs.false369:                                 ; preds = %land.lhs.true365
  %298 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7175
  %bits370 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %298, i32 0, i32 43, !dbg !7176
  %proxy_user_passwd = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits370, i32 0, i32 8, !dbg !7177
  %299 = load i8, i8* %proxy_user_passwd, align 1, !dbg !7177
  %tobool371 = trunc i8 %299 to i1, !dbg !7177
  br i1 %tobool371, label %if.end387, label %if.then372, !dbg !7178

if.then372:                                       ; preds = %lor.lhs.false369, %land.lhs.true365
  %300 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7180
  %state373 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %300, i32 0, i32 17, !dbg !7183
  %resume_from = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state373, i32 0, i32 43, !dbg !7184
  %301 = load i64, i64* %resume_from, align 8, !dbg !7184
  %tobool374 = icmp ne i64 %301, 0, !dbg !7180
  br i1 %tobool374, label %land.lhs.true375, label %if.else385, !dbg !7185

land.lhs.true375:                                 ; preds = %if.then372
  %302 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7186
  %set376 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %302, i32 0, i32 13, !dbg !7187
  %httpreq377 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set376, i32 0, i32 71, !dbg !7188
  %303 = load i32, i32* %httpreq377, align 8, !dbg !7188
  %cmp378 = icmp eq i32 %303, 1, !dbg !7189
  br i1 %cmp378, label %land.lhs.true380, label %if.else385, !dbg !7190

land.lhs.true380:                                 ; preds = %land.lhs.true375
  %304 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7191
  %httpcode381 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %304, i32 0, i32 21, !dbg !7192
  %305 = load i32, i32* %httpcode381, align 8, !dbg !7192
  %cmp382 = icmp eq i32 %305, 416, !dbg !7193
  br i1 %cmp382, label %if.then384, label %if.else385, !dbg !7194

if.then384:                                       ; preds = %land.lhs.true380
  br label %if.end386, !dbg !7196

if.else385:                                       ; preds = %land.lhs.true380, %land.lhs.true375, %if.then372
  %306 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7198
  call void @print_http_error(%struct.Curl_easy* %306), !dbg !7200
  store i32 22, i32* %retval, align 4, !dbg !7201
  br label %return, !dbg !7201

if.end386:                                        ; preds = %if.then384
  br label %if.end387, !dbg !7202

if.end387:                                        ; preds = %if.end386, %lor.lhs.false369, %lor.lhs.false362, %land.lhs.true354, %if.end350
  %307 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7203
  %httpversion388 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %307, i32 0, i32 29, !dbg !7205
  %308 = load i32, i32* %httpversion388, align 8, !dbg !7205
  %cmp389 = icmp eq i32 %308, 10, !dbg !7206
  br i1 %cmp389, label %if.then391, label %if.else392, !dbg !7207

if.then391:                                       ; preds = %if.end387
  %309 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7208
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %309, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85, i32 0, i32 0)), !dbg !7210
  %310 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7211
  call void @Curl_conncontrol(%struct.connectdata* %310, i32 1), !dbg !7211
  br label %if.end428, !dbg !7212

if.else392:                                       ; preds = %if.end387
  %311 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7213
  %httpversion393 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %311, i32 0, i32 29, !dbg !7215
  %312 = load i32, i32* %httpversion393, align 8, !dbg !7215
  %cmp394 = icmp eq i32 %312, 20, !dbg !7216
  br i1 %cmp394, label %if.then404, label %lor.lhs.false396, !dbg !7217

lor.lhs.false396:                                 ; preds = %if.else392
  %313 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7218
  %upgr101397 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %313, i32 0, i32 24, !dbg !7219
  %314 = load i32, i32* %upgr101397, align 4, !dbg !7219
  %cmp398 = icmp eq i32 %314, 1, !dbg !7220
  br i1 %cmp398, label %land.lhs.true400, label %if.else406, !dbg !7221

land.lhs.true400:                                 ; preds = %lor.lhs.false396
  %315 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7222
  %httpcode401 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %315, i32 0, i32 21, !dbg !7224
  %316 = load i32, i32* %httpcode401, align 8, !dbg !7224
  %cmp402 = icmp eq i32 %316, 101, !dbg !7225
  br i1 %cmp402, label %if.then404, label %if.else406, !dbg !7226

if.then404:                                       ; preds = %land.lhs.true400, %if.else392
  br label %do.body405, !dbg !7228

do.body405:                                       ; preds = %if.then404
  br label %do.end, !dbg !7230

do.end:                                           ; preds = %do.body405
  %317 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7233
  %bundle = getelementptr inbounds %struct.connectdata, %struct.connectdata* %317, i32 0, i32 73, !dbg !7234
  %318 = load %struct.connectbundle*, %struct.connectbundle** %bundle, align 8, !dbg !7234
  %multiuse = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %318, i32 0, i32 0, !dbg !7235
  store i32 2, i32* %multiuse, align 8, !dbg !7236
  br label %if.end427, !dbg !7237

if.else406:                                       ; preds = %land.lhs.true400, %lor.lhs.false396
  %319 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7238
  %httpversion407 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %319, i32 0, i32 29, !dbg !7240
  %320 = load i32, i32* %httpversion407, align 8, !dbg !7240
  %cmp408 = icmp sge i32 %320, 11, !dbg !7241
  br i1 %cmp408, label %land.lhs.true410, label %if.end426, !dbg !7242

land.lhs.true410:                                 ; preds = %if.else406
  %321 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7243
  %bits411 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %321, i32 0, i32 43, !dbg !7244
  %close412 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits411, i32 0, i32 0, !dbg !7245
  %322 = load i8, i8* %close412, align 1, !dbg !7245
  %tobool413 = trunc i8 %322 to i1, !dbg !7245
  br i1 %tobool413, label %if.end426, label %if.then414, !dbg !7246

if.then414:                                       ; preds = %land.lhs.true410
  br label %do.body415, !dbg !7247

do.body415:                                       ; preds = %if.then414
  br label %do.end416, !dbg !7249

do.end416:                                        ; preds = %do.body415
  %323 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7252
  %bundle417 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %323, i32 0, i32 73, !dbg !7254
  %324 = load %struct.connectbundle*, %struct.connectbundle** %bundle417, align 8, !dbg !7254
  %tobool418 = icmp ne %struct.connectbundle* %324, null, !dbg !7252
  br i1 %tobool418, label %if.then419, label %if.end425, !dbg !7255

if.then419:                                       ; preds = %do.end416
  %325 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7256
  %326 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7259
  %call420 = call zeroext i1 @Curl_pipeline_site_blacklisted(%struct.Curl_easy* %325, %struct.connectdata* %326), !dbg !7260
  br i1 %call420, label %if.end424, label %if.then421, !dbg !7261

if.then421:                                       ; preds = %if.then419
  %327 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7262
  %bundle422 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %327, i32 0, i32 73, !dbg !7263
  %328 = load %struct.connectbundle*, %struct.connectbundle** %bundle422, align 8, !dbg !7263
  %multiuse423 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %328, i32 0, i32 0, !dbg !7264
  store i32 1, i32* %multiuse423, align 8, !dbg !7265
  br label %if.end424, !dbg !7262

if.end424:                                        ; preds = %if.then421, %if.then419
  br label %if.end425, !dbg !7266

if.end425:                                        ; preds = %if.end424, %do.end416
  br label %if.end426, !dbg !7267

if.end426:                                        ; preds = %if.end425, %land.lhs.true410, %if.else406
  br label %if.end427

if.end427:                                        ; preds = %if.end426, %do.end
  br label %if.end428

if.end428:                                        ; preds = %if.end427, %if.then391
  %329 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7268
  %httpcode429 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %329, i32 0, i32 21, !dbg !7269
  %330 = load i32, i32* %httpcode429, align 8, !dbg !7269
  switch i32 %330, label %sw.default438 [
    i32 204, label %sw.bb430
    i32 304, label %sw.bb430
  ], !dbg !7270

sw.bb430:                                         ; preds = %if.end428, %if.end428
  %331 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7271
  %set431 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %331, i32 0, i32 13, !dbg !7274
  %timecondition = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set431, i32 0, i32 69, !dbg !7275
  %332 = load i32, i32* %timecondition, align 8, !dbg !7275
  %tobool432 = icmp ne i32 %332, 0, !dbg !7271
  br i1 %tobool432, label %if.then433, label %if.end435, !dbg !7276

if.then433:                                       ; preds = %sw.bb430
  %333 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7277
  %info434 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %333, i32 0, i32 19, !dbg !7278
  %timecond = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info434, i32 0, i32 4, !dbg !7279
  store i8 1, i8* %timecond, align 8, !dbg !7280
  br label %if.end435, !dbg !7277

if.end435:                                        ; preds = %if.then433, %sw.bb430
  %334 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7281
  %size436 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %334, i32 0, i32 0, !dbg !7282
  store i64 0, i64* %size436, align 8, !dbg !7283
  %335 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7284
  %maxdownload437 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %335, i32 0, i32 2, !dbg !7285
  store i64 0, i64* %maxdownload437, align 8, !dbg !7286
  %336 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7287
  %ignorecl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %336, i32 0, i32 34, !dbg !7288
  store i8 1, i8* %ignorecl, align 2, !dbg !7289
  br label %sw.epilog439, !dbg !7290

sw.default438:                                    ; preds = %if.end428
  br label %sw.epilog439, !dbg !7291

sw.epilog439:                                     ; preds = %sw.default438, %if.end435
  br label %if.end442, !dbg !7292

if.else440:                                       ; preds = %if.end328
  %337 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7293
  %header441 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %337, i32 0, i32 10, !dbg !7295
  store i8 0, i8* %header441, align 8, !dbg !7296
  br label %do.end898, !dbg !7297

if.end442:                                        ; preds = %sw.epilog439
  br label %if.end443, !dbg !7298

if.end443:                                        ; preds = %if.end442, %if.end252
  %338 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7299
  store i32 0, i32* %result, align 4, !dbg !7300
  %339 = load i32, i32* %result, align 4, !dbg !7301
  %tobool444 = icmp ne i32 %339, 0, !dbg !7301
  br i1 %tobool444, label %if.then445, label %if.end446, !dbg !7303

if.then445:                                       ; preds = %if.end443
  %340 = load i32, i32* %result, align 4, !dbg !7304
  store i32 %340, i32* %retval, align 4, !dbg !7305
  br label %return, !dbg !7305

if.end446:                                        ; preds = %if.end443
  %341 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7306
  %ignorecl447 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %341, i32 0, i32 34, !dbg !7308
  %342 = load i8, i8* %ignorecl447, align 2, !dbg !7308
  %tobool448 = trunc i8 %342 to i1, !dbg !7308
  br i1 %tobool448, label %if.else479, label %land.lhs.true449, !dbg !7309

land.lhs.true449:                                 ; preds = %if.end446
  %343 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7310
  %set450 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %343, i32 0, i32 13, !dbg !7312
  %ignorecl451 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set450, i32 0, i32 119, !dbg !7313
  %344 = load i8, i8* %ignorecl451, align 1, !dbg !7313
  %tobool452 = trunc i8 %344 to i1, !dbg !7313
  br i1 %tobool452, label %if.else479, label %land.lhs.true453, !dbg !7314

land.lhs.true453:                                 ; preds = %land.lhs.true449
  %345 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7315
  %p454 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %345, i32 0, i32 18, !dbg !7315
  %346 = load i8*, i8** %p454, align 8, !dbg !7315
  %call455 = call i32 @curl_strnequal(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* %346, i64 15), !dbg !7315
  %tobool456 = icmp ne i32 %call455, 0, !dbg !7315
  br i1 %tobool456, label %if.then457, label %if.else479, !dbg !7316

if.then457:                                       ; preds = %land.lhs.true453
  call void @llvm.dbg.declare(metadata i64* %contentlength, metadata !7318, metadata !1950), !dbg !7320
  %347 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7321
  %p458 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %347, i32 0, i32 18, !dbg !7322
  %348 = load i8*, i8** %p458, align 8, !dbg !7322
  %add.ptr459 = getelementptr inbounds i8, i8* %348, i64 15, !dbg !7323
  %call460 = call i64 @strtol(i8* %add.ptr459, i8** null, i32 10) #6, !dbg !7324
  store i64 %call460, i64* %contentlength, align 8, !dbg !7320
  %349 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7325
  %set461 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %349, i32 0, i32 13, !dbg !7327
  %max_filesize = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set461, i32 0, i32 82, !dbg !7328
  %350 = load i64, i64* %max_filesize, align 8, !dbg !7328
  %tobool462 = icmp ne i64 %350, 0, !dbg !7325
  br i1 %tobool462, label %land.lhs.true463, label %if.end469, !dbg !7329

land.lhs.true463:                                 ; preds = %if.then457
  %351 = load i64, i64* %contentlength, align 8, !dbg !7330
  %352 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7331
  %set464 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %352, i32 0, i32 13, !dbg !7332
  %max_filesize465 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set464, i32 0, i32 82, !dbg !7333
  %353 = load i64, i64* %max_filesize465, align 8, !dbg !7333
  %cmp466 = icmp sgt i64 %351, %353, !dbg !7334
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !7335

if.then468:                                       ; preds = %land.lhs.true463
  %354 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7337
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %354, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86, i32 0, i32 0)), !dbg !7339
  store i32 63, i32* %retval, align 4, !dbg !7340
  br label %return, !dbg !7340

if.end469:                                        ; preds = %land.lhs.true463, %if.then457
  %355 = load i64, i64* %contentlength, align 8, !dbg !7341
  %cmp470 = icmp sge i64 %355, 0, !dbg !7343
  br i1 %cmp470, label %if.then472, label %if.else477, !dbg !7344

if.then472:                                       ; preds = %if.end469
  %356 = load i64, i64* %contentlength, align 8, !dbg !7345
  %357 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7347
  %size473 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %357, i32 0, i32 0, !dbg !7348
  store i64 %356, i64* %size473, align 8, !dbg !7349
  %358 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7350
  %size474 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %358, i32 0, i32 0, !dbg !7351
  %359 = load i64, i64* %size474, align 8, !dbg !7351
  %360 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7352
  %maxdownload475 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %360, i32 0, i32 2, !dbg !7353
  store i64 %359, i64* %maxdownload475, align 8, !dbg !7354
  %361 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7355
  %362 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7356
  %size476 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %362, i32 0, i32 0, !dbg !7357
  %363 = load i64, i64* %size476, align 8, !dbg !7357
  call void @Curl_pgrsSetDownloadSize(%struct.Curl_easy* %361, i64 %363), !dbg !7358
  br label %if.end478, !dbg !7359

if.else477:                                       ; preds = %if.end469
  %364 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7360
  call void @Curl_conncontrol(%struct.connectdata* %364, i32 2), !dbg !7360
  %365 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7362
  %366 = load i64, i64* %contentlength, align 8, !dbg !7363
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %365, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.87, i32 0, i32 0), i64 %366), !dbg !7364
  br label %if.end478

if.end478:                                        ; preds = %if.else477, %if.then472
  br label %if.end863, !dbg !7365

if.else479:                                       ; preds = %land.lhs.true453, %land.lhs.true449, %if.end446
  %367 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7366
  %p480 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %367, i32 0, i32 18, !dbg !7366
  %368 = load i8*, i8** %p480, align 8, !dbg !7366
  %call481 = call i32 @curl_strnequal(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* %368, i64 13), !dbg !7366
  %tobool482 = icmp ne i32 %call481, 0, !dbg !7366
  br i1 %tobool482, label %if.then483, label %if.else501, !dbg !7368

if.then483:                                       ; preds = %if.else479
  call void @llvm.dbg.declare(metadata i8** %contenttype, metadata !7369, metadata !1950), !dbg !7371
  %369 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7372
  %p484 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %369, i32 0, i32 18, !dbg !7373
  %370 = load i8*, i8** %p484, align 8, !dbg !7373
  %call485 = call i8* @Curl_copy_header_value(i8* %370), !dbg !7374
  store i8* %call485, i8** %contenttype, align 8, !dbg !7371
  %371 = load i8*, i8** %contenttype, align 8, !dbg !7375
  %tobool486 = icmp ne i8* %371, null, !dbg !7375
  br i1 %tobool486, label %if.end488, label %if.then487, !dbg !7377

if.then487:                                       ; preds = %if.then483
  store i32 27, i32* %retval, align 4, !dbg !7378
  br label %return, !dbg !7378

if.end488:                                        ; preds = %if.then483
  %372 = load i8*, i8** %contenttype, align 8, !dbg !7379
  %373 = load i8, i8* %372, align 1, !dbg !7381
  %tobool489 = icmp ne i8 %373, 0, !dbg !7381
  br i1 %tobool489, label %if.else491, label %if.then490, !dbg !7382

if.then490:                                       ; preds = %if.end488
  %374 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7383
  %375 = load i8*, i8** %contenttype, align 8, !dbg !7383
  call void %374(i8* %375), !dbg !7383
  br label %if.end500, !dbg !7383

if.else491:                                       ; preds = %if.end488
  br label %do.body492, !dbg !7384

do.body492:                                       ; preds = %if.else491
  %376 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7386
  %377 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7386
  %info493 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %377, i32 0, i32 19, !dbg !7386
  %contenttype494 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info493, i32 0, i32 10, !dbg !7386
  %378 = load i8*, i8** %contenttype494, align 8, !dbg !7386
  call void %376(i8* %378), !dbg !7386
  %379 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7386
  %info495 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %379, i32 0, i32 19, !dbg !7386
  %contenttype496 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info495, i32 0, i32 10, !dbg !7386
  store i8* null, i8** %contenttype496, align 8, !dbg !7386
  br label %do.end497, !dbg !7386

do.end497:                                        ; preds = %do.body492
  %380 = load i8*, i8** %contenttype, align 8, !dbg !7389
  %381 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7390
  %info498 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %381, i32 0, i32 19, !dbg !7391
  %contenttype499 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info498, i32 0, i32 10, !dbg !7392
  store i8* %380, i8** %contenttype499, align 8, !dbg !7393
  br label %if.end500

if.end500:                                        ; preds = %do.end497, %if.then490
  br label %if.end862, !dbg !7394

if.else501:                                       ; preds = %if.else479
  %382 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7395
  %p502 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %382, i32 0, i32 18, !dbg !7395
  %383 = load i8*, i8** %p502, align 8, !dbg !7395
  %call503 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), i8* %383, i64 7), !dbg !7395
  %tobool504 = icmp ne i32 %call503, 0, !dbg !7395
  br i1 %tobool504, label %if.then505, label %if.else527, !dbg !7397

if.then505:                                       ; preds = %if.else501
  %384 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7398
  %httpversion506 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %384, i32 0, i32 29, !dbg !7401
  %385 = load i32, i32* %httpversion506, align 8, !dbg !7401
  %cmp507 = icmp slt i32 %385, 20, !dbg !7402
  br i1 %cmp507, label %if.then509, label %if.end526, !dbg !7403

if.then509:                                       ; preds = %if.then505
  call void @llvm.dbg.declare(metadata i8** %server_name, metadata !7404, metadata !1950), !dbg !7406
  %386 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7407
  %p510 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %386, i32 0, i32 18, !dbg !7408
  %387 = load i8*, i8** %p510, align 8, !dbg !7408
  %call511 = call i8* @Curl_copy_header_value(i8* %387), !dbg !7409
  store i8* %call511, i8** %server_name, align 8, !dbg !7406
  %388 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7410
  %bundle512 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %388, i32 0, i32 73, !dbg !7412
  %389 = load %struct.connectbundle*, %struct.connectbundle** %bundle512, align 8, !dbg !7412
  %tobool513 = icmp ne %struct.connectbundle* %389, null, !dbg !7410
  br i1 %tobool513, label %land.lhs.true514, label %if.end525, !dbg !7413

land.lhs.true514:                                 ; preds = %if.then509
  %390 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7414
  %bundle515 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %390, i32 0, i32 73, !dbg !7416
  %391 = load %struct.connectbundle*, %struct.connectbundle** %bundle515, align 8, !dbg !7416
  %multiuse516 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %391, i32 0, i32 0, !dbg !7417
  %392 = load i32, i32* %multiuse516, align 8, !dbg !7417
  %cmp517 = icmp eq i32 %392, 1, !dbg !7418
  br i1 %cmp517, label %if.then519, label %if.end525, !dbg !7419

if.then519:                                       ; preds = %land.lhs.true514
  %393 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7420
  %394 = load i8*, i8** %server_name, align 8, !dbg !7423
  %call520 = call zeroext i1 @Curl_pipeline_server_blacklisted(%struct.Curl_easy* %393, i8* %394), !dbg !7424
  br i1 %call520, label %if.then521, label %if.end524, !dbg !7425

if.then521:                                       ; preds = %if.then519
  %395 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7426
  %bundle522 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %395, i32 0, i32 73, !dbg !7427
  %396 = load %struct.connectbundle*, %struct.connectbundle** %bundle522, align 8, !dbg !7427
  %multiuse523 = getelementptr inbounds %struct.connectbundle, %struct.connectbundle* %396, i32 0, i32 0, !dbg !7428
  store i32 -1, i32* %multiuse523, align 8, !dbg !7429
  br label %if.end524, !dbg !7426

if.end524:                                        ; preds = %if.then521, %if.then519
  br label %if.end525, !dbg !7430

if.end525:                                        ; preds = %if.end524, %land.lhs.true514, %if.then509
  %397 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7431
  %398 = load i8*, i8** %server_name, align 8, !dbg !7431
  call void %397(i8* %398), !dbg !7431
  br label %if.end526, !dbg !7432

if.end526:                                        ; preds = %if.end525, %if.then505
  br label %if.end861, !dbg !7433

if.else527:                                       ; preds = %if.else501
  %399 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7434
  %httpversion528 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %399, i32 0, i32 29, !dbg !7436
  %400 = load i32, i32* %httpversion528, align 8, !dbg !7436
  %cmp529 = icmp eq i32 %400, 10, !dbg !7437
  br i1 %cmp529, label %land.lhs.true531, label %if.else540, !dbg !7438

land.lhs.true531:                                 ; preds = %if.else527
  %401 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7439
  %bits532 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %401, i32 0, i32 43, !dbg !7440
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits532, i32 0, i32 5, !dbg !7441
  %402 = load i8, i8* %httpproxy, align 1, !dbg !7441
  %tobool533 = trunc i8 %402 to i1, !dbg !7441
  br i1 %tobool533, label %land.lhs.true535, label %if.else540, !dbg !7442

land.lhs.true535:                                 ; preds = %land.lhs.true531
  %403 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7443
  %p536 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %403, i32 0, i32 18, !dbg !7444
  %404 = load i8*, i8** %p536, align 8, !dbg !7444
  %call537 = call zeroext i1 @Curl_compareheader(i8* %404, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i32 0, i32 0)), !dbg !7445
  br i1 %call537, label %if.then539, label %if.else540, !dbg !7446

if.then539:                                       ; preds = %land.lhs.true535
  %405 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7448
  call void @Curl_conncontrol(%struct.connectdata* %405, i32 0), !dbg !7448
  %406 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7450
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %406, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.90, i32 0, i32 0)), !dbg !7451
  br label %if.end860, !dbg !7452

if.else540:                                       ; preds = %land.lhs.true535, %land.lhs.true531, %if.else527
  %407 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7453
  %httpversion541 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %407, i32 0, i32 29, !dbg !7455
  %408 = load i32, i32* %httpversion541, align 8, !dbg !7455
  %cmp542 = icmp eq i32 %408, 11, !dbg !7456
  br i1 %cmp542, label %land.lhs.true544, label %if.else554, !dbg !7457

land.lhs.true544:                                 ; preds = %if.else540
  %409 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7458
  %bits545 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %409, i32 0, i32 43, !dbg !7459
  %httpproxy546 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits545, i32 0, i32 5, !dbg !7460
  %410 = load i8, i8* %httpproxy546, align 1, !dbg !7460
  %tobool547 = trunc i8 %410 to i1, !dbg !7460
  br i1 %tobool547, label %land.lhs.true549, label %if.else554, !dbg !7461

land.lhs.true549:                                 ; preds = %land.lhs.true544
  %411 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7462
  %p550 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %411, i32 0, i32 18, !dbg !7463
  %412 = load i8*, i8** %p550, align 8, !dbg !7463
  %call551 = call zeroext i1 @Curl_compareheader(i8* %412, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0)), !dbg !7464
  br i1 %call551, label %if.then553, label %if.else554, !dbg !7465

if.then553:                                       ; preds = %land.lhs.true549
  %413 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7467
  call void @Curl_conncontrol(%struct.connectdata* %413, i32 1), !dbg !7467
  %414 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7469
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %414, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i32 0, i32 0)), !dbg !7470
  br label %if.end859, !dbg !7471

if.else554:                                       ; preds = %land.lhs.true549, %land.lhs.true544, %if.else540
  %415 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7472
  %httpversion555 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %415, i32 0, i32 29, !dbg !7474
  %416 = load i32, i32* %httpversion555, align 8, !dbg !7474
  %cmp556 = icmp eq i32 %416, 10, !dbg !7475
  br i1 %cmp556, label %land.lhs.true558, label %if.else563, !dbg !7476

land.lhs.true558:                                 ; preds = %if.else554
  %417 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7477
  %p559 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %417, i32 0, i32 18, !dbg !7478
  %418 = load i8*, i8** %p559, align 8, !dbg !7478
  %call560 = call zeroext i1 @Curl_compareheader(i8* %418, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i32 0, i32 0)), !dbg !7479
  br i1 %call560, label %if.then562, label %if.else563, !dbg !7480

if.then562:                                       ; preds = %land.lhs.true558
  %419 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7482
  call void @Curl_conncontrol(%struct.connectdata* %419, i32 0), !dbg !7482
  %420 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7484
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %420, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i32 0, i32 0)), !dbg !7485
  br label %if.end858, !dbg !7486

if.else563:                                       ; preds = %land.lhs.true558, %if.else554
  %421 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7487
  %p564 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %421, i32 0, i32 18, !dbg !7489
  %422 = load i8*, i8** %p564, align 8, !dbg !7489
  %call565 = call zeroext i1 @Curl_compareheader(i8* %422, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0)), !dbg !7490
  br i1 %call565, label %if.then566, label %if.else567, !dbg !7491

if.then566:                                       ; preds = %if.else563
  %423 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7492
  call void @Curl_conncontrol(%struct.connectdata* %423, i32 2), !dbg !7492
  br label %if.end857, !dbg !7494

if.else567:                                       ; preds = %if.else563
  %424 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7495
  %p568 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %424, i32 0, i32 18, !dbg !7495
  %425 = load i8*, i8** %p568, align 8, !dbg !7495
  %call569 = call i32 @curl_strnequal(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* %425, i64 18), !dbg !7495
  %tobool570 = icmp ne i32 %call569, 0, !dbg !7495
  br i1 %tobool570, label %if.then571, label %if.else622, !dbg !7497

if.then571:                                       ; preds = %if.else567
  call void @llvm.dbg.declare(metadata i8** %start, metadata !7498, metadata !1950), !dbg !7500
  %426 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7501
  %p572 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %426, i32 0, i32 18, !dbg !7502
  %427 = load i8*, i8** %p572, align 8, !dbg !7502
  %add.ptr573 = getelementptr inbounds i8, i8* %427, i64 18, !dbg !7503
  store i8* %add.ptr573, i8** %start, align 8, !dbg !7504
  br label %for.cond, !dbg !7505

for.cond:                                         ; preds = %if.end621, %if.then571
  br label %while.cond, !dbg !7506

while.cond:                                       ; preds = %while.body, %for.cond
  %428 = load i8*, i8** %start, align 8, !dbg !7510
  %429 = load i8, i8* %428, align 1, !dbg !7512
  %conv574 = sext i8 %429 to i32, !dbg !7512
  %tobool575 = icmp ne i32 %conv574, 0, !dbg !7512
  br i1 %tobool575, label %land.rhs, label %land.end, !dbg !7513

land.rhs:                                         ; preds = %while.cond
  %430 = load i8*, i8** %start, align 8, !dbg !7514
  %431 = load i8, i8* %430, align 1, !dbg !7514
  %conv576 = zext i8 %431 to i32, !dbg !7514
  %idxprom = sext i32 %conv576 to i64, !dbg !7514
  %call577 = call i16** @__ctype_b_loc() #1, !dbg !7514
  %432 = load i16*, i16** %call577, align 8, !dbg !7514
  %arrayidx = getelementptr inbounds i16, i16* %432, i64 %idxprom, !dbg !7514
  %433 = load i16, i16* %arrayidx, align 2, !dbg !7514
  %conv578 = zext i16 %433 to i32, !dbg !7514
  %and579 = and i32 %conv578, 8192, !dbg !7514
  %tobool580 = icmp ne i32 %and579, 0, !dbg !7514
  br i1 %tobool580, label %lor.end, label %lor.rhs, !dbg !7516

lor.rhs:                                          ; preds = %land.rhs
  %434 = load i8*, i8** %start, align 8, !dbg !7517
  %435 = load i8, i8* %434, align 1, !dbg !7519
  %conv581 = sext i8 %435 to i32, !dbg !7519
  %cmp582 = icmp eq i32 %conv581, 44, !dbg !7520
  br label %lor.end, !dbg !7521

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %436 = phi i1 [ true, %land.rhs ], [ %cmp582, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %437 = phi i1 [ false, %while.cond ], [ %436, %lor.end ]
  br i1 %437, label %while.body, label %while.end, !dbg !7522

while.body:                                       ; preds = %land.end
  %438 = load i8*, i8** %start, align 8, !dbg !7524
  %incdec.ptr584 = getelementptr inbounds i8, i8* %438, i32 1, !dbg !7524
  store i8* %incdec.ptr584, i8** %start, align 8, !dbg !7524
  br label %while.cond, !dbg !7525

while.end:                                        ; preds = %land.end
  %439 = load i8*, i8** %start, align 8, !dbg !7527
  %call585 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i8* %439, i64 7), !dbg !7527
  %tobool586 = icmp ne i32 %call585, 0, !dbg !7527
  br i1 %tobool586, label %if.then587, label %if.end590, !dbg !7529

if.then587:                                       ; preds = %while.end
  %440 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7530
  %chunk588 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %440, i32 0, i32 39, !dbg !7532
  store i8 1, i8* %chunk588, align 8, !dbg !7533
  %441 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7534
  call void @Curl_httpchunk_init(%struct.connectdata* %441), !dbg !7535
  %442 = load i8*, i8** %start, align 8, !dbg !7536
  %add.ptr589 = getelementptr inbounds i8, i8* %442, i64 7, !dbg !7536
  store i8* %add.ptr589, i8** %start, align 8, !dbg !7536
  br label %if.end590, !dbg !7537

if.end590:                                        ; preds = %if.then587, %while.end
  %443 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7538
  %auto_decoding = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %443, i32 0, i32 25, !dbg !7540
  %444 = load i32, i32* %auto_decoding, align 8, !dbg !7540
  %tobool591 = icmp ne i32 %444, 0, !dbg !7538
  br i1 %tobool591, label %if.then592, label %if.end593, !dbg !7541

if.then592:                                       ; preds = %if.end590
  br label %for.end, !dbg !7542

if.end593:                                        ; preds = %if.end590
  %445 = load i8*, i8** %start, align 8, !dbg !7543
  %call594 = call i32 @curl_strnequal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8* %445, i64 8), !dbg !7543
  %tobool595 = icmp ne i32 %call594, 0, !dbg !7543
  br i1 %tobool595, label %if.then596, label %if.else599, !dbg !7545

if.then596:                                       ; preds = %if.end593
  %446 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7546
  %auto_decoding597 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %446, i32 0, i32 25, !dbg !7548
  store i32 0, i32* %auto_decoding597, align 8, !dbg !7549
  %447 = load i8*, i8** %start, align 8, !dbg !7550
  %add.ptr598 = getelementptr inbounds i8, i8* %447, i64 8, !dbg !7550
  store i8* %add.ptr598, i8** %start, align 8, !dbg !7550
  br label %if.end621, !dbg !7551

if.else599:                                       ; preds = %if.end593
  %448 = load i8*, i8** %start, align 8, !dbg !7552
  %call600 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i8* %448, i64 7), !dbg !7552
  %tobool601 = icmp ne i32 %call600, 0, !dbg !7552
  br i1 %tobool601, label %if.then602, label %if.else605, !dbg !7554

if.then602:                                       ; preds = %if.else599
  %449 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7555
  %auto_decoding603 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %449, i32 0, i32 25, !dbg !7557
  store i32 1, i32* %auto_decoding603, align 8, !dbg !7558
  %450 = load i8*, i8** %start, align 8, !dbg !7559
  %add.ptr604 = getelementptr inbounds i8, i8* %450, i64 7, !dbg !7559
  store i8* %add.ptr604, i8** %start, align 8, !dbg !7559
  br label %if.end620, !dbg !7560

if.else605:                                       ; preds = %if.else599
  %451 = load i8*, i8** %start, align 8, !dbg !7561
  %call606 = call i32 @curl_strnequal(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0), i8* %451, i64 4), !dbg !7561
  %tobool607 = icmp ne i32 %call606, 0, !dbg !7561
  br i1 %tobool607, label %if.then608, label %if.else611, !dbg !7563

if.then608:                                       ; preds = %if.else605
  %452 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7564
  %auto_decoding609 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %452, i32 0, i32 25, !dbg !7566
  store i32 2, i32* %auto_decoding609, align 8, !dbg !7567
  %453 = load i8*, i8** %start, align 8, !dbg !7568
  %add.ptr610 = getelementptr inbounds i8, i8* %453, i64 4, !dbg !7568
  store i8* %add.ptr610, i8** %start, align 8, !dbg !7568
  br label %if.end619, !dbg !7569

if.else611:                                       ; preds = %if.else605
  %454 = load i8*, i8** %start, align 8, !dbg !7570
  %call612 = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8* %454, i64 6), !dbg !7570
  %tobool613 = icmp ne i32 %call612, 0, !dbg !7570
  br i1 %tobool613, label %if.then614, label %if.else617, !dbg !7572

if.then614:                                       ; preds = %if.else611
  %455 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7573
  %auto_decoding615 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %455, i32 0, i32 25, !dbg !7575
  store i32 2, i32* %auto_decoding615, align 8, !dbg !7576
  %456 = load i8*, i8** %start, align 8, !dbg !7577
  %add.ptr616 = getelementptr inbounds i8, i8* %456, i64 6, !dbg !7577
  store i8* %add.ptr616, i8** %start, align 8, !dbg !7577
  br label %if.end618, !dbg !7578

if.else617:                                       ; preds = %if.else611
  br label %for.end, !dbg !7579

if.end618:                                        ; preds = %if.then614
  br label %if.end619

if.end619:                                        ; preds = %if.end618, %if.then608
  br label %if.end620

if.end620:                                        ; preds = %if.end619, %if.then602
  br label %if.end621

if.end621:                                        ; preds = %if.end620, %if.then596
  br label %for.cond, !dbg !7580

for.end:                                          ; preds = %if.else617, %if.then592
  br label %if.end856, !dbg !7582

if.else622:                                       ; preds = %if.else567
  %457 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7583
  %p623 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %457, i32 0, i32 18, !dbg !7583
  %458 = load i8*, i8** %p623, align 8, !dbg !7583
  %call624 = call i32 @curl_strnequal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i32 0, i32 0), i8* %458, i64 17), !dbg !7583
  %tobool625 = icmp ne i32 %call624, 0, !dbg !7583
  br i1 %tobool625, label %land.lhs.true626, label %if.else670, !dbg !7585

land.lhs.true626:                                 ; preds = %if.else622
  %459 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7586
  %set627 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %459, i32 0, i32 13, !dbg !7587
  %str628 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set627, i32 0, i32 128, !dbg !7588
  %arrayidx629 = getelementptr inbounds [56 x i8*], [56 x i8*]* %str628, i64 0, i64 9, !dbg !7586
  %460 = load i8*, i8** %arrayidx629, align 8, !dbg !7586
  %tobool630 = icmp ne i8* %460, null, !dbg !7586
  br i1 %tobool630, label %if.then631, label %if.else670, !dbg !7589

if.then631:                                       ; preds = %land.lhs.true626
  call void @llvm.dbg.declare(metadata i8** %start632, metadata !7591, metadata !1950), !dbg !7593
  %461 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7594
  %p633 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %461, i32 0, i32 18, !dbg !7595
  %462 = load i8*, i8** %p633, align 8, !dbg !7595
  %add.ptr634 = getelementptr inbounds i8, i8* %462, i64 17, !dbg !7596
  store i8* %add.ptr634, i8** %start632, align 8, !dbg !7597
  br label %while.cond635, !dbg !7598

while.cond635:                                    ; preds = %while.body647, %if.then631
  %463 = load i8*, i8** %start632, align 8, !dbg !7599
  %464 = load i8, i8* %463, align 1, !dbg !7601
  %conv636 = sext i8 %464 to i32, !dbg !7601
  %tobool637 = icmp ne i32 %conv636, 0, !dbg !7601
  br i1 %tobool637, label %land.rhs638, label %land.end646, !dbg !7602

land.rhs638:                                      ; preds = %while.cond635
  %465 = load i8*, i8** %start632, align 8, !dbg !7603
  %466 = load i8, i8* %465, align 1, !dbg !7603
  %conv639 = zext i8 %466 to i32, !dbg !7603
  %idxprom640 = sext i32 %conv639 to i64, !dbg !7603
  %call641 = call i16** @__ctype_b_loc() #1, !dbg !7603
  %467 = load i16*, i16** %call641, align 8, !dbg !7603
  %arrayidx642 = getelementptr inbounds i16, i16* %467, i64 %idxprom640, !dbg !7603
  %468 = load i16, i16* %arrayidx642, align 2, !dbg !7603
  %conv643 = zext i16 %468 to i32, !dbg !7603
  %and644 = and i32 %conv643, 8192, !dbg !7603
  %tobool645 = icmp ne i32 %and644, 0, !dbg !7605
  br label %land.end646

land.end646:                                      ; preds = %land.rhs638, %while.cond635
  %469 = phi i1 [ false, %while.cond635 ], [ %tobool645, %land.rhs638 ]
  br i1 %469, label %while.body647, label %while.end649, !dbg !7606

while.body647:                                    ; preds = %land.end646
  %470 = load i8*, i8** %start632, align 8, !dbg !7608
  %incdec.ptr648 = getelementptr inbounds i8, i8* %470, i32 1, !dbg !7608
  store i8* %incdec.ptr648, i8** %start632, align 8, !dbg !7608
  br label %while.cond635, !dbg !7609

while.end649:                                     ; preds = %land.end646
  %471 = load i8*, i8** %start632, align 8, !dbg !7611
  %call650 = call i32 @curl_strnequal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8* %471, i64 8), !dbg !7611
  %tobool651 = icmp ne i32 %call650, 0, !dbg !7611
  br i1 %tobool651, label %if.then652, label %if.else654, !dbg !7613

if.then652:                                       ; preds = %while.end649
  %472 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7614
  %auto_decoding653 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %472, i32 0, i32 25, !dbg !7615
  store i32 0, i32* %auto_decoding653, align 8, !dbg !7616
  br label %if.end669, !dbg !7614

if.else654:                                       ; preds = %while.end649
  %473 = load i8*, i8** %start632, align 8, !dbg !7617
  %call655 = call i32 @curl_strnequal(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i8* %473, i64 7), !dbg !7617
  %tobool656 = icmp ne i32 %call655, 0, !dbg !7617
  br i1 %tobool656, label %if.then657, label %if.else659, !dbg !7619

if.then657:                                       ; preds = %if.else654
  %474 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7620
  %auto_decoding658 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %474, i32 0, i32 25, !dbg !7621
  store i32 1, i32* %auto_decoding658, align 8, !dbg !7622
  br label %if.end668, !dbg !7620

if.else659:                                       ; preds = %if.else654
  %475 = load i8*, i8** %start632, align 8, !dbg !7623
  %call660 = call i32 @curl_strnequal(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0), i8* %475, i64 4), !dbg !7623
  %tobool661 = icmp ne i32 %call660, 0, !dbg !7623
  br i1 %tobool661, label %if.then665, label %lor.lhs.false662, !dbg !7625

lor.lhs.false662:                                 ; preds = %if.else659
  %476 = load i8*, i8** %start632, align 8, !dbg !7626
  %call663 = call i32 @curl_strnequal(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8* %476, i64 6), !dbg !7626
  %tobool664 = icmp ne i32 %call663, 0, !dbg !7626
  br i1 %tobool664, label %if.then665, label %if.end667, !dbg !7628

if.then665:                                       ; preds = %lor.lhs.false662, %if.else659
  %477 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7630
  %auto_decoding666 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %477, i32 0, i32 25, !dbg !7631
  store i32 2, i32* %auto_decoding666, align 8, !dbg !7632
  br label %if.end667, !dbg !7630

if.end667:                                        ; preds = %if.then665, %lor.lhs.false662
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.then657
  br label %if.end669

if.end669:                                        ; preds = %if.end668, %if.then652
  br label %if.end855, !dbg !7633

if.else670:                                       ; preds = %land.lhs.true626, %if.else622
  %478 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7634
  %p671 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %478, i32 0, i32 18, !dbg !7634
  %479 = load i8*, i8** %p671, align 8, !dbg !7634
  %call672 = call i32 @curl_strnequal(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* %479, i64 14), !dbg !7634
  %tobool673 = icmp ne i32 %call672, 0, !dbg !7634
  br i1 %tobool673, label %if.then674, label %if.else716, !dbg !7636

if.then674:                                       ; preds = %if.else670
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7637, metadata !1950), !dbg !7639
  %480 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7640
  %p675 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %480, i32 0, i32 18, !dbg !7641
  %481 = load i8*, i8** %p675, align 8, !dbg !7641
  %add.ptr676 = getelementptr inbounds i8, i8* %481, i64 14, !dbg !7642
  store i8* %add.ptr676, i8** %ptr, align 8, !dbg !7639
  br label %while.cond677, !dbg !7643

while.cond677:                                    ; preds = %while.body693, %if.then674
  %482 = load i8*, i8** %ptr, align 8, !dbg !7644
  %483 = load i8, i8* %482, align 1, !dbg !7646
  %conv678 = sext i8 %483 to i32, !dbg !7646
  %tobool679 = icmp ne i32 %conv678, 0, !dbg !7646
  br i1 %tobool679, label %land.lhs.true680, label %land.end692, !dbg !7647

land.lhs.true680:                                 ; preds = %while.cond677
  %484 = load i8*, i8** %ptr, align 8, !dbg !7648
  %485 = load i8, i8* %484, align 1, !dbg !7648
  %conv681 = zext i8 %485 to i32, !dbg !7648
  %idxprom682 = sext i32 %conv681 to i64, !dbg !7648
  %call683 = call i16** @__ctype_b_loc() #1, !dbg !7648
  %486 = load i16*, i16** %call683, align 8, !dbg !7648
  %arrayidx684 = getelementptr inbounds i16, i16* %486, i64 %idxprom682, !dbg !7648
  %487 = load i16, i16* %arrayidx684, align 2, !dbg !7648
  %conv685 = zext i16 %487 to i32, !dbg !7648
  %and686 = and i32 %conv685, 2048, !dbg !7648
  %tobool687 = icmp ne i32 %and686, 0, !dbg !7648
  br i1 %tobool687, label %land.end692, label %land.rhs688, !dbg !7650

land.rhs688:                                      ; preds = %land.lhs.true680
  %488 = load i8*, i8** %ptr, align 8, !dbg !7651
  %489 = load i8, i8* %488, align 1, !dbg !7653
  %conv689 = sext i8 %489 to i32, !dbg !7653
  %cmp690 = icmp ne i32 %conv689, 42, !dbg !7654
  br label %land.end692

land.end692:                                      ; preds = %land.rhs688, %land.lhs.true680, %while.cond677
  %490 = phi i1 [ false, %land.lhs.true680 ], [ false, %while.cond677 ], [ %cmp690, %land.rhs688 ]
  br i1 %490, label %while.body693, label %while.end695, !dbg !7655

while.body693:                                    ; preds = %land.end692
  %491 = load i8*, i8** %ptr, align 8, !dbg !7657
  %incdec.ptr694 = getelementptr inbounds i8, i8* %491, i32 1, !dbg !7657
  store i8* %incdec.ptr694, i8** %ptr, align 8, !dbg !7657
  br label %while.cond677, !dbg !7658

while.end695:                                     ; preds = %land.end692
  %492 = load i8*, i8** %ptr, align 8, !dbg !7660
  %493 = load i8, i8* %492, align 1, !dbg !7660
  %conv696 = zext i8 %493 to i32, !dbg !7660
  %idxprom697 = sext i32 %conv696 to i64, !dbg !7660
  %call698 = call i16** @__ctype_b_loc() #1, !dbg !7660
  %494 = load i16*, i16** %call698, align 8, !dbg !7660
  %arrayidx699 = getelementptr inbounds i16, i16* %494, i64 %idxprom697, !dbg !7660
  %495 = load i16, i16* %arrayidx699, align 2, !dbg !7660
  %conv700 = zext i16 %495 to i32, !dbg !7660
  %and701 = and i32 %conv700, 2048, !dbg !7660
  %tobool702 = icmp ne i32 %and701, 0, !dbg !7660
  br i1 %tobool702, label %if.then703, label %if.else712, !dbg !7662

if.then703:                                       ; preds = %while.end695
  %496 = load i8*, i8** %ptr, align 8, !dbg !7663
  %call704 = call i64 @strtol(i8* %496, i8** null, i32 10) #6, !dbg !7665
  %497 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7666
  %offset = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %497, i32 0, i32 20, !dbg !7667
  store i64 %call704, i64* %offset, align 8, !dbg !7668
  %498 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7669
  %state705 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %498, i32 0, i32 17, !dbg !7671
  %resume_from706 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state705, i32 0, i32 43, !dbg !7672
  %499 = load i64, i64* %resume_from706, align 8, !dbg !7672
  %500 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7673
  %offset707 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %500, i32 0, i32 20, !dbg !7674
  %501 = load i64, i64* %offset707, align 8, !dbg !7674
  %cmp708 = icmp eq i64 %499, %501, !dbg !7675
  br i1 %cmp708, label %if.then710, label %if.end711, !dbg !7676

if.then710:                                       ; preds = %if.then703
  %502 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7677
  %content_range = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %502, i32 0, i32 19, !dbg !7678
  store i8 1, i8* %content_range, align 8, !dbg !7679
  br label %if.end711, !dbg !7677

if.end711:                                        ; preds = %if.then710, %if.then703
  br label %if.end715, !dbg !7680

if.else712:                                       ; preds = %while.end695
  %503 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7681
  %state713 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %503, i32 0, i32 17, !dbg !7682
  %resume_from714 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state713, i32 0, i32 43, !dbg !7683
  store i64 0, i64* %resume_from714, align 8, !dbg !7684
  br label %if.end715

if.end715:                                        ; preds = %if.else712, %if.end711
  br label %if.end854, !dbg !7685

if.else716:                                       ; preds = %if.else670
  %504 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7686
  %cookies = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %504, i32 0, i32 15, !dbg !7688
  %505 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies, align 8, !dbg !7688
  %tobool717 = icmp ne %struct.CookieInfo* %505, null, !dbg !7686
  br i1 %tobool717, label %land.lhs.true718, label %if.else737, !dbg !7689

land.lhs.true718:                                 ; preds = %if.else716
  %506 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7690
  %p719 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %506, i32 0, i32 18, !dbg !7690
  %507 = load i8*, i8** %p719, align 8, !dbg !7690
  %call720 = call i32 @curl_strnequal(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i32 0, i32 0), i8* %507, i64 11), !dbg !7690
  %tobool721 = icmp ne i32 %call720, 0, !dbg !7690
  br i1 %tobool721, label %if.then722, label %if.else737, !dbg !7691

if.then722:                                       ; preds = %land.lhs.true718
  %508 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7693
  %call723 = call i32 @Curl_share_lock(%struct.Curl_easy* %508, i32 2, i32 2), !dbg !7695
  %509 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7696
  %510 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7697
  %cookies724 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %510, i32 0, i32 15, !dbg !7698
  %511 = load %struct.CookieInfo*, %struct.CookieInfo** %cookies724, align 8, !dbg !7698
  %512 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7699
  %p725 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %512, i32 0, i32 18, !dbg !7700
  %513 = load i8*, i8** %p725, align 8, !dbg !7700
  %add.ptr726 = getelementptr inbounds i8, i8* %513, i64 11, !dbg !7701
  %514 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7702
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %514, i32 0, i32 52, !dbg !7703
  %cookiehost = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 7, !dbg !7704
  %515 = load i8*, i8** %cookiehost, align 8, !dbg !7704
  %tobool727 = icmp ne i8* %515, null, !dbg !7702
  br i1 %tobool727, label %cond.true728, label %cond.false731, !dbg !7702

cond.true728:                                     ; preds = %if.then722
  %516 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7705
  %allocptr729 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %516, i32 0, i32 52, !dbg !7706
  %cookiehost730 = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr729, i32 0, i32 7, !dbg !7707
  %517 = load i8*, i8** %cookiehost730, align 8, !dbg !7707
  br label %cond.end732, !dbg !7708

cond.false731:                                    ; preds = %if.then722
  %518 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7710
  %host = getelementptr inbounds %struct.connectdata, %struct.connectdata* %518, i32 0, i32 12, !dbg !7711
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !7712
  %519 = load i8*, i8** %name, align 8, !dbg !7712
  br label %cond.end732, !dbg !7713

cond.end732:                                      ; preds = %cond.false731, %cond.true728
  %cond733 = phi i8* [ %517, %cond.true728 ], [ %519, %cond.false731 ], !dbg !7715
  %520 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7717
  %state734 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %520, i32 0, i32 17, !dbg !7718
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state734, i32 0, i32 38, !dbg !7719
  %521 = load i8*, i8** %path, align 8, !dbg !7719
  %call735 = call %struct.Cookie* @Curl_cookie_add(%struct.Curl_easy* %509, %struct.CookieInfo* %511, i1 zeroext true, i8* %add.ptr726, i8* %cond733, i8* %521), !dbg !7720
  %522 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7721
  %call736 = call i32 @Curl_share_unlock(%struct.Curl_easy* %522, i32 2), !dbg !7722
  br label %if.end853, !dbg !7723

if.else737:                                       ; preds = %land.lhs.true718, %if.else716
  %523 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7724
  %p738 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %523, i32 0, i32 18, !dbg !7724
  %524 = load i8*, i8** %p738, align 8, !dbg !7724
  %call739 = call i32 @curl_strnequal(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i32 0, i32 0), i8* %524, i64 14), !dbg !7724
  %tobool740 = icmp ne i32 %call739, 0, !dbg !7724
  br i1 %tobool740, label %land.lhs.true741, label %if.else761, !dbg !7726

land.lhs.true741:                                 ; preds = %if.else737
  %525 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7727
  %set742 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %525, i32 0, i32 13, !dbg !7728
  %timecondition743 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set742, i32 0, i32 69, !dbg !7729
  %526 = load i32, i32* %timecondition743, align 8, !dbg !7729
  %tobool744 = icmp ne i32 %526, 0, !dbg !7727
  br i1 %tobool744, label %if.then749, label %lor.lhs.false745, !dbg !7730

lor.lhs.false745:                                 ; preds = %land.lhs.true741
  %527 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7731
  %set746 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %527, i32 0, i32 13, !dbg !7733
  %get_filetime = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set746, i32 0, i32 88, !dbg !7734
  %528 = load i8, i8* %get_filetime, align 1, !dbg !7734
  %tobool747 = trunc i8 %528 to i1, !dbg !7734
  br i1 %tobool747, label %if.then749, label %if.else761, !dbg !7735

if.then749:                                       ; preds = %lor.lhs.false745, %land.lhs.true741
  call void @llvm.dbg.declare(metadata i64* %secs, metadata !7737, metadata !1950), !dbg !7739
  %call750 = call i64 @time(i64* null) #6, !dbg !7740
  store i64 %call750, i64* %secs, align 8, !dbg !7739
  %529 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7741
  %p751 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %529, i32 0, i32 18, !dbg !7742
  %530 = load i8*, i8** %p751, align 8, !dbg !7742
  %add.ptr752 = getelementptr inbounds i8, i8* %530, i64 14, !dbg !7743
  %call753 = call i64 @curl_getdate(i8* %add.ptr752, i64* %secs), !dbg !7744
  %531 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7745
  %timeofdoc = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %531, i32 0, i32 26, !dbg !7746
  store i64 %call753, i64* %timeofdoc, align 8, !dbg !7747
  %532 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7748
  %set754 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %532, i32 0, i32 13, !dbg !7750
  %get_filetime755 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set754, i32 0, i32 88, !dbg !7751
  %533 = load i8, i8* %get_filetime755, align 1, !dbg !7751
  %tobool756 = trunc i8 %533 to i1, !dbg !7751
  br i1 %tobool756, label %if.then757, label %if.end760, !dbg !7752

if.then757:                                       ; preds = %if.then749
  %534 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7753
  %timeofdoc758 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %534, i32 0, i32 26, !dbg !7754
  %535 = load i64, i64* %timeofdoc758, align 8, !dbg !7754
  %536 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7755
  %info759 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %536, i32 0, i32 19, !dbg !7756
  %filetime = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info759, i32 0, i32 3, !dbg !7757
  store i64 %535, i64* %filetime, align 8, !dbg !7758
  br label %if.end760, !dbg !7755

if.end760:                                        ; preds = %if.then757, %if.then749
  br label %if.end852, !dbg !7759

if.else761:                                       ; preds = %lor.lhs.false745, %if.else737
  %537 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7760
  %p762 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %537, i32 0, i32 18, !dbg !7760
  %538 = load i8*, i8** %p762, align 8, !dbg !7760
  %call763 = call i32 @curl_strnequal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i32 0, i32 0), i8* %538, i64 17), !dbg !7760
  %tobool764 = icmp ne i32 %call763, 0, !dbg !7760
  br i1 %tobool764, label %land.lhs.true765, label %lor.lhs.false769, !dbg !7762

land.lhs.true765:                                 ; preds = %if.else761
  %539 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7763
  %httpcode766 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %539, i32 0, i32 21, !dbg !7764
  %540 = load i32, i32* %httpcode766, align 8, !dbg !7764
  %cmp767 = icmp eq i32 401, %540, !dbg !7765
  br i1 %cmp767, label %if.then777, label %lor.lhs.false769, !dbg !7766

lor.lhs.false769:                                 ; preds = %land.lhs.true765, %if.else761
  %541 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7767
  %p770 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %541, i32 0, i32 18, !dbg !7767
  %542 = load i8*, i8** %p770, align 8, !dbg !7767
  %call771 = call i32 @curl_strnequal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.103, i32 0, i32 0), i8* %542, i64 19), !dbg !7767
  %tobool772 = icmp ne i32 %call771, 0, !dbg !7767
  br i1 %tobool772, label %land.lhs.true773, label %if.else793, !dbg !7768

land.lhs.true773:                                 ; preds = %lor.lhs.false769
  %543 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7769
  %httpcode774 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %543, i32 0, i32 21, !dbg !7770
  %544 = load i32, i32* %httpcode774, align 8, !dbg !7770
  %cmp775 = icmp eq i32 407, %544, !dbg !7771
  br i1 %cmp775, label %if.then777, label %if.else793, !dbg !7772

if.then777:                                       ; preds = %land.lhs.true773, %land.lhs.true765
  call void @llvm.dbg.declare(metadata i8* %proxy, metadata !7773, metadata !1950), !dbg !7775
  %545 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7776
  %httpcode778 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %545, i32 0, i32 21, !dbg !7777
  %546 = load i32, i32* %httpcode778, align 8, !dbg !7777
  %cmp779 = icmp eq i32 %546, 407, !dbg !7778
  %cond781 = select i1 %cmp779, i32 1, i32 0, !dbg !7779
  %tobool782 = icmp ne i32 %cond781, 0, !dbg !7779
  %frombool = zext i1 %tobool782 to i8, !dbg !7775
  store i8 %frombool, i8* %proxy, align 1, !dbg !7775
  call void @llvm.dbg.declare(metadata i8** %auth, metadata !7780, metadata !1950), !dbg !7781
  %547 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7782
  %p783 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %547, i32 0, i32 18, !dbg !7783
  %548 = load i8*, i8** %p783, align 8, !dbg !7783
  %call784 = call i8* @Curl_copy_header_value(i8* %548), !dbg !7784
  store i8* %call784, i8** %auth, align 8, !dbg !7781
  %549 = load i8*, i8** %auth, align 8, !dbg !7785
  %tobool785 = icmp ne i8* %549, null, !dbg !7785
  br i1 %tobool785, label %if.end787, label %if.then786, !dbg !7787

if.then786:                                       ; preds = %if.then777
  store i32 27, i32* %retval, align 4, !dbg !7788
  br label %return, !dbg !7788

if.end787:                                        ; preds = %if.then777
  %550 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7789
  %551 = load i8, i8* %proxy, align 1, !dbg !7790
  %tobool788 = trunc i8 %551 to i1, !dbg !7790
  %552 = load i8*, i8** %auth, align 8, !dbg !7791
  %call789 = call i32 @Curl_http_input_auth(%struct.connectdata* %550, i1 zeroext %tobool788, i8* %552), !dbg !7792
  store i32 %call789, i32* %result, align 4, !dbg !7793
  %553 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7794
  %554 = load i8*, i8** %auth, align 8, !dbg !7794
  call void %553(i8* %554), !dbg !7794
  %555 = load i32, i32* %result, align 4, !dbg !7795
  %tobool790 = icmp ne i32 %555, 0, !dbg !7795
  br i1 %tobool790, label %if.then791, label %if.end792, !dbg !7797

if.then791:                                       ; preds = %if.end787
  %556 = load i32, i32* %result, align 4, !dbg !7798
  store i32 %556, i32* %retval, align 4, !dbg !7799
  br label %return, !dbg !7799

if.end792:                                        ; preds = %if.end787
  br label %if.end851, !dbg !7800

if.else793:                                       ; preds = %land.lhs.true773, %lor.lhs.false769
  %557 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7801
  %httpcode794 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %557, i32 0, i32 21, !dbg !7803
  %558 = load i32, i32* %httpcode794, align 8, !dbg !7803
  %cmp795 = icmp sge i32 %558, 300, !dbg !7804
  br i1 %cmp795, label %land.lhs.true797, label %if.else840, !dbg !7805

land.lhs.true797:                                 ; preds = %if.else793
  %559 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7806
  %httpcode798 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %559, i32 0, i32 21, !dbg !7808
  %560 = load i32, i32* %httpcode798, align 8, !dbg !7808
  %cmp799 = icmp slt i32 %560, 400, !dbg !7809
  br i1 %cmp799, label %land.lhs.true801, label %if.else840, !dbg !7810

land.lhs.true801:                                 ; preds = %land.lhs.true797
  %561 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7811
  %p802 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %561, i32 0, i32 18, !dbg !7811
  %562 = load i8*, i8** %p802, align 8, !dbg !7811
  %call803 = call i32 @curl_strnequal(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i8* %562, i64 9), !dbg !7811
  %tobool804 = icmp ne i32 %call803, 0, !dbg !7811
  br i1 %tobool804, label %land.lhs.true805, label %if.else840, !dbg !7812

land.lhs.true805:                                 ; preds = %land.lhs.true801
  %563 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7813
  %req806 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %563, i32 0, i32 12, !dbg !7814
  %location = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req806, i32 0, i32 35, !dbg !7815
  %564 = load i8*, i8** %location, align 8, !dbg !7815
  %tobool807 = icmp ne i8* %564, null, !dbg !7813
  br i1 %tobool807, label %if.else840, label %if.then808, !dbg !7816

if.then808:                                       ; preds = %land.lhs.true805
  call void @llvm.dbg.declare(metadata i8** %location809, metadata !7818, metadata !1950), !dbg !7820
  %565 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7821
  %p810 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %565, i32 0, i32 18, !dbg !7822
  %566 = load i8*, i8** %p810, align 8, !dbg !7822
  %call811 = call i8* @Curl_copy_header_value(i8* %566), !dbg !7823
  store i8* %call811, i8** %location809, align 8, !dbg !7820
  %567 = load i8*, i8** %location809, align 8, !dbg !7824
  %tobool812 = icmp ne i8* %567, null, !dbg !7824
  br i1 %tobool812, label %if.end814, label %if.then813, !dbg !7826

if.then813:                                       ; preds = %if.then808
  store i32 27, i32* %retval, align 4, !dbg !7827
  br label %return, !dbg !7827

if.end814:                                        ; preds = %if.then808
  %568 = load i8*, i8** %location809, align 8, !dbg !7828
  %569 = load i8, i8* %568, align 1, !dbg !7830
  %tobool815 = icmp ne i8 %569, 0, !dbg !7830
  br i1 %tobool815, label %if.else817, label %if.then816, !dbg !7831

if.then816:                                       ; preds = %if.end814
  %570 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !7832
  %571 = load i8*, i8** %location809, align 8, !dbg !7832
  call void %570(i8* %571), !dbg !7832
  br label %if.end839, !dbg !7832

if.else817:                                       ; preds = %if.end814
  %572 = load i8*, i8** %location809, align 8, !dbg !7833
  %573 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7835
  %req818 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %573, i32 0, i32 12, !dbg !7836
  %location819 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req818, i32 0, i32 35, !dbg !7837
  store i8* %572, i8** %location819, align 8, !dbg !7838
  %574 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7839
  %set820 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %574, i32 0, i32 13, !dbg !7841
  %http_follow_location = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set820, i32 0, i32 97, !dbg !7842
  %575 = load i8, i8* %http_follow_location, align 2, !dbg !7842
  %tobool821 = trunc i8 %575 to i1, !dbg !7842
  br i1 %tobool821, label %if.then822, label %if.end838, !dbg !7843

if.then822:                                       ; preds = %if.else817
  br label %do.body823, !dbg !7844

do.body823:                                       ; preds = %if.then822
  br label %do.end824, !dbg !7846

do.end824:                                        ; preds = %do.body823
  %576 = load i8* (i8*)*, i8* (i8*)** @Curl_cstrdup, align 8, !dbg !7849
  %577 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7849
  %req825 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %577, i32 0, i32 12, !dbg !7849
  %location826 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req825, i32 0, i32 35, !dbg !7849
  %578 = load i8*, i8** %location826, align 8, !dbg !7849
  %call827 = call i8* %576(i8* %578), !dbg !7849
  %579 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7850
  %req828 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %579, i32 0, i32 12, !dbg !7851
  %newurl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req828, i32 0, i32 36, !dbg !7852
  store i8* %call827, i8** %newurl, align 8, !dbg !7853
  %580 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7854
  %req829 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %580, i32 0, i32 12, !dbg !7856
  %newurl830 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req829, i32 0, i32 36, !dbg !7857
  %581 = load i8*, i8** %newurl830, align 8, !dbg !7857
  %tobool831 = icmp ne i8* %581, null, !dbg !7854
  br i1 %tobool831, label %if.end833, label %if.then832, !dbg !7858

if.then832:                                       ; preds = %do.end824
  store i32 27, i32* %retval, align 4, !dbg !7859
  br label %return, !dbg !7859

if.end833:                                        ; preds = %do.end824
  %582 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7860
  %call834 = call i32 @http_perhapsrewind(%struct.connectdata* %582), !dbg !7861
  store i32 %call834, i32* %result, align 4, !dbg !7862
  %583 = load i32, i32* %result, align 4, !dbg !7863
  %tobool835 = icmp ne i32 %583, 0, !dbg !7863
  br i1 %tobool835, label %if.then836, label %if.end837, !dbg !7865

if.then836:                                       ; preds = %if.end833
  %584 = load i32, i32* %result, align 4, !dbg !7866
  store i32 %584, i32* %retval, align 4, !dbg !7867
  br label %return, !dbg !7867

if.end837:                                        ; preds = %if.end833
  br label %if.end838, !dbg !7868

if.end838:                                        ; preds = %if.end837, %if.else817
  br label %if.end839

if.end839:                                        ; preds = %if.end838, %if.then816
  br label %if.end850, !dbg !7869

if.else840:                                       ; preds = %land.lhs.true805, %land.lhs.true801, %land.lhs.true797, %if.else793
  %585 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7870
  %handler841 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %585, i32 0, i32 47, !dbg !7872
  %586 = load %struct.Curl_handler*, %struct.Curl_handler** %handler841, align 8, !dbg !7872
  %protocol842 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %586, i32 0, i32 15, !dbg !7873
  %587 = load i32, i32* %protocol842, align 8, !dbg !7873
  %and843 = and i32 %587, 262144, !dbg !7874
  %tobool844 = icmp ne i32 %and843, 0, !dbg !7874
  br i1 %tobool844, label %if.then845, label %if.end849, !dbg !7875

if.then845:                                       ; preds = %if.else840
  store i32 4, i32* %result, align 4, !dbg !7876
  %588 = load i32, i32* %result, align 4, !dbg !7878
  %tobool846 = icmp ne i32 %588, 0, !dbg !7878
  br i1 %tobool846, label %if.then847, label %if.end848, !dbg !7880

if.then847:                                       ; preds = %if.then845
  %589 = load i32, i32* %result, align 4, !dbg !7881
  store i32 %589, i32* %retval, align 4, !dbg !7882
  br label %return, !dbg !7882

if.end848:                                        ; preds = %if.then845
  br label %if.end849, !dbg !7883

if.end849:                                        ; preds = %if.end848, %if.else840
  br label %if.end850

if.end850:                                        ; preds = %if.end849, %if.end839
  br label %if.end851

if.end851:                                        ; preds = %if.end850, %if.end792
  br label %if.end852

if.end852:                                        ; preds = %if.end851, %if.end760
  br label %if.end853

if.end853:                                        ; preds = %if.end852, %cond.end732
  br label %if.end854

if.end854:                                        ; preds = %if.end853, %if.end715
  br label %if.end855

if.end855:                                        ; preds = %if.end854, %if.end669
  br label %if.end856

if.end856:                                        ; preds = %if.end855, %for.end
  br label %if.end857

if.end857:                                        ; preds = %if.end856, %if.then566
  br label %if.end858

if.end858:                                        ; preds = %if.end857, %if.then562
  br label %if.end859

if.end859:                                        ; preds = %if.end858, %if.then553
  br label %if.end860

if.end860:                                        ; preds = %if.end859, %if.then539
  br label %if.end861

if.end861:                                        ; preds = %if.end860, %if.end526
  br label %if.end862

if.end862:                                        ; preds = %if.end861, %if.end500
  br label %if.end863

if.end863:                                        ; preds = %if.end862, %if.end478
  store i32 2, i32* %writetype, align 4, !dbg !7884
  %590 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7885
  %set864 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %590, i32 0, i32 13, !dbg !7887
  %include_header865 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set864, i32 0, i32 100, !dbg !7888
  %591 = load i8, i8* %include_header865, align 1, !dbg !7888
  %tobool866 = trunc i8 %591 to i1, !dbg !7888
  br i1 %tobool866, label %if.then867, label %if.end869, !dbg !7889

if.then867:                                       ; preds = %if.end863
  %592 = load i32, i32* %writetype, align 4, !dbg !7890
  %or868 = or i32 %592, 1, !dbg !7890
  store i32 %or868, i32* %writetype, align 4, !dbg !7890
  br label %if.end869, !dbg !7891

if.end869:                                        ; preds = %if.then867, %if.end863
  %593 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7892
  %set870 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %593, i32 0, i32 13, !dbg !7894
  %verbose871 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set870, i32 0, i32 106, !dbg !7895
  %594 = load i8, i8* %verbose871, align 8, !dbg !7895
  %tobool872 = trunc i8 %594 to i1, !dbg !7895
  br i1 %tobool872, label %if.then873, label %if.end877, !dbg !7896

if.then873:                                       ; preds = %if.end869
  %595 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7897
  %596 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7898
  %p874 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %596, i32 0, i32 18, !dbg !7899
  %597 = load i8*, i8** %p874, align 8, !dbg !7899
  %598 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7900
  %hbuflen875 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %598, i32 0, i32 14, !dbg !7901
  %599 = load i64, i64* %hbuflen875, align 8, !dbg !7901
  %600 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7902
  %call876 = call i32 @Curl_debug(%struct.Curl_easy* %595, i32 1, i8* %597, i64 %599, %struct.connectdata* %600), !dbg !7903
  br label %if.end877, !dbg !7903

if.end877:                                        ; preds = %if.then873, %if.end869
  %601 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !7904
  %602 = load i32, i32* %writetype, align 4, !dbg !7905
  %603 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7906
  %p878 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %603, i32 0, i32 18, !dbg !7907
  %604 = load i8*, i8** %p878, align 8, !dbg !7907
  %605 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7908
  %hbuflen879 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %605, i32 0, i32 14, !dbg !7909
  %606 = load i64, i64* %hbuflen879, align 8, !dbg !7909
  %call880 = call i32 @Curl_client_write(%struct.connectdata* %601, i32 %602, i8* %604, i64 %606), !dbg !7910
  store i32 %call880, i32* %result, align 4, !dbg !7911
  %607 = load i32, i32* %result, align 4, !dbg !7912
  %tobool881 = icmp ne i32 %607, 0, !dbg !7912
  br i1 %tobool881, label %if.then882, label %if.end883, !dbg !7914

if.then882:                                       ; preds = %if.end877
  %608 = load i32, i32* %result, align 4, !dbg !7915
  store i32 %608, i32* %retval, align 4, !dbg !7916
  br label %return, !dbg !7916

if.end883:                                        ; preds = %if.end877
  %609 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7917
  %hbuflen884 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %609, i32 0, i32 14, !dbg !7918
  %610 = load i64, i64* %hbuflen884, align 8, !dbg !7918
  %611 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7919
  %info885 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %611, i32 0, i32 19, !dbg !7920
  %header_size886 = getelementptr inbounds %struct.PureInfo, %struct.PureInfo* %info885, i32 0, i32 5, !dbg !7921
  %612 = load i64, i64* %header_size886, align 8, !dbg !7922
  %add887 = add nsw i64 %612, %610, !dbg !7922
  store i64 %add887, i64* %header_size886, align 8, !dbg !7922
  %613 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7923
  %hbuflen888 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %613, i32 0, i32 14, !dbg !7924
  %614 = load i64, i64* %hbuflen888, align 8, !dbg !7924
  %615 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7925
  %req889 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %615, i32 0, i32 12, !dbg !7926
  %headerbytecount890 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req889, i32 0, i32 6, !dbg !7927
  %616 = load i64, i64* %headerbytecount890, align 8, !dbg !7928
  %add891 = add nsw i64 %616, %614, !dbg !7928
  store i64 %add891, i64* %headerbytecount890, align 8, !dbg !7928
  %617 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7929
  %state892 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %617, i32 0, i32 17, !dbg !7930
  %headerbuff893 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state892, i32 0, i32 4, !dbg !7931
  %618 = load i8*, i8** %headerbuff893, align 8, !dbg !7931
  %619 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7932
  %hbufp894 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %619, i32 0, i32 13, !dbg !7933
  store i8* %618, i8** %hbufp894, align 8, !dbg !7934
  %620 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7935
  %hbuflen895 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %620, i32 0, i32 14, !dbg !7936
  store i64 0, i64* %hbuflen895, align 8, !dbg !7937
  br label %do.cond, !dbg !7938

do.cond:                                          ; preds = %if.end883, %if.end247
  %621 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !7939
  %str896 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %621, i32 0, i32 15, !dbg !7940
  %622 = load i8*, i8** %str896, align 8, !dbg !7940
  %623 = load i8, i8* %622, align 1, !dbg !7941
  %tobool897 = icmp ne i8 %623, 0, !dbg !7942
  br i1 %tobool897, label %do.body, label %do.end898, !dbg !7942

do.end898:                                        ; preds = %do.cond, %if.else440, %if.end246, %if.end44, %if.end11, %if.then9
  store i32 0, i32* %retval, align 4, !dbg !7944
  br label %return, !dbg !7944

return:                                           ; preds = %do.end898, %if.then882, %if.then847, %if.then836, %if.then832, %if.then813, %if.then791, %if.then786, %if.then487, %if.then468, %if.then445, %if.else385, %if.then156, %if.then139, %if.then121, %if.then93, %if.then24, %if.then5
  %624 = load i32, i32* %retval, align 4, !dbg !7945
  ret i32 %624, !dbg !7945
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @header_append(%struct.Curl_easy* %data, %struct.SingleRequest* %k, i64 %length) #0 !dbg !1931 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %k.addr = alloca %struct.SingleRequest*, align 8
  %length.addr = alloca i64, align 8
  %newbuff = alloca i8*, align 8
  %hbufp_index = alloca i64, align 8
  %newsize = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !7946, metadata !1950), !dbg !7947
  store %struct.SingleRequest* %k, %struct.SingleRequest** %k.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k.addr, metadata !7948, metadata !1950), !dbg !7949
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7950, metadata !1950), !dbg !7951
  %0 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !7952
  %hbuflen = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %0, i32 0, i32 14, !dbg !7954
  %1 = load i64, i64* %hbuflen, align 8, !dbg !7954
  %2 = load i64, i64* %length.addr, align 8, !dbg !7955
  %add = add i64 %1, %2, !dbg !7956
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7957
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 17, !dbg !7958
  %headersize = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 5, !dbg !7959
  %4 = load i64, i64* %headersize, align 8, !dbg !7959
  %cmp = icmp uge i64 %add, %4, !dbg !7960
  br i1 %cmp, label %if.then, label %if.end30, !dbg !7961

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %newbuff, metadata !7962, metadata !1950), !dbg !7964
  call void @llvm.dbg.declare(metadata i64* %hbufp_index, metadata !7965, metadata !1950), !dbg !7966
  call void @llvm.dbg.declare(metadata i64* %newsize, metadata !7967, metadata !1950), !dbg !7968
  %5 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !7969
  %hbuflen1 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %5, i32 0, i32 14, !dbg !7971
  %6 = load i64, i64* %hbuflen1, align 8, !dbg !7971
  %7 = load i64, i64* %length.addr, align 8, !dbg !7972
  %add2 = add i64 %6, %7, !dbg !7973
  %cmp3 = icmp ugt i64 %add2, 102400, !dbg !7974
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7975

if.then4:                                         ; preds = %if.then
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7976
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.116, i32 0, i32 0), i32 102400), !dbg !7978
  store i32 27, i32* %retval, align 4, !dbg !7979
  br label %return, !dbg !7979

if.end:                                           ; preds = %if.then
  %9 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !7980
  %hbuflen5 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %9, i32 0, i32 14, !dbg !7980
  %10 = load i64, i64* %hbuflen5, align 8, !dbg !7980
  %11 = load i64, i64* %length.addr, align 8, !dbg !7980
  %add6 = add i64 %10, %11, !dbg !7980
  %mul = mul i64 %add6, 3, !dbg !7980
  %div = udiv i64 %mul, 2, !dbg !7980
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7980
  %state7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %12, i32 0, i32 17, !dbg !7980
  %headersize8 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state7, i32 0, i32 5, !dbg !7980
  %13 = load i64, i64* %headersize8, align 8, !dbg !7980
  %mul9 = mul i64 %13, 2, !dbg !7980
  %cmp10 = icmp ugt i64 %div, %mul9, !dbg !7980
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !7980

cond.true:                                        ; preds = %if.end
  %14 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !7981
  %hbuflen11 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %14, i32 0, i32 14, !dbg !7981
  %15 = load i64, i64* %hbuflen11, align 8, !dbg !7981
  %16 = load i64, i64* %length.addr, align 8, !dbg !7981
  %add12 = add i64 %15, %16, !dbg !7981
  %mul13 = mul i64 %add12, 3, !dbg !7981
  %div14 = udiv i64 %mul13, 2, !dbg !7981
  br label %cond.end, !dbg !7981

cond.false:                                       ; preds = %if.end
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7983
  %state15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 17, !dbg !7983
  %headersize16 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state15, i32 0, i32 5, !dbg !7983
  %18 = load i64, i64* %headersize16, align 8, !dbg !7983
  %mul17 = mul i64 %18, 2, !dbg !7983
  br label %cond.end, !dbg !7983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %div14, %cond.true ], [ %mul17, %cond.false ], !dbg !7985
  store i64 %cond, i64* %newsize, align 8, !dbg !7987
  %19 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !7988
  %hbufp = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %19, i32 0, i32 13, !dbg !7989
  %20 = load i8*, i8** %hbufp, align 8, !dbg !7989
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7990
  %state18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 17, !dbg !7991
  %headerbuff = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state18, i32 0, i32 4, !dbg !7992
  %22 = load i8*, i8** %headerbuff, align 8, !dbg !7992
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64, !dbg !7993
  %sub.ptr.rhs.cast = ptrtoint i8* %22 to i64, !dbg !7993
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7993
  store i64 %sub.ptr.sub, i64* %hbufp_index, align 8, !dbg !7994
  %23 = load i8* (i8*, i64)*, i8* (i8*, i64)** @Curl_crealloc, align 8, !dbg !7995
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !7995
  %state19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 17, !dbg !7995
  %headerbuff20 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state19, i32 0, i32 4, !dbg !7995
  %25 = load i8*, i8** %headerbuff20, align 8, !dbg !7995
  %26 = load i64, i64* %newsize, align 8, !dbg !7995
  %call = call i8* %23(i8* %25, i64 %26), !dbg !7995
  store i8* %call, i8** %newbuff, align 8, !dbg !7996
  %27 = load i8*, i8** %newbuff, align 8, !dbg !7997
  %tobool = icmp ne i8* %27, null, !dbg !7997
  br i1 %tobool, label %if.end22, label %if.then21, !dbg !7999

if.then21:                                        ; preds = %cond.end
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8000
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %28, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.117, i32 0, i32 0)), !dbg !8002
  store i32 27, i32* %retval, align 4, !dbg !8003
  br label %return, !dbg !8003

if.end22:                                         ; preds = %cond.end
  %29 = load i64, i64* %newsize, align 8, !dbg !8004
  %30 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8005
  %state23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %30, i32 0, i32 17, !dbg !8006
  %headersize24 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state23, i32 0, i32 5, !dbg !8007
  store i64 %29, i64* %headersize24, align 8, !dbg !8008
  %31 = load i8*, i8** %newbuff, align 8, !dbg !8009
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8010
  %state25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %32, i32 0, i32 17, !dbg !8011
  %headerbuff26 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state25, i32 0, i32 4, !dbg !8012
  store i8* %31, i8** %headerbuff26, align 8, !dbg !8013
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8014
  %state27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 17, !dbg !8015
  %headerbuff28 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state27, i32 0, i32 4, !dbg !8016
  %34 = load i8*, i8** %headerbuff28, align 8, !dbg !8016
  %35 = load i64, i64* %hbufp_index, align 8, !dbg !8017
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !8018
  %36 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8019
  %hbufp29 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %36, i32 0, i32 13, !dbg !8020
  store i8* %add.ptr, i8** %hbufp29, align 8, !dbg !8021
  br label %if.end30, !dbg !8022

if.end30:                                         ; preds = %if.end22, %entry
  %37 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8023
  %hbufp31 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %37, i32 0, i32 13, !dbg !8024
  %38 = load i8*, i8** %hbufp31, align 8, !dbg !8024
  %39 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8025
  %str_start = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %39, i32 0, i32 16, !dbg !8026
  %40 = load i8*, i8** %str_start, align 8, !dbg !8026
  %41 = load i64, i64* %length.addr, align 8, !dbg !8027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %40, i64 %41, i32 1, i1 false), !dbg !8028
  %42 = load i64, i64* %length.addr, align 8, !dbg !8029
  %43 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8030
  %hbufp32 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %43, i32 0, i32 13, !dbg !8031
  %44 = load i8*, i8** %hbufp32, align 8, !dbg !8032
  %add.ptr33 = getelementptr inbounds i8, i8* %44, i64 %42, !dbg !8032
  store i8* %add.ptr33, i8** %hbufp32, align 8, !dbg !8032
  %45 = load i64, i64* %length.addr, align 8, !dbg !8033
  %46 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8034
  %hbuflen34 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %46, i32 0, i32 14, !dbg !8035
  %47 = load i64, i64* %hbuflen34, align 8, !dbg !8036
  %add35 = add i64 %47, %45, !dbg !8036
  store i64 %add35, i64* %hbuflen34, align 8, !dbg !8036
  %48 = load %struct.SingleRequest*, %struct.SingleRequest** %k.addr, align 8, !dbg !8037
  %hbufp36 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %48, i32 0, i32 13, !dbg !8038
  %49 = load i8*, i8** %hbufp36, align 8, !dbg !8038
  store i8 0, i8* %49, align 1, !dbg !8039
  store i32 0, i32* %retval, align 4, !dbg !8040
  br label %return, !dbg !8040

return:                                           ; preds = %if.end30, %if.then21, %if.then4
  %50 = load i32, i32* %retval, align 4, !dbg !8041
  ret i32 %50, !dbg !8041
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @checkprotoprefix(%struct.Curl_easy* %data, %struct.connectdata* %conn, i8* %s) #0 !dbg !1935 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8042, metadata !1950), !dbg !8043
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !8044, metadata !1950), !dbg !8045
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8046, metadata !1950), !dbg !8047
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8048
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8049
  %2 = load i8*, i8** %s.addr, align 8, !dbg !8050
  %call = call zeroext i1 @checkhttpprefix(%struct.Curl_easy* %1, i8* %2), !dbg !8051
  ret i1 %call, !dbg !8052
}

declare i32 @Curl_client_write(%struct.connectdata*, i32, i8*, i64) #3

declare void @Curl_pgrsSetDownloadSize(%struct.Curl_easy*, i64) #3

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #7

; Function Attrs: nounwind uwtable
define internal zeroext i1 @checkhttpprefix(%struct.Curl_easy* %data, i8* %s) #0 !dbg !1938 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %s.addr = alloca i8*, align 8
  %head = alloca %struct.curl_slist*, align 8
  %rc = alloca i8, align 1
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8053, metadata !1950), !dbg !8054
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8055, metadata !1950), !dbg !8056
  call void @llvm.dbg.declare(metadata %struct.curl_slist** %head, metadata !8057, metadata !1950), !dbg !8058
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8059
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 13, !dbg !8060
  %http200aliases = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 80, !dbg !8061
  %1 = load %struct.curl_slist*, %struct.curl_slist** %http200aliases, align 8, !dbg !8061
  store %struct.curl_slist* %1, %struct.curl_slist** %head, align 8, !dbg !8058
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !8062, metadata !1950), !dbg !8063
  store i8 0, i8* %rc, align 1, !dbg !8063
  br label %while.cond, !dbg !8064

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !8065
  %tobool = icmp ne %struct.curl_slist* %2, null, !dbg !8067
  br i1 %tobool, label %while.body, label %while.end, !dbg !8067

while.body:                                       ; preds = %while.cond
  %3 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !8068
  %data1 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %3, i32 0, i32 0, !dbg !8068
  %4 = load i8*, i8** %data1, align 8, !dbg !8068
  %5 = load i8*, i8** %s.addr, align 8, !dbg !8068
  %6 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !8068
  %data2 = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %6, i32 0, i32 0, !dbg !8068
  %7 = load i8*, i8** %data2, align 8, !dbg !8068
  %call = call i64 @strlen(i8* %7) #8, !dbg !8068
  %call3 = call i32 @curl_strnequal(i8* %4, i8* %5, i64 %call), !dbg !8071
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8068
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8073

if.then:                                          ; preds = %while.body
  store i8 1, i8* %rc, align 1, !dbg !8074
  br label %while.end, !dbg !8076

if.end:                                           ; preds = %while.body
  %8 = load %struct.curl_slist*, %struct.curl_slist** %head, align 8, !dbg !8077
  %next = getelementptr inbounds %struct.curl_slist, %struct.curl_slist* %8, i32 0, i32 1, !dbg !8078
  %9 = load %struct.curl_slist*, %struct.curl_slist** %next, align 8, !dbg !8078
  store %struct.curl_slist* %9, %struct.curl_slist** %head, align 8, !dbg !8079
  br label %while.cond, !dbg !8080

while.end:                                        ; preds = %if.then, %while.cond
  %10 = load i8, i8* %rc, align 1, !dbg !8082
  %tobool5 = trunc i8 %10 to i1, !dbg !8082
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !8084

land.lhs.true:                                    ; preds = %while.end
  %11 = load i8*, i8** %s.addr, align 8, !dbg !8085
  %call6 = call i32 @curl_strnequal(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i32 0, i32 0), i8* %11, i64 5), !dbg !8085
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8085
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8087

if.then8:                                         ; preds = %land.lhs.true
  store i8 1, i8* %rc, align 1, !dbg !8088
  br label %if.end9, !dbg !8089

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %while.end
  %12 = load i8, i8* %rc, align 1, !dbg !8090
  %tobool10 = trunc i8 %12 to i1, !dbg !8090
  ret i1 %tobool10, !dbg !8091
}

; Function Attrs: nounwind uwtable
define internal void @print_http_error(%struct.Curl_easy* %data) #0 !dbg !1941 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %k = alloca %struct.SingleRequest*, align 8
  %beg = alloca i8*, align 8
  %end_char = alloca i8, align 1
  %end = alloca i8*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !8092, metadata !1950), !dbg !8093
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k, metadata !8094, metadata !1950), !dbg !8095
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8096
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 12, !dbg !8097
  store %struct.SingleRequest* %req, %struct.SingleRequest** %k, align 8, !dbg !8095
  call void @llvm.dbg.declare(metadata i8** %beg, metadata !8098, metadata !1950), !dbg !8099
  %1 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8100
  %p = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %1, i32 0, i32 18, !dbg !8101
  %2 = load i8*, i8** %p, align 8, !dbg !8101
  store i8* %2, i8** %beg, align 8, !dbg !8099
  %3 = load i8*, i8** %beg, align 8, !dbg !8102
  %call = call i32 @strncmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64 4) #8, !dbg !8104
  %tobool = icmp ne i32 %call, 0, !dbg !8104
  br i1 %tobool, label %if.end15, label %if.then, !dbg !8105

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %beg, align 8, !dbg !8106
  %call1 = call i8* @strchr(i8* %4, i32 32) #8, !dbg !8108
  store i8* %call1, i8** %beg, align 8, !dbg !8109
  %5 = load i8*, i8** %beg, align 8, !dbg !8110
  %tobool2 = icmp ne i8* %5, null, !dbg !8110
  br i1 %tobool2, label %land.lhs.true, label %if.end14, !dbg !8112

land.lhs.true:                                    ; preds = %if.then
  %6 = load i8*, i8** %beg, align 8, !dbg !8113
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8113
  store i8* %incdec.ptr, i8** %beg, align 8, !dbg !8113
  %7 = load i8, i8* %incdec.ptr, align 1, !dbg !8115
  %conv = sext i8 %7 to i32, !dbg !8115
  %tobool3 = icmp ne i32 %conv, 0, !dbg !8115
  br i1 %tobool3, label %if.then4, label %if.end14, !dbg !8116

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %end_char, metadata !8117, metadata !1950), !dbg !8119
  store i8 13, i8* %end_char, align 1, !dbg !8119
  call void @llvm.dbg.declare(metadata i8** %end, metadata !8120, metadata !1950), !dbg !8121
  %8 = load i8*, i8** %beg, align 8, !dbg !8122
  %9 = load i8, i8* %end_char, align 1, !dbg !8123
  %conv5 = sext i8 %9 to i32, !dbg !8123
  %call6 = call i8* @strchr(i8* %8, i32 %conv5) #8, !dbg !8124
  store i8* %call6, i8** %end, align 8, !dbg !8121
  %10 = load i8*, i8** %end, align 8, !dbg !8125
  %tobool7 = icmp ne i8* %10, null, !dbg !8125
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !8127

if.then8:                                         ; preds = %if.then4
  store i8 10, i8* %end_char, align 1, !dbg !8128
  %11 = load i8*, i8** %beg, align 8, !dbg !8130
  %12 = load i8, i8* %end_char, align 1, !dbg !8131
  %conv9 = sext i8 %12 to i32, !dbg !8131
  %call10 = call i8* @strchr(i8* %11, i32 %conv9) #8, !dbg !8132
  store i8* %call10, i8** %end, align 8, !dbg !8133
  br label %if.end, !dbg !8134

if.end:                                           ; preds = %if.then8, %if.then4
  %13 = load i8*, i8** %end, align 8, !dbg !8135
  %tobool11 = icmp ne i8* %13, null, !dbg !8135
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8137

if.then12:                                        ; preds = %if.end
  %14 = load i8*, i8** %end, align 8, !dbg !8138
  store i8 0, i8* %14, align 1, !dbg !8140
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8141
  %16 = load i8*, i8** %beg, align 8, !dbg !8142
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.119, i32 0, i32 0), i8* %16), !dbg !8143
  %17 = load i8, i8* %end_char, align 1, !dbg !8144
  %18 = load i8*, i8** %end, align 8, !dbg !8145
  store i8 %17, i8* %18, align 1, !dbg !8146
  br label %return, !dbg !8147

if.end13:                                         ; preds = %if.end
  br label %if.end14, !dbg !8148

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end15, !dbg !8149

if.end15:                                         ; preds = %if.end14, %entry
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !8150
  %20 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !8151
  %httpcode = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %20, i32 0, i32 21, !dbg !8152
  %21 = load i32, i32* %httpcode, align 8, !dbg !8152
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %19, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i32 0, i32 0), i32 %21), !dbg !8153
  br label %return, !dbg !8154

return:                                           ; preds = %if.end15, %if.then12
  ret void, !dbg !8155
}

declare zeroext i1 @Curl_pipeline_site_blacklisted(%struct.Curl_easy*, %struct.connectdata*) #3

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #7

declare zeroext i1 @Curl_pipeline_server_blacklisted(%struct.Curl_easy*, i8*) #3

declare void @Curl_httpchunk_init(%struct.connectdata*) #3

declare %struct.Cookie* @Curl_cookie_add(%struct.Curl_easy*, %struct.CookieInfo*, i1 zeroext, i8*, i8*, i8*) #3

; Function Attrs: nounwind
declare i64 @time(i64*) #7

declare i64 @curl_getdate(i8*, i64*) #3

declare i32 @Curl_readrewind(%struct.connectdata*) #3

declare i32 @Curl_output_digest(%struct.connectdata*, i1 zeroext, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @http_output_basic(%struct.connectdata* %conn, i1 zeroext %proxy) #0 !dbg !1914 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %proxy.addr = alloca i8, align 1
  %size = alloca i64, align 8
  %authorization = alloca i8*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %userp = alloca i8**, align 8
  %user = alloca i8*, align 8
  %pwd = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !8157, metadata !1950), !dbg !8158
  %frombool = zext i1 %proxy to i8
  store i8 %frombool, i8* %proxy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %proxy.addr, metadata !8159, metadata !1950), !dbg !8160
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8161, metadata !1950), !dbg !8162
  store i64 0, i64* %size, align 8, !dbg !8162
  call void @llvm.dbg.declare(metadata i8** %authorization, metadata !8163, metadata !1950), !dbg !8164
  store i8* null, i8** %authorization, align 8, !dbg !8164
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !8165, metadata !1950), !dbg !8166
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8167
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !8168
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !8168
  store %struct.Curl_easy* %1, %struct.Curl_easy** %data, align 8, !dbg !8166
  call void @llvm.dbg.declare(metadata i8*** %userp, metadata !8169, metadata !1950), !dbg !8170
  call void @llvm.dbg.declare(metadata i8** %user, metadata !8171, metadata !1950), !dbg !8172
  call void @llvm.dbg.declare(metadata i8** %pwd, metadata !8173, metadata !1950), !dbg !8174
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8175, metadata !1950), !dbg !8176
  %2 = load i8, i8* %proxy.addr, align 1, !dbg !8177
  %tobool = trunc i8 %2 to i1, !dbg !8177
  br i1 %tobool, label %if.then, label %if.else, !dbg !8179

if.then:                                          ; preds = %entry
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8180
  %allocptr = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 52, !dbg !8182
  %proxyuserpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr, i32 0, i32 0, !dbg !8183
  store i8** %proxyuserpwd, i8*** %userp, align 8, !dbg !8184
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8185
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 16, !dbg !8186
  %user2 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 3, !dbg !8187
  %5 = load i8*, i8** %user2, align 8, !dbg !8187
  store i8* %5, i8** %user, align 8, !dbg !8188
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8189
  %http_proxy3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 16, !dbg !8190
  %passwd = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy3, i32 0, i32 4, !dbg !8191
  %7 = load i8*, i8** %passwd, align 8, !dbg !8191
  store i8* %7, i8** %pwd, align 8, !dbg !8192
  br label %if.end, !dbg !8193

if.else:                                          ; preds = %entry
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8194
  %allocptr4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 52, !dbg !8196
  %userpwd = getelementptr inbounds %struct.dynamically_allocated_data, %struct.dynamically_allocated_data* %allocptr4, i32 0, i32 3, !dbg !8197
  store i8** %userpwd, i8*** %userp, align 8, !dbg !8198
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8199
  %user5 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 25, !dbg !8200
  %10 = load i8*, i8** %user5, align 8, !dbg !8200
  store i8* %10, i8** %user, align 8, !dbg !8201
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !8202
  %passwd6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 26, !dbg !8203
  %12 = load i8*, i8** %passwd6, align 8, !dbg !8203
  store i8* %12, i8** %pwd, align 8, !dbg !8204
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8205
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 17, !dbg !8206
  %buffer = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 6, !dbg !8207
  %14 = load i8*, i8** %buffer, align 8, !dbg !8207
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8208
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 13, !dbg !8208
  %buffer_size = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 78, !dbg !8208
  %16 = load i64, i64* %buffer_size, align 8, !dbg !8208
  %tobool7 = icmp ne i64 %16, 0, !dbg !8208
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !8208

cond.true:                                        ; preds = %if.end
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8209
  %set8 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 13, !dbg !8209
  %buffer_size9 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set8, i32 0, i32 78, !dbg !8209
  %18 = load i64, i64* %buffer_size9, align 8, !dbg !8209
  br label %cond.end, !dbg !8209

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %18, %cond.true ], [ 16384, %cond.false ], !dbg !8213
  %19 = load i8*, i8** %user, align 8, !dbg !8215
  %20 = load i8*, i8** %pwd, align 8, !dbg !8216
  %call = call i32 (i8*, i64, i8*, ...) @curl_msnprintf(i8* %14, i64 %cond, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8* %19, i8* %20), !dbg !8217
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8218
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8219
  %state10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 17, !dbg !8220
  %buffer11 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state10, i32 0, i32 6, !dbg !8221
  %23 = load i8*, i8** %buffer11, align 8, !dbg !8221
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !8222
  %state12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 17, !dbg !8223
  %buffer13 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state12, i32 0, i32 6, !dbg !8224
  %25 = load i8*, i8** %buffer13, align 8, !dbg !8224
  %call14 = call i64 @strlen(i8* %25) #8, !dbg !8225
  %call15 = call i32 @Curl_base64_encode(%struct.Curl_easy* %21, i8* %23, i64 %call14, i8** %authorization, i64* %size), !dbg !8226
  store i32 %call15, i32* %result, align 4, !dbg !8227
  %26 = load i32, i32* %result, align 4, !dbg !8228
  %tobool16 = icmp ne i32 %26, 0, !dbg !8228
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8230

if.then17:                                        ; preds = %cond.end
  %27 = load i32, i32* %result, align 4, !dbg !8231
  store i32 %27, i32* %retval, align 4, !dbg !8232
  br label %return, !dbg !8232

if.end18:                                         ; preds = %cond.end
  %28 = load i8*, i8** %authorization, align 8, !dbg !8233
  %tobool19 = icmp ne i8* %28, null, !dbg !8233
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !8235

if.then20:                                        ; preds = %if.end18
  store i32 9, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

if.end21:                                         ; preds = %if.end18
  %29 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8237
  %30 = load i8**, i8*** %userp, align 8, !dbg !8237
  %31 = load i8*, i8** %30, align 8, !dbg !8237
  call void %29(i8* %31), !dbg !8237
  %32 = load i8, i8* %proxy.addr, align 1, !dbg !8238
  %tobool22 = trunc i8 %32 to i1, !dbg !8238
  %cond23 = select i1 %tobool22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i32 0, i32 0), !dbg !8238
  %33 = load i8*, i8** %authorization, align 8, !dbg !8239
  %call24 = call i8* (i8*, ...) @curl_maprintf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.111, i32 0, i32 0), i8* %cond23, i8* %33), !dbg !8240
  %34 = load i8**, i8*** %userp, align 8, !dbg !8241
  store i8* %call24, i8** %34, align 8, !dbg !8242
  %35 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !8243
  %36 = load i8*, i8** %authorization, align 8, !dbg !8243
  call void %35(i8* %36), !dbg !8243
  %37 = load i8**, i8*** %userp, align 8, !dbg !8244
  %38 = load i8*, i8** %37, align 8, !dbg !8246
  %tobool25 = icmp ne i8* %38, null, !dbg !8246
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !8247

if.then26:                                        ; preds = %if.end21
  store i32 27, i32* %retval, align 4, !dbg !8248
  br label %return, !dbg !8248

if.end27:                                         ; preds = %if.end21
  store i32 0, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

return:                                           ; preds = %if.end27, %if.then26, %if.then20, %if.then17
  %39 = load i32, i32* %retval, align 4, !dbg !8250
  ret i32 %39, !dbg !8250
}

declare i32 @Curl_base64_encode(%struct.Curl_easy*, i8*, i64, i8**, i64*) #3

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1946, !1947}
!llvm.ident = !{!1948}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1850, subprograms: !1853, globals: !1944)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http.c", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2 = !{!3, !100, !123, !129, !185, !194, !200, !242, !249, !284, !294, !300, !305, !312, !322, !331, !337, !343, !349, !355, !362, !368, !374, !389, !400, !414, !425, !430, !438, !476, !495, !515, !530, !547, !555, !1716, !1724, !1762, !1777, !1782, !1841}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 434, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99}
!6 = !DIEnumerator(name: "CURLE_OK", value: 0)
!7 = !DIEnumerator(name: "CURLE_UNSUPPORTED_PROTOCOL", value: 1)
!8 = !DIEnumerator(name: "CURLE_FAILED_INIT", value: 2)
!9 = !DIEnumerator(name: "CURLE_URL_MALFORMAT", value: 3)
!10 = !DIEnumerator(name: "CURLE_NOT_BUILT_IN", value: 4)
!11 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_PROXY", value: 5)
!12 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_HOST", value: 6)
!13 = !DIEnumerator(name: "CURLE_COULDNT_CONNECT", value: 7)
!14 = !DIEnumerator(name: "CURLE_WEIRD_SERVER_REPLY", value: 8)
!15 = !DIEnumerator(name: "CURLE_REMOTE_ACCESS_DENIED", value: 9)
!16 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_FAILED", value: 10)
!17 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASS_REPLY", value: 11)
!18 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_TIMEOUT", value: 12)
!19 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASV_REPLY", value: 13)
!20 = !DIEnumerator(name: "CURLE_FTP_WEIRD_227_FORMAT", value: 14)
!21 = !DIEnumerator(name: "CURLE_FTP_CANT_GET_HOST", value: 15)
!22 = !DIEnumerator(name: "CURLE_HTTP2", value: 16)
!23 = !DIEnumerator(name: "CURLE_FTP_COULDNT_SET_TYPE", value: 17)
!24 = !DIEnumerator(name: "CURLE_PARTIAL_FILE", value: 18)
!25 = !DIEnumerator(name: "CURLE_FTP_COULDNT_RETR_FILE", value: 19)
!26 = !DIEnumerator(name: "CURLE_OBSOLETE20", value: 20)
!27 = !DIEnumerator(name: "CURLE_QUOTE_ERROR", value: 21)
!28 = !DIEnumerator(name: "CURLE_HTTP_RETURNED_ERROR", value: 22)
!29 = !DIEnumerator(name: "CURLE_WRITE_ERROR", value: 23)
!30 = !DIEnumerator(name: "CURLE_OBSOLETE24", value: 24)
!31 = !DIEnumerator(name: "CURLE_UPLOAD_FAILED", value: 25)
!32 = !DIEnumerator(name: "CURLE_READ_ERROR", value: 26)
!33 = !DIEnumerator(name: "CURLE_OUT_OF_MEMORY", value: 27)
!34 = !DIEnumerator(name: "CURLE_OPERATION_TIMEDOUT", value: 28)
!35 = !DIEnumerator(name: "CURLE_OBSOLETE29", value: 29)
!36 = !DIEnumerator(name: "CURLE_FTP_PORT_FAILED", value: 30)
!37 = !DIEnumerator(name: "CURLE_FTP_COULDNT_USE_REST", value: 31)
!38 = !DIEnumerator(name: "CURLE_OBSOLETE32", value: 32)
!39 = !DIEnumerator(name: "CURLE_RANGE_ERROR", value: 33)
!40 = !DIEnumerator(name: "CURLE_HTTP_POST_ERROR", value: 34)
!41 = !DIEnumerator(name: "CURLE_SSL_CONNECT_ERROR", value: 35)
!42 = !DIEnumerator(name: "CURLE_BAD_DOWNLOAD_RESUME", value: 36)
!43 = !DIEnumerator(name: "CURLE_FILE_COULDNT_READ_FILE", value: 37)
!44 = !DIEnumerator(name: "CURLE_LDAP_CANNOT_BIND", value: 38)
!45 = !DIEnumerator(name: "CURLE_LDAP_SEARCH_FAILED", value: 39)
!46 = !DIEnumerator(name: "CURLE_OBSOLETE40", value: 40)
!47 = !DIEnumerator(name: "CURLE_FUNCTION_NOT_FOUND", value: 41)
!48 = !DIEnumerator(name: "CURLE_ABORTED_BY_CALLBACK", value: 42)
!49 = !DIEnumerator(name: "CURLE_BAD_FUNCTION_ARGUMENT", value: 43)
!50 = !DIEnumerator(name: "CURLE_OBSOLETE44", value: 44)
!51 = !DIEnumerator(name: "CURLE_INTERFACE_FAILED", value: 45)
!52 = !DIEnumerator(name: "CURLE_OBSOLETE46", value: 46)
!53 = !DIEnumerator(name: "CURLE_TOO_MANY_REDIRECTS", value: 47)
!54 = !DIEnumerator(name: "CURLE_UNKNOWN_OPTION", value: 48)
!55 = !DIEnumerator(name: "CURLE_TELNET_OPTION_SYNTAX", value: 49)
!56 = !DIEnumerator(name: "CURLE_OBSOLETE50", value: 50)
!57 = !DIEnumerator(name: "CURLE_PEER_FAILED_VERIFICATION", value: 51)
!58 = !DIEnumerator(name: "CURLE_GOT_NOTHING", value: 52)
!59 = !DIEnumerator(name: "CURLE_SSL_ENGINE_NOTFOUND", value: 53)
!60 = !DIEnumerator(name: "CURLE_SSL_ENGINE_SETFAILED", value: 54)
!61 = !DIEnumerator(name: "CURLE_SEND_ERROR", value: 55)
!62 = !DIEnumerator(name: "CURLE_RECV_ERROR", value: 56)
!63 = !DIEnumerator(name: "CURLE_OBSOLETE57", value: 57)
!64 = !DIEnumerator(name: "CURLE_SSL_CERTPROBLEM", value: 58)
!65 = !DIEnumerator(name: "CURLE_SSL_CIPHER", value: 59)
!66 = !DIEnumerator(name: "CURLE_SSL_CACERT", value: 60)
!67 = !DIEnumerator(name: "CURLE_BAD_CONTENT_ENCODING", value: 61)
!68 = !DIEnumerator(name: "CURLE_LDAP_INVALID_URL", value: 62)
!69 = !DIEnumerator(name: "CURLE_FILESIZE_EXCEEDED", value: 63)
!70 = !DIEnumerator(name: "CURLE_USE_SSL_FAILED", value: 64)
!71 = !DIEnumerator(name: "CURLE_SEND_FAIL_REWIND", value: 65)
!72 = !DIEnumerator(name: "CURLE_SSL_ENGINE_INITFAILED", value: 66)
!73 = !DIEnumerator(name: "CURLE_LOGIN_DENIED", value: 67)
!74 = !DIEnumerator(name: "CURLE_TFTP_NOTFOUND", value: 68)
!75 = !DIEnumerator(name: "CURLE_TFTP_PERM", value: 69)
!76 = !DIEnumerator(name: "CURLE_REMOTE_DISK_FULL", value: 70)
!77 = !DIEnumerator(name: "CURLE_TFTP_ILLEGAL", value: 71)
!78 = !DIEnumerator(name: "CURLE_TFTP_UNKNOWNID", value: 72)
!79 = !DIEnumerator(name: "CURLE_REMOTE_FILE_EXISTS", value: 73)
!80 = !DIEnumerator(name: "CURLE_TFTP_NOSUCHUSER", value: 74)
!81 = !DIEnumerator(name: "CURLE_CONV_FAILED", value: 75)
!82 = !DIEnumerator(name: "CURLE_CONV_REQD", value: 76)
!83 = !DIEnumerator(name: "CURLE_SSL_CACERT_BADFILE", value: 77)
!84 = !DIEnumerator(name: "CURLE_REMOTE_FILE_NOT_FOUND", value: 78)
!85 = !DIEnumerator(name: "CURLE_SSH", value: 79)
!86 = !DIEnumerator(name: "CURLE_SSL_SHUTDOWN_FAILED", value: 80)
!87 = !DIEnumerator(name: "CURLE_AGAIN", value: 81)
!88 = !DIEnumerator(name: "CURLE_SSL_CRL_BADFILE", value: 82)
!89 = !DIEnumerator(name: "CURLE_SSL_ISSUER_ERROR", value: 83)
!90 = !DIEnumerator(name: "CURLE_FTP_PRET_FAILED", value: 84)
!91 = !DIEnumerator(name: "CURLE_RTSP_CSEQ_ERROR", value: 85)
!92 = !DIEnumerator(name: "CURLE_RTSP_SESSION_ERROR", value: 86)
!93 = !DIEnumerator(name: "CURLE_FTP_BAD_FILE_LIST", value: 87)
!94 = !DIEnumerator(name: "CURLE_CHUNK_FAILED", value: 88)
!95 = !DIEnumerator(name: "CURLE_NO_CONNECTION_AVAILABLE", value: 89)
!96 = !DIEnumerator(name: "CURLE_SSL_PINNEDPUBKEYNOTMATCH", value: 90)
!97 = !DIEnumerator(name: "CURLE_SSL_INVALIDCERTSTATUS", value: 91)
!98 = !DIEnumerator(name: "CURLE_HTTP2_STREAM", value: 92)
!99 = !DIEnumerator(name: "CURL_LAST", value: 93)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !101, line: 35, size: 32, align: 32, elements: !102)
!101 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/multihandle.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122}
!103 = !DIEnumerator(name: "CURLM_STATE_INIT", value: 0)
!104 = !DIEnumerator(name: "CURLM_STATE_CONNECT_PEND", value: 1)
!105 = !DIEnumerator(name: "CURLM_STATE_CONNECT", value: 2)
!106 = !DIEnumerator(name: "CURLM_STATE_WAITRESOLVE", value: 3)
!107 = !DIEnumerator(name: "CURLM_STATE_WAITCONNECT", value: 4)
!108 = !DIEnumerator(name: "CURLM_STATE_WAITPROXYCONNECT", value: 5)
!109 = !DIEnumerator(name: "CURLM_STATE_SENDPROTOCONNECT", value: 6)
!110 = !DIEnumerator(name: "CURLM_STATE_PROTOCONNECT", value: 7)
!111 = !DIEnumerator(name: "CURLM_STATE_WAITDO", value: 8)
!112 = !DIEnumerator(name: "CURLM_STATE_DO", value: 9)
!113 = !DIEnumerator(name: "CURLM_STATE_DOING", value: 10)
!114 = !DIEnumerator(name: "CURLM_STATE_DO_MORE", value: 11)
!115 = !DIEnumerator(name: "CURLM_STATE_DO_DONE", value: 12)
!116 = !DIEnumerator(name: "CURLM_STATE_WAITPERFORM", value: 13)
!117 = !DIEnumerator(name: "CURLM_STATE_PERFORM", value: 14)
!118 = !DIEnumerator(name: "CURLM_STATE_TOOFAST", value: 15)
!119 = !DIEnumerator(name: "CURLM_STATE_DONE", value: 16)
!120 = !DIEnumerator(name: "CURLM_STATE_COMPLETED", value: 17)
!121 = !DIEnumerator(name: "CURLM_STATE_MSGSENT", value: 18)
!122 = !DIEnumerator(name: "CURLM_STATE_LAST", value: 19)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 86, size: 32, align: 32, elements: !125)
!124 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/multi.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "CURLMSG_NONE", value: 0)
!127 = !DIEnumerator(name: "CURLMSG_DONE", value: 1)
!128 = !DIEnumerator(name: "CURLMSG_LAST", value: 2)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !131, file: !130, line: 1783, size: 32, align: 32, elements: !180)
!130 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/urldata.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!131 = !DICompositeType(tag: DW_TAG_structure_type, name: "Names", file: !130, line: 1781, size: 128, align: 64, elements: !132)
!132 = !{!133, !179}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !131, file: !130, line: 1782, baseType: !134, size: 64, align: 64)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64, align: 64)
!135 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_hash", file: !136, line: 46, size: 384, align: 64, elements: !137)
!136 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hash.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!137 = !{!138, !161, !166, !171, !176, !178}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !135, file: !136, line: 47, baseType: !139, size: 64, align: 64)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64, align: 64)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist", file: !141, line: 37, size: 256, align: 64, elements: !142)
!141 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/llist.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!142 = !{!143, !151, !152, !157}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !140, file: !141, line: 38, baseType: !144, size: 64, align: 64)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64, align: 64)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist_element", file: !141, line: 30, size: 192, align: 64, elements: !146)
!146 = !{!147, !149, !150}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !145, file: !141, line: 31, baseType: !148, size: 64, align: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !145, file: !141, line: 33, baseType: !144, size: 64, align: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !145, file: !141, line: 34, baseType: !144, size: 64, align: 64, offset: 128)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !140, file: !141, line: 39, baseType: !144, size: 64, align: 64, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !140, file: !141, line: 41, baseType: !153, size: 64, align: 64, offset: 128)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_llist_dtor", file: !141, line: 28, baseType: !154)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64, align: 64)
!155 = !DISubroutineType(types: !156)
!156 = !{null, !148, !148}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !140, file: !141, line: 43, baseType: !158, size: 64, align: 64, offset: 192)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !159, line: 62, baseType: !160)
!159 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!160 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "hash_func", scope: !135, file: !136, line: 50, baseType: !162, size: 64, align: 64, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_function", file: !136, line: 32, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64, align: 64)
!164 = !DISubroutineType(types: !165)
!165 = !{!158, !148, !158, !158}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "comp_func", scope: !135, file: !136, line: 53, baseType: !167, size: 64, align: 64, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "comp_function", file: !136, line: 39, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64, align: 64)
!169 = !DISubroutineType(types: !170)
!170 = !{!158, !148, !158, !148, !158}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !135, file: !136, line: 54, baseType: !172, size: 64, align: 64, offset: 192)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_hash_dtor", file: !136, line: 44, baseType: !173)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !148}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !135, file: !136, line: 55, baseType: !177, size: 32, align: 32, offset: 256)
!177 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !135, file: !136, line: 56, baseType: !158, size: 64, align: 64, offset: 320)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "hostcachetype", scope: !131, file: !130, line: 1788, baseType: !129, size: 32, align: 32, offset: 64)
!180 = !{!181, !182, !183, !184}
!181 = !DIEnumerator(name: "HCACHE_NONE", value: 0)
!182 = !DIEnumerator(name: "HCACHE_GLOBAL", value: 1)
!183 = !DIEnumerator(name: "HCACHE_MULTI", value: 2)
!184 = !DIEnumerator(name: "HCACHE_SHARED", value: 3)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 2343, size: 32, align: 32, elements: !186)
!186 = !{!187, !188, !189, !190, !191, !192, !193}
!187 = !DIEnumerator(name: "CURL_LOCK_DATA_NONE", value: 0)
!188 = !DIEnumerator(name: "CURL_LOCK_DATA_SHARE", value: 1)
!189 = !DIEnumerator(name: "CURL_LOCK_DATA_COOKIE", value: 2)
!190 = !DIEnumerator(name: "CURL_LOCK_DATA_DNS", value: 3)
!191 = !DIEnumerator(name: "CURL_LOCK_DATA_SSL_SESSION", value: 4)
!192 = !DIEnumerator(name: "CURL_LOCK_DATA_CONNECT", value: 5)
!193 = !DIEnumerator(name: "CURL_LOCK_DATA_LAST", value: 6)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 2358, size: 32, align: 32, elements: !195)
!195 = !{!196, !197, !198, !199}
!196 = !DIEnumerator(name: "CURL_LOCK_ACCESS_NONE", value: 0)
!197 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SHARED", value: 1)
!198 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SINGLE", value: 2)
!199 = !DIEnumerator(name: "CURL_LOCK_ACCESS_LAST", value: 3)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !201, file: !130, line: 679, size: 32, align: 32, elements: !280)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "SingleRequest", file: !130, line: 658, size: 2496, align: 64, elements: !202)
!202 = !{!203, !207, !209, !210, !211, !212, !213, !214, !215, !224, !225, !227, !228, !229, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !248, !255, !256, !259, !260, !261, !262, !264, !265, !266, !267, !268, !269, !270, !274, !275, !276, !277, !278, !279}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !201, file: !130, line: 659, baseType: !204, size: 64, align: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_off_t", file: !205, line: 216, baseType: !206)
!205 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curlbuild.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!206 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "bytecountp", scope: !201, file: !130, line: 660, baseType: !208, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "maxdownload", scope: !201, file: !130, line: 662, baseType: !204, size: 64, align: 64, offset: 128)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecountp", scope: !201, file: !130, line: 664, baseType: !208, size: 64, align: 64, offset: 192)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "bytecount", scope: !201, file: !130, line: 666, baseType: !204, size: 64, align: 64, offset: 256)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecount", scope: !201, file: !130, line: 667, baseType: !204, size: 64, align: 64, offset: 320)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "headerbytecount", scope: !201, file: !130, line: 669, baseType: !206, size: 64, align: 64, offset: 384)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "deductheadercount", scope: !201, file: !130, line: 670, baseType: !206, size: 64, align: 64, offset: 448)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !201, file: !130, line: 676, baseType: !216, size: 128, align: 64, offset: 512)
!216 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !217, line: 30, size: 128, align: 64, elements: !218)
!217 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!218 = !{!219, !222}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !216, file: !217, line: 32, baseType: !220, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !221, line: 139, baseType: !206)
!221 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!222 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !216, file: !217, line: 33, baseType: !223, size: 64, align: 64, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !221, line: 141, baseType: !206)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !201, file: !130, line: 677, baseType: !216, size: 128, align: 64, offset: 640)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !201, file: !130, line: 678, baseType: !226, size: 8, align: 8, offset: 768)
!226 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "badheader", scope: !201, file: !130, line: 684, baseType: !200, size: 32, align: 32, offset: 800)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "headerline", scope: !201, file: !130, line: 686, baseType: !177, size: 32, align: 32, offset: 832)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "hbufp", scope: !201, file: !130, line: 688, baseType: !230, size: 64, align: 64, offset: 896)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64, align: 64)
!231 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "hbuflen", scope: !201, file: !130, line: 689, baseType: !158, size: 64, align: 64, offset: 960)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !201, file: !130, line: 690, baseType: !230, size: 64, align: 64, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "str_start", scope: !201, file: !130, line: 691, baseType: !230, size: 64, align: 64, offset: 1088)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "end_ptr", scope: !201, file: !130, line: 692, baseType: !230, size: 64, align: 64, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !201, file: !130, line: 693, baseType: !230, size: 64, align: 64, offset: 1216)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "content_range", scope: !201, file: !130, line: 694, baseType: !226, size: 8, align: 8, offset: 1280)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !201, file: !130, line: 695, baseType: !204, size: 64, align: 64, offset: 1344)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !201, file: !130, line: 697, baseType: !177, size: 32, align: 32, offset: 1408)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "start100", scope: !201, file: !130, line: 699, baseType: !216, size: 128, align: 64, offset: 1472)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "exp100", scope: !201, file: !130, line: 700, baseType: !242, size: 32, align: 32, offset: 1600)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expect100", file: !130, line: 636, size: 32, align: 32, elements: !243)
!243 = !{!244, !245, !246, !247}
!244 = !DIEnumerator(name: "EXP100_SEND_DATA", value: 0)
!245 = !DIEnumerator(name: "EXP100_AWAITING_CONTINUE", value: 1)
!246 = !DIEnumerator(name: "EXP100_SENDING_REQUEST", value: 2)
!247 = !DIEnumerator(name: "EXP100_FAILED", value: 3)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "upgr101", scope: !201, file: !130, line: 701, baseType: !249, size: 32, align: 32, offset: 1632)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "upgrade101", file: !130, line: 644, size: 32, align: 32, elements: !250)
!250 = !{!251, !252, !253, !254}
!251 = !DIEnumerator(name: "UPGR101_INIT", value: 0)
!252 = !DIEnumerator(name: "UPGR101_REQUESTED", value: 1)
!253 = !DIEnumerator(name: "UPGR101_RECEIVED", value: 2)
!254 = !DIEnumerator(name: "UPGR101_WORKING", value: 3)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "auto_decoding", scope: !201, file: !130, line: 703, baseType: !177, size: 32, align: 32, offset: 1664)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "timeofdoc", scope: !201, file: !130, line: 715, baseType: !257, size: 64, align: 64, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !258, line: 75, baseType: !220)
!258 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!259 = !DIDerivedType(tag: DW_TAG_member, name: "bodywrites", scope: !201, file: !130, line: 716, baseType: !206, size: 64, align: 64, offset: 1792)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !201, file: !130, line: 718, baseType: !230, size: 64, align: 64, offset: 1856)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuf", scope: !201, file: !130, line: 719, baseType: !230, size: 64, align: 64, offset: 1920)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !201, file: !130, line: 720, baseType: !263, size: 32, align: 32, offset: 1984)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_t", file: !4, line: 131, baseType: !177)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "keepon", scope: !201, file: !130, line: 722, baseType: !177, size: 32, align: 32, offset: 2016)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "upload_done", scope: !201, file: !130, line: 724, baseType: !226, size: 8, align: 8, offset: 2048)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "ignorebody", scope: !201, file: !130, line: 727, baseType: !226, size: 8, align: 8, offset: 2056)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !201, file: !130, line: 728, baseType: !226, size: 8, align: 8, offset: 2064)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !201, file: !130, line: 731, baseType: !230, size: 64, align: 64, offset: 2112)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "newurl", scope: !201, file: !130, line: 733, baseType: !230, size: 64, align: 64, offset: 2176)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "upload_present", scope: !201, file: !130, line: 738, baseType: !271, size: 64, align: 64, offset: 2240)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !272, line: 109, baseType: !273)
!272 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !221, line: 172, baseType: !206)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "upload_fromhere", scope: !201, file: !130, line: 744, baseType: !230, size: 64, align: 64, offset: 2304)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !201, file: !130, line: 746, baseType: !226, size: 8, align: 8, offset: 2368)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "upload_chunky", scope: !201, file: !130, line: 747, baseType: !226, size: 8, align: 8, offset: 2376)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "getheader", scope: !201, file: !130, line: 749, baseType: !226, size: 8, align: 8, offset: 2384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "forbidchunk", scope: !201, file: !130, line: 751, baseType: !226, size: 8, align: 8, offset: 2392)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "protop", scope: !201, file: !130, line: 755, baseType: !148, size: 64, align: 64, offset: 2432)
!280 = !{!281, !282, !283}
!281 = !DIEnumerator(name: "HEADER_NORMAL", value: 0)
!282 = !DIEnumerator(name: "HEADER_PARTHEADER", value: 1)
!283 = !DIEnumerator(name: "HEADER_ALLBAD", value: 2)
!284 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 409, size: 32, align: 32, elements: !285)
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293}
!286 = !DIEnumerator(name: "CURLINFO_TEXT", value: 0)
!287 = !DIEnumerator(name: "CURLINFO_HEADER_IN", value: 1)
!288 = !DIEnumerator(name: "CURLINFO_HEADER_OUT", value: 2)
!289 = !DIEnumerator(name: "CURLINFO_DATA_IN", value: 3)
!290 = !DIEnumerator(name: "CURLINFO_DATA_OUT", value: 4)
!291 = !DIEnumerator(name: "CURLINFO_SSL_DATA_IN", value: 5)
!292 = !DIEnumerator(name: "CURLINFO_SSL_DATA_OUT", value: 6)
!293 = !DIEnumerator(name: "CURLINFO_END", value: 7)
!294 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 375, size: 32, align: 32, elements: !295)
!295 = !{!296, !297, !298, !299}
!296 = !DIEnumerator(name: "CURLIOE_OK", value: 0)
!297 = !DIEnumerator(name: "CURLIOE_UNKNOWNCMD", value: 1)
!298 = !DIEnumerator(name: "CURLIOE_FAILRESTART", value: 2)
!299 = !DIEnumerator(name: "CURLIOE_LAST", value: 3)
!300 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 340, size: 32, align: 32, elements: !301)
!301 = !{!302, !303, !304}
!302 = !DIEnumerator(name: "CURLSOCKTYPE_IPCXN", value: 0)
!303 = !DIEnumerator(name: "CURLSOCKTYPE_ACCEPT", value: 1)
!304 = !DIEnumerator(name: "CURLSOCKTYPE_LAST", value: 2)
!305 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 1921, size: 32, align: 32, elements: !306)
!306 = !{!307, !308, !309, !310, !311}
!307 = !DIEnumerator(name: "CURL_TIMECOND_NONE", value: 0)
!308 = !DIEnumerator(name: "CURL_TIMECOND_IFMODSINCE", value: 1)
!309 = !DIEnumerator(name: "CURL_TIMECOND_IFUNMODSINCE", value: 2)
!310 = !DIEnumerator(name: "CURL_TIMECOND_LASTMOD", value: 3)
!311 = !DIEnumerator(name: "CURL_TIMECOND_LAST", value: 4)
!312 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 1240, size: 32, align: 32, elements: !313)
!313 = !{!314, !315, !316, !317, !318, !319, !320, !321}
!314 = !DIEnumerator(name: "HTTPREQ_NONE", value: 0)
!315 = !DIEnumerator(name: "HTTPREQ_GET", value: 1)
!316 = !DIEnumerator(name: "HTTPREQ_POST", value: 2)
!317 = !DIEnumerator(name: "HTTPREQ_POST_FORM", value: 3)
!318 = !DIEnumerator(name: "HTTPREQ_PUT", value: 4)
!319 = !DIEnumerator(name: "HTTPREQ_HEAD", value: 5)
!320 = !DIEnumerator(name: "HTTPREQ_CUSTOM", value: 6)
!321 = !DIEnumerator(name: "HTTPREQ_LAST", value: 7)
!322 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 644, size: 32, align: 32, elements: !323)
!323 = !{!324, !325, !326, !327, !328, !329, !330}
!324 = !DIEnumerator(name: "CURLPROXY_HTTP", value: 0)
!325 = !DIEnumerator(name: "CURLPROXY_HTTP_1_0", value: 1)
!326 = !DIEnumerator(name: "CURLPROXY_HTTPS", value: 2)
!327 = !DIEnumerator(name: "CURLPROXY_SOCKS4", value: 4)
!328 = !DIEnumerator(name: "CURLPROXY_SOCKS5", value: 5)
!329 = !DIEnumerator(name: "CURLPROXY_SOCKS4A", value: 6)
!330 = !DIEnumerator(name: "CURLPROXY_SOCKS5_HOSTNAME", value: 7)
!331 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !332, line: 93, size: 32, align: 32, elements: !333)
!332 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ftp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!333 = !{!334, !335, !336}
!334 = !DIEnumerator(name: "FTPFILE_MULTICWD", value: 1)
!335 = !DIEnumerator(name: "FTPFILE_NOCWD", value: 2)
!336 = !DIEnumerator(name: "FTPFILE_SINGLECWD", value: 3)
!337 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khtype", file: !4, line: 704, size: 32, align: 32, elements: !338)
!338 = !{!339, !340, !341, !342}
!339 = !DIEnumerator(name: "CURLKHTYPE_UNKNOWN", value: 0)
!340 = !DIEnumerator(name: "CURLKHTYPE_RSA1", value: 1)
!341 = !DIEnumerator(name: "CURLKHTYPE_RSA", value: 2)
!342 = !DIEnumerator(name: "CURLKHTYPE_DSS", value: 3)
!343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khmatch", file: !4, line: 731, size: 32, align: 32, elements: !344)
!344 = !{!345, !346, !347, !348}
!345 = !DIEnumerator(name: "CURLKHMATCH_OK", value: 0)
!346 = !DIEnumerator(name: "CURLKHMATCH_MISMATCH", value: 1)
!347 = !DIEnumerator(name: "CURLKHMATCH_MISSING", value: 2)
!348 = !DIEnumerator(name: "CURLKHMATCH_LAST", value: 3)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CURL_NETRC_OPTION", file: !4, line: 1867, size: 32, align: 32, elements: !350)
!350 = !{!351, !352, !353, !354}
!351 = !DIEnumerator(name: "CURL_NETRC_IGNORED", value: 0)
!352 = !DIEnumerator(name: "CURL_NETRC_OPTIONAL", value: 1)
!353 = !DIEnumerator(name: "CURL_NETRC_REQUIRED", value: 2)
!354 = !DIEnumerator(name: "CURL_NETRC_LAST", value: 3)
!355 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 746, size: 32, align: 32, elements: !356)
!356 = !{!357, !358, !359, !360, !361}
!357 = !DIEnumerator(name: "CURLUSESSL_NONE", value: 0)
!358 = !DIEnumerator(name: "CURLUSESSL_TRY", value: 1)
!359 = !DIEnumerator(name: "CURLUSESSL_CONTROL", value: 2)
!360 = !DIEnumerator(name: "CURLUSESSL_ALL", value: 3)
!361 = !DIEnumerator(name: "CURLUSESSL_LAST", value: 4)
!362 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 790, size: 32, align: 32, elements: !363)
!363 = !{!364, !365, !366, !367}
!364 = !DIEnumerator(name: "CURLFTPAUTH_DEFAULT", value: 0)
!365 = !DIEnumerator(name: "CURLFTPAUTH_SSL", value: 1)
!366 = !DIEnumerator(name: "CURLFTPAUTH_TLS", value: 2)
!367 = !DIEnumerator(name: "CURLFTPAUTH_LAST", value: 3)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 782, size: 32, align: 32, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIEnumerator(name: "CURLFTPSSL_CCC_NONE", value: 0)
!371 = !DIEnumerator(name: "CURLFTPSSL_CCC_PASSIVE", value: 1)
!372 = !DIEnumerator(name: "CURLFTPSSL_CCC_ACTIVE", value: 2)
!373 = !DIEnumerator(name: "CURLFTPSSL_CCC_LAST", value: 3)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 1251, size: 32, align: 32, elements: !375)
!375 = !{!376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388}
!376 = !DIEnumerator(name: "RTSPREQ_NONE", value: 0)
!377 = !DIEnumerator(name: "RTSPREQ_OPTIONS", value: 1)
!378 = !DIEnumerator(name: "RTSPREQ_DESCRIBE", value: 2)
!379 = !DIEnumerator(name: "RTSPREQ_ANNOUNCE", value: 3)
!380 = !DIEnumerator(name: "RTSPREQ_SETUP", value: 4)
!381 = !DIEnumerator(name: "RTSPREQ_PLAY", value: 5)
!382 = !DIEnumerator(name: "RTSPREQ_PAUSE", value: 6)
!383 = !DIEnumerator(name: "RTSPREQ_TEARDOWN", value: 7)
!384 = !DIEnumerator(name: "RTSPREQ_GET_PARAMETER", value: 8)
!385 = !DIEnumerator(name: "RTSPREQ_SET_PARAMETER", value: 9)
!386 = !DIEnumerator(name: "RTSPREQ_RECORD", value: 10)
!387 = !DIEnumerator(name: "RTSPREQ_RECEIVE", value: 11)
!388 = !DIEnumerator(name: "RTSPREQ_LAST", value: 12)
!389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !390, line: 30, size: 32, align: 32, elements: !391)
!390 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/wildcard.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!391 = !{!392, !393, !394, !395, !396, !397, !398, !399}
!392 = !DIEnumerator(name: "CURLWC_CLEAR", value: 0)
!393 = !DIEnumerator(name: "CURLWC_INIT", value: 1)
!394 = !DIEnumerator(name: "CURLWC_MATCHING", value: 2)
!395 = !DIEnumerator(name: "CURLWC_DOWNLOADING", value: 3)
!396 = !DIEnumerator(name: "CURLWC_CLEAN", value: 4)
!397 = !DIEnumerator(name: "CURLWC_SKIP", value: 5)
!398 = !DIEnumerator(name: "CURLWC_ERROR", value: 6)
!399 = !DIEnumerator(name: "CURLWC_DONE", value: 7)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 2222, size: 32, align: 32, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413}
!402 = !DIEnumerator(name: "CURLSSLBACKEND_NONE", value: 0)
!403 = !DIEnumerator(name: "CURLSSLBACKEND_OPENSSL", value: 1)
!404 = !DIEnumerator(name: "CURLSSLBACKEND_GNUTLS", value: 2)
!405 = !DIEnumerator(name: "CURLSSLBACKEND_NSS", value: 3)
!406 = !DIEnumerator(name: "CURLSSLBACKEND_OBSOLETE4", value: 4)
!407 = !DIEnumerator(name: "CURLSSLBACKEND_GSKIT", value: 5)
!408 = !DIEnumerator(name: "CURLSSLBACKEND_POLARSSL", value: 6)
!409 = !DIEnumerator(name: "CURLSSLBACKEND_CYASSL", value: 7)
!410 = !DIEnumerator(name: "CURLSSLBACKEND_SCHANNEL", value: 8)
!411 = !DIEnumerator(name: "CURLSSLBACKEND_DARWINSSL", value: 9)
!412 = !DIEnumerator(name: "CURLSSLBACKEND_AXTLS", value: 10)
!413 = !DIEnumerator(name: "CURLSSLBACKEND_MBEDTLS", value: 11)
!414 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !415, line: 31, size: 32, align: 32, elements: !416)
!415 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http_chunks.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424}
!417 = !DIEnumerator(name: "CHUNK_HEX", value: 0)
!418 = !DIEnumerator(name: "CHUNK_LF", value: 1)
!419 = !DIEnumerator(name: "CHUNK_DATA", value: 2)
!420 = !DIEnumerator(name: "CHUNK_POSTLF", value: 3)
!421 = !DIEnumerator(name: "CHUNK_STOP", value: 4)
!422 = !DIEnumerator(name: "CHUNK_TRAILER", value: 5)
!423 = !DIEnumerator(name: "CHUNK_TRAILER_CR", value: 6)
!424 = !DIEnumerator(name: "CHUNK_TRAILER_POSTCR", value: 7)
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 267, size: 32, align: 32, elements: !426)
!426 = !{!427, !428, !429}
!427 = !DIEnumerator(name: "ssl_connection_none", value: 0)
!428 = !DIEnumerator(name: "ssl_connection_negotiating", value: 1)
!429 = !DIEnumerator(name: "ssl_connection_complete", value: 2)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 258, size: 32, align: 32, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437}
!432 = !DIEnumerator(name: "ssl_connect_1", value: 0)
!433 = !DIEnumerator(name: "ssl_connect_2", value: 1)
!434 = !DIEnumerator(name: "ssl_connect_2_reading", value: 2)
!435 = !DIEnumerator(name: "ssl_connect_2_writing", value: 3)
!436 = !DIEnumerator(name: "ssl_connect_3", value: 4)
!437 = !DIEnumerator(name: "ssl_connect_done", value: 5)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !332, line: 42, size: 32, align: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475}
!440 = !DIEnumerator(name: "FTP_STOP", value: 0)
!441 = !DIEnumerator(name: "FTP_WAIT220", value: 1)
!442 = !DIEnumerator(name: "FTP_AUTH", value: 2)
!443 = !DIEnumerator(name: "FTP_USER", value: 3)
!444 = !DIEnumerator(name: "FTP_PASS", value: 4)
!445 = !DIEnumerator(name: "FTP_ACCT", value: 5)
!446 = !DIEnumerator(name: "FTP_PBSZ", value: 6)
!447 = !DIEnumerator(name: "FTP_PROT", value: 7)
!448 = !DIEnumerator(name: "FTP_CCC", value: 8)
!449 = !DIEnumerator(name: "FTP_PWD", value: 9)
!450 = !DIEnumerator(name: "FTP_SYST", value: 10)
!451 = !DIEnumerator(name: "FTP_NAMEFMT", value: 11)
!452 = !DIEnumerator(name: "FTP_QUOTE", value: 12)
!453 = !DIEnumerator(name: "FTP_RETR_PREQUOTE", value: 13)
!454 = !DIEnumerator(name: "FTP_STOR_PREQUOTE", value: 14)
!455 = !DIEnumerator(name: "FTP_POSTQUOTE", value: 15)
!456 = !DIEnumerator(name: "FTP_CWD", value: 16)
!457 = !DIEnumerator(name: "FTP_MKD", value: 17)
!458 = !DIEnumerator(name: "FTP_MDTM", value: 18)
!459 = !DIEnumerator(name: "FTP_TYPE", value: 19)
!460 = !DIEnumerator(name: "FTP_LIST_TYPE", value: 20)
!461 = !DIEnumerator(name: "FTP_RETR_TYPE", value: 21)
!462 = !DIEnumerator(name: "FTP_STOR_TYPE", value: 22)
!463 = !DIEnumerator(name: "FTP_SIZE", value: 23)
!464 = !DIEnumerator(name: "FTP_RETR_SIZE", value: 24)
!465 = !DIEnumerator(name: "FTP_STOR_SIZE", value: 25)
!466 = !DIEnumerator(name: "FTP_REST", value: 26)
!467 = !DIEnumerator(name: "FTP_RETR_REST", value: 27)
!468 = !DIEnumerator(name: "FTP_PORT", value: 28)
!469 = !DIEnumerator(name: "FTP_PRET", value: 29)
!470 = !DIEnumerator(name: "FTP_PASV", value: 30)
!471 = !DIEnumerator(name: "FTP_LIST", value: 31)
!472 = !DIEnumerator(name: "FTP_RETR", value: 32)
!473 = !DIEnumerator(name: "FTP_STOR", value: 33)
!474 = !DIEnumerator(name: "FTP_QUIT", value: 34)
!475 = !DIEnumerator(name: "FTP_LAST", value: 35)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !477, line: 31, size: 32, align: 32, elements: !478)
!477 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/imap.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!478 = !{!479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494}
!479 = !DIEnumerator(name: "IMAP_STOP", value: 0)
!480 = !DIEnumerator(name: "IMAP_SERVERGREET", value: 1)
!481 = !DIEnumerator(name: "IMAP_CAPABILITY", value: 2)
!482 = !DIEnumerator(name: "IMAP_STARTTLS", value: 3)
!483 = !DIEnumerator(name: "IMAP_UPGRADETLS", value: 4)
!484 = !DIEnumerator(name: "IMAP_AUTHENTICATE", value: 5)
!485 = !DIEnumerator(name: "IMAP_LOGIN", value: 6)
!486 = !DIEnumerator(name: "IMAP_LIST", value: 7)
!487 = !DIEnumerator(name: "IMAP_SELECT", value: 8)
!488 = !DIEnumerator(name: "IMAP_FETCH", value: 9)
!489 = !DIEnumerator(name: "IMAP_FETCH_FINAL", value: 10)
!490 = !DIEnumerator(name: "IMAP_APPEND", value: 11)
!491 = !DIEnumerator(name: "IMAP_APPEND_FINAL", value: 12)
!492 = !DIEnumerator(name: "IMAP_SEARCH", value: 13)
!493 = !DIEnumerator(name: "IMAP_LOGOUT", value: 14)
!494 = !DIEnumerator(name: "IMAP_LAST", value: 15)
!495 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !496, line: 58, size: 32, align: 32, elements: !497)
!496 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_sasl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!497 = !{!498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514}
!498 = !DIEnumerator(name: "SASL_STOP", value: 0)
!499 = !DIEnumerator(name: "SASL_PLAIN", value: 1)
!500 = !DIEnumerator(name: "SASL_LOGIN", value: 2)
!501 = !DIEnumerator(name: "SASL_LOGIN_PASSWD", value: 3)
!502 = !DIEnumerator(name: "SASL_EXTERNAL", value: 4)
!503 = !DIEnumerator(name: "SASL_CRAMMD5", value: 5)
!504 = !DIEnumerator(name: "SASL_DIGESTMD5", value: 6)
!505 = !DIEnumerator(name: "SASL_DIGESTMD5_RESP", value: 7)
!506 = !DIEnumerator(name: "SASL_NTLM", value: 8)
!507 = !DIEnumerator(name: "SASL_NTLM_TYPE2MSG", value: 9)
!508 = !DIEnumerator(name: "SASL_GSSAPI", value: 10)
!509 = !DIEnumerator(name: "SASL_GSSAPI_TOKEN", value: 11)
!510 = !DIEnumerator(name: "SASL_GSSAPI_NO_DATA", value: 12)
!511 = !DIEnumerator(name: "SASL_OAUTH2", value: 13)
!512 = !DIEnumerator(name: "SASL_OAUTH2_RESP", value: 14)
!513 = !DIEnumerator(name: "SASL_CANCEL", value: 15)
!514 = !DIEnumerator(name: "SASL_FINAL", value: 16)
!515 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !516, line: 31, size: 32, align: 32, elements: !517)
!516 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pop3.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!517 = !{!518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIEnumerator(name: "POP3_STOP", value: 0)
!519 = !DIEnumerator(name: "POP3_SERVERGREET", value: 1)
!520 = !DIEnumerator(name: "POP3_CAPA", value: 2)
!521 = !DIEnumerator(name: "POP3_STARTTLS", value: 3)
!522 = !DIEnumerator(name: "POP3_UPGRADETLS", value: 4)
!523 = !DIEnumerator(name: "POP3_AUTH", value: 5)
!524 = !DIEnumerator(name: "POP3_APOP", value: 6)
!525 = !DIEnumerator(name: "POP3_USER", value: 7)
!526 = !DIEnumerator(name: "POP3_PASS", value: 8)
!527 = !DIEnumerator(name: "POP3_COMMAND", value: 9)
!528 = !DIEnumerator(name: "POP3_QUIT", value: 10)
!529 = !DIEnumerator(name: "POP3_LAST", value: 11)
!530 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !531, line: 31, size: 32, align: 32, elements: !532)
!531 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smtp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!532 = !{!533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546}
!533 = !DIEnumerator(name: "SMTP_STOP", value: 0)
!534 = !DIEnumerator(name: "SMTP_SERVERGREET", value: 1)
!535 = !DIEnumerator(name: "SMTP_EHLO", value: 2)
!536 = !DIEnumerator(name: "SMTP_HELO", value: 3)
!537 = !DIEnumerator(name: "SMTP_STARTTLS", value: 4)
!538 = !DIEnumerator(name: "SMTP_UPGRADETLS", value: 5)
!539 = !DIEnumerator(name: "SMTP_AUTH", value: 6)
!540 = !DIEnumerator(name: "SMTP_COMMAND", value: 7)
!541 = !DIEnumerator(name: "SMTP_MAIL", value: 8)
!542 = !DIEnumerator(name: "SMTP_RCPT", value: 9)
!543 = !DIEnumerator(name: "SMTP_DATA", value: 10)
!544 = !DIEnumerator(name: "SMTP_POSTDATA", value: 11)
!545 = !DIEnumerator(name: "SMTP_QUIT", value: 12)
!546 = !DIEnumerator(name: "SMTP_LAST", value: 13)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "smb_conn_state", file: !548, line: 25, size: 32, align: 32, elements: !549)
!548 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smb.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!549 = !{!550, !551, !552, !553, !554}
!550 = !DIEnumerator(name: "SMB_NOT_CONNECTED", value: 0)
!551 = !DIEnumerator(name: "SMB_CONNECTING", value: 1)
!552 = !DIEnumerator(name: "SMB_NEGOTIATE", value: 2)
!553 = !DIEnumerator(name: "SMB_SETUP", value: 3)
!554 = !DIEnumerator(name: "SMB_CONNECTED", value: 4)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !556, file: !130, line: 1133, size: 32, align: 32, elements: !1712)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectdata", file: !130, line: 895, size: 13440, align: 64, elements: !557)
!557 = !{!558, !1293, !1305, !1306, !1307, !1308, !1309, !1335, !1336, !1340, !1341, !1342, !1343, !1350, !1351, !1352, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1379, !1380, !1382, !1389, !1395, !1404, !1405, !1406, !1407, !1408, !1444, !1445, !1446, !1447, !1501, !1502, !1503, !1504, !1505, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1531, !1532, !1533, !1534, !1697, !1698, !1699, !1700, !1701, !1702, !1704, !1711}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !556, file: !130, line: 899, baseType: !559, size: 64, align: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64, align: 64)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_easy", file: !130, line: 1801, size: 160192, align: 64, elements: !561)
!561 = !{!562, !563, !564, !566, !568, !570, !586, !590, !591, !592, !658, !659, !740, !741, !1106, !1115, !1116, !1152, !1244, !1256, !1286, !1292}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !560, file: !130, line: 1803, baseType: !559, size: 64, align: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !560, file: !130, line: 1804, baseType: !559, size: 64, align: 64, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "easy_conn", scope: !560, file: !130, line: 1806, baseType: !565, size: 64, align: 64, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64, align: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !560, file: !130, line: 1808, baseType: !567, size: 32, align: 32, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMstate", file: !101, line: 59, baseType: !100)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !560, file: !130, line: 1809, baseType: !569, size: 32, align: 32, offset: 224)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLcode", file: !4, line: 561, baseType: !3)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !560, file: !130, line: 1811, baseType: !571, size: 192, align: 64, offset: 256)
!571 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_message", file: !101, line: 27, size: 192, align: 64, elements: !572)
!572 = !{!573}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "extmsg", scope: !571, file: !101, line: 29, baseType: !574, size: 192, align: 64)
!574 = !DICompositeType(tag: DW_TAG_structure_type, name: "CURLMsg", file: !124, line: 93, size: 192, align: 64, elements: !575)
!575 = !{!576, !578, !581}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !574, file: !124, line: 94, baseType: !577, size: 32, align: 32)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMSG", file: !124, line: 91, baseType: !123)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "easy_handle", scope: !574, file: !124, line: 95, baseType: !579, size: 64, align: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64, align: 64)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURL", file: !4, line: 100, baseType: !560)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !574, file: !124, line: 99, baseType: !582, size: 64, align: 64, offset: 128)
!582 = !DICompositeType(tag: DW_TAG_union_type, scope: !574, file: !124, line: 96, size: 64, align: 64, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "whatever", scope: !582, file: !124, line: 97, baseType: !148, size: 64, align: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !582, file: !124, line: 98, baseType: !569, size: 32, align: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "sockets", scope: !560, file: !130, line: 1817, baseType: !587, size: 160, align: 32, offset: 448)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 160, align: 32, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 5)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "numsocks", scope: !560, file: !130, line: 1818, baseType: !177, size: 32, align: 32, offset: 608)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "dns", scope: !560, file: !130, line: 1820, baseType: !131, size: 128, align: 64, offset: 640)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !560, file: !130, line: 1821, baseType: !593, size: 64, align: 64, offset: 768)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64, align: 64)
!594 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_multi", file: !101, line: 70, size: 3840, align: 64, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !608, !609, !616, !617, !618, !629, !630, !631, !632, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !656, !657}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !594, file: !101, line: 73, baseType: !206, size: 64, align: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "easyp", scope: !594, file: !101, line: 76, baseType: !559, size: 64, align: 64, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "easylp", scope: !594, file: !101, line: 77, baseType: !559, size: 64, align: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "num_easy", scope: !594, file: !101, line: 79, baseType: !177, size: 32, align: 32, offset: 192)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "num_alive", scope: !594, file: !101, line: 80, baseType: !177, size: 32, align: 32, offset: 224)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "msglist", scope: !594, file: !101, line: 83, baseType: !140, size: 256, align: 64, offset: 256)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !594, file: !101, line: 85, baseType: !140, size: 256, align: 64, offset: 512)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "socket_cb", scope: !594, file: !101, line: 89, baseType: !604, size: 64, align: 64, offset: 768)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_callback", file: !124, line: 268, baseType: !605)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64, align: 64)
!606 = !DISubroutineType(types: !607)
!607 = !{!177, !579, !263, !177, !148, !148}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "socket_userp", scope: !594, file: !101, line: 90, baseType: !148, size: 64, align: 64, offset: 832)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "push_cb", scope: !594, file: !101, line: 93, baseType: !610, size: 64, align: 64, offset: 896)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_push_callback", file: !124, line: 429, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64, align: 64)
!612 = !DISubroutineType(types: !613)
!613 = !{!177, !579, !579, !158, !614, !148}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64, align: 64)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_pushheaders", file: !124, line: 422, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "push_userp", scope: !594, file: !101, line: 94, baseType: !148, size: 64, align: 64, offset: 960)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !594, file: !101, line: 97, baseType: !135, size: 384, align: 64, offset: 1024)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "timetree", scope: !594, file: !101, line: 101, baseType: !619, size: 64, align: 64, offset: 1408)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64, align: 64)
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_tree", file: !621, line: 26, size: 448, align: 64, elements: !622)
!621 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/splay.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!622 = !{!623, !624, !625, !626, !627, !628}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !620, file: !621, line: 27, baseType: !619, size: 64, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "larger", scope: !620, file: !621, line: 28, baseType: !619, size: 64, align: 64, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "samen", scope: !620, file: !621, line: 29, baseType: !619, size: 64, align: 64, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "samep", scope: !620, file: !621, line: 30, baseType: !619, size: 64, align: 64, offset: 192)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !620, file: !621, line: 31, baseType: !216, size: 128, align: 64, offset: 256)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !620, file: !621, line: 32, baseType: !148, size: 64, align: 64, offset: 384)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "sockhash", scope: !594, file: !101, line: 106, baseType: !135, size: 384, align: 64, offset: 1472)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining", scope: !594, file: !101, line: 109, baseType: !206, size: 64, align: 64, offset: 1856)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "recheckstate", scope: !594, file: !101, line: 111, baseType: !226, size: 8, align: 8, offset: 1920)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !594, file: !101, line: 114, baseType: !633, size: 640, align: 64, offset: 1984)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "conncache", file: !634, line: 26, size: 640, align: 64, elements: !635)
!634 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/conncache.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!635 = !{!636, !637, !638, !639}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !633, file: !634, line: 27, baseType: !135, size: 384, align: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !633, file: !634, line: 28, baseType: !158, size: 64, align: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "next_connection_id", scope: !633, file: !634, line: 29, baseType: !206, size: 64, align: 64, offset: 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "last_cleanup", scope: !633, file: !634, line: 30, baseType: !216, size: 128, align: 64, offset: 512)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "closure_handle", scope: !594, file: !101, line: 118, baseType: !559, size: 64, align: 64, offset: 2624)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !594, file: !101, line: 120, baseType: !206, size: 64, align: 64, offset: 2688)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_connections", scope: !594, file: !101, line: 123, baseType: !206, size: 64, align: 64, offset: 2752)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_connections", scope: !594, file: !101, line: 126, baseType: !206, size: 64, align: 64, offset: 2816)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "max_pipeline_length", scope: !594, file: !101, line: 129, baseType: !206, size: 64, align: 64, offset: 2880)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "content_length_penalty_size", scope: !594, file: !101, line: 132, baseType: !206, size: 64, align: 64, offset: 2944)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_length_penalty_size", scope: !594, file: !101, line: 137, baseType: !206, size: 64, align: 64, offset: 3008)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_site_bl", scope: !594, file: !101, line: 141, baseType: !140, size: 256, align: 64, offset: 3072)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_server_bl", scope: !594, file: !101, line: 144, baseType: !140, size: 256, align: 64, offset: 3328)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "timer_cb", scope: !594, file: !101, line: 148, baseType: !650, size: 64, align: 64, offset: 3584)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_multi_timer_callback", file: !124, line: 285, baseType: !651)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64, align: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!177, !654, !206, !148}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64, align: 64)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLM", file: !124, line: 56, baseType: !594)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "timer_userp", scope: !594, file: !101, line: 149, baseType: !148, size: 64, align: 64, offset: 3648)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "timer_lastcall", scope: !594, file: !101, line: 150, baseType: !216, size: 128, align: 64, offset: 3712)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "multi_easy", scope: !560, file: !130, line: 1824, baseType: !593, size: 64, align: 64, offset: 832)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "share", scope: !560, file: !130, line: 1827, baseType: !660, size: 64, align: 64, offset: 896)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64, align: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_share", file: !662, line: 39, size: 896, align: 64, elements: !663)
!662 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/share.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!663 = !{!664, !666, !668, !675, !680, !681, !682, !709, !738, !739}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !661, file: !662, line: 40, baseType: !665, size: 32, align: 32)
!665 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !661, file: !662, line: 41, baseType: !667, size: 32, align: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !665)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "lockfunc", scope: !661, file: !662, line: 43, baseType: !669, size: 64, align: 64, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_function", file: !4, line: 2365, baseType: !670)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64, align: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !579, !673, !674, !148}
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_data", file: !4, line: 2355, baseType: !185)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_access", file: !4, line: 2363, baseType: !194)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "unlockfunc", scope: !661, file: !662, line: 44, baseType: !676, size: 64, align: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_unlock_function", file: !4, line: 2369, baseType: !677)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64, align: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{null, !579, !673, !148}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "clientdata", scope: !661, file: !662, line: 45, baseType: !148, size: 64, align: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !661, file: !662, line: 47, baseType: !135, size: 384, align: 64, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !661, file: !662, line: 49, baseType: !683, size: 64, align: 64, offset: 640)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64, align: 64)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "CookieInfo", file: !685, line: 48, size: 320, align: 64, elements: !686)
!685 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/cookie.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!686 = !{!687, !705, !706, !707, !708}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !684, file: !685, line: 50, baseType: !688, size: 64, align: 64)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64, align: 64)
!689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cookie", file: !685, line: 28, size: 768, align: 64, elements: !690)
!690 = !{!691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !685, line: 29, baseType: !688, size: 64, align: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !689, file: !685, line: 30, baseType: !230, size: 64, align: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !689, file: !685, line: 31, baseType: !230, size: 64, align: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !689, file: !685, line: 32, baseType: !230, size: 64, align: 64, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "spath", scope: !689, file: !685, line: 33, baseType: !230, size: 64, align: 64, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !689, file: !685, line: 34, baseType: !230, size: 64, align: 64, offset: 320)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !689, file: !685, line: 35, baseType: !204, size: 64, align: 64, offset: 384)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "expirestr", scope: !689, file: !685, line: 36, baseType: !230, size: 64, align: 64, offset: 448)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "tailmatch", scope: !689, file: !685, line: 37, baseType: !226, size: 8, align: 8, offset: 512)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !689, file: !685, line: 40, baseType: !230, size: 64, align: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "maxage", scope: !689, file: !685, line: 41, baseType: !230, size: 64, align: 64, offset: 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "secure", scope: !689, file: !685, line: 43, baseType: !226, size: 8, align: 8, offset: 704)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "livecookie", scope: !689, file: !685, line: 44, baseType: !226, size: 8, align: 8, offset: 712)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "httponly", scope: !689, file: !685, line: 45, baseType: !226, size: 8, align: 8, offset: 720)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !684, file: !685, line: 52, baseType: !230, size: 64, align: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !684, file: !685, line: 53, baseType: !226, size: 8, align: 8, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "numcookies", scope: !684, file: !685, line: 54, baseType: !206, size: 64, align: 64, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "newsession", scope: !684, file: !685, line: 55, baseType: !226, size: 8, align: 8, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "sslsession", scope: !661, file: !662, line: 52, baseType: !710, size: 64, align: 64, offset: 704)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64, align: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_ssl_session", file: !130, line: 397, size: 1088, align: 64, elements: !712)
!712 = !{!713, !714, !715, !718, !719, !720, !721, !722, !723}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !711, file: !130, line: 398, baseType: !230, size: 64, align: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !711, file: !130, line: 399, baseType: !230, size: 64, align: 64, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !711, file: !130, line: 400, baseType: !716, size: 64, align: 64, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64, align: 64)
!717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !711, file: !130, line: 401, baseType: !148, size: 64, align: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "idsize", scope: !711, file: !130, line: 402, baseType: !158, size: 64, align: 64, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "age", scope: !711, file: !130, line: 403, baseType: !206, size: 64, align: 64, offset: 320)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !711, file: !130, line: 404, baseType: !177, size: 32, align: 32, offset: 384)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !711, file: !130, line: 405, baseType: !177, size: 32, align: 32, offset: 416)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !711, file: !130, line: 406, baseType: !724, size: 640, align: 64, offset: 448)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_primary_config", file: !130, line: 351, size: 640, align: 64, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !724, file: !130, line: 352, baseType: !206, size: 64, align: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "version_max", scope: !724, file: !130, line: 353, baseType: !206, size: 64, align: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "verifypeer", scope: !724, file: !130, line: 354, baseType: !226, size: 8, align: 8, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "verifyhost", scope: !724, file: !130, line: 355, baseType: !226, size: 8, align: 8, offset: 136)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "verifystatus", scope: !724, file: !130, line: 356, baseType: !226, size: 8, align: 8, offset: 144)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "CApath", scope: !724, file: !130, line: 357, baseType: !230, size: 64, align: 64, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "CAfile", scope: !724, file: !130, line: 358, baseType: !230, size: 64, align: 64, offset: 256)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "clientcert", scope: !724, file: !130, line: 359, baseType: !230, size: 64, align: 64, offset: 320)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "random_file", scope: !724, file: !130, line: 360, baseType: !230, size: 64, align: 64, offset: 384)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "egdsocket", scope: !724, file: !130, line: 361, baseType: !230, size: 64, align: 64, offset: 448)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list", scope: !724, file: !130, line: 362, baseType: !230, size: 64, align: 64, offset: 512)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !724, file: !130, line: 363, baseType: !226, size: 8, align: 8, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !661, file: !662, line: 53, baseType: !158, size: 64, align: 64, offset: 768)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !661, file: !662, line: 54, baseType: !206, size: 64, align: 64, offset: 832)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !560, file: !130, line: 1828, baseType: !201, size: 2496, align: 64, offset: 960)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !560, file: !130, line: 1829, baseType: !742, size: 13760, align: 64, offset: 3456)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "UserDefined", file: !130, line: 1558, size: 13760, align: 64, elements: !743)
!743 = !{!744, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !819, !820, !821, !822, !827, !828, !829, !831, !832, !833, !839, !844, !850, !856, !862, !863, !886, !887, !892, !893, !894, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !921, !922, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !954, !955, !957, !958, !980, !981, !985, !987, !988, !989, !990, !991, !992, !993, !995, !996, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1037, !1039, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1057, !1058, !1059, !1060, !1061, !1062, !1064, !1065, !1066, !1073, !1078, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1105}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !742, file: !130, line: 1559, baseType: !745, size: 64, align: 64)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64, align: 64)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !747, line: 48, baseType: !748)
!747 = !DIFile(filename: "/usr/include/stdio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !749, line: 245, size: 1728, align: 64, elements: !750)
!749 = !DIFile(filename: "/usr/include/libio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !771, !772, !773, !774, !776, !778, !780, !784, !787, !789, !790, !791, !792, !793, !794, !795}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !748, file: !749, line: 246, baseType: !177, size: 32, align: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !748, file: !749, line: 251, baseType: !230, size: 64, align: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !748, file: !749, line: 252, baseType: !230, size: 64, align: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !748, file: !749, line: 253, baseType: !230, size: 64, align: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !748, file: !749, line: 254, baseType: !230, size: 64, align: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !748, file: !749, line: 255, baseType: !230, size: 64, align: 64, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !748, file: !749, line: 256, baseType: !230, size: 64, align: 64, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !748, file: !749, line: 257, baseType: !230, size: 64, align: 64, offset: 448)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !748, file: !749, line: 258, baseType: !230, size: 64, align: 64, offset: 512)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !748, file: !749, line: 260, baseType: !230, size: 64, align: 64, offset: 576)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !748, file: !749, line: 261, baseType: !230, size: 64, align: 64, offset: 640)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !748, file: !749, line: 262, baseType: !230, size: 64, align: 64, offset: 704)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !748, file: !749, line: 264, baseType: !764, size: 64, align: 64, offset: 768)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64, align: 64)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !749, line: 160, size: 192, align: 64, elements: !766)
!766 = !{!767, !768, !770}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !765, file: !749, line: 161, baseType: !764, size: 64, align: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !765, file: !749, line: 162, baseType: !769, size: 64, align: 64, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64, align: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !765, file: !749, line: 166, baseType: !177, size: 32, align: 32, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !748, file: !749, line: 266, baseType: !769, size: 64, align: 64, offset: 832)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !748, file: !749, line: 268, baseType: !177, size: 32, align: 32, offset: 896)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !748, file: !749, line: 272, baseType: !177, size: 32, align: 32, offset: 928)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !748, file: !749, line: 274, baseType: !775, size: 64, align: 64, offset: 960)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !221, line: 131, baseType: !206)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !748, file: !749, line: 278, baseType: !777, size: 16, align: 16, offset: 1024)
!777 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !748, file: !749, line: 279, baseType: !779, size: 8, align: 8, offset: 1040)
!779 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !748, file: !749, line: 280, baseType: !781, size: 8, align: 8, offset: 1048)
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 8, align: 8, elements: !782)
!782 = !{!783}
!783 = !DISubrange(count: 1)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !748, file: !749, line: 284, baseType: !785, size: 64, align: 64, offset: 1088)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64, align: 64)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !749, line: 154, baseType: null)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !748, file: !749, line: 293, baseType: !788, size: 64, align: 64, offset: 1152)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !221, line: 132, baseType: !206)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !748, file: !749, line: 302, baseType: !148, size: 64, align: 64, offset: 1216)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !748, file: !749, line: 303, baseType: !148, size: 64, align: 64, offset: 1280)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !748, file: !749, line: 304, baseType: !148, size: 64, align: 64, offset: 1344)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !748, file: !749, line: 305, baseType: !148, size: 64, align: 64, offset: 1408)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !748, file: !749, line: 306, baseType: !158, size: 64, align: 64, offset: 1472)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !748, file: !749, line: 308, baseType: !177, size: 32, align: 32, offset: 1536)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !748, file: !749, line: 310, baseType: !796, size: 160, align: 8, offset: 1568)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 160, align: 8, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 20)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "debugdata", scope: !742, file: !130, line: 1560, baseType: !148, size: 64, align: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuffer", scope: !742, file: !130, line: 1561, baseType: !230, size: 64, align: 64, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "proxyport", scope: !742, file: !130, line: 1562, baseType: !206, size: 64, align: 64, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !742, file: !130, line: 1565, baseType: !148, size: 64, align: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "in_set", scope: !742, file: !130, line: 1566, baseType: !148, size: 64, align: 64, offset: 320)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "writeheader", scope: !742, file: !130, line: 1567, baseType: !148, size: 64, align: 64, offset: 384)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_out", scope: !742, file: !130, line: 1568, baseType: !148, size: 64, align: 64, offset: 448)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "use_port", scope: !742, file: !130, line: 1569, baseType: !206, size: 64, align: 64, offset: 512)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "httpauth", scope: !742, file: !130, line: 1570, baseType: !160, size: 64, align: 64, offset: 576)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauth", scope: !742, file: !130, line: 1571, baseType: !160, size: 64, align: 64, offset: 640)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "followlocation", scope: !742, file: !130, line: 1572, baseType: !206, size: 64, align: 64, offset: 704)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "maxredirs", scope: !742, file: !130, line: 1573, baseType: !206, size: 64, align: 64, offset: 768)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "keep_post", scope: !742, file: !130, line: 1576, baseType: !177, size: 32, align: 32, offset: 832)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "free_referer", scope: !742, file: !130, line: 1578, baseType: !226, size: 8, align: 8, offset: 864)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "postfields", scope: !742, file: !130, line: 1580, baseType: !148, size: 64, align: 64, offset: 896)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !742, file: !130, line: 1581, baseType: !815, size: 64, align: 64, offset: 960)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_seek_callback", file: !4, line: 324, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64, align: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!177, !148, !204, !177}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "postfieldsize", scope: !742, file: !130, line: 1582, baseType: !204, size: 64, align: 64, offset: 1024)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !742, file: !130, line: 1585, baseType: !777, size: 16, align: 16, offset: 1088)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !742, file: !130, line: 1586, baseType: !177, size: 32, align: 32, offset: 1120)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_func", scope: !742, file: !130, line: 1588, baseType: !823, size: 64, align: 64, offset: 1152)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_write_callback", file: !4, line: 223, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64, align: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!158, !230, !158, !158, !148}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_header", scope: !742, file: !130, line: 1589, baseType: !823, size: 64, align: 64, offset: 1216)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_rtp", scope: !742, file: !130, line: 1590, baseType: !823, size: 64, align: 64, offset: 1280)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func_set", scope: !742, file: !130, line: 1591, baseType: !830, size: 64, align: 64, offset: 1344)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_read_callback", file: !4, line: 335, baseType: !824)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "is_fread_set", scope: !742, file: !130, line: 1592, baseType: !177, size: 32, align: 32, offset: 1408)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "is_fwrite_set", scope: !742, file: !130, line: 1593, baseType: !177, size: 32, align: 32, offset: 1440)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "fprogress", scope: !742, file: !130, line: 1594, baseType: !834, size: 64, align: 64, offset: 1472)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_progress_callback", file: !4, line: 183, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64, align: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!177, !148, !838, !838, !838, !838}
!838 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "fxferinfo", scope: !742, file: !130, line: 1595, baseType: !840, size: 64, align: 64, offset: 1536)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_xferinfo_callback", file: !4, line: 191, baseType: !841)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64, align: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!177, !148, !204, !204, !204, !204}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "fdebug", scope: !742, file: !130, line: 1596, baseType: !845, size: 64, align: 64, offset: 1600)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_debug_callback", file: !4, line: 420, baseType: !846)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64, align: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!177, !579, !849, !230, !158, !148}
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_infotype", file: !4, line: 418, baseType: !284)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_func", scope: !742, file: !130, line: 1597, baseType: !851, size: 64, align: 64, offset: 1664)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ioctl_callback", file: !4, line: 388, baseType: !852)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64, align: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{!855, !579, !177, !148}
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlioerr", file: !4, line: 380, baseType: !294)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "fsockopt", scope: !742, file: !130, line: 1598, baseType: !857, size: 64, align: 64, offset: 1728)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sockopt_callback", file: !4, line: 353, baseType: !858)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64, align: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!177, !148, !263, !861}
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlsocktype", file: !4, line: 344, baseType: !300)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "sockopt_client", scope: !742, file: !130, line: 1599, baseType: !148, size: 64, align: 64, offset: 1792)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "fopensocket", scope: !742, file: !130, line: 1600, baseType: !864, size: 64, align: 64, offset: 1856)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_opensocket_callback", file: !4, line: 368, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64, align: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!263, !148, !861, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64, align: 64)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_sockaddr", file: !4, line: 357, size: 256, align: 32, elements: !870)
!870 = !{!871, !872, !873, !874, !875}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !869, file: !4, line: 358, baseType: !177, size: 32, align: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !869, file: !4, line: 359, baseType: !177, size: 32, align: 32, offset: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !869, file: !4, line: 360, baseType: !177, size: 32, align: 32, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "addrlen", scope: !869, file: !4, line: 361, baseType: !665, size: 32, align: 32, offset: 96)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !869, file: !4, line: 364, baseType: !876, size: 128, align: 16, offset: 128)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !877, line: 149, size: 128, align: 16, elements: !878)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!878 = !{!879, !882}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !876, file: !877, line: 151, baseType: !880, size: 16, align: 16)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !881, line: 28, baseType: !777)
!881 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!882 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !876, file: !877, line: 152, baseType: !883, size: 112, align: 8, offset: 16)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 112, align: 8, elements: !884)
!884 = !{!885}
!885 = !DISubrange(count: 14)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "opensocket_client", scope: !742, file: !130, line: 1603, baseType: !148, size: 64, align: 64, offset: 1920)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !742, file: !130, line: 1604, baseType: !888, size: 64, align: 64, offset: 1984)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_closesocket_callback", file: !4, line: 373, baseType: !889)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64, align: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{!177, !148, !263}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !742, file: !130, line: 1606, baseType: !148, size: 64, align: 64, offset: 2048)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !742, file: !130, line: 1608, baseType: !148, size: 64, align: 64, offset: 2112)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "convfromnetwork", scope: !742, file: !130, line: 1611, baseType: !895, size: 64, align: 64, offset: 2176)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_conv_callback", file: !4, line: 637, baseType: !896)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64, align: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!569, !230, !158}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "convtonetwork", scope: !742, file: !130, line: 1613, baseType: !895, size: 64, align: 64, offset: 2240)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "convfromutf8", scope: !742, file: !130, line: 1615, baseType: !895, size: 64, align: 64, offset: 2304)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "progress_client", scope: !742, file: !130, line: 1617, baseType: !148, size: 64, align: 64, offset: 2368)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_client", scope: !742, file: !130, line: 1618, baseType: !148, size: 64, align: 64, offset: 2432)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !742, file: !130, line: 1619, baseType: !206, size: 64, align: 64, offset: 2496)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "connecttimeout", scope: !742, file: !130, line: 1620, baseType: !206, size: 64, align: 64, offset: 2560)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "accepttimeout", scope: !742, file: !130, line: 1621, baseType: !206, size: 64, align: 64, offset: 2624)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "server_response_timeout", scope: !742, file: !130, line: 1622, baseType: !206, size: 64, align: 64, offset: 2688)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_blksize", scope: !742, file: !130, line: 1623, baseType: !206, size: 64, align: 64, offset: 2752)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_no_options", scope: !742, file: !130, line: 1624, baseType: !226, size: 8, align: 8, offset: 2816)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "filesize", scope: !742, file: !130, line: 1625, baseType: !204, size: 64, align: 64, offset: 2880)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_limit", scope: !742, file: !130, line: 1626, baseType: !206, size: 64, align: 64, offset: 2944)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_time", scope: !742, file: !130, line: 1627, baseType: !206, size: 64, align: 64, offset: 3008)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_speed", scope: !742, file: !130, line: 1628, baseType: !204, size: 64, align: 64, offset: 3072)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_speed", scope: !742, file: !130, line: 1629, baseType: !204, size: 64, align: 64, offset: 3136)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "set_resume_from", scope: !742, file: !130, line: 1631, baseType: !204, size: 64, align: 64, offset: 3200)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !742, file: !130, line: 1632, baseType: !916, size: 64, align: 64, offset: 3264)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!917 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_slist", file: !4, line: 2176, size: 128, align: 64, elements: !918)
!918 = !{!919, !920}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !917, file: !4, line: 2177, baseType: !230, size: 64, align: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !917, file: !4, line: 2178, baseType: !916, size: 64, align: 64, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "proxyheaders", scope: !742, file: !130, line: 1633, baseType: !916, size: 64, align: 64, offset: 3328)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "httppost", scope: !742, file: !130, line: 1634, baseType: !923, size: 64, align: 64, offset: 3392)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_httppost", file: !4, line: 137, size: 896, align: 64, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !924, file: !4, line: 138, baseType: !923, size: 64, align: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !924, file: !4, line: 139, baseType: !230, size: 64, align: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "namelength", scope: !924, file: !4, line: 140, baseType: !206, size: 64, align: 64, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !924, file: !4, line: 141, baseType: !230, size: 64, align: 64, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "contentslength", scope: !924, file: !4, line: 142, baseType: !206, size: 64, align: 64, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !924, file: !4, line: 144, baseType: !230, size: 64, align: 64, offset: 320)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "bufferlength", scope: !924, file: !4, line: 145, baseType: !206, size: 64, align: 64, offset: 384)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !924, file: !4, line: 146, baseType: !230, size: 64, align: 64, offset: 448)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "contentheader", scope: !924, file: !4, line: 147, baseType: !916, size: 64, align: 64, offset: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "more", scope: !924, file: !4, line: 148, baseType: !923, size: 64, align: 64, offset: 576)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !924, file: !4, line: 151, baseType: !206, size: 64, align: 64, offset: 640)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "showfilename", scope: !924, file: !4, line: 171, baseType: !230, size: 64, align: 64, offset: 704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "userp", scope: !924, file: !4, line: 174, baseType: !148, size: 64, align: 64, offset: 768)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "contentlen", scope: !924, file: !4, line: 176, baseType: !204, size: 64, align: 64, offset: 832)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "sep_headers", scope: !742, file: !130, line: 1635, baseType: !226, size: 8, align: 8, offset: 3456)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "cookiesession", scope: !742, file: !130, line: 1636, baseType: !226, size: 8, align: 8, offset: 3464)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "crlf", scope: !742, file: !130, line: 1637, baseType: !226, size: 8, align: 8, offset: 3472)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !742, file: !130, line: 1638, baseType: !916, size: 64, align: 64, offset: 3520)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "postquote", scope: !742, file: !130, line: 1639, baseType: !916, size: 64, align: 64, offset: 3584)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "prequote", scope: !742, file: !130, line: 1640, baseType: !916, size: 64, align: 64, offset: 3648)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "source_quote", scope: !742, file: !130, line: 1641, baseType: !916, size: 64, align: 64, offset: 3712)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "source_prequote", scope: !742, file: !130, line: 1642, baseType: !916, size: 64, align: 64, offset: 3776)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "source_postquote", scope: !742, file: !130, line: 1644, baseType: !916, size: 64, align: 64, offset: 3840)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "telnet_options", scope: !742, file: !130, line: 1646, baseType: !916, size: 64, align: 64, offset: 3904)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !742, file: !130, line: 1647, baseType: !916, size: 64, align: 64, offset: 3968)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "connect_to", scope: !742, file: !130, line: 1649, baseType: !916, size: 64, align: 64, offset: 4032)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "timecondition", scope: !742, file: !130, line: 1651, baseType: !953, size: 32, align: 32, offset: 4096)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_TimeCond", file: !4, line: 1929, baseType: !305)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "timevalue", scope: !742, file: !130, line: 1652, baseType: !257, size: 64, align: 64, offset: 4160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "httpreq", scope: !742, file: !130, line: 1653, baseType: !956, size: 32, align: 32, offset: 4224)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_HttpReq", file: !130, line: 1249, baseType: !312)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !742, file: !130, line: 1654, baseType: !206, size: 64, align: 64, offset: 4288)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !742, file: !130, line: 1656, baseType: !959, size: 1408, align: 64, offset: 4352)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_config_data", file: !130, line: 366, size: 1408, align: 64, elements: !960)
!960 = !{!961, !962, !963, !964, !965, !966, !967, !972, !973, !974, !975, !976, !977, !978, !979}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !959, file: !130, line: 367, baseType: !724, size: 640, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "enable_beast", scope: !959, file: !130, line: 368, baseType: !226, size: 8, align: 8, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "no_revoke", scope: !959, file: !130, line: 370, baseType: !226, size: 8, align: 8, offset: 648)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "certverifyresult", scope: !959, file: !130, line: 371, baseType: !206, size: 64, align: 64, offset: 704)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "CRLfile", scope: !959, file: !130, line: 372, baseType: !230, size: 64, align: 64, offset: 768)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "issuercert", scope: !959, file: !130, line: 373, baseType: !230, size: 64, align: 64, offset: 832)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctx", scope: !959, file: !130, line: 374, baseType: !968, size: 64, align: 64, offset: 896)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ssl_ctx_callback", file: !4, line: 639, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!569, !579, !148, !148}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctxp", scope: !959, file: !130, line: 375, baseType: !148, size: 64, align: 64, offset: 960)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !959, file: !130, line: 376, baseType: !226, size: 8, align: 8, offset: 1024)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "falsestart", scope: !959, file: !130, line: 377, baseType: !226, size: 8, align: 8, offset: 1032)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !959, file: !130, line: 379, baseType: !230, size: 64, align: 64, offset: 1088)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "cert_type", scope: !959, file: !130, line: 380, baseType: !230, size: 64, align: 64, offset: 1152)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !959, file: !130, line: 381, baseType: !230, size: 64, align: 64, offset: 1216)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !959, file: !130, line: 382, baseType: !230, size: 64, align: 64, offset: 1280)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "key_passwd", scope: !959, file: !130, line: 383, baseType: !230, size: 64, align: 64, offset: 1344)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !742, file: !130, line: 1657, baseType: !959, size: 1408, align: 64, offset: 5760)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "general_ssl", scope: !742, file: !130, line: 1658, baseType: !982, size: 64, align: 64, offset: 7168)
!982 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_general_config", file: !130, line: 392, size: 64, align: 64, elements: !983)
!983 = !{!984}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !982, file: !130, line: 393, baseType: !158, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !742, file: !130, line: 1659, baseType: !986, size: 32, align: 32, offset: 7232)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_proxytype", file: !4, line: 657, baseType: !322)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "dns_cache_timeout", scope: !742, file: !130, line: 1660, baseType: !206, size: 64, align: 64, offset: 7296)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !742, file: !130, line: 1661, baseType: !206, size: 64, align: 64, offset: 7360)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !742, file: !130, line: 1662, baseType: !148, size: 64, align: 64, offset: 7424)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "http200aliases", scope: !742, file: !130, line: 1664, baseType: !916, size: 64, align: 64, offset: 7488)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ipver", scope: !742, file: !130, line: 1666, baseType: !206, size: 64, align: 64, offset: 7552)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "max_filesize", scope: !742, file: !130, line: 1669, baseType: !204, size: 64, align: 64, offset: 7616)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_filemethod", scope: !742, file: !130, line: 1671, baseType: !994, size: 32, align: 32, offset: 7680)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpfile", file: !332, line: 98, baseType: !331)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_create_missing_dirs", scope: !742, file: !130, line: 1673, baseType: !177, size: 32, align: 32, offset: 7712)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc", scope: !742, file: !130, line: 1677, baseType: !997, size: 64, align: 64, offset: 7744)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sshkeycallback", file: !4, line: 739, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!177, !579, !1001, !1001, !343, !148}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_khkey", file: !4, line: 711, size: 192, align: 64, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1003, file: !4, line: 712, baseType: !716, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1003, file: !4, line: 714, baseType: !158, size: 64, align: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1003, file: !4, line: 715, baseType: !337, size: 32, align: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc_userp", scope: !742, file: !130, line: 1678, baseType: !148, size: 64, align: 64, offset: 7808)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "printhost", scope: !742, file: !130, line: 1684, baseType: !226, size: 8, align: 8, offset: 7872)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "get_filetime", scope: !742, file: !130, line: 1685, baseType: !226, size: 8, align: 8, offset: 7880)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_thru_httpproxy", scope: !742, file: !130, line: 1686, baseType: !226, size: 8, align: 8, offset: 7888)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_ascii", scope: !742, file: !130, line: 1687, baseType: !226, size: 8, align: 8, offset: 7896)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_append", scope: !742, file: !130, line: 1688, baseType: !226, size: 8, align: 8, offset: 7904)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_list_only", scope: !742, file: !130, line: 1689, baseType: !226, size: 8, align: 8, offset: 7912)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_port", scope: !742, file: !130, line: 1690, baseType: !226, size: 8, align: 8, offset: 7920)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "hide_progress", scope: !742, file: !130, line: 1691, baseType: !226, size: 8, align: 8, offset: 7928)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "http_fail_on_error", scope: !742, file: !130, line: 1692, baseType: !226, size: 8, align: 8, offset: 7936)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "http_keep_sending_on_error", scope: !742, file: !130, line: 1693, baseType: !226, size: 8, align: 8, offset: 7944)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "http_follow_location", scope: !742, file: !130, line: 1694, baseType: !226, size: 8, align: 8, offset: 7952)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "http_transfer_encoding", scope: !742, file: !130, line: 1695, baseType: !226, size: 8, align: 8, offset: 7960)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "http_disable_hostname_check_before_authentication", scope: !742, file: !130, line: 1696, baseType: !226, size: 8, align: 8, offset: 7968)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "include_header", scope: !742, file: !130, line: 1697, baseType: !226, size: 8, align: 8, offset: 7976)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "http_set_referer", scope: !742, file: !130, line: 1698, baseType: !226, size: 8, align: 8, offset: 7984)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "http_auto_referer", scope: !742, file: !130, line: 1699, baseType: !226, size: 8, align: 8, offset: 7992)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "opt_no_body", scope: !742, file: !130, line: 1700, baseType: !226, size: 8, align: 8, offset: 8000)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !742, file: !130, line: 1701, baseType: !226, size: 8, align: 8, offset: 8008)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "use_netrc", scope: !742, file: !130, line: 1703, baseType: !349, size: 32, align: 32, offset: 8032)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !742, file: !130, line: 1704, baseType: !226, size: 8, align: 8, offset: 8064)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "krb", scope: !742, file: !130, line: 1705, baseType: !226, size: 8, align: 8, offset: 8072)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_forbid", scope: !742, file: !130, line: 1706, baseType: !226, size: 8, align: 8, offset: 8080)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_fresh", scope: !742, file: !130, line: 1707, baseType: !226, size: 8, align: 8, offset: 8088)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !742, file: !130, line: 1708, baseType: !226, size: 8, align: 8, offset: 8096)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !742, file: !130, line: 1709, baseType: !226, size: 8, align: 8, offset: 8104)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_pret", scope: !742, file: !130, line: 1710, baseType: !226, size: 8, align: 8, offset: 8112)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "use_ssl", scope: !742, file: !130, line: 1712, baseType: !1036, size: 32, align: 32, offset: 8128)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_usessl", file: !4, line: 752, baseType: !355)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ftpsslauth", scope: !742, file: !130, line: 1714, baseType: !1038, size: 32, align: 32, offset: 8160)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpauth", file: !4, line: 795, baseType: !362)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_ccc", scope: !742, file: !130, line: 1715, baseType: !1040, size: 32, align: 32, offset: 8192)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpccc", file: !4, line: 787, baseType: !368)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "no_signal", scope: !742, file: !130, line: 1716, baseType: !226, size: 8, align: 8, offset: 8224)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "global_dns_cache", scope: !742, file: !130, line: 1717, baseType: !226, size: 8, align: 8, offset: 8232)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_nodelay", scope: !742, file: !130, line: 1718, baseType: !226, size: 8, align: 8, offset: 8240)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !742, file: !130, line: 1719, baseType: !226, size: 8, align: 8, offset: 8248)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_skip_ip", scope: !742, file: !130, line: 1720, baseType: !226, size: 8, align: 8, offset: 8256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "connect_only", scope: !742, file: !130, line: 1722, baseType: !226, size: 8, align: 8, offset: 8264)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_auth_types", scope: !742, file: !130, line: 1723, baseType: !206, size: 64, align: 64, offset: 8320)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "http_te_skip", scope: !742, file: !130, line: 1724, baseType: !226, size: 8, align: 8, offset: 8384)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "http_ce_skip", scope: !742, file: !130, line: 1726, baseType: !226, size: 8, align: 8, offset: 8392)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "new_file_perms", scope: !742, file: !130, line: 1728, baseType: !206, size: 64, align: 64, offset: 8448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "new_directory_perms", scope: !742, file: !130, line: 1729, baseType: !206, size: 64, align: 64, offset: 8512)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_transfer_mode", scope: !742, file: !130, line: 1730, baseType: !226, size: 8, align: 8, offset: 8576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !742, file: !130, line: 1732, baseType: !1054, size: 3584, align: 64, offset: 8640)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 3584, align: 64, elements: !1055)
!1055 = !{!1056}
!1056 = !DISubrange(count: 56)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !742, file: !130, line: 1733, baseType: !665, size: 32, align: 32, offset: 12224)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_protocols", scope: !742, file: !130, line: 1734, baseType: !206, size: 64, align: 64, offset: 12288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "redir_protocols", scope: !742, file: !130, line: 1735, baseType: !206, size: 64, align: 64, offset: 12352)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "mail_rcpt", scope: !742, file: !130, line: 1739, baseType: !916, size: 64, align: 64, offset: 12416)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "sasl_ir", scope: !742, file: !130, line: 1740, baseType: !226, size: 8, align: 8, offset: 12480)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "rtspreq", scope: !742, file: !130, line: 1742, baseType: !1063, size: 32, align: 32, offset: 12512)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_RtspReq", file: !130, line: 1265, baseType: !374)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !742, file: !130, line: 1743, baseType: !206, size: 64, align: 64, offset: 12544)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "wildcardmatch", scope: !742, file: !130, line: 1744, baseType: !226, size: 8, align: 8, offset: 12608)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_bgn", scope: !742, file: !130, line: 1745, baseType: !1067, size: 64, align: 64, offset: 12672)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_bgn_callback", file: !4, line: 292, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!206, !1071, !148, !177}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_end", scope: !742, file: !130, line: 1747, baseType: !1074, size: 64, align: 64, offset: 12736)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_end_callback", file: !4, line: 306, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!206, !148}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch", scope: !742, file: !130, line: 1749, baseType: !1079, size: 64, align: 64, offset: 12800)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_fnmatch_callback", file: !4, line: 315, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!177, !148, !716, !716}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch_data", scope: !742, file: !130, line: 1751, baseType: !148, size: 64, align: 64, offset: 12864)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "gssapi_delegation", scope: !742, file: !130, line: 1753, baseType: !206, size: 64, align: 64, offset: 12928)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepalive", scope: !742, file: !130, line: 1756, baseType: !226, size: 8, align: 8, offset: 12992)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepidle", scope: !742, file: !130, line: 1757, baseType: !206, size: 64, align: 64, offset: 13056)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepintvl", scope: !742, file: !130, line: 1758, baseType: !206, size: 64, align: 64, offset: 13120)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !742, file: !130, line: 1759, baseType: !226, size: 8, align: 8, offset: 13184)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !742, file: !130, line: 1761, baseType: !158, size: 64, align: 64, offset: 13248)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_npn", scope: !742, file: !130, line: 1763, baseType: !226, size: 8, align: 8, offset: 13312)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_alpn", scope: !742, file: !130, line: 1764, baseType: !226, size: 8, align: 8, offset: 13320)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "path_as_is", scope: !742, file: !130, line: 1765, baseType: !226, size: 8, align: 8, offset: 13328)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pipewait", scope: !742, file: !130, line: 1766, baseType: !226, size: 8, align: 8, offset: 13336)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "expect_100_timeout", scope: !742, file: !130, line: 1768, baseType: !206, size: 64, align: 64, offset: 13376)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_connect_headers", scope: !742, file: !130, line: 1769, baseType: !226, size: 8, align: 8, offset: 13440)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !742, file: !130, line: 1772, baseType: !559, size: 64, align: 64, offset: 13504)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !742, file: !130, line: 1773, baseType: !226, size: 8, align: 8, offset: 13568)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !742, file: !130, line: 1774, baseType: !177, size: 32, align: 32, offset: 13600)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "stream_dependents", scope: !742, file: !130, line: 1776, baseType: !1100, size: 64, align: 64, offset: 13632)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_http2_dep", file: !130, line: 1292, size: 128, align: 64, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1101, file: !130, line: 1293, baseType: !1100, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1101, file: !130, line: 1294, baseType: !559, size: 64, align: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_unix_socket", scope: !742, file: !130, line: 1778, baseType: !226, size: 8, align: 8, offset: 13696)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !560, file: !130, line: 1830, baseType: !1107, size: 384, align: 64, offset: 17216)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicStatic", file: !130, line: 1444, size: 384, align: 64, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1113, !1114}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1107, file: !130, line: 1445, baseType: !230, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "url_alloc", scope: !1107, file: !130, line: 1446, baseType: !226, size: 8, align: 8, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "referer", scope: !1107, file: !130, line: 1447, baseType: !230, size: 64, align: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "referer_alloc", scope: !1107, file: !130, line: 1448, baseType: !226, size: 8, align: 8, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "cookielist", scope: !1107, file: !130, line: 1449, baseType: !916, size: 64, align: 64, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !1107, file: !130, line: 1451, baseType: !916, size: 64, align: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !560, file: !130, line: 1831, baseType: !683, size: 64, align: 64, offset: 17600)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !560, file: !130, line: 1835, baseType: !1117, size: 3200, align: 64, offset: 17664)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "Progress", file: !130, line: 1195, size: 3200, align: 64, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1149, !1151}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "lastshow", scope: !1117, file: !130, line: 1196, baseType: !257, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "size_dl", scope: !1117, file: !130, line: 1198, baseType: !204, size: 64, align: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "size_ul", scope: !1117, file: !130, line: 1199, baseType: !204, size: 64, align: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "downloaded", scope: !1117, file: !130, line: 1200, baseType: !204, size: 64, align: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "uploaded", scope: !1117, file: !130, line: 1201, baseType: !204, size: 64, align: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1117, file: !130, line: 1203, baseType: !204, size: 64, align: 64, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1117, file: !130, line: 1205, baseType: !226, size: 8, align: 8, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1117, file: !130, line: 1206, baseType: !177, size: 32, align: 32, offset: 416)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1117, file: !130, line: 1207, baseType: !177, size: 32, align: 32, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "timespent", scope: !1117, file: !130, line: 1209, baseType: !838, size: 64, align: 64, offset: 512)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "dlspeed", scope: !1117, file: !130, line: 1211, baseType: !204, size: 64, align: 64, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ulspeed", scope: !1117, file: !130, line: 1212, baseType: !204, size: 64, align: 64, offset: 640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "t_nslookup", scope: !1117, file: !130, line: 1214, baseType: !838, size: 64, align: 64, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "t_connect", scope: !1117, file: !130, line: 1215, baseType: !838, size: 64, align: 64, offset: 768)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "t_appconnect", scope: !1117, file: !130, line: 1216, baseType: !838, size: 64, align: 64, offset: 832)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "t_pretransfer", scope: !1117, file: !130, line: 1217, baseType: !838, size: 64, align: 64, offset: 896)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "t_starttransfer", scope: !1117, file: !130, line: 1218, baseType: !838, size: 64, align: 64, offset: 960)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "t_redirect", scope: !1117, file: !130, line: 1219, baseType: !838, size: 64, align: 64, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1117, file: !130, line: 1221, baseType: !216, size: 128, align: 64, offset: 1088)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "t_startsingle", scope: !1117, file: !130, line: 1222, baseType: !216, size: 128, align: 64, offset: 1216)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "t_startop", scope: !1117, file: !130, line: 1223, baseType: !216, size: 128, align: 64, offset: 1344)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "t_acceptdata", scope: !1117, file: !130, line: 1224, baseType: !216, size: 128, align: 64, offset: 1472)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_start", scope: !1117, file: !130, line: 1227, baseType: !216, size: 128, align: 64, offset: 1600)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_size", scope: !1117, file: !130, line: 1228, baseType: !204, size: 64, align: 64, offset: 1728)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_start", scope: !1117, file: !130, line: 1230, baseType: !216, size: 128, align: 64, offset: 1792)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_size", scope: !1117, file: !130, line: 1231, baseType: !204, size: 64, align: 64, offset: 1920)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "speeder", scope: !1117, file: !130, line: 1235, baseType: !1146, size: 384, align: 64, offset: 1984)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 384, align: 64, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 6)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_time", scope: !1117, file: !130, line: 1236, baseType: !1150, size: 768, align: 64, offset: 2368)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 768, align: 64, elements: !1147)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_c", scope: !1117, file: !130, line: 1237, baseType: !177, size: 32, align: 32, offset: 3136)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !560, file: !130, line: 1836, baseType: !1153, size: 136640, align: 64, offset: 20864)
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "UrlState", file: !130, line: 1310, size: 136640, align: 64, elements: !1154)
!1154 = !{!1155, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1183, !1184, !1185, !1186, !1190, !1191, !1203, !1204, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !1153, file: !130, line: 1313, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "multi_owned_by_easy", scope: !1153, file: !130, line: 1318, baseType: !226, size: 8, align: 8, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "keeps_speed", scope: !1153, file: !130, line: 1321, baseType: !216, size: 128, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "lastconnect", scope: !1153, file: !130, line: 1323, baseType: !565, size: 64, align: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "headerbuff", scope: !1153, file: !130, line: 1325, baseType: !230, size: 64, align: 64, offset: 320)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "headersize", scope: !1153, file: !130, line: 1326, baseType: !158, size: 64, align: 64, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1153, file: !130, line: 1328, baseType: !230, size: 64, align: 64, offset: 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuffer", scope: !1153, file: !130, line: 1329, baseType: !1164, size: 131080, align: 8, offset: 512)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 131080, align: 8, elements: !1165)
!1165 = !{!1166}
!1166 = !DISubrange(count: 16385)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1153, file: !130, line: 1330, baseType: !204, size: 64, align: 64, offset: 131648)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "this_is_a_follow", scope: !1153, file: !130, line: 1332, baseType: !226, size: 8, align: 8, offset: 131712)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "first_host", scope: !1153, file: !130, line: 1334, baseType: !230, size: 64, align: 64, offset: 131776)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "first_remote_port", scope: !1153, file: !130, line: 1340, baseType: !177, size: 32, align: 32, offset: 131840)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !1153, file: !130, line: 1341, baseType: !710, size: 64, align: 64, offset: 131904)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !1153, file: !130, line: 1342, baseType: !206, size: 64, align: 64, offset: 131968)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tempcount", scope: !1153, file: !130, line: 1343, baseType: !665, size: 32, align: 32, offset: 132032)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "tempwrite", scope: !1153, file: !130, line: 1344, baseType: !1175, size: 576, align: 64, offset: 132096)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1176, size: 576, align: 64, elements: !1181)
!1176 = !DICompositeType(tag: DW_TAG_structure_type, name: "tempbuf", file: !130, line: 1302, size: 192, align: 64, elements: !1177)
!1177 = !{!1178, !1179, !1180}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1176, file: !130, line: 1303, baseType: !230, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1176, file: !130, line: 1305, baseType: !158, size: 64, align: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1176, file: !130, line: 1306, baseType: !177, size: 32, align: 32, offset: 128)
!1181 = !{!1182}
!1182 = !DISubrange(count: 3)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1153, file: !130, line: 1345, baseType: !230, size: 64, align: 64, offset: 132672)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuf", scope: !1153, file: !130, line: 1346, baseType: !226, size: 8, align: 8, offset: 132736)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "os_errno", scope: !1153, file: !130, line: 1349, baseType: !177, size: 32, align: 32, offset: 132768)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "prev_signal", scope: !1153, file: !130, line: 1352, baseType: !1187, size: 64, align: 64, offset: 132800)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !177}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "allow_port", scope: !1153, file: !130, line: 1354, baseType: !226, size: 8, align: 8, offset: 132864)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !1153, file: !130, line: 1356, baseType: !1192, size: 512, align: 64, offset: 132928)
!1192 = !DICompositeType(tag: DW_TAG_structure_type, name: "digestdata", file: !130, line: 410, size: 512, align: 64, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !1192, file: !130, line: 416, baseType: !230, size: 64, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cnonce", scope: !1192, file: !130, line: 417, baseType: !230, size: 64, align: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !1192, file: !130, line: 418, baseType: !230, size: 64, align: 64, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !1192, file: !130, line: 419, baseType: !177, size: 32, align: 32, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "stale", scope: !1192, file: !130, line: 420, baseType: !226, size: 8, align: 8, offset: 224)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1192, file: !130, line: 421, baseType: !230, size: 64, align: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "qop", scope: !1192, file: !130, line: 422, baseType: !230, size: 64, align: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm", scope: !1192, file: !130, line: 423, baseType: !230, size: 64, align: 64, offset: 384)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1192, file: !130, line: 424, baseType: !177, size: 32, align: 32, offset: 448)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "proxydigest", scope: !1153, file: !130, line: 1357, baseType: !1192, size: 512, align: 64, offset: 133440)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "authhost", scope: !1153, file: !130, line: 1364, baseType: !1205, size: 256, align: 64, offset: 133952)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "auth", file: !130, line: 1278, size: 256, align: 64, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "want", scope: !1205, file: !130, line: 1279, baseType: !160, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "picked", scope: !1205, file: !130, line: 1281, baseType: !160, size: 64, align: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !1205, file: !130, line: 1282, baseType: !160, size: 64, align: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1205, file: !130, line: 1284, baseType: !226, size: 8, align: 8, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "multipass", scope: !1205, file: !130, line: 1286, baseType: !226, size: 8, align: 8, offset: 200)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "iestyle", scope: !1205, file: !130, line: 1288, baseType: !226, size: 8, align: 8, offset: 208)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "authproxy", scope: !1153, file: !130, line: 1365, baseType: !1205, size: 256, align: 64, offset: 134208)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "authproblem", scope: !1153, file: !130, line: 1367, baseType: !226, size: 8, align: 8, offset: 134464)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !1153, file: !130, line: 1369, baseType: !148, size: 64, align: 64, offset: 134528)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "expiretime", scope: !1153, file: !130, line: 1375, baseType: !216, size: 128, align: 64, offset: 134592)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "timenode", scope: !1153, file: !130, line: 1376, baseType: !620, size: 448, align: 64, offset: 134720)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutlist", scope: !1153, file: !130, line: 1377, baseType: !140, size: 256, align: 64, offset: 135168)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "most_recent_ftp_entrypath", scope: !1153, file: !130, line: 1380, baseType: !230, size: 64, align: 64, offset: 135424)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_trying_alternative", scope: !1153, file: !130, line: 1383, baseType: !226, size: 8, align: 8, offset: 135488)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1153, file: !130, line: 1385, baseType: !177, size: 32, align: 32, offset: 135520)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "expect100header", scope: !1153, file: !130, line: 1387, baseType: !226, size: 8, align: 8, offset: 135552)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_broke", scope: !1153, file: !130, line: 1389, baseType: !226, size: 8, align: 8, offset: 135560)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_had_trailing_cr", scope: !1153, file: !130, line: 1397, baseType: !226, size: 8, align: 8, offset: 135568)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "crlf_conversions", scope: !1153, file: !130, line: 1399, baseType: !204, size: 64, align: 64, offset: 135616)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pathbuffer", scope: !1153, file: !130, line: 1401, baseType: !230, size: 64, align: 64, offset: 135680)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1153, file: !130, line: 1402, baseType: !230, size: 64, align: 64, offset: 135744)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "slash_removed", scope: !1153, file: !130, line: 1404, baseType: !226, size: 8, align: 8, offset: 135808)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "use_range", scope: !1153, file: !130, line: 1406, baseType: !226, size: 8, align: 8, offset: 135816)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "rangestringalloc", scope: !1153, file: !130, line: 1407, baseType: !226, size: 8, align: 8, offset: 135824)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1153, file: !130, line: 1409, baseType: !230, size: 64, align: 64, offset: 135872)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "resume_from", scope: !1153, file: !130, line: 1411, baseType: !204, size: 64, align: 64, offset: 135936)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_client_CSeq", scope: !1153, file: !130, line: 1414, baseType: !206, size: 64, align: 64, offset: 136000)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_server_CSeq", scope: !1153, file: !130, line: 1415, baseType: !206, size: 64, align: 64, offset: 136064)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_CSeq_recv", scope: !1153, file: !130, line: 1416, baseType: !206, size: 64, align: 64, offset: 136128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "infilesize", scope: !1153, file: !130, line: 1418, baseType: !204, size: 64, align: 64, offset: 136192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "drain", scope: !1153, file: !130, line: 1421, baseType: !158, size: 64, align: 64, offset: 136256)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1153, file: !130, line: 1424, baseType: !226, size: 8, align: 8, offset: 136320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func", scope: !1153, file: !130, line: 1428, baseType: !830, size: 64, align: 64, offset: 136384)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1153, file: !130, line: 1429, baseType: !148, size: 64, align: 64, offset: 136448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !1153, file: !130, line: 1431, baseType: !559, size: 64, align: 64, offset: 136512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !1153, file: !130, line: 1432, baseType: !226, size: 8, align: 8, offset: 136576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !1153, file: !130, line: 1433, baseType: !177, size: 32, align: 32, offset: 136608)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !560, file: !130, line: 1838, baseType: !1245, size: 640, align: 64, offset: 157504)
!1245 = !DICompositeType(tag: DW_TAG_structure_type, name: "WildcardData", file: !390, line: 46, size: 640, align: 64, elements: !1246)
!1246 = !{!1247, !1249, !1250, !1251, !1252, !1253, !1255}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1245, file: !390, line: 47, baseType: !1248, size: 32, align: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_states", file: !390, line: 41, baseType: !389)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1245, file: !390, line: 48, baseType: !230, size: 64, align: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !1245, file: !390, line: 49, baseType: !230, size: 64, align: 64, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !1245, file: !390, line: 50, baseType: !140, size: 256, align: 64, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1245, file: !390, line: 51, baseType: !148, size: 64, align: 64, offset: 448)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_dtor", scope: !1245, file: !390, line: 52, baseType: !1254, size: 64, align: 64, offset: 512)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_tmp_dtor", file: !390, line: 43, baseType: !173)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "customptr", scope: !1245, file: !390, line: 53, baseType: !148, size: 64, align: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !560, file: !130, line: 1839, baseType: !1257, size: 1856, align: 64, offset: 158144)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "PureInfo", file: !130, line: 1154, size: 1856, align: 64, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1275, !1276, !1277, !1278, !1279, !1280}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !1257, file: !130, line: 1155, baseType: !177, size: 32, align: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxycode", scope: !1257, file: !130, line: 1156, baseType: !177, size: 32, align: 32, offset: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1257, file: !130, line: 1157, baseType: !177, size: 32, align: 32, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "filetime", scope: !1257, file: !130, line: 1158, baseType: !206, size: 64, align: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "timecond", scope: !1257, file: !130, line: 1162, baseType: !226, size: 8, align: 8, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !1257, file: !130, line: 1164, baseType: !206, size: 64, align: 64, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "request_size", scope: !1257, file: !130, line: 1165, baseType: !206, size: 64, align: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauthavail", scope: !1257, file: !130, line: 1166, baseType: !160, size: 64, align: 64, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "httpauthavail", scope: !1257, file: !130, line: 1167, baseType: !160, size: 64, align: 64, offset: 448)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "numconnects", scope: !1257, file: !130, line: 1168, baseType: !206, size: 64, align: 64, offset: 512)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !1257, file: !130, line: 1169, baseType: !230, size: 64, align: 64, offset: 576)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "wouldredirect", scope: !1257, file: !130, line: 1170, baseType: !230, size: 64, align: 64, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_ip", scope: !1257, file: !130, line: 1180, baseType: !1272, size: 368, align: 8, offset: 704)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 368, align: 8, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 46)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_port", scope: !1257, file: !130, line: 1181, baseType: !206, size: 64, align: 64, offset: 1088)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_ip", scope: !1257, file: !130, line: 1183, baseType: !1272, size: 368, align: 8, offset: 1152)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_port", scope: !1257, file: !130, line: 1184, baseType: !206, size: 64, align: 64, offset: 1536)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "conn_scheme", scope: !1257, file: !130, line: 1186, baseType: !716, size: 64, align: 64, offset: 1600)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "conn_protocol", scope: !1257, file: !130, line: 1187, baseType: !665, size: 32, align: 32, offset: 1664)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "certs", scope: !1257, file: !130, line: 1189, baseType: !1281, size: 128, align: 64, offset: 1728)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_certinfo", file: !4, line: 2214, size: 128, align: 64, elements: !1282)
!1282 = !{!1283, !1284}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_certs", scope: !1281, file: !4, line: 2215, baseType: !177, size: 32, align: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !1281, file: !4, line: 2216, baseType: !1285, size: 64, align: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "tsi", scope: !560, file: !130, line: 1840, baseType: !1287, size: 128, align: 64, offset: 160000)
!1287 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_tlssessioninfo", file: !4, line: 2245, size: 128, align: 64, elements: !1288)
!1288 = !{!1289, !1291}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "backend", scope: !1287, file: !4, line: 2246, baseType: !1290, size: 32, align: 32)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sslbackend", file: !4, line: 2235, baseType: !400)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "internals", scope: !1287, file: !4, line: 2247, baseType: !148, size: 64, align: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !560, file: !130, line: 1847, baseType: !665, size: 32, align: 32, offset: 160128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !556, file: !130, line: 904, baseType: !1294, size: 384, align: 64, offset: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_chunker", file: !415, line: 82, size: 384, align: 64, elements: !1295)
!1295 = !{!1296, !1300, !1301, !1303, !1304}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hexbuffer", scope: !1294, file: !415, line: 83, baseType: !1297, size: 136, align: 8)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 136, align: 8, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 17)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hexindex", scope: !1294, file: !415, line: 84, baseType: !177, size: 32, align: 32, offset: 160)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1294, file: !415, line: 85, baseType: !1302, size: 32, align: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChunkyState", file: !415, line: 66, baseType: !414)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "datasize", scope: !1294, file: !415, line: 86, baseType: !204, size: 64, align: 64, offset: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dataleft", scope: !1294, file: !415, line: 87, baseType: !158, size: 64, align: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !556, file: !130, line: 906, baseType: !888, size: 64, align: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !556, file: !130, line: 907, baseType: !148, size: 64, align: 64, offset: 512)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !556, file: !130, line: 909, baseType: !226, size: 8, align: 8, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "connection_id", scope: !556, file: !130, line: 915, baseType: !206, size: 64, align: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dns_entry", scope: !556, file: !130, line: 922, baseType: !1310, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_dns_entry", file: !1312, line: 66, size: 192, align: 64, elements: !1313)
!1312 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hostip.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1313 = !{!1314, !1333, !1334}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1311, file: !1312, line: 67, baseType: !1315, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_addrinfo", file: !1317, line: 61, baseType: !1318)
!1317 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_addrinfo.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_addrinfo", file: !1317, line: 51, size: 384, align: 64, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1328, !1329, !1331}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !1318, file: !1317, line: 52, baseType: !177, size: 32, align: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !1318, file: !1317, line: 53, baseType: !177, size: 32, align: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !1318, file: !1317, line: 54, baseType: !177, size: 32, align: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !1318, file: !1317, line: 55, baseType: !177, size: 32, align: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !1318, file: !1317, line: 56, baseType: !1325, size: 32, align: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socklen_t", file: !205, line: 186, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !877, line: 33, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !221, line: 189, baseType: !665)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !1318, file: !1317, line: 57, baseType: !230, size: 64, align: 64, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !1318, file: !1317, line: 58, baseType: !1330, size: 64, align: 64, offset: 256)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !1318, file: !1317, line: 59, baseType: !1332, size: 64, align: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1311, file: !1312, line: 69, baseType: !257, size: 64, align: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1311, file: !1312, line: 71, baseType: !206, size: 64, align: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !556, file: !130, line: 927, baseType: !1315, size: 64, align: 64, offset: 768)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr", scope: !556, file: !130, line: 928, baseType: !1337, size: 128, align: 64, offset: 832)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 128, align: 64, elements: !1338)
!1338 = !{!1339}
!1339 = !DISubrange(count: 2)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr_str", scope: !556, file: !130, line: 933, baseType: !1272, size: 368, align: 8, offset: 960)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !556, file: !130, line: 935, baseType: !665, size: 32, align: 32, offset: 1344)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !556, file: !130, line: 937, baseType: !177, size: 32, align: 32, offset: 1376)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !556, file: !130, line: 939, baseType: !1344, size: 256, align: 64, offset: 1408)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "hostname", file: !130, line: 581, size: 256, align: 64, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "rawalloc", scope: !1344, file: !130, line: 582, baseType: !230, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "encalloc", scope: !1344, file: !130, line: 583, baseType: !230, size: 64, align: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1344, file: !130, line: 584, baseType: !230, size: 64, align: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "dispname", scope: !1344, file: !130, line: 585, baseType: !716, size: 64, align: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "secondaryhostname", scope: !556, file: !130, line: 940, baseType: !230, size: 64, align: 64, offset: 1664)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !556, file: !130, line: 941, baseType: !1344, size: 256, align: 64, offset: 1728)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "socks_proxy", scope: !556, file: !130, line: 944, baseType: !1353, size: 512, align: 64, offset: 1984)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "proxy_info", file: !130, line: 883, size: 512, align: 64, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1353, file: !130, line: 884, baseType: !1344, size: 256, align: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1353, file: !130, line: 885, baseType: !206, size: 64, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !1353, file: !130, line: 886, baseType: !986, size: 32, align: 32, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1353, file: !130, line: 887, baseType: !230, size: 64, align: 64, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !1353, file: !130, line: 888, baseType: !230, size: 64, align: 64, offset: 448)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "http_proxy", scope: !556, file: !130, line: 945, baseType: !1353, size: 512, align: 64, offset: 2496)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !556, file: !130, line: 947, baseType: !206, size: 64, align: 64, offset: 3008)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !556, file: !130, line: 948, baseType: !177, size: 32, align: 32, offset: 3072)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !556, file: !130, line: 949, baseType: !177, size: 32, align: 32, offset: 3104)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_port", scope: !556, file: !130, line: 951, baseType: !777, size: 16, align: 16, offset: 3136)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "primary_ip", scope: !556, file: !130, line: 961, baseType: !1272, size: 368, align: 8, offset: 3152)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "primary_port", scope: !556, file: !130, line: 962, baseType: !206, size: 64, align: 64, offset: 3520)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !556, file: !130, line: 968, baseType: !1272, size: 368, align: 8, offset: 3584)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !556, file: !130, line: 969, baseType: !206, size: 64, align: 64, offset: 3968)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !556, file: !130, line: 971, baseType: !230, size: 64, align: 64, offset: 4032)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !556, file: !130, line: 972, baseType: !230, size: 64, align: 64, offset: 4096)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !556, file: !130, line: 973, baseType: !230, size: 64, align: 64, offset: 4160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "oauth_bearer", scope: !556, file: !130, line: 975, baseType: !230, size: 64, align: 64, offset: 4224)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !556, file: !130, line: 977, baseType: !177, size: 32, align: 32, offset: 4288)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !556, file: !130, line: 978, baseType: !177, size: 32, align: 32, offset: 4320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !556, file: !130, line: 980, baseType: !216, size: 128, align: 64, offset: 4352)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "created", scope: !556, file: !130, line: 981, baseType: !216, size: 128, align: 64, offset: 4480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !556, file: !130, line: 982, baseType: !1378, size: 64, align: 32, offset: 4608)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 64, align: 32, elements: !1338)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tempsock", scope: !556, file: !130, line: 984, baseType: !1378, size: 64, align: 32, offset: 4672)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sock_accepted", scope: !556, file: !130, line: 985, baseType: !1381, size: 16, align: 8, offset: 4736)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 16, align: 8, elements: !1338)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !556, file: !130, line: 987, baseType: !1383, size: 128, align: 64, offset: 4800)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 128, align: 64, elements: !1338)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_recv", file: !130, line: 863, baseType: !1386)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!271, !565, !177, !230, !158, !1388}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64, align: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !556, file: !130, line: 988, baseType: !1390, size: 128, align: 64, offset: 4928)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 128, align: 64, elements: !1338)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_send", file: !130, line: 856, baseType: !1393)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!271, !565, !177, !1071, !158, !1388}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !556, file: !130, line: 993, baseType: !1396, size: 192, align: 32, offset: 5056)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 192, align: 32, elements: !1338)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_connect_data", file: !130, line: 274, size: 96, align: 32, elements: !1398)
!1398 = !{!1399, !1400, !1402}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1397, file: !130, line: 278, baseType: !226, size: 8, align: 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1397, file: !130, line: 279, baseType: !1401, size: 32, align: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connection_state", file: !130, line: 271, baseType: !425)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "connecting_state", scope: !1397, file: !130, line: 280, baseType: !1403, size: 32, align: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connect_state", file: !130, line: 265, baseType: !430)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !556, file: !130, line: 994, baseType: !1396, size: 192, align: 32, offset: 5248)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !556, file: !130, line: 995, baseType: !724, size: 640, align: 64, offset: 5440)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_config", scope: !556, file: !130, line: 996, baseType: !724, size: 640, align: 64, offset: 6080)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tls_upgraded", scope: !556, file: !130, line: 997, baseType: !226, size: 8, align: 8, offset: 6720)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !556, file: !130, line: 999, baseType: !1409, size: 280, align: 8, offset: 6728)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "ConnectBits", file: !130, line: 514, size: 280, align: 8, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1409, file: !130, line: 516, baseType: !226, size: 8, align: 8)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "reuse", scope: !1409, file: !130, line: 517, baseType: !226, size: 8, align: 8, offset: 8)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !1409, file: !130, line: 518, baseType: !226, size: 8, align: 8, offset: 16)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !1409, file: !130, line: 520, baseType: !226, size: 8, align: 8, offset: 24)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1409, file: !130, line: 522, baseType: !226, size: 8, align: 8, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxy", scope: !1409, file: !130, line: 523, baseType: !226, size: 8, align: 8, offset: 40)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy", scope: !1409, file: !130, line: 524, baseType: !226, size: 8, align: 8, offset: 48)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "user_passwd", scope: !1409, file: !130, line: 525, baseType: !226, size: 8, align: 8, offset: 56)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_user_passwd", scope: !1409, file: !130, line: 526, baseType: !226, size: 8, align: 8, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_ip", scope: !1409, file: !130, line: 527, baseType: !226, size: 8, align: 8, offset: 72)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1409, file: !130, line: 529, baseType: !226, size: 8, align: 8, offset: 80)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1409, file: !130, line: 531, baseType: !226, size: 8, align: 8, offset: 88)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "tcpconnect", scope: !1409, file: !130, line: 533, baseType: !1381, size: 16, align: 8, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "protoconnstart", scope: !1409, file: !130, line: 535, baseType: !226, size: 8, align: 8, offset: 112)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1409, file: !130, line: 538, baseType: !226, size: 8, align: 8, offset: 120)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_proxy", scope: !1409, file: !130, line: 540, baseType: !226, size: 8, align: 8, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "authneg", scope: !1409, file: !130, line: 544, baseType: !226, size: 8, align: 8, offset: 136)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rewindaftersend", scope: !1409, file: !130, line: 548, baseType: !226, size: 8, align: 8, offset: 144)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !1409, file: !130, line: 552, baseType: !226, size: 8, align: 8, offset: 152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !1409, file: !130, line: 556, baseType: !226, size: 8, align: 8, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_data_ssl", scope: !1409, file: !130, line: 559, baseType: !226, size: 8, align: 8, offset: 168)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "netrc", scope: !1409, file: !130, line: 560, baseType: !226, size: 8, align: 8, offset: 176)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd_in_url", scope: !1409, file: !130, line: 561, baseType: !226, size: 8, align: 8, offset: 184)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "stream_was_rewound", scope: !1409, file: !130, line: 562, baseType: !226, size: 8, align: 8, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_connect_closed", scope: !1409, file: !130, line: 565, baseType: !226, size: 8, align: 8, offset: 200)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1409, file: !130, line: 568, baseType: !226, size: 8, align: 8, offset: 208)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "type_set", scope: !1409, file: !130, line: 570, baseType: !226, size: 8, align: 8, offset: 216)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "multiplex", scope: !1409, file: !130, line: 571, baseType: !226, size: 8, align: 8, offset: 224)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !1409, file: !130, line: 573, baseType: !226, size: 8, align: 8, offset: 232)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_npn", scope: !1409, file: !130, line: 574, baseType: !226, size: 8, align: 8, offset: 240)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_alpn", scope: !1409, file: !130, line: 575, baseType: !226, size: 8, align: 8, offset: 248)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_connected", scope: !1409, file: !130, line: 576, baseType: !1381, size: 16, align: 8, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy_connecting", scope: !1409, file: !130, line: 578, baseType: !226, size: 8, align: 8, offset: 272)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "connecttime", scope: !556, file: !130, line: 1004, baseType: !216, size: 128, align: 64, offset: 7040)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "num_addr", scope: !556, file: !130, line: 1006, baseType: !177, size: 32, align: 32, offset: 7168)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutms_per_addr", scope: !556, file: !130, line: 1007, baseType: !257, size: 64, align: 64, offset: 7232)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !556, file: !130, line: 1010, baseType: !1448, size: 64, align: 64, offset: 7296)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_handler", file: !130, line: 763, size: 1024, align: 64, elements: !1451)
!1451 = !{!1452, !1453, !1457, !1462, !1467, !1473, !1474, !1475, !1476, !1481, !1482, !1483, !1489, !1493, !1498, !1499, !1500}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !1450, file: !130, line: 764, baseType: !716, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "setup_connection", scope: !1450, file: !130, line: 767, baseType: !1454, size: 64, align: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!569, !565}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "do_it", scope: !1450, file: !130, line: 770, baseType: !1458, size: 64, align: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!569, !565, !1461}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1450, file: !130, line: 771, baseType: !1463, size: 64, align: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_done_func", file: !130, line: 634, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!569, !565, !569, !226}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1450, file: !130, line: 777, baseType: !1468, size: 64, align: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_do_more_func", file: !130, line: 633, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!569, !565, !1472}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "connect_it", scope: !1450, file: !130, line: 785, baseType: !1458, size: 64, align: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "connecting", scope: !1450, file: !130, line: 788, baseType: !1458, size: 64, align: 64, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "doing", scope: !1450, file: !130, line: 789, baseType: !1458, size: 64, align: 64, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "proto_getsock", scope: !1450, file: !130, line: 793, baseType: !1477, size: 64, align: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!177, !565, !1480, !177}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64, align: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "doing_getsock", scope: !1450, file: !130, line: 799, baseType: !1477, size: 64, align: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "domore_getsock", scope: !1450, file: !130, line: 805, baseType: !1477, size: 64, align: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "perform_getsock", scope: !1450, file: !130, line: 812, baseType: !1484, size: 64, align: 64, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!177, !1487, !1480, !177}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !1450, file: !130, line: 821, baseType: !1490, size: 64, align: 64, offset: 768)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!569, !565, !226}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "readwrite", scope: !1450, file: !130, line: 825, baseType: !1494, size: 64, align: 64, offset: 832)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!569, !559, !565, !1497, !1461}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "defport", scope: !1450, file: !130, line: 828, baseType: !206, size: 64, align: 64, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1450, file: !130, line: 829, baseType: !665, size: 32, align: 32, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !130, line: 831, baseType: !665, size: 32, align: 32, offset: 992)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "given", scope: !556, file: !130, line: 1011, baseType: !1448, size: 64, align: 64, offset: 7360)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ip_version", scope: !556, file: !130, line: 1013, baseType: !206, size: 64, align: 64, offset: 7424)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sockfd", scope: !556, file: !130, line: 1017, baseType: !263, size: 32, align: 32, offset: 7488)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "writesockfd", scope: !556, file: !130, line: 1018, baseType: !263, size: 32, align: 32, offset: 7520)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "allocptr", scope: !556, file: !130, line: 1035, baseType: !1506, size: 640, align: 64, offset: 7552)
!1506 = !DICompositeType(tag: DW_TAG_structure_type, name: "dynamically_allocated_data", file: !130, line: 1024, size: 640, align: 64, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "proxyuserpwd", scope: !1506, file: !130, line: 1025, baseType: !230, size: 64, align: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "uagent", scope: !1506, file: !130, line: 1026, baseType: !230, size: 64, align: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "accept_encoding", scope: !1506, file: !130, line: 1027, baseType: !230, size: 64, align: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd", scope: !1506, file: !130, line: 1028, baseType: !230, size: 64, align: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rangeline", scope: !1506, file: !130, line: 1029, baseType: !230, size: 64, align: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1506, file: !130, line: 1030, baseType: !230, size: 64, align: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1506, file: !130, line: 1031, baseType: !230, size: 64, align: 64, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "cookiehost", scope: !1506, file: !130, line: 1032, baseType: !230, size: 64, align: 64, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_transport", scope: !1506, file: !130, line: 1033, baseType: !230, size: 64, align: 64, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "te", scope: !1506, file: !130, line: 1034, baseType: !230, size: 64, align: 64, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "readchannel_inuse", scope: !556, file: !130, line: 1057, baseType: !226, size: 8, align: 8, offset: 8192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "writechannel_inuse", scope: !556, file: !130, line: 1059, baseType: !226, size: 8, align: 8, offset: 8200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "send_pipe", scope: !556, file: !130, line: 1061, baseType: !140, size: 256, align: 64, offset: 8256)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "recv_pipe", scope: !556, file: !130, line: 1063, baseType: !140, size: 256, align: 64, offset: 8512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "master_buffer", scope: !556, file: !130, line: 1065, baseType: !230, size: 64, align: 64, offset: 8768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !556, file: !130, line: 1067, baseType: !158, size: 64, align: 64, offset: 8832)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !556, file: !130, line: 1068, baseType: !158, size: 64, align: 64, offset: 8896)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !556, file: !130, line: 1071, baseType: !815, size: 64, align: 64, offset: 8960)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !556, file: !130, line: 1072, baseType: !148, size: 64, align: 64, offset: 9024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "syserr_buf", scope: !556, file: !130, line: 1091, baseType: !1528, size: 2048, align: 8, offset: 9088)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 2048, align: 8, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "trailer", scope: !556, file: !130, line: 1099, baseType: !230, size: 64, align: 64, offset: 11136)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "trlMax", scope: !556, file: !130, line: 1100, baseType: !177, size: 32, align: 32, offset: 11200)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "trlPos", scope: !556, file: !130, line: 1101, baseType: !177, size: 32, align: 32, offset: 11232)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !556, file: !130, line: 1114, baseType: !1535, size: 1792, align: 64, offset: 11264)
!1535 = !DICompositeType(tag: DW_TAG_union_type, scope: !556, file: !130, line: 1103, size: 1792, align: 64, elements: !1536)
!1536 = !{!1537, !1584, !1589, !1594, !1597, !1645, !1659, !1671, !1678, !1696}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ftpc", scope: !1535, file: !130, line: 1104, baseType: !1538, size: 1792, align: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "ftp_conn", file: !332, line: 118, size: 1792, align: 64, elements: !1539)
!1539 = !{!1540, !1560, !1561, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1578, !1579, !1580, !1581, !1582, !1583}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1538, file: !332, line: 119, baseType: !1541, size: 896, align: 64)
!1541 = !DICompositeType(tag: DW_TAG_structure_type, name: "pingpong", file: !1542, line: 48, size: 896, align: 64, elements: !1543)
!1542 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pingpong.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1541, file: !1542, line: 49, baseType: !230, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !1541, file: !1542, line: 50, baseType: !158, size: 64, align: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "nread_resp", scope: !1541, file: !1542, line: 51, baseType: !158, size: 64, align: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "linestart_resp", scope: !1541, file: !1542, line: 52, baseType: !230, size: 64, align: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pending_resp", scope: !1541, file: !1542, line: 54, baseType: !226, size: 8, align: 8, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sendthis", scope: !1541, file: !1542, line: 57, baseType: !230, size: 64, align: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sendleft", scope: !1541, file: !1542, line: 59, baseType: !158, size: 64, align: 64, offset: 384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sendsize", scope: !1541, file: !1542, line: 60, baseType: !158, size: 64, align: 64, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1541, file: !1542, line: 61, baseType: !216, size: 128, align: 64, offset: 512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "response_time", scope: !1541, file: !1542, line: 63, baseType: !206, size: 64, align: 64, offset: 640)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1541, file: !1542, line: 66, baseType: !565, size: 64, align: 64, offset: 704)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "statemach_act", scope: !1541, file: !1542, line: 72, baseType: !1454, size: 64, align: 64, offset: 768)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "endofresp", scope: !1541, file: !1542, line: 74, baseType: !1557, size: 64, align: 64, offset: 832)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!226, !565, !230, !158, !1472}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "entrypath", scope: !1538, file: !332, line: 120, baseType: !230, size: 64, align: 64, offset: 896)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dirs", scope: !1538, file: !332, line: 121, baseType: !1562, size: 64, align: 64, offset: 960)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dirdepth", scope: !1538, file: !332, line: 122, baseType: !177, size: 32, align: 32, offset: 1024)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "diralloc", scope: !1538, file: !332, line: 123, baseType: !177, size: 32, align: 32, offset: 1056)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1538, file: !332, line: 124, baseType: !230, size: 64, align: 64, offset: 1088)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dont_check", scope: !1538, file: !332, line: 125, baseType: !226, size: 8, align: 8, offset: 1152)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_valid", scope: !1538, file: !332, line: 128, baseType: !226, size: 8, align: 8, offset: 1160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cwddone", scope: !1538, file: !332, line: 131, baseType: !226, size: 8, align: 8, offset: 1168)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cwdfail", scope: !1538, file: !332, line: 133, baseType: !226, size: 8, align: 8, offset: 1176)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_data_conn", scope: !1538, file: !332, line: 135, baseType: !226, size: 8, align: 8, offset: 1184)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prevpath", scope: !1538, file: !332, line: 136, baseType: !230, size: 64, align: 64, offset: 1216)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "transfertype", scope: !1538, file: !332, line: 137, baseType: !231, size: 8, align: 8, offset: 1280)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "count1", scope: !1538, file: !332, line: 139, baseType: !177, size: 32, align: 32, offset: 1312)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "count2", scope: !1538, file: !332, line: 140, baseType: !177, size: 32, align: 32, offset: 1344)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "count3", scope: !1538, file: !332, line: 141, baseType: !177, size: 32, align: 32, offset: 1376)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1538, file: !332, line: 142, baseType: !1577, size: 32, align: 32, offset: 1408)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "ftpstate", file: !332, line: 80, baseType: !438)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !1538, file: !332, line: 143, baseType: !1577, size: 32, align: 32, offset: 1440)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "retr_size_saved", scope: !1538, file: !332, line: 145, baseType: !204, size: 64, align: 64, offset: 1472)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "server_os", scope: !1538, file: !332, line: 146, baseType: !230, size: 64, align: 64, offset: 1536)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "known_filesize", scope: !1538, file: !332, line: 147, baseType: !204, size: 64, align: 64, offset: 1600)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "newhost", scope: !1538, file: !332, line: 152, baseType: !230, size: 64, align: 64, offset: 1664)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "newport", scope: !1538, file: !332, line: 153, baseType: !777, size: 16, align: 16, offset: 1728)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "httpc", scope: !1535, file: !130, line: 1105, baseType: !1585, size: 32, align: 32)
!1585 = !DICompositeType(tag: DW_TAG_structure_type, name: "http_conn", file: !1586, line: 200, size: 32, align: 32, elements: !1587)
!1586 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1587 = !{!1588}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1585, file: !1586, line: 227, baseType: !177, size: 32, align: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sshc", scope: !1535, file: !130, line: 1106, baseType: !1590, size: 64, align: 64)
!1590 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssh_conn", file: !1591, line: 110, size: 64, align: 64, elements: !1592)
!1591 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ssh.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "authlist", scope: !1590, file: !1591, line: 111, baseType: !716, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tftpc", scope: !1535, file: !130, line: 1107, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tftp_state_data", file: !130, line: 1107, flags: DIFlagFwdDecl)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "imapc", scope: !1535, file: !130, line: 1108, baseType: !1598, size: 1472, align: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "imap_conn", file: !477, line: 70, size: 1472, align: 64, elements: !1599)
!1599 = !{!1600, !1601, !1603, !1604, !1636, !1637, !1638, !1640, !1641, !1642, !1643, !1644}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1598, file: !477, line: 71, baseType: !1541, size: 896, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1598, file: !477, line: 72, baseType: !1602, size: 32, align: 32, offset: 896)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "imapstate", file: !477, line: 50, baseType: !476)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1598, file: !477, line: 73, baseType: !226, size: 8, align: 8, offset: 928)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1598, file: !477, line: 74, baseType: !1605, size: 256, align: 64, offset: 960)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASL", file: !496, line: 101, size: 256, align: 64, elements: !1606)
!1606 = !{!1607, !1628, !1630, !1631, !1632, !1633, !1634, !1635}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !1605, file: !496, line: 102, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASLproto", file: !496, line: 86, size: 384, align: 64, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1620, !1624}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "service", scope: !1610, file: !496, line: 87, baseType: !716, size: 64, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "contcode", scope: !1610, file: !496, line: 88, baseType: !177, size: 32, align: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "finalcode", scope: !1610, file: !496, line: 89, baseType: !177, size: 32, align: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "maxirlen", scope: !1610, file: !496, line: 90, baseType: !158, size: 64, align: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "sendauth", scope: !1610, file: !496, line: 91, baseType: !1617, size: 64, align: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!569, !565, !716, !716}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "sendcont", scope: !1610, file: !496, line: 94, baseType: !1621, size: 64, align: 64, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!569, !565, !716}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "getmessage", scope: !1610, file: !496, line: 96, baseType: !1625, size: 64, align: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{null, !230, !1562}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1605, file: !496, line: 103, baseType: !1629, size: 32, align: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "saslstate", file: !496, line: 76, baseType: !495)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "authmechs", scope: !1605, file: !496, line: 104, baseType: !665, size: 32, align: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "prefmech", scope: !1605, file: !496, line: 105, baseType: !665, size: 32, align: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "authused", scope: !1605, file: !496, line: 106, baseType: !665, size: 32, align: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "resetprefs", scope: !1605, file: !496, line: 107, baseType: !226, size: 8, align: 8, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mutual_auth", scope: !1605, file: !496, line: 108, baseType: !226, size: 8, align: 8, offset: 200)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "force_ir", scope: !1605, file: !496, line: 109, baseType: !226, size: 8, align: 8, offset: 208)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1598, file: !477, line: 75, baseType: !665, size: 32, align: 32, offset: 1216)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "cmdid", scope: !1598, file: !477, line: 76, baseType: !177, size: 32, align: 32, offset: 1248)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "resptag", scope: !1598, file: !477, line: 77, baseType: !1639, size: 40, align: 8, offset: 1280)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 40, align: 8, elements: !588)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1598, file: !477, line: 78, baseType: !226, size: 8, align: 8, offset: 1320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "login_disabled", scope: !1598, file: !477, line: 79, baseType: !226, size: 8, align: 8, offset: 1328)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ir_supported", scope: !1598, file: !477, line: 80, baseType: !226, size: 8, align: 8, offset: 1336)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox", scope: !1598, file: !477, line: 81, baseType: !230, size: 64, align: 64, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox_uidvalidity", scope: !1598, file: !477, line: 82, baseType: !230, size: 64, align: 64, offset: 1408)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pop3c", scope: !1535, file: !130, line: 1109, baseType: !1646, size: 1536, align: 64)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "pop3_conn", file: !516, line: 60, size: 1536, align: 64, elements: !1647)
!1647 = !{!1648, !1649, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1646, file: !516, line: 61, baseType: !1541, size: 896, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1646, file: !516, line: 62, baseType: !1650, size: 32, align: 32, offset: 896)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "pop3state", file: !516, line: 46, baseType: !515)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1646, file: !516, line: 63, baseType: !226, size: 8, align: 8, offset: 928)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "eob", scope: !1646, file: !516, line: 64, baseType: !158, size: 64, align: 64, offset: 960)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1646, file: !516, line: 66, baseType: !158, size: 64, align: 64, offset: 1024)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1646, file: !516, line: 68, baseType: !1605, size: 256, align: 64, offset: 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "authtypes", scope: !1646, file: !516, line: 69, baseType: !665, size: 32, align: 32, offset: 1344)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1646, file: !516, line: 70, baseType: !665, size: 32, align: 32, offset: 1376)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "apoptimestamp", scope: !1646, file: !516, line: 71, baseType: !230, size: 64, align: 64, offset: 1408)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1646, file: !516, line: 72, baseType: !226, size: 8, align: 8, offset: 1472)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "smtpc", scope: !1535, file: !130, line: 1110, baseType: !1660, size: 1344, align: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "smtp_conn", file: !531, line: 65, size: 1344, align: 64, elements: !1661)
!1661 = !{!1662, !1663, !1665, !1666, !1667, !1668, !1669, !1670}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1660, file: !531, line: 66, baseType: !1541, size: 896, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1660, file: !531, line: 67, baseType: !1664, size: 32, align: 32, offset: 896)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "smtpstate", file: !531, line: 48, baseType: !530)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1660, file: !531, line: 68, baseType: !226, size: 8, align: 8, offset: 928)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1660, file: !531, line: 69, baseType: !230, size: 64, align: 64, offset: 960)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1660, file: !531, line: 70, baseType: !1605, size: 256, align: 64, offset: 1024)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1660, file: !531, line: 71, baseType: !226, size: 8, align: 8, offset: 1280)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "size_supported", scope: !1660, file: !531, line: 72, baseType: !226, size: 8, align: 8, offset: 1288)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "auth_supported", scope: !1660, file: !531, line: 74, baseType: !226, size: 8, align: 8, offset: 1296)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rtspc", scope: !1535, file: !130, line: 1111, baseType: !1672, size: 192, align: 64)
!1672 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtsp_conn", file: !1673, line: 43, size: 192, align: 64, elements: !1674)
!1673 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/rtsp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_buf", scope: !1672, file: !1673, line: 44, baseType: !230, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_bufsize", scope: !1672, file: !1673, line: 45, baseType: !271, size: 64, align: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_channel", scope: !1672, file: !1673, line: 46, baseType: !177, size: 32, align: 32, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "smbc", scope: !1535, file: !130, line: 1112, baseType: !1679, size: 640, align: 64)
!1679 = !DICompositeType(tag: DW_TAG_structure_type, name: "smb_conn", file: !548, line: 33, size: 640, align: 64, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1679, file: !548, line: 34, baseType: !547, size: 32, align: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1679, file: !548, line: 35, baseType: !230, size: 64, align: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1679, file: !548, line: 36, baseType: !230, size: 64, align: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "challenge", scope: !1679, file: !548, line: 37, baseType: !1685, size: 64, align: 8, offset: 192)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 64, align: 8, elements: !1687)
!1686 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1687 = !{!1688}
!1688 = !DISubrange(count: 8)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1679, file: !548, line: 38, baseType: !665, size: 32, align: 32, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1679, file: !548, line: 39, baseType: !777, size: 16, align: 16, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "recv_buf", scope: !1679, file: !548, line: 40, baseType: !230, size: 64, align: 64, offset: 320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "upload_size", scope: !1679, file: !548, line: 41, baseType: !158, size: 64, align: 64, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !1679, file: !548, line: 42, baseType: !158, size: 64, align: 64, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1679, file: !548, line: 43, baseType: !158, size: 64, align: 64, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "got", scope: !1679, file: !548, line: 44, baseType: !158, size: 64, align: 64, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1535, file: !130, line: 1113, baseType: !148, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cselect_bits", scope: !556, file: !130, line: 1116, baseType: !177, size: 32, align: 32, offset: 13056)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "waitfor", scope: !556, file: !130, line: 1117, baseType: !177, size: 32, align: 32, offset: 13088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "localdev", scope: !556, file: !130, line: 1128, baseType: !230, size: 64, align: 64, offset: 13120)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !556, file: !130, line: 1129, baseType: !777, size: 16, align: 16, offset: 13184)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !556, file: !130, line: 1130, baseType: !177, size: 32, align: 32, offset: 13216)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_state", scope: !556, file: !130, line: 1137, baseType: !1703, size: 64, align: 32, offset: 13248)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, align: 32, elements: !1338)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "bundle", scope: !556, file: !130, line: 1138, baseType: !1705, size: 64, align: 64, offset: 13312)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectbundle", file: !634, line: 38, size: 384, align: 64, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "multiuse", scope: !1706, file: !634, line: 39, baseType: !177, size: 32, align: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !1706, file: !634, line: 40, baseType: !158, size: 64, align: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "conn_list", scope: !1706, file: !634, line: 41, baseType: !140, size: 256, align: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "negnpn", scope: !556, file: !130, line: 1140, baseType: !177, size: 32, align: 32, offset: 13376)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIEnumerator(name: "TUNNEL_INIT", value: 0)
!1714 = !DIEnumerator(name: "TUNNEL_CONNECT", value: 1)
!1715 = !DIEnumerator(name: "TUNNEL_COMPLETE", value: 2)
!1716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "formtype", file: !1717, line: 25, size: 32, align: 32, elements: !1718)
!1717 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/formdata.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1718 = !{!1719, !1720, !1721, !1722, !1723}
!1719 = !DIEnumerator(name: "FORM_DATAMEM", value: 0)
!1720 = !DIEnumerator(name: "FORM_DATA", value: 1)
!1721 = !DIEnumerator(name: "FORM_CONTENT", value: 2)
!1722 = !DIEnumerator(name: "FORM_CALLBACK", value: 3)
!1723 = !DIEnumerator(name: "FORM_FILE", value: 4)
!1724 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1725, file: !1586, line: 147, size: 32, align: 32, elements: !1757)
!1725 = !DICompositeType(tag: DW_TAG_structure_type, name: "HTTP", file: !1586, line: 127, size: 1088, align: 64, elements: !1726)
!1726 = !{!1727, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1748, !1755, !1756}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "sendit", scope: !1725, file: !1586, line: 128, baseType: !1728, size: 64, align: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1729 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormData", file: !1717, line: 36, size: 256, align: 64, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1729, file: !1717, line: 37, baseType: !1728, size: 64, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1729, file: !1717, line: 38, baseType: !1716, size: 32, align: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1729, file: !1717, line: 39, baseType: !230, size: 64, align: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1729, file: !1717, line: 40, baseType: !158, size: 64, align: 64, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "postsize", scope: !1725, file: !1586, line: 129, baseType: !204, size: 64, align: 64, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "postdata", scope: !1725, file: !1586, line: 130, baseType: !716, size: 64, align: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "p_pragma", scope: !1725, file: !1586, line: 132, baseType: !716, size: 64, align: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "p_accept", scope: !1725, file: !1586, line: 133, baseType: !716, size: 64, align: 64, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "readbytecount", scope: !1725, file: !1586, line: 134, baseType: !204, size: 64, align: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecount", scope: !1725, file: !1586, line: 135, baseType: !204, size: 64, align: 64, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "form", scope: !1725, file: !1586, line: 138, baseType: !1742, size: 256, align: 64, offset: 448)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "Form", file: !1717, line: 43, size: 256, align: 64, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1742, file: !1717, line: 44, baseType: !1728, size: 64, align: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1742, file: !1717, line: 45, baseType: !158, size: 64, align: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !1742, file: !1717, line: 47, baseType: !745, size: 64, align: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func", scope: !1742, file: !1717, line: 48, baseType: !830, size: 64, align: 64, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "backup", scope: !1725, file: !1586, line: 145, baseType: !1749, size: 256, align: 64, offset: 704)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "back", file: !1586, line: 140, size: 256, align: 64, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func", scope: !1749, file: !1586, line: 141, baseType: !830, size: 64, align: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fread_in", scope: !1749, file: !1586, line: 142, baseType: !148, size: 64, align: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "postdata", scope: !1749, file: !1586, line: 143, baseType: !716, size: 64, align: 64, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "postsize", scope: !1749, file: !1586, line: 144, baseType: !204, size: 64, align: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "sending", scope: !1725, file: !1586, line: 152, baseType: !1724, size: 32, align: 32, offset: 960)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "send_buffer", scope: !1725, file: !1586, line: 154, baseType: !148, size: 64, align: 64, offset: 1024)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIEnumerator(name: "HTTPSEND_NADA", value: 0)
!1759 = !DIEnumerator(name: "HTTPSEND_REQUEST", value: 1)
!1760 = !DIEnumerator(name: "HTTPSEND_BODY", value: 2)
!1761 = !DIEnumerator(name: "HTTPSEND_LAST", value: 3)
!1762 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1763, line: 46, size: 32, align: 32, elements: !1764)
!1763 = !DIFile(filename: "/usr/include/ctype.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1765 = !DIEnumerator(name: "_ISupper", value: 256)
!1766 = !DIEnumerator(name: "_ISlower", value: 512)
!1767 = !DIEnumerator(name: "_ISalpha", value: 1024)
!1768 = !DIEnumerator(name: "_ISdigit", value: 2048)
!1769 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!1770 = !DIEnumerator(name: "_ISspace", value: 8192)
!1771 = !DIEnumerator(name: "_ISprint", value: 16384)
!1772 = !DIEnumerator(name: "_ISgraph", value: 32768)
!1773 = !DIEnumerator(name: "_ISblank", value: 1)
!1774 = !DIEnumerator(name: "_IScntrl", value: 2)
!1775 = !DIEnumerator(name: "_ISpunct", value: 4)
!1776 = !DIEnumerator(name: "_ISalnum", value: 8)
!1777 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "proxy_use", file: !1, line: 1565, size: 32, align: 32, elements: !1778)
!1778 = !{!1779, !1780, !1781}
!1779 = !DIEnumerator(name: "HEADER_SERVER", value: 0)
!1780 = !DIEnumerator(name: "HEADER_PROXY", value: 1)
!1781 = !DIEnumerator(name: "HEADER_CONNECT", value: 2)
!1782 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dupstring", file: !130, line: 1466, size: 32, align: 32, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840}
!1784 = !DIEnumerator(name: "STRING_CERT_ORIG", value: 0)
!1785 = !DIEnumerator(name: "STRING_CERT_PROXY", value: 1)
!1786 = !DIEnumerator(name: "STRING_CERT_TYPE_ORIG", value: 2)
!1787 = !DIEnumerator(name: "STRING_CERT_TYPE_PROXY", value: 3)
!1788 = !DIEnumerator(name: "STRING_COOKIE", value: 4)
!1789 = !DIEnumerator(name: "STRING_COOKIEJAR", value: 5)
!1790 = !DIEnumerator(name: "STRING_CUSTOMREQUEST", value: 6)
!1791 = !DIEnumerator(name: "STRING_DEFAULT_PROTOCOL", value: 7)
!1792 = !DIEnumerator(name: "STRING_DEVICE", value: 8)
!1793 = !DIEnumerator(name: "STRING_ENCODING", value: 9)
!1794 = !DIEnumerator(name: "STRING_FTP_ACCOUNT", value: 10)
!1795 = !DIEnumerator(name: "STRING_FTP_ALTERNATIVE_TO_USER", value: 11)
!1796 = !DIEnumerator(name: "STRING_FTPPORT", value: 12)
!1797 = !DIEnumerator(name: "STRING_KEY_ORIG", value: 13)
!1798 = !DIEnumerator(name: "STRING_KEY_PROXY", value: 14)
!1799 = !DIEnumerator(name: "STRING_KEY_PASSWD_ORIG", value: 15)
!1800 = !DIEnumerator(name: "STRING_KEY_PASSWD_PROXY", value: 16)
!1801 = !DIEnumerator(name: "STRING_KEY_TYPE_ORIG", value: 17)
!1802 = !DIEnumerator(name: "STRING_KEY_TYPE_PROXY", value: 18)
!1803 = !DIEnumerator(name: "STRING_KRB_LEVEL", value: 19)
!1804 = !DIEnumerator(name: "STRING_NETRC_FILE", value: 20)
!1805 = !DIEnumerator(name: "STRING_PROXY", value: 21)
!1806 = !DIEnumerator(name: "STRING_PRE_PROXY", value: 22)
!1807 = !DIEnumerator(name: "STRING_SET_RANGE", value: 23)
!1808 = !DIEnumerator(name: "STRING_SET_REFERER", value: 24)
!1809 = !DIEnumerator(name: "STRING_SET_URL", value: 25)
!1810 = !DIEnumerator(name: "STRING_SSL_CAPATH_ORIG", value: 26)
!1811 = !DIEnumerator(name: "STRING_SSL_CAPATH_PROXY", value: 27)
!1812 = !DIEnumerator(name: "STRING_SSL_CAFILE_ORIG", value: 28)
!1813 = !DIEnumerator(name: "STRING_SSL_CAFILE_PROXY", value: 29)
!1814 = !DIEnumerator(name: "STRING_SSL_PINNEDPUBLICKEY_ORIG", value: 30)
!1815 = !DIEnumerator(name: "STRING_SSL_PINNEDPUBLICKEY_PROXY", value: 31)
!1816 = !DIEnumerator(name: "STRING_SSL_CIPHER_LIST_ORIG", value: 32)
!1817 = !DIEnumerator(name: "STRING_SSL_CIPHER_LIST_PROXY", value: 33)
!1818 = !DIEnumerator(name: "STRING_SSL_EGDSOCKET", value: 34)
!1819 = !DIEnumerator(name: "STRING_SSL_RANDOM_FILE", value: 35)
!1820 = !DIEnumerator(name: "STRING_USERAGENT", value: 36)
!1821 = !DIEnumerator(name: "STRING_SSL_CRLFILE_ORIG", value: 37)
!1822 = !DIEnumerator(name: "STRING_SSL_CRLFILE_PROXY", value: 38)
!1823 = !DIEnumerator(name: "STRING_SSL_ISSUERCERT_ORIG", value: 39)
!1824 = !DIEnumerator(name: "STRING_SSL_ISSUERCERT_PROXY", value: 40)
!1825 = !DIEnumerator(name: "STRING_USERNAME", value: 41)
!1826 = !DIEnumerator(name: "STRING_PASSWORD", value: 42)
!1827 = !DIEnumerator(name: "STRING_OPTIONS", value: 43)
!1828 = !DIEnumerator(name: "STRING_PROXYUSERNAME", value: 44)
!1829 = !DIEnumerator(name: "STRING_PROXYPASSWORD", value: 45)
!1830 = !DIEnumerator(name: "STRING_NOPROXY", value: 46)
!1831 = !DIEnumerator(name: "STRING_RTSP_SESSION_ID", value: 47)
!1832 = !DIEnumerator(name: "STRING_RTSP_STREAM_URI", value: 48)
!1833 = !DIEnumerator(name: "STRING_RTSP_TRANSPORT", value: 49)
!1834 = !DIEnumerator(name: "STRING_SERVICE_NAME", value: 50)
!1835 = !DIEnumerator(name: "STRING_MAIL_FROM", value: 51)
!1836 = !DIEnumerator(name: "STRING_MAIL_AUTH", value: 52)
!1837 = !DIEnumerator(name: "STRING_BEARER", value: 53)
!1838 = !DIEnumerator(name: "STRING_LASTZEROTERMINATED", value: 54)
!1839 = !DIEnumerator(name: "STRING_COPYPOSTFIELDS", value: 55)
!1840 = !DIEnumerator(name: "STRING_LAST", value: 56)
!1841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 1828, size: 32, align: 32, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849}
!1843 = !DIEnumerator(name: "CURL_HTTP_VERSION_NONE", value: 0)
!1844 = !DIEnumerator(name: "CURL_HTTP_VERSION_1_0", value: 1)
!1845 = !DIEnumerator(name: "CURL_HTTP_VERSION_1_1", value: 2)
!1846 = !DIEnumerator(name: "CURL_HTTP_VERSION_2_0", value: 3)
!1847 = !DIEnumerator(name: "CURL_HTTP_VERSION_2TLS", value: 4)
!1848 = !DIEnumerator(name: "CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE", value: 5)
!1849 = !DIEnumerator(name: "CURL_HTTP_VERSION_LAST", value: 6)
!1850 = !{!177, !1686, !777, !160, !158, !206, !830, !148, !204, !230, !271, !1851, !565}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!1853 = !{!1854, !1856, !1859, !1860, !1863, !1864, !1867, !1870, !1880, !1883, !1887, !1890, !1893, !1896, !1897, !1898, !1901, !1904, !1905, !1906, !1910, !1911, !1914, !1915, !1918, !1919, !1920, !1925, !1928, !1931, !1935, !1938, !1941}
!1854 = distinct !DISubprogram(name: "Curl_http_setup_conn", scope: !1, file: !1, line: 152, type: !1455, isLocal: false, isDefinition: true, scopeLine: 153, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1855 = !{}
!1856 = distinct !DISubprogram(name: "Curl_checkheaders", scope: !1, file: !1, line: 177, type: !1857, isLocal: false, isDefinition: true, scopeLine: 179, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!230, !1487, !716}
!1859 = distinct !DISubprogram(name: "Curl_checkProxyheaders", scope: !1, file: !1, line: 201, type: !1857, isLocal: false, isDefinition: true, scopeLine: 203, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1860 = distinct !DISubprogram(name: "Curl_copy_header_value", scope: !1, file: !1, line: 224, type: !1861, isLocal: false, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!230, !716}
!1863 = distinct !DISubprogram(name: "Curl_http_auth_act", scope: !1, file: !1, line: 487, type: !1455, isLocal: false, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1864 = distinct !DISubprogram(name: "Curl_http_output_auth", scope: !1, file: !1, line: 671, type: !1865, isLocal: false, isDefinition: true, scopeLine: 676, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!569, !565, !716, !716, !226}
!1867 = distinct !DISubprogram(name: "Curl_http_input_auth", scope: !1, file: !1, line: 745, type: !1868, isLocal: false, isDefinition: true, scopeLine: 747, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!569, !565, !226, !716}
!1870 = distinct !DISubprogram(name: "Curl_add_buffer_init", scope: !1, file: !1, line: 1040, type: !1871, isLocal: false, isDefinition: true, scopeLine: 1041, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_send_buffer", file: !1586, line: 60, baseType: !1875)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_send_buffer", file: !1586, line: 55, size: 192, align: 64, elements: !1876)
!1876 = !{!1877, !1878, !1879}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1875, file: !1586, line: 56, baseType: !230, size: 64, align: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !1875, file: !1586, line: 57, baseType: !158, size: 64, align: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "size_used", scope: !1875, file: !1586, line: 58, baseType: !158, size: 64, align: 64, offset: 128)
!1880 = distinct !DISubprogram(name: "Curl_add_buffer_free", scope: !1, file: !1, line: 1048, type: !1881, isLocal: false, isDefinition: true, scopeLine: 1049, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{null, !1873}
!1883 = distinct !DISubprogram(name: "Curl_add_buffer_send", scope: !1, file: !1, line: 1061, type: !1884, isLocal: false, isDefinition: true, scopeLine: 1072, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!569, !1873, !565, !1886, !158, !177}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64, align: 64)
!1887 = distinct !DISubprogram(name: "Curl_add_bufferf", scope: !1, file: !1, line: 1212, type: !1888, isLocal: false, isDefinition: true, scopeLine: 1213, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!569, !1873, !716, null}
!1890 = distinct !DISubprogram(name: "Curl_add_buffer", scope: !1, file: !1, line: 1234, type: !1891, isLocal: false, isDefinition: true, scopeLine: 1235, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!569, !1873, !1071, !158}
!1893 = distinct !DISubprogram(name: "Curl_compareheader", scope: !1, file: !1, line: 1296, type: !1894, isLocal: false, isDefinition: true, scopeLine: 1299, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!226, !716, !716, !716}
!1896 = distinct !DISubprogram(name: "Curl_http_connect", scope: !1, file: !1, line: 1348, type: !1459, isLocal: false, isDefinition: true, scopeLine: 1349, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1897 = distinct !DISubprogram(name: "Curl_http_done", scope: !1, file: !1, line: 1426, type: !1465, isLocal: false, isDefinition: true, scopeLine: 1428, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1898 = distinct !DISubprogram(name: "Curl_add_custom_headers", scope: !1, file: !1, line: 1571, type: !1899, isLocal: false, isDefinition: true, scopeLine: 1574, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!569, !565, !226, !1873}
!1901 = distinct !DISubprogram(name: "Curl_add_timecondition", scope: !1, file: !1, line: 1688, type: !1902, isLocal: false, isDefinition: true, scopeLine: 1690, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!569, !559, !1873}
!1904 = distinct !DISubprogram(name: "Curl_http", scope: !1, file: !1, line: 1750, type: !1459, isLocal: false, isDefinition: true, scopeLine: 1751, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1905 = distinct !DISubprogram(name: "Curl_http_readwrite_headers", scope: !1, file: !1, line: 2919, type: !1495, isLocal: false, isDefinition: true, scopeLine: 2923, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1906 = distinct !DISubprogram(name: "pickoneauth", scope: !1, file: !1, line: 328, type: !1907, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!226, !1909}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1910 = distinct !DISubprogram(name: "http_perhapsrewind", scope: !1, file: !1, line: 379, type: !1455, isLocal: true, isDefinition: true, scopeLine: 380, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1911 = distinct !DISubprogram(name: "output_auth_headers", scope: !1, file: !1, line: 562, type: !1912, isLocal: true, isDefinition: true, scopeLine: 567, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{!569, !565, !1909, !716, !716, !226}
!1914 = distinct !DISubprogram(name: "http_output_basic", scope: !1, file: !1, line: 279, type: !1491, isLocal: true, isDefinition: true, scopeLine: 280, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1915 = distinct !DISubprogram(name: "http_should_fail", scope: !1, file: !1, line: 920, type: !1916, isLocal: true, isDefinition: true, scopeLine: 921, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!177, !565}
!1918 = distinct !DISubprogram(name: "readmoredata", scope: !1, file: !1, line: 990, type: !825, isLocal: true, isDefinition: true, scopeLine: 994, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1919 = distinct !DISubprogram(name: "http_getsock_do", scope: !1, file: !1, line: 1387, type: !1478, isLocal: true, isDefinition: true, scopeLine: 1390, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1920 = distinct !DISubprogram(name: "use_http_1_1plus", scope: !1, file: !1, line: 1509, type: !1921, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!226, !1923, !1487}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64, align: 64)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!1925 = distinct !DISubprogram(name: "get_http_string", scope: !1, file: !1, line: 1521, type: !1926, isLocal: true, isDefinition: true, scopeLine: 1523, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!716, !1923, !1487}
!1928 = distinct !DISubprogram(name: "expect100", scope: !1, file: !1, line: 1536, type: !1929, isLocal: true, isDefinition: true, scopeLine: 1539, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!569, !559, !565, !1873}
!1931 = distinct !DISubprogram(name: "header_append", scope: !1, file: !1, line: 2841, type: !1932, isLocal: true, isDefinition: true, scopeLine: 2844, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!569, !559, !1934, !158}
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64, align: 64)
!1935 = distinct !DISubprogram(name: "checkprotoprefix", scope: !1, file: !1, line: 2823, type: !1936, isLocal: true, isDefinition: true, scopeLine: 2825, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{!226, !559, !565, !716}
!1938 = distinct !DISubprogram(name: "checkhttpprefix", scope: !1, file: !1, line: 2757, type: !1939, isLocal: true, isDefinition: true, scopeLine: 2759, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!226, !559, !716}
!1941 = distinct !DISubprogram(name: "print_http_error", scope: !1, file: !1, line: 2879, type: !1942, isLocal: true, isDefinition: true, scopeLine: 2880, flags: DIFlagPrototyped, isOptimized: false, variables: !1855)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !559}
!1944 = !{!1945}
!1945 = !DIGlobalVariable(name: "Curl_handler_http", scope: !0, file: !1, line: 107, type: !1449, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.connectdata*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i1)*, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)*, i64, i32, i32 }* @Curl_handler_http)
!1946 = !{i32 2, !"Dwarf Version", i32 4}
!1947 = !{i32 2, !"Debug Info Version", i32 3}
!1948 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!1949 = !DILocalVariable(name: "conn", arg: 1, scope: !1854, file: !1, line: 152, type: !565)
!1950 = !DIExpression()
!1951 = !DILocation(line: 152, column: 51, scope: !1854)
!1952 = !DILocalVariable(name: "http", scope: !1854, file: !1, line: 156, type: !1953)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64, align: 64)
!1954 = !DILocation(line: 156, column: 16, scope: !1854)
!1955 = !DILocation(line: 157, column: 3, scope: !1854)
!1956 = !DILocation(line: 157, column: 3, scope: !1957)
!1957 = !DILexicalBlockFile(scope: !1958, file: !1, discriminator: 1)
!1958 = distinct !DILexicalBlock(scope: !1854, file: !1, line: 157, column: 3)
!1959 = !DILocation(line: 159, column: 10, scope: !1854)
!1960 = !DILocation(line: 159, column: 8, scope: !1854)
!1961 = !DILocation(line: 160, column: 7, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1854, file: !1, line: 160, column: 6)
!1963 = !DILocation(line: 160, column: 6, scope: !1854)
!1964 = !DILocation(line: 161, column: 5, scope: !1962)
!1965 = !DILocation(line: 163, column: 28, scope: !1854)
!1966 = !DILocation(line: 163, column: 3, scope: !1854)
!1967 = !DILocation(line: 163, column: 9, scope: !1854)
!1968 = !DILocation(line: 163, column: 15, scope: !1854)
!1969 = !DILocation(line: 163, column: 19, scope: !1854)
!1970 = !DILocation(line: 163, column: 26, scope: !1854)
!1971 = !DILocation(line: 168, column: 3, scope: !1854)
!1972 = !DILocation(line: 169, column: 1, scope: !1854)
!1973 = !DILocalVariable(name: "conn", arg: 1, scope: !1904, file: !1, line: 1750, type: !565)
!1974 = !DILocation(line: 1750, column: 40, scope: !1904)
!1975 = !DILocalVariable(name: "done", arg: 2, scope: !1904, file: !1, line: 1750, type: !1461)
!1976 = !DILocation(line: 1750, column: 52, scope: !1904)
!1977 = !DILocalVariable(name: "data", scope: !1904, file: !1, line: 1752, type: !559)
!1978 = !DILocation(line: 1752, column: 21, scope: !1904)
!1979 = !DILocation(line: 1752, column: 28, scope: !1904)
!1980 = !DILocation(line: 1752, column: 34, scope: !1904)
!1981 = !DILocalVariable(name: "result", scope: !1904, file: !1, line: 1753, type: !569)
!1982 = !DILocation(line: 1753, column: 12, scope: !1904)
!1983 = !DILocalVariable(name: "http", scope: !1904, file: !1, line: 1754, type: !1953)
!1984 = !DILocation(line: 1754, column: 16, scope: !1904)
!1985 = !DILocalVariable(name: "ppath", scope: !1904, file: !1, line: 1755, type: !716)
!1986 = !DILocation(line: 1755, column: 15, scope: !1904)
!1987 = !DILocation(line: 1755, column: 23, scope: !1904)
!1988 = !DILocation(line: 1755, column: 29, scope: !1904)
!1989 = !DILocation(line: 1755, column: 35, scope: !1904)
!1990 = !DILocalVariable(name: "paste_ftp_userpwd", scope: !1904, file: !1, line: 1756, type: !226)
!1991 = !DILocation(line: 1756, column: 8, scope: !1904)
!1992 = !DILocalVariable(name: "ftp_typecode", scope: !1904, file: !1, line: 1757, type: !1993)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 72, align: 8, elements: !1994)
!1994 = !{!1995}
!1995 = !DISubrange(count: 9)
!1996 = !DILocation(line: 1757, column: 8, scope: !1904)
!1997 = !DILocalVariable(name: "host", scope: !1904, file: !1, line: 1758, type: !716)
!1998 = !DILocation(line: 1758, column: 15, scope: !1904)
!1999 = !DILocation(line: 1758, column: 22, scope: !1904)
!2000 = !DILocation(line: 1758, column: 28, scope: !1904)
!2001 = !DILocation(line: 1758, column: 33, scope: !1904)
!2002 = !DILocalVariable(name: "te", scope: !1904, file: !1, line: 1759, type: !716)
!2003 = !DILocation(line: 1759, column: 15, scope: !1904)
!2004 = !DILocalVariable(name: "ptr", scope: !1904, file: !1, line: 1760, type: !716)
!2005 = !DILocation(line: 1760, column: 15, scope: !1904)
!2006 = !DILocalVariable(name: "request", scope: !1904, file: !1, line: 1761, type: !716)
!2007 = !DILocation(line: 1761, column: 15, scope: !1904)
!2008 = !DILocalVariable(name: "httpreq", scope: !1904, file: !1, line: 1762, type: !956)
!2009 = !DILocation(line: 1762, column: 16, scope: !1904)
!2010 = !DILocation(line: 1762, column: 26, scope: !1904)
!2011 = !DILocation(line: 1762, column: 32, scope: !1904)
!2012 = !DILocation(line: 1762, column: 36, scope: !1904)
!2013 = !DILocalVariable(name: "addcookies", scope: !1904, file: !1, line: 1764, type: !230)
!2014 = !DILocation(line: 1764, column: 9, scope: !1904)
!2015 = !DILocalVariable(name: "included_body", scope: !1904, file: !1, line: 1766, type: !204)
!2016 = !DILocation(line: 1766, column: 14, scope: !1904)
!2017 = !DILocalVariable(name: "httpstring", scope: !1904, file: !1, line: 1767, type: !716)
!2018 = !DILocation(line: 1767, column: 15, scope: !1904)
!2019 = !DILocalVariable(name: "req_buffer", scope: !1904, file: !1, line: 1768, type: !1873)
!2020 = !DILocation(line: 1768, column: 21, scope: !1904)
!2021 = !DILocalVariable(name: "postsize", scope: !1904, file: !1, line: 1769, type: !204)
!2022 = !DILocation(line: 1769, column: 14, scope: !1904)
!2023 = !DILocalVariable(name: "seekerr", scope: !1904, file: !1, line: 1770, type: !177)
!2024 = !DILocation(line: 1770, column: 7, scope: !1904)
!2025 = !DILocation(line: 1775, column: 4, scope: !1904)
!2026 = !DILocation(line: 1775, column: 9, scope: !1904)
!2027 = !DILocation(line: 1777, column: 6, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1777, column: 6)
!2029 = !DILocation(line: 1777, column: 12, scope: !2028)
!2030 = !DILocation(line: 1777, column: 24, scope: !2028)
!2031 = !DILocation(line: 1777, column: 6, scope: !1904)
!2032 = !DILocation(line: 1779, column: 12, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2028, file: !1, line: 1777, column: 30)
!2034 = !DILocation(line: 1779, column: 18, scope: !2033)
!2035 = !DILocation(line: 1779, column: 5, scope: !2033)
!2036 = !DILocation(line: 1781, column: 7, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2033, file: !1, line: 1779, column: 26)
!2038 = !DILocation(line: 1781, column: 13, scope: !2037)
!2039 = !DILocation(line: 1781, column: 25, scope: !2037)
!2040 = !DILocation(line: 1783, column: 14, scope: !2037)
!2041 = !DILocation(line: 1784, column: 10, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2037, file: !1, line: 1784, column: 10)
!2043 = !DILocation(line: 1784, column: 10, scope: !2037)
!2044 = !DILocation(line: 1785, column: 16, scope: !2042)
!2045 = !DILocation(line: 1785, column: 9, scope: !2042)
!2046 = !DILocation(line: 1786, column: 7, scope: !2037)
!2047 = !DILocation(line: 1789, column: 7, scope: !2037)
!2048 = !DILocation(line: 1803, column: 7, scope: !2037)
!2049 = !DILocation(line: 1805, column: 3, scope: !2033)
!2050 = !DILocation(line: 1808, column: 12, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2028, file: !1, line: 1806, column: 8)
!2052 = !DILocation(line: 1809, column: 8, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2051, file: !1, line: 1809, column: 8)
!2054 = !DILocation(line: 1809, column: 8, scope: !2051)
!2055 = !DILocation(line: 1810, column: 14, scope: !2053)
!2056 = !DILocation(line: 1810, column: 7, scope: !2053)
!2057 = !DILocation(line: 1813, column: 10, scope: !1904)
!2058 = !DILocation(line: 1813, column: 16, scope: !1904)
!2059 = !DILocation(line: 1813, column: 20, scope: !1904)
!2060 = !DILocation(line: 1813, column: 8, scope: !1904)
!2061 = !DILocation(line: 1815, column: 7, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1815, column: 6)
!2063 = !DILocation(line: 1815, column: 13, scope: !2062)
!2064 = !DILocation(line: 1815, column: 19, scope: !2062)
!2065 = !DILocation(line: 1815, column: 6, scope: !1904)
!2066 = !DILocation(line: 1817, column: 5, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !1, line: 1815, column: 37)
!2068 = !DILocation(line: 1819, column: 30, scope: !2067)
!2069 = !DILocation(line: 1819, column: 5, scope: !2067)
!2070 = !DILocation(line: 1819, column: 11, scope: !2067)
!2071 = !DILocation(line: 1819, column: 17, scope: !2067)
!2072 = !DILocation(line: 1819, column: 28, scope: !2067)
!2073 = !DILocation(line: 1820, column: 9, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2067, file: !1, line: 1820, column: 8)
!2075 = !DILocation(line: 1820, column: 15, scope: !2074)
!2076 = !DILocation(line: 1820, column: 21, scope: !2074)
!2077 = !DILocation(line: 1820, column: 8, scope: !2067)
!2078 = !DILocation(line: 1821, column: 7, scope: !2074)
!2079 = !DILocation(line: 1823, column: 37, scope: !2067)
!2080 = !DILocation(line: 1823, column: 43, scope: !2067)
!2081 = !DILocation(line: 1823, column: 5, scope: !2067)
!2082 = !DILocation(line: 1823, column: 11, scope: !2067)
!2083 = !DILocation(line: 1823, column: 17, scope: !2067)
!2084 = !DILocation(line: 1823, column: 35, scope: !2067)
!2085 = !DILocation(line: 1824, column: 3, scope: !2067)
!2086 = !DILocation(line: 1825, column: 26, scope: !1904)
!2087 = !DILocation(line: 1825, column: 32, scope: !1904)
!2088 = !DILocation(line: 1825, column: 46, scope: !1904)
!2089 = !DILocation(line: 1825, column: 3, scope: !1904)
!2090 = !DILocation(line: 1825, column: 9, scope: !1904)
!2091 = !DILocation(line: 1825, column: 24, scope: !1904)
!2092 = !DILocation(line: 1827, column: 7, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1827, column: 6)
!2094 = !DILocation(line: 1827, column: 13, scope: !2093)
!2095 = !DILocation(line: 1827, column: 22, scope: !2093)
!2096 = !DILocation(line: 1827, column: 30, scope: !2093)
!2097 = !DILocation(line: 1827, column: 66, scope: !2093)
!2098 = !DILocation(line: 1828, column: 6, scope: !2093)
!2099 = !DILocation(line: 1828, column: 12, scope: !2093)
!2100 = !DILocation(line: 1828, column: 16, scope: !2093)
!2101 = !DILocation(line: 1827, column: 6, scope: !2102)
!2102 = !DILexicalBlockFile(scope: !1904, file: !1, discriminator: 1)
!2103 = !DILocation(line: 1829, column: 13, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 1828, column: 24)
!2105 = !DILocation(line: 1830, column: 3, scope: !2104)
!2106 = !DILocation(line: 1833, column: 6, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1833, column: 6)
!2108 = !DILocation(line: 1833, column: 12, scope: !2107)
!2109 = !DILocation(line: 1833, column: 16, scope: !2107)
!2110 = !DILocation(line: 1833, column: 6, scope: !1904)
!2111 = !DILocation(line: 1834, column: 15, scope: !2107)
!2112 = !DILocation(line: 1834, column: 21, scope: !2107)
!2113 = !DILocation(line: 1834, column: 25, scope: !2107)
!2114 = !DILocation(line: 1834, column: 13, scope: !2107)
!2115 = !DILocation(line: 1834, column: 5, scope: !2107)
!2116 = !DILocation(line: 1836, column: 8, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !1, line: 1836, column: 8)
!2118 = distinct !DILexicalBlock(scope: !2107, file: !1, line: 1835, column: 8)
!2119 = !DILocation(line: 1836, column: 14, scope: !2117)
!2120 = !DILocation(line: 1836, column: 18, scope: !2117)
!2121 = !DILocation(line: 1836, column: 8, scope: !2118)
!2122 = !DILocation(line: 1837, column: 15, scope: !2117)
!2123 = !DILocation(line: 1837, column: 7, scope: !2117)
!2124 = !DILocation(line: 1839, column: 7, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2117, file: !1, line: 1838, column: 10)
!2126 = !DILocation(line: 1839, column: 7, scope: !2127)
!2127 = !DILexicalBlockFile(scope: !2128, file: !1, discriminator: 1)
!2128 = distinct !DILexicalBlock(scope: !2125, file: !1, line: 1839, column: 7)
!2129 = !DILocation(line: 1840, column: 14, scope: !2125)
!2130 = !DILocation(line: 1840, column: 7, scope: !2125)
!2131 = !DILocation(line: 1843, column: 17, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2125, file: !1, line: 1840, column: 23)
!2133 = !DILocation(line: 1844, column: 9, scope: !2132)
!2134 = !DILocation(line: 1846, column: 17, scope: !2132)
!2135 = !DILocation(line: 1847, column: 9, scope: !2132)
!2136 = !DILocation(line: 1847, column: 9, scope: !2137)
!2137 = !DILexicalBlockFile(scope: !2132, file: !1, discriminator: 1)
!2138 = !DILocation(line: 1850, column: 17, scope: !2132)
!2139 = !DILocation(line: 1851, column: 9, scope: !2132)
!2140 = !DILocation(line: 1853, column: 17, scope: !2132)
!2141 = !DILocation(line: 1854, column: 9, scope: !2132)
!2142 = !DILocation(line: 1863, column: 24, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1863, column: 6)
!2144 = !DILocation(line: 1863, column: 6, scope: !2143)
!2145 = !DILocation(line: 1863, column: 6, scope: !1904)
!2146 = !DILocation(line: 1864, column: 5, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2143, file: !1, line: 1863, column: 46)
!2148 = !DILocation(line: 1865, column: 5, scope: !2147)
!2149 = !DILocation(line: 1865, column: 11, scope: !2147)
!2150 = !DILocation(line: 1865, column: 20, scope: !2147)
!2151 = !DILocation(line: 1865, column: 26, scope: !2147)
!2152 = !DILocation(line: 1866, column: 3, scope: !2147)
!2153 = !DILocation(line: 1869, column: 34, scope: !1904)
!2154 = !DILocation(line: 1869, column: 40, scope: !1904)
!2155 = !DILocation(line: 1869, column: 49, scope: !1904)
!2156 = !DILocation(line: 1869, column: 12, scope: !1904)
!2157 = !DILocation(line: 1869, column: 10, scope: !1904)
!2158 = !DILocation(line: 1870, column: 6, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1870, column: 6)
!2160 = !DILocation(line: 1870, column: 6, scope: !1904)
!2161 = !DILocation(line: 1871, column: 12, scope: !2159)
!2162 = !DILocation(line: 1871, column: 5, scope: !2159)
!2163 = !DILocation(line: 1873, column: 7, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1873, column: 6)
!2165 = !DILocation(line: 1873, column: 13, scope: !2164)
!2166 = !DILocation(line: 1873, column: 19, scope: !2164)
!2167 = !DILocation(line: 1873, column: 28, scope: !2164)
!2168 = !DILocation(line: 1873, column: 38, scope: !2164)
!2169 = !DILocation(line: 1873, column: 41, scope: !2170)
!2170 = !DILexicalBlockFile(scope: !2164, file: !1, discriminator: 1)
!2171 = !DILocation(line: 1873, column: 47, scope: !2170)
!2172 = !DILocation(line: 1873, column: 53, scope: !2170)
!2173 = !DILocation(line: 1873, column: 63, scope: !2170)
!2174 = !DILocation(line: 1873, column: 74, scope: !2170)
!2175 = !DILocation(line: 1874, column: 7, scope: !2164)
!2176 = !DILocation(line: 1874, column: 15, scope: !2164)
!2177 = !DILocation(line: 1874, column: 31, scope: !2164)
!2178 = !DILocation(line: 1875, column: 7, scope: !2164)
!2179 = !DILocation(line: 1875, column: 15, scope: !2164)
!2180 = !DILocation(line: 1873, column: 6, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !1904, file: !1, discriminator: 2)
!2182 = !DILocation(line: 1878, column: 5, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2164, file: !1, line: 1875, column: 33)
!2184 = !DILocation(line: 1878, column: 11, scope: !2183)
!2185 = !DILocation(line: 1878, column: 16, scope: !2183)
!2186 = !DILocation(line: 1878, column: 24, scope: !2183)
!2187 = !DILocation(line: 1879, column: 3, scope: !2183)
!2188 = !DILocation(line: 1881, column: 5, scope: !2164)
!2189 = !DILocation(line: 1881, column: 11, scope: !2164)
!2190 = !DILocation(line: 1881, column: 16, scope: !2164)
!2191 = !DILocation(line: 1881, column: 24, scope: !2164)
!2192 = !DILocation(line: 1883, column: 3, scope: !1904)
!2193 = !DILocation(line: 1883, column: 3, scope: !2194)
!2194 = !DILexicalBlockFile(scope: !2195, file: !1, discriminator: 1)
!2195 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1883, column: 3)
!2196 = !DILocation(line: 1884, column: 6, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1884, column: 6)
!2198 = !DILocation(line: 1884, column: 12, scope: !2197)
!2199 = !DILocation(line: 1884, column: 19, scope: !2197)
!2200 = !DILocation(line: 1884, column: 27, scope: !2197)
!2201 = !DILocation(line: 1884, column: 49, scope: !2202)
!2202 = !DILexicalBlockFile(scope: !2197, file: !1, discriminator: 1)
!2203 = !DILocation(line: 1884, column: 31, scope: !2202)
!2204 = !DILocation(line: 1884, column: 6, scope: !2202)
!2205 = !DILocation(line: 1885, column: 53, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2197, file: !1, line: 1884, column: 68)
!2207 = !DILocation(line: 1885, column: 59, scope: !2206)
!2208 = !DILocation(line: 1885, column: 66, scope: !2206)
!2209 = !DILocation(line: 1885, column: 26, scope: !2206)
!2210 = !DILocation(line: 1885, column: 5, scope: !2206)
!2211 = !DILocation(line: 1885, column: 11, scope: !2206)
!2212 = !DILocation(line: 1885, column: 20, scope: !2206)
!2213 = !DILocation(line: 1885, column: 24, scope: !2206)
!2214 = !DILocation(line: 1886, column: 9, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2206, file: !1, line: 1886, column: 8)
!2216 = !DILocation(line: 1886, column: 15, scope: !2215)
!2217 = !DILocation(line: 1886, column: 24, scope: !2215)
!2218 = !DILocation(line: 1886, column: 8, scope: !2206)
!2219 = !DILocation(line: 1887, column: 7, scope: !2215)
!2220 = !DILocation(line: 1888, column: 3, scope: !2206)
!2221 = !DILocation(line: 1890, column: 5, scope: !2197)
!2222 = !DILocation(line: 1890, column: 11, scope: !2197)
!2223 = !DILocation(line: 1890, column: 20, scope: !2197)
!2224 = !DILocation(line: 1890, column: 24, scope: !2197)
!2225 = !DILocation(line: 1893, column: 6, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1893, column: 6)
!2227 = !DILocation(line: 1893, column: 12, scope: !2226)
!2228 = !DILocation(line: 1893, column: 16, scope: !2226)
!2229 = !DILocation(line: 1893, column: 35, scope: !2226)
!2230 = !DILocation(line: 1893, column: 57, scope: !2231)
!2231 = !DILexicalBlockFile(scope: !2226, file: !1, discriminator: 1)
!2232 = !DILocation(line: 1893, column: 39, scope: !2231)
!2233 = !DILocation(line: 1893, column: 6, scope: !2231)
!2234 = !DILocation(line: 1894, column: 18, scope: !2226)
!2235 = !DILocation(line: 1894, column: 24, scope: !2226)
!2236 = !DILocation(line: 1894, column: 28, scope: !2226)
!2237 = !DILocation(line: 1894, column: 16, scope: !2226)
!2238 = !DILocation(line: 1894, column: 5, scope: !2226)
!2239 = !DILocation(line: 1897, column: 25, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1897, column: 6)
!2241 = !DILocation(line: 1897, column: 7, scope: !2240)
!2242 = !DILocation(line: 1897, column: 51, scope: !2240)
!2243 = !DILocation(line: 1898, column: 6, scope: !2240)
!2244 = !DILocation(line: 1898, column: 12, scope: !2240)
!2245 = !DILocation(line: 1898, column: 16, scope: !2240)
!2246 = !DILocation(line: 1897, column: 6, scope: !2102)
!2247 = !DILocation(line: 1899, column: 5, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2240, file: !1, line: 1898, column: 38)
!2249 = !DILocation(line: 1899, column: 5, scope: !2250)
!2250 = !DILexicalBlockFile(scope: !2251, file: !1, discriminator: 1)
!2251 = distinct !DILexicalBlock(scope: !2248, file: !1, line: 1899, column: 5)
!2252 = !DILocation(line: 1901, column: 42, scope: !2248)
!2253 = !DILocation(line: 1901, column: 48, scope: !2248)
!2254 = !DILocation(line: 1901, column: 52, scope: !2248)
!2255 = !DILocation(line: 1901, column: 7, scope: !2248)
!2256 = !DILocation(line: 1900, column: 5, scope: !2248)
!2257 = !DILocation(line: 1900, column: 11, scope: !2248)
!2258 = !DILocation(line: 1900, column: 20, scope: !2248)
!2259 = !DILocation(line: 1900, column: 36, scope: !2248)
!2260 = !DILocation(line: 1902, column: 9, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2248, file: !1, line: 1902, column: 8)
!2262 = !DILocation(line: 1902, column: 15, scope: !2261)
!2263 = !DILocation(line: 1902, column: 24, scope: !2261)
!2264 = !DILocation(line: 1902, column: 8, scope: !2248)
!2265 = !DILocation(line: 1903, column: 7, scope: !2261)
!2266 = !DILocation(line: 1904, column: 3, scope: !2248)
!2267 = !DILocation(line: 1906, column: 5, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2240, file: !1, line: 1905, column: 8)
!2269 = !DILocation(line: 1906, column: 5, scope: !2270)
!2270 = !DILexicalBlockFile(scope: !2271, file: !1, discriminator: 1)
!2271 = distinct !DILexicalBlock(scope: !2268, file: !1, line: 1906, column: 5)
!2272 = !DILocation(line: 1907, column: 5, scope: !2268)
!2273 = !DILocation(line: 1907, column: 11, scope: !2268)
!2274 = !DILocation(line: 1907, column: 20, scope: !2268)
!2275 = !DILocation(line: 1907, column: 36, scope: !2268)
!2276 = !DILocation(line: 1934, column: 27, scope: !1904)
!2277 = !DILocation(line: 1934, column: 9, scope: !1904)
!2278 = !DILocation(line: 1934, column: 7, scope: !1904)
!2279 = !DILocation(line: 1935, column: 6, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1935, column: 6)
!2281 = !DILocation(line: 1935, column: 6, scope: !1904)
!2282 = !DILocation(line: 1938, column: 26, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2280, file: !1, line: 1935, column: 11)
!2284 = !DILocation(line: 1938, column: 7, scope: !2283)
!2285 = !DILocation(line: 1937, column: 5, scope: !2283)
!2286 = !DILocation(line: 1937, column: 11, scope: !2283)
!2287 = !DILocation(line: 1937, column: 15, scope: !2283)
!2288 = !DILocation(line: 1937, column: 29, scope: !2283)
!2289 = !DILocation(line: 1939, column: 3, scope: !2283)
!2290 = !DILocation(line: 1941, column: 9, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2292, file: !1, line: 1941, column: 8)
!2292 = distinct !DILexicalBlock(scope: !2280, file: !1, line: 1940, column: 8)
!2293 = !DILocation(line: 1941, column: 15, scope: !2291)
!2294 = !DILocation(line: 1941, column: 24, scope: !2291)
!2295 = !DILocation(line: 1941, column: 32, scope: !2291)
!2296 = !DILocation(line: 1941, column: 52, scope: !2291)
!2297 = !DILocation(line: 1942, column: 8, scope: !2291)
!2298 = !DILocation(line: 1942, column: 14, scope: !2291)
!2299 = !DILocation(line: 1942, column: 18, scope: !2291)
!2300 = !DILocation(line: 1942, column: 25, scope: !2291)
!2301 = !DILocation(line: 1943, column: 9, scope: !2291)
!2302 = !DILocation(line: 1943, column: 15, scope: !2291)
!2303 = !DILocation(line: 1943, column: 21, scope: !2291)
!2304 = !DILocation(line: 1943, column: 32, scope: !2291)
!2305 = !DILocation(line: 1941, column: 8, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !2292, file: !1, discriminator: 1)
!2307 = !DILocation(line: 1944, column: 10, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2309, file: !1, line: 1944, column: 10)
!2309 = distinct !DILexicalBlock(scope: !2291, file: !1, line: 1943, column: 40)
!2310 = !DILocation(line: 1944, column: 16, scope: !2308)
!2311 = !DILocation(line: 1944, column: 21, scope: !2308)
!2312 = !DILocation(line: 1944, column: 10, scope: !2309)
!2313 = !DILocation(line: 1944, column: 10, scope: !2314)
!2314 = !DILexicalBlockFile(scope: !2309, file: !1, discriminator: 1)
!2315 = !DILocation(line: 1947, column: 32, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 1947, column: 15)
!2317 = !DILocation(line: 1947, column: 38, scope: !2316)
!2318 = !DILocation(line: 1947, column: 15, scope: !2316)
!2319 = !DILocation(line: 1947, column: 15, scope: !2308)
!2320 = !DILocation(line: 1949, column: 9, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2316, file: !1, line: 1947, column: 45)
!2322 = !DILocation(line: 1949, column: 15, scope: !2321)
!2323 = !DILocation(line: 1949, column: 19, scope: !2321)
!2324 = !DILocation(line: 1949, column: 33, scope: !2321)
!2325 = !DILocation(line: 1950, column: 7, scope: !2321)
!2326 = !DILocation(line: 1952, column: 15, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2316, file: !1, line: 1951, column: 12)
!2328 = !DILocation(line: 1952, column: 9, scope: !2327)
!2329 = !DILocation(line: 1953, column: 9, scope: !2327)
!2330 = !DILocation(line: 1955, column: 5, scope: !2309)
!2331 = !DILocation(line: 1958, column: 7, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2291, file: !1, line: 1956, column: 10)
!2333 = !DILocation(line: 1958, column: 13, scope: !2332)
!2334 = !DILocation(line: 1958, column: 17, scope: !2332)
!2335 = !DILocation(line: 1958, column: 31, scope: !2332)
!2336 = !DILocation(line: 1961, column: 8, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2292, file: !1, line: 1961, column: 8)
!2338 = !DILocation(line: 1961, column: 14, scope: !2337)
!2339 = !DILocation(line: 1961, column: 18, scope: !2337)
!2340 = !DILocation(line: 1961, column: 8, scope: !2292)
!2341 = !DILocation(line: 1962, column: 10, scope: !2337)
!2342 = !DILocation(line: 1962, column: 7, scope: !2337)
!2343 = !DILocation(line: 1965, column: 3, scope: !1904)
!2344 = !DILocation(line: 1965, column: 3, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2346, file: !1, discriminator: 1)
!2346 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1965, column: 3)
!2347 = !DILocation(line: 1967, column: 27, scope: !1904)
!2348 = !DILocation(line: 1967, column: 9, scope: !1904)
!2349 = !DILocation(line: 1967, column: 7, scope: !1904)
!2350 = !DILocation(line: 1968, column: 6, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1968, column: 6)
!2352 = !DILocation(line: 1968, column: 10, scope: !2351)
!2353 = !DILocation(line: 1968, column: 15, scope: !2354)
!2354 = !DILexicalBlockFile(scope: !2351, file: !1, discriminator: 1)
!2355 = !DILocation(line: 1968, column: 21, scope: !2354)
!2356 = !DILocation(line: 1968, column: 27, scope: !2354)
!2357 = !DILocation(line: 1968, column: 44, scope: !2354)
!2358 = !DILocation(line: 1969, column: 14, scope: !2351)
!2359 = !DILocation(line: 1968, column: 6, scope: !2181)
!2360 = !DILocalVariable(name: "cookiehost", scope: !2361, file: !1, line: 1976, type: !230)
!2361 = distinct !DILexicalBlock(scope: !2351, file: !1, line: 1969, column: 72)
!2362 = !DILocation(line: 1976, column: 11, scope: !2361)
!2363 = !DILocation(line: 1976, column: 47, scope: !2361)
!2364 = !DILocation(line: 1976, column: 24, scope: !2361)
!2365 = !DILocation(line: 1977, column: 9, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 1977, column: 8)
!2367 = !DILocation(line: 1977, column: 8, scope: !2361)
!2368 = !DILocation(line: 1978, column: 7, scope: !2366)
!2369 = !DILocation(line: 1979, column: 10, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 1979, column: 8)
!2371 = !DILocation(line: 1979, column: 9, scope: !2370)
!2372 = !DILocation(line: 1979, column: 8, scope: !2361)
!2373 = !DILocation(line: 1981, column: 7, scope: !2370)
!2374 = !DILocalVariable(name: "startsearch", scope: !2375, file: !1, line: 1985, type: !177)
!2375 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 1982, column: 10)
!2376 = !DILocation(line: 1985, column: 11, scope: !2375)
!2377 = !DILocation(line: 1986, column: 11, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2375, file: !1, line: 1986, column: 10)
!2379 = !DILocation(line: 1986, column: 10, scope: !2378)
!2380 = !DILocation(line: 1986, column: 22, scope: !2378)
!2381 = !DILocation(line: 1986, column: 10, scope: !2375)
!2382 = !DILocalVariable(name: "closingbracket", scope: !2383, file: !1, line: 1987, type: !230)
!2383 = distinct !DILexicalBlock(scope: !2378, file: !1, line: 1986, column: 30)
!2384 = !DILocation(line: 1987, column: 15, scope: !2383)
!2385 = !DILocation(line: 1990, column: 17, scope: !2383)
!2386 = !DILocation(line: 1990, column: 29, scope: !2383)
!2387 = !DILocation(line: 1990, column: 40, scope: !2383)
!2388 = !DILocation(line: 1990, column: 52, scope: !2383)
!2389 = !DILocation(line: 1990, column: 45, scope: !2383)
!2390 = !DILocation(line: 1990, column: 64, scope: !2383)
!2391 = !DILocation(line: 1990, column: 9, scope: !2392)
!2392 = !DILexicalBlockFile(scope: !2383, file: !1, discriminator: 1)
!2393 = !DILocation(line: 1991, column: 33, scope: !2383)
!2394 = !DILocation(line: 1991, column: 26, scope: !2383)
!2395 = !DILocation(line: 1991, column: 24, scope: !2383)
!2396 = !DILocation(line: 1992, column: 12, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2383, file: !1, line: 1992, column: 12)
!2398 = !DILocation(line: 1992, column: 12, scope: !2383)
!2399 = !DILocation(line: 1993, column: 12, scope: !2397)
!2400 = !DILocation(line: 1993, column: 27, scope: !2397)
!2401 = !DILocation(line: 1993, column: 11, scope: !2397)
!2402 = !DILocation(line: 1994, column: 7, scope: !2383)
!2403 = !DILocalVariable(name: "colon", scope: !2404, file: !1, line: 1996, type: !230)
!2404 = distinct !DILexicalBlock(scope: !2378, file: !1, line: 1995, column: 12)
!2405 = !DILocation(line: 1996, column: 15, scope: !2404)
!2406 = !DILocation(line: 1996, column: 30, scope: !2404)
!2407 = !DILocation(line: 1996, column: 43, scope: !2404)
!2408 = !DILocation(line: 1996, column: 41, scope: !2404)
!2409 = !DILocation(line: 1996, column: 23, scope: !2404)
!2410 = !DILocation(line: 1997, column: 12, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 1997, column: 12)
!2412 = !DILocation(line: 1997, column: 12, scope: !2404)
!2413 = !DILocation(line: 1998, column: 12, scope: !2411)
!2414 = !DILocation(line: 1998, column: 18, scope: !2411)
!2415 = !DILocation(line: 1998, column: 11, scope: !2411)
!2416 = !DILocation(line: 2000, column: 7, scope: !2375)
!2417 = !DILocation(line: 2000, column: 7, scope: !2418)
!2418 = !DILexicalBlockFile(scope: !2419, file: !1, discriminator: 1)
!2419 = distinct !DILexicalBlock(scope: !2375, file: !1, line: 2000, column: 7)
!2420 = !DILocation(line: 2001, column: 35, scope: !2375)
!2421 = !DILocation(line: 2001, column: 7, scope: !2375)
!2422 = !DILocation(line: 2001, column: 13, scope: !2375)
!2423 = !DILocation(line: 2001, column: 22, scope: !2375)
!2424 = !DILocation(line: 2001, column: 33, scope: !2375)
!2425 = !DILocation(line: 2005, column: 24, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 2005, column: 8)
!2427 = !DILocation(line: 2005, column: 8, scope: !2426)
!2428 = !DILocation(line: 2005, column: 8, scope: !2361)
!2429 = !DILocation(line: 2006, column: 47, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2426, file: !1, line: 2005, column: 30)
!2431 = !DILocation(line: 2006, column: 29, scope: !2430)
!2432 = !DILocation(line: 2006, column: 7, scope: !2430)
!2433 = !DILocation(line: 2006, column: 13, scope: !2430)
!2434 = !DILocation(line: 2006, column: 22, scope: !2430)
!2435 = !DILocation(line: 2006, column: 27, scope: !2430)
!2436 = !DILocation(line: 2007, column: 11, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 2007, column: 10)
!2438 = !DILocation(line: 2007, column: 17, scope: !2437)
!2439 = !DILocation(line: 2007, column: 26, scope: !2437)
!2440 = !DILocation(line: 2007, column: 10, scope: !2430)
!2441 = !DILocation(line: 2008, column: 9, scope: !2437)
!2442 = !DILocation(line: 2009, column: 5, scope: !2430)
!2443 = !DILocation(line: 2012, column: 7, scope: !2426)
!2444 = !DILocation(line: 2012, column: 13, scope: !2426)
!2445 = !DILocation(line: 2012, column: 22, scope: !2426)
!2446 = !DILocation(line: 2012, column: 27, scope: !2426)
!2447 = !DILocation(line: 2013, column: 3, scope: !2361)
!2448 = !DILocation(line: 2018, column: 10, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !1, line: 2018, column: 8)
!2450 = distinct !DILexicalBlock(scope: !2351, file: !1, line: 2014, column: 8)
!2451 = !DILocation(line: 2018, column: 16, scope: !2449)
!2452 = !DILocation(line: 2018, column: 23, scope: !2449)
!2453 = !DILocation(line: 2018, column: 31, scope: !2449)
!2454 = !DILocation(line: 2018, column: 49, scope: !2449)
!2455 = !DILocation(line: 2019, column: 10, scope: !2449)
!2456 = !DILocation(line: 2019, column: 16, scope: !2449)
!2457 = !DILocation(line: 2019, column: 28, scope: !2449)
!2458 = !DILocation(line: 2019, column: 44, scope: !2449)
!2459 = !DILocation(line: 2020, column: 10, scope: !2449)
!2460 = !DILocation(line: 2020, column: 16, scope: !2449)
!2461 = !DILocation(line: 2020, column: 23, scope: !2449)
!2462 = !DILocation(line: 2020, column: 31, scope: !2449)
!2463 = !DILocation(line: 2020, column: 48, scope: !2449)
!2464 = !DILocation(line: 2021, column: 10, scope: !2449)
!2465 = !DILocation(line: 2021, column: 16, scope: !2449)
!2466 = !DILocation(line: 2021, column: 28, scope: !2449)
!2467 = !DILocation(line: 2018, column: 8, scope: !2468)
!2468 = !DILexicalBlockFile(scope: !2450, file: !1, discriminator: 1)
!2469 = !DILocation(line: 2025, column: 37, scope: !2449)
!2470 = !DILocation(line: 2025, column: 43, scope: !2449)
!2471 = !DILocation(line: 2025, column: 48, scope: !2449)
!2472 = !DILocation(line: 2026, column: 37, scope: !2449)
!2473 = !DILocation(line: 2027, column: 37, scope: !2449)
!2474 = !DILocation(line: 2027, column: 43, scope: !2449)
!2475 = !DILocation(line: 2027, column: 48, scope: !2449)
!2476 = !DILocation(line: 2024, column: 29, scope: !2449)
!2477 = !DILocation(line: 2024, column: 7, scope: !2449)
!2478 = !DILocation(line: 2024, column: 13, scope: !2449)
!2479 = !DILocation(line: 2024, column: 22, scope: !2449)
!2480 = !DILocation(line: 2024, column: 27, scope: !2449)
!2481 = !DILocation(line: 2030, column: 37, scope: !2449)
!2482 = !DILocation(line: 2030, column: 43, scope: !2449)
!2483 = !DILocation(line: 2030, column: 48, scope: !2449)
!2484 = !DILocation(line: 2031, column: 37, scope: !2449)
!2485 = !DILocation(line: 2032, column: 37, scope: !2449)
!2486 = !DILocation(line: 2032, column: 43, scope: !2449)
!2487 = !DILocation(line: 2032, column: 48, scope: !2449)
!2488 = !DILocation(line: 2033, column: 37, scope: !2449)
!2489 = !DILocation(line: 2033, column: 43, scope: !2449)
!2490 = !DILocation(line: 2029, column: 29, scope: !2449)
!2491 = !DILocation(line: 2029, column: 7, scope: !2449)
!2492 = !DILocation(line: 2029, column: 13, scope: !2449)
!2493 = !DILocation(line: 2029, column: 22, scope: !2449)
!2494 = !DILocation(line: 2029, column: 27, scope: !2449)
!2495 = !DILocation(line: 2035, column: 9, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2450, file: !1, line: 2035, column: 8)
!2497 = !DILocation(line: 2035, column: 15, scope: !2496)
!2498 = !DILocation(line: 2035, column: 24, scope: !2496)
!2499 = !DILocation(line: 2035, column: 8, scope: !2450)
!2500 = !DILocation(line: 2037, column: 7, scope: !2496)
!2501 = !DILocation(line: 2041, column: 6, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2041, column: 6)
!2503 = !DILocation(line: 2041, column: 12, scope: !2502)
!2504 = !DILocation(line: 2041, column: 17, scope: !2502)
!2505 = !DILocation(line: 2041, column: 27, scope: !2502)
!2506 = !DILocation(line: 2041, column: 31, scope: !2507)
!2507 = !DILexicalBlockFile(scope: !2502, file: !1, discriminator: 1)
!2508 = !DILocation(line: 2041, column: 37, scope: !2507)
!2509 = !DILocation(line: 2041, column: 42, scope: !2507)
!2510 = !DILocation(line: 2041, column: 6, scope: !2507)
!2511 = !DILocation(line: 2047, column: 8, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2513, file: !1, line: 2047, column: 8)
!2513 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 2041, column: 57)
!2514 = !DILocation(line: 2047, column: 14, scope: !2512)
!2515 = !DILocation(line: 2047, column: 19, scope: !2512)
!2516 = !DILocation(line: 2047, column: 31, scope: !2512)
!2517 = !DILocation(line: 2047, column: 37, scope: !2512)
!2518 = !DILocation(line: 2047, column: 42, scope: !2512)
!2519 = !DILocation(line: 2047, column: 28, scope: !2512)
!2520 = !DILocation(line: 2047, column: 8, scope: !2513)
!2521 = !DILocalVariable(name: "url", scope: !2522, file: !1, line: 2048, type: !230)
!2522 = distinct !DILexicalBlock(scope: !2512, file: !1, line: 2047, column: 48)
!2523 = !DILocation(line: 2048, column: 13, scope: !2522)
!2524 = !DILocation(line: 2048, column: 19, scope: !2522)
!2525 = !DILocation(line: 2048, column: 25, scope: !2522)
!2526 = !DILocation(line: 2048, column: 32, scope: !2522)
!2527 = !DILocation(line: 2049, column: 20, scope: !2522)
!2528 = !DILocation(line: 2049, column: 25, scope: !2522)
!2529 = !DILocation(line: 2049, column: 31, scope: !2522)
!2530 = !DILocation(line: 2049, column: 36, scope: !2522)
!2531 = !DILocation(line: 2049, column: 13, scope: !2522)
!2532 = !DILocation(line: 2049, column: 11, scope: !2522)
!2533 = !DILocation(line: 2050, column: 10, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2522, file: !1, line: 2050, column: 10)
!2535 = !DILocation(line: 2050, column: 10, scope: !2522)
!2536 = !DILocalVariable(name: "currlen", scope: !2537, file: !1, line: 2056, type: !158)
!2537 = distinct !DILexicalBlock(scope: !2534, file: !1, line: 2050, column: 15)
!2538 = !DILocation(line: 2056, column: 16, scope: !2537)
!2539 = !DILocation(line: 2056, column: 33, scope: !2537)
!2540 = !DILocation(line: 2056, column: 39, scope: !2537)
!2541 = !DILocation(line: 2056, column: 44, scope: !2537)
!2542 = !DILocation(line: 2056, column: 26, scope: !2537)
!2543 = !DILocalVariable(name: "newlen", scope: !2537, file: !1, line: 2057, type: !158)
!2544 = !DILocation(line: 2057, column: 16, scope: !2537)
!2545 = !DILocation(line: 2057, column: 32, scope: !2537)
!2546 = !DILocation(line: 2057, column: 38, scope: !2537)
!2547 = !DILocation(line: 2057, column: 43, scope: !2537)
!2548 = !DILocation(line: 2057, column: 25, scope: !2537)
!2549 = !DILocalVariable(name: "urllen", scope: !2537, file: !1, line: 2058, type: !158)
!2550 = !DILocation(line: 2058, column: 16, scope: !2537)
!2551 = !DILocation(line: 2058, column: 32, scope: !2537)
!2552 = !DILocation(line: 2058, column: 25, scope: !2537)
!2553 = !DILocalVariable(name: "newurl", scope: !2537, file: !1, line: 2060, type: !230)
!2554 = !DILocation(line: 2060, column: 15, scope: !2537)
!2555 = !DILocation(line: 2062, column: 18, scope: !2537)
!2556 = !DILocation(line: 2062, column: 16, scope: !2537)
!2557 = !DILocation(line: 2063, column: 12, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 2063, column: 12)
!2559 = !DILocation(line: 2063, column: 12, scope: !2537)
!2560 = !DILocation(line: 2065, column: 18, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 2063, column: 20)
!2562 = !DILocation(line: 2065, column: 26, scope: !2561)
!2563 = !DILocation(line: 2065, column: 31, scope: !2561)
!2564 = !DILocation(line: 2065, column: 37, scope: !2561)
!2565 = !DILocation(line: 2065, column: 35, scope: !2561)
!2566 = !DILocation(line: 2065, column: 11, scope: !2561)
!2567 = !DILocation(line: 2067, column: 18, scope: !2561)
!2568 = !DILocation(line: 2067, column: 28, scope: !2561)
!2569 = !DILocation(line: 2067, column: 34, scope: !2561)
!2570 = !DILocation(line: 2067, column: 32, scope: !2561)
!2571 = !DILocation(line: 2067, column: 25, scope: !2561)
!2572 = !DILocation(line: 2067, column: 40, scope: !2561)
!2573 = !DILocation(line: 2067, column: 46, scope: !2561)
!2574 = !DILocation(line: 2067, column: 51, scope: !2561)
!2575 = !DILocation(line: 2067, column: 57, scope: !2561)
!2576 = !DILocation(line: 2067, column: 11, scope: !2561)
!2577 = !DILocation(line: 2069, column: 18, scope: !2561)
!2578 = !DILocation(line: 2069, column: 27, scope: !2561)
!2579 = !DILocation(line: 2069, column: 25, scope: !2561)
!2580 = !DILocation(line: 2069, column: 37, scope: !2561)
!2581 = !DILocation(line: 2069, column: 43, scope: !2561)
!2582 = !DILocation(line: 2069, column: 41, scope: !2561)
!2583 = !DILocation(line: 2069, column: 34, scope: !2561)
!2584 = !DILocation(line: 2070, column: 18, scope: !2561)
!2585 = !DILocation(line: 2070, column: 24, scope: !2561)
!2586 = !DILocation(line: 2070, column: 22, scope: !2561)
!2587 = !DILocation(line: 2071, column: 18, scope: !2561)
!2588 = !DILocation(line: 2071, column: 28, scope: !2561)
!2589 = !DILocation(line: 2071, column: 32, scope: !2561)
!2590 = !DILocation(line: 2071, column: 31, scope: !2561)
!2591 = !DILocation(line: 2071, column: 25, scope: !2561)
!2592 = !DILocation(line: 2071, column: 39, scope: !2561)
!2593 = !DILocation(line: 2071, column: 37, scope: !2561)
!2594 = !DILocation(line: 2071, column: 47, scope: !2561)
!2595 = !DILocation(line: 2069, column: 11, scope: !2561)
!2596 = !DILocation(line: 2072, column: 14, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2561, file: !1, line: 2072, column: 14)
!2598 = !DILocation(line: 2072, column: 20, scope: !2597)
!2599 = !DILocation(line: 2072, column: 27, scope: !2597)
!2600 = !DILocation(line: 2072, column: 14, scope: !2561)
!2601 = !DILocation(line: 2073, column: 13, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2597, file: !1, line: 2072, column: 38)
!2603 = !DILocation(line: 2073, column: 13, scope: !2604)
!2604 = !DILexicalBlockFile(scope: !2605, file: !1, discriminator: 1)
!2605 = distinct !DILexicalBlock(scope: !2602, file: !1, line: 2073, column: 13)
!2606 = !DILocation(line: 2074, column: 13, scope: !2602)
!2607 = !DILocation(line: 2074, column: 19, scope: !2602)
!2608 = !DILocation(line: 2074, column: 26, scope: !2602)
!2609 = !DILocation(line: 2074, column: 36, scope: !2602)
!2610 = !DILocation(line: 2075, column: 11, scope: !2602)
!2611 = !DILocation(line: 2076, column: 30, scope: !2561)
!2612 = !DILocation(line: 2076, column: 11, scope: !2561)
!2613 = !DILocation(line: 2076, column: 17, scope: !2561)
!2614 = !DILocation(line: 2076, column: 24, scope: !2561)
!2615 = !DILocation(line: 2076, column: 28, scope: !2561)
!2616 = !DILocation(line: 2077, column: 11, scope: !2561)
!2617 = !DILocation(line: 2077, column: 17, scope: !2561)
!2618 = !DILocation(line: 2077, column: 24, scope: !2561)
!2619 = !DILocation(line: 2077, column: 34, scope: !2561)
!2620 = !DILocation(line: 2078, column: 9, scope: !2561)
!2621 = !DILocation(line: 2080, column: 11, scope: !2558)
!2622 = !DILocation(line: 2081, column: 7, scope: !2537)
!2623 = !DILocation(line: 2082, column: 5, scope: !2522)
!2624 = !DILocation(line: 2083, column: 13, scope: !2513)
!2625 = !DILocation(line: 2083, column: 19, scope: !2513)
!2626 = !DILocation(line: 2083, column: 26, scope: !2513)
!2627 = !DILocation(line: 2083, column: 11, scope: !2513)
!2628 = !DILocation(line: 2084, column: 8, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2513, file: !1, line: 2084, column: 8)
!2630 = !DILocation(line: 2084, column: 8, scope: !2513)
!2631 = !DILocation(line: 2085, column: 10, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !1, line: 2085, column: 10)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !1, line: 2084, column: 38)
!2634 = !DILocation(line: 2085, column: 16, scope: !2632)
!2635 = !DILocation(line: 2085, column: 20, scope: !2632)
!2636 = !DILocation(line: 2085, column: 10, scope: !2633)
!2637 = !DILocalVariable(name: "type", scope: !2638, file: !1, line: 2087, type: !230)
!2638 = distinct !DILexicalBlock(scope: !2632, file: !1, line: 2085, column: 41)
!2639 = !DILocation(line: 2087, column: 15, scope: !2638)
!2640 = !DILocation(line: 2087, column: 29, scope: !2638)
!2641 = !DILocation(line: 2087, column: 22, scope: !2638)
!2642 = !DILocation(line: 2088, column: 12, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 2088, column: 12)
!2644 = !DILocation(line: 2088, column: 17, scope: !2643)
!2645 = !DILocation(line: 2088, column: 20, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2643, file: !1, discriminator: 1)
!2647 = !DILocation(line: 2088, column: 28, scope: !2646)
!2648 = !DILocation(line: 2088, column: 31, scope: !2649)
!2649 = !DILexicalBlockFile(scope: !2643, file: !1, discriminator: 2)
!2650 = !DILocation(line: 2088, column: 39, scope: !2649)
!2651 = !DILocation(line: 2088, column: 12, scope: !2649)
!2652 = !DILocation(line: 2089, column: 35, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2643, file: !1, line: 2088, column: 45)
!2654 = !DILocation(line: 2089, column: 18, scope: !2653)
!2655 = !DILocation(line: 2089, column: 11, scope: !2653)
!2656 = !DILocation(line: 2093, column: 13, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 2089, column: 45)
!2658 = !DILocation(line: 2095, column: 18, scope: !2657)
!2659 = !DILocation(line: 2096, column: 11, scope: !2657)
!2660 = !DILocation(line: 2097, column: 9, scope: !2653)
!2661 = !DILocation(line: 2098, column: 13, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 2098, column: 12)
!2663 = !DILocation(line: 2098, column: 12, scope: !2638)
!2664 = !DILocalVariable(name: "p", scope: !2665, file: !1, line: 2099, type: !230)
!2665 = distinct !DILexicalBlock(scope: !2662, file: !1, line: 2098, column: 19)
!2666 = !DILocation(line: 2099, column: 17, scope: !2665)
!2667 = !DILocation(line: 2099, column: 21, scope: !2665)
!2668 = !DILocation(line: 2102, column: 16, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2665, file: !1, line: 2102, column: 14)
!2670 = !DILocation(line: 2102, column: 22, scope: !2669)
!2671 = !DILocation(line: 2102, column: 28, scope: !2669)
!2672 = !DILocation(line: 2102, column: 15, scope: !2669)
!2673 = !DILocation(line: 2102, column: 33, scope: !2669)
!2674 = !DILocation(line: 2102, column: 49, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2669, file: !1, discriminator: 1)
!2676 = !DILocation(line: 2102, column: 42, scope: !2675)
!2677 = !DILocation(line: 2102, column: 56, scope: !2675)
!2678 = !DILocation(line: 2102, column: 36, scope: !2675)
!2679 = !DILocation(line: 2102, column: 61, scope: !2675)
!2680 = !DILocation(line: 2102, column: 14, scope: !2675)
!2681 = !DILocation(line: 2103, column: 15, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 2102, column: 69)
!2683 = !DILocation(line: 2103, column: 18, scope: !2682)
!2684 = !DILocation(line: 2104, column: 11, scope: !2682)
!2685 = !DILocation(line: 2105, column: 20, scope: !2665)
!2686 = !DILocation(line: 2106, column: 20, scope: !2665)
!2687 = !DILocation(line: 2106, column: 26, scope: !2665)
!2688 = !DILocation(line: 2106, column: 30, scope: !2665)
!2689 = !DILocation(line: 2105, column: 11, scope: !2665)
!2690 = !DILocation(line: 2107, column: 9, scope: !2665)
!2691 = !DILocation(line: 2108, column: 7, scope: !2638)
!2692 = !DILocation(line: 2109, column: 10, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2633, file: !1, line: 2109, column: 10)
!2694 = !DILocation(line: 2109, column: 16, scope: !2693)
!2695 = !DILocation(line: 2109, column: 21, scope: !2693)
!2696 = !DILocation(line: 2109, column: 33, scope: !2693)
!2697 = !DILocation(line: 2109, column: 37, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2693, file: !1, discriminator: 1)
!2699 = !DILocation(line: 2109, column: 43, scope: !2698)
!2700 = !DILocation(line: 2109, column: 48, scope: !2698)
!2701 = !DILocation(line: 2109, column: 10, scope: !2698)
!2702 = !DILocation(line: 2110, column: 27, scope: !2693)
!2703 = !DILocation(line: 2110, column: 9, scope: !2693)
!2704 = !DILocation(line: 2111, column: 5, scope: !2633)
!2705 = !DILocation(line: 2112, column: 3, scope: !2513)
!2706 = !DILocation(line: 2115, column: 27, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2115, column: 6)
!2708 = !DILocation(line: 2115, column: 24, scope: !2707)
!2709 = !DILocation(line: 2115, column: 6, scope: !1904)
!2710 = !DILocation(line: 2118, column: 31, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 2115, column: 36)
!2712 = !DILocation(line: 2118, column: 38, scope: !2711)
!2713 = !DILocation(line: 2118, column: 44, scope: !2711)
!2714 = !DILocation(line: 2118, column: 52, scope: !2711)
!2715 = !DILocation(line: 2118, column: 58, scope: !2711)
!2716 = !DILocation(line: 2118, column: 62, scope: !2711)
!2717 = !DILocation(line: 2119, column: 49, scope: !2711)
!2718 = !DILocation(line: 2119, column: 31, scope: !2711)
!2719 = !DILocation(line: 2120, column: 32, scope: !2711)
!2720 = !DILocation(line: 2120, column: 38, scope: !2711)
!2721 = !DILocation(line: 2118, column: 14, scope: !2711)
!2722 = !DILocation(line: 2118, column: 12, scope: !2711)
!2723 = !DILocation(line: 2121, column: 8, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2711, file: !1, line: 2121, column: 8)
!2725 = !DILocation(line: 2121, column: 8, scope: !2711)
!2726 = !DILocation(line: 2122, column: 14, scope: !2724)
!2727 = !DILocation(line: 2122, column: 7, scope: !2724)
!2728 = !DILocation(line: 2123, column: 3, scope: !2711)
!2729 = !DILocation(line: 2125, column: 38, scope: !1904)
!2730 = !DILocation(line: 2125, column: 20, scope: !1904)
!2731 = !DILocation(line: 2125, column: 3, scope: !1904)
!2732 = !DILocation(line: 2125, column: 9, scope: !1904)
!2733 = !DILocation(line: 2125, column: 18, scope: !1904)
!2734 = !DILocation(line: 2127, column: 25, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2127, column: 6)
!2736 = !DILocation(line: 2127, column: 22, scope: !2735)
!2737 = !DILocation(line: 2127, column: 34, scope: !2735)
!2738 = !DILocation(line: 2128, column: 30, scope: !2735)
!2739 = !DILocation(line: 2128, column: 27, scope: !2735)
!2740 = !DILocation(line: 2128, column: 39, scope: !2735)
!2741 = !DILocation(line: 2129, column: 24, scope: !2735)
!2742 = !DILocation(line: 2129, column: 21, scope: !2735)
!2743 = !DILocation(line: 2129, column: 35, scope: !2735)
!2744 = !DILocation(line: 2130, column: 6, scope: !2735)
!2745 = !DILocation(line: 2130, column: 12, scope: !2735)
!2746 = !DILocation(line: 2130, column: 18, scope: !2735)
!2747 = !DILocation(line: 2127, column: 6, scope: !2102)
!2748 = !DILocation(line: 2139, column: 8, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 2139, column: 8)
!2750 = distinct !DILexicalBlock(scope: !2735, file: !1, line: 2130, column: 31)
!2751 = !DILocation(line: 2139, column: 14, scope: !2749)
!2752 = !DILocation(line: 2139, column: 20, scope: !2749)
!2753 = !DILocation(line: 2139, column: 32, scope: !2749)
!2754 = !DILocation(line: 2139, column: 8, scope: !2750)
!2755 = !DILocation(line: 2144, column: 7, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2749, file: !1, line: 2139, column: 37)
!2757 = !DILocation(line: 2144, column: 13, scope: !2756)
!2758 = !DILocation(line: 2144, column: 19, scope: !2756)
!2759 = !DILocation(line: 2144, column: 31, scope: !2756)
!2760 = !DILocation(line: 2145, column: 5, scope: !2756)
!2761 = !DILocation(line: 2147, column: 8, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 2147, column: 8)
!2763 = !DILocation(line: 2147, column: 14, scope: !2762)
!2764 = !DILocation(line: 2147, column: 20, scope: !2762)
!2765 = !DILocation(line: 2147, column: 32, scope: !2762)
!2766 = !DILocation(line: 2147, column: 36, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2762, file: !1, discriminator: 1)
!2768 = !DILocation(line: 2147, column: 42, scope: !2767)
!2769 = !DILocation(line: 2147, column: 48, scope: !2767)
!2770 = !DILocation(line: 2147, column: 8, scope: !2767)
!2771 = !DILocation(line: 2152, column: 10, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !1, line: 2152, column: 10)
!2773 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 2147, column: 66)
!2774 = !DILocation(line: 2152, column: 16, scope: !2772)
!2775 = !DILocation(line: 2152, column: 10, scope: !2773)
!2776 = !DILocation(line: 2153, column: 19, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2772, file: !1, line: 2152, column: 27)
!2778 = !DILocation(line: 2153, column: 25, scope: !2777)
!2779 = !DILocation(line: 2153, column: 35, scope: !2777)
!2780 = !DILocation(line: 2153, column: 41, scope: !2777)
!2781 = !DILocation(line: 2153, column: 54, scope: !2777)
!2782 = !DILocation(line: 2153, column: 60, scope: !2777)
!2783 = !DILocation(line: 2153, column: 66, scope: !2777)
!2784 = !DILocation(line: 2153, column: 17, scope: !2777)
!2785 = !DILocation(line: 2155, column: 7, scope: !2777)
!2786 = !DILocation(line: 2157, column: 10, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2773, file: !1, line: 2157, column: 10)
!2788 = !DILocation(line: 2157, column: 18, scope: !2787)
!2789 = !DILocation(line: 2157, column: 10, scope: !2773)
!2790 = !DILocalVariable(name: "passed", scope: !2791, file: !1, line: 2158, type: !204)
!2791 = distinct !DILexicalBlock(scope: !2787, file: !1, line: 2157, column: 39)
!2792 = !DILocation(line: 2158, column: 20, scope: !2791)
!2793 = !DILocation(line: 2160, column: 12, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 2160, column: 12)
!2795 = !DILocation(line: 2160, column: 20, scope: !2794)
!2796 = !DILocation(line: 2160, column: 12, scope: !2791)
!2797 = !DILocation(line: 2161, column: 17, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2794, file: !1, line: 2160, column: 47)
!2799 = !DILocation(line: 2161, column: 11, scope: !2798)
!2800 = !DILocation(line: 2162, column: 11, scope: !2798)
!2801 = !DILocation(line: 2165, column: 9, scope: !2791)
!2802 = !DILocalVariable(name: "readthisamountnow", scope: !2803, file: !1, line: 2166, type: !158)
!2803 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 2165, column: 12)
!2804 = !DILocation(line: 2166, column: 18, scope: !2803)
!2805 = !DILocation(line: 2167, column: 14, scope: !2803)
!2806 = !DILocation(line: 2167, column: 20, scope: !2803)
!2807 = !DILocation(line: 2167, column: 26, scope: !2803)
!2808 = !DILocation(line: 2167, column: 40, scope: !2803)
!2809 = !DILocation(line: 2167, column: 38, scope: !2803)
!2810 = !DILocation(line: 2167, column: 47, scope: !2803)
!2811 = !DILocation(line: 2167, column: 13, scope: !2803)
!2812 = !DILocation(line: 2167, column: 13, scope: !2813)
!2813 = !DILexicalBlockFile(scope: !2803, file: !1, discriminator: 1)
!2814 = !DILocation(line: 2168, column: 36, scope: !2803)
!2815 = !DILocation(line: 2168, column: 42, scope: !2803)
!2816 = !DILocation(line: 2168, column: 48, scope: !2803)
!2817 = !DILocation(line: 2168, column: 62, scope: !2803)
!2818 = !DILocation(line: 2168, column: 60, scope: !2803)
!2819 = !DILocation(line: 2168, column: 23, scope: !2803)
!2820 = !DILocation(line: 2167, column: 13, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2803, file: !1, discriminator: 2)
!2822 = !DILocation(line: 2167, column: 13, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2803, file: !1, discriminator: 3)
!2824 = !DILocalVariable(name: "actuallyread", scope: !2803, file: !1, line: 2170, type: !158)
!2825 = !DILocation(line: 2170, column: 18, scope: !2803)
!2826 = !DILocation(line: 2171, column: 13, scope: !2803)
!2827 = !DILocation(line: 2171, column: 19, scope: !2803)
!2828 = !DILocation(line: 2171, column: 25, scope: !2803)
!2829 = !DILocation(line: 2171, column: 36, scope: !2803)
!2830 = !DILocation(line: 2171, column: 42, scope: !2803)
!2831 = !DILocation(line: 2171, column: 48, scope: !2803)
!2832 = !DILocation(line: 2171, column: 59, scope: !2803)
!2833 = !DILocation(line: 2172, column: 36, scope: !2803)
!2834 = !DILocation(line: 2172, column: 42, scope: !2803)
!2835 = !DILocation(line: 2172, column: 48, scope: !2803)
!2836 = !DILocation(line: 2174, column: 21, scope: !2803)
!2837 = !DILocation(line: 2174, column: 18, scope: !2803)
!2838 = !DILocation(line: 2175, column: 15, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2803, file: !1, line: 2175, column: 14)
!2840 = !DILocation(line: 2175, column: 28, scope: !2839)
!2841 = !DILocation(line: 2175, column: 34, scope: !2839)
!2842 = !DILocation(line: 2175, column: 38, scope: !2843)
!2843 = !DILexicalBlockFile(scope: !2839, file: !1, discriminator: 1)
!2844 = !DILocation(line: 2175, column: 53, scope: !2843)
!2845 = !DILocation(line: 2175, column: 51, scope: !2843)
!2846 = !DILocation(line: 2175, column: 14, scope: !2843)
!2847 = !DILocation(line: 2178, column: 19, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2839, file: !1, line: 2175, column: 73)
!2849 = !DILocation(line: 2179, column: 44, scope: !2848)
!2850 = !DILocation(line: 2178, column: 13, scope: !2848)
!2851 = !DILocation(line: 2180, column: 13, scope: !2848)
!2852 = !DILocation(line: 2182, column: 9, scope: !2803)
!2853 = !DILocation(line: 2182, column: 17, scope: !2854)
!2854 = !DILexicalBlockFile(scope: !2791, file: !1, discriminator: 1)
!2855 = !DILocation(line: 2182, column: 26, scope: !2854)
!2856 = !DILocation(line: 2182, column: 32, scope: !2854)
!2857 = !DILocation(line: 2182, column: 38, scope: !2854)
!2858 = !DILocation(line: 2182, column: 24, scope: !2854)
!2859 = !DILocation(line: 2182, column: 9, scope: !2854)
!2860 = !DILocation(line: 2183, column: 7, scope: !2791)
!2861 = !DILocation(line: 2186, column: 10, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2773, file: !1, line: 2186, column: 10)
!2863 = !DILocation(line: 2186, column: 16, scope: !2862)
!2864 = !DILocation(line: 2186, column: 22, scope: !2862)
!2865 = !DILocation(line: 2186, column: 32, scope: !2862)
!2866 = !DILocation(line: 2186, column: 10, scope: !2773)
!2867 = !DILocation(line: 2187, column: 35, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2862, file: !1, line: 2186, column: 36)
!2869 = !DILocation(line: 2187, column: 41, scope: !2868)
!2870 = !DILocation(line: 2187, column: 47, scope: !2868)
!2871 = !DILocation(line: 2187, column: 9, scope: !2868)
!2872 = !DILocation(line: 2187, column: 15, scope: !2868)
!2873 = !DILocation(line: 2187, column: 21, scope: !2868)
!2874 = !DILocation(line: 2187, column: 32, scope: !2868)
!2875 = !DILocation(line: 2189, column: 12, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !1, line: 2189, column: 12)
!2877 = !DILocation(line: 2189, column: 18, scope: !2876)
!2878 = !DILocation(line: 2189, column: 24, scope: !2876)
!2879 = !DILocation(line: 2189, column: 35, scope: !2876)
!2880 = !DILocation(line: 2189, column: 12, scope: !2868)
!2881 = !DILocation(line: 2190, column: 17, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2876, file: !1, line: 2189, column: 41)
!2883 = !DILocation(line: 2190, column: 11, scope: !2882)
!2884 = !DILocation(line: 2191, column: 11, scope: !2882)
!2885 = !DILocation(line: 2193, column: 7, scope: !2868)
!2886 = !DILocation(line: 2195, column: 5, scope: !2773)
!2887 = !DILocation(line: 2196, column: 3, scope: !2750)
!2888 = !DILocation(line: 2197, column: 6, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2197, column: 6)
!2890 = !DILocation(line: 2197, column: 12, scope: !2889)
!2891 = !DILocation(line: 2197, column: 18, scope: !2889)
!2892 = !DILocation(line: 2197, column: 6, scope: !1904)
!2893 = !DILocation(line: 2203, column: 10, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !1, line: 2203, column: 8)
!2895 = distinct !DILexicalBlock(scope: !2889, file: !1, line: 2197, column: 29)
!2896 = !DILocation(line: 2203, column: 18, scope: !2894)
!2897 = !DILocation(line: 2203, column: 34, scope: !2894)
!2898 = !DILocation(line: 2203, column: 38, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2894, file: !1, discriminator: 1)
!2900 = !DILocation(line: 2203, column: 46, scope: !2899)
!2901 = !DILocation(line: 2203, column: 64, scope: !2899)
!2902 = !DILocation(line: 2204, column: 27, scope: !2894)
!2903 = !DILocation(line: 2204, column: 9, scope: !2894)
!2904 = !DILocation(line: 2203, column: 8, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !2895, file: !1, discriminator: 2)
!2906 = !DILocation(line: 2206, column: 7, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 2204, column: 44)
!2908 = !DILocation(line: 2208, column: 42, scope: !2907)
!2909 = !DILocation(line: 2208, column: 48, scope: !2907)
!2910 = !DILocation(line: 2208, column: 54, scope: !2907)
!2911 = !DILocation(line: 2207, column: 34, scope: !2907)
!2912 = !DILocation(line: 2207, column: 7, scope: !2907)
!2913 = !DILocation(line: 2207, column: 13, scope: !2907)
!2914 = !DILocation(line: 2207, column: 22, scope: !2907)
!2915 = !DILocation(line: 2207, column: 32, scope: !2907)
!2916 = !DILocation(line: 2209, column: 5, scope: !2907)
!2917 = !DILocation(line: 2210, column: 14, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 2210, column: 13)
!2919 = !DILocation(line: 2210, column: 22, scope: !2918)
!2920 = !DILocation(line: 2210, column: 38, scope: !2918)
!2921 = !DILocation(line: 2211, column: 32, scope: !2918)
!2922 = !DILocation(line: 2211, column: 14, scope: !2918)
!2923 = !DILocation(line: 2210, column: 13, scope: !2899)
!2924 = !DILocation(line: 2214, column: 7, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 2211, column: 57)
!2926 = !DILocation(line: 2216, column: 10, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 2216, column: 10)
!2928 = !DILocation(line: 2216, column: 16, scope: !2927)
!2929 = !DILocation(line: 2216, column: 20, scope: !2927)
!2930 = !DILocation(line: 2216, column: 36, scope: !2927)
!2931 = !DILocation(line: 2216, column: 10, scope: !2925)
!2932 = !DILocation(line: 2223, column: 19, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2927, file: !1, line: 2216, column: 41)
!2934 = !DILocation(line: 2223, column: 25, scope: !2933)
!2935 = !DILocation(line: 2223, column: 31, scope: !2933)
!2936 = !DILocation(line: 2223, column: 42, scope: !2933)
!2937 = !DILocation(line: 2223, column: 47, scope: !2933)
!2938 = !DILocation(line: 2223, column: 53, scope: !2933)
!2939 = !DILocation(line: 2223, column: 59, scope: !2933)
!2940 = !DILocation(line: 2221, column: 11, scope: !2933)
!2941 = !DILocation(line: 2220, column: 9, scope: !2933)
!2942 = !DILocation(line: 2220, column: 15, scope: !2933)
!2943 = !DILocation(line: 2220, column: 24, scope: !2933)
!2944 = !DILocation(line: 2220, column: 34, scope: !2933)
!2945 = !DILocation(line: 2225, column: 7, scope: !2933)
!2946 = !DILocation(line: 2226, column: 15, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2927, file: !1, line: 2226, column: 15)
!2948 = !DILocation(line: 2226, column: 21, scope: !2947)
!2949 = !DILocation(line: 2226, column: 27, scope: !2947)
!2950 = !DILocation(line: 2226, column: 15, scope: !2927)
!2951 = !DILocalVariable(name: "total_expected_size", scope: !2952, file: !1, line: 2228, type: !204)
!2952 = distinct !DILexicalBlock(scope: !2947, file: !1, line: 2226, column: 40)
!2953 = !DILocation(line: 2228, column: 20, scope: !2952)
!2954 = !DILocation(line: 2229, column: 11, scope: !2952)
!2955 = !DILocation(line: 2229, column: 17, scope: !2952)
!2956 = !DILocation(line: 2229, column: 23, scope: !2952)
!2957 = !DILocation(line: 2229, column: 37, scope: !2952)
!2958 = !DILocation(line: 2229, column: 43, scope: !2952)
!2959 = !DILocation(line: 2229, column: 49, scope: !2952)
!2960 = !DILocation(line: 2229, column: 35, scope: !2952)
!2961 = !DILocation(line: 2233, column: 19, scope: !2952)
!2962 = !DILocation(line: 2233, column: 25, scope: !2952)
!2963 = !DILocation(line: 2233, column: 31, scope: !2952)
!2964 = !DILocation(line: 2233, column: 38, scope: !2952)
!2965 = !DILocation(line: 2233, column: 57, scope: !2952)
!2966 = !DILocation(line: 2234, column: 19, scope: !2952)
!2967 = !DILocation(line: 2231, column: 11, scope: !2952)
!2968 = !DILocation(line: 2230, column: 9, scope: !2952)
!2969 = !DILocation(line: 2230, column: 15, scope: !2952)
!2970 = !DILocation(line: 2230, column: 24, scope: !2952)
!2971 = !DILocation(line: 2230, column: 34, scope: !2952)
!2972 = !DILocation(line: 2235, column: 7, scope: !2952)
!2973 = !DILocation(line: 2241, column: 19, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2947, file: !1, line: 2236, column: 12)
!2975 = !DILocation(line: 2241, column: 25, scope: !2974)
!2976 = !DILocation(line: 2241, column: 31, scope: !2974)
!2977 = !DILocation(line: 2241, column: 38, scope: !2974)
!2978 = !DILocation(line: 2241, column: 44, scope: !2974)
!2979 = !DILocation(line: 2241, column: 50, scope: !2974)
!2980 = !DILocation(line: 2240, column: 11, scope: !2974)
!2981 = !DILocation(line: 2239, column: 9, scope: !2974)
!2982 = !DILocation(line: 2239, column: 15, scope: !2974)
!2983 = !DILocation(line: 2239, column: 24, scope: !2974)
!2984 = !DILocation(line: 2239, column: 34, scope: !2974)
!2985 = !DILocation(line: 2243, column: 11, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 2243, column: 10)
!2987 = !DILocation(line: 2243, column: 17, scope: !2986)
!2988 = !DILocation(line: 2243, column: 26, scope: !2986)
!2989 = !DILocation(line: 2243, column: 10, scope: !2925)
!2990 = !DILocation(line: 2244, column: 9, scope: !2986)
!2991 = !DILocation(line: 2245, column: 5, scope: !2925)
!2992 = !DILocation(line: 2246, column: 3, scope: !2895)
!2993 = !DILocation(line: 2248, column: 32, scope: !1904)
!2994 = !DILocation(line: 2248, column: 38, scope: !1904)
!2995 = !DILocation(line: 2248, column: 16, scope: !1904)
!2996 = !DILocation(line: 2248, column: 14, scope: !1904)
!2997 = !DILocation(line: 2251, column: 16, scope: !1904)
!2998 = !DILocation(line: 2251, column: 14, scope: !1904)
!2999 = !DILocation(line: 2253, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2253, column: 6)
!3001 = !DILocation(line: 2253, column: 6, scope: !1904)
!3002 = !DILocation(line: 2254, column: 5, scope: !3000)
!3003 = !DILocation(line: 2258, column: 29, scope: !1904)
!3004 = !DILocation(line: 2258, column: 48, scope: !1904)
!3005 = !DILocation(line: 2258, column: 12, scope: !1904)
!3006 = !DILocation(line: 2258, column: 10, scope: !1904)
!3007 = !DILocation(line: 2259, column: 6, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2259, column: 6)
!3009 = !DILocation(line: 2259, column: 6, scope: !1904)
!3010 = !DILocation(line: 2260, column: 12, scope: !3008)
!3011 = !DILocation(line: 2260, column: 5, scope: !3008)
!3012 = !DILocation(line: 2263, column: 6, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2263, column: 6)
!3014 = !DILocation(line: 2263, column: 6, scope: !1904)
!3015 = !DILocation(line: 2264, column: 31, scope: !3013)
!3016 = !DILocation(line: 2265, column: 31, scope: !3013)
!3017 = !DILocation(line: 2265, column: 37, scope: !3013)
!3018 = !DILocation(line: 2265, column: 43, scope: !3013)
!3019 = !DILocation(line: 2265, column: 49, scope: !3013)
!3020 = !DILocation(line: 2266, column: 31, scope: !3013)
!3021 = !DILocation(line: 2266, column: 37, scope: !3013)
!3022 = !DILocation(line: 2266, column: 56, scope: !3013)
!3023 = !DILocation(line: 2264, column: 14, scope: !3013)
!3024 = !DILocation(line: 2264, column: 12, scope: !3013)
!3025 = !DILocation(line: 2264, column: 5, scope: !3013)
!3026 = !DILocation(line: 2268, column: 30, scope: !3013)
!3027 = !DILocation(line: 2268, column: 42, scope: !3013)
!3028 = !DILocation(line: 2268, column: 56, scope: !3013)
!3029 = !DILocation(line: 2268, column: 49, scope: !3013)
!3030 = !DILocation(line: 2268, column: 14, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3013, file: !1, discriminator: 1)
!3032 = !DILocation(line: 2268, column: 12, scope: !3013)
!3033 = !DILocation(line: 2269, column: 6, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2269, column: 6)
!3035 = !DILocation(line: 2269, column: 6, scope: !1904)
!3036 = !DILocation(line: 2270, column: 12, scope: !3034)
!3037 = !DILocation(line: 2270, column: 5, scope: !3034)
!3038 = !DILocation(line: 2273, column: 22, scope: !1904)
!3039 = !DILocation(line: 2288, column: 22, scope: !1904)
!3040 = !DILocation(line: 2289, column: 22, scope: !1904)
!3041 = !DILocation(line: 2290, column: 23, scope: !1904)
!3042 = !DILocation(line: 2290, column: 29, scope: !1904)
!3043 = !DILocation(line: 2290, column: 38, scope: !1904)
!3044 = !DILocation(line: 2290, column: 43, scope: !2102)
!3045 = !DILocation(line: 2290, column: 49, scope: !2102)
!3046 = !DILocation(line: 2290, column: 58, scope: !2102)
!3047 = !DILocation(line: 2290, column: 23, scope: !2102)
!3048 = !DILocation(line: 2290, column: 23, scope: !2181)
!3049 = !DILocation(line: 2290, column: 23, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !1904, file: !1, discriminator: 3)
!3051 = !DILocation(line: 2291, column: 22, scope: !1904)
!3052 = !DILocation(line: 2291, column: 28, scope: !1904)
!3053 = !DILocation(line: 2291, column: 37, scope: !1904)
!3054 = !DILocation(line: 2292, column: 22, scope: !1904)
!3055 = !DILocation(line: 2292, column: 28, scope: !1904)
!3056 = !DILocation(line: 2292, column: 37, scope: !1904)
!3057 = !DILocation(line: 2291, column: 22, scope: !2102)
!3058 = !DILocation(line: 2291, column: 22, scope: !2181)
!3059 = !DILocation(line: 2291, column: 22, scope: !3050)
!3060 = !DILocation(line: 2293, column: 22, scope: !1904)
!3061 = !DILocation(line: 2293, column: 28, scope: !1904)
!3062 = !DILocation(line: 2293, column: 37, scope: !1904)
!3063 = !DILocation(line: 2293, column: 45, scope: !2102)
!3064 = !DILocation(line: 2293, column: 51, scope: !2102)
!3065 = !DILocation(line: 2293, column: 60, scope: !2102)
!3066 = !DILocation(line: 2293, column: 22, scope: !2102)
!3067 = !DILocation(line: 2293, column: 22, scope: !2181)
!3068 = !DILocation(line: 2293, column: 22, scope: !3050)
!3069 = !DILocation(line: 2294, column: 23, scope: !1904)
!3070 = !DILocation(line: 2294, column: 29, scope: !1904)
!3071 = !DILocation(line: 2294, column: 35, scope: !1904)
!3072 = !DILocation(line: 2294, column: 45, scope: !1904)
!3073 = !DILocation(line: 2294, column: 48, scope: !2102)
!3074 = !DILocation(line: 2294, column: 54, scope: !2102)
!3075 = !DILocation(line: 2294, column: 63, scope: !2102)
!3076 = !DILocation(line: 2294, column: 22, scope: !2102)
!3077 = !DILocation(line: 2295, column: 22, scope: !1904)
!3078 = !DILocation(line: 2295, column: 28, scope: !1904)
!3079 = !DILocation(line: 2295, column: 37, scope: !1904)
!3080 = !DILocation(line: 2294, column: 22, scope: !2181)
!3081 = !DILocation(line: 2294, column: 22, scope: !3050)
!3082 = !DILocation(line: 2294, column: 22, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !1904, file: !1, discriminator: 4)
!3084 = !DILocation(line: 2296, column: 23, scope: !1904)
!3085 = !DILocation(line: 2296, column: 29, scope: !1904)
!3086 = !DILocation(line: 2296, column: 33, scope: !1904)
!3087 = !DILocation(line: 2296, column: 55, scope: !1904)
!3088 = !DILocation(line: 2297, column: 24, scope: !1904)
!3089 = !DILocation(line: 2297, column: 30, scope: !1904)
!3090 = !DILocation(line: 2297, column: 34, scope: !1904)
!3091 = !DILocation(line: 2297, column: 23, scope: !1904)
!3092 = !DILocation(line: 2297, column: 56, scope: !1904)
!3093 = !DILocation(line: 2298, column: 23, scope: !1904)
!3094 = !DILocation(line: 2298, column: 29, scope: !1904)
!3095 = !DILocation(line: 2298, column: 38, scope: !1904)
!3096 = !DILocation(line: 2296, column: 22, scope: !2102)
!3097 = !DILocation(line: 2299, column: 22, scope: !1904)
!3098 = !DILocation(line: 2299, column: 28, scope: !1904)
!3099 = !DILocation(line: 2299, column: 37, scope: !1904)
!3100 = !DILocation(line: 2296, column: 22, scope: !2181)
!3101 = !DILocation(line: 2296, column: 22, scope: !3050)
!3102 = !DILocation(line: 2296, column: 22, scope: !3083)
!3103 = !DILocation(line: 2300, column: 22, scope: !1904)
!3104 = !DILocation(line: 2300, column: 28, scope: !1904)
!3105 = !DILocation(line: 2300, column: 37, scope: !2102)
!3106 = !DILocation(line: 2300, column: 43, scope: !2102)
!3107 = !DILocation(line: 2300, column: 22, scope: !2102)
!3108 = !DILocation(line: 2300, column: 22, scope: !2181)
!3109 = !DILocation(line: 2300, column: 22, scope: !3050)
!3110 = !DILocation(line: 2301, column: 22, scope: !1904)
!3111 = !DILocation(line: 2301, column: 28, scope: !1904)
!3112 = !DILocation(line: 2301, column: 37, scope: !1904)
!3113 = !DILocation(line: 2301, column: 40, scope: !2102)
!3114 = !DILocation(line: 2301, column: 46, scope: !2102)
!3115 = !DILocation(line: 2301, column: 55, scope: !2102)
!3116 = !DILocation(line: 2301, column: 22, scope: !2102)
!3117 = !DILocation(line: 2301, column: 22, scope: !2181)
!3118 = !DILocation(line: 2301, column: 22, scope: !3050)
!3119 = !DILocation(line: 2302, column: 23, scope: !1904)
!3120 = !DILocation(line: 2302, column: 29, scope: !1904)
!3121 = !DILocation(line: 2302, column: 33, scope: !1904)
!3122 = !DILocation(line: 2302, column: 54, scope: !1904)
!3123 = !DILocation(line: 2303, column: 24, scope: !1904)
!3124 = !DILocation(line: 2303, column: 30, scope: !1904)
!3125 = !DILocation(line: 2303, column: 34, scope: !1904)
!3126 = !DILocation(line: 2303, column: 23, scope: !1904)
!3127 = !DILocation(line: 2303, column: 55, scope: !1904)
!3128 = !DILocation(line: 2304, column: 23, scope: !1904)
!3129 = !DILocation(line: 2304, column: 29, scope: !1904)
!3130 = !DILocation(line: 2304, column: 38, scope: !1904)
!3131 = !DILocation(line: 2302, column: 22, scope: !2102)
!3132 = !DILocation(line: 2305, column: 22, scope: !1904)
!3133 = !DILocation(line: 2305, column: 28, scope: !1904)
!3134 = !DILocation(line: 2305, column: 37, scope: !1904)
!3135 = !DILocation(line: 2302, column: 22, scope: !2181)
!3136 = !DILocation(line: 2302, column: 22, scope: !3050)
!3137 = !DILocation(line: 2302, column: 22, scope: !3083)
!3138 = !DILocation(line: 2306, column: 23, scope: !1904)
!3139 = !DILocation(line: 2306, column: 29, scope: !1904)
!3140 = !DILocation(line: 2306, column: 36, scope: !1904)
!3141 = !DILocation(line: 2306, column: 44, scope: !1904)
!3142 = !DILocation(line: 2306, column: 47, scope: !2102)
!3143 = !DILocation(line: 2306, column: 53, scope: !2102)
!3144 = !DILocation(line: 2306, column: 62, scope: !2102)
!3145 = !DILocation(line: 2306, column: 22, scope: !2102)
!3146 = !DILocation(line: 2307, column: 22, scope: !1904)
!3147 = !DILocation(line: 2307, column: 28, scope: !1904)
!3148 = !DILocation(line: 2307, column: 37, scope: !1904)
!3149 = !DILocation(line: 2306, column: 22, scope: !2181)
!3150 = !DILocation(line: 2306, column: 22, scope: !3050)
!3151 = !DILocation(line: 2306, column: 22, scope: !3083)
!3152 = !DILocation(line: 2308, column: 23, scope: !1904)
!3153 = !DILocation(line: 2308, column: 29, scope: !1904)
!3154 = !DILocation(line: 2308, column: 34, scope: !1904)
!3155 = !DILocation(line: 2308, column: 44, scope: !1904)
!3156 = !DILocation(line: 2309, column: 24, scope: !1904)
!3157 = !DILocation(line: 2309, column: 30, scope: !1904)
!3158 = !DILocation(line: 2309, column: 35, scope: !1904)
!3159 = !DILocation(line: 2309, column: 48, scope: !1904)
!3160 = !DILocation(line: 2310, column: 47, scope: !1904)
!3161 = !DILocation(line: 2310, column: 24, scope: !1904)
!3162 = !DILocation(line: 2310, column: 23, scope: !1904)
!3163 = !DILocation(line: 2308, column: 22, scope: !2102)
!3164 = !DILocation(line: 2312, column: 22, scope: !1904)
!3165 = !DILocation(line: 2273, column: 5, scope: !2102)
!3166 = !DILocation(line: 2272, column: 10, scope: !1904)
!3167 = !DILocation(line: 2317, column: 3, scope: !1904)
!3168 = !DILocation(line: 2317, column: 3, scope: !3169)
!3169 = !DILexicalBlockFile(scope: !3170, file: !1, discriminator: 1)
!3170 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2317, column: 3)
!3171 = !DILocation(line: 2318, column: 3, scope: !1904)
!3172 = !DILocation(line: 2318, column: 3, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3174, file: !1, discriminator: 1)
!3174 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2318, column: 3)
!3175 = !DILocation(line: 2320, column: 6, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2320, column: 6)
!3177 = !DILocation(line: 2320, column: 6, scope: !1904)
!3178 = !DILocation(line: 2321, column: 12, scope: !3176)
!3179 = !DILocation(line: 2321, column: 5, scope: !3176)
!3180 = !DILocation(line: 2323, column: 8, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2323, column: 6)
!3182 = !DILocation(line: 2323, column: 14, scope: !3181)
!3183 = !DILocation(line: 2323, column: 23, scope: !3181)
!3184 = !DILocation(line: 2323, column: 28, scope: !3181)
!3185 = !DILocation(line: 2323, column: 42, scope: !3181)
!3186 = !DILocation(line: 2324, column: 6, scope: !3181)
!3187 = !DILocation(line: 2324, column: 12, scope: !3181)
!3188 = !DILocation(line: 2324, column: 24, scope: !3181)
!3189 = !DILocation(line: 2324, column: 30, scope: !3181)
!3190 = !DILocation(line: 2325, column: 7, scope: !3181)
!3191 = !DILocation(line: 2325, column: 13, scope: !3181)
!3192 = !DILocation(line: 2325, column: 17, scope: !3181)
!3193 = !DILocation(line: 2325, column: 29, scope: !3181)
!3194 = !DILocation(line: 2323, column: 6, scope: !2102)
!3195 = !DILocation(line: 2328, column: 12, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3181, file: !1, line: 2325, column: 54)
!3197 = !DILocation(line: 2329, column: 8, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3196, file: !1, line: 2329, column: 8)
!3199 = !DILocation(line: 2329, column: 8, scope: !3196)
!3200 = !DILocation(line: 2330, column: 14, scope: !3198)
!3201 = !DILocation(line: 2330, column: 7, scope: !3198)
!3202 = !DILocation(line: 2331, column: 3, scope: !3196)
!3203 = !DILocation(line: 2334, column: 6, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2334, column: 6)
!3205 = !DILocation(line: 2334, column: 12, scope: !3204)
!3206 = !DILocation(line: 2334, column: 20, scope: !3204)
!3207 = !DILocation(line: 2334, column: 23, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3204, file: !1, discriminator: 1)
!3209 = !DILocation(line: 2334, column: 6, scope: !3208)
!3210 = !DILocalVariable(name: "co", scope: !3211, file: !1, line: 2335, type: !688)
!3211 = distinct !DILexicalBlock(scope: !3204, file: !1, line: 2334, column: 35)
!3212 = !DILocation(line: 2335, column: 20, scope: !3211)
!3213 = !DILocalVariable(name: "count", scope: !3211, file: !1, line: 2336, type: !177)
!3214 = !DILocation(line: 2336, column: 9, scope: !3211)
!3215 = !DILocation(line: 2338, column: 8, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 2338, column: 8)
!3217 = !DILocation(line: 2338, column: 14, scope: !3216)
!3218 = !DILocation(line: 2338, column: 8, scope: !3211)
!3219 = !DILocation(line: 2339, column: 23, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3216, file: !1, line: 2338, column: 23)
!3221 = !DILocation(line: 2339, column: 7, scope: !3220)
!3222 = !DILocation(line: 2340, column: 32, scope: !3220)
!3223 = !DILocation(line: 2340, column: 38, scope: !3220)
!3224 = !DILocation(line: 2341, column: 32, scope: !3220)
!3225 = !DILocation(line: 2341, column: 38, scope: !3220)
!3226 = !DILocation(line: 2341, column: 47, scope: !3220)
!3227 = !DILocation(line: 2342, column: 32, scope: !3220)
!3228 = !DILocation(line: 2342, column: 38, scope: !3220)
!3229 = !DILocation(line: 2342, column: 47, scope: !3220)
!3230 = !DILocation(line: 2341, column: 32, scope: !3231)
!3231 = !DILexicalBlockFile(scope: !3220, file: !1, discriminator: 1)
!3232 = !DILocation(line: 2342, column: 58, scope: !3231)
!3233 = !DILocation(line: 2341, column: 32, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3220, file: !1, discriminator: 2)
!3235 = !DILocation(line: 2341, column: 32, scope: !3236)
!3236 = !DILexicalBlockFile(scope: !3220, file: !1, discriminator: 3)
!3237 = !DILocation(line: 2343, column: 32, scope: !3220)
!3238 = !DILocation(line: 2343, column: 38, scope: !3220)
!3239 = !DILocation(line: 2343, column: 44, scope: !3220)
!3240 = !DILocation(line: 2344, column: 33, scope: !3220)
!3241 = !DILocation(line: 2344, column: 39, scope: !3220)
!3242 = !DILocation(line: 2344, column: 48, scope: !3220)
!3243 = !DILocation(line: 2344, column: 56, scope: !3220)
!3244 = !DILocation(line: 2344, column: 32, scope: !3220)
!3245 = !DILocation(line: 2340, column: 12, scope: !3231)
!3246 = !DILocation(line: 2340, column: 10, scope: !3231)
!3247 = !DILocation(line: 2346, column: 25, scope: !3220)
!3248 = !DILocation(line: 2346, column: 7, scope: !3220)
!3249 = !DILocation(line: 2347, column: 5, scope: !3220)
!3250 = !DILocation(line: 2348, column: 8, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 2348, column: 8)
!3252 = !DILocation(line: 2348, column: 8, scope: !3211)
!3253 = !DILocalVariable(name: "store", scope: !3254, file: !1, line: 2349, type: !688)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !1, line: 2348, column: 12)
!3255 = !DILocation(line: 2349, column: 22, scope: !3254)
!3256 = !DILocation(line: 2349, column: 28, scope: !3254)
!3257 = !DILocation(line: 2351, column: 7, scope: !3254)
!3258 = !DILocation(line: 2351, column: 13, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3254, file: !1, discriminator: 1)
!3260 = !DILocation(line: 2351, column: 7, scope: !3259)
!3261 = !DILocation(line: 2352, column: 12, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !1, line: 2352, column: 12)
!3263 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 2351, column: 17)
!3264 = !DILocation(line: 2352, column: 16, scope: !3262)
!3265 = !DILocation(line: 2352, column: 12, scope: !3263)
!3266 = !DILocation(line: 2353, column: 19, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !1, line: 2353, column: 14)
!3268 = distinct !DILexicalBlock(scope: !3262, file: !1, line: 2352, column: 23)
!3269 = !DILocation(line: 2353, column: 16, scope: !3267)
!3270 = !DILocation(line: 2353, column: 14, scope: !3268)
!3271 = !DILocation(line: 2354, column: 39, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3267, file: !1, line: 2353, column: 26)
!3273 = !DILocation(line: 2354, column: 22, scope: !3272)
!3274 = !DILocation(line: 2354, column: 20, scope: !3272)
!3275 = !DILocation(line: 2355, column: 16, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3272, file: !1, line: 2355, column: 16)
!3277 = !DILocation(line: 2355, column: 16, scope: !3272)
!3278 = !DILocation(line: 2356, column: 15, scope: !3276)
!3279 = !DILocation(line: 2357, column: 11, scope: !3272)
!3280 = !DILocation(line: 2358, column: 37, scope: !3268)
!3281 = !DILocation(line: 2359, column: 48, scope: !3268)
!3282 = !DILocation(line: 2360, column: 37, scope: !3268)
!3283 = !DILocation(line: 2360, column: 41, scope: !3268)
!3284 = !DILocation(line: 2360, column: 47, scope: !3268)
!3285 = !DILocation(line: 2360, column: 51, scope: !3268)
!3286 = !DILocation(line: 2358, column: 20, scope: !3268)
!3287 = !DILocation(line: 2358, column: 18, scope: !3268)
!3288 = !DILocation(line: 2361, column: 14, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3268, file: !1, line: 2361, column: 14)
!3290 = !DILocation(line: 2361, column: 14, scope: !3268)
!3291 = !DILocation(line: 2362, column: 13, scope: !3289)
!3292 = !DILocation(line: 2363, column: 16, scope: !3268)
!3293 = !DILocation(line: 2364, column: 9, scope: !3268)
!3294 = !DILocation(line: 2365, column: 14, scope: !3263)
!3295 = !DILocation(line: 2365, column: 18, scope: !3263)
!3296 = !DILocation(line: 2365, column: 12, scope: !3263)
!3297 = !DILocation(line: 2351, column: 7, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3254, file: !1, discriminator: 2)
!3299 = !DILocation(line: 2367, column: 28, scope: !3254)
!3300 = !DILocation(line: 2367, column: 7, scope: !3254)
!3301 = !DILocation(line: 2368, column: 5, scope: !3254)
!3302 = !DILocation(line: 2369, column: 8, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 2369, column: 8)
!3304 = !DILocation(line: 2369, column: 19, scope: !3303)
!3305 = !DILocation(line: 2369, column: 23, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !3303, file: !1, discriminator: 1)
!3307 = !DILocation(line: 2369, column: 8, scope: !3306)
!3308 = !DILocation(line: 2370, column: 11, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3310, file: !1, line: 2370, column: 10)
!3310 = distinct !DILexicalBlock(scope: !3303, file: !1, line: 2369, column: 31)
!3311 = !DILocation(line: 2370, column: 10, scope: !3310)
!3312 = !DILocation(line: 2371, column: 35, scope: !3309)
!3313 = !DILocation(line: 2371, column: 18, scope: !3309)
!3314 = !DILocation(line: 2371, column: 16, scope: !3309)
!3315 = !DILocation(line: 2371, column: 9, scope: !3309)
!3316 = !DILocation(line: 2372, column: 11, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3310, file: !1, line: 2372, column: 10)
!3318 = !DILocation(line: 2372, column: 10, scope: !3310)
!3319 = !DILocation(line: 2373, column: 35, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !1, line: 2372, column: 19)
!3321 = !DILocation(line: 2373, column: 55, scope: !3320)
!3322 = !DILocation(line: 2374, column: 35, scope: !3320)
!3323 = !DILocation(line: 2373, column: 18, scope: !3320)
!3324 = !DILocation(line: 2373, column: 16, scope: !3320)
!3325 = !DILocation(line: 2375, column: 14, scope: !3320)
!3326 = !DILocation(line: 2376, column: 7, scope: !3320)
!3327 = !DILocation(line: 2377, column: 5, scope: !3310)
!3328 = !DILocation(line: 2378, column: 8, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 2378, column: 8)
!3330 = !DILocation(line: 2378, column: 14, scope: !3329)
!3331 = !DILocation(line: 2378, column: 18, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3329, file: !1, discriminator: 1)
!3333 = !DILocation(line: 2378, column: 8, scope: !3332)
!3334 = !DILocation(line: 2379, column: 32, scope: !3329)
!3335 = !DILocation(line: 2379, column: 16, scope: !3329)
!3336 = !DILocation(line: 2379, column: 14, scope: !3329)
!3337 = !DILocation(line: 2379, column: 7, scope: !3329)
!3338 = !DILocation(line: 2381, column: 8, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 2381, column: 8)
!3340 = !DILocation(line: 2381, column: 8, scope: !3211)
!3341 = !DILocation(line: 2382, column: 14, scope: !3339)
!3342 = !DILocation(line: 2382, column: 7, scope: !3339)
!3343 = !DILocation(line: 2383, column: 3, scope: !3211)
!3344 = !DILocation(line: 2386, column: 35, scope: !1904)
!3345 = !DILocation(line: 2386, column: 41, scope: !1904)
!3346 = !DILocation(line: 2386, column: 12, scope: !1904)
!3347 = !DILocation(line: 2386, column: 10, scope: !1904)
!3348 = !DILocation(line: 2387, column: 6, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2387, column: 6)
!3350 = !DILocation(line: 2387, column: 6, scope: !1904)
!3351 = !DILocation(line: 2388, column: 12, scope: !3349)
!3352 = !DILocation(line: 2388, column: 5, scope: !3349)
!3353 = !DILocation(line: 2390, column: 36, scope: !1904)
!3354 = !DILocation(line: 2390, column: 49, scope: !1904)
!3355 = !DILocation(line: 2390, column: 12, scope: !1904)
!3356 = !DILocation(line: 2390, column: 10, scope: !1904)
!3357 = !DILocation(line: 2391, column: 6, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2391, column: 6)
!3359 = !DILocation(line: 2391, column: 6, scope: !1904)
!3360 = !DILocation(line: 2392, column: 12, scope: !3358)
!3361 = !DILocation(line: 2392, column: 5, scope: !3358)
!3362 = !DILocation(line: 2394, column: 3, scope: !1904)
!3363 = !DILocation(line: 2394, column: 9, scope: !1904)
!3364 = !DILocation(line: 2394, column: 18, scope: !1904)
!3365 = !DILocation(line: 2395, column: 26, scope: !1904)
!3366 = !DILocation(line: 2395, column: 3, scope: !1904)
!3367 = !DILocation(line: 2401, column: 10, scope: !1904)
!3368 = !DILocation(line: 2401, column: 3, scope: !1904)
!3369 = !DILocation(line: 2404, column: 9, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2404, column: 8)
!3371 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2401, column: 19)
!3372 = !DILocation(line: 2404, column: 15, scope: !3370)
!3373 = !DILocation(line: 2404, column: 22, scope: !3370)
!3374 = !DILocation(line: 2404, column: 25, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3370, file: !1, discriminator: 1)
!3376 = !DILocation(line: 2404, column: 31, scope: !3375)
!3377 = !DILocation(line: 2404, column: 36, scope: !3375)
!3378 = !DILocation(line: 2404, column: 8, scope: !3375)
!3379 = !DILocation(line: 2406, column: 33, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3370, file: !1, line: 2404, column: 45)
!3381 = !DILocation(line: 2406, column: 16, scope: !3380)
!3382 = !DILocation(line: 2406, column: 14, scope: !3380)
!3383 = !DILocation(line: 2407, column: 10, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3380, file: !1, line: 2407, column: 10)
!3385 = !DILocation(line: 2407, column: 10, scope: !3380)
!3386 = !DILocation(line: 2408, column: 16, scope: !3384)
!3387 = !DILocation(line: 2408, column: 9, scope: !3384)
!3388 = !DILocation(line: 2410, column: 37, scope: !3380)
!3389 = !DILocation(line: 2410, column: 49, scope: !3380)
!3390 = !DILocation(line: 2411, column: 38, scope: !3380)
!3391 = !DILocation(line: 2411, column: 44, scope: !3380)
!3392 = !DILocation(line: 2411, column: 49, scope: !3380)
!3393 = !DILocation(line: 2410, column: 16, scope: !3380)
!3394 = !DILocation(line: 2410, column: 14, scope: !3380)
!3395 = !DILocation(line: 2412, column: 10, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3380, file: !1, line: 2412, column: 10)
!3397 = !DILocation(line: 2412, column: 10, scope: !3380)
!3398 = !DILocation(line: 2413, column: 15, scope: !3396)
!3399 = !DILocation(line: 2413, column: 9, scope: !3396)
!3400 = !DILocation(line: 2416, column: 29, scope: !3396)
!3401 = !DILocation(line: 2416, column: 59, scope: !3396)
!3402 = !DILocation(line: 2416, column: 65, scope: !3396)
!3403 = !DILocation(line: 2416, column: 9, scope: !3396)
!3404 = !DILocation(line: 2418, column: 7, scope: !3380)
!3405 = !DILocation(line: 2421, column: 23, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2421, column: 8)
!3407 = !DILocation(line: 2421, column: 29, scope: !3406)
!3408 = !DILocation(line: 2421, column: 35, scope: !3406)
!3409 = !DILocation(line: 2421, column: 41, scope: !3406)
!3410 = !DILocation(line: 2421, column: 8, scope: !3406)
!3411 = !DILocation(line: 2421, column: 8, scope: !3371)
!3412 = !DILocation(line: 2422, column: 13, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3406, file: !1, line: 2421, column: 50)
!3414 = !DILocation(line: 2422, column: 7, scope: !3413)
!3415 = !DILocation(line: 2423, column: 7, scope: !3413)
!3416 = !DILocation(line: 2431, column: 29, scope: !3371)
!3417 = !DILocation(line: 2431, column: 35, scope: !3371)
!3418 = !DILocation(line: 2431, column: 41, scope: !3371)
!3419 = !DILocation(line: 2431, column: 5, scope: !3371)
!3420 = !DILocation(line: 2431, column: 11, scope: !3371)
!3421 = !DILocation(line: 2431, column: 16, scope: !3371)
!3422 = !DILocation(line: 2431, column: 27, scope: !3371)
!3423 = !DILocation(line: 2434, column: 5, scope: !3371)
!3424 = !DILocation(line: 2434, column: 11, scope: !3371)
!3425 = !DILocation(line: 2434, column: 17, scope: !3371)
!3426 = !DILocation(line: 2434, column: 28, scope: !3371)
!3427 = !DILocation(line: 2435, column: 23, scope: !3371)
!3428 = !DILocation(line: 2435, column: 29, scope: !3371)
!3429 = !DILocation(line: 2435, column: 22, scope: !3371)
!3430 = !DILocation(line: 2435, column: 5, scope: !3371)
!3431 = !DILocation(line: 2435, column: 11, scope: !3371)
!3432 = !DILocation(line: 2435, column: 17, scope: !3371)
!3433 = !DILocation(line: 2435, column: 20, scope: !3371)
!3434 = !DILocation(line: 2437, column: 5, scope: !3371)
!3435 = !DILocation(line: 2437, column: 11, scope: !3371)
!3436 = !DILocation(line: 2437, column: 19, scope: !3371)
!3437 = !DILocation(line: 2439, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2439, column: 8)
!3439 = !DILocation(line: 2439, column: 15, scope: !3438)
!3440 = !DILocation(line: 2439, column: 19, scope: !3438)
!3441 = !DILocation(line: 2439, column: 33, scope: !3438)
!3442 = !DILocation(line: 2440, column: 27, scope: !3438)
!3443 = !DILocation(line: 2440, column: 9, scope: !3438)
!3444 = !DILocation(line: 2439, column: 8, scope: !3445)
!3445 = !DILexicalBlockFile(scope: !3371, file: !1, discriminator: 1)
!3446 = !DILocation(line: 2442, column: 33, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 2440, column: 53)
!3448 = !DILocation(line: 2444, column: 41, scope: !3447)
!3449 = !DILocation(line: 2444, column: 47, scope: !3447)
!3450 = !DILocation(line: 2442, column: 16, scope: !3447)
!3451 = !DILocation(line: 2442, column: 14, scope: !3447)
!3452 = !DILocation(line: 2445, column: 10, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3447, file: !1, line: 2445, column: 10)
!3454 = !DILocation(line: 2445, column: 10, scope: !3447)
!3455 = !DILocation(line: 2446, column: 16, scope: !3453)
!3456 = !DILocation(line: 2446, column: 9, scope: !3453)
!3457 = !DILocation(line: 2447, column: 5, scope: !3447)
!3458 = !DILocation(line: 2449, column: 24, scope: !3371)
!3459 = !DILocation(line: 2449, column: 30, scope: !3371)
!3460 = !DILocation(line: 2449, column: 36, scope: !3371)
!3461 = !DILocation(line: 2449, column: 14, scope: !3371)
!3462 = !DILocation(line: 2449, column: 12, scope: !3371)
!3463 = !DILocation(line: 2450, column: 8, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2450, column: 8)
!3465 = !DILocation(line: 2450, column: 8, scope: !3371)
!3466 = !DILocation(line: 2451, column: 14, scope: !3464)
!3467 = !DILocation(line: 2451, column: 7, scope: !3464)
!3468 = !DILocalVariable(name: "contentType", scope: !3469, file: !1, line: 2457, type: !230)
!3469 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2453, column: 5)
!3470 = !DILocation(line: 2457, column: 13, scope: !3469)
!3471 = !DILocalVariable(name: "linelength", scope: !3469, file: !1, line: 2458, type: !158)
!3472 = !DILocation(line: 2458, column: 14, scope: !3469)
!3473 = !DILocation(line: 2459, column: 50, scope: !3469)
!3474 = !DILocation(line: 2459, column: 56, scope: !3469)
!3475 = !DILocation(line: 2459, column: 41, scope: !3469)
!3476 = !DILocation(line: 2459, column: 21, scope: !3469)
!3477 = !DILocation(line: 2459, column: 19, scope: !3469)
!3478 = !DILocation(line: 2461, column: 11, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3469, file: !1, line: 2461, column: 10)
!3480 = !DILocation(line: 2461, column: 10, scope: !3469)
!3481 = !DILocation(line: 2462, column: 15, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3479, file: !1, line: 2461, column: 24)
!3483 = !DILocation(line: 2462, column: 9, scope: !3482)
!3484 = !DILocation(line: 2463, column: 9, scope: !3482)
!3485 = !DILocation(line: 2466, column: 32, scope: !3469)
!3486 = !DILocation(line: 2466, column: 44, scope: !3469)
!3487 = !DILocation(line: 2466, column: 57, scope: !3469)
!3488 = !DILocation(line: 2466, column: 16, scope: !3469)
!3489 = !DILocation(line: 2466, column: 14, scope: !3469)
!3490 = !DILocation(line: 2467, column: 10, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3469, file: !1, line: 2467, column: 10)
!3492 = !DILocation(line: 2467, column: 10, scope: !3469)
!3493 = !DILocation(line: 2468, column: 16, scope: !3491)
!3494 = !DILocation(line: 2468, column: 9, scope: !3491)
!3495 = !DILocation(line: 2472, column: 30, scope: !3371)
!3496 = !DILocation(line: 2472, column: 14, scope: !3371)
!3497 = !DILocation(line: 2472, column: 12, scope: !3371)
!3498 = !DILocation(line: 2473, column: 8, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2473, column: 8)
!3500 = !DILocation(line: 2473, column: 8, scope: !3371)
!3501 = !DILocation(line: 2474, column: 14, scope: !3499)
!3502 = !DILocation(line: 2474, column: 7, scope: !3499)
!3503 = !DILocation(line: 2477, column: 28, scope: !3371)
!3504 = !DILocation(line: 2477, column: 34, scope: !3371)
!3505 = !DILocation(line: 2477, column: 40, scope: !3371)
!3506 = !DILocation(line: 2477, column: 5, scope: !3371)
!3507 = !DILocation(line: 2480, column: 35, scope: !3371)
!3508 = !DILocation(line: 2480, column: 47, scope: !3371)
!3509 = !DILocation(line: 2481, column: 36, scope: !3371)
!3510 = !DILocation(line: 2481, column: 42, scope: !3371)
!3511 = !DILocation(line: 2481, column: 47, scope: !3371)
!3512 = !DILocation(line: 2480, column: 14, scope: !3371)
!3513 = !DILocation(line: 2480, column: 12, scope: !3371)
!3514 = !DILocation(line: 2482, column: 8, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2482, column: 8)
!3516 = !DILocation(line: 2482, column: 8, scope: !3371)
!3517 = !DILocation(line: 2483, column: 13, scope: !3515)
!3518 = !DILocation(line: 2483, column: 7, scope: !3515)
!3519 = !DILocation(line: 2486, column: 27, scope: !3515)
!3520 = !DILocation(line: 2487, column: 28, scope: !3515)
!3521 = !DILocation(line: 2487, column: 34, scope: !3515)
!3522 = !DILocation(line: 2488, column: 28, scope: !3515)
!3523 = !DILocation(line: 2488, column: 34, scope: !3515)
!3524 = !DILocation(line: 2486, column: 7, scope: !3515)
!3525 = !DILocation(line: 2490, column: 8, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2490, column: 8)
!3527 = !DILocation(line: 2490, column: 8, scope: !3371)
!3528 = !DILocation(line: 2491, column: 23, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3526, file: !1, line: 2490, column: 16)
!3530 = !DILocation(line: 2491, column: 29, scope: !3529)
!3531 = !DILocation(line: 2491, column: 7, scope: !3529)
!3532 = !DILocation(line: 2492, column: 14, scope: !3529)
!3533 = !DILocation(line: 2492, column: 7, scope: !3529)
!3534 = !DILocation(line: 2496, column: 12, scope: !3371)
!3535 = !DILocation(line: 2497, column: 8, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2497, column: 8)
!3537 = !DILocation(line: 2497, column: 8, scope: !3371)
!3538 = !DILocation(line: 2498, column: 23, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3536, file: !1, line: 2497, column: 16)
!3540 = !DILocation(line: 2498, column: 29, scope: !3539)
!3541 = !DILocation(line: 2498, column: 7, scope: !3539)
!3542 = !DILocation(line: 2499, column: 14, scope: !3539)
!3543 = !DILocation(line: 2499, column: 7, scope: !3539)
!3544 = !DILocation(line: 2502, column: 5, scope: !3371)
!3545 = !DILocation(line: 2506, column: 8, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2506, column: 8)
!3547 = !DILocation(line: 2506, column: 14, scope: !3546)
!3548 = !DILocation(line: 2506, column: 19, scope: !3546)
!3549 = !DILocation(line: 2506, column: 8, scope: !3371)
!3550 = !DILocation(line: 2507, column: 16, scope: !3546)
!3551 = !DILocation(line: 2507, column: 7, scope: !3546)
!3552 = !DILocation(line: 2509, column: 18, scope: !3546)
!3553 = !DILocation(line: 2509, column: 24, scope: !3546)
!3554 = !DILocation(line: 2509, column: 30, scope: !3546)
!3555 = !DILocation(line: 2509, column: 16, scope: !3546)
!3556 = !DILocation(line: 2511, column: 9, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2511, column: 8)
!3558 = !DILocation(line: 2511, column: 18, scope: !3557)
!3559 = !DILocation(line: 2511, column: 25, scope: !3557)
!3560 = !DILocation(line: 2511, column: 29, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3557, file: !1, discriminator: 1)
!3562 = !DILocation(line: 2511, column: 35, scope: !3561)
!3563 = !DILocation(line: 2511, column: 39, scope: !3561)
!3564 = !DILocation(line: 2511, column: 53, scope: !3561)
!3565 = !DILocation(line: 2512, column: 9, scope: !3557)
!3566 = !DILocation(line: 2512, column: 15, scope: !3557)
!3567 = !DILocation(line: 2512, column: 20, scope: !3557)
!3568 = !DILocation(line: 2512, column: 28, scope: !3557)
!3569 = !DILocation(line: 2512, column: 50, scope: !3561)
!3570 = !DILocation(line: 2512, column: 32, scope: !3561)
!3571 = !DILocation(line: 2511, column: 8, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3371, file: !1, discriminator: 2)
!3573 = !DILocation(line: 2514, column: 33, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3557, file: !1, line: 2512, column: 77)
!3575 = !DILocation(line: 2516, column: 41, scope: !3574)
!3576 = !DILocation(line: 2514, column: 16, scope: !3574)
!3577 = !DILocation(line: 2514, column: 14, scope: !3574)
!3578 = !DILocation(line: 2517, column: 10, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3574, file: !1, line: 2517, column: 10)
!3580 = !DILocation(line: 2517, column: 10, scope: !3574)
!3581 = !DILocation(line: 2518, column: 16, scope: !3579)
!3582 = !DILocation(line: 2518, column: 9, scope: !3579)
!3583 = !DILocation(line: 2519, column: 5, scope: !3574)
!3584 = !DILocation(line: 2521, column: 8, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2521, column: 8)
!3586 = !DILocation(line: 2521, column: 17, scope: !3585)
!3587 = !DILocation(line: 2521, column: 8, scope: !3371)
!3588 = !DILocation(line: 2522, column: 26, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3585, file: !1, line: 2521, column: 23)
!3590 = !DILocation(line: 2522, column: 32, scope: !3589)
!3591 = !DILocation(line: 2522, column: 38, scope: !3589)
!3592 = !DILocation(line: 2522, column: 16, scope: !3589)
!3593 = !DILocation(line: 2522, column: 14, scope: !3589)
!3594 = !DILocation(line: 2523, column: 10, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3589, file: !1, line: 2523, column: 10)
!3596 = !DILocation(line: 2523, column: 10, scope: !3589)
!3597 = !DILocation(line: 2524, column: 16, scope: !3595)
!3598 = !DILocation(line: 2524, column: 9, scope: !3595)
!3599 = !DILocation(line: 2525, column: 5, scope: !3589)
!3600 = !DILocation(line: 2527, column: 30, scope: !3371)
!3601 = !DILocation(line: 2527, column: 14, scope: !3371)
!3602 = !DILocation(line: 2527, column: 12, scope: !3371)
!3603 = !DILocation(line: 2528, column: 8, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2528, column: 8)
!3605 = !DILocation(line: 2528, column: 8, scope: !3371)
!3606 = !DILocation(line: 2529, column: 14, scope: !3604)
!3607 = !DILocation(line: 2529, column: 7, scope: !3604)
!3608 = !DILocation(line: 2532, column: 28, scope: !3371)
!3609 = !DILocation(line: 2532, column: 34, scope: !3371)
!3610 = !DILocation(line: 2532, column: 5, scope: !3371)
!3611 = !DILocation(line: 2535, column: 35, scope: !3371)
!3612 = !DILocation(line: 2535, column: 47, scope: !3371)
!3613 = !DILocation(line: 2536, column: 36, scope: !3371)
!3614 = !DILocation(line: 2536, column: 42, scope: !3371)
!3615 = !DILocation(line: 2536, column: 47, scope: !3371)
!3616 = !DILocation(line: 2535, column: 14, scope: !3371)
!3617 = !DILocation(line: 2535, column: 12, scope: !3371)
!3618 = !DILocation(line: 2537, column: 8, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2537, column: 8)
!3620 = !DILocation(line: 2537, column: 8, scope: !3371)
!3621 = !DILocation(line: 2538, column: 13, scope: !3619)
!3622 = !DILocation(line: 2538, column: 7, scope: !3619)
!3623 = !DILocation(line: 2541, column: 27, scope: !3619)
!3624 = !DILocation(line: 2542, column: 28, scope: !3619)
!3625 = !DILocation(line: 2542, column: 34, scope: !3619)
!3626 = !DILocation(line: 2542, column: 49, scope: !3619)
!3627 = !DILocation(line: 2543, column: 27, scope: !3619)
!3628 = !DILocation(line: 2543, column: 37, scope: !3629)
!3629 = !DILexicalBlockFile(scope: !3619, file: !1, discriminator: 1)
!3630 = !DILocation(line: 2543, column: 43, scope: !3629)
!3631 = !DILocation(line: 2543, column: 27, scope: !3629)
!3632 = !DILocation(line: 2543, column: 27, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3619, file: !1, discriminator: 2)
!3634 = !DILocation(line: 2543, column: 27, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !3619, file: !1, discriminator: 3)
!3636 = !DILocation(line: 2541, column: 7, scope: !3629)
!3637 = !DILocation(line: 2544, column: 8, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2544, column: 8)
!3639 = !DILocation(line: 2544, column: 8, scope: !3371)
!3640 = !DILocation(line: 2545, column: 14, scope: !3638)
!3641 = !DILocation(line: 2545, column: 7, scope: !3638)
!3642 = !DILocation(line: 2546, column: 5, scope: !3371)
!3643 = !DILocation(line: 2551, column: 8, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2551, column: 8)
!3645 = !DILocation(line: 2551, column: 14, scope: !3644)
!3646 = !DILocation(line: 2551, column: 19, scope: !3644)
!3647 = !DILocation(line: 2551, column: 8, scope: !3371)
!3648 = !DILocation(line: 2552, column: 16, scope: !3644)
!3649 = !DILocation(line: 2552, column: 7, scope: !3644)
!3650 = !DILocation(line: 2555, column: 19, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3644, file: !1, line: 2553, column: 10)
!3652 = !DILocation(line: 2555, column: 25, scope: !3651)
!3653 = !DILocation(line: 2555, column: 31, scope: !3651)
!3654 = !DILocation(line: 2555, column: 42, scope: !3651)
!3655 = !DILocation(line: 2555, column: 18, scope: !3651)
!3656 = !DILocation(line: 2556, column: 9, scope: !3651)
!3657 = !DILocation(line: 2556, column: 15, scope: !3651)
!3658 = !DILocation(line: 2556, column: 21, scope: !3651)
!3659 = !DILocation(line: 2555, column: 18, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3651, file: !1, discriminator: 1)
!3661 = !DILocation(line: 2557, column: 10, scope: !3651)
!3662 = !DILocation(line: 2557, column: 16, scope: !3651)
!3663 = !DILocation(line: 2557, column: 20, scope: !3651)
!3664 = !DILocation(line: 2557, column: 51, scope: !3660)
!3665 = !DILocation(line: 2557, column: 57, scope: !3660)
!3666 = !DILocation(line: 2557, column: 61, scope: !3660)
!3667 = !DILocation(line: 2557, column: 44, scope: !3660)
!3668 = !DILocation(line: 2557, column: 10, scope: !3660)
!3669 = !DILocation(line: 2557, column: 10, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3651, file: !1, discriminator: 2)
!3671 = !DILocation(line: 2557, column: 10, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3651, file: !1, discriminator: 3)
!3673 = !DILocation(line: 2555, column: 18, scope: !3670)
!3674 = !DILocation(line: 2555, column: 18, scope: !3672)
!3675 = !DILocation(line: 2555, column: 16, scope: !3672)
!3676 = !DILocation(line: 2563, column: 9, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2563, column: 8)
!3678 = !DILocation(line: 2563, column: 18, scope: !3677)
!3679 = !DILocation(line: 2563, column: 25, scope: !3677)
!3680 = !DILocation(line: 2563, column: 29, scope: !3681)
!3681 = !DILexicalBlockFile(scope: !3677, file: !1, discriminator: 1)
!3682 = !DILocation(line: 2563, column: 35, scope: !3681)
!3683 = !DILocation(line: 2563, column: 39, scope: !3681)
!3684 = !DILocation(line: 2563, column: 53, scope: !3681)
!3685 = !DILocation(line: 2564, column: 9, scope: !3677)
!3686 = !DILocation(line: 2564, column: 15, scope: !3677)
!3687 = !DILocation(line: 2564, column: 20, scope: !3677)
!3688 = !DILocation(line: 2564, column: 28, scope: !3677)
!3689 = !DILocation(line: 2564, column: 50, scope: !3681)
!3690 = !DILocation(line: 2564, column: 32, scope: !3681)
!3691 = !DILocation(line: 2563, column: 8, scope: !3572)
!3692 = !DILocation(line: 2567, column: 33, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3677, file: !1, line: 2564, column: 77)
!3694 = !DILocation(line: 2569, column: 41, scope: !3693)
!3695 = !DILocation(line: 2567, column: 16, scope: !3693)
!3696 = !DILocation(line: 2567, column: 14, scope: !3693)
!3697 = !DILocation(line: 2570, column: 10, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3693, file: !1, line: 2570, column: 10)
!3699 = !DILocation(line: 2570, column: 10, scope: !3693)
!3700 = !DILocation(line: 2571, column: 16, scope: !3698)
!3701 = !DILocation(line: 2571, column: 9, scope: !3698)
!3702 = !DILocation(line: 2572, column: 5, scope: !3693)
!3703 = !DILocation(line: 2574, column: 27, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2574, column: 8)
!3705 = !DILocation(line: 2574, column: 9, scope: !3704)
!3706 = !DILocation(line: 2574, column: 8, scope: !3371)
!3707 = !DILocation(line: 2575, column: 33, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !1, line: 2574, column: 51)
!3709 = !DILocation(line: 2575, column: 16, scope: !3708)
!3710 = !DILocation(line: 2575, column: 14, scope: !3708)
!3711 = !DILocation(line: 2578, column: 10, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 2578, column: 10)
!3713 = !DILocation(line: 2578, column: 10, scope: !3708)
!3714 = !DILocation(line: 2579, column: 16, scope: !3712)
!3715 = !DILocation(line: 2579, column: 9, scope: !3712)
!3716 = !DILocation(line: 2580, column: 5, scope: !3708)
!3717 = !DILocation(line: 2586, column: 29, scope: !3371)
!3718 = !DILocation(line: 2586, column: 11, scope: !3371)
!3719 = !DILocation(line: 2586, column: 9, scope: !3371)
!3720 = !DILocation(line: 2587, column: 8, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2587, column: 8)
!3722 = !DILocation(line: 2587, column: 8, scope: !3371)
!3723 = !DILocation(line: 2589, column: 28, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3721, file: !1, line: 2587, column: 13)
!3725 = !DILocation(line: 2589, column: 9, scope: !3724)
!3726 = !DILocation(line: 2588, column: 7, scope: !3724)
!3727 = !DILocation(line: 2588, column: 13, scope: !3724)
!3728 = !DILocation(line: 2588, column: 19, scope: !3724)
!3729 = !DILocation(line: 2588, column: 35, scope: !3724)
!3730 = !DILocation(line: 2590, column: 5, scope: !3724)
!3731 = !DILocation(line: 2591, column: 13, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3721, file: !1, line: 2591, column: 13)
!3733 = !DILocation(line: 2591, column: 22, scope: !3732)
!3734 = !DILocation(line: 2591, column: 47, scope: !3732)
!3735 = !DILocation(line: 2591, column: 50, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3732, file: !1, discriminator: 1)
!3737 = !DILocation(line: 2591, column: 59, scope: !3736)
!3738 = !DILocation(line: 2591, column: 13, scope: !3736)
!3739 = !DILocation(line: 2592, column: 26, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3732, file: !1, line: 2591, column: 64)
!3741 = !DILocation(line: 2592, column: 32, scope: !3740)
!3742 = !DILocation(line: 2592, column: 38, scope: !3740)
!3743 = !DILocation(line: 2592, column: 16, scope: !3740)
!3744 = !DILocation(line: 2592, column: 14, scope: !3740)
!3745 = !DILocation(line: 2593, column: 10, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3740, file: !1, line: 2593, column: 10)
!3747 = !DILocation(line: 2593, column: 10, scope: !3740)
!3748 = !DILocation(line: 2594, column: 16, scope: !3746)
!3749 = !DILocation(line: 2594, column: 9, scope: !3746)
!3750 = !DILocation(line: 2595, column: 5, scope: !3740)
!3751 = !DILocation(line: 2597, column: 7, scope: !3732)
!3752 = !DILocation(line: 2597, column: 13, scope: !3732)
!3753 = !DILocation(line: 2597, column: 19, scope: !3732)
!3754 = !DILocation(line: 2597, column: 35, scope: !3732)
!3755 = !DILocation(line: 2599, column: 8, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2599, column: 8)
!3757 = !DILocation(line: 2599, column: 14, scope: !3756)
!3758 = !DILocation(line: 2599, column: 18, scope: !3756)
!3759 = !DILocation(line: 2599, column: 8, scope: !3371)
!3760 = !DILocation(line: 2603, column: 10, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 2603, column: 10)
!3762 = distinct !DILexicalBlock(scope: !3756, file: !1, line: 2599, column: 30)
!3763 = !DILocation(line: 2603, column: 16, scope: !3761)
!3764 = !DILocation(line: 2603, column: 28, scope: !3761)
!3765 = !DILocation(line: 2603, column: 34, scope: !3761)
!3766 = !DILocation(line: 2604, column: 11, scope: !3761)
!3767 = !DILocation(line: 2604, column: 17, scope: !3761)
!3768 = !DILocation(line: 2604, column: 23, scope: !3761)
!3769 = !DILocation(line: 2604, column: 39, scope: !3761)
!3770 = !DILocation(line: 2605, column: 11, scope: !3761)
!3771 = !DILocation(line: 2605, column: 20, scope: !3761)
!3772 = !DILocation(line: 2603, column: 10, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3762, file: !1, discriminator: 1)
!3774 = !DILocation(line: 2613, column: 34, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3761, file: !1, line: 2605, column: 47)
!3776 = !DILocation(line: 2613, column: 18, scope: !3775)
!3777 = !DILocation(line: 2613, column: 16, scope: !3775)
!3778 = !DILocation(line: 2614, column: 12, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 2614, column: 12)
!3780 = !DILocation(line: 2614, column: 12, scope: !3775)
!3781 = !DILocation(line: 2615, column: 18, scope: !3779)
!3782 = !DILocation(line: 2615, column: 11, scope: !3779)
!3783 = !DILocation(line: 2617, column: 13, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 2617, column: 12)
!3785 = !DILocation(line: 2617, column: 19, scope: !3784)
!3786 = !DILocation(line: 2617, column: 23, scope: !3784)
!3787 = !DILocation(line: 2617, column: 12, scope: !3775)
!3788 = !DILocation(line: 2620, column: 36, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3784, file: !1, line: 2617, column: 38)
!3790 = !DILocation(line: 2620, column: 48, scope: !3789)
!3791 = !DILocation(line: 2620, column: 54, scope: !3789)
!3792 = !DILocation(line: 2620, column: 58, scope: !3789)
!3793 = !DILocation(line: 2621, column: 44, scope: !3789)
!3794 = !DILocation(line: 2620, column: 20, scope: !3789)
!3795 = !DILocation(line: 2620, column: 18, scope: !3789)
!3796 = !DILocation(line: 2622, column: 27, scope: !3789)
!3797 = !DILocation(line: 2622, column: 25, scope: !3789)
!3798 = !DILocation(line: 2623, column: 9, scope: !3789)
!3799 = !DILocation(line: 2625, column: 14, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !1, line: 2625, column: 14)
!3801 = distinct !DILexicalBlock(scope: !3784, file: !1, line: 2624, column: 14)
!3802 = !DILocation(line: 2625, column: 14, scope: !3801)
!3803 = !DILocation(line: 2627, column: 39, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3800, file: !1, line: 2625, column: 24)
!3805 = !DILocation(line: 2627, column: 66, scope: !3804)
!3806 = !DILocation(line: 2627, column: 61, scope: !3804)
!3807 = !DILocation(line: 2627, column: 22, scope: !3804)
!3808 = !DILocation(line: 2627, column: 20, scope: !3804)
!3809 = !DILocation(line: 2628, column: 17, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3804, file: !1, line: 2628, column: 16)
!3811 = !DILocation(line: 2628, column: 16, scope: !3804)
!3812 = !DILocation(line: 2629, column: 40, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3810, file: !1, line: 2628, column: 25)
!3814 = !DILocation(line: 2629, column: 52, scope: !3813)
!3815 = !DILocation(line: 2629, column: 58, scope: !3813)
!3816 = !DILocation(line: 2629, column: 62, scope: !3813)
!3817 = !DILocation(line: 2630, column: 48, scope: !3813)
!3818 = !DILocation(line: 2629, column: 24, scope: !3813)
!3819 = !DILocation(line: 2629, column: 22, scope: !3813)
!3820 = !DILocation(line: 2631, column: 19, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 2631, column: 18)
!3822 = !DILocation(line: 2631, column: 18, scope: !3813)
!3823 = !DILocation(line: 2632, column: 42, scope: !3821)
!3824 = !DILocation(line: 2632, column: 26, scope: !3821)
!3825 = !DILocation(line: 2632, column: 24, scope: !3821)
!3826 = !DILocation(line: 2632, column: 17, scope: !3821)
!3827 = !DILocation(line: 2633, column: 31, scope: !3813)
!3828 = !DILocation(line: 2633, column: 40, scope: !3813)
!3829 = !DILocation(line: 2633, column: 29, scope: !3813)
!3830 = !DILocation(line: 2634, column: 13, scope: !3813)
!3831 = !DILocation(line: 2635, column: 11, scope: !3804)
!3832 = !DILocation(line: 2636, column: 15, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3801, file: !1, line: 2636, column: 14)
!3834 = !DILocation(line: 2636, column: 14, scope: !3801)
!3835 = !DILocation(line: 2637, column: 38, scope: !3833)
!3836 = !DILocation(line: 2637, column: 22, scope: !3833)
!3837 = !DILocation(line: 2637, column: 20, scope: !3833)
!3838 = !DILocation(line: 2637, column: 13, scope: !3833)
!3839 = !DILocation(line: 2639, column: 25, scope: !3801)
!3840 = !DILocation(line: 2641, column: 12, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 2641, column: 12)
!3842 = !DILocation(line: 2641, column: 12, scope: !3775)
!3843 = !DILocation(line: 2642, column: 18, scope: !3841)
!3844 = !DILocation(line: 2642, column: 11, scope: !3841)
!3845 = !DILocation(line: 2644, column: 32, scope: !3775)
!3846 = !DILocation(line: 2644, column: 38, scope: !3775)
!3847 = !DILocation(line: 2644, column: 9, scope: !3775)
!3848 = !DILocation(line: 2645, column: 7, scope: !3775)
!3849 = !DILocation(line: 2648, column: 26, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3761, file: !1, line: 2646, column: 12)
!3851 = !DILocation(line: 2648, column: 9, scope: !3850)
!3852 = !DILocation(line: 2648, column: 15, scope: !3850)
!3853 = !DILocation(line: 2648, column: 24, scope: !3850)
!3854 = !DILocation(line: 2649, column: 26, scope: !3850)
!3855 = !DILocation(line: 2649, column: 32, scope: !3850)
!3856 = !DILocation(line: 2649, column: 36, scope: !3850)
!3857 = !DILocation(line: 2649, column: 9, scope: !3850)
!3858 = !DILocation(line: 2649, column: 15, scope: !3850)
!3859 = !DILocation(line: 2649, column: 24, scope: !3850)
!3860 = !DILocation(line: 2651, column: 9, scope: !3850)
!3861 = !DILocation(line: 2651, column: 15, scope: !3850)
!3862 = !DILocation(line: 2651, column: 23, scope: !3850)
!3863 = !DILocation(line: 2653, column: 9, scope: !3850)
!3864 = !DILocation(line: 2653, column: 15, scope: !3850)
!3865 = !DILocation(line: 2653, column: 21, scope: !3850)
!3866 = !DILocation(line: 2653, column: 32, scope: !3850)
!3867 = !DILocation(line: 2654, column: 34, scope: !3850)
!3868 = !DILocation(line: 2654, column: 26, scope: !3850)
!3869 = !DILocation(line: 2654, column: 9, scope: !3850)
!3870 = !DILocation(line: 2654, column: 15, scope: !3850)
!3871 = !DILocation(line: 2654, column: 21, scope: !3850)
!3872 = !DILocation(line: 2654, column: 24, scope: !3850)
!3873 = !DILocation(line: 2657, column: 32, scope: !3850)
!3874 = !DILocation(line: 2657, column: 38, scope: !3850)
!3875 = !DILocation(line: 2657, column: 44, scope: !3850)
!3876 = !DILocation(line: 2657, column: 9, scope: !3850)
!3877 = !DILocation(line: 2659, column: 34, scope: !3850)
!3878 = !DILocation(line: 2659, column: 18, scope: !3850)
!3879 = !DILocation(line: 2659, column: 16, scope: !3850)
!3880 = !DILocation(line: 2660, column: 12, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 2660, column: 12)
!3882 = !DILocation(line: 2660, column: 12, scope: !3850)
!3883 = !DILocation(line: 2661, column: 18, scope: !3881)
!3884 = !DILocation(line: 2661, column: 11, scope: !3881)
!3885 = !DILocation(line: 2663, column: 5, scope: !3762)
!3886 = !DILocation(line: 2665, column: 32, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3756, file: !1, line: 2664, column: 10)
!3888 = !DILocation(line: 2665, column: 16, scope: !3887)
!3889 = !DILocation(line: 2665, column: 14, scope: !3887)
!3890 = !DILocation(line: 2666, column: 10, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2666, column: 10)
!3892 = !DILocation(line: 2666, column: 10, scope: !3887)
!3893 = !DILocation(line: 2667, column: 16, scope: !3891)
!3894 = !DILocation(line: 2667, column: 9, scope: !3891)
!3895 = !DILocation(line: 2669, column: 10, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3887, file: !1, line: 2669, column: 10)
!3897 = !DILocation(line: 2669, column: 16, scope: !3896)
!3898 = !DILocation(line: 2669, column: 20, scope: !3896)
!3899 = !DILocation(line: 2669, column: 34, scope: !3896)
!3900 = !DILocation(line: 2669, column: 37, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !3896, file: !1, discriminator: 1)
!3902 = !DILocation(line: 2669, column: 43, scope: !3901)
!3903 = !DILocation(line: 2669, column: 48, scope: !3901)
!3904 = !DILocation(line: 2669, column: 10, scope: !3901)
!3905 = !DILocation(line: 2672, column: 34, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3896, file: !1, line: 2669, column: 57)
!3907 = !DILocation(line: 2672, column: 18, scope: !3906)
!3908 = !DILocation(line: 2672, column: 16, scope: !3906)
!3909 = !DILocation(line: 2675, column: 12, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 2675, column: 12)
!3911 = !DILocation(line: 2675, column: 12, scope: !3906)
!3912 = !DILocation(line: 2676, column: 18, scope: !3910)
!3913 = !DILocation(line: 2676, column: 11, scope: !3910)
!3914 = !DILocation(line: 2677, column: 7, scope: !3906)
!3915 = !DILocation(line: 2679, column: 15, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3896, file: !1, line: 2679, column: 15)
!3917 = !DILocation(line: 2679, column: 21, scope: !3916)
!3918 = !DILocation(line: 2679, column: 27, scope: !3916)
!3919 = !DILocation(line: 2679, column: 15, scope: !3896)
!3920 = !DILocation(line: 2681, column: 32, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !1, line: 2679, column: 39)
!3922 = !DILocation(line: 2681, column: 38, scope: !3921)
!3923 = !DILocation(line: 2681, column: 47, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3921, file: !1, discriminator: 1)
!3925 = !DILocation(line: 2681, column: 38, scope: !3924)
!3926 = !DILocation(line: 2681, column: 38, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3921, file: !1, discriminator: 2)
!3928 = !DILocation(line: 2681, column: 38, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3921, file: !1, discriminator: 3)
!3930 = !DILocation(line: 2681, column: 9, scope: !3929)
!3931 = !DILocation(line: 2686, column: 13, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3921, file: !1, line: 2686, column: 12)
!3933 = !DILocation(line: 2686, column: 19, scope: !3932)
!3934 = !DILocation(line: 2686, column: 24, scope: !3932)
!3935 = !DILocation(line: 2686, column: 12, scope: !3921)
!3936 = !DILocation(line: 2687, column: 37, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3932, file: !1, line: 2686, column: 33)
!3938 = !DILocation(line: 2687, column: 43, scope: !3937)
!3939 = !DILocation(line: 2687, column: 28, scope: !3937)
!3940 = !DILocation(line: 2687, column: 11, scope: !3937)
!3941 = !DILocation(line: 2687, column: 17, scope: !3937)
!3942 = !DILocation(line: 2687, column: 26, scope: !3937)
!3943 = !DILocation(line: 2688, column: 28, scope: !3937)
!3944 = !DILocation(line: 2688, column: 11, scope: !3937)
!3945 = !DILocation(line: 2688, column: 17, scope: !3937)
!3946 = !DILocation(line: 2688, column: 26, scope: !3937)
!3947 = !DILocation(line: 2689, column: 9, scope: !3937)
!3948 = !DILocation(line: 2690, column: 7, scope: !3921)
!3949 = !DILocation(line: 2693, column: 35, scope: !3371)
!3950 = !DILocation(line: 2693, column: 47, scope: !3371)
!3951 = !DILocation(line: 2693, column: 54, scope: !3371)
!3952 = !DILocation(line: 2693, column: 60, scope: !3371)
!3953 = !DILocation(line: 2693, column: 65, scope: !3371)
!3954 = !DILocation(line: 2694, column: 43, scope: !3371)
!3955 = !DILocation(line: 2693, column: 14, scope: !3371)
!3956 = !DILocation(line: 2693, column: 12, scope: !3371)
!3957 = !DILocation(line: 2696, column: 8, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2696, column: 8)
!3959 = !DILocation(line: 2696, column: 8, scope: !3371)
!3960 = !DILocation(line: 2697, column: 13, scope: !3958)
!3961 = !DILocation(line: 2697, column: 7, scope: !3958)
!3962 = !DILocation(line: 2699, column: 27, scope: !3958)
!3963 = !DILocation(line: 2700, column: 28, scope: !3958)
!3964 = !DILocation(line: 2700, column: 34, scope: !3958)
!3965 = !DILocation(line: 2700, column: 49, scope: !3958)
!3966 = !DILocation(line: 2700, column: 55, scope: !3958)
!3967 = !DILocation(line: 2701, column: 27, scope: !3958)
!3968 = !DILocation(line: 2701, column: 33, scope: !3958)
!3969 = !DILocation(line: 2701, column: 43, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 1)
!3971 = !DILocation(line: 2701, column: 49, scope: !3970)
!3972 = !DILocation(line: 2701, column: 27, scope: !3970)
!3973 = !DILocation(line: 2701, column: 27, scope: !3974)
!3974 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 2)
!3975 = !DILocation(line: 2701, column: 27, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3958, file: !1, discriminator: 3)
!3977 = !DILocation(line: 2699, column: 7, scope: !3970)
!3978 = !DILocation(line: 2702, column: 5, scope: !3371)
!3979 = !DILocation(line: 2705, column: 30, scope: !3371)
!3980 = !DILocation(line: 2705, column: 14, scope: !3371)
!3981 = !DILocation(line: 2705, column: 12, scope: !3371)
!3982 = !DILocation(line: 2706, column: 8, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2706, column: 8)
!3984 = !DILocation(line: 2706, column: 8, scope: !3371)
!3985 = !DILocation(line: 2707, column: 14, scope: !3983)
!3986 = !DILocation(line: 2707, column: 7, scope: !3983)
!3987 = !DILocation(line: 2710, column: 35, scope: !3371)
!3988 = !DILocation(line: 2710, column: 47, scope: !3371)
!3989 = !DILocation(line: 2711, column: 36, scope: !3371)
!3990 = !DILocation(line: 2711, column: 42, scope: !3371)
!3991 = !DILocation(line: 2711, column: 47, scope: !3371)
!3992 = !DILocation(line: 2710, column: 14, scope: !3371)
!3993 = !DILocation(line: 2710, column: 12, scope: !3371)
!3994 = !DILocation(line: 2713, column: 8, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 2713, column: 8)
!3996 = !DILocation(line: 2713, column: 8, scope: !3371)
!3997 = !DILocation(line: 2714, column: 13, scope: !3995)
!3998 = !DILocation(line: 2714, column: 7, scope: !3995)
!3999 = !DILocation(line: 2717, column: 27, scope: !3995)
!4000 = !DILocation(line: 2717, column: 57, scope: !3995)
!4001 = !DILocation(line: 2717, column: 63, scope: !3995)
!4002 = !DILocation(line: 2718, column: 27, scope: !3995)
!4003 = !DILocation(line: 2718, column: 33, scope: !3995)
!4004 = !DILocation(line: 2719, column: 27, scope: !3995)
!4005 = !DILocation(line: 2719, column: 33, scope: !3995)
!4006 = !DILocation(line: 2719, column: 43, scope: !4007)
!4007 = !DILexicalBlockFile(scope: !3995, file: !1, discriminator: 1)
!4008 = !DILocation(line: 2719, column: 49, scope: !4007)
!4009 = !DILocation(line: 2719, column: 27, scope: !4007)
!4010 = !DILocation(line: 2719, column: 27, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !3995, file: !1, discriminator: 2)
!4012 = !DILocation(line: 2719, column: 27, scope: !4013)
!4013 = !DILexicalBlockFile(scope: !3995, file: !1, discriminator: 3)
!4014 = !DILocation(line: 2717, column: 7, scope: !4007)
!4015 = !DILocation(line: 2720, column: 3, scope: !3371)
!4016 = !DILocation(line: 2721, column: 6, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2721, column: 6)
!4018 = !DILocation(line: 2721, column: 6, scope: !1904)
!4019 = !DILocation(line: 2722, column: 12, scope: !4017)
!4020 = !DILocation(line: 2722, column: 5, scope: !4017)
!4021 = !DILocation(line: 2724, column: 6, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2724, column: 6)
!4023 = !DILocation(line: 2724, column: 12, scope: !4022)
!4024 = !DILocation(line: 2724, column: 6, scope: !1904)
!4025 = !DILocation(line: 2727, column: 31, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4022, file: !1, line: 2724, column: 28)
!4027 = !DILocation(line: 2727, column: 37, scope: !4026)
!4028 = !DILocation(line: 2727, column: 43, scope: !4026)
!4029 = !DILocation(line: 2727, column: 5, scope: !4026)
!4030 = !DILocation(line: 2728, column: 24, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4026, file: !1, line: 2728, column: 8)
!4032 = !DILocation(line: 2728, column: 8, scope: !4031)
!4033 = !DILocation(line: 2728, column: 8, scope: !4026)
!4034 = !DILocation(line: 2729, column: 14, scope: !4031)
!4035 = !DILocation(line: 2729, column: 7, scope: !4031)
!4036 = !DILocation(line: 2731, column: 8, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4026, file: !1, line: 2731, column: 8)
!4038 = !DILocation(line: 2731, column: 14, scope: !4037)
!4039 = !DILocation(line: 2731, column: 32, scope: !4037)
!4040 = !DILocation(line: 2731, column: 29, scope: !4037)
!4041 = !DILocation(line: 2731, column: 8, scope: !4026)
!4042 = !DILocation(line: 2734, column: 13, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4037, file: !1, line: 2731, column: 42)
!4044 = !DILocation(line: 2736, column: 13, scope: !4043)
!4045 = !DILocation(line: 2736, column: 19, scope: !4043)
!4046 = !DILocation(line: 2736, column: 35, scope: !4043)
!4047 = !DILocation(line: 2734, column: 7, scope: !4043)
!4048 = !DILocation(line: 2737, column: 7, scope: !4043)
!4049 = !DILocation(line: 2737, column: 13, scope: !4043)
!4050 = !DILocation(line: 2737, column: 17, scope: !4043)
!4051 = !DILocation(line: 2737, column: 29, scope: !4043)
!4052 = !DILocation(line: 2738, column: 7, scope: !4043)
!4053 = !DILocation(line: 2738, column: 13, scope: !4043)
!4054 = !DILocation(line: 2738, column: 17, scope: !4043)
!4055 = !DILocation(line: 2738, column: 24, scope: !4043)
!4056 = !DILocation(line: 2739, column: 7, scope: !4043)
!4057 = !DILocation(line: 2739, column: 13, scope: !4043)
!4058 = !DILocation(line: 2739, column: 17, scope: !4043)
!4059 = !DILocation(line: 2739, column: 24, scope: !4043)
!4060 = !DILocation(line: 2740, column: 5, scope: !4043)
!4061 = !DILocation(line: 2741, column: 3, scope: !4026)
!4062 = !DILocation(line: 2743, column: 7, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 2743, column: 6)
!4064 = !DILocation(line: 2743, column: 13, scope: !4063)
!4065 = !DILocation(line: 2743, column: 25, scope: !4063)
!4066 = !DILocation(line: 2743, column: 32, scope: !4063)
!4067 = !DILocation(line: 2743, column: 35, scope: !4068)
!4068 = !DILexicalBlockFile(scope: !4063, file: !1, discriminator: 1)
!4069 = !DILocation(line: 2743, column: 41, scope: !4068)
!4070 = !DILocation(line: 2743, column: 45, scope: !4068)
!4071 = !DILocation(line: 2743, column: 6, scope: !4068)
!4072 = !DILocation(line: 2747, column: 5, scope: !4063)
!4073 = !DILocation(line: 2747, column: 11, scope: !4063)
!4074 = !DILocation(line: 2747, column: 15, scope: !4063)
!4075 = !DILocation(line: 2747, column: 29, scope: !4063)
!4076 = !DILocation(line: 2748, column: 10, scope: !1904)
!4077 = !DILocation(line: 2748, column: 3, scope: !1904)
!4078 = !DILocation(line: 2749, column: 1, scope: !1904)
!4079 = !DILocalVariable(name: "conn", arg: 1, scope: !1897, file: !1, line: 1426, type: !565)
!4080 = !DILocation(line: 1426, column: 45, scope: !1897)
!4081 = !DILocalVariable(name: "status", arg: 2, scope: !1897, file: !1, line: 1427, type: !569)
!4082 = !DILocation(line: 1427, column: 34, scope: !1897)
!4083 = !DILocalVariable(name: "premature", arg: 3, scope: !1897, file: !1, line: 1427, type: !226)
!4084 = !DILocation(line: 1427, column: 47, scope: !1897)
!4085 = !DILocalVariable(name: "data", scope: !1897, file: !1, line: 1429, type: !559)
!4086 = !DILocation(line: 1429, column: 21, scope: !1897)
!4087 = !DILocation(line: 1429, column: 28, scope: !1897)
!4088 = !DILocation(line: 1429, column: 34, scope: !1897)
!4089 = !DILocalVariable(name: "http", scope: !1897, file: !1, line: 1430, type: !1953)
!4090 = !DILocation(line: 1430, column: 16, scope: !1897)
!4091 = !DILocation(line: 1430, column: 23, scope: !1897)
!4092 = !DILocation(line: 1430, column: 29, scope: !1897)
!4093 = !DILocation(line: 1430, column: 33, scope: !1897)
!4094 = !DILocation(line: 1434, column: 3, scope: !1897)
!4095 = !DILocation(line: 1434, column: 9, scope: !1897)
!4096 = !DILocation(line: 1434, column: 15, scope: !1897)
!4097 = !DILocation(line: 1434, column: 24, scope: !1897)
!4098 = !DILocation(line: 1434, column: 34, scope: !1897)
!4099 = !DILocation(line: 1435, column: 3, scope: !1897)
!4100 = !DILocation(line: 1435, column: 9, scope: !1897)
!4101 = !DILocation(line: 1435, column: 15, scope: !1897)
!4102 = !DILocation(line: 1435, column: 25, scope: !1897)
!4103 = !DILocation(line: 1435, column: 35, scope: !1897)
!4104 = !DILocation(line: 1437, column: 3, scope: !1897)
!4105 = !DILocation(line: 1437, column: 3, scope: !4106)
!4106 = !DILexicalBlockFile(scope: !4107, file: !1, discriminator: 1)
!4107 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1437, column: 3)
!4108 = !DILocation(line: 1454, column: 21, scope: !1897)
!4109 = !DILocation(line: 1454, column: 27, scope: !1897)
!4110 = !DILocation(line: 1454, column: 31, scope: !1897)
!4111 = !DILocation(line: 1454, column: 3, scope: !1897)
!4112 = !DILocation(line: 1454, column: 9, scope: !1897)
!4113 = !DILocation(line: 1454, column: 19, scope: !1897)
!4114 = !DILocation(line: 1455, column: 23, scope: !1897)
!4115 = !DILocation(line: 1455, column: 29, scope: !1897)
!4116 = !DILocation(line: 1455, column: 33, scope: !1897)
!4117 = !DILocation(line: 1455, column: 3, scope: !1897)
!4118 = !DILocation(line: 1455, column: 9, scope: !1897)
!4119 = !DILocation(line: 1455, column: 21, scope: !1897)
!4120 = !DILocation(line: 1457, column: 7, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1457, column: 6)
!4122 = !DILocation(line: 1457, column: 6, scope: !1897)
!4123 = !DILocation(line: 1458, column: 5, scope: !4121)
!4124 = !DILocation(line: 1460, column: 6, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1460, column: 6)
!4126 = !DILocation(line: 1460, column: 12, scope: !4125)
!4127 = !DILocation(line: 1460, column: 6, scope: !1897)
!4128 = !DILocation(line: 1461, column: 26, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4125, file: !1, line: 1460, column: 25)
!4130 = !DILocation(line: 1461, column: 32, scope: !4129)
!4131 = !DILocation(line: 1461, column: 5, scope: !4129)
!4132 = !DILocation(line: 1462, column: 5, scope: !4129)
!4133 = !DILocation(line: 1462, column: 11, scope: !4129)
!4134 = !DILocation(line: 1462, column: 23, scope: !4129)
!4135 = !DILocation(line: 1463, column: 3, scope: !4129)
!4136 = !DILocation(line: 1467, column: 27, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1467, column: 6)
!4138 = !DILocation(line: 1467, column: 33, scope: !4137)
!4139 = !DILocation(line: 1467, column: 37, scope: !4137)
!4140 = !DILocation(line: 1467, column: 24, scope: !4137)
!4141 = !DILocation(line: 1467, column: 6, scope: !1897)
!4142 = !DILocation(line: 1468, column: 27, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1467, column: 46)
!4144 = !DILocation(line: 1468, column: 33, scope: !4143)
!4145 = !DILocation(line: 1468, column: 49, scope: !4143)
!4146 = !DILocation(line: 1468, column: 55, scope: !4143)
!4147 = !DILocation(line: 1468, column: 47, scope: !4143)
!4148 = !DILocation(line: 1468, column: 5, scope: !4143)
!4149 = !DILocation(line: 1468, column: 11, scope: !4143)
!4150 = !DILocation(line: 1468, column: 15, scope: !4143)
!4151 = !DILocation(line: 1468, column: 25, scope: !4143)
!4152 = !DILocation(line: 1470, column: 21, scope: !4143)
!4153 = !DILocation(line: 1470, column: 27, scope: !4143)
!4154 = !DILocation(line: 1470, column: 5, scope: !4143)
!4155 = !DILocation(line: 1471, column: 8, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4143, file: !1, line: 1471, column: 8)
!4157 = !DILocation(line: 1471, column: 14, scope: !4156)
!4158 = !DILocation(line: 1471, column: 19, scope: !4156)
!4159 = !DILocation(line: 1471, column: 8, scope: !4143)
!4160 = !DILocation(line: 1473, column: 14, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4156, file: !1, line: 1471, column: 23)
!4162 = !DILocation(line: 1473, column: 20, scope: !4161)
!4163 = !DILocation(line: 1473, column: 25, scope: !4161)
!4164 = !DILocation(line: 1473, column: 7, scope: !4161)
!4165 = !DILocation(line: 1474, column: 7, scope: !4161)
!4166 = !DILocation(line: 1474, column: 13, scope: !4161)
!4167 = !DILocation(line: 1474, column: 18, scope: !4161)
!4168 = !DILocation(line: 1474, column: 21, scope: !4161)
!4169 = !DILocation(line: 1475, column: 5, scope: !4161)
!4170 = !DILocation(line: 1476, column: 3, scope: !4143)
!4171 = !DILocation(line: 1477, column: 26, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1477, column: 11)
!4173 = !DILocation(line: 1477, column: 32, scope: !4172)
!4174 = !DILocation(line: 1477, column: 36, scope: !4172)
!4175 = !DILocation(line: 1477, column: 23, scope: !4172)
!4176 = !DILocation(line: 1477, column: 11, scope: !4137)
!4177 = !DILocation(line: 1478, column: 27, scope: !4172)
!4178 = !DILocation(line: 1478, column: 33, scope: !4172)
!4179 = !DILocation(line: 1478, column: 49, scope: !4172)
!4180 = !DILocation(line: 1478, column: 55, scope: !4172)
!4181 = !DILocation(line: 1478, column: 47, scope: !4172)
!4182 = !DILocation(line: 1478, column: 5, scope: !4172)
!4183 = !DILocation(line: 1478, column: 11, scope: !4172)
!4184 = !DILocation(line: 1478, column: 15, scope: !4172)
!4185 = !DILocation(line: 1478, column: 25, scope: !4172)
!4186 = !DILocation(line: 1480, column: 6, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1480, column: 6)
!4188 = !DILocation(line: 1480, column: 6, scope: !1897)
!4189 = !DILocation(line: 1481, column: 12, scope: !4187)
!4190 = !DILocation(line: 1481, column: 5, scope: !4187)
!4191 = !DILocation(line: 1483, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 1483, column: 6)
!4193 = !DILocation(line: 1483, column: 17, scope: !4192)
!4194 = !DILocation(line: 1485, column: 7, scope: !4192)
!4195 = !DILocation(line: 1485, column: 13, scope: !4192)
!4196 = !DILocation(line: 1485, column: 18, scope: !4192)
!4197 = !DILocation(line: 1485, column: 24, scope: !4192)
!4198 = !DILocation(line: 1486, column: 7, scope: !4192)
!4199 = !DILocation(line: 1486, column: 13, scope: !4192)
!4200 = !DILocation(line: 1486, column: 17, scope: !4192)
!4201 = !DILocation(line: 1486, column: 30, scope: !4192)
!4202 = !DILocation(line: 1487, column: 7, scope: !4192)
!4203 = !DILocation(line: 1487, column: 13, scope: !4192)
!4204 = !DILocation(line: 1488, column: 7, scope: !4192)
!4205 = !DILocation(line: 1488, column: 13, scope: !4192)
!4206 = !DILocation(line: 1488, column: 17, scope: !4192)
!4207 = !DILocation(line: 1487, column: 27, scope: !4192)
!4208 = !DILocation(line: 1489, column: 7, scope: !4192)
!4209 = !DILocation(line: 1489, column: 13, scope: !4192)
!4210 = !DILocation(line: 1489, column: 17, scope: !4192)
!4211 = !DILocation(line: 1488, column: 33, scope: !4192)
!4212 = !DILocation(line: 1489, column: 36, scope: !4192)
!4213 = !DILocation(line: 1483, column: 6, scope: !4214)
!4214 = !DILexicalBlockFile(scope: !1897, file: !1, discriminator: 1)
!4215 = !DILocation(line: 1493, column: 11, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4192, file: !1, line: 1489, column: 42)
!4217 = !DILocation(line: 1493, column: 5, scope: !4216)
!4218 = !DILocation(line: 1494, column: 5, scope: !4216)
!4219 = !DILocation(line: 1497, column: 3, scope: !1897)
!4220 = !DILocation(line: 1498, column: 1, scope: !1897)
!4221 = !DILocalVariable(name: "conn", arg: 1, scope: !1896, file: !1, line: 1348, type: !565)
!4222 = !DILocation(line: 1348, column: 48, scope: !1896)
!4223 = !DILocalVariable(name: "done", arg: 2, scope: !1896, file: !1, line: 1348, type: !1461)
!4224 = !DILocation(line: 1348, column: 60, scope: !1896)
!4225 = !DILocalVariable(name: "result", scope: !1896, file: !1, line: 1350, type: !569)
!4226 = !DILocation(line: 1350, column: 12, scope: !1896)
!4227 = !DILocation(line: 1354, column: 3, scope: !1896)
!4228 = !DILocation(line: 1357, column: 31, scope: !1896)
!4229 = !DILocation(line: 1357, column: 12, scope: !1896)
!4230 = !DILocation(line: 1357, column: 10, scope: !1896)
!4231 = !DILocation(line: 1358, column: 6, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 1358, column: 6)
!4233 = !DILocation(line: 1358, column: 6, scope: !1896)
!4234 = !DILocation(line: 1359, column: 12, scope: !4232)
!4235 = !DILocation(line: 1359, column: 5, scope: !4232)
!4236 = !DILocation(line: 1361, column: 6, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 1361, column: 6)
!4238 = !DILocation(line: 1361, column: 12, scope: !4237)
!4239 = !DILocation(line: 1361, column: 17, scope: !4237)
!4240 = !DILocation(line: 1361, column: 6, scope: !1896)
!4241 = !DILocation(line: 1363, column: 5, scope: !4237)
!4242 = !DILocation(line: 1365, column: 6, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 1365, column: 6)
!4244 = !DILocation(line: 1365, column: 6, scope: !4245)
!4245 = !DILexicalBlockFile(scope: !4243, file: !1, discriminator: 1)
!4246 = !DILocation(line: 1366, column: 5, scope: !4243)
!4247 = !DILocation(line: 1368, column: 6, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 1368, column: 6)
!4249 = !DILocation(line: 1368, column: 12, scope: !4248)
!4250 = !DILocation(line: 1368, column: 38, scope: !4248)
!4251 = !DILocation(line: 1368, column: 6, scope: !1896)
!4252 = !DILocation(line: 1370, column: 5, scope: !4248)
!4253 = !DILocation(line: 1372, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !1896, file: !1, line: 1372, column: 6)
!4255 = !DILocation(line: 1372, column: 12, scope: !4254)
!4256 = !DILocation(line: 1372, column: 19, scope: !4254)
!4257 = !DILocation(line: 1372, column: 28, scope: !4254)
!4258 = !DILocation(line: 1372, column: 6, scope: !1896)
!4259 = !DILocation(line: 1374, column: 12, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 1372, column: 47)
!4261 = !DILocation(line: 1375, column: 8, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4260, file: !1, line: 1375, column: 8)
!4263 = !DILocation(line: 1375, column: 8, scope: !4260)
!4264 = !DILocation(line: 1376, column: 14, scope: !4262)
!4265 = !DILocation(line: 1376, column: 7, scope: !4262)
!4266 = !DILocation(line: 1377, column: 3, scope: !4260)
!4267 = !DILocation(line: 1379, column: 6, scope: !4254)
!4268 = !DILocation(line: 1379, column: 11, scope: !4254)
!4269 = !DILocation(line: 1381, column: 3, scope: !1896)
!4270 = !DILocation(line: 1382, column: 1, scope: !1896)
!4271 = !DILocalVariable(name: "conn", arg: 1, scope: !1919, file: !1, line: 1387, type: !565)
!4272 = !DILocation(line: 1387, column: 48, scope: !1919)
!4273 = !DILocalVariable(name: "socks", arg: 2, scope: !1919, file: !1, line: 1388, type: !1480)
!4274 = !DILocation(line: 1388, column: 43, scope: !1919)
!4275 = !DILocalVariable(name: "numsocks", arg: 3, scope: !1919, file: !1, line: 1389, type: !177)
!4276 = !DILocation(line: 1389, column: 32, scope: !1919)
!4277 = !DILocation(line: 1392, column: 9, scope: !1919)
!4278 = !DILocation(line: 1393, column: 14, scope: !1919)
!4279 = !DILocation(line: 1393, column: 20, scope: !1919)
!4280 = !DILocation(line: 1393, column: 3, scope: !1919)
!4281 = !DILocation(line: 1393, column: 12, scope: !1919)
!4282 = !DILocation(line: 1394, column: 3, scope: !1919)
!4283 = !DILocalVariable(name: "conn", arg: 1, scope: !1856, file: !1, line: 177, type: !1487)
!4284 = !DILocation(line: 177, column: 51, scope: !1856)
!4285 = !DILocalVariable(name: "thisheader", arg: 2, scope: !1856, file: !1, line: 178, type: !716)
!4286 = !DILocation(line: 178, column: 37, scope: !1856)
!4287 = !DILocalVariable(name: "head", scope: !1856, file: !1, line: 180, type: !916)
!4288 = !DILocation(line: 180, column: 22, scope: !1856)
!4289 = !DILocalVariable(name: "thislen", scope: !1856, file: !1, line: 181, type: !158)
!4290 = !DILocation(line: 181, column: 10, scope: !1856)
!4291 = !DILocation(line: 181, column: 27, scope: !1856)
!4292 = !DILocation(line: 181, column: 20, scope: !1856)
!4293 = !DILocalVariable(name: "data", scope: !1856, file: !1, line: 182, type: !559)
!4294 = !DILocation(line: 182, column: 21, scope: !1856)
!4295 = !DILocation(line: 182, column: 28, scope: !1856)
!4296 = !DILocation(line: 182, column: 34, scope: !1856)
!4297 = !DILocation(line: 184, column: 14, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !1856, file: !1, line: 184, column: 3)
!4299 = !DILocation(line: 184, column: 20, scope: !4298)
!4300 = !DILocation(line: 184, column: 24, scope: !4298)
!4301 = !DILocation(line: 184, column: 12, scope: !4298)
!4302 = !DILocation(line: 184, column: 7, scope: !4298)
!4303 = !DILocation(line: 184, column: 32, scope: !4304)
!4304 = !DILexicalBlockFile(scope: !4305, file: !1, discriminator: 1)
!4305 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 184, column: 3)
!4306 = !DILocation(line: 184, column: 3, scope: !4304)
!4307 = !DILocation(line: 185, column: 8, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !1, line: 185, column: 8)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 184, column: 55)
!4310 = !DILocation(line: 185, column: 8, scope: !4309)
!4311 = !DILocation(line: 186, column: 14, scope: !4308)
!4312 = !DILocation(line: 186, column: 20, scope: !4308)
!4313 = !DILocation(line: 186, column: 7, scope: !4308)
!4314 = !DILocation(line: 187, column: 3, scope: !4309)
!4315 = !DILocation(line: 184, column: 43, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !4305, file: !1, discriminator: 2)
!4317 = !DILocation(line: 184, column: 49, scope: !4316)
!4318 = !DILocation(line: 184, column: 42, scope: !4316)
!4319 = !DILocation(line: 184, column: 3, scope: !4316)
!4320 = !DILocation(line: 189, column: 3, scope: !1856)
!4321 = !DILocation(line: 190, column: 1, scope: !1856)
!4322 = !DILocalVariable(name: "conn", arg: 1, scope: !1859, file: !1, line: 201, type: !1487)
!4323 = !DILocation(line: 201, column: 56, scope: !1859)
!4324 = !DILocalVariable(name: "thisheader", arg: 2, scope: !1859, file: !1, line: 202, type: !716)
!4325 = !DILocation(line: 202, column: 42, scope: !1859)
!4326 = !DILocalVariable(name: "head", scope: !1859, file: !1, line: 204, type: !916)
!4327 = !DILocation(line: 204, column: 22, scope: !1859)
!4328 = !DILocalVariable(name: "thislen", scope: !1859, file: !1, line: 205, type: !158)
!4329 = !DILocation(line: 205, column: 10, scope: !1859)
!4330 = !DILocation(line: 205, column: 27, scope: !1859)
!4331 = !DILocation(line: 205, column: 20, scope: !1859)
!4332 = !DILocalVariable(name: "data", scope: !1859, file: !1, line: 206, type: !559)
!4333 = !DILocation(line: 206, column: 21, scope: !1859)
!4334 = !DILocation(line: 206, column: 28, scope: !1859)
!4335 = !DILocation(line: 206, column: 34, scope: !1859)
!4336 = !DILocation(line: 208, column: 15, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 208, column: 3)
!4338 = !DILocation(line: 208, column: 21, scope: !4337)
!4339 = !DILocation(line: 208, column: 26, scope: !4337)
!4340 = !DILocation(line: 208, column: 32, scope: !4337)
!4341 = !DILocation(line: 208, column: 35, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4337, file: !1, discriminator: 1)
!4343 = !DILocation(line: 208, column: 41, scope: !4342)
!4344 = !DILocation(line: 208, column: 45, scope: !4342)
!4345 = !DILocation(line: 208, column: 14, scope: !4342)
!4346 = !DILocation(line: 209, column: 9, scope: !4337)
!4347 = !DILocation(line: 209, column: 15, scope: !4337)
!4348 = !DILocation(line: 209, column: 19, scope: !4337)
!4349 = !DILocation(line: 208, column: 14, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4337, file: !1, discriminator: 2)
!4351 = !DILocation(line: 209, column: 34, scope: !4342)
!4352 = !DILocation(line: 209, column: 40, scope: !4342)
!4353 = !DILocation(line: 209, column: 44, scope: !4342)
!4354 = !DILocation(line: 208, column: 14, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4337, file: !1, discriminator: 3)
!4356 = !DILocation(line: 208, column: 14, scope: !4357)
!4357 = !DILexicalBlockFile(scope: !4337, file: !1, discriminator: 4)
!4358 = !DILocation(line: 208, column: 12, scope: !4357)
!4359 = !DILocation(line: 208, column: 7, scope: !4357)
!4360 = !DILocation(line: 210, column: 7, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 208, column: 3)
!4362 = !DILocation(line: 208, column: 3, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !4337, file: !1, discriminator: 5)
!4364 = !DILocation(line: 211, column: 8, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !1, line: 211, column: 8)
!4366 = distinct !DILexicalBlock(scope: !4361, file: !1, line: 210, column: 30)
!4367 = !DILocation(line: 211, column: 8, scope: !4366)
!4368 = !DILocation(line: 212, column: 14, scope: !4365)
!4369 = !DILocation(line: 212, column: 20, scope: !4365)
!4370 = !DILocation(line: 212, column: 7, scope: !4365)
!4371 = !DILocation(line: 213, column: 3, scope: !4366)
!4372 = !DILocation(line: 210, column: 18, scope: !4373)
!4373 = !DILexicalBlockFile(scope: !4361, file: !1, discriminator: 1)
!4374 = !DILocation(line: 210, column: 24, scope: !4373)
!4375 = !DILocation(line: 210, column: 17, scope: !4373)
!4376 = !DILocation(line: 208, column: 3, scope: !4377)
!4377 = !DILexicalBlockFile(scope: !4361, file: !1, discriminator: 6)
!4378 = !DILocation(line: 215, column: 3, scope: !1859)
!4379 = !DILocation(line: 216, column: 1, scope: !1859)
!4380 = !DILocalVariable(name: "header", arg: 1, scope: !1860, file: !1, line: 224, type: !716)
!4381 = !DILocation(line: 224, column: 42, scope: !1860)
!4382 = !DILocalVariable(name: "start", scope: !1860, file: !1, line: 226, type: !716)
!4383 = !DILocation(line: 226, column: 15, scope: !1860)
!4384 = !DILocalVariable(name: "end", scope: !1860, file: !1, line: 227, type: !716)
!4385 = !DILocation(line: 227, column: 15, scope: !1860)
!4386 = !DILocalVariable(name: "value", scope: !1860, file: !1, line: 228, type: !230)
!4387 = !DILocation(line: 228, column: 9, scope: !1860)
!4388 = !DILocalVariable(name: "len", scope: !1860, file: !1, line: 229, type: !158)
!4389 = !DILocation(line: 229, column: 10, scope: !1860)
!4390 = !DILocation(line: 231, column: 3, scope: !1860)
!4391 = !DILocation(line: 231, column: 3, scope: !4392)
!4392 = !DILexicalBlockFile(scope: !4393, file: !1, discriminator: 1)
!4393 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 231, column: 3)
!4394 = !DILocation(line: 234, column: 3, scope: !1860)
!4395 = !DILocation(line: 234, column: 10, scope: !4396)
!4396 = !DILexicalBlockFile(scope: !1860, file: !1, discriminator: 1)
!4397 = !DILocation(line: 234, column: 9, scope: !4396)
!4398 = !DILocation(line: 234, column: 17, scope: !4396)
!4399 = !DILocation(line: 234, column: 22, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !1860, file: !1, discriminator: 2)
!4401 = !DILocation(line: 234, column: 21, scope: !4400)
!4402 = !DILocation(line: 234, column: 29, scope: !4400)
!4403 = !DILocation(line: 234, column: 3, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !1860, file: !1, discriminator: 3)
!4405 = !DILocation(line: 235, column: 5, scope: !1860)
!4406 = !DILocation(line: 234, column: 3, scope: !4407)
!4407 = !DILexicalBlockFile(scope: !1860, file: !1, discriminator: 4)
!4408 = !DILocation(line: 237, column: 7, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 237, column: 6)
!4410 = !DILocation(line: 237, column: 6, scope: !4409)
!4411 = !DILocation(line: 237, column: 6, scope: !1860)
!4412 = !DILocation(line: 239, column: 5, scope: !4409)
!4413 = !DILocation(line: 242, column: 11, scope: !1860)
!4414 = !DILocation(line: 242, column: 9, scope: !1860)
!4415 = !DILocation(line: 243, column: 3, scope: !1860)
!4416 = !DILocation(line: 243, column: 10, scope: !4396)
!4417 = !DILocation(line: 243, column: 9, scope: !4396)
!4418 = !DILocation(line: 243, column: 16, scope: !4396)
!4419 = !DILocation(line: 243, column: 19, scope: !4400)
!4420 = !DILocation(line: 243, column: 16, scope: !4400)
!4421 = !DILocation(line: 243, column: 3, scope: !4404)
!4422 = !DILocation(line: 244, column: 10, scope: !1860)
!4423 = !DILocation(line: 243, column: 3, scope: !4407)
!4424 = !DILocation(line: 248, column: 16, scope: !1860)
!4425 = !DILocation(line: 248, column: 9, scope: !1860)
!4426 = !DILocation(line: 248, column: 7, scope: !1860)
!4427 = !DILocation(line: 249, column: 7, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 249, column: 6)
!4429 = !DILocation(line: 249, column: 6, scope: !1860)
!4430 = !DILocation(line: 250, column: 18, scope: !4428)
!4431 = !DILocation(line: 250, column: 11, scope: !4428)
!4432 = !DILocation(line: 250, column: 9, scope: !4428)
!4433 = !DILocation(line: 250, column: 5, scope: !4428)
!4434 = !DILocation(line: 251, column: 7, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 251, column: 6)
!4436 = !DILocation(line: 251, column: 6, scope: !1860)
!4437 = !DILocation(line: 252, column: 18, scope: !4435)
!4438 = !DILocation(line: 252, column: 11, scope: !4435)
!4439 = !DILocation(line: 252, column: 9, scope: !4435)
!4440 = !DILocation(line: 252, column: 5, scope: !4435)
!4441 = !DILocation(line: 253, column: 7, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 253, column: 6)
!4443 = !DILocation(line: 253, column: 6, scope: !1860)
!4444 = !DILocation(line: 254, column: 5, scope: !4442)
!4445 = !DILocation(line: 257, column: 3, scope: !1860)
!4446 = !DILocation(line: 257, column: 10, scope: !4396)
!4447 = !DILocation(line: 257, column: 16, scope: !4396)
!4448 = !DILocation(line: 257, column: 14, scope: !4396)
!4449 = !DILocation(line: 257, column: 23, scope: !4396)
!4450 = !DILocation(line: 257, column: 26, scope: !4400)
!4451 = !DILocation(line: 257, column: 23, scope: !4400)
!4452 = !DILocation(line: 257, column: 3, scope: !4404)
!4453 = !DILocation(line: 258, column: 8, scope: !1860)
!4454 = !DILocation(line: 257, column: 3, scope: !4407)
!4455 = !DILocation(line: 261, column: 9, scope: !1860)
!4456 = !DILocation(line: 261, column: 15, scope: !1860)
!4457 = !DILocation(line: 261, column: 13, scope: !1860)
!4458 = !DILocation(line: 261, column: 21, scope: !1860)
!4459 = !DILocation(line: 261, column: 7, scope: !1860)
!4460 = !DILocation(line: 263, column: 11, scope: !1860)
!4461 = !DILocation(line: 263, column: 9, scope: !1860)
!4462 = !DILocation(line: 264, column: 7, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 264, column: 6)
!4464 = !DILocation(line: 264, column: 6, scope: !1860)
!4465 = !DILocation(line: 265, column: 5, scope: !4463)
!4466 = !DILocation(line: 267, column: 10, scope: !1860)
!4467 = !DILocation(line: 267, column: 17, scope: !1860)
!4468 = !DILocation(line: 267, column: 24, scope: !1860)
!4469 = !DILocation(line: 267, column: 3, scope: !1860)
!4470 = !DILocation(line: 268, column: 9, scope: !1860)
!4471 = !DILocation(line: 268, column: 3, scope: !1860)
!4472 = !DILocation(line: 268, column: 14, scope: !1860)
!4473 = !DILocation(line: 270, column: 10, scope: !1860)
!4474 = !DILocation(line: 270, column: 3, scope: !1860)
!4475 = !DILocation(line: 271, column: 1, scope: !1860)
!4476 = !DILocalVariable(name: "conn", arg: 1, scope: !1863, file: !1, line: 487, type: !565)
!4477 = !DILocation(line: 487, column: 49, scope: !1863)
!4478 = !DILocalVariable(name: "data", scope: !1863, file: !1, line: 489, type: !559)
!4479 = !DILocation(line: 489, column: 21, scope: !1863)
!4480 = !DILocation(line: 489, column: 28, scope: !1863)
!4481 = !DILocation(line: 489, column: 34, scope: !1863)
!4482 = !DILocalVariable(name: "pickhost", scope: !1863, file: !1, line: 490, type: !226)
!4483 = !DILocation(line: 490, column: 8, scope: !1863)
!4484 = !DILocalVariable(name: "pickproxy", scope: !1863, file: !1, line: 491, type: !226)
!4485 = !DILocation(line: 491, column: 8, scope: !1863)
!4486 = !DILocalVariable(name: "result", scope: !1863, file: !1, line: 492, type: !569)
!4487 = !DILocation(line: 492, column: 12, scope: !1863)
!4488 = !DILocation(line: 494, column: 13, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 494, column: 6)
!4490 = !DILocation(line: 494, column: 19, scope: !4489)
!4491 = !DILocation(line: 494, column: 23, scope: !4489)
!4492 = !DILocation(line: 494, column: 10, scope: !4489)
!4493 = !DILocation(line: 494, column: 32, scope: !4489)
!4494 = !DILocation(line: 494, column: 42, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !4489, file: !1, discriminator: 1)
!4496 = !DILocation(line: 494, column: 48, scope: !4495)
!4497 = !DILocation(line: 494, column: 52, scope: !4495)
!4498 = !DILocation(line: 494, column: 39, scope: !4495)
!4499 = !DILocation(line: 494, column: 6, scope: !4495)
!4500 = !DILocation(line: 496, column: 5, scope: !4489)
!4501 = !DILocation(line: 498, column: 6, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 498, column: 6)
!4503 = !DILocation(line: 498, column: 12, scope: !4502)
!4504 = !DILocation(line: 498, column: 18, scope: !4502)
!4505 = !DILocation(line: 498, column: 6, scope: !1863)
!4506 = !DILocation(line: 499, column: 12, scope: !4502)
!4507 = !DILocation(line: 499, column: 18, scope: !4502)
!4508 = !DILocation(line: 499, column: 22, scope: !4502)
!4509 = !DILocation(line: 499, column: 5, scope: !4502)
!4510 = !DILocation(line: 501, column: 6, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 501, column: 6)
!4512 = !DILocation(line: 501, column: 12, scope: !4511)
!4513 = !DILocation(line: 501, column: 17, scope: !4511)
!4514 = !DILocation(line: 501, column: 29, scope: !4511)
!4515 = !DILocation(line: 502, column: 8, scope: !4511)
!4516 = !DILocation(line: 502, column: 14, scope: !4511)
!4517 = !DILocation(line: 502, column: 18, scope: !4511)
!4518 = !DILocation(line: 502, column: 27, scope: !4511)
!4519 = !DILocation(line: 502, column: 35, scope: !4511)
!4520 = !DILocation(line: 503, column: 8, scope: !4511)
!4521 = !DILocation(line: 503, column: 14, scope: !4511)
!4522 = !DILocation(line: 503, column: 19, scope: !4511)
!4523 = !DILocation(line: 503, column: 27, scope: !4511)
!4524 = !DILocation(line: 503, column: 30, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !4511, file: !1, discriminator: 1)
!4526 = !DILocation(line: 503, column: 36, scope: !4525)
!4527 = !DILocation(line: 503, column: 40, scope: !4525)
!4528 = !DILocation(line: 503, column: 49, scope: !4525)
!4529 = !DILocation(line: 501, column: 6, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !1863, file: !1, discriminator: 1)
!4531 = !DILocation(line: 504, column: 29, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4511, file: !1, line: 503, column: 58)
!4533 = !DILocation(line: 504, column: 35, scope: !4532)
!4534 = !DILocation(line: 504, column: 41, scope: !4532)
!4535 = !DILocation(line: 504, column: 16, scope: !4532)
!4536 = !DILocation(line: 504, column: 14, scope: !4532)
!4537 = !DILocation(line: 505, column: 9, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4532, file: !1, line: 505, column: 8)
!4539 = !DILocation(line: 505, column: 8, scope: !4532)
!4540 = !DILocation(line: 506, column: 7, scope: !4538)
!4541 = !DILocation(line: 506, column: 13, scope: !4538)
!4542 = !DILocation(line: 506, column: 19, scope: !4538)
!4543 = !DILocation(line: 506, column: 31, scope: !4538)
!4544 = !DILocation(line: 507, column: 3, scope: !4532)
!4545 = !DILocation(line: 508, column: 6, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 508, column: 6)
!4547 = !DILocation(line: 508, column: 12, scope: !4546)
!4548 = !DILocation(line: 508, column: 17, scope: !4546)
!4549 = !DILocation(line: 508, column: 35, scope: !4546)
!4550 = !DILocation(line: 509, column: 8, scope: !4546)
!4551 = !DILocation(line: 509, column: 14, scope: !4546)
!4552 = !DILocation(line: 509, column: 18, scope: !4546)
!4553 = !DILocation(line: 509, column: 27, scope: !4546)
!4554 = !DILocation(line: 509, column: 35, scope: !4546)
!4555 = !DILocation(line: 510, column: 8, scope: !4546)
!4556 = !DILocation(line: 510, column: 14, scope: !4546)
!4557 = !DILocation(line: 510, column: 19, scope: !4546)
!4558 = !DILocation(line: 510, column: 27, scope: !4546)
!4559 = !DILocation(line: 510, column: 30, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4546, file: !1, discriminator: 1)
!4561 = !DILocation(line: 510, column: 36, scope: !4560)
!4562 = !DILocation(line: 510, column: 40, scope: !4560)
!4563 = !DILocation(line: 510, column: 49, scope: !4560)
!4564 = !DILocation(line: 508, column: 6, scope: !4530)
!4565 = !DILocation(line: 511, column: 30, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4546, file: !1, line: 510, column: 58)
!4567 = !DILocation(line: 511, column: 36, scope: !4566)
!4568 = !DILocation(line: 511, column: 42, scope: !4566)
!4569 = !DILocation(line: 511, column: 17, scope: !4566)
!4570 = !DILocation(line: 511, column: 15, scope: !4566)
!4571 = !DILocation(line: 512, column: 9, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 512, column: 8)
!4573 = !DILocation(line: 512, column: 8, scope: !4566)
!4574 = !DILocation(line: 513, column: 7, scope: !4572)
!4575 = !DILocation(line: 513, column: 13, scope: !4572)
!4576 = !DILocation(line: 513, column: 19, scope: !4572)
!4577 = !DILocation(line: 513, column: 31, scope: !4572)
!4578 = !DILocation(line: 514, column: 3, scope: !4566)
!4579 = !DILocation(line: 516, column: 6, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 516, column: 6)
!4581 = !DILocation(line: 516, column: 15, scope: !4580)
!4582 = !DILocation(line: 516, column: 18, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4580, file: !1, discriminator: 1)
!4584 = !DILocation(line: 516, column: 6, scope: !4583)
!4585 = !DILocation(line: 520, column: 5, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4580, file: !1, line: 516, column: 29)
!4587 = !DILocation(line: 520, column: 5, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !4589, file: !1, discriminator: 1)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !1, line: 520, column: 5)
!4590 = !DILocation(line: 521, column: 24, scope: !4586)
!4591 = !DILocation(line: 521, column: 5, scope: !4586)
!4592 = !DILocation(line: 521, column: 11, scope: !4586)
!4593 = !DILocation(line: 521, column: 15, scope: !4586)
!4594 = !DILocation(line: 521, column: 22, scope: !4586)
!4595 = !DILocation(line: 522, column: 9, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4586, file: !1, line: 522, column: 8)
!4597 = !DILocation(line: 522, column: 15, scope: !4596)
!4598 = !DILocation(line: 522, column: 19, scope: !4596)
!4599 = !DILocation(line: 522, column: 8, scope: !4586)
!4600 = !DILocation(line: 523, column: 7, scope: !4596)
!4601 = !DILocation(line: 525, column: 9, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4586, file: !1, line: 525, column: 8)
!4603 = !DILocation(line: 525, column: 15, scope: !4602)
!4604 = !DILocation(line: 525, column: 19, scope: !4602)
!4605 = !DILocation(line: 525, column: 27, scope: !4602)
!4606 = !DILocation(line: 525, column: 43, scope: !4602)
!4607 = !DILocation(line: 526, column: 9, scope: !4602)
!4608 = !DILocation(line: 526, column: 15, scope: !4602)
!4609 = !DILocation(line: 526, column: 19, scope: !4602)
!4610 = !DILocation(line: 526, column: 27, scope: !4602)
!4611 = !DILocation(line: 526, column: 44, scope: !4602)
!4612 = !DILocation(line: 527, column: 9, scope: !4602)
!4613 = !DILocation(line: 527, column: 15, scope: !4602)
!4614 = !DILocation(line: 527, column: 20, scope: !4602)
!4615 = !DILocation(line: 525, column: 8, scope: !4616)
!4616 = !DILexicalBlockFile(scope: !4586, file: !1, discriminator: 1)
!4617 = !DILocation(line: 528, column: 35, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4602, file: !1, line: 527, column: 37)
!4619 = !DILocation(line: 528, column: 16, scope: !4618)
!4620 = !DILocation(line: 528, column: 14, scope: !4618)
!4621 = !DILocation(line: 529, column: 10, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 529, column: 10)
!4623 = !DILocation(line: 529, column: 10, scope: !4618)
!4624 = !DILocation(line: 530, column: 16, scope: !4622)
!4625 = !DILocation(line: 530, column: 9, scope: !4622)
!4626 = !DILocation(line: 531, column: 5, scope: !4618)
!4627 = !DILocation(line: 532, column: 3, scope: !4586)
!4628 = !DILocation(line: 533, column: 12, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4580, file: !1, line: 533, column: 11)
!4630 = !DILocation(line: 533, column: 18, scope: !4629)
!4631 = !DILocation(line: 533, column: 22, scope: !4629)
!4632 = !DILocation(line: 533, column: 31, scope: !4629)
!4633 = !DILocation(line: 533, column: 38, scope: !4629)
!4634 = !DILocation(line: 534, column: 13, scope: !4629)
!4635 = !DILocation(line: 534, column: 19, scope: !4629)
!4636 = !DILocation(line: 534, column: 25, scope: !4629)
!4637 = !DILocation(line: 534, column: 34, scope: !4629)
!4638 = !DILocation(line: 534, column: 40, scope: !4629)
!4639 = !DILocation(line: 535, column: 11, scope: !4629)
!4640 = !DILocation(line: 535, column: 17, scope: !4629)
!4641 = !DILocation(line: 535, column: 22, scope: !4629)
!4642 = !DILocation(line: 533, column: 11, scope: !4583)
!4643 = !DILocation(line: 540, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !1, line: 540, column: 8)
!4645 = distinct !DILexicalBlock(scope: !4629, file: !1, line: 535, column: 31)
!4646 = !DILocation(line: 540, column: 15, scope: !4644)
!4647 = !DILocation(line: 540, column: 19, scope: !4644)
!4648 = !DILocation(line: 540, column: 27, scope: !4644)
!4649 = !DILocation(line: 540, column: 43, scope: !4644)
!4650 = !DILocation(line: 541, column: 9, scope: !4644)
!4651 = !DILocation(line: 541, column: 15, scope: !4644)
!4652 = !DILocation(line: 541, column: 19, scope: !4644)
!4653 = !DILocation(line: 541, column: 27, scope: !4644)
!4654 = !DILocation(line: 540, column: 8, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !4645, file: !1, discriminator: 1)
!4656 = !DILocation(line: 542, column: 26, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4644, file: !1, line: 541, column: 45)
!4658 = !DILocation(line: 542, column: 7, scope: !4657)
!4659 = !DILocation(line: 542, column: 13, scope: !4657)
!4660 = !DILocation(line: 542, column: 17, scope: !4657)
!4661 = !DILocation(line: 542, column: 24, scope: !4657)
!4662 = !DILocation(line: 543, column: 11, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 543, column: 10)
!4664 = !DILocation(line: 543, column: 17, scope: !4663)
!4665 = !DILocation(line: 543, column: 21, scope: !4663)
!4666 = !DILocation(line: 543, column: 10, scope: !4657)
!4667 = !DILocation(line: 544, column: 9, scope: !4663)
!4668 = !DILocation(line: 545, column: 7, scope: !4657)
!4669 = !DILocation(line: 545, column: 13, scope: !4657)
!4670 = !DILocation(line: 545, column: 19, scope: !4657)
!4671 = !DILocation(line: 545, column: 28, scope: !4657)
!4672 = !DILocation(line: 545, column: 33, scope: !4657)
!4673 = !DILocation(line: 546, column: 5, scope: !4657)
!4674 = !DILocation(line: 547, column: 3, scope: !4645)
!4675 = !DILocation(line: 548, column: 23, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !1863, file: !1, line: 548, column: 6)
!4677 = !DILocation(line: 548, column: 6, scope: !4676)
!4678 = !DILocation(line: 548, column: 6, scope: !1863)
!4679 = !DILocation(line: 549, column: 11, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !1, line: 548, column: 30)
!4681 = !DILocation(line: 550, column: 11, scope: !4680)
!4682 = !DILocation(line: 550, column: 17, scope: !4680)
!4683 = !DILocation(line: 550, column: 21, scope: !4680)
!4684 = !DILocation(line: 549, column: 5, scope: !4680)
!4685 = !DILocation(line: 551, column: 12, scope: !4680)
!4686 = !DILocation(line: 552, column: 3, scope: !4680)
!4687 = !DILocation(line: 554, column: 10, scope: !1863)
!4688 = !DILocation(line: 554, column: 3, scope: !1863)
!4689 = !DILocation(line: 555, column: 1, scope: !1863)
!4690 = !DILocalVariable(name: "pick", arg: 1, scope: !1906, file: !1, line: 328, type: !1909)
!4691 = !DILocation(line: 328, column: 38, scope: !1906)
!4692 = !DILocalVariable(name: "picked", scope: !1906, file: !1, line: 330, type: !226)
!4693 = !DILocation(line: 330, column: 8, scope: !1906)
!4694 = !DILocalVariable(name: "avail", scope: !1906, file: !1, line: 332, type: !160)
!4695 = !DILocation(line: 332, column: 17, scope: !1906)
!4696 = !DILocation(line: 332, column: 25, scope: !1906)
!4697 = !DILocation(line: 332, column: 31, scope: !1906)
!4698 = !DILocation(line: 332, column: 39, scope: !1906)
!4699 = !DILocation(line: 332, column: 45, scope: !1906)
!4700 = !DILocation(line: 332, column: 37, scope: !1906)
!4701 = !DILocation(line: 333, column: 10, scope: !1906)
!4702 = !DILocation(line: 337, column: 6, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !1906, file: !1, line: 337, column: 6)
!4704 = !DILocation(line: 337, column: 12, scope: !4703)
!4705 = !DILocation(line: 337, column: 6, scope: !1906)
!4706 = !DILocation(line: 338, column: 5, scope: !4703)
!4707 = !DILocation(line: 338, column: 11, scope: !4703)
!4708 = !DILocation(line: 338, column: 18, scope: !4703)
!4709 = !DILocation(line: 339, column: 11, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 339, column: 11)
!4711 = !DILocation(line: 339, column: 17, scope: !4710)
!4712 = !DILocation(line: 339, column: 11, scope: !4703)
!4713 = !DILocation(line: 340, column: 5, scope: !4710)
!4714 = !DILocation(line: 340, column: 11, scope: !4710)
!4715 = !DILocation(line: 340, column: 18, scope: !4710)
!4716 = !DILocation(line: 341, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4710, file: !1, line: 341, column: 11)
!4718 = !DILocation(line: 341, column: 17, scope: !4717)
!4719 = !DILocation(line: 341, column: 11, scope: !4710)
!4720 = !DILocation(line: 342, column: 5, scope: !4717)
!4721 = !DILocation(line: 342, column: 11, scope: !4717)
!4722 = !DILocation(line: 342, column: 18, scope: !4717)
!4723 = !DILocation(line: 343, column: 11, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4717, file: !1, line: 343, column: 11)
!4725 = !DILocation(line: 343, column: 17, scope: !4724)
!4726 = !DILocation(line: 343, column: 11, scope: !4717)
!4727 = !DILocation(line: 344, column: 5, scope: !4724)
!4728 = !DILocation(line: 344, column: 11, scope: !4724)
!4729 = !DILocation(line: 344, column: 18, scope: !4724)
!4730 = !DILocation(line: 345, column: 11, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !1, line: 345, column: 11)
!4732 = !DILocation(line: 345, column: 17, scope: !4731)
!4733 = !DILocation(line: 345, column: 11, scope: !4724)
!4734 = !DILocation(line: 346, column: 5, scope: !4731)
!4735 = !DILocation(line: 346, column: 11, scope: !4731)
!4736 = !DILocation(line: 346, column: 18, scope: !4731)
!4737 = !DILocation(line: 348, column: 5, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4731, file: !1, line: 347, column: 8)
!4739 = !DILocation(line: 348, column: 11, scope: !4738)
!4740 = !DILocation(line: 348, column: 18, scope: !4738)
!4741 = !DILocation(line: 349, column: 12, scope: !4738)
!4742 = !DILocation(line: 351, column: 3, scope: !1906)
!4743 = !DILocation(line: 351, column: 9, scope: !1906)
!4744 = !DILocation(line: 351, column: 15, scope: !1906)
!4745 = !DILocation(line: 353, column: 10, scope: !1906)
!4746 = !DILocation(line: 353, column: 3, scope: !1906)
!4747 = !DILocalVariable(name: "conn", arg: 1, scope: !1910, file: !1, line: 379, type: !565)
!4748 = !DILocation(line: 379, column: 56, scope: !1910)
!4749 = !DILocalVariable(name: "data", scope: !1910, file: !1, line: 381, type: !559)
!4750 = !DILocation(line: 381, column: 21, scope: !1910)
!4751 = !DILocation(line: 381, column: 28, scope: !1910)
!4752 = !DILocation(line: 381, column: 34, scope: !1910)
!4753 = !DILocalVariable(name: "http", scope: !1910, file: !1, line: 382, type: !1953)
!4754 = !DILocation(line: 382, column: 16, scope: !1910)
!4755 = !DILocation(line: 382, column: 23, scope: !1910)
!4756 = !DILocation(line: 382, column: 29, scope: !1910)
!4757 = !DILocation(line: 382, column: 33, scope: !1910)
!4758 = !DILocalVariable(name: "bytessent", scope: !1910, file: !1, line: 383, type: !204)
!4759 = !DILocation(line: 383, column: 14, scope: !1910)
!4760 = !DILocalVariable(name: "expectsend", scope: !1910, file: !1, line: 384, type: !204)
!4761 = !DILocation(line: 384, column: 14, scope: !1910)
!4762 = !DILocation(line: 386, column: 7, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 386, column: 6)
!4764 = !DILocation(line: 386, column: 6, scope: !1910)
!4765 = !DILocation(line: 389, column: 5, scope: !4763)
!4766 = !DILocation(line: 391, column: 10, scope: !1910)
!4767 = !DILocation(line: 391, column: 16, scope: !1910)
!4768 = !DILocation(line: 391, column: 20, scope: !1910)
!4769 = !DILocation(line: 391, column: 3, scope: !1910)
!4770 = !DILocation(line: 394, column: 5, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 391, column: 29)
!4772 = !DILocation(line: 396, column: 5, scope: !4771)
!4773 = !DILocation(line: 399, column: 15, scope: !1910)
!4774 = !DILocation(line: 399, column: 21, scope: !1910)
!4775 = !DILocation(line: 399, column: 13, scope: !1910)
!4776 = !DILocation(line: 401, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 401, column: 6)
!4778 = !DILocation(line: 401, column: 12, scope: !4777)
!4779 = !DILocation(line: 401, column: 17, scope: !4777)
!4780 = !DILocation(line: 401, column: 6, scope: !1910)
!4781 = !DILocation(line: 404, column: 16, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4777, file: !1, line: 401, column: 26)
!4783 = !DILocation(line: 405, column: 3, scope: !4782)
!4784 = !DILocation(line: 406, column: 12, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4777, file: !1, line: 406, column: 11)
!4786 = !DILocation(line: 406, column: 18, scope: !4785)
!4787 = !DILocation(line: 406, column: 23, scope: !4785)
!4788 = !DILocation(line: 406, column: 11, scope: !4777)
!4789 = !DILocation(line: 408, column: 16, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 406, column: 39)
!4791 = !DILocation(line: 409, column: 3, scope: !4790)
!4792 = !DILocation(line: 412, column: 12, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 410, column: 8)
!4794 = !DILocation(line: 412, column: 18, scope: !4793)
!4795 = !DILocation(line: 412, column: 22, scope: !4793)
!4796 = !DILocation(line: 412, column: 5, scope: !4793)
!4797 = !DILocation(line: 414, column: 10, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !1, line: 414, column: 10)
!4799 = distinct !DILexicalBlock(scope: !4793, file: !1, line: 412, column: 31)
!4800 = !DILocation(line: 414, column: 16, scope: !4798)
!4801 = !DILocation(line: 414, column: 22, scope: !4798)
!4802 = !DILocation(line: 414, column: 33, scope: !4798)
!4803 = !DILocation(line: 414, column: 10, scope: !4799)
!4804 = !DILocation(line: 415, column: 22, scope: !4798)
!4805 = !DILocation(line: 415, column: 28, scope: !4798)
!4806 = !DILocation(line: 415, column: 34, scope: !4798)
!4807 = !DILocation(line: 415, column: 20, scope: !4798)
!4808 = !DILocation(line: 415, column: 9, scope: !4798)
!4809 = !DILocation(line: 416, column: 15, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4798, file: !1, line: 416, column: 15)
!4811 = !DILocation(line: 416, column: 21, scope: !4810)
!4812 = !DILocation(line: 416, column: 25, scope: !4810)
!4813 = !DILocation(line: 416, column: 15, scope: !4798)
!4814 = !DILocation(line: 417, column: 41, scope: !4810)
!4815 = !DILocation(line: 417, column: 47, scope: !4810)
!4816 = !DILocation(line: 417, column: 51, scope: !4810)
!4817 = !DILocation(line: 417, column: 34, scope: !4810)
!4818 = !DILocation(line: 417, column: 20, scope: !4810)
!4819 = !DILocation(line: 417, column: 9, scope: !4810)
!4820 = !DILocation(line: 418, column: 7, scope: !4799)
!4821 = !DILocation(line: 420, column: 10, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4799, file: !1, line: 420, column: 10)
!4823 = !DILocation(line: 420, column: 16, scope: !4822)
!4824 = !DILocation(line: 420, column: 22, scope: !4822)
!4825 = !DILocation(line: 420, column: 33, scope: !4822)
!4826 = !DILocation(line: 420, column: 10, scope: !4799)
!4827 = !DILocation(line: 421, column: 22, scope: !4822)
!4828 = !DILocation(line: 421, column: 28, scope: !4822)
!4829 = !DILocation(line: 421, column: 34, scope: !4822)
!4830 = !DILocation(line: 421, column: 20, scope: !4822)
!4831 = !DILocation(line: 421, column: 9, scope: !4822)
!4832 = !DILocation(line: 422, column: 7, scope: !4799)
!4833 = !DILocation(line: 424, column: 20, scope: !4799)
!4834 = !DILocation(line: 424, column: 26, scope: !4799)
!4835 = !DILocation(line: 424, column: 18, scope: !4799)
!4836 = !DILocation(line: 425, column: 7, scope: !4799)
!4837 = !DILocation(line: 427, column: 7, scope: !4799)
!4838 = !DILocation(line: 431, column: 3, scope: !1910)
!4839 = !DILocation(line: 431, column: 9, scope: !1910)
!4840 = !DILocation(line: 431, column: 14, scope: !1910)
!4841 = !DILocation(line: 431, column: 30, scope: !1910)
!4842 = !DILocation(line: 433, column: 7, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 433, column: 6)
!4844 = !DILocation(line: 433, column: 18, scope: !4843)
!4845 = !DILocation(line: 433, column: 25, scope: !4843)
!4846 = !DILocation(line: 433, column: 29, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4843, file: !1, discriminator: 1)
!4848 = !DILocation(line: 433, column: 42, scope: !4847)
!4849 = !DILocation(line: 433, column: 40, scope: !4847)
!4850 = !DILocation(line: 433, column: 6, scope: !4847)
!4851 = !DILocation(line: 466, column: 5, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4843, file: !1, line: 433, column: 54)
!4853 = !DILocation(line: 467, column: 5, scope: !4852)
!4854 = !DILocation(line: 467, column: 11, scope: !4852)
!4855 = !DILocation(line: 467, column: 15, scope: !4852)
!4856 = !DILocation(line: 467, column: 20, scope: !4852)
!4857 = !DILocation(line: 471, column: 3, scope: !4852)
!4858 = !DILocation(line: 473, column: 6, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 473, column: 6)
!4860 = !DILocation(line: 473, column: 6, scope: !1910)
!4861 = !DILocation(line: 475, column: 28, scope: !4859)
!4862 = !DILocation(line: 475, column: 12, scope: !4859)
!4863 = !DILocation(line: 475, column: 5, scope: !4859)
!4864 = !DILocation(line: 477, column: 3, scope: !1910)
!4865 = !DILocation(line: 478, column: 1, scope: !1910)
!4866 = !DILocalVariable(name: "conn", arg: 1, scope: !1915, file: !1, line: 920, type: !565)
!4867 = !DILocation(line: 920, column: 49, scope: !1915)
!4868 = !DILocalVariable(name: "data", scope: !1915, file: !1, line: 922, type: !559)
!4869 = !DILocation(line: 922, column: 21, scope: !1915)
!4870 = !DILocalVariable(name: "httpcode", scope: !1915, file: !1, line: 923, type: !177)
!4871 = !DILocation(line: 923, column: 7, scope: !1915)
!4872 = !DILocation(line: 925, column: 3, scope: !1915)
!4873 = !DILocation(line: 925, column: 3, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !4875, file: !1, discriminator: 1)
!4875 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 925, column: 3)
!4876 = !DILocation(line: 926, column: 10, scope: !1915)
!4877 = !DILocation(line: 926, column: 16, scope: !1915)
!4878 = !DILocation(line: 926, column: 8, scope: !1915)
!4879 = !DILocation(line: 927, column: 3, scope: !1915)
!4880 = !DILocation(line: 927, column: 3, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4882, file: !1, discriminator: 1)
!4882 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 927, column: 3)
!4883 = !DILocation(line: 929, column: 14, scope: !1915)
!4884 = !DILocation(line: 929, column: 20, scope: !1915)
!4885 = !DILocation(line: 929, column: 24, scope: !1915)
!4886 = !DILocation(line: 929, column: 12, scope: !1915)
!4887 = !DILocation(line: 935, column: 7, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 935, column: 6)
!4889 = !DILocation(line: 935, column: 13, scope: !4888)
!4890 = !DILocation(line: 935, column: 17, scope: !4888)
!4891 = !DILocation(line: 935, column: 6, scope: !1915)
!4892 = !DILocation(line: 936, column: 5, scope: !4888)
!4893 = !DILocation(line: 941, column: 6, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 941, column: 6)
!4895 = !DILocation(line: 941, column: 15, scope: !4894)
!4896 = !DILocation(line: 941, column: 6, scope: !1915)
!4897 = !DILocation(line: 942, column: 5, scope: !4894)
!4898 = !DILocation(line: 948, column: 7, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 948, column: 6)
!4900 = !DILocation(line: 948, column: 16, scope: !4899)
!4901 = !DILocation(line: 948, column: 24, scope: !4899)
!4902 = !DILocation(line: 948, column: 28, scope: !4903)
!4903 = !DILexicalBlockFile(scope: !4899, file: !1, discriminator: 1)
!4904 = !DILocation(line: 948, column: 37, scope: !4903)
!4905 = !DILocation(line: 948, column: 6, scope: !4903)
!4906 = !DILocation(line: 949, column: 5, scope: !4899)
!4907 = !DILocation(line: 954, column: 3, scope: !1915)
!4908 = !DILocation(line: 954, column: 3, scope: !4909)
!4909 = !DILexicalBlockFile(scope: !4910, file: !1, discriminator: 1)
!4910 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 954, column: 3)
!4911 = !DILocation(line: 974, column: 7, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 974, column: 6)
!4913 = !DILocation(line: 974, column: 16, scope: !4912)
!4914 = !DILocation(line: 974, column: 24, scope: !4912)
!4915 = !DILocation(line: 974, column: 28, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4912, file: !1, discriminator: 1)
!4917 = !DILocation(line: 974, column: 34, scope: !4916)
!4918 = !DILocation(line: 974, column: 39, scope: !4916)
!4919 = !DILocation(line: 974, column: 6, scope: !4916)
!4920 = !DILocation(line: 975, column: 5, scope: !4912)
!4921 = !DILocation(line: 976, column: 7, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !1915, file: !1, line: 976, column: 6)
!4923 = !DILocation(line: 976, column: 16, scope: !4922)
!4924 = !DILocation(line: 976, column: 24, scope: !4922)
!4925 = !DILocation(line: 976, column: 28, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4922, file: !1, discriminator: 1)
!4927 = !DILocation(line: 976, column: 34, scope: !4926)
!4928 = !DILocation(line: 976, column: 39, scope: !4926)
!4929 = !DILocation(line: 976, column: 6, scope: !4926)
!4930 = !DILocation(line: 977, column: 5, scope: !4922)
!4931 = !DILocation(line: 979, column: 10, scope: !1915)
!4932 = !DILocation(line: 979, column: 16, scope: !1915)
!4933 = !DILocation(line: 979, column: 22, scope: !1915)
!4934 = !DILocation(line: 979, column: 3, scope: !1915)
!4935 = !DILocation(line: 980, column: 1, scope: !1915)
!4936 = !DILocalVariable(name: "conn", arg: 1, scope: !1864, file: !1, line: 671, type: !565)
!4937 = !DILocation(line: 671, column: 43, scope: !1864)
!4938 = !DILocalVariable(name: "request", arg: 2, scope: !1864, file: !1, line: 672, type: !716)
!4939 = !DILocation(line: 672, column: 35, scope: !1864)
!4940 = !DILocalVariable(name: "path", arg: 3, scope: !1864, file: !1, line: 673, type: !716)
!4941 = !DILocation(line: 673, column: 35, scope: !1864)
!4942 = !DILocalVariable(name: "proxytunnel", arg: 4, scope: !1864, file: !1, line: 674, type: !226)
!4943 = !DILocation(line: 674, column: 28, scope: !1864)
!4944 = !DILocalVariable(name: "result", scope: !1864, file: !1, line: 677, type: !569)
!4945 = !DILocation(line: 677, column: 12, scope: !1864)
!4946 = !DILocalVariable(name: "data", scope: !1864, file: !1, line: 678, type: !559)
!4947 = !DILocation(line: 678, column: 21, scope: !1864)
!4948 = !DILocation(line: 678, column: 28, scope: !1864)
!4949 = !DILocation(line: 678, column: 34, scope: !1864)
!4950 = !DILocalVariable(name: "authhost", scope: !1864, file: !1, line: 679, type: !1909)
!4951 = !DILocation(line: 679, column: 16, scope: !1864)
!4952 = !DILocalVariable(name: "authproxy", scope: !1864, file: !1, line: 680, type: !1909)
!4953 = !DILocation(line: 680, column: 16, scope: !1864)
!4954 = !DILocation(line: 682, column: 3, scope: !1864)
!4955 = !DILocation(line: 682, column: 3, scope: !4956)
!4956 = !DILexicalBlockFile(scope: !4957, file: !1, discriminator: 1)
!4957 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 682, column: 3)
!4958 = !DILocation(line: 684, column: 15, scope: !1864)
!4959 = !DILocation(line: 684, column: 21, scope: !1864)
!4960 = !DILocation(line: 684, column: 27, scope: !1864)
!4961 = !DILocation(line: 684, column: 12, scope: !1864)
!4962 = !DILocation(line: 685, column: 16, scope: !1864)
!4963 = !DILocation(line: 685, column: 22, scope: !1864)
!4964 = !DILocation(line: 685, column: 28, scope: !1864)
!4965 = !DILocation(line: 685, column: 13, scope: !1864)
!4966 = !DILocation(line: 687, column: 7, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 687, column: 6)
!4968 = !DILocation(line: 687, column: 13, scope: !4967)
!4969 = !DILocation(line: 687, column: 18, scope: !4967)
!4970 = !DILocation(line: 687, column: 28, scope: !4967)
!4971 = !DILocation(line: 687, column: 31, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !4967, file: !1, discriminator: 1)
!4973 = !DILocation(line: 687, column: 37, scope: !4972)
!4974 = !DILocation(line: 687, column: 42, scope: !4972)
!4975 = !DILocation(line: 687, column: 61, scope: !4972)
!4976 = !DILocation(line: 688, column: 6, scope: !4967)
!4977 = !DILocation(line: 688, column: 12, scope: !4967)
!4978 = !DILocation(line: 688, column: 17, scope: !4967)
!4979 = !DILocation(line: 687, column: 6, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !1864, file: !1, discriminator: 2)
!4981 = !DILocation(line: 687, column: 6, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !1864, file: !1, discriminator: 3)
!4983 = !DILocation(line: 691, column: 5, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4967, file: !1, line: 690, column: 8)
!4985 = !DILocation(line: 691, column: 15, scope: !4984)
!4986 = !DILocation(line: 691, column: 20, scope: !4984)
!4987 = !DILocation(line: 692, column: 5, scope: !4984)
!4988 = !DILocation(line: 692, column: 16, scope: !4984)
!4989 = !DILocation(line: 692, column: 21, scope: !4984)
!4990 = !DILocation(line: 693, column: 5, scope: !4984)
!4991 = !DILocation(line: 696, column: 6, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 696, column: 6)
!4993 = !DILocation(line: 696, column: 16, scope: !4992)
!4994 = !DILocation(line: 696, column: 21, scope: !4992)
!4995 = !DILocation(line: 696, column: 25, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !4992, file: !1, discriminator: 1)
!4997 = !DILocation(line: 696, column: 35, scope: !4996)
!4998 = !DILocation(line: 696, column: 6, scope: !4996)
!4999 = !DILocation(line: 700, column: 24, scope: !4992)
!5000 = !DILocation(line: 700, column: 34, scope: !4992)
!5001 = !DILocation(line: 700, column: 5, scope: !4992)
!5002 = !DILocation(line: 700, column: 15, scope: !4992)
!5003 = !DILocation(line: 700, column: 22, scope: !4992)
!5004 = !DILocation(line: 702, column: 6, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 702, column: 6)
!5006 = !DILocation(line: 702, column: 17, scope: !5005)
!5007 = !DILocation(line: 702, column: 22, scope: !5005)
!5008 = !DILocation(line: 702, column: 26, scope: !5009)
!5009 = !DILexicalBlockFile(scope: !5005, file: !1, discriminator: 1)
!5010 = !DILocation(line: 702, column: 37, scope: !5009)
!5011 = !DILocation(line: 702, column: 6, scope: !5009)
!5012 = !DILocation(line: 706, column: 25, scope: !5005)
!5013 = !DILocation(line: 706, column: 36, scope: !5005)
!5014 = !DILocation(line: 706, column: 5, scope: !5005)
!5015 = !DILocation(line: 706, column: 16, scope: !5005)
!5016 = !DILocation(line: 706, column: 23, scope: !5005)
!5017 = !DILocation(line: 710, column: 6, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 710, column: 6)
!5019 = !DILocation(line: 710, column: 12, scope: !5018)
!5020 = !DILocation(line: 710, column: 17, scope: !5018)
!5021 = !DILocation(line: 710, column: 27, scope: !5018)
!5022 = !DILocation(line: 711, column: 8, scope: !5018)
!5023 = !DILocation(line: 711, column: 14, scope: !5018)
!5024 = !DILocation(line: 711, column: 19, scope: !5018)
!5025 = !DILocation(line: 711, column: 35, scope: !5018)
!5026 = !DILocation(line: 711, column: 32, scope: !5018)
!5027 = !DILocation(line: 710, column: 6, scope: !5028)
!5028 = !DILexicalBlockFile(scope: !1864, file: !1, discriminator: 1)
!5029 = !DILocation(line: 712, column: 34, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5018, file: !1, line: 711, column: 49)
!5031 = !DILocation(line: 712, column: 40, scope: !5030)
!5032 = !DILocation(line: 712, column: 51, scope: !5030)
!5033 = !DILocation(line: 712, column: 60, scope: !5030)
!5034 = !DILocation(line: 712, column: 14, scope: !5030)
!5035 = !DILocation(line: 712, column: 12, scope: !5030)
!5036 = !DILocation(line: 713, column: 8, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 713, column: 8)
!5038 = !DILocation(line: 713, column: 8, scope: !5030)
!5039 = !DILocation(line: 714, column: 14, scope: !5037)
!5040 = !DILocation(line: 714, column: 7, scope: !5037)
!5041 = !DILocation(line: 715, column: 3, scope: !5030)
!5042 = !DILocation(line: 722, column: 5, scope: !5018)
!5043 = !DILocation(line: 722, column: 16, scope: !5018)
!5044 = !DILocation(line: 722, column: 21, scope: !5018)
!5045 = !DILocation(line: 726, column: 7, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 726, column: 6)
!5047 = !DILocation(line: 726, column: 13, scope: !5046)
!5048 = !DILocation(line: 726, column: 19, scope: !5046)
!5049 = !DILocation(line: 726, column: 36, scope: !5046)
!5050 = !DILocation(line: 727, column: 6, scope: !5046)
!5051 = !DILocation(line: 727, column: 12, scope: !5046)
!5052 = !DILocation(line: 727, column: 17, scope: !5046)
!5053 = !DILocation(line: 727, column: 23, scope: !5046)
!5054 = !DILocation(line: 728, column: 7, scope: !5046)
!5055 = !DILocation(line: 728, column: 13, scope: !5046)
!5056 = !DILocation(line: 728, column: 19, scope: !5046)
!5057 = !DILocation(line: 728, column: 30, scope: !5046)
!5058 = !DILocation(line: 729, column: 6, scope: !5046)
!5059 = !DILocation(line: 729, column: 12, scope: !5046)
!5060 = !DILocation(line: 729, column: 16, scope: !5046)
!5061 = !DILocation(line: 729, column: 66, scope: !5046)
!5062 = !DILocation(line: 730, column: 6, scope: !5046)
!5063 = !DILocation(line: 726, column: 6, scope: !5028)
!5064 = !DILocation(line: 731, column: 34, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5046, file: !1, line: 730, column: 63)
!5066 = !DILocation(line: 731, column: 40, scope: !5065)
!5067 = !DILocation(line: 731, column: 50, scope: !5065)
!5068 = !DILocation(line: 731, column: 59, scope: !5065)
!5069 = !DILocation(line: 731, column: 14, scope: !5065)
!5070 = !DILocation(line: 731, column: 12, scope: !5065)
!5071 = !DILocation(line: 732, column: 3, scope: !5065)
!5072 = !DILocation(line: 734, column: 5, scope: !5046)
!5073 = !DILocation(line: 734, column: 15, scope: !5046)
!5074 = !DILocation(line: 734, column: 20, scope: !5046)
!5075 = !DILocation(line: 736, column: 10, scope: !1864)
!5076 = !DILocation(line: 736, column: 3, scope: !1864)
!5077 = !DILocation(line: 737, column: 1, scope: !1864)
!5078 = !DILocalVariable(name: "conn", arg: 1, scope: !1911, file: !1, line: 562, type: !565)
!5079 = !DILocation(line: 562, column: 41, scope: !1911)
!5080 = !DILocalVariable(name: "authstatus", arg: 2, scope: !1911, file: !1, line: 563, type: !1909)
!5081 = !DILocation(line: 563, column: 34, scope: !1911)
!5082 = !DILocalVariable(name: "request", arg: 3, scope: !1911, file: !1, line: 564, type: !716)
!5083 = !DILocation(line: 564, column: 33, scope: !1911)
!5084 = !DILocalVariable(name: "path", arg: 4, scope: !1911, file: !1, line: 565, type: !716)
!5085 = !DILocation(line: 565, column: 33, scope: !1911)
!5086 = !DILocalVariable(name: "proxy", arg: 5, scope: !1911, file: !1, line: 566, type: !226)
!5087 = !DILocation(line: 566, column: 26, scope: !1911)
!5088 = !DILocalVariable(name: "auth", scope: !1911, file: !1, line: 568, type: !716)
!5089 = !DILocation(line: 568, column: 15, scope: !1911)
!5090 = !DILocalVariable(name: "result", scope: !1911, file: !1, line: 569, type: !569)
!5091 = !DILocation(line: 569, column: 12, scope: !1911)
!5092 = !DILocalVariable(name: "data", scope: !1911, file: !1, line: 571, type: !559)
!5093 = !DILocation(line: 571, column: 21, scope: !1911)
!5094 = !DILocation(line: 571, column: 28, scope: !1911)
!5095 = !DILocation(line: 571, column: 34, scope: !1911)
!5096 = !DILocation(line: 615, column: 6, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !1911, file: !1, line: 615, column: 6)
!5098 = !DILocation(line: 615, column: 18, scope: !5097)
!5099 = !DILocation(line: 615, column: 25, scope: !5097)
!5100 = !DILocation(line: 615, column: 6, scope: !1911)
!5101 = !DILocation(line: 616, column: 10, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5097, file: !1, line: 615, column: 45)
!5103 = !DILocation(line: 617, column: 33, scope: !5102)
!5104 = !DILocation(line: 618, column: 33, scope: !5102)
!5105 = !DILocation(line: 619, column: 56, scope: !5102)
!5106 = !DILocation(line: 620, column: 56, scope: !5102)
!5107 = !DILocation(line: 617, column: 14, scope: !5102)
!5108 = !DILocation(line: 617, column: 12, scope: !5102)
!5109 = !DILocation(line: 621, column: 8, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5102, file: !1, line: 621, column: 8)
!5111 = !DILocation(line: 621, column: 8, scope: !5102)
!5112 = !DILocation(line: 622, column: 14, scope: !5110)
!5113 = !DILocation(line: 622, column: 7, scope: !5110)
!5114 = !DILocation(line: 623, column: 3, scope: !5102)
!5115 = !DILocation(line: 626, column: 6, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5097, file: !1, line: 626, column: 6)
!5117 = !DILocation(line: 626, column: 18, scope: !5116)
!5118 = !DILocation(line: 626, column: 25, scope: !5116)
!5119 = !DILocation(line: 626, column: 6, scope: !5097)
!5120 = !DILocation(line: 628, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !1, line: 628, column: 8)
!5122 = distinct !DILexicalBlock(scope: !5116, file: !1, line: 626, column: 44)
!5123 = !DILocation(line: 628, column: 15, scope: !5121)
!5124 = !DILocation(line: 628, column: 18, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !5121, file: !1, discriminator: 1)
!5126 = !DILocation(line: 628, column: 24, scope: !5125)
!5127 = !DILocation(line: 628, column: 29, scope: !5125)
!5128 = !DILocation(line: 628, column: 47, scope: !5125)
!5129 = !DILocation(line: 629, column: 33, scope: !5121)
!5130 = !DILocation(line: 629, column: 10, scope: !5121)
!5131 = !DILocation(line: 629, column: 64, scope: !5121)
!5132 = !DILocation(line: 630, column: 10, scope: !5121)
!5133 = !DILocation(line: 630, column: 16, scope: !5121)
!5134 = !DILocation(line: 630, column: 19, scope: !5125)
!5135 = !DILocation(line: 630, column: 25, scope: !5125)
!5136 = !DILocation(line: 630, column: 30, scope: !5125)
!5137 = !DILocation(line: 630, column: 42, scope: !5125)
!5138 = !DILocation(line: 631, column: 28, scope: !5121)
!5139 = !DILocation(line: 631, column: 10, scope: !5121)
!5140 = !DILocation(line: 628, column: 8, scope: !5141)
!5141 = !DILexicalBlockFile(scope: !5122, file: !1, discriminator: 2)
!5142 = !DILocation(line: 632, column: 12, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5121, file: !1, line: 631, column: 54)
!5144 = !DILocation(line: 633, column: 34, scope: !5143)
!5145 = !DILocation(line: 633, column: 40, scope: !5143)
!5146 = !DILocation(line: 633, column: 16, scope: !5143)
!5147 = !DILocation(line: 633, column: 14, scope: !5143)
!5148 = !DILocation(line: 634, column: 10, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5143, file: !1, line: 634, column: 10)
!5150 = !DILocation(line: 634, column: 10, scope: !5143)
!5151 = !DILocation(line: 635, column: 16, scope: !5149)
!5152 = !DILocation(line: 635, column: 9, scope: !5149)
!5153 = !DILocation(line: 636, column: 5, scope: !5143)
!5154 = !DILocation(line: 640, column: 5, scope: !5122)
!5155 = !DILocation(line: 640, column: 17, scope: !5122)
!5156 = !DILocation(line: 640, column: 22, scope: !5122)
!5157 = !DILocation(line: 641, column: 3, scope: !5122)
!5158 = !DILocation(line: 643, column: 6, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !1911, file: !1, line: 643, column: 6)
!5160 = !DILocation(line: 643, column: 6, scope: !1911)
!5161 = !DILocation(line: 644, column: 11, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !1, line: 643, column: 12)
!5163 = !DILocation(line: 645, column: 11, scope: !5162)
!5164 = !DILocation(line: 645, column: 39, scope: !5162)
!5165 = !DILocation(line: 646, column: 11, scope: !5162)
!5166 = !DILocation(line: 646, column: 20, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 1)
!5168 = !DILocation(line: 646, column: 26, scope: !5167)
!5169 = !DILocation(line: 646, column: 37, scope: !5167)
!5170 = !DILocation(line: 646, column: 44, scope: !5171)
!5171 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 2)
!5172 = !DILocation(line: 646, column: 50, scope: !5171)
!5173 = !DILocation(line: 646, column: 61, scope: !5171)
!5174 = !DILocation(line: 646, column: 20, scope: !5171)
!5175 = !DILocation(line: 646, column: 20, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 3)
!5177 = !DILocation(line: 646, column: 20, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 4)
!5179 = !DILocation(line: 646, column: 11, scope: !5178)
!5180 = !DILocation(line: 647, column: 20, scope: !5162)
!5181 = !DILocation(line: 647, column: 26, scope: !5162)
!5182 = !DILocation(line: 647, column: 33, scope: !5167)
!5183 = !DILocation(line: 647, column: 39, scope: !5167)
!5184 = !DILocation(line: 647, column: 20, scope: !5167)
!5185 = !DILocation(line: 647, column: 20, scope: !5171)
!5186 = !DILocation(line: 647, column: 20, scope: !5176)
!5187 = !DILocation(line: 646, column: 11, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 5)
!5189 = !DILocation(line: 646, column: 11, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5162, file: !1, discriminator: 6)
!5191 = !DILocation(line: 644, column: 5, scope: !5167)
!5192 = !DILocation(line: 648, column: 31, scope: !5162)
!5193 = !DILocation(line: 648, column: 43, scope: !5162)
!5194 = !DILocation(line: 648, column: 30, scope: !5162)
!5195 = !DILocation(line: 648, column: 29, scope: !5162)
!5196 = !DILocation(line: 648, column: 5, scope: !5162)
!5197 = !DILocation(line: 648, column: 17, scope: !5162)
!5198 = !DILocation(line: 648, column: 27, scope: !5162)
!5199 = !DILocation(line: 649, column: 3, scope: !5162)
!5200 = !DILocation(line: 651, column: 5, scope: !5159)
!5201 = !DILocation(line: 651, column: 17, scope: !5159)
!5202 = !DILocation(line: 651, column: 27, scope: !5159)
!5203 = !DILocation(line: 653, column: 3, scope: !1911)
!5204 = !DILocation(line: 654, column: 1, scope: !1911)
!5205 = !DILocalVariable(name: "conn", arg: 1, scope: !1867, file: !1, line: 745, type: !565)
!5206 = !DILocation(line: 745, column: 51, scope: !1867)
!5207 = !DILocalVariable(name: "proxy", arg: 2, scope: !1867, file: !1, line: 745, type: !226)
!5208 = !DILocation(line: 745, column: 62, scope: !1867)
!5209 = !DILocalVariable(name: "auth", arg: 3, scope: !1867, file: !1, line: 746, type: !716)
!5210 = !DILocation(line: 746, column: 43, scope: !1867)
!5211 = !DILocalVariable(name: "data", scope: !1867, file: !1, line: 751, type: !559)
!5212 = !DILocation(line: 751, column: 21, scope: !1867)
!5213 = !DILocation(line: 751, column: 28, scope: !1867)
!5214 = !DILocation(line: 751, column: 34, scope: !1867)
!5215 = !DILocalVariable(name: "availp", scope: !1867, file: !1, line: 757, type: !5216)
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!5217 = !DILocation(line: 757, column: 18, scope: !1867)
!5218 = !DILocalVariable(name: "authp", scope: !1867, file: !1, line: 758, type: !1909)
!5219 = !DILocation(line: 758, column: 16, scope: !1867)
!5220 = !DILocation(line: 760, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !1867, file: !1, line: 760, column: 6)
!5222 = !DILocation(line: 760, column: 6, scope: !1867)
!5223 = !DILocation(line: 761, column: 15, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 760, column: 13)
!5225 = !DILocation(line: 761, column: 21, scope: !5224)
!5226 = !DILocation(line: 761, column: 26, scope: !5224)
!5227 = !DILocation(line: 761, column: 12, scope: !5224)
!5228 = !DILocation(line: 762, column: 14, scope: !5224)
!5229 = !DILocation(line: 762, column: 20, scope: !5224)
!5230 = !DILocation(line: 762, column: 26, scope: !5224)
!5231 = !DILocation(line: 762, column: 11, scope: !5224)
!5232 = !DILocation(line: 763, column: 3, scope: !5224)
!5233 = !DILocation(line: 765, column: 15, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 764, column: 8)
!5235 = !DILocation(line: 765, column: 21, scope: !5234)
!5236 = !DILocation(line: 765, column: 26, scope: !5234)
!5237 = !DILocation(line: 765, column: 12, scope: !5234)
!5238 = !DILocation(line: 766, column: 14, scope: !5234)
!5239 = !DILocation(line: 766, column: 20, scope: !5234)
!5240 = !DILocation(line: 766, column: 26, scope: !5234)
!5241 = !DILocation(line: 766, column: 11, scope: !5234)
!5242 = !DILocation(line: 785, column: 3, scope: !1867)
!5243 = !DILocation(line: 785, column: 10, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !1867, file: !1, discriminator: 1)
!5245 = !DILocation(line: 785, column: 9, scope: !5244)
!5246 = !DILocation(line: 785, column: 3, scope: !5244)
!5247 = !DILocation(line: 863, column: 12, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !1, line: 863, column: 12)
!5249 = distinct !DILexicalBlock(scope: !1867, file: !1, line: 785, column: 16)
!5250 = !DILocation(line: 863, column: 12, scope: !5249)
!5251 = !DILocation(line: 864, column: 15, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5253, file: !1, line: 864, column: 14)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !1, line: 863, column: 41)
!5254 = !DILocation(line: 864, column: 22, scope: !5252)
!5255 = !DILocation(line: 864, column: 28, scope: !5252)
!5256 = !DILocation(line: 864, column: 47, scope: !5252)
!5257 = !DILocation(line: 864, column: 14, scope: !5253)
!5258 = !DILocation(line: 865, column: 19, scope: !5252)
!5259 = !DILocation(line: 865, column: 13, scope: !5252)
!5260 = !DILocation(line: 866, column: 19, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5252, file: !1, line: 866, column: 19)
!5262 = !DILocation(line: 866, column: 19, scope: !5252)
!5263 = !DILocalVariable(name: "result", scope: !5264, file: !1, line: 867, type: !569)
!5264 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 866, column: 52)
!5265 = !DILocation(line: 867, column: 22, scope: !5264)
!5266 = !DILocation(line: 869, column: 14, scope: !5264)
!5267 = !DILocation(line: 869, column: 21, scope: !5264)
!5268 = !DILocation(line: 870, column: 13, scope: !5264)
!5269 = !DILocation(line: 870, column: 20, scope: !5264)
!5270 = !DILocation(line: 870, column: 26, scope: !5264)
!5271 = !DILocation(line: 876, column: 40, scope: !5264)
!5272 = !DILocation(line: 876, column: 46, scope: !5264)
!5273 = !DILocation(line: 876, column: 53, scope: !5264)
!5274 = !DILocation(line: 876, column: 22, scope: !5264)
!5275 = !DILocation(line: 876, column: 20, scope: !5264)
!5276 = !DILocation(line: 877, column: 16, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5264, file: !1, line: 877, column: 16)
!5278 = !DILocation(line: 877, column: 16, scope: !5264)
!5279 = !DILocation(line: 878, column: 21, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 877, column: 24)
!5281 = !DILocation(line: 878, column: 15, scope: !5280)
!5282 = !DILocation(line: 879, column: 15, scope: !5280)
!5283 = !DILocation(line: 879, column: 21, scope: !5280)
!5284 = !DILocation(line: 879, column: 27, scope: !5280)
!5285 = !DILocation(line: 879, column: 39, scope: !5280)
!5286 = !DILocation(line: 880, column: 13, scope: !5280)
!5287 = !DILocation(line: 881, column: 11, scope: !5264)
!5288 = !DILocation(line: 882, column: 9, scope: !5253)
!5289 = !DILocation(line: 885, column: 14, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5248, file: !1, line: 885, column: 14)
!5291 = !DILocation(line: 885, column: 14, scope: !5248)
!5292 = !DILocation(line: 886, column: 14, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !1, line: 885, column: 42)
!5294 = !DILocation(line: 886, column: 21, scope: !5293)
!5295 = !DILocation(line: 887, column: 13, scope: !5293)
!5296 = !DILocation(line: 887, column: 20, scope: !5293)
!5297 = !DILocation(line: 887, column: 26, scope: !5293)
!5298 = !DILocation(line: 888, column: 16, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !1, line: 888, column: 16)
!5300 = !DILocation(line: 888, column: 23, scope: !5299)
!5301 = !DILocation(line: 888, column: 30, scope: !5299)
!5302 = !DILocation(line: 888, column: 16, scope: !5293)
!5303 = !DILocation(line: 892, column: 15, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 888, column: 49)
!5305 = !DILocation(line: 892, column: 22, scope: !5304)
!5306 = !DILocation(line: 892, column: 28, scope: !5304)
!5307 = !DILocation(line: 893, column: 21, scope: !5304)
!5308 = !DILocation(line: 893, column: 15, scope: !5304)
!5309 = !DILocation(line: 894, column: 15, scope: !5304)
!5310 = !DILocation(line: 894, column: 21, scope: !5304)
!5311 = !DILocation(line: 894, column: 27, scope: !5304)
!5312 = !DILocation(line: 894, column: 39, scope: !5304)
!5313 = !DILocation(line: 895, column: 13, scope: !5304)
!5314 = !DILocation(line: 896, column: 11, scope: !5293)
!5315 = !DILocation(line: 899, column: 5, scope: !5249)
!5316 = !DILocation(line: 899, column: 12, scope: !5317)
!5317 = !DILexicalBlockFile(scope: !5249, file: !1, discriminator: 1)
!5318 = !DILocation(line: 899, column: 11, scope: !5317)
!5319 = !DILocation(line: 899, column: 17, scope: !5317)
!5320 = !DILocation(line: 899, column: 21, scope: !5321)
!5321 = !DILexicalBlockFile(scope: !5249, file: !1, discriminator: 2)
!5322 = !DILocation(line: 899, column: 20, scope: !5321)
!5323 = !DILocation(line: 899, column: 26, scope: !5321)
!5324 = !DILocation(line: 899, column: 5, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !5249, file: !1, discriminator: 3)
!5326 = !DILocation(line: 900, column: 11, scope: !5249)
!5327 = !DILocation(line: 899, column: 5, scope: !5328)
!5328 = !DILexicalBlockFile(scope: !5249, file: !1, discriminator: 4)
!5329 = !DILocation(line: 901, column: 9, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5249, file: !1, line: 901, column: 8)
!5331 = !DILocation(line: 901, column: 8, scope: !5330)
!5332 = !DILocation(line: 901, column: 14, scope: !5330)
!5333 = !DILocation(line: 901, column: 8, scope: !5249)
!5334 = !DILocation(line: 902, column: 11, scope: !5330)
!5335 = !DILocation(line: 902, column: 7, scope: !5330)
!5336 = !DILocation(line: 903, column: 5, scope: !5249)
!5337 = !DILocation(line: 903, column: 12, scope: !5317)
!5338 = !DILocation(line: 903, column: 11, scope: !5317)
!5339 = !DILocation(line: 903, column: 17, scope: !5317)
!5340 = !DILocation(line: 903, column: 20, scope: !5321)
!5341 = !DILocation(line: 903, column: 17, scope: !5321)
!5342 = !DILocation(line: 903, column: 5, scope: !5325)
!5343 = !DILocation(line: 904, column: 11, scope: !5249)
!5344 = !DILocation(line: 903, column: 5, scope: !5328)
!5345 = !DILocation(line: 785, column: 3, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !1867, file: !1, discriminator: 2)
!5347 = !DILocation(line: 907, column: 3, scope: !1867)
!5348 = !DILocation(line: 1042, column: 10, scope: !1870)
!5349 = !DILocation(line: 1042, column: 3, scope: !1870)
!5350 = !DILocalVariable(name: "buff", arg: 1, scope: !1880, file: !1, line: 1048, type: !1873)
!5351 = !DILocation(line: 1048, column: 45, scope: !1880)
!5352 = !DILocation(line: 1050, column: 6, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !1880, file: !1, line: 1050, column: 6)
!5354 = !DILocation(line: 1050, column: 6, scope: !1880)
!5355 = !DILocation(line: 1051, column: 5, scope: !5353)
!5356 = !DILocation(line: 1052, column: 3, scope: !1880)
!5357 = !DILocation(line: 1053, column: 1, scope: !1880)
!5358 = !DILocalVariable(name: "in", arg: 1, scope: !1883, file: !1, line: 1061, type: !1873)
!5359 = !DILocation(line: 1061, column: 49, scope: !1883)
!5360 = !DILocalVariable(name: "conn", arg: 2, scope: !1883, file: !1, line: 1062, type: !565)
!5361 = !DILocation(line: 1062, column: 51, scope: !1883)
!5362 = !DILocalVariable(name: "bytes_written", arg: 3, scope: !1883, file: !1, line: 1066, type: !1886)
!5363 = !DILocation(line: 1066, column: 37, scope: !1883)
!5364 = !DILocalVariable(name: "included_body_bytes", arg: 4, scope: !1883, file: !1, line: 1069, type: !158)
!5365 = !DILocation(line: 1069, column: 38, scope: !1883)
!5366 = !DILocalVariable(name: "socketindex", arg: 5, scope: !1883, file: !1, line: 1070, type: !177)
!5367 = !DILocation(line: 1070, column: 35, scope: !1883)
!5368 = !DILocalVariable(name: "amount", scope: !1883, file: !1, line: 1073, type: !271)
!5369 = !DILocation(line: 1073, column: 11, scope: !1883)
!5370 = !DILocalVariable(name: "result", scope: !1883, file: !1, line: 1074, type: !569)
!5371 = !DILocation(line: 1074, column: 12, scope: !1883)
!5372 = !DILocalVariable(name: "ptr", scope: !1883, file: !1, line: 1075, type: !230)
!5373 = !DILocation(line: 1075, column: 9, scope: !1883)
!5374 = !DILocalVariable(name: "size", scope: !1883, file: !1, line: 1076, type: !158)
!5375 = !DILocation(line: 1076, column: 10, scope: !1883)
!5376 = !DILocalVariable(name: "http", scope: !1883, file: !1, line: 1077, type: !1953)
!5377 = !DILocation(line: 1077, column: 16, scope: !1883)
!5378 = !DILocation(line: 1077, column: 23, scope: !1883)
!5379 = !DILocation(line: 1077, column: 29, scope: !1883)
!5380 = !DILocation(line: 1077, column: 35, scope: !1883)
!5381 = !DILocation(line: 1077, column: 39, scope: !1883)
!5382 = !DILocalVariable(name: "sendsize", scope: !1883, file: !1, line: 1078, type: !158)
!5383 = !DILocation(line: 1078, column: 10, scope: !1883)
!5384 = !DILocalVariable(name: "sockfd", scope: !1883, file: !1, line: 1079, type: !263)
!5385 = !DILocation(line: 1079, column: 17, scope: !1883)
!5386 = !DILocalVariable(name: "headersize", scope: !1883, file: !1, line: 1080, type: !158)
!5387 = !DILocation(line: 1080, column: 10, scope: !1883)
!5388 = !DILocation(line: 1082, column: 3, scope: !1883)
!5389 = !DILocation(line: 1082, column: 3, scope: !5390)
!5390 = !DILexicalBlockFile(scope: !5391, file: !1, discriminator: 1)
!5391 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 1082, column: 3)
!5392 = !DILocation(line: 1084, column: 23, scope: !1883)
!5393 = !DILocation(line: 1084, column: 12, scope: !1883)
!5394 = !DILocation(line: 1084, column: 18, scope: !1883)
!5395 = !DILocation(line: 1084, column: 10, scope: !1883)
!5396 = !DILocation(line: 1089, column: 9, scope: !1883)
!5397 = !DILocation(line: 1089, column: 13, scope: !1883)
!5398 = !DILocation(line: 1089, column: 7, scope: !1883)
!5399 = !DILocation(line: 1090, column: 10, scope: !1883)
!5400 = !DILocation(line: 1090, column: 14, scope: !1883)
!5401 = !DILocation(line: 1090, column: 8, scope: !1883)
!5402 = !DILocation(line: 1092, column: 16, scope: !1883)
!5403 = !DILocation(line: 1092, column: 23, scope: !1883)
!5404 = !DILocation(line: 1092, column: 21, scope: !1883)
!5405 = !DILocation(line: 1092, column: 14, scope: !1883)
!5406 = !DILocation(line: 1095, column: 3, scope: !1883)
!5407 = !DILocation(line: 1095, column: 3, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5409, file: !1, discriminator: 1)
!5409 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 1095, column: 3)
!5410 = !DILocation(line: 1097, column: 12, scope: !1883)
!5411 = !DILocation(line: 1097, column: 10, scope: !1883)
!5412 = !DILocation(line: 1099, column: 6, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 1099, column: 6)
!5414 = !DILocation(line: 1099, column: 6, scope: !1883)
!5415 = !DILocation(line: 1101, column: 26, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5413, file: !1, line: 1099, column: 14)
!5417 = !DILocation(line: 1101, column: 5, scope: !5416)
!5418 = !DILocation(line: 1102, column: 12, scope: !5416)
!5419 = !DILocation(line: 1102, column: 5, scope: !5416)
!5420 = !DILocation(line: 1105, column: 7, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 1105, column: 6)
!5422 = !DILocation(line: 1105, column: 13, scope: !5421)
!5423 = !DILocation(line: 1105, column: 22, scope: !5421)
!5424 = !DILocation(line: 1105, column: 28, scope: !5421)
!5425 = !DILocation(line: 1105, column: 42, scope: !5421)
!5426 = !DILocation(line: 1106, column: 6, scope: !5421)
!5427 = !DILocation(line: 1106, column: 12, scope: !5421)
!5428 = !DILocation(line: 1106, column: 23, scope: !5421)
!5429 = !DILocation(line: 1106, column: 33, scope: !5421)
!5430 = !DILocation(line: 1107, column: 6, scope: !5421)
!5431 = !DILocation(line: 1107, column: 9, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !5421, file: !1, discriminator: 1)
!5433 = !DILocation(line: 1107, column: 15, scope: !5432)
!5434 = !DILocation(line: 1107, column: 27, scope: !5432)
!5435 = !DILocation(line: 1105, column: 6, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !1883, file: !1, discriminator: 1)
!5437 = !DILocation(line: 1114, column: 17, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5421, file: !1, line: 1107, column: 34)
!5439 = !DILocation(line: 1114, column: 22, scope: !5438)
!5440 = !DILocation(line: 1114, column: 16, scope: !5438)
!5441 = !DILocation(line: 1114, column: 16, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5438, file: !1, discriminator: 1)
!5443 = !DILocation(line: 1114, column: 69, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5438, file: !1, discriminator: 2)
!5445 = !DILocation(line: 1114, column: 16, scope: !5444)
!5446 = !DILocation(line: 1114, column: 16, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !5438, file: !1, discriminator: 3)
!5448 = !DILocation(line: 1114, column: 14, scope: !5447)
!5449 = !DILocation(line: 1122, column: 12, scope: !5438)
!5450 = !DILocation(line: 1122, column: 18, scope: !5438)
!5451 = !DILocation(line: 1122, column: 24, scope: !5438)
!5452 = !DILocation(line: 1122, column: 30, scope: !5438)
!5453 = !DILocation(line: 1122, column: 5, scope: !5438)
!5454 = !DILocation(line: 1122, column: 44, scope: !5438)
!5455 = !DILocation(line: 1122, column: 49, scope: !5438)
!5456 = !DILocation(line: 1123, column: 11, scope: !5438)
!5457 = !DILocation(line: 1123, column: 17, scope: !5438)
!5458 = !DILocation(line: 1123, column: 23, scope: !5438)
!5459 = !DILocation(line: 1123, column: 29, scope: !5438)
!5460 = !DILocation(line: 1123, column: 9, scope: !5438)
!5461 = !DILocation(line: 1124, column: 3, scope: !5438)
!5462 = !DILocation(line: 1126, column: 16, scope: !5421)
!5463 = !DILocation(line: 1126, column: 14, scope: !5421)
!5464 = !DILocation(line: 1128, column: 23, scope: !1883)
!5465 = !DILocation(line: 1128, column: 29, scope: !1883)
!5466 = !DILocation(line: 1128, column: 37, scope: !1883)
!5467 = !DILocation(line: 1128, column: 42, scope: !1883)
!5468 = !DILocation(line: 1128, column: 12, scope: !1883)
!5469 = !DILocation(line: 1128, column: 10, scope: !1883)
!5470 = !DILocation(line: 1130, column: 7, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !1883, file: !1, line: 1130, column: 6)
!5472 = !DILocation(line: 1130, column: 6, scope: !1883)
!5473 = !DILocalVariable(name: "headlen", scope: !5474, file: !1, line: 1137, type: !158)
!5474 = distinct !DILexicalBlock(scope: !5471, file: !1, line: 1130, column: 15)
!5475 = !DILocation(line: 1137, column: 12, scope: !5474)
!5476 = !DILocation(line: 1137, column: 30, scope: !5474)
!5477 = !DILocation(line: 1137, column: 37, scope: !5474)
!5478 = !DILocation(line: 1137, column: 36, scope: !5474)
!5479 = !DILocation(line: 1137, column: 22, scope: !5474)
!5480 = !DILocation(line: 1137, column: 50, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5474, file: !1, discriminator: 1)
!5482 = !DILocation(line: 1137, column: 22, scope: !5481)
!5483 = !DILocation(line: 1137, column: 71, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !5474, file: !1, discriminator: 2)
!5485 = !DILocation(line: 1137, column: 22, scope: !5484)
!5486 = !DILocation(line: 1137, column: 22, scope: !5487)
!5487 = !DILexicalBlockFile(scope: !5474, file: !1, discriminator: 3)
!5488 = !DILocation(line: 1137, column: 12, scope: !5487)
!5489 = !DILocalVariable(name: "bodylen", scope: !5474, file: !1, line: 1138, type: !158)
!5490 = !DILocation(line: 1138, column: 12, scope: !5474)
!5491 = !DILocation(line: 1138, column: 22, scope: !5474)
!5492 = !DILocation(line: 1138, column: 31, scope: !5474)
!5493 = !DILocation(line: 1138, column: 29, scope: !5474)
!5494 = !DILocation(line: 1140, column: 8, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5474, file: !1, line: 1140, column: 8)
!5496 = !DILocation(line: 1140, column: 14, scope: !5495)
!5497 = !DILocation(line: 1140, column: 20, scope: !5495)
!5498 = !DILocation(line: 1140, column: 24, scope: !5495)
!5499 = !DILocation(line: 1140, column: 8, scope: !5474)
!5500 = !DILocation(line: 1142, column: 18, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 1140, column: 33)
!5502 = !DILocation(line: 1142, column: 24, scope: !5501)
!5503 = !DILocation(line: 1142, column: 51, scope: !5501)
!5504 = !DILocation(line: 1142, column: 56, scope: !5501)
!5505 = !DILocation(line: 1142, column: 65, scope: !5501)
!5506 = !DILocation(line: 1142, column: 7, scope: !5501)
!5507 = !DILocation(line: 1143, column: 10, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5501, file: !1, line: 1143, column: 10)
!5509 = !DILocation(line: 1143, column: 10, scope: !5501)
!5510 = !DILocation(line: 1146, column: 20, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1143, column: 19)
!5512 = !DILocation(line: 1146, column: 26, scope: !5511)
!5513 = !DILocation(line: 1147, column: 20, scope: !5511)
!5514 = !DILocation(line: 1147, column: 24, scope: !5511)
!5515 = !DILocation(line: 1147, column: 23, scope: !5511)
!5516 = !DILocation(line: 1147, column: 33, scope: !5511)
!5517 = !DILocation(line: 1147, column: 42, scope: !5511)
!5518 = !DILocation(line: 1146, column: 9, scope: !5511)
!5519 = !DILocation(line: 1148, column: 7, scope: !5511)
!5520 = !DILocation(line: 1149, column: 5, scope: !5501)
!5521 = !DILocation(line: 1154, column: 29, scope: !5474)
!5522 = !DILocation(line: 1154, column: 6, scope: !5474)
!5523 = !DILocation(line: 1154, column: 20, scope: !5474)
!5524 = !DILocation(line: 1156, column: 8, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5474, file: !1, line: 1156, column: 8)
!5526 = !DILocation(line: 1156, column: 8, scope: !5474)
!5527 = !DILocation(line: 1159, column: 31, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5525, file: !1, line: 1156, column: 14)
!5529 = !DILocation(line: 1159, column: 7, scope: !5528)
!5530 = !DILocation(line: 1159, column: 13, scope: !5528)
!5531 = !DILocation(line: 1159, column: 28, scope: !5528)
!5532 = !DILocation(line: 1161, column: 18, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5528, file: !1, line: 1161, column: 10)
!5534 = !DILocation(line: 1161, column: 28, scope: !5533)
!5535 = !DILocation(line: 1161, column: 25, scope: !5533)
!5536 = !DILocation(line: 1161, column: 10, scope: !5528)
!5537 = !DILocation(line: 1166, column: 17, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5533, file: !1, line: 1161, column: 34)
!5539 = !DILocation(line: 1166, column: 14, scope: !5538)
!5540 = !DILocation(line: 1168, column: 15, scope: !5538)
!5541 = !DILocation(line: 1168, column: 19, scope: !5538)
!5542 = !DILocation(line: 1168, column: 28, scope: !5538)
!5543 = !DILocation(line: 1168, column: 26, scope: !5538)
!5544 = !DILocation(line: 1168, column: 13, scope: !5538)
!5545 = !DILocation(line: 1171, column: 35, scope: !5538)
!5546 = !DILocation(line: 1171, column: 41, scope: !5538)
!5547 = !DILocation(line: 1171, column: 47, scope: !5538)
!5548 = !DILocation(line: 1171, column: 53, scope: !5538)
!5549 = !DILocation(line: 1171, column: 9, scope: !5538)
!5550 = !DILocation(line: 1171, column: 15, scope: !5538)
!5551 = !DILocation(line: 1171, column: 22, scope: !5538)
!5552 = !DILocation(line: 1171, column: 33, scope: !5538)
!5553 = !DILocation(line: 1172, column: 33, scope: !5538)
!5554 = !DILocation(line: 1172, column: 39, scope: !5538)
!5555 = !DILocation(line: 1172, column: 45, scope: !5538)
!5556 = !DILocation(line: 1172, column: 51, scope: !5538)
!5557 = !DILocation(line: 1172, column: 9, scope: !5538)
!5558 = !DILocation(line: 1172, column: 15, scope: !5538)
!5559 = !DILocation(line: 1172, column: 22, scope: !5538)
!5560 = !DILocation(line: 1172, column: 31, scope: !5538)
!5561 = !DILocation(line: 1173, column: 33, scope: !5538)
!5562 = !DILocation(line: 1173, column: 39, scope: !5538)
!5563 = !DILocation(line: 1173, column: 9, scope: !5538)
!5564 = !DILocation(line: 1173, column: 15, scope: !5538)
!5565 = !DILocation(line: 1173, column: 22, scope: !5538)
!5566 = !DILocation(line: 1173, column: 31, scope: !5538)
!5567 = !DILocation(line: 1174, column: 33, scope: !5538)
!5568 = !DILocation(line: 1174, column: 39, scope: !5538)
!5569 = !DILocation(line: 1174, column: 9, scope: !5538)
!5570 = !DILocation(line: 1174, column: 15, scope: !5538)
!5571 = !DILocation(line: 1174, column: 22, scope: !5538)
!5572 = !DILocation(line: 1174, column: 31, scope: !5538)
!5573 = !DILocation(line: 1177, column: 9, scope: !5538)
!5574 = !DILocation(line: 1177, column: 15, scope: !5538)
!5575 = !DILocation(line: 1177, column: 21, scope: !5538)
!5576 = !DILocation(line: 1177, column: 27, scope: !5538)
!5577 = !DILocation(line: 1177, column: 38, scope: !5538)
!5578 = !DILocation(line: 1178, column: 40, scope: !5538)
!5579 = !DILocation(line: 1178, column: 32, scope: !5538)
!5580 = !DILocation(line: 1178, column: 9, scope: !5538)
!5581 = !DILocation(line: 1178, column: 15, scope: !5538)
!5582 = !DILocation(line: 1178, column: 21, scope: !5538)
!5583 = !DILocation(line: 1178, column: 27, scope: !5538)
!5584 = !DILocation(line: 1178, column: 30, scope: !5538)
!5585 = !DILocation(line: 1179, column: 26, scope: !5538)
!5586 = !DILocation(line: 1179, column: 9, scope: !5538)
!5587 = !DILocation(line: 1179, column: 15, scope: !5538)
!5588 = !DILocation(line: 1179, column: 24, scope: !5538)
!5589 = !DILocation(line: 1180, column: 38, scope: !5538)
!5590 = !DILocation(line: 1180, column: 9, scope: !5538)
!5591 = !DILocation(line: 1180, column: 15, scope: !5538)
!5592 = !DILocation(line: 1180, column: 24, scope: !5538)
!5593 = !DILocation(line: 1182, column: 29, scope: !5538)
!5594 = !DILocation(line: 1182, column: 9, scope: !5538)
!5595 = !DILocation(line: 1182, column: 15, scope: !5538)
!5596 = !DILocation(line: 1182, column: 27, scope: !5538)
!5597 = !DILocation(line: 1183, column: 9, scope: !5538)
!5598 = !DILocation(line: 1183, column: 15, scope: !5538)
!5599 = !DILocation(line: 1183, column: 23, scope: !5538)
!5600 = !DILocation(line: 1185, column: 9, scope: !5538)
!5601 = !DILocation(line: 1187, column: 7, scope: !5528)
!5602 = !DILocation(line: 1187, column: 13, scope: !5528)
!5603 = !DILocation(line: 1187, column: 21, scope: !5528)
!5604 = !DILocation(line: 1189, column: 5, scope: !5528)
!5605 = !DILocation(line: 1191, column: 18, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !1, line: 1191, column: 10)
!5607 = distinct !DILexicalBlock(scope: !5525, file: !1, line: 1190, column: 10)
!5608 = !DILocation(line: 1191, column: 28, scope: !5606)
!5609 = !DILocation(line: 1191, column: 25, scope: !5606)
!5610 = !DILocation(line: 1191, column: 10, scope: !5607)
!5611 = !DILocation(line: 1199, column: 9, scope: !5606)
!5612 = !DILocation(line: 1200, column: 33, scope: !5607)
!5613 = !DILocation(line: 1200, column: 7, scope: !5607)
!5614 = !DILocation(line: 1202, column: 3, scope: !5474)
!5615 = !DILocation(line: 1203, column: 24, scope: !1883)
!5616 = !DILocation(line: 1203, column: 3, scope: !1883)
!5617 = !DILocation(line: 1205, column: 10, scope: !1883)
!5618 = !DILocation(line: 1205, column: 3, scope: !1883)
!5619 = !DILocation(line: 1206, column: 1, scope: !1883)
!5620 = !DILocalVariable(name: "buffer", arg: 1, scope: !1918, file: !1, line: 990, type: !230)
!5621 = !DILocation(line: 990, column: 34, scope: !1918)
!5622 = !DILocalVariable(name: "size", arg: 2, scope: !1918, file: !1, line: 991, type: !158)
!5623 = !DILocation(line: 991, column: 35, scope: !1918)
!5624 = !DILocalVariable(name: "nitems", arg: 3, scope: !1918, file: !1, line: 992, type: !158)
!5625 = !DILocation(line: 992, column: 35, scope: !1918)
!5626 = !DILocalVariable(name: "userp", arg: 4, scope: !1918, file: !1, line: 993, type: !148)
!5627 = !DILocation(line: 993, column: 34, scope: !1918)
!5628 = !DILocalVariable(name: "conn", scope: !1918, file: !1, line: 995, type: !565)
!5629 = !DILocation(line: 995, column: 23, scope: !1918)
!5630 = !DILocation(line: 995, column: 52, scope: !1918)
!5631 = !DILocation(line: 995, column: 30, scope: !1918)
!5632 = !DILocalVariable(name: "http", scope: !1918, file: !1, line: 996, type: !1953)
!5633 = !DILocation(line: 996, column: 16, scope: !1918)
!5634 = !DILocation(line: 996, column: 23, scope: !1918)
!5635 = !DILocation(line: 996, column: 29, scope: !1918)
!5636 = !DILocation(line: 996, column: 35, scope: !1918)
!5637 = !DILocation(line: 996, column: 39, scope: !1918)
!5638 = !DILocalVariable(name: "fullsize", scope: !1918, file: !1, line: 997, type: !158)
!5639 = !DILocation(line: 997, column: 10, scope: !1918)
!5640 = !DILocation(line: 997, column: 21, scope: !1918)
!5641 = !DILocation(line: 997, column: 28, scope: !1918)
!5642 = !DILocation(line: 997, column: 26, scope: !1918)
!5643 = !DILocation(line: 999, column: 7, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !1918, file: !1, line: 999, column: 6)
!5645 = !DILocation(line: 999, column: 13, scope: !5644)
!5646 = !DILocation(line: 999, column: 6, scope: !1918)
!5647 = !DILocation(line: 1001, column: 5, scope: !5644)
!5648 = !DILocation(line: 1004, column: 34, scope: !1918)
!5649 = !DILocation(line: 1004, column: 40, scope: !1918)
!5650 = !DILocation(line: 1004, column: 48, scope: !1918)
!5651 = !DILocation(line: 1004, column: 33, scope: !1918)
!5652 = !DILocation(line: 1004, column: 3, scope: !1918)
!5653 = !DILocation(line: 1004, column: 9, scope: !1918)
!5654 = !DILocation(line: 1004, column: 15, scope: !1918)
!5655 = !DILocation(line: 1004, column: 19, scope: !1918)
!5656 = !DILocation(line: 1004, column: 31, scope: !1918)
!5657 = !DILocation(line: 1006, column: 6, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !1918, file: !1, line: 1006, column: 6)
!5659 = !DILocation(line: 1006, column: 12, scope: !5658)
!5660 = !DILocation(line: 1006, column: 36, scope: !5658)
!5661 = !DILocation(line: 1006, column: 21, scope: !5658)
!5662 = !DILocation(line: 1006, column: 6, scope: !1918)
!5663 = !DILocation(line: 1007, column: 12, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5658, file: !1, line: 1006, column: 46)
!5665 = !DILocation(line: 1007, column: 20, scope: !5664)
!5666 = !DILocation(line: 1007, column: 26, scope: !5664)
!5667 = !DILocation(line: 1007, column: 44, scope: !5664)
!5668 = !DILocation(line: 1007, column: 50, scope: !5664)
!5669 = !DILocation(line: 1007, column: 5, scope: !5664)
!5670 = !DILocation(line: 1008, column: 24, scope: !5664)
!5671 = !DILocation(line: 1008, column: 30, scope: !5664)
!5672 = !DILocation(line: 1008, column: 14, scope: !5664)
!5673 = !DILocation(line: 1010, column: 8, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5664, file: !1, line: 1010, column: 8)
!5675 = !DILocation(line: 1010, column: 14, scope: !5674)
!5676 = !DILocation(line: 1010, column: 21, scope: !5674)
!5677 = !DILocation(line: 1010, column: 8, scope: !5664)
!5678 = !DILocation(line: 1012, column: 24, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5674, file: !1, line: 1010, column: 31)
!5680 = !DILocation(line: 1012, column: 30, scope: !5679)
!5681 = !DILocation(line: 1012, column: 37, scope: !5679)
!5682 = !DILocation(line: 1012, column: 7, scope: !5679)
!5683 = !DILocation(line: 1012, column: 13, scope: !5679)
!5684 = !DILocation(line: 1012, column: 22, scope: !5679)
!5685 = !DILocation(line: 1013, column: 24, scope: !5679)
!5686 = !DILocation(line: 1013, column: 30, scope: !5679)
!5687 = !DILocation(line: 1013, column: 37, scope: !5679)
!5688 = !DILocation(line: 1013, column: 7, scope: !5679)
!5689 = !DILocation(line: 1013, column: 13, scope: !5679)
!5690 = !DILocation(line: 1013, column: 22, scope: !5679)
!5691 = !DILocation(line: 1014, column: 38, scope: !5679)
!5692 = !DILocation(line: 1014, column: 44, scope: !5679)
!5693 = !DILocation(line: 1014, column: 51, scope: !5679)
!5694 = !DILocation(line: 1014, column: 7, scope: !5679)
!5695 = !DILocation(line: 1014, column: 13, scope: !5679)
!5696 = !DILocation(line: 1014, column: 19, scope: !5679)
!5697 = !DILocation(line: 1014, column: 25, scope: !5679)
!5698 = !DILocation(line: 1014, column: 36, scope: !5679)
!5699 = !DILocation(line: 1015, column: 30, scope: !5679)
!5700 = !DILocation(line: 1015, column: 36, scope: !5679)
!5701 = !DILocation(line: 1015, column: 43, scope: !5679)
!5702 = !DILocation(line: 1015, column: 7, scope: !5679)
!5703 = !DILocation(line: 1015, column: 13, scope: !5679)
!5704 = !DILocation(line: 1015, column: 19, scope: !5679)
!5705 = !DILocation(line: 1015, column: 25, scope: !5679)
!5706 = !DILocation(line: 1015, column: 28, scope: !5679)
!5707 = !DILocation(line: 1017, column: 7, scope: !5679)
!5708 = !DILocation(line: 1017, column: 13, scope: !5679)
!5709 = !DILocation(line: 1017, column: 20, scope: !5679)
!5710 = !DILocation(line: 1019, column: 7, scope: !5679)
!5711 = !DILocation(line: 1019, column: 13, scope: !5679)
!5712 = !DILocation(line: 1019, column: 20, scope: !5679)
!5713 = !DILocation(line: 1019, column: 28, scope: !5679)
!5714 = !DILocation(line: 1020, column: 5, scope: !5679)
!5715 = !DILocation(line: 1022, column: 7, scope: !5674)
!5716 = !DILocation(line: 1022, column: 13, scope: !5674)
!5717 = !DILocation(line: 1022, column: 22, scope: !5674)
!5718 = !DILocation(line: 1024, column: 12, scope: !5664)
!5719 = !DILocation(line: 1024, column: 5, scope: !5664)
!5720 = !DILocation(line: 1027, column: 10, scope: !1918)
!5721 = !DILocation(line: 1027, column: 18, scope: !1918)
!5722 = !DILocation(line: 1027, column: 24, scope: !1918)
!5723 = !DILocation(line: 1027, column: 34, scope: !1918)
!5724 = !DILocation(line: 1027, column: 3, scope: !1918)
!5725 = !DILocation(line: 1028, column: 21, scope: !1918)
!5726 = !DILocation(line: 1028, column: 3, scope: !1918)
!5727 = !DILocation(line: 1028, column: 9, scope: !1918)
!5728 = !DILocation(line: 1028, column: 18, scope: !1918)
!5729 = !DILocation(line: 1029, column: 21, scope: !1918)
!5730 = !DILocation(line: 1029, column: 3, scope: !1918)
!5731 = !DILocation(line: 1029, column: 9, scope: !1918)
!5732 = !DILocation(line: 1029, column: 18, scope: !1918)
!5733 = !DILocation(line: 1031, column: 10, scope: !1918)
!5734 = !DILocation(line: 1031, column: 3, scope: !1918)
!5735 = !DILocation(line: 1032, column: 1, scope: !1918)
!5736 = !DILocalVariable(name: "in", arg: 1, scope: !1887, file: !1, line: 1212, type: !1873)
!5737 = !DILocation(line: 1212, column: 45, scope: !1887)
!5738 = !DILocalVariable(name: "fmt", arg: 2, scope: !1887, file: !1, line: 1212, type: !716)
!5739 = !DILocation(line: 1212, column: 61, scope: !1887)
!5740 = !DILocalVariable(name: "s", scope: !1887, file: !1, line: 1214, type: !230)
!5741 = !DILocation(line: 1214, column: 9, scope: !1887)
!5742 = !DILocalVariable(name: "ap", scope: !1887, file: !1, line: 1215, type: !5743)
!5743 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !747, line: 79, baseType: !5744)
!5744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5745, line: 50, baseType: !5746)
!5745 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stdarg.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!5746 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 1215, baseType: !5747)
!5747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5748, size: 192, align: 64, elements: !782)
!5748 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 1215, size: 192, align: 64, elements: !5749)
!5749 = !{!5750, !5751, !5752, !5753}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5748, file: !1, line: 1215, baseType: !665, size: 32, align: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5748, file: !1, line: 1215, baseType: !665, size: 32, align: 32, offset: 32)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5748, file: !1, line: 1215, baseType: !148, size: 64, align: 64, offset: 64)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5748, file: !1, line: 1215, baseType: !148, size: 64, align: 64, offset: 128)
!5754 = !DILocation(line: 1215, column: 11, scope: !1887)
!5755 = !DILocation(line: 1216, column: 3, scope: !1887)
!5756 = !DILocation(line: 1217, column: 16, scope: !1887)
!5757 = !DILocation(line: 1217, column: 21, scope: !1887)
!5758 = !DILocation(line: 1217, column: 7, scope: !1887)
!5759 = !DILocation(line: 1217, column: 5, scope: !1887)
!5760 = !DILocation(line: 1218, column: 3, scope: !1887)
!5761 = !DILocation(line: 1220, column: 6, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !1887, file: !1, line: 1220, column: 6)
!5763 = !DILocation(line: 1220, column: 6, scope: !1887)
!5764 = !DILocalVariable(name: "result", scope: !5765, file: !1, line: 1221, type: !569)
!5765 = distinct !DILexicalBlock(scope: !5762, file: !1, line: 1220, column: 9)
!5766 = !DILocation(line: 1221, column: 14, scope: !5765)
!5767 = !DILocation(line: 1221, column: 39, scope: !5765)
!5768 = !DILocation(line: 1221, column: 43, scope: !5765)
!5769 = !DILocation(line: 1221, column: 53, scope: !5765)
!5770 = !DILocation(line: 1221, column: 46, scope: !5765)
!5771 = !DILocation(line: 1221, column: 23, scope: !5772)
!5772 = !DILexicalBlockFile(scope: !5765, file: !1, discriminator: 1)
!5773 = !DILocation(line: 1222, column: 5, scope: !5765)
!5774 = !DILocation(line: 1223, column: 12, scope: !5765)
!5775 = !DILocation(line: 1223, column: 5, scope: !5765)
!5776 = !DILocation(line: 1226, column: 3, scope: !1887)
!5777 = !DILocation(line: 1227, column: 3, scope: !1887)
!5778 = !DILocation(line: 1228, column: 3, scope: !1887)
!5779 = !DILocation(line: 1229, column: 1, scope: !1887)
!5780 = !DILocalVariable(name: "in", arg: 1, scope: !1890, file: !1, line: 1234, type: !1873)
!5781 = !DILocation(line: 1234, column: 44, scope: !1890)
!5782 = !DILocalVariable(name: "inptr", arg: 2, scope: !1890, file: !1, line: 1234, type: !1071)
!5783 = !DILocation(line: 1234, column: 60, scope: !1890)
!5784 = !DILocalVariable(name: "size", arg: 3, scope: !1890, file: !1, line: 1234, type: !158)
!5785 = !DILocation(line: 1234, column: 74, scope: !1890)
!5786 = !DILocalVariable(name: "new_rb", scope: !1890, file: !1, line: 1236, type: !230)
!5787 = !DILocation(line: 1236, column: 9, scope: !1890)
!5788 = !DILocalVariable(name: "new_size", scope: !1890, file: !1, line: 1237, type: !158)
!5789 = !DILocation(line: 1237, column: 10, scope: !1890)
!5790 = !DILocation(line: 1239, column: 7, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 1239, column: 6)
!5792 = !DILocation(line: 1239, column: 6, scope: !5791)
!5793 = !DILocation(line: 1239, column: 14, scope: !5791)
!5794 = !DILocation(line: 1239, column: 18, scope: !5791)
!5795 = !DILocation(line: 1239, column: 12, scope: !5791)
!5796 = !DILocation(line: 1239, column: 6, scope: !1890)
!5797 = !DILocation(line: 1243, column: 5, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5791, file: !1, line: 1239, column: 29)
!5799 = !DILocation(line: 1243, column: 5, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !5801, file: !1, discriminator: 1)
!5801 = distinct !DILexicalBlock(scope: !5798, file: !1, line: 1243, column: 5)
!5802 = !DILocation(line: 1244, column: 5, scope: !5798)
!5803 = !DILocation(line: 1245, column: 5, scope: !5798)
!5804 = !DILocation(line: 1248, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 1248, column: 6)
!5806 = !DILocation(line: 1248, column: 11, scope: !5805)
!5807 = !DILocation(line: 1248, column: 18, scope: !5805)
!5808 = !DILocation(line: 1249, column: 8, scope: !5805)
!5809 = !DILocation(line: 1249, column: 12, scope: !5805)
!5810 = !DILocation(line: 1249, column: 24, scope: !5805)
!5811 = !DILocation(line: 1249, column: 22, scope: !5805)
!5812 = !DILocation(line: 1249, column: 33, scope: !5805)
!5813 = !DILocation(line: 1249, column: 37, scope: !5805)
!5814 = !DILocation(line: 1249, column: 46, scope: !5805)
!5815 = !DILocation(line: 1249, column: 30, scope: !5805)
!5816 = !DILocation(line: 1248, column: 6, scope: !5817)
!5817 = !DILexicalBlockFile(scope: !1890, file: !1, discriminator: 1)
!5818 = !DILocation(line: 1255, column: 9, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !1, line: 1255, column: 8)
!5820 = distinct !DILexicalBlock(scope: !5805, file: !1, line: 1249, column: 53)
!5821 = !DILocation(line: 1255, column: 14, scope: !5819)
!5822 = !DILocation(line: 1255, column: 32, scope: !5819)
!5823 = !DILocation(line: 1255, column: 36, scope: !5824)
!5824 = !DILexicalBlockFile(scope: !5819, file: !1, discriminator: 1)
!5825 = !DILocation(line: 1255, column: 40, scope: !5824)
!5826 = !DILocation(line: 1255, column: 50, scope: !5824)
!5827 = !DILocation(line: 1255, column: 68, scope: !5824)
!5828 = !DILocation(line: 1256, column: 11, scope: !5819)
!5829 = !DILocation(line: 1256, column: 16, scope: !5819)
!5830 = !DILocation(line: 1256, column: 9, scope: !5819)
!5831 = !DILocation(line: 1256, column: 24, scope: !5819)
!5832 = !DILocation(line: 1256, column: 28, scope: !5819)
!5833 = !DILocation(line: 1256, column: 38, scope: !5819)
!5834 = !DILocation(line: 1256, column: 21, scope: !5819)
!5835 = !DILocation(line: 1255, column: 8, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !5820, file: !1, discriminator: 2)
!5837 = !DILocation(line: 1257, column: 16, scope: !5819)
!5838 = !DILocation(line: 1257, column: 7, scope: !5819)
!5839 = !DILocation(line: 1259, column: 19, scope: !5819)
!5840 = !DILocation(line: 1259, column: 23, scope: !5819)
!5841 = !DILocation(line: 1259, column: 33, scope: !5819)
!5842 = !DILocation(line: 1259, column: 32, scope: !5819)
!5843 = !DILocation(line: 1259, column: 39, scope: !5819)
!5844 = !DILocation(line: 1259, column: 16, scope: !5819)
!5845 = !DILocation(line: 1261, column: 8, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5820, file: !1, line: 1261, column: 8)
!5847 = !DILocation(line: 1261, column: 12, scope: !5846)
!5848 = !DILocation(line: 1261, column: 8, scope: !5820)
!5849 = !DILocation(line: 1263, column: 33, scope: !5846)
!5850 = !DILocation(line: 1263, column: 37, scope: !5846)
!5851 = !DILocation(line: 1263, column: 45, scope: !5846)
!5852 = !DILocation(line: 1263, column: 16, scope: !5846)
!5853 = !DILocation(line: 1263, column: 14, scope: !5846)
!5854 = !DILocation(line: 1263, column: 7, scope: !5846)
!5855 = !DILocation(line: 1266, column: 16, scope: !5846)
!5856 = !DILocation(line: 1266, column: 14, scope: !5846)
!5857 = !DILocation(line: 1268, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5820, file: !1, line: 1268, column: 8)
!5859 = !DILocation(line: 1268, column: 8, scope: !5820)
!5860 = !DILocation(line: 1270, column: 7, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !1, line: 1268, column: 17)
!5862 = !DILocation(line: 1271, column: 7, scope: !5861)
!5863 = !DILocation(line: 1274, column: 18, scope: !5820)
!5864 = !DILocation(line: 1274, column: 5, scope: !5820)
!5865 = !DILocation(line: 1274, column: 9, scope: !5820)
!5866 = !DILocation(line: 1274, column: 16, scope: !5820)
!5867 = !DILocation(line: 1275, column: 20, scope: !5820)
!5868 = !DILocation(line: 1275, column: 5, scope: !5820)
!5869 = !DILocation(line: 1275, column: 9, scope: !5820)
!5870 = !DILocation(line: 1275, column: 18, scope: !5820)
!5871 = !DILocation(line: 1276, column: 3, scope: !5820)
!5872 = !DILocation(line: 1277, column: 22, scope: !1890)
!5873 = !DILocation(line: 1277, column: 26, scope: !1890)
!5874 = !DILocation(line: 1277, column: 11, scope: !1890)
!5875 = !DILocation(line: 1277, column: 15, scope: !1890)
!5876 = !DILocation(line: 1277, column: 38, scope: !1890)
!5877 = !DILocation(line: 1277, column: 45, scope: !1890)
!5878 = !DILocation(line: 1277, column: 3, scope: !1890)
!5879 = !DILocation(line: 1279, column: 20, scope: !1890)
!5880 = !DILocation(line: 1279, column: 3, scope: !1890)
!5881 = !DILocation(line: 1279, column: 7, scope: !1890)
!5882 = !DILocation(line: 1279, column: 17, scope: !1890)
!5883 = !DILocation(line: 1281, column: 3, scope: !1890)
!5884 = !DILocation(line: 1282, column: 1, scope: !1890)
!5885 = !DILocalVariable(name: "headerline", arg: 1, scope: !1893, file: !1, line: 1296, type: !716)
!5886 = !DILocation(line: 1296, column: 32, scope: !1893)
!5887 = !DILocalVariable(name: "header", arg: 2, scope: !1893, file: !1, line: 1297, type: !716)
!5888 = !DILocation(line: 1297, column: 32, scope: !1893)
!5889 = !DILocalVariable(name: "content", arg: 3, scope: !1893, file: !1, line: 1298, type: !716)
!5890 = !DILocation(line: 1298, column: 32, scope: !1893)
!5891 = !DILocalVariable(name: "hlen", scope: !1893, file: !1, line: 1305, type: !158)
!5892 = !DILocation(line: 1305, column: 10, scope: !1893)
!5893 = !DILocation(line: 1305, column: 24, scope: !1893)
!5894 = !DILocation(line: 1305, column: 17, scope: !1893)
!5895 = !DILocalVariable(name: "clen", scope: !1893, file: !1, line: 1306, type: !158)
!5896 = !DILocation(line: 1306, column: 10, scope: !1893)
!5897 = !DILocalVariable(name: "len", scope: !1893, file: !1, line: 1307, type: !158)
!5898 = !DILocation(line: 1307, column: 10, scope: !1893)
!5899 = !DILocalVariable(name: "start", scope: !1893, file: !1, line: 1308, type: !716)
!5900 = !DILocation(line: 1308, column: 15, scope: !1893)
!5901 = !DILocalVariable(name: "end", scope: !1893, file: !1, line: 1309, type: !716)
!5902 = !DILocation(line: 1309, column: 15, scope: !1893)
!5903 = !DILocation(line: 1311, column: 7, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 1311, column: 6)
!5905 = !DILocation(line: 1311, column: 6, scope: !1893)
!5906 = !DILocation(line: 1312, column: 5, scope: !5904)
!5907 = !DILocation(line: 1315, column: 23, scope: !1893)
!5908 = !DILocation(line: 1315, column: 12, scope: !1893)
!5909 = !DILocation(line: 1315, column: 9, scope: !1893)
!5910 = !DILocation(line: 1318, column: 3, scope: !1893)
!5911 = !DILocation(line: 1318, column: 10, scope: !5912)
!5912 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 1)
!5913 = !DILocation(line: 1318, column: 9, scope: !5912)
!5914 = !DILocation(line: 1318, column: 16, scope: !5912)
!5915 = !DILocation(line: 1318, column: 19, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 2)
!5917 = !DILocation(line: 1318, column: 16, scope: !5916)
!5918 = !DILocation(line: 1318, column: 3, scope: !5919)
!5919 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 3)
!5920 = !DILocation(line: 1319, column: 10, scope: !1893)
!5921 = !DILocation(line: 1318, column: 3, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !1893, file: !1, discriminator: 4)
!5923 = !DILocation(line: 1322, column: 16, scope: !1893)
!5924 = !DILocation(line: 1322, column: 9, scope: !1893)
!5925 = !DILocation(line: 1322, column: 7, scope: !1893)
!5926 = !DILocation(line: 1323, column: 7, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 1323, column: 6)
!5928 = !DILocation(line: 1323, column: 6, scope: !1893)
!5929 = !DILocation(line: 1325, column: 18, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5927, file: !1, line: 1323, column: 12)
!5931 = !DILocation(line: 1325, column: 11, scope: !5930)
!5932 = !DILocation(line: 1325, column: 9, scope: !5930)
!5933 = !DILocation(line: 1327, column: 9, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5930, file: !1, line: 1327, column: 8)
!5935 = !DILocation(line: 1327, column: 8, scope: !5930)
!5936 = !DILocation(line: 1329, column: 20, scope: !5934)
!5937 = !DILocation(line: 1329, column: 13, scope: !5934)
!5938 = !DILocation(line: 1329, column: 11, scope: !5934)
!5939 = !DILocation(line: 1329, column: 7, scope: !5934)
!5940 = !DILocation(line: 1330, column: 3, scope: !5930)
!5941 = !DILocation(line: 1332, column: 9, scope: !1893)
!5942 = !DILocation(line: 1332, column: 13, scope: !1893)
!5943 = !DILocation(line: 1332, column: 12, scope: !1893)
!5944 = !DILocation(line: 1332, column: 7, scope: !1893)
!5945 = !DILocation(line: 1333, column: 17, scope: !1893)
!5946 = !DILocation(line: 1333, column: 10, scope: !1893)
!5947 = !DILocation(line: 1333, column: 8, scope: !1893)
!5948 = !DILocation(line: 1336, column: 3, scope: !1893)
!5949 = !DILocation(line: 1336, column: 8, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !5951, file: !1, discriminator: 1)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !1, line: 1336, column: 3)
!5952 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 1336, column: 3)
!5953 = !DILocation(line: 1336, column: 13, scope: !5950)
!5954 = !DILocation(line: 1336, column: 11, scope: !5950)
!5955 = !DILocation(line: 1336, column: 3, scope: !5950)
!5956 = !DILocation(line: 1337, column: 8, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5958, file: !1, line: 1337, column: 8)
!5958 = distinct !DILexicalBlock(scope: !5951, file: !1, line: 1336, column: 34)
!5959 = !DILocation(line: 1337, column: 8, scope: !5958)
!5960 = !DILocation(line: 1338, column: 7, scope: !5957)
!5961 = !DILocation(line: 1339, column: 3, scope: !5958)
!5962 = !DILocation(line: 1336, column: 21, scope: !5963)
!5963 = !DILexicalBlockFile(scope: !5951, file: !1, discriminator: 2)
!5964 = !DILocation(line: 1336, column: 30, scope: !5963)
!5965 = !DILocation(line: 1336, column: 3, scope: !5963)
!5966 = !DILocation(line: 1341, column: 3, scope: !1893)
!5967 = !DILocation(line: 1342, column: 1, scope: !1893)
!5968 = !DILocalVariable(name: "conn", arg: 1, scope: !1898, file: !1, line: 1571, type: !565)
!5969 = !DILocation(line: 1571, column: 54, scope: !1898)
!5970 = !DILocalVariable(name: "is_connect", arg: 2, scope: !1898, file: !1, line: 1572, type: !226)
!5971 = !DILocation(line: 1572, column: 39, scope: !1898)
!5972 = !DILocalVariable(name: "req_buffer", arg: 3, scope: !1898, file: !1, line: 1573, type: !1873)
!5973 = !DILocation(line: 1573, column: 52, scope: !1898)
!5974 = !DILocalVariable(name: "ptr", scope: !1898, file: !1, line: 1575, type: !230)
!5975 = !DILocation(line: 1575, column: 9, scope: !1898)
!5976 = !DILocalVariable(name: "h", scope: !1898, file: !1, line: 1576, type: !5977)
!5977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 128, align: 64, elements: !1338)
!5978 = !DILocation(line: 1576, column: 22, scope: !1898)
!5979 = !DILocalVariable(name: "headers", scope: !1898, file: !1, line: 1577, type: !916)
!5980 = !DILocation(line: 1577, column: 22, scope: !1898)
!5981 = !DILocalVariable(name: "numlists", scope: !1898, file: !1, line: 1578, type: !177)
!5982 = !DILocation(line: 1578, column: 7, scope: !1898)
!5983 = !DILocalVariable(name: "data", scope: !1898, file: !1, line: 1579, type: !559)
!5984 = !DILocation(line: 1579, column: 21, scope: !1898)
!5985 = !DILocation(line: 1579, column: 28, scope: !1898)
!5986 = !DILocation(line: 1579, column: 34, scope: !1898)
!5987 = !DILocalVariable(name: "i", scope: !1898, file: !1, line: 1580, type: !177)
!5988 = !DILocation(line: 1580, column: 7, scope: !1898)
!5989 = !DILocalVariable(name: "proxy", scope: !1898, file: !1, line: 1582, type: !1777)
!5990 = !DILocation(line: 1582, column: 18, scope: !1898)
!5991 = !DILocation(line: 1584, column: 6, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 1584, column: 6)
!5993 = !DILocation(line: 1584, column: 6, scope: !1898)
!5994 = !DILocation(line: 1585, column: 11, scope: !5992)
!5995 = !DILocation(line: 1585, column: 5, scope: !5992)
!5996 = !DILocation(line: 1587, column: 13, scope: !5992)
!5997 = !DILocation(line: 1587, column: 19, scope: !5992)
!5998 = !DILocation(line: 1587, column: 24, scope: !5992)
!5999 = !DILocation(line: 1587, column: 34, scope: !5992)
!6000 = !DILocation(line: 1587, column: 38, scope: !6001)
!6001 = !DILexicalBlockFile(scope: !5992, file: !1, discriminator: 1)
!6002 = !DILocation(line: 1587, column: 44, scope: !6001)
!6003 = !DILocation(line: 1587, column: 49, scope: !6001)
!6004 = !DILocation(line: 1587, column: 37, scope: !6001)
!6005 = !DILocation(line: 1587, column: 13, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !5992, file: !1, discriminator: 2)
!6007 = !DILocation(line: 1587, column: 11, scope: !6006)
!6008 = !DILocation(line: 1590, column: 10, scope: !1898)
!6009 = !DILocation(line: 1590, column: 3, scope: !1898)
!6010 = !DILocation(line: 1592, column: 12, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 1590, column: 17)
!6012 = !DILocation(line: 1592, column: 18, scope: !6011)
!6013 = !DILocation(line: 1592, column: 22, scope: !6011)
!6014 = !DILocation(line: 1592, column: 5, scope: !6011)
!6015 = !DILocation(line: 1592, column: 10, scope: !6011)
!6016 = !DILocation(line: 1593, column: 5, scope: !6011)
!6017 = !DILocation(line: 1595, column: 12, scope: !6011)
!6018 = !DILocation(line: 1595, column: 18, scope: !6011)
!6019 = !DILocation(line: 1595, column: 22, scope: !6011)
!6020 = !DILocation(line: 1595, column: 5, scope: !6011)
!6021 = !DILocation(line: 1595, column: 10, scope: !6011)
!6022 = !DILocation(line: 1596, column: 8, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 1596, column: 8)
!6024 = !DILocation(line: 1596, column: 14, scope: !6023)
!6025 = !DILocation(line: 1596, column: 18, scope: !6023)
!6026 = !DILocation(line: 1596, column: 8, scope: !6011)
!6027 = !DILocation(line: 1597, column: 14, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6023, file: !1, line: 1596, column: 31)
!6029 = !DILocation(line: 1597, column: 20, scope: !6028)
!6030 = !DILocation(line: 1597, column: 24, scope: !6028)
!6031 = !DILocation(line: 1597, column: 7, scope: !6028)
!6032 = !DILocation(line: 1597, column: 12, scope: !6028)
!6033 = !DILocation(line: 1598, column: 15, scope: !6028)
!6034 = !DILocation(line: 1599, column: 5, scope: !6028)
!6035 = !DILocation(line: 1600, column: 5, scope: !6011)
!6036 = !DILocation(line: 1602, column: 8, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 1602, column: 8)
!6038 = !DILocation(line: 1602, column: 14, scope: !6037)
!6039 = !DILocation(line: 1602, column: 18, scope: !6037)
!6040 = !DILocation(line: 1602, column: 8, scope: !6011)
!6041 = !DILocation(line: 1603, column: 14, scope: !6037)
!6042 = !DILocation(line: 1603, column: 20, scope: !6037)
!6043 = !DILocation(line: 1603, column: 24, scope: !6037)
!6044 = !DILocation(line: 1603, column: 7, scope: !6037)
!6045 = !DILocation(line: 1603, column: 12, scope: !6037)
!6046 = !DILocation(line: 1605, column: 14, scope: !6037)
!6047 = !DILocation(line: 1605, column: 20, scope: !6037)
!6048 = !DILocation(line: 1605, column: 24, scope: !6037)
!6049 = !DILocation(line: 1605, column: 7, scope: !6037)
!6050 = !DILocation(line: 1605, column: 12, scope: !6037)
!6051 = !DILocation(line: 1606, column: 5, scope: !6011)
!6052 = !DILocation(line: 1610, column: 8, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 1610, column: 3)
!6054 = !DILocation(line: 1610, column: 7, scope: !6053)
!6055 = !DILocation(line: 1610, column: 12, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6057, file: !1, discriminator: 1)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !1, line: 1610, column: 3)
!6058 = !DILocation(line: 1610, column: 16, scope: !6056)
!6059 = !DILocation(line: 1610, column: 14, scope: !6056)
!6060 = !DILocation(line: 1610, column: 3, scope: !6056)
!6061 = !DILocation(line: 1611, column: 17, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6057, file: !1, line: 1610, column: 31)
!6063 = !DILocation(line: 1611, column: 15, scope: !6062)
!6064 = !DILocation(line: 1611, column: 13, scope: !6062)
!6065 = !DILocation(line: 1613, column: 5, scope: !6062)
!6066 = !DILocation(line: 1613, column: 11, scope: !6067)
!6067 = !DILexicalBlockFile(scope: !6062, file: !1, discriminator: 1)
!6068 = !DILocation(line: 1613, column: 5, scope: !6067)
!6069 = !DILocation(line: 1614, column: 20, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6062, file: !1, line: 1613, column: 20)
!6071 = !DILocation(line: 1614, column: 29, scope: !6070)
!6072 = !DILocation(line: 1614, column: 13, scope: !6070)
!6073 = !DILocation(line: 1614, column: 11, scope: !6070)
!6074 = !DILocation(line: 1615, column: 10, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !1, line: 1615, column: 10)
!6076 = !DILocation(line: 1615, column: 10, scope: !6070)
!6077 = !DILocation(line: 1618, column: 12, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6075, file: !1, line: 1615, column: 15)
!6079 = !DILocation(line: 1619, column: 9, scope: !6078)
!6080 = !DILocation(line: 1619, column: 16, scope: !6081)
!6081 = !DILexicalBlockFile(scope: !6078, file: !1, discriminator: 1)
!6082 = !DILocation(line: 1619, column: 15, scope: !6081)
!6083 = !DILocation(line: 1619, column: 20, scope: !6081)
!6084 = !DILocation(line: 1619, column: 23, scope: !6085)
!6085 = !DILexicalBlockFile(scope: !6078, file: !1, discriminator: 2)
!6086 = !DILocation(line: 1619, column: 20, scope: !6085)
!6087 = !DILocation(line: 1619, column: 9, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6078, file: !1, discriminator: 3)
!6089 = !DILocation(line: 1620, column: 14, scope: !6078)
!6090 = !DILocation(line: 1619, column: 9, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6078, file: !1, discriminator: 4)
!6092 = !DILocation(line: 1622, column: 13, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6078, file: !1, line: 1622, column: 12)
!6094 = !DILocation(line: 1622, column: 12, scope: !6093)
!6095 = !DILocation(line: 1622, column: 12, scope: !6078)
!6096 = !DILocation(line: 1625, column: 14, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !1, line: 1625, column: 14)
!6098 = distinct !DILexicalBlock(scope: !6093, file: !1, line: 1622, column: 18)
!6099 = !DILocation(line: 1625, column: 20, scope: !6097)
!6100 = !DILocation(line: 1625, column: 29, scope: !6097)
!6101 = !DILocation(line: 1625, column: 34, scope: !6097)
!6102 = !DILocation(line: 1628, column: 14, scope: !6097)
!6103 = !DILocation(line: 1625, column: 14, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !6098, file: !1, discriminator: 1)
!6105 = !DILocation(line: 1625, column: 14, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !6098, file: !1, discriminator: 2)
!6107 = !DILocation(line: 1630, column: 19, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6097, file: !1, line: 1630, column: 19)
!6109 = !DILocation(line: 1630, column: 25, scope: !6108)
!6110 = !DILocation(line: 1630, column: 29, scope: !6108)
!6111 = !DILocation(line: 1630, column: 37, scope: !6108)
!6112 = !DILocation(line: 1630, column: 58, scope: !6108)
!6113 = !DILocation(line: 1632, column: 19, scope: !6108)
!6114 = !DILocation(line: 1630, column: 19, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !6097, file: !1, discriminator: 1)
!6116 = !DILocation(line: 1630, column: 19, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !6097, file: !1, discriminator: 2)
!6118 = !DILocation(line: 1634, column: 19, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6108, file: !1, line: 1634, column: 19)
!6120 = !DILocation(line: 1634, column: 25, scope: !6119)
!6121 = !DILocation(line: 1634, column: 30, scope: !6119)
!6122 = !DILocation(line: 1634, column: 38, scope: !6119)
!6123 = !DILocation(line: 1637, column: 19, scope: !6119)
!6124 = !DILocation(line: 1634, column: 19, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !6108, file: !1, discriminator: 1)
!6126 = !DILocation(line: 1634, column: 19, scope: !6127)
!6127 = !DILexicalBlockFile(scope: !6108, file: !1, discriminator: 2)
!6128 = !DILocation(line: 1639, column: 19, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 1639, column: 19)
!6130 = !DILocation(line: 1639, column: 25, scope: !6129)
!6131 = !DILocation(line: 1639, column: 34, scope: !6129)
!6132 = !DILocation(line: 1639, column: 37, scope: !6129)
!6133 = !DILocation(line: 1642, column: 19, scope: !6129)
!6134 = !DILocation(line: 1639, column: 19, scope: !6135)
!6135 = !DILexicalBlockFile(scope: !6119, file: !1, discriminator: 1)
!6136 = !DILocation(line: 1639, column: 19, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !6119, file: !1, discriminator: 2)
!6138 = !DILocation(line: 1644, column: 20, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !1, line: 1644, column: 19)
!6140 = !DILocation(line: 1644, column: 26, scope: !6139)
!6141 = !DILocation(line: 1644, column: 38, scope: !6139)
!6142 = !DILocation(line: 1644, column: 45, scope: !6139)
!6143 = !DILocation(line: 1645, column: 19, scope: !6139)
!6144 = !DILocation(line: 1644, column: 19, scope: !6145)
!6145 = !DILexicalBlockFile(scope: !6129, file: !1, discriminator: 1)
!6146 = !DILocation(line: 1644, column: 19, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !6129, file: !1, discriminator: 2)
!6148 = !DILocalVariable(name: "result", scope: !6149, file: !1, line: 1649, type: !569)
!6149 = distinct !DILexicalBlock(scope: !6139, file: !1, line: 1648, column: 16)
!6150 = !DILocation(line: 1649, column: 22, scope: !6149)
!6151 = !DILocation(line: 1649, column: 48, scope: !6149)
!6152 = !DILocation(line: 1650, column: 48, scope: !6149)
!6153 = !DILocation(line: 1650, column: 57, scope: !6149)
!6154 = !DILocation(line: 1649, column: 31, scope: !6149)
!6155 = !DILocation(line: 1651, column: 16, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6149, file: !1, line: 1651, column: 16)
!6157 = !DILocation(line: 1651, column: 16, scope: !6149)
!6158 = !DILocation(line: 1652, column: 22, scope: !6156)
!6159 = !DILocation(line: 1652, column: 15, scope: !6156)
!6160 = !DILocation(line: 1654, column: 9, scope: !6098)
!6161 = !DILocation(line: 1655, column: 7, scope: !6078)
!6162 = !DILocation(line: 1657, column: 22, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6075, file: !1, line: 1656, column: 12)
!6164 = !DILocation(line: 1657, column: 31, scope: !6163)
!6165 = !DILocation(line: 1657, column: 15, scope: !6163)
!6166 = !DILocation(line: 1657, column: 13, scope: !6163)
!6167 = !DILocation(line: 1658, column: 12, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6163, file: !1, line: 1658, column: 12)
!6169 = !DILocation(line: 1658, column: 12, scope: !6163)
!6170 = !DILocation(line: 1660, column: 14, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !1, line: 1658, column: 17)
!6172 = !DILocation(line: 1661, column: 11, scope: !6171)
!6173 = !DILocation(line: 1661, column: 18, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !6171, file: !1, discriminator: 1)
!6175 = !DILocation(line: 1661, column: 17, scope: !6174)
!6176 = !DILocation(line: 1661, column: 22, scope: !6174)
!6177 = !DILocation(line: 1661, column: 25, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !6171, file: !1, discriminator: 2)
!6179 = !DILocation(line: 1661, column: 22, scope: !6178)
!6180 = !DILocation(line: 1661, column: 11, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !6171, file: !1, discriminator: 3)
!6182 = !DILocation(line: 1662, column: 16, scope: !6171)
!6183 = !DILocation(line: 1661, column: 11, scope: !6184)
!6184 = !DILexicalBlockFile(scope: !6171, file: !1, discriminator: 4)
!6185 = !DILocation(line: 1664, column: 15, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6171, file: !1, line: 1664, column: 14)
!6187 = !DILocation(line: 1664, column: 14, scope: !6186)
!6188 = !DILocation(line: 1664, column: 14, scope: !6171)
!6189 = !DILocation(line: 1666, column: 11, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6186, file: !1, line: 1664, column: 20)
!6191 = !DILocation(line: 1668, column: 18, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 1668, column: 16)
!6193 = distinct !DILexicalBlock(scope: !6186, file: !1, line: 1667, column: 16)
!6194 = !DILocation(line: 1668, column: 16, scope: !6192)
!6195 = !DILocation(line: 1668, column: 25, scope: !6192)
!6196 = !DILocation(line: 1668, column: 16, scope: !6193)
!6197 = !DILocalVariable(name: "result", scope: !6198, file: !1, line: 1669, type: !569)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !1, line: 1668, column: 33)
!6199 = !DILocation(line: 1669, column: 24, scope: !6198)
!6200 = !DILocation(line: 1672, column: 16, scope: !6198)
!6201 = !DILocation(line: 1672, column: 20, scope: !6198)
!6202 = !DILocation(line: 1673, column: 41, scope: !6198)
!6203 = !DILocation(line: 1674, column: 41, scope: !6198)
!6204 = !DILocation(line: 1674, column: 50, scope: !6198)
!6205 = !DILocation(line: 1673, column: 24, scope: !6198)
!6206 = !DILocation(line: 1673, column: 22, scope: !6198)
!6207 = !DILocation(line: 1675, column: 18, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6198, file: !1, line: 1675, column: 18)
!6209 = !DILocation(line: 1675, column: 18, scope: !6198)
!6210 = !DILocation(line: 1676, column: 24, scope: !6208)
!6211 = !DILocation(line: 1676, column: 17, scope: !6208)
!6212 = !DILocation(line: 1677, column: 13, scope: !6198)
!6213 = !DILocation(line: 1679, column: 9, scope: !6171)
!6214 = !DILocation(line: 1681, column: 17, scope: !6070)
!6215 = !DILocation(line: 1681, column: 26, scope: !6070)
!6216 = !DILocation(line: 1681, column: 15, scope: !6070)
!6217 = !DILocation(line: 1613, column: 5, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6062, file: !1, discriminator: 2)
!6219 = !DILocation(line: 1683, column: 3, scope: !6062)
!6220 = !DILocation(line: 1610, column: 27, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6057, file: !1, discriminator: 2)
!6222 = !DILocation(line: 1610, column: 3, scope: !6221)
!6223 = !DILocation(line: 1685, column: 3, scope: !1898)
!6224 = !DILocation(line: 1686, column: 1, scope: !1898)
!6225 = !DILocalVariable(name: "data", arg: 1, scope: !1901, file: !1, line: 1688, type: !559)
!6226 = !DILocation(line: 1688, column: 51, scope: !1901)
!6227 = !DILocalVariable(name: "req_buffer", arg: 2, scope: !1901, file: !1, line: 1689, type: !1873)
!6228 = !DILocation(line: 1689, column: 51, scope: !1901)
!6229 = !DILocalVariable(name: "tm", scope: !1901, file: !1, line: 1691, type: !6230)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64, align: 64)
!6231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6232)
!6232 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !258, line: 133, size: 448, align: 64, elements: !6233)
!6233 = !{!6234, !6235, !6236, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !6232, file: !258, line: 135, baseType: !177, size: 32, align: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !6232, file: !258, line: 136, baseType: !177, size: 32, align: 32, offset: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !6232, file: !258, line: 137, baseType: !177, size: 32, align: 32, offset: 64)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !6232, file: !258, line: 138, baseType: !177, size: 32, align: 32, offset: 96)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !6232, file: !258, line: 139, baseType: !177, size: 32, align: 32, offset: 128)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !6232, file: !258, line: 140, baseType: !177, size: 32, align: 32, offset: 160)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !6232, file: !258, line: 141, baseType: !177, size: 32, align: 32, offset: 192)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !6232, file: !258, line: 142, baseType: !177, size: 32, align: 32, offset: 224)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !6232, file: !258, line: 143, baseType: !177, size: 32, align: 32, offset: 256)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !6232, file: !258, line: 146, baseType: !206, size: 64, align: 64, offset: 320)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !6232, file: !258, line: 147, baseType: !716, size: 64, align: 64, offset: 384)
!6245 = !DILocation(line: 1691, column: 20, scope: !1901)
!6246 = !DILocalVariable(name: "buf", scope: !1901, file: !1, line: 1692, type: !230)
!6247 = !DILocation(line: 1692, column: 9, scope: !1901)
!6248 = !DILocation(line: 1692, column: 15, scope: !1901)
!6249 = !DILocation(line: 1692, column: 21, scope: !1901)
!6250 = !DILocation(line: 1692, column: 27, scope: !1901)
!6251 = !DILocalVariable(name: "keeptime", scope: !1901, file: !1, line: 1693, type: !6232)
!6252 = !DILocation(line: 1693, column: 13, scope: !1901)
!6253 = !DILocalVariable(name: "result", scope: !1901, file: !1, line: 1694, type: !569)
!6254 = !DILocation(line: 1694, column: 12, scope: !1901)
!6255 = !DILocation(line: 1696, column: 6, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 1696, column: 6)
!6257 = !DILocation(line: 1696, column: 12, scope: !6256)
!6258 = !DILocation(line: 1696, column: 16, scope: !6256)
!6259 = !DILocation(line: 1696, column: 30, scope: !6256)
!6260 = !DILocation(line: 1696, column: 6, scope: !1901)
!6261 = !DILocation(line: 1698, column: 5, scope: !6256)
!6262 = !DILocation(line: 1700, column: 24, scope: !1901)
!6263 = !DILocation(line: 1700, column: 30, scope: !1901)
!6264 = !DILocation(line: 1700, column: 34, scope: !1901)
!6265 = !DILocation(line: 1700, column: 12, scope: !1901)
!6266 = !DILocation(line: 1700, column: 10, scope: !1901)
!6267 = !DILocation(line: 1701, column: 6, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 1701, column: 6)
!6269 = !DILocation(line: 1701, column: 6, scope: !1901)
!6270 = !DILocation(line: 1702, column: 11, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 1701, column: 14)
!6272 = !DILocation(line: 1702, column: 5, scope: !6271)
!6273 = !DILocation(line: 1703, column: 12, scope: !6271)
!6274 = !DILocation(line: 1703, column: 5, scope: !6271)
!6275 = !DILocation(line: 1705, column: 6, scope: !1901)
!6276 = !DILocation(line: 1715, column: 12, scope: !1901)
!6277 = !DILocation(line: 1717, column: 23, scope: !1901)
!6278 = !DILocation(line: 1717, column: 27, scope: !1901)
!6279 = !DILocation(line: 1717, column: 35, scope: !6280)
!6280 = !DILexicalBlockFile(scope: !1901, file: !1, discriminator: 1)
!6281 = !DILocation(line: 1717, column: 39, scope: !6280)
!6282 = !DILocation(line: 1717, column: 46, scope: !6280)
!6283 = !DILocation(line: 1717, column: 23, scope: !6280)
!6284 = !DILocation(line: 1717, column: 23, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !1901, file: !1, discriminator: 2)
!6286 = !DILocation(line: 1717, column: 23, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !1901, file: !1, discriminator: 3)
!6288 = !DILocation(line: 1717, column: 12, scope: !6287)
!6289 = !DILocation(line: 1718, column: 12, scope: !1901)
!6290 = !DILocation(line: 1718, column: 16, scope: !1901)
!6291 = !DILocation(line: 1719, column: 23, scope: !1901)
!6292 = !DILocation(line: 1719, column: 27, scope: !1901)
!6293 = !DILocation(line: 1719, column: 12, scope: !1901)
!6294 = !DILocation(line: 1720, column: 12, scope: !1901)
!6295 = !DILocation(line: 1720, column: 16, scope: !1901)
!6296 = !DILocation(line: 1720, column: 24, scope: !1901)
!6297 = !DILocation(line: 1721, column: 12, scope: !1901)
!6298 = !DILocation(line: 1721, column: 16, scope: !1901)
!6299 = !DILocation(line: 1722, column: 12, scope: !1901)
!6300 = !DILocation(line: 1722, column: 16, scope: !1901)
!6301 = !DILocation(line: 1723, column: 12, scope: !1901)
!6302 = !DILocation(line: 1723, column: 16, scope: !1901)
!6303 = !DILocation(line: 1715, column: 3, scope: !6280)
!6304 = !DILocation(line: 1725, column: 10, scope: !1901)
!6305 = !DILocation(line: 1725, column: 16, scope: !1901)
!6306 = !DILocation(line: 1725, column: 20, scope: !1901)
!6307 = !DILocation(line: 1725, column: 3, scope: !1901)
!6308 = !DILocation(line: 1727, column: 5, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 1725, column: 35)
!6310 = !DILocation(line: 1729, column: 31, scope: !6309)
!6311 = !DILocation(line: 1730, column: 60, scope: !6309)
!6312 = !DILocation(line: 1729, column: 14, scope: !6309)
!6313 = !DILocation(line: 1729, column: 12, scope: !6309)
!6314 = !DILocation(line: 1731, column: 5, scope: !6309)
!6315 = !DILocation(line: 1733, column: 31, scope: !6309)
!6316 = !DILocation(line: 1734, column: 62, scope: !6309)
!6317 = !DILocation(line: 1733, column: 14, scope: !6309)
!6318 = !DILocation(line: 1733, column: 12, scope: !6309)
!6319 = !DILocation(line: 1735, column: 5, scope: !6309)
!6320 = !DILocation(line: 1737, column: 31, scope: !6309)
!6321 = !DILocation(line: 1738, column: 56, scope: !6309)
!6322 = !DILocation(line: 1737, column: 14, scope: !6309)
!6323 = !DILocation(line: 1737, column: 12, scope: !6309)
!6324 = !DILocation(line: 1739, column: 5, scope: !6309)
!6325 = !DILocation(line: 1742, column: 10, scope: !1901)
!6326 = !DILocation(line: 1742, column: 3, scope: !1901)
!6327 = !DILocation(line: 1743, column: 1, scope: !1901)
!6328 = !DILocalVariable(name: "data", arg: 1, scope: !1920, file: !1, line: 1509, type: !1923)
!6329 = !DILocation(line: 1509, column: 54, scope: !1920)
!6330 = !DILocalVariable(name: "conn", arg: 2, scope: !1920, file: !1, line: 1510, type: !1487)
!6331 = !DILocation(line: 1510, column: 56, scope: !1920)
!6332 = !DILocation(line: 1512, column: 7, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !1920, file: !1, line: 1512, column: 6)
!6334 = !DILocation(line: 1512, column: 13, scope: !6333)
!6335 = !DILocation(line: 1512, column: 19, scope: !6333)
!6336 = !DILocation(line: 1512, column: 31, scope: !6333)
!6337 = !DILocation(line: 1512, column: 38, scope: !6333)
!6338 = !DILocation(line: 1512, column: 42, scope: !6339)
!6339 = !DILexicalBlockFile(scope: !6333, file: !1, discriminator: 1)
!6340 = !DILocation(line: 1512, column: 48, scope: !6339)
!6341 = !DILocation(line: 1512, column: 60, scope: !6339)
!6342 = !DILocation(line: 1512, column: 6, scope: !6339)
!6343 = !DILocation(line: 1513, column: 5, scope: !6333)
!6344 = !DILocation(line: 1514, column: 7, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !1920, file: !1, line: 1514, column: 6)
!6346 = !DILocation(line: 1514, column: 13, scope: !6345)
!6347 = !DILocation(line: 1514, column: 17, scope: !6345)
!6348 = !DILocation(line: 1514, column: 29, scope: !6345)
!6349 = !DILocation(line: 1514, column: 55, scope: !6345)
!6350 = !DILocation(line: 1515, column: 7, scope: !6345)
!6351 = !DILocation(line: 1515, column: 13, scope: !6345)
!6352 = !DILocation(line: 1515, column: 25, scope: !6345)
!6353 = !DILocation(line: 1514, column: 6, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !1920, file: !1, discriminator: 1)
!6355 = !DILocation(line: 1516, column: 5, scope: !6345)
!6356 = !DILocation(line: 1517, column: 12, scope: !1920)
!6357 = !DILocation(line: 1517, column: 18, scope: !1920)
!6358 = !DILocation(line: 1517, column: 22, scope: !1920)
!6359 = !DILocation(line: 1517, column: 34, scope: !1920)
!6360 = !DILocation(line: 1517, column: 61, scope: !1920)
!6361 = !DILocation(line: 1518, column: 12, scope: !1920)
!6362 = !DILocation(line: 1518, column: 18, scope: !1920)
!6363 = !DILocation(line: 1518, column: 22, scope: !1920)
!6364 = !DILocation(line: 1518, column: 34, scope: !1920)
!6365 = !DILocation(line: 1517, column: 61, scope: !6354)
!6366 = !DILocation(line: 1517, column: 3, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !1920, file: !1, discriminator: 2)
!6368 = !DILocation(line: 1519, column: 1, scope: !1920)
!6369 = !DILocalVariable(name: "data", arg: 1, scope: !1925, file: !1, line: 1521, type: !1923)
!6370 = !DILocation(line: 1521, column: 60, scope: !1925)
!6371 = !DILocalVariable(name: "conn", arg: 2, scope: !1925, file: !1, line: 1522, type: !1487)
!6372 = !DILocation(line: 1522, column: 62, scope: !1925)
!6373 = !DILocation(line: 1529, column: 23, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 1529, column: 6)
!6375 = !DILocation(line: 1529, column: 29, scope: !6374)
!6376 = !DILocation(line: 1529, column: 6, scope: !6374)
!6377 = !DILocation(line: 1529, column: 6, scope: !1925)
!6378 = !DILocation(line: 1530, column: 5, scope: !6374)
!6379 = !DILocation(line: 1532, column: 3, scope: !1925)
!6380 = !DILocation(line: 1533, column: 1, scope: !1925)
!6381 = !DILocalVariable(name: "data", arg: 1, scope: !1928, file: !1, line: 1536, type: !559)
!6382 = !DILocation(line: 1536, column: 45, scope: !1928)
!6383 = !DILocalVariable(name: "conn", arg: 2, scope: !1928, file: !1, line: 1537, type: !565)
!6384 = !DILocation(line: 1537, column: 47, scope: !1928)
!6385 = !DILocalVariable(name: "req_buffer", arg: 3, scope: !1928, file: !1, line: 1538, type: !1873)
!6386 = !DILocation(line: 1538, column: 45, scope: !1928)
!6387 = !DILocalVariable(name: "result", scope: !1928, file: !1, line: 1540, type: !569)
!6388 = !DILocation(line: 1540, column: 12, scope: !1928)
!6389 = !DILocalVariable(name: "ptr", scope: !1928, file: !1, line: 1541, type: !716)
!6390 = !DILocation(line: 1541, column: 15, scope: !1928)
!6391 = !DILocation(line: 1542, column: 3, scope: !1928)
!6392 = !DILocation(line: 1542, column: 9, scope: !1928)
!6393 = !DILocation(line: 1542, column: 15, scope: !1928)
!6394 = !DILocation(line: 1542, column: 31, scope: !1928)
!6395 = !DILocation(line: 1544, column: 23, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !1928, file: !1, line: 1544, column: 6)
!6397 = !DILocation(line: 1544, column: 29, scope: !6396)
!6398 = !DILocation(line: 1544, column: 6, scope: !6396)
!6399 = !DILocation(line: 1544, column: 35, scope: !6396)
!6400 = !DILocation(line: 1545, column: 7, scope: !6396)
!6401 = !DILocation(line: 1545, column: 13, scope: !6396)
!6402 = !DILocation(line: 1545, column: 25, scope: !6396)
!6403 = !DILocation(line: 1544, column: 6, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !1928, file: !1, discriminator: 1)
!6405 = !DILocation(line: 1549, column: 29, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6396, file: !1, line: 1545, column: 33)
!6407 = !DILocation(line: 1549, column: 11, scope: !6406)
!6408 = !DILocation(line: 1549, column: 9, scope: !6406)
!6409 = !DILocation(line: 1550, column: 8, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !1, line: 1550, column: 8)
!6411 = !DILocation(line: 1550, column: 8, scope: !6406)
!6412 = !DILocation(line: 1552, column: 28, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 1550, column: 13)
!6414 = !DILocation(line: 1552, column: 9, scope: !6413)
!6415 = !DILocation(line: 1551, column: 7, scope: !6413)
!6416 = !DILocation(line: 1551, column: 13, scope: !6413)
!6417 = !DILocation(line: 1551, column: 19, scope: !6413)
!6418 = !DILocation(line: 1551, column: 35, scope: !6413)
!6419 = !DILocation(line: 1553, column: 5, scope: !6413)
!6420 = !DILocation(line: 1555, column: 33, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 1554, column: 10)
!6422 = !DILocation(line: 1555, column: 16, scope: !6421)
!6423 = !DILocation(line: 1555, column: 14, scope: !6421)
!6424 = !DILocation(line: 1557, column: 11, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6421, file: !1, line: 1557, column: 10)
!6426 = !DILocation(line: 1557, column: 10, scope: !6421)
!6427 = !DILocation(line: 1558, column: 9, scope: !6425)
!6428 = !DILocation(line: 1558, column: 15, scope: !6425)
!6429 = !DILocation(line: 1558, column: 21, scope: !6425)
!6430 = !DILocation(line: 1558, column: 37, scope: !6425)
!6431 = !DILocation(line: 1560, column: 3, scope: !6406)
!6432 = !DILocation(line: 1562, column: 10, scope: !1928)
!6433 = !DILocation(line: 1562, column: 3, scope: !1928)
!6434 = !DILocalVariable(name: "data", arg: 1, scope: !1905, file: !1, line: 2919, type: !559)
!6435 = !DILocation(line: 2919, column: 56, scope: !1905)
!6436 = !DILocalVariable(name: "conn", arg: 2, scope: !1905, file: !1, line: 2920, type: !565)
!6437 = !DILocation(line: 2920, column: 60, scope: !1905)
!6438 = !DILocalVariable(name: "nread", arg: 3, scope: !1905, file: !1, line: 2921, type: !1497)
!6439 = !DILocation(line: 2921, column: 49, scope: !1905)
!6440 = !DILocalVariable(name: "stop_reading", arg: 4, scope: !1905, file: !1, line: 2922, type: !1461)
!6441 = !DILocation(line: 2922, column: 46, scope: !1905)
!6442 = !DILocalVariable(name: "result", scope: !1905, file: !1, line: 2924, type: !569)
!6443 = !DILocation(line: 2924, column: 12, scope: !1905)
!6444 = !DILocalVariable(name: "k", scope: !1905, file: !1, line: 2925, type: !1934)
!6445 = !DILocation(line: 2925, column: 25, scope: !1905)
!6446 = !DILocation(line: 2925, column: 30, scope: !1905)
!6447 = !DILocation(line: 2925, column: 36, scope: !1905)
!6448 = !DILocation(line: 2928, column: 3, scope: !1905)
!6449 = !DILocalVariable(name: "rest_length", scope: !6450, file: !1, line: 2929, type: !158)
!6450 = distinct !DILexicalBlock(scope: !1905, file: !1, line: 2928, column: 6)
!6451 = !DILocation(line: 2929, column: 12, scope: !6450)
!6452 = !DILocalVariable(name: "full_length", scope: !6450, file: !1, line: 2930, type: !158)
!6453 = !DILocation(line: 2930, column: 12, scope: !6450)
!6454 = !DILocalVariable(name: "writetype", scope: !6450, file: !1, line: 2931, type: !177)
!6455 = !DILocation(line: 2931, column: 9, scope: !6450)
!6456 = !DILocation(line: 2934, column: 20, scope: !6450)
!6457 = !DILocation(line: 2934, column: 23, scope: !6450)
!6458 = !DILocation(line: 2934, column: 5, scope: !6450)
!6459 = !DILocation(line: 2934, column: 8, scope: !6450)
!6460 = !DILocation(line: 2934, column: 18, scope: !6450)
!6461 = !DILocation(line: 2937, column: 25, scope: !6450)
!6462 = !DILocation(line: 2937, column: 28, scope: !6450)
!6463 = !DILocation(line: 2937, column: 46, scope: !6450)
!6464 = !DILocation(line: 2937, column: 45, scope: !6450)
!6465 = !DILocation(line: 2937, column: 18, scope: !6450)
!6466 = !DILocation(line: 2937, column: 5, scope: !6450)
!6467 = !DILocation(line: 2937, column: 8, scope: !6450)
!6468 = !DILocation(line: 2937, column: 16, scope: !6450)
!6469 = !DILocation(line: 2939, column: 9, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 2939, column: 8)
!6471 = !DILocation(line: 2939, column: 12, scope: !6470)
!6472 = !DILocation(line: 2939, column: 8, scope: !6450)
!6473 = !DILocation(line: 2942, column: 30, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6470, file: !1, line: 2939, column: 21)
!6475 = !DILocation(line: 2942, column: 36, scope: !6474)
!6476 = !DILocation(line: 2942, column: 40, scope: !6474)
!6477 = !DILocation(line: 2942, column: 39, scope: !6474)
!6478 = !DILocation(line: 2942, column: 16, scope: !6474)
!6479 = !DILocation(line: 2942, column: 14, scope: !6474)
!6480 = !DILocation(line: 2943, column: 10, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !1, line: 2943, column: 10)
!6482 = !DILocation(line: 2943, column: 10, scope: !6474)
!6483 = !DILocation(line: 2944, column: 16, scope: !6481)
!6484 = !DILocation(line: 2944, column: 9, scope: !6481)
!6485 = !DILocation(line: 2946, column: 11, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6474, file: !1, line: 2946, column: 10)
!6487 = !DILocation(line: 2946, column: 14, scope: !6486)
!6488 = !DILocation(line: 2946, column: 25, scope: !6486)
!6489 = !DILocation(line: 2946, column: 29, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6486, file: !1, discriminator: 1)
!6491 = !DILocation(line: 2946, column: 32, scope: !6490)
!6492 = !DILocation(line: 2946, column: 39, scope: !6490)
!6493 = !DILocation(line: 2946, column: 10, scope: !6490)
!6494 = !DILocation(line: 2948, column: 30, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !1, line: 2948, column: 12)
!6496 = distinct !DILexicalBlock(scope: !6486, file: !1, line: 2946, column: 44)
!6497 = !DILocation(line: 2948, column: 36, scope: !6495)
!6498 = !DILocation(line: 2948, column: 42, scope: !6495)
!6499 = !DILocation(line: 2948, column: 48, scope: !6495)
!6500 = !DILocation(line: 2948, column: 54, scope: !6495)
!6501 = !DILocation(line: 2948, column: 13, scope: !6495)
!6502 = !DILocation(line: 2948, column: 12, scope: !6496)
!6503 = !DILocation(line: 2950, column: 11, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 2948, column: 67)
!6505 = !DILocation(line: 2950, column: 14, scope: !6504)
!6506 = !DILocation(line: 2950, column: 21, scope: !6504)
!6507 = !DILocation(line: 2951, column: 11, scope: !6504)
!6508 = !DILocation(line: 2951, column: 14, scope: !6504)
!6509 = !DILocation(line: 2951, column: 24, scope: !6504)
!6510 = !DILocation(line: 2952, column: 11, scope: !6504)
!6511 = !DILocation(line: 2954, column: 7, scope: !6496)
!6512 = !DILocation(line: 2956, column: 7, scope: !6474)
!6513 = !DILocation(line: 2960, column: 20, scope: !6450)
!6514 = !DILocation(line: 2960, column: 23, scope: !6450)
!6515 = !DILocation(line: 2960, column: 33, scope: !6450)
!6516 = !DILocation(line: 2960, column: 36, scope: !6450)
!6517 = !DILocation(line: 2960, column: 31, scope: !6450)
!6518 = !DILocation(line: 2960, column: 40, scope: !6450)
!6519 = !DILocation(line: 2960, column: 17, scope: !6450)
!6520 = !DILocation(line: 2961, column: 24, scope: !6450)
!6521 = !DILocation(line: 2961, column: 6, scope: !6450)
!6522 = !DILocation(line: 2961, column: 12, scope: !6450)
!6523 = !DILocation(line: 2963, column: 14, scope: !6450)
!6524 = !DILocation(line: 2963, column: 17, scope: !6450)
!6525 = !DILocation(line: 2963, column: 25, scope: !6450)
!6526 = !DILocation(line: 2963, column: 5, scope: !6450)
!6527 = !DILocation(line: 2963, column: 8, scope: !6450)
!6528 = !DILocation(line: 2963, column: 12, scope: !6450)
!6529 = !DILocation(line: 2965, column: 19, scope: !6450)
!6530 = !DILocation(line: 2965, column: 22, scope: !6450)
!6531 = !DILocation(line: 2965, column: 28, scope: !6450)
!6532 = !DILocation(line: 2965, column: 31, scope: !6450)
!6533 = !DILocation(line: 2965, column: 26, scope: !6450)
!6534 = !DILocation(line: 2965, column: 17, scope: !6450)
!6535 = !DILocation(line: 2967, column: 28, scope: !6450)
!6536 = !DILocation(line: 2967, column: 34, scope: !6450)
!6537 = !DILocation(line: 2967, column: 37, scope: !6450)
!6538 = !DILocation(line: 2967, column: 14, scope: !6450)
!6539 = !DILocation(line: 2967, column: 12, scope: !6450)
!6540 = !DILocation(line: 2968, column: 8, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 2968, column: 8)
!6542 = !DILocation(line: 2968, column: 8, scope: !6450)
!6543 = !DILocation(line: 2969, column: 14, scope: !6541)
!6544 = !DILocation(line: 2969, column: 7, scope: !6541)
!6545 = !DILocation(line: 2971, column: 18, scope: !6450)
!6546 = !DILocation(line: 2971, column: 21, scope: !6450)
!6547 = !DILocation(line: 2971, column: 5, scope: !6450)
!6548 = !DILocation(line: 2971, column: 8, scope: !6450)
!6549 = !DILocation(line: 2971, column: 16, scope: !6450)
!6550 = !DILocation(line: 2972, column: 12, scope: !6450)
!6551 = !DILocation(line: 2972, column: 18, scope: !6450)
!6552 = !DILocation(line: 2972, column: 24, scope: !6450)
!6553 = !DILocation(line: 2972, column: 5, scope: !6450)
!6554 = !DILocation(line: 2972, column: 8, scope: !6450)
!6555 = !DILocation(line: 2972, column: 10, scope: !6450)
!6556 = !DILocation(line: 2978, column: 9, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 2978, column: 8)
!6558 = !DILocation(line: 2978, column: 12, scope: !6557)
!6559 = !DILocation(line: 2978, column: 8, scope: !6450)
!6560 = !DILocation(line: 2980, column: 11, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 2980, column: 10)
!6562 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 2978, column: 24)
!6563 = !DILocation(line: 2980, column: 14, scope: !6561)
!6564 = !DILocation(line: 2980, column: 21, scope: !6561)
!6565 = !DILocation(line: 2980, column: 25, scope: !6561)
!6566 = !DILocation(line: 2981, column: 28, scope: !6561)
!6567 = !DILocation(line: 2981, column: 34, scope: !6561)
!6568 = !DILocation(line: 2981, column: 40, scope: !6561)
!6569 = !DILocation(line: 2981, column: 46, scope: !6561)
!6570 = !DILocation(line: 2981, column: 52, scope: !6561)
!6571 = !DILocation(line: 2981, column: 11, scope: !6561)
!6572 = !DILocation(line: 2980, column: 10, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6562, file: !1, discriminator: 1)
!6574 = !DILocation(line: 2983, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6561, file: !1, line: 2981, column: 65)
!6576 = !DILocation(line: 2983, column: 12, scope: !6575)
!6577 = !DILocation(line: 2983, column: 19, scope: !6575)
!6578 = !DILocation(line: 2984, column: 13, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 2984, column: 12)
!6580 = !DILocation(line: 2984, column: 12, scope: !6579)
!6581 = !DILocation(line: 2984, column: 12, scope: !6575)
!6582 = !DILocation(line: 2986, column: 11, scope: !6579)
!6583 = !DILocation(line: 2986, column: 14, scope: !6579)
!6584 = !DILocation(line: 2986, column: 24, scope: !6579)
!6585 = !DILocation(line: 2989, column: 11, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6579, file: !1, line: 2987, column: 14)
!6587 = !DILocation(line: 2989, column: 14, scope: !6586)
!6588 = !DILocation(line: 2989, column: 24, scope: !6586)
!6589 = !DILocation(line: 2990, column: 29, scope: !6586)
!6590 = !DILocation(line: 2990, column: 12, scope: !6586)
!6591 = !DILocation(line: 2990, column: 18, scope: !6586)
!6592 = !DILocation(line: 2992, column: 9, scope: !6575)
!6593 = !DILocation(line: 2994, column: 5, scope: !6562)
!6594 = !DILocation(line: 2998, column: 18, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 2998, column: 8)
!6596 = !DILocation(line: 2998, column: 21, scope: !6595)
!6597 = !DILocation(line: 2998, column: 17, scope: !6595)
!6598 = !DILocation(line: 2998, column: 14, scope: !6595)
!6599 = !DILocation(line: 2998, column: 24, scope: !6595)
!6600 = !DILocation(line: 2998, column: 37, scope: !6601)
!6601 = !DILexicalBlockFile(scope: !6595, file: !1, discriminator: 1)
!6602 = !DILocation(line: 2998, column: 40, scope: !6601)
!6603 = !DILocation(line: 2998, column: 36, scope: !6601)
!6604 = !DILocation(line: 2998, column: 33, scope: !6601)
!6605 = !DILocation(line: 2998, column: 8, scope: !6601)
!6606 = !DILocalVariable(name: "headerlen", scope: !6607, file: !1, line: 2999, type: !158)
!6607 = distinct !DILexicalBlock(scope: !6595, file: !1, line: 2998, column: 44)
!6608 = !DILocation(line: 2999, column: 14, scope: !6607)
!6609 = !DILocation(line: 3012, column: 19, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3012, column: 10)
!6611 = !DILocation(line: 3012, column: 22, scope: !6610)
!6612 = !DILocation(line: 3012, column: 18, scope: !6610)
!6613 = !DILocation(line: 3012, column: 15, scope: !6610)
!6614 = !DILocation(line: 3012, column: 10, scope: !6607)
!6615 = !DILocation(line: 3013, column: 9, scope: !6610)
!6616 = !DILocation(line: 3013, column: 12, scope: !6610)
!6617 = !DILocation(line: 3013, column: 13, scope: !6610)
!6618 = !DILocation(line: 3014, column: 19, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3014, column: 10)
!6620 = !DILocation(line: 3014, column: 22, scope: !6619)
!6621 = !DILocation(line: 3014, column: 18, scope: !6619)
!6622 = !DILocation(line: 3014, column: 15, scope: !6619)
!6623 = !DILocation(line: 3014, column: 10, scope: !6607)
!6624 = !DILocation(line: 3015, column: 9, scope: !6619)
!6625 = !DILocation(line: 3015, column: 12, scope: !6619)
!6626 = !DILocation(line: 3015, column: 13, scope: !6619)
!6627 = !DILocation(line: 3018, column: 17, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3018, column: 10)
!6629 = !DILocation(line: 3018, column: 20, scope: !6628)
!6630 = !DILocation(line: 3018, column: 14, scope: !6628)
!6631 = !DILocation(line: 3018, column: 29, scope: !6628)
!6632 = !DILocation(line: 3018, column: 39, scope: !6633)
!6633 = !DILexicalBlockFile(scope: !6628, file: !1, discriminator: 1)
!6634 = !DILocation(line: 3018, column: 42, scope: !6633)
!6635 = !DILocation(line: 3018, column: 36, scope: !6633)
!6636 = !DILocation(line: 3018, column: 10, scope: !6633)
!6637 = !DILocation(line: 3020, column: 16, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6628, file: !1, line: 3018, column: 52)
!6639 = !DILocation(line: 3020, column: 19, scope: !6638)
!6640 = !DILocation(line: 3020, column: 9, scope: !6638)
!6641 = !DILocation(line: 3029, column: 11, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6638, file: !1, line: 3020, column: 29)
!6643 = !DILocation(line: 3029, column: 14, scope: !6642)
!6644 = !DILocation(line: 3029, column: 21, scope: !6642)
!6645 = !DILocation(line: 3030, column: 11, scope: !6642)
!6646 = !DILocation(line: 3030, column: 14, scope: !6642)
!6647 = !DILocation(line: 3030, column: 25, scope: !6642)
!6648 = !DILocation(line: 3033, column: 14, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6642, file: !1, line: 3033, column: 14)
!6650 = !DILocation(line: 3033, column: 17, scope: !6649)
!6651 = !DILocation(line: 3033, column: 24, scope: !6649)
!6652 = !DILocation(line: 3033, column: 14, scope: !6642)
!6653 = !DILocation(line: 3034, column: 13, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6649, file: !1, line: 3033, column: 44)
!6655 = !DILocation(line: 3034, column: 16, scope: !6654)
!6656 = !DILocation(line: 3034, column: 23, scope: !6654)
!6657 = !DILocation(line: 3035, column: 13, scope: !6654)
!6658 = !DILocation(line: 3035, column: 16, scope: !6654)
!6659 = !DILocation(line: 3035, column: 23, scope: !6654)
!6660 = !DILocation(line: 3036, column: 11, scope: !6654)
!6661 = !DILocation(line: 3037, column: 11, scope: !6642)
!6662 = !DILocation(line: 3040, column: 14, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6642, file: !1, line: 3040, column: 14)
!6664 = !DILocation(line: 3040, column: 17, scope: !6663)
!6665 = !DILocation(line: 3040, column: 25, scope: !6663)
!6666 = !DILocation(line: 3040, column: 14, scope: !6642)
!6667 = !DILocation(line: 3042, column: 19, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 3040, column: 47)
!6669 = !DILocation(line: 3042, column: 13, scope: !6668)
!6670 = !DILocation(line: 3043, column: 13, scope: !6668)
!6671 = !DILocation(line: 3043, column: 16, scope: !6668)
!6672 = !DILocation(line: 3043, column: 24, scope: !6668)
!6673 = !DILocation(line: 3046, column: 13, scope: !6668)
!6674 = !DILocation(line: 3046, column: 16, scope: !6668)
!6675 = !DILocation(line: 3046, column: 23, scope: !6668)
!6676 = !DILocation(line: 3047, column: 13, scope: !6668)
!6677 = !DILocation(line: 3047, column: 16, scope: !6668)
!6678 = !DILocation(line: 3047, column: 27, scope: !6668)
!6679 = !DILocation(line: 3051, column: 20, scope: !6668)
!6680 = !DILocation(line: 3052, column: 16, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6668, file: !1, line: 3052, column: 16)
!6682 = !DILocation(line: 3052, column: 16, scope: !6668)
!6683 = !DILocation(line: 3053, column: 22, scope: !6681)
!6684 = !DILocation(line: 3053, column: 15, scope: !6681)
!6685 = !DILocation(line: 3054, column: 14, scope: !6668)
!6686 = !DILocation(line: 3054, column: 20, scope: !6668)
!6687 = !DILocation(line: 3055, column: 11, scope: !6668)
!6688 = !DILocation(line: 3058, column: 13, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 3056, column: 16)
!6690 = !DILocation(line: 3058, column: 16, scope: !6689)
!6691 = !DILocation(line: 3058, column: 23, scope: !6689)
!6692 = !DILocation(line: 3060, column: 11, scope: !6642)
!6693 = !DILocation(line: 3064, column: 11, scope: !6642)
!6694 = !DILocation(line: 3064, column: 14, scope: !6642)
!6695 = !DILocation(line: 3064, column: 21, scope: !6642)
!6696 = !DILocation(line: 3065, column: 11, scope: !6642)
!6697 = !DILocation(line: 3065, column: 14, scope: !6642)
!6698 = !DILocation(line: 3065, column: 25, scope: !6642)
!6699 = !DILocation(line: 3066, column: 11, scope: !6642)
!6700 = !DILocation(line: 3068, column: 7, scope: !6638)
!6701 = !DILocation(line: 3070, column: 9, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6628, file: !1, line: 3069, column: 12)
!6703 = !DILocation(line: 3070, column: 12, scope: !6702)
!6704 = !DILocation(line: 3070, column: 19, scope: !6702)
!6705 = !DILocation(line: 3072, column: 13, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6702, file: !1, line: 3072, column: 12)
!6707 = !DILocation(line: 3072, column: 16, scope: !6706)
!6708 = !DILocation(line: 3072, column: 21, scope: !6706)
!6709 = !DILocation(line: 3072, column: 28, scope: !6706)
!6710 = !DILocation(line: 3072, column: 32, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !6706, file: !1, discriminator: 1)
!6712 = !DILocation(line: 3072, column: 35, scope: !6711)
!6713 = !DILocation(line: 3072, column: 41, scope: !6711)
!6714 = !DILocation(line: 3072, column: 45, scope: !6715)
!6715 = !DILexicalBlockFile(scope: !6706, file: !1, discriminator: 2)
!6716 = !DILocation(line: 3072, column: 51, scope: !6715)
!6717 = !DILocation(line: 3072, column: 56, scope: !6715)
!6718 = !DILocation(line: 3072, column: 62, scope: !6715)
!6719 = !DILocation(line: 3073, column: 13, scope: !6706)
!6720 = !DILocation(line: 3073, column: 19, scope: !6706)
!6721 = !DILocation(line: 3073, column: 31, scope: !6706)
!6722 = !DILocation(line: 3073, column: 38, scope: !6706)
!6723 = !DILocation(line: 3074, column: 14, scope: !6706)
!6724 = !DILocation(line: 3074, column: 20, scope: !6706)
!6725 = !DILocation(line: 3074, column: 29, scope: !6706)
!6726 = !DILocation(line: 3074, column: 38, scope: !6706)
!6727 = !DILocation(line: 3074, column: 56, scope: !6706)
!6728 = !DILocation(line: 3075, column: 12, scope: !6706)
!6729 = !DILocation(line: 3075, column: 18, scope: !6706)
!6730 = !DILocation(line: 3075, column: 22, scope: !6706)
!6731 = !DILocation(line: 3075, column: 30, scope: !6706)
!6732 = !DILocation(line: 3072, column: 12, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6702, file: !1, discriminator: 3)
!6734 = !DILocation(line: 3081, column: 17, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 3075, column: 47)
!6736 = !DILocation(line: 3081, column: 11, scope: !6735)
!6737 = !DILocation(line: 3083, column: 11, scope: !6735)
!6738 = !DILocation(line: 3084, column: 9, scope: !6735)
!6739 = !DILocation(line: 3104, column: 27, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3104, column: 10)
!6741 = !DILocation(line: 3104, column: 10, scope: !6740)
!6742 = !DILocation(line: 3104, column: 10, scope: !6607)
!6743 = !DILocation(line: 3105, column: 15, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !1, line: 3104, column: 34)
!6745 = !DILocation(line: 3106, column: 15, scope: !6744)
!6746 = !DILocation(line: 3106, column: 18, scope: !6744)
!6747 = !DILocation(line: 3105, column: 9, scope: !6744)
!6748 = !DILocation(line: 3107, column: 9, scope: !6744)
!6749 = !DILocation(line: 3112, column: 17, scope: !6607)
!6750 = !DILocation(line: 3113, column: 10, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3113, column: 10)
!6752 = !DILocation(line: 3113, column: 16, scope: !6751)
!6753 = !DILocation(line: 3113, column: 20, scope: !6751)
!6754 = !DILocation(line: 3113, column: 10, scope: !6607)
!6755 = !DILocation(line: 3114, column: 19, scope: !6751)
!6756 = !DILocation(line: 3114, column: 9, scope: !6751)
!6757 = !DILocation(line: 3116, column: 19, scope: !6607)
!6758 = !DILocation(line: 3116, column: 22, scope: !6607)
!6759 = !DILocation(line: 3116, column: 26, scope: !6607)
!6760 = !DILocation(line: 3116, column: 32, scope: !6607)
!6761 = !DILocation(line: 3116, column: 38, scope: !6607)
!6762 = !DILocation(line: 3116, column: 24, scope: !6607)
!6763 = !DILocation(line: 3116, column: 17, scope: !6607)
!6764 = !DILocation(line: 3118, column: 34, scope: !6607)
!6765 = !DILocation(line: 3118, column: 40, scope: !6607)
!6766 = !DILocation(line: 3119, column: 34, scope: !6607)
!6767 = !DILocation(line: 3119, column: 40, scope: !6607)
!6768 = !DILocation(line: 3119, column: 46, scope: !6607)
!6769 = !DILocation(line: 3120, column: 34, scope: !6607)
!6770 = !DILocation(line: 3118, column: 16, scope: !6607)
!6771 = !DILocation(line: 3118, column: 14, scope: !6607)
!6772 = !DILocation(line: 3121, column: 10, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3121, column: 10)
!6774 = !DILocation(line: 3121, column: 10, scope: !6607)
!6775 = !DILocation(line: 3122, column: 16, scope: !6773)
!6776 = !DILocation(line: 3122, column: 9, scope: !6773)
!6777 = !DILocation(line: 3124, column: 39, scope: !6607)
!6778 = !DILocation(line: 3124, column: 7, scope: !6607)
!6779 = !DILocation(line: 3124, column: 13, scope: !6607)
!6780 = !DILocation(line: 3124, column: 18, scope: !6607)
!6781 = !DILocation(line: 3124, column: 30, scope: !6607)
!6782 = !DILocation(line: 3125, column: 42, scope: !6607)
!6783 = !DILocation(line: 3125, column: 7, scope: !6607)
!6784 = !DILocation(line: 3125, column: 13, scope: !6607)
!6785 = !DILocation(line: 3125, column: 17, scope: !6607)
!6786 = !DILocation(line: 3125, column: 33, scope: !6607)
!6787 = !DILocation(line: 3128, column: 17, scope: !6607)
!6788 = !DILocation(line: 3128, column: 20, scope: !6607)
!6789 = !DILocation(line: 3128, column: 14, scope: !6607)
!6790 = !DILocation(line: 3128, column: 29, scope: !6607)
!6791 = !DILocation(line: 3128, column: 39, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6607, file: !1, discriminator: 1)
!6793 = !DILocation(line: 3128, column: 42, scope: !6792)
!6794 = !DILocation(line: 3128, column: 36, scope: !6792)
!6795 = !DILocation(line: 3128, column: 9, scope: !6792)
!6796 = !DILocation(line: 3128, column: 52, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !6607, file: !1, discriminator: 2)
!6798 = !DILocation(line: 3128, column: 58, scope: !6797)
!6799 = !DILocation(line: 3128, column: 62, scope: !6797)
!6800 = !DILocation(line: 3128, column: 9, scope: !6797)
!6801 = !DILocation(line: 3128, column: 9, scope: !6802)
!6802 = !DILexicalBlockFile(scope: !6607, file: !1, discriminator: 3)
!6803 = !DILocation(line: 3128, column: 9, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6607, file: !1, discriminator: 4)
!6805 = !DILocation(line: 3127, column: 7, scope: !6607)
!6806 = !DILocation(line: 3127, column: 13, scope: !6607)
!6807 = !DILocation(line: 3127, column: 17, scope: !6607)
!6808 = !DILocation(line: 3127, column: 35, scope: !6607)
!6809 = !DILocation(line: 3133, column: 35, scope: !6607)
!6810 = !DILocation(line: 3133, column: 16, scope: !6607)
!6811 = !DILocation(line: 3133, column: 14, scope: !6607)
!6812 = !DILocation(line: 3135, column: 10, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3135, column: 10)
!6814 = !DILocation(line: 3135, column: 10, scope: !6607)
!6815 = !DILocation(line: 3136, column: 16, scope: !6813)
!6816 = !DILocation(line: 3136, column: 9, scope: !6813)
!6817 = !DILocation(line: 3138, column: 10, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3138, column: 10)
!6819 = !DILocation(line: 3138, column: 13, scope: !6818)
!6820 = !DILocation(line: 3138, column: 22, scope: !6818)
!6821 = !DILocation(line: 3138, column: 10, scope: !6607)
!6822 = !DILocation(line: 3139, column: 14, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 3139, column: 12)
!6824 = distinct !DILexicalBlock(scope: !6818, file: !1, line: 3138, column: 30)
!6825 = !DILocation(line: 3139, column: 20, scope: !6823)
!6826 = !DILocation(line: 3139, column: 25, scope: !6823)
!6827 = !DILocation(line: 3139, column: 34, scope: !6823)
!6828 = !DILocation(line: 3139, column: 38, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6823, file: !1, discriminator: 1)
!6830 = !DILocation(line: 3139, column: 44, scope: !6829)
!6831 = !DILocation(line: 3139, column: 49, scope: !6829)
!6832 = !DILocation(line: 3139, column: 55, scope: !6829)
!6833 = !DILocation(line: 3140, column: 13, scope: !6823)
!6834 = !DILocation(line: 3140, column: 19, scope: !6823)
!6835 = !DILocation(line: 3140, column: 24, scope: !6823)
!6836 = !DILocation(line: 3139, column: 12, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6824, file: !1, discriminator: 2)
!6838 = !DILocation(line: 3154, column: 18, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6823, file: !1, line: 3140, column: 41)
!6840 = !DILocation(line: 3154, column: 24, scope: !6839)
!6841 = !DILocation(line: 3154, column: 28, scope: !6839)
!6842 = !DILocation(line: 3154, column: 11, scope: !6839)
!6843 = !DILocation(line: 3162, column: 17, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !1, line: 3162, column: 16)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !1, line: 3154, column: 37)
!6846 = !DILocation(line: 3162, column: 20, scope: !6844)
!6847 = !DILocation(line: 3162, column: 16, scope: !6845)
!6848 = !DILocation(line: 3163, column: 18, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !1, line: 3163, column: 18)
!6850 = distinct !DILexicalBlock(scope: !6844, file: !1, line: 3162, column: 33)
!6851 = !DILocation(line: 3163, column: 24, scope: !6849)
!6852 = !DILocation(line: 3163, column: 28, scope: !6849)
!6853 = !DILocation(line: 3163, column: 18, scope: !6850)
!6854 = !DILocation(line: 3164, column: 23, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 3163, column: 56)
!6856 = !DILocation(line: 3164, column: 17, scope: !6855)
!6857 = !DILocation(line: 3165, column: 20, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !1, line: 3165, column: 20)
!6859 = !DILocation(line: 3165, column: 23, scope: !6858)
!6860 = !DILocation(line: 3165, column: 30, scope: !6858)
!6861 = !DILocation(line: 3165, column: 20, scope: !6855)
!6862 = !DILocation(line: 3166, column: 19, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !1, line: 3165, column: 50)
!6864 = !DILocation(line: 3166, column: 22, scope: !6863)
!6865 = !DILocation(line: 3166, column: 29, scope: !6863)
!6866 = !DILocation(line: 3167, column: 19, scope: !6863)
!6867 = !DILocation(line: 3167, column: 22, scope: !6863)
!6868 = !DILocation(line: 3167, column: 29, scope: !6863)
!6869 = !DILocation(line: 3168, column: 17, scope: !6863)
!6870 = !DILocation(line: 3169, column: 15, scope: !6855)
!6871 = !DILocation(line: 3171, column: 23, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 3170, column: 20)
!6873 = !DILocation(line: 3171, column: 17, scope: !6872)
!6874 = !DILocation(line: 3172, column: 17, scope: !6872)
!6875 = !DILocation(line: 3173, column: 17, scope: !6872)
!6876 = !DILocation(line: 3173, column: 20, scope: !6872)
!6877 = !DILocation(line: 3173, column: 32, scope: !6872)
!6878 = !DILocation(line: 3174, column: 17, scope: !6872)
!6879 = !DILocation(line: 3174, column: 20, scope: !6872)
!6880 = !DILocation(line: 3174, column: 27, scope: !6872)
!6881 = !DILocation(line: 3175, column: 20, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6872, file: !1, line: 3175, column: 20)
!6883 = !DILocation(line: 3175, column: 26, scope: !6882)
!6884 = !DILocation(line: 3175, column: 32, scope: !6882)
!6885 = !DILocation(line: 3175, column: 20, scope: !6872)
!6886 = !DILocation(line: 3176, column: 19, scope: !6882)
!6887 = !DILocation(line: 3176, column: 22, scope: !6882)
!6888 = !DILocation(line: 3176, column: 29, scope: !6882)
!6889 = !DILocation(line: 3178, column: 13, scope: !6850)
!6890 = !DILocation(line: 3179, column: 13, scope: !6845)
!6891 = !DILocation(line: 3182, column: 13, scope: !6845)
!6892 = !DILocation(line: 3184, column: 9, scope: !6839)
!6893 = !DILocation(line: 3186, column: 12, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 3186, column: 12)
!6895 = !DILocation(line: 3186, column: 18, scope: !6894)
!6896 = !DILocation(line: 3186, column: 23, scope: !6894)
!6897 = !DILocation(line: 3186, column: 12, scope: !6824)
!6898 = !DILocation(line: 3189, column: 17, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !1, line: 3186, column: 40)
!6900 = !DILocation(line: 3189, column: 11, scope: !6899)
!6901 = !DILocation(line: 3190, column: 11, scope: !6899)
!6902 = !DILocation(line: 3190, column: 14, scope: !6899)
!6903 = !DILocation(line: 3190, column: 21, scope: !6899)
!6904 = !DILocation(line: 3191, column: 9, scope: !6899)
!6905 = !DILocation(line: 3192, column: 7, scope: !6824)
!6906 = !DILocation(line: 3194, column: 11, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6607, file: !1, line: 3194, column: 10)
!6908 = !DILocation(line: 3194, column: 14, scope: !6907)
!6909 = !DILocation(line: 3194, column: 10, scope: !6607)
!6910 = !DILocation(line: 3201, column: 12, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 3201, column: 12)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !1, line: 3194, column: 22)
!6913 = !DILocation(line: 3201, column: 18, scope: !6911)
!6914 = !DILocation(line: 3201, column: 22, scope: !6911)
!6915 = !DILocation(line: 3201, column: 12, scope: !6912)
!6916 = !DILocation(line: 3202, column: 12, scope: !6911)
!6917 = !DILocation(line: 3202, column: 25, scope: !6911)
!6918 = !DILocation(line: 3202, column: 11, scope: !6911)
!6919 = !DILocation(line: 3227, column: 14, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !1, line: 3227, column: 14)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 3213, column: 14)
!6922 = !DILocation(line: 3227, column: 17, scope: !6920)
!6923 = !DILocation(line: 3227, column: 14, scope: !6921)
!6924 = !DILocation(line: 3228, column: 30, scope: !6920)
!6925 = !DILocation(line: 3228, column: 33, scope: !6920)
!6926 = !DILocation(line: 3228, column: 38, scope: !6920)
!6927 = !DILocation(line: 3228, column: 13, scope: !6920)
!6928 = !DILocation(line: 3228, column: 16, scope: !6920)
!6929 = !DILocation(line: 3228, column: 28, scope: !6920)
!6930 = !DILocation(line: 3230, column: 18, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 3230, column: 12)
!6932 = !DILocation(line: 3230, column: 21, scope: !6931)
!6933 = !DILocation(line: 3230, column: 15, scope: !6931)
!6934 = !DILocation(line: 3230, column: 12, scope: !6912)
!6935 = !DILocation(line: 3235, column: 36, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6931, file: !1, line: 3230, column: 27)
!6937 = !DILocation(line: 3235, column: 42, scope: !6936)
!6938 = !DILocation(line: 3235, column: 45, scope: !6936)
!6939 = !DILocation(line: 3235, column: 11, scope: !6936)
!6940 = !DILocation(line: 3236, column: 28, scope: !6936)
!6941 = !DILocation(line: 3236, column: 31, scope: !6936)
!6942 = !DILocation(line: 3236, column: 11, scope: !6936)
!6943 = !DILocation(line: 3236, column: 14, scope: !6936)
!6944 = !DILocation(line: 3236, column: 26, scope: !6936)
!6945 = !DILocation(line: 3237, column: 9, scope: !6936)
!6946 = !DILocation(line: 3244, column: 17, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 3244, column: 12)
!6948 = !DILocation(line: 3244, column: 20, scope: !6947)
!6949 = !DILocation(line: 3244, column: 14, scope: !6947)
!6950 = !DILocation(line: 3244, column: 12, scope: !6912)
!6951 = !DILocation(line: 3250, column: 12, scope: !6947)
!6952 = !DILocation(line: 3250, column: 25, scope: !6947)
!6953 = !DILocation(line: 3250, column: 11, scope: !6947)
!6954 = !DILocation(line: 3252, column: 13, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 3252, column: 12)
!6956 = !DILocation(line: 3252, column: 12, scope: !6955)
!6957 = !DILocation(line: 3252, column: 12, scope: !6912)
!6958 = !DILocation(line: 3254, column: 11, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !1, line: 3252, column: 27)
!6960 = !DILocation(line: 3254, column: 14, scope: !6959)
!6961 = !DILocation(line: 3254, column: 21, scope: !6959)
!6962 = !DILocation(line: 3255, column: 9, scope: !6959)
!6963 = !DILocation(line: 3257, column: 12, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 3257, column: 12)
!6965 = !DILocation(line: 3257, column: 18, scope: !6964)
!6966 = !DILocation(line: 3257, column: 22, scope: !6964)
!6967 = !DILocation(line: 3257, column: 12, scope: !6912)
!6968 = !DILocation(line: 3258, column: 22, scope: !6964)
!6969 = !DILocation(line: 3259, column: 22, scope: !6964)
!6970 = !DILocation(line: 3259, column: 25, scope: !6964)
!6971 = !DILocation(line: 3259, column: 36, scope: !6964)
!6972 = !DILocation(line: 3259, column: 47, scope: !6964)
!6973 = !DILocation(line: 3258, column: 11, scope: !6964)
!6974 = !DILocation(line: 3260, column: 9, scope: !6912)
!6975 = !DILocation(line: 3265, column: 18, scope: !6607)
!6976 = !DILocation(line: 3265, column: 24, scope: !6607)
!6977 = !DILocation(line: 3265, column: 30, scope: !6607)
!6978 = !DILocation(line: 3265, column: 7, scope: !6607)
!6979 = !DILocation(line: 3265, column: 10, scope: !6607)
!6980 = !DILocation(line: 3265, column: 16, scope: !6607)
!6981 = !DILocation(line: 3266, column: 7, scope: !6607)
!6982 = !DILocation(line: 3266, column: 10, scope: !6607)
!6983 = !DILocation(line: 3266, column: 18, scope: !6607)
!6984 = !DILocation(line: 3267, column: 7, scope: !6607)
!6985 = !DILocation(line: 3274, column: 9, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3274, column: 8)
!6987 = !DILocation(line: 3274, column: 12, scope: !6986)
!6988 = !DILocation(line: 3274, column: 22, scope: !6986)
!6989 = !DILocation(line: 3274, column: 8, scope: !6450)
!6990 = !DILocalVariable(name: "httpversion_major", scope: !6991, file: !1, line: 3277, type: !177)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !1, line: 3274, column: 26)
!6992 = !DILocation(line: 3277, column: 11, scope: !6991)
!6993 = !DILocalVariable(name: "rtspversion_major", scope: !6991, file: !1, line: 3278, type: !177)
!6994 = !DILocation(line: 3278, column: 11, scope: !6991)
!6995 = !DILocalVariable(name: "nc", scope: !6991, file: !1, line: 3279, type: !177)
!6996 = !DILocation(line: 3279, column: 11, scope: !6991)
!6997 = !DILocation(line: 3302, column: 10, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6991, file: !1, line: 3302, column: 10)
!6999 = !DILocation(line: 3302, column: 16, scope: !6998)
!7000 = !DILocation(line: 3302, column: 25, scope: !6998)
!7001 = !DILocation(line: 3302, column: 34, scope: !6998)
!7002 = !DILocation(line: 3302, column: 10, scope: !6991)
!7003 = !DILocation(line: 3310, column: 21, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 3302, column: 55)
!7005 = !DILocation(line: 3313, column: 22, scope: !7004)
!7006 = !DILocation(line: 3313, column: 28, scope: !7004)
!7007 = !DILocation(line: 3314, column: 22, scope: !7004)
!7008 = !DILocation(line: 3314, column: 25, scope: !7004)
!7009 = !DILocation(line: 3310, column: 14, scope: !7004)
!7010 = !DILocation(line: 3310, column: 12, scope: !7004)
!7011 = !DILocation(line: 3316, column: 12, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7004, file: !1, line: 3316, column: 12)
!7013 = !DILocation(line: 3316, column: 15, scope: !7012)
!7014 = !DILocation(line: 3316, column: 20, scope: !7012)
!7015 = !DILocation(line: 3316, column: 23, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !7012, file: !1, discriminator: 1)
!7017 = !DILocation(line: 3316, column: 41, scope: !7016)
!7018 = !DILocation(line: 3316, column: 46, scope: !7016)
!7019 = !DILocation(line: 3317, column: 24, scope: !7012)
!7020 = !DILocation(line: 3317, column: 48, scope: !7012)
!7021 = !DILocation(line: 3317, column: 51, scope: !7012)
!7022 = !DILocation(line: 3317, column: 17, scope: !7012)
!7023 = !DILocation(line: 3317, column: 14, scope: !7012)
!7024 = !DILocation(line: 3316, column: 12, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7004, file: !1, discriminator: 2)
!7026 = !DILocation(line: 3318, column: 11, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 3317, column: 62)
!7028 = !DILocation(line: 3318, column: 17, scope: !7027)
!7029 = !DILocation(line: 3318, column: 29, scope: !7027)
!7030 = !DILocation(line: 3319, column: 14, scope: !7027)
!7031 = !DILocation(line: 3320, column: 9, scope: !7027)
!7032 = !DILocation(line: 3322, column: 12, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7004, file: !1, line: 3322, column: 12)
!7034 = !DILocation(line: 3322, column: 14, scope: !7033)
!7035 = !DILocation(line: 3322, column: 12, scope: !7004)
!7036 = !DILocation(line: 3323, column: 37, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !1, line: 3322, column: 19)
!7038 = !DILocation(line: 3323, column: 35, scope: !7037)
!7039 = !DILocation(line: 3323, column: 11, scope: !7037)
!7040 = !DILocation(line: 3323, column: 17, scope: !7037)
!7041 = !DILocation(line: 3323, column: 29, scope: !7037)
!7042 = !DILocation(line: 3325, column: 14, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7037, file: !1, line: 3325, column: 14)
!7044 = !DILocation(line: 3325, column: 17, scope: !7043)
!7045 = !DILocation(line: 3325, column: 25, scope: !7043)
!7046 = !DILocation(line: 3325, column: 14, scope: !7037)
!7047 = !DILocation(line: 3327, column: 16, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !1, line: 3327, column: 16)
!7049 = distinct !DILexicalBlock(scope: !7043, file: !1, line: 3325, column: 46)
!7050 = !DILocation(line: 3327, column: 22, scope: !7048)
!7051 = !DILocation(line: 3327, column: 34, scope: !7048)
!7052 = !DILocation(line: 3327, column: 16, scope: !7049)
!7053 = !DILocation(line: 3328, column: 21, scope: !7048)
!7054 = !DILocation(line: 3328, column: 15, scope: !7048)
!7055 = !DILocation(line: 3329, column: 11, scope: !7049)
!7056 = !DILocation(line: 3330, column: 9, scope: !7037)
!7057 = !DILocation(line: 3335, column: 21, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7033, file: !1, line: 3331, column: 14)
!7059 = !DILocation(line: 3335, column: 44, scope: !7058)
!7060 = !DILocation(line: 3335, column: 47, scope: !7058)
!7061 = !DILocation(line: 3335, column: 14, scope: !7058)
!7062 = !DILocation(line: 3335, column: 13, scope: !7058)
!7063 = !DILocation(line: 3336, column: 11, scope: !7058)
!7064 = !DILocation(line: 3336, column: 17, scope: !7058)
!7065 = !DILocation(line: 3336, column: 29, scope: !7058)
!7066 = !DILocation(line: 3341, column: 15, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7058, file: !1, line: 3341, column: 14)
!7068 = !DILocation(line: 3341, column: 14, scope: !7058)
!7069 = !DILocation(line: 3342, column: 32, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !1, line: 3342, column: 16)
!7071 = distinct !DILexicalBlock(scope: !7067, file: !1, line: 3341, column: 19)
!7072 = !DILocation(line: 3342, column: 38, scope: !7070)
!7073 = !DILocation(line: 3342, column: 41, scope: !7070)
!7074 = !DILocation(line: 3342, column: 16, scope: !7070)
!7075 = !DILocation(line: 3342, column: 16, scope: !7071)
!7076 = !DILocation(line: 3343, column: 18, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7070, file: !1, line: 3342, column: 45)
!7078 = !DILocation(line: 3344, column: 15, scope: !7077)
!7079 = !DILocation(line: 3344, column: 18, scope: !7077)
!7080 = !DILocation(line: 3344, column: 27, scope: !7077)
!7081 = !DILocation(line: 3345, column: 15, scope: !7077)
!7082 = !DILocation(line: 3345, column: 21, scope: !7077)
!7083 = !DILocation(line: 3345, column: 33, scope: !7077)
!7084 = !DILocation(line: 3346, column: 13, scope: !7077)
!7085 = !DILocation(line: 3347, column: 11, scope: !7071)
!7086 = !DILocation(line: 3349, column: 7, scope: !7004)
!7087 = !DILocation(line: 3350, column: 15, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 3350, column: 15)
!7089 = !DILocation(line: 3350, column: 21, scope: !7088)
!7090 = !DILocation(line: 3350, column: 30, scope: !7088)
!7091 = !DILocation(line: 3350, column: 39, scope: !7088)
!7092 = !DILocation(line: 3350, column: 15, scope: !6998)
!7093 = !DILocation(line: 3351, column: 21, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7088, file: !1, line: 3350, column: 57)
!7095 = !DILocation(line: 3354, column: 22, scope: !7094)
!7096 = !DILocation(line: 3354, column: 28, scope: !7094)
!7097 = !DILocation(line: 3355, column: 22, scope: !7094)
!7098 = !DILocation(line: 3355, column: 25, scope: !7094)
!7099 = !DILocation(line: 3351, column: 14, scope: !7094)
!7100 = !DILocation(line: 3351, column: 12, scope: !7094)
!7101 = !DILocation(line: 3356, column: 12, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7094, file: !1, line: 3356, column: 12)
!7103 = !DILocation(line: 3356, column: 14, scope: !7102)
!7104 = !DILocation(line: 3356, column: 12, scope: !7094)
!7105 = !DILocation(line: 3357, column: 37, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7102, file: !1, line: 3356, column: 19)
!7107 = !DILocation(line: 3357, column: 35, scope: !7106)
!7108 = !DILocation(line: 3357, column: 11, scope: !7106)
!7109 = !DILocation(line: 3357, column: 17, scope: !7106)
!7110 = !DILocation(line: 3357, column: 29, scope: !7106)
!7111 = !DILocation(line: 3358, column: 11, scope: !7106)
!7112 = !DILocation(line: 3358, column: 17, scope: !7106)
!7113 = !DILocation(line: 3358, column: 29, scope: !7106)
!7114 = !DILocation(line: 3359, column: 9, scope: !7106)
!7115 = !DILocation(line: 3362, column: 14, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7102, file: !1, line: 3360, column: 14)
!7117 = !DILocation(line: 3364, column: 7, scope: !7094)
!7118 = !DILocation(line: 3366, column: 10, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !6991, file: !1, line: 3366, column: 10)
!7120 = !DILocation(line: 3366, column: 10, scope: !6991)
!7121 = !DILocation(line: 3367, column: 31, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 3366, column: 14)
!7123 = !DILocation(line: 3367, column: 34, scope: !7122)
!7124 = !DILocation(line: 3367, column: 9, scope: !7122)
!7125 = !DILocation(line: 3367, column: 15, scope: !7122)
!7126 = !DILocation(line: 3367, column: 20, scope: !7122)
!7127 = !DILocation(line: 3367, column: 29, scope: !7122)
!7128 = !DILocation(line: 3369, column: 34, scope: !7122)
!7129 = !DILocation(line: 3369, column: 40, scope: !7122)
!7130 = !DILocation(line: 3369, column: 9, scope: !7122)
!7131 = !DILocation(line: 3369, column: 15, scope: !7122)
!7132 = !DILocation(line: 3369, column: 20, scope: !7122)
!7133 = !DILocation(line: 3369, column: 32, scope: !7122)
!7134 = !DILocation(line: 3370, column: 13, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3370, column: 12)
!7136 = !DILocation(line: 3370, column: 19, scope: !7135)
!7137 = !DILocation(line: 3370, column: 25, scope: !7135)
!7138 = !DILocation(line: 3370, column: 37, scope: !7135)
!7139 = !DILocation(line: 3371, column: 12, scope: !7135)
!7140 = !DILocation(line: 3371, column: 18, scope: !7135)
!7141 = !DILocation(line: 3371, column: 24, scope: !7135)
!7142 = !DILocation(line: 3371, column: 38, scope: !7135)
!7143 = !DILocation(line: 3371, column: 44, scope: !7135)
!7144 = !DILocation(line: 3371, column: 36, scope: !7135)
!7145 = !DILocation(line: 3370, column: 12, scope: !7146)
!7146 = !DILexicalBlockFile(scope: !7122, file: !1, discriminator: 1)
!7147 = !DILocation(line: 3373, column: 37, scope: !7135)
!7148 = !DILocation(line: 3373, column: 43, scope: !7135)
!7149 = !DILocation(line: 3373, column: 11, scope: !7135)
!7150 = !DILocation(line: 3373, column: 17, scope: !7135)
!7151 = !DILocation(line: 3373, column: 23, scope: !7135)
!7152 = !DILocation(line: 3373, column: 35, scope: !7135)
!7153 = !DILocation(line: 3383, column: 12, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3383, column: 12)
!7155 = !DILocation(line: 3383, column: 18, scope: !7154)
!7156 = !DILocation(line: 3383, column: 22, scope: !7154)
!7157 = !DILocation(line: 3383, column: 41, scope: !7154)
!7158 = !DILocation(line: 3383, column: 45, scope: !7159)
!7159 = !DILexicalBlockFile(scope: !7154, file: !1, discriminator: 1)
!7160 = !DILocation(line: 3383, column: 48, scope: !7159)
!7161 = !DILocation(line: 3383, column: 57, scope: !7159)
!7162 = !DILocation(line: 3383, column: 65, scope: !7159)
!7163 = !DILocation(line: 3384, column: 14, scope: !7154)
!7164 = !DILocation(line: 3384, column: 17, scope: !7154)
!7165 = !DILocation(line: 3384, column: 26, scope: !7154)
!7166 = !DILocation(line: 3384, column: 34, scope: !7154)
!7167 = !DILocation(line: 3384, column: 38, scope: !7159)
!7168 = !DILocation(line: 3384, column: 44, scope: !7159)
!7169 = !DILocation(line: 3384, column: 49, scope: !7159)
!7170 = !DILocation(line: 3384, column: 62, scope: !7159)
!7171 = !DILocation(line: 3385, column: 14, scope: !7154)
!7172 = !DILocation(line: 3385, column: 17, scope: !7154)
!7173 = !DILocation(line: 3385, column: 26, scope: !7154)
!7174 = !DILocation(line: 3385, column: 34, scope: !7154)
!7175 = !DILocation(line: 3385, column: 38, scope: !7159)
!7176 = !DILocation(line: 3385, column: 44, scope: !7159)
!7177 = !DILocation(line: 3385, column: 49, scope: !7159)
!7178 = !DILocation(line: 3383, column: 12, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !7122, file: !1, discriminator: 2)
!7180 = !DILocation(line: 3387, column: 14, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !1, line: 3387, column: 14)
!7182 = distinct !DILexicalBlock(scope: !7154, file: !1, line: 3385, column: 70)
!7183 = !DILocation(line: 3387, column: 20, scope: !7181)
!7184 = !DILocation(line: 3387, column: 26, scope: !7181)
!7185 = !DILocation(line: 3387, column: 38, scope: !7181)
!7186 = !DILocation(line: 3388, column: 15, scope: !7181)
!7187 = !DILocation(line: 3388, column: 21, scope: !7181)
!7188 = !DILocation(line: 3388, column: 25, scope: !7181)
!7189 = !DILocation(line: 3388, column: 32, scope: !7181)
!7190 = !DILocation(line: 3388, column: 47, scope: !7181)
!7191 = !DILocation(line: 3389, column: 15, scope: !7181)
!7192 = !DILocation(line: 3389, column: 18, scope: !7181)
!7193 = !DILocation(line: 3389, column: 27, scope: !7181)
!7194 = !DILocation(line: 3387, column: 14, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7182, file: !1, discriminator: 1)
!7196 = !DILocation(line: 3392, column: 11, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7181, file: !1, line: 3389, column: 36)
!7198 = !DILocation(line: 3395, column: 30, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7181, file: !1, line: 3393, column: 16)
!7200 = !DILocation(line: 3395, column: 13, scope: !7199)
!7201 = !DILocation(line: 3396, column: 13, scope: !7199)
!7202 = !DILocation(line: 3398, column: 9, scope: !7182)
!7203 = !DILocation(line: 3400, column: 12, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3400, column: 12)
!7205 = !DILocation(line: 3400, column: 18, scope: !7204)
!7206 = !DILocation(line: 3400, column: 30, scope: !7204)
!7207 = !DILocation(line: 3400, column: 12, scope: !7122)
!7208 = !DILocation(line: 3404, column: 17, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7204, file: !1, line: 3400, column: 37)
!7210 = !DILocation(line: 3404, column: 11, scope: !7209)
!7211 = !DILocation(line: 3405, column: 11, scope: !7209)
!7212 = !DILocation(line: 3406, column: 9, scope: !7209)
!7213 = !DILocation(line: 3407, column: 17, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7204, file: !1, line: 3407, column: 17)
!7215 = !DILocation(line: 3407, column: 23, scope: !7214)
!7216 = !DILocation(line: 3407, column: 35, scope: !7214)
!7217 = !DILocation(line: 3407, column: 41, scope: !7214)
!7218 = !DILocation(line: 3408, column: 18, scope: !7214)
!7219 = !DILocation(line: 3408, column: 21, scope: !7214)
!7220 = !DILocation(line: 3408, column: 29, scope: !7214)
!7221 = !DILocation(line: 3408, column: 50, scope: !7214)
!7222 = !DILocation(line: 3408, column: 53, scope: !7223)
!7223 = !DILexicalBlockFile(scope: !7214, file: !1, discriminator: 1)
!7224 = !DILocation(line: 3408, column: 56, scope: !7223)
!7225 = !DILocation(line: 3408, column: 65, scope: !7223)
!7226 = !DILocation(line: 3407, column: 17, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7204, file: !1, discriminator: 1)
!7228 = !DILocation(line: 3409, column: 11, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7214, file: !1, line: 3408, column: 74)
!7230 = !DILocation(line: 3409, column: 11, scope: !7231)
!7231 = !DILexicalBlockFile(scope: !7232, file: !1, discriminator: 1)
!7232 = distinct !DILexicalBlock(scope: !7229, file: !1, line: 3409, column: 11)
!7233 = !DILocation(line: 3413, column: 11, scope: !7229)
!7234 = !DILocation(line: 3413, column: 17, scope: !7229)
!7235 = !DILocation(line: 3413, column: 25, scope: !7229)
!7236 = !DILocation(line: 3413, column: 34, scope: !7229)
!7237 = !DILocation(line: 3414, column: 9, scope: !7229)
!7238 = !DILocation(line: 3415, column: 17, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7214, file: !1, line: 3415, column: 17)
!7240 = !DILocation(line: 3415, column: 23, scope: !7239)
!7241 = !DILocation(line: 3415, column: 35, scope: !7239)
!7242 = !DILocation(line: 3415, column: 41, scope: !7239)
!7243 = !DILocation(line: 3416, column: 18, scope: !7239)
!7244 = !DILocation(line: 3416, column: 24, scope: !7239)
!7245 = !DILocation(line: 3416, column: 29, scope: !7239)
!7246 = !DILocation(line: 3415, column: 17, scope: !7223)
!7247 = !DILocation(line: 3419, column: 11, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 3416, column: 36)
!7249 = !DILocation(line: 3419, column: 11, scope: !7250)
!7250 = !DILexicalBlockFile(scope: !7251, file: !1, discriminator: 1)
!7251 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 3419, column: 11)
!7252 = !DILocation(line: 3423, column: 14, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 3423, column: 14)
!7254 = !DILocation(line: 3423, column: 20, scope: !7253)
!7255 = !DILocation(line: 3423, column: 14, scope: !7248)
!7256 = !DILocation(line: 3424, column: 48, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !1, line: 3424, column: 16)
!7258 = distinct !DILexicalBlock(scope: !7253, file: !1, line: 3423, column: 28)
!7259 = !DILocation(line: 3424, column: 54, scope: !7257)
!7260 = !DILocation(line: 3424, column: 17, scope: !7257)
!7261 = !DILocation(line: 3424, column: 16, scope: !7258)
!7262 = !DILocation(line: 3425, column: 15, scope: !7257)
!7263 = !DILocation(line: 3425, column: 21, scope: !7257)
!7264 = !DILocation(line: 3425, column: 29, scope: !7257)
!7265 = !DILocation(line: 3425, column: 38, scope: !7257)
!7266 = !DILocation(line: 3426, column: 11, scope: !7258)
!7267 = !DILocation(line: 3427, column: 9, scope: !7248)
!7268 = !DILocation(line: 3429, column: 16, scope: !7122)
!7269 = !DILocation(line: 3429, column: 19, scope: !7122)
!7270 = !DILocation(line: 3429, column: 9, scope: !7122)
!7271 = !DILocation(line: 3442, column: 14, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !1, line: 3442, column: 14)
!7273 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3429, column: 29)
!7274 = !DILocation(line: 3442, column: 20, scope: !7272)
!7275 = !DILocation(line: 3442, column: 24, scope: !7272)
!7276 = !DILocation(line: 3442, column: 14, scope: !7273)
!7277 = !DILocation(line: 3443, column: 13, scope: !7272)
!7278 = !DILocation(line: 3443, column: 19, scope: !7272)
!7279 = !DILocation(line: 3443, column: 24, scope: !7272)
!7280 = !DILocation(line: 3443, column: 33, scope: !7272)
!7281 = !DILocation(line: 3444, column: 11, scope: !7273)
!7282 = !DILocation(line: 3444, column: 14, scope: !7273)
!7283 = !DILocation(line: 3444, column: 18, scope: !7273)
!7284 = !DILocation(line: 3445, column: 11, scope: !7273)
!7285 = !DILocation(line: 3445, column: 14, scope: !7273)
!7286 = !DILocation(line: 3445, column: 25, scope: !7273)
!7287 = !DILocation(line: 3446, column: 11, scope: !7273)
!7288 = !DILocation(line: 3446, column: 14, scope: !7273)
!7289 = !DILocation(line: 3446, column: 23, scope: !7273)
!7290 = !DILocation(line: 3447, column: 11, scope: !7273)
!7291 = !DILocation(line: 3450, column: 11, scope: !7273)
!7292 = !DILocation(line: 3452, column: 7, scope: !7122)
!7293 = !DILocation(line: 3454, column: 9, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 3453, column: 12)
!7295 = !DILocation(line: 3454, column: 12, scope: !7294)
!7296 = !DILocation(line: 3454, column: 19, scope: !7294)
!7297 = !DILocation(line: 3455, column: 9, scope: !7294)
!7298 = !DILocation(line: 3457, column: 5, scope: !6991)
!7299 = !DILocation(line: 3459, column: 14, scope: !6450)
!7300 = !DILocation(line: 3459, column: 12, scope: !6450)
!7301 = !DILocation(line: 3461, column: 8, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3461, column: 8)
!7303 = !DILocation(line: 3461, column: 8, scope: !6450)
!7304 = !DILocation(line: 3462, column: 14, scope: !7302)
!7305 = !DILocation(line: 3462, column: 7, scope: !7302)
!7306 = !DILocation(line: 3465, column: 9, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3465, column: 8)
!7308 = !DILocation(line: 3465, column: 12, scope: !7307)
!7309 = !DILocation(line: 3465, column: 21, scope: !7307)
!7310 = !DILocation(line: 3465, column: 25, scope: !7311)
!7311 = !DILexicalBlockFile(scope: !7307, file: !1, discriminator: 1)
!7312 = !DILocation(line: 3465, column: 31, scope: !7311)
!7313 = !DILocation(line: 3465, column: 35, scope: !7311)
!7314 = !DILocation(line: 3465, column: 44, scope: !7311)
!7315 = !DILocation(line: 3466, column: 8, scope: !7307)
!7316 = !DILocation(line: 3465, column: 8, scope: !7317)
!7317 = !DILexicalBlockFile(scope: !6450, file: !1, discriminator: 2)
!7318 = !DILocalVariable(name: "contentlength", scope: !7319, file: !1, line: 3467, type: !204)
!7319 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 3466, column: 46)
!7320 = !DILocation(line: 3467, column: 18, scope: !7319)
!7321 = !DILocation(line: 3467, column: 50, scope: !7319)
!7322 = !DILocation(line: 3467, column: 53, scope: !7319)
!7323 = !DILocation(line: 3467, column: 54, scope: !7319)
!7324 = !DILocation(line: 3467, column: 34, scope: !7319)
!7325 = !DILocation(line: 3468, column: 10, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7319, file: !1, line: 3468, column: 10)
!7327 = !DILocation(line: 3468, column: 16, scope: !7326)
!7328 = !DILocation(line: 3468, column: 20, scope: !7326)
!7329 = !DILocation(line: 3468, column: 33, scope: !7326)
!7330 = !DILocation(line: 3469, column: 10, scope: !7326)
!7331 = !DILocation(line: 3469, column: 26, scope: !7326)
!7332 = !DILocation(line: 3469, column: 32, scope: !7326)
!7333 = !DILocation(line: 3469, column: 36, scope: !7326)
!7334 = !DILocation(line: 3469, column: 24, scope: !7326)
!7335 = !DILocation(line: 3468, column: 10, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !7319, file: !1, discriminator: 1)
!7337 = !DILocation(line: 3470, column: 15, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 3469, column: 50)
!7339 = !DILocation(line: 3470, column: 9, scope: !7338)
!7340 = !DILocation(line: 3471, column: 9, scope: !7338)
!7341 = !DILocation(line: 3473, column: 10, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7319, file: !1, line: 3473, column: 10)
!7343 = !DILocation(line: 3473, column: 24, scope: !7342)
!7344 = !DILocation(line: 3473, column: 10, scope: !7319)
!7345 = !DILocation(line: 3474, column: 19, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 3473, column: 30)
!7347 = !DILocation(line: 3474, column: 9, scope: !7346)
!7348 = !DILocation(line: 3474, column: 12, scope: !7346)
!7349 = !DILocation(line: 3474, column: 17, scope: !7346)
!7350 = !DILocation(line: 3475, column: 26, scope: !7346)
!7351 = !DILocation(line: 3475, column: 29, scope: !7346)
!7352 = !DILocation(line: 3475, column: 9, scope: !7346)
!7353 = !DILocation(line: 3475, column: 12, scope: !7346)
!7354 = !DILocation(line: 3475, column: 24, scope: !7346)
!7355 = !DILocation(line: 3479, column: 34, scope: !7346)
!7356 = !DILocation(line: 3479, column: 40, scope: !7346)
!7357 = !DILocation(line: 3479, column: 43, scope: !7346)
!7358 = !DILocation(line: 3479, column: 9, scope: !7346)
!7359 = !DILocation(line: 3480, column: 7, scope: !7346)
!7360 = !DILocation(line: 3485, column: 9, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 3481, column: 12)
!7362 = !DILocation(line: 3486, column: 15, scope: !7361)
!7363 = !DILocation(line: 3487, column: 45, scope: !7361)
!7364 = !DILocation(line: 3486, column: 9, scope: !7361)
!7365 = !DILocation(line: 3489, column: 5, scope: !7319)
!7366 = !DILocation(line: 3491, column: 13, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 3491, column: 13)
!7368 = !DILocation(line: 3491, column: 13, scope: !7307)
!7369 = !DILocalVariable(name: "contenttype", scope: !7370, file: !1, line: 3492, type: !230)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !1, line: 3491, column: 49)
!7371 = !DILocation(line: 3492, column: 13, scope: !7370)
!7372 = !DILocation(line: 3492, column: 50, scope: !7370)
!7373 = !DILocation(line: 3492, column: 53, scope: !7370)
!7374 = !DILocation(line: 3492, column: 27, scope: !7370)
!7375 = !DILocation(line: 3493, column: 11, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7370, file: !1, line: 3493, column: 10)
!7377 = !DILocation(line: 3493, column: 10, scope: !7370)
!7378 = !DILocation(line: 3494, column: 9, scope: !7376)
!7379 = !DILocation(line: 3495, column: 12, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7370, file: !1, line: 3495, column: 10)
!7381 = !DILocation(line: 3495, column: 11, scope: !7380)
!7382 = !DILocation(line: 3495, column: 10, scope: !7370)
!7383 = !DILocation(line: 3497, column: 9, scope: !7380)
!7384 = !DILocation(line: 3499, column: 9, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 3498, column: 12)
!7386 = !DILocation(line: 3499, column: 9, scope: !7387)
!7387 = !DILexicalBlockFile(scope: !7388, file: !1, discriminator: 1)
!7388 = distinct !DILexicalBlock(scope: !7385, file: !1, line: 3499, column: 9)
!7389 = !DILocation(line: 3500, column: 34, scope: !7385)
!7390 = !DILocation(line: 3500, column: 9, scope: !7385)
!7391 = !DILocation(line: 3500, column: 15, scope: !7385)
!7392 = !DILocation(line: 3500, column: 20, scope: !7385)
!7393 = !DILocation(line: 3500, column: 32, scope: !7385)
!7394 = !DILocation(line: 3502, column: 5, scope: !7370)
!7395 = !DILocation(line: 3503, column: 13, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7367, file: !1, line: 3503, column: 13)
!7397 = !DILocation(line: 3503, column: 13, scope: !7367)
!7398 = !DILocation(line: 3504, column: 10, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !1, line: 3504, column: 10)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 3503, column: 43)
!7401 = !DILocation(line: 3504, column: 16, scope: !7399)
!7402 = !DILocation(line: 3504, column: 28, scope: !7399)
!7403 = !DILocation(line: 3504, column: 10, scope: !7400)
!7404 = !DILocalVariable(name: "server_name", scope: !7405, file: !1, line: 3506, type: !230)
!7405 = distinct !DILexicalBlock(scope: !7399, file: !1, line: 3504, column: 34)
!7406 = !DILocation(line: 3506, column: 15, scope: !7405)
!7407 = !DILocation(line: 3506, column: 52, scope: !7405)
!7408 = !DILocation(line: 3506, column: 55, scope: !7405)
!7409 = !DILocation(line: 3506, column: 29, scope: !7405)
!7410 = !DILocation(line: 3509, column: 12, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7405, file: !1, line: 3509, column: 12)
!7412 = !DILocation(line: 3509, column: 18, scope: !7411)
!7413 = !DILocation(line: 3509, column: 25, scope: !7411)
!7414 = !DILocation(line: 3509, column: 29, scope: !7415)
!7415 = !DILexicalBlockFile(scope: !7411, file: !1, discriminator: 1)
!7416 = !DILocation(line: 3509, column: 35, scope: !7415)
!7417 = !DILocation(line: 3509, column: 43, scope: !7415)
!7418 = !DILocation(line: 3509, column: 52, scope: !7415)
!7419 = !DILocation(line: 3509, column: 12, scope: !7415)
!7420 = !DILocation(line: 3510, column: 47, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !1, line: 3510, column: 14)
!7422 = distinct !DILexicalBlock(scope: !7411, file: !1, line: 3509, column: 75)
!7423 = !DILocation(line: 3510, column: 53, scope: !7421)
!7424 = !DILocation(line: 3510, column: 14, scope: !7421)
!7425 = !DILocation(line: 3510, column: 14, scope: !7422)
!7426 = !DILocation(line: 3511, column: 13, scope: !7421)
!7427 = !DILocation(line: 3511, column: 19, scope: !7421)
!7428 = !DILocation(line: 3511, column: 27, scope: !7421)
!7429 = !DILocation(line: 3511, column: 36, scope: !7421)
!7430 = !DILocation(line: 3512, column: 9, scope: !7422)
!7431 = !DILocation(line: 3513, column: 9, scope: !7405)
!7432 = !DILocation(line: 3514, column: 7, scope: !7405)
!7433 = !DILocation(line: 3515, column: 5, scope: !7400)
!7434 = !DILocation(line: 3516, column: 14, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 3516, column: 13)
!7436 = !DILocation(line: 3516, column: 20, scope: !7435)
!7437 = !DILocation(line: 3516, column: 32, scope: !7435)
!7438 = !DILocation(line: 3516, column: 39, scope: !7435)
!7439 = !DILocation(line: 3517, column: 13, scope: !7435)
!7440 = !DILocation(line: 3517, column: 19, scope: !7435)
!7441 = !DILocation(line: 3517, column: 24, scope: !7435)
!7442 = !DILocation(line: 3517, column: 34, scope: !7435)
!7443 = !DILocation(line: 3518, column: 32, scope: !7435)
!7444 = !DILocation(line: 3518, column: 35, scope: !7435)
!7445 = !DILocation(line: 3518, column: 13, scope: !7435)
!7446 = !DILocation(line: 3516, column: 13, scope: !7447)
!7447 = !DILexicalBlockFile(scope: !7396, file: !1, discriminator: 1)
!7448 = !DILocation(line: 3526, column: 7, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7435, file: !1, line: 3519, column: 68)
!7450 = !DILocation(line: 3527, column: 13, scope: !7449)
!7451 = !DILocation(line: 3527, column: 7, scope: !7449)
!7452 = !DILocation(line: 3528, column: 5, scope: !7449)
!7453 = !DILocation(line: 3529, column: 14, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7435, file: !1, line: 3529, column: 13)
!7455 = !DILocation(line: 3529, column: 20, scope: !7454)
!7456 = !DILocation(line: 3529, column: 32, scope: !7454)
!7457 = !DILocation(line: 3529, column: 39, scope: !7454)
!7458 = !DILocation(line: 3530, column: 13, scope: !7454)
!7459 = !DILocation(line: 3530, column: 19, scope: !7454)
!7460 = !DILocation(line: 3530, column: 24, scope: !7454)
!7461 = !DILocation(line: 3530, column: 34, scope: !7454)
!7462 = !DILocation(line: 3531, column: 32, scope: !7454)
!7463 = !DILocation(line: 3531, column: 35, scope: !7454)
!7464 = !DILocation(line: 3531, column: 13, scope: !7454)
!7465 = !DILocation(line: 3529, column: 13, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7435, file: !1, discriminator: 1)
!7467 = !DILocation(line: 3537, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3532, column: 63)
!7469 = !DILocation(line: 3538, column: 13, scope: !7468)
!7470 = !DILocation(line: 3538, column: 7, scope: !7468)
!7471 = !DILocation(line: 3539, column: 5, scope: !7468)
!7472 = !DILocation(line: 3540, column: 14, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3540, column: 13)
!7474 = !DILocation(line: 3540, column: 20, scope: !7473)
!7475 = !DILocation(line: 3540, column: 32, scope: !7473)
!7476 = !DILocation(line: 3540, column: 39, scope: !7473)
!7477 = !DILocation(line: 3541, column: 32, scope: !7473)
!7478 = !DILocation(line: 3541, column: 35, scope: !7473)
!7479 = !DILocation(line: 3541, column: 13, scope: !7473)
!7480 = !DILocation(line: 3540, column: 13, scope: !7481)
!7481 = !DILexicalBlockFile(scope: !7454, file: !1, discriminator: 1)
!7482 = !DILocation(line: 3548, column: 7, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7473, file: !1, line: 3541, column: 68)
!7484 = !DILocation(line: 3549, column: 13, scope: !7483)
!7485 = !DILocation(line: 3549, column: 7, scope: !7483)
!7486 = !DILocation(line: 3550, column: 5, scope: !7483)
!7487 = !DILocation(line: 3551, column: 32, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7473, file: !1, line: 3551, column: 13)
!7489 = !DILocation(line: 3551, column: 35, scope: !7488)
!7490 = !DILocation(line: 3551, column: 13, scope: !7488)
!7491 = !DILocation(line: 3551, column: 13, scope: !7473)
!7492 = !DILocation(line: 3558, column: 7, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7488, file: !1, line: 3551, column: 63)
!7494 = !DILocation(line: 3559, column: 5, scope: !7493)
!7495 = !DILocation(line: 3560, column: 13, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7488, file: !1, line: 3560, column: 13)
!7497 = !DILocation(line: 3560, column: 13, scope: !7488)
!7498 = !DILocalVariable(name: "start", scope: !7499, file: !1, line: 3572, type: !230)
!7499 = distinct !DILexicalBlock(scope: !7496, file: !1, line: 3560, column: 54)
!7500 = !DILocation(line: 3572, column: 13, scope: !7499)
!7501 = !DILocation(line: 3575, column: 15, scope: !7499)
!7502 = !DILocation(line: 3575, column: 18, scope: !7499)
!7503 = !DILocation(line: 3575, column: 20, scope: !7499)
!7504 = !DILocation(line: 3575, column: 13, scope: !7499)
!7505 = !DILocation(line: 3577, column: 7, scope: !7499)
!7506 = !DILocation(line: 3579, column: 9, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !1, line: 3577, column: 15)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !1, line: 3577, column: 7)
!7509 = distinct !DILexicalBlock(scope: !7499, file: !1, line: 3577, column: 7)
!7510 = !DILocation(line: 3579, column: 16, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7507, file: !1, discriminator: 1)
!7512 = !DILocation(line: 3579, column: 15, scope: !7511)
!7513 = !DILocation(line: 3579, column: 22, scope: !7511)
!7514 = !DILocation(line: 3579, column: 26, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7507, file: !1, discriminator: 2)
!7516 = !DILocation(line: 3579, column: 42, scope: !7515)
!7517 = !DILocation(line: 3579, column: 47, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7507, file: !1, discriminator: 3)
!7519 = !DILocation(line: 3579, column: 46, scope: !7518)
!7520 = !DILocation(line: 3579, column: 53, scope: !7518)
!7521 = !DILocation(line: 3579, column: 42, scope: !7518)
!7522 = !DILocation(line: 3579, column: 9, scope: !7523)
!7523 = !DILexicalBlockFile(scope: !7507, file: !1, discriminator: 4)
!7524 = !DILocation(line: 3580, column: 16, scope: !7507)
!7525 = !DILocation(line: 3579, column: 9, scope: !7526)
!7526 = !DILexicalBlockFile(scope: !7507, file: !1, discriminator: 5)
!7527 = !DILocation(line: 3582, column: 12, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 3582, column: 12)
!7529 = !DILocation(line: 3582, column: 12, scope: !7507)
!7530 = !DILocation(line: 3583, column: 11, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7528, file: !1, line: 3582, column: 43)
!7532 = !DILocation(line: 3583, column: 14, scope: !7531)
!7533 = !DILocation(line: 3583, column: 20, scope: !7531)
!7534 = !DILocation(line: 3586, column: 31, scope: !7531)
!7535 = !DILocation(line: 3586, column: 11, scope: !7531)
!7536 = !DILocation(line: 3588, column: 17, scope: !7531)
!7537 = !DILocation(line: 3589, column: 9, scope: !7531)
!7538 = !DILocation(line: 3591, column: 12, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 3591, column: 12)
!7540 = !DILocation(line: 3591, column: 15, scope: !7539)
!7541 = !DILocation(line: 3591, column: 12, scope: !7507)
!7542 = !DILocation(line: 3593, column: 11, scope: !7539)
!7543 = !DILocation(line: 3595, column: 12, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 3595, column: 12)
!7545 = !DILocation(line: 3595, column: 12, scope: !7507)
!7546 = !DILocation(line: 3596, column: 11, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !1, line: 3595, column: 44)
!7548 = !DILocation(line: 3596, column: 14, scope: !7547)
!7549 = !DILocation(line: 3596, column: 28, scope: !7547)
!7550 = !DILocation(line: 3597, column: 17, scope: !7547)
!7551 = !DILocation(line: 3598, column: 9, scope: !7547)
!7552 = !DILocation(line: 3599, column: 17, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7544, file: !1, line: 3599, column: 17)
!7554 = !DILocation(line: 3599, column: 17, scope: !7544)
!7555 = !DILocation(line: 3600, column: 11, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7553, file: !1, line: 3599, column: 48)
!7557 = !DILocation(line: 3600, column: 14, scope: !7556)
!7558 = !DILocation(line: 3600, column: 28, scope: !7556)
!7559 = !DILocation(line: 3601, column: 17, scope: !7556)
!7560 = !DILocation(line: 3602, column: 9, scope: !7556)
!7561 = !DILocation(line: 3603, column: 17, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7553, file: !1, line: 3603, column: 17)
!7563 = !DILocation(line: 3603, column: 17, scope: !7553)
!7564 = !DILocation(line: 3604, column: 11, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !1, line: 3603, column: 45)
!7566 = !DILocation(line: 3604, column: 14, scope: !7565)
!7567 = !DILocation(line: 3604, column: 28, scope: !7565)
!7568 = !DILocation(line: 3605, column: 17, scope: !7565)
!7569 = !DILocation(line: 3606, column: 9, scope: !7565)
!7570 = !DILocation(line: 3607, column: 17, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7562, file: !1, line: 3607, column: 17)
!7572 = !DILocation(line: 3607, column: 17, scope: !7562)
!7573 = !DILocation(line: 3608, column: 11, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 3607, column: 47)
!7575 = !DILocation(line: 3608, column: 14, scope: !7574)
!7576 = !DILocation(line: 3608, column: 28, scope: !7574)
!7577 = !DILocation(line: 3609, column: 17, scope: !7574)
!7578 = !DILocation(line: 3610, column: 9, scope: !7574)
!7579 = !DILocation(line: 3613, column: 11, scope: !7571)
!7580 = !DILocation(line: 3577, column: 7, scope: !7581)
!7581 = !DILexicalBlockFile(scope: !7508, file: !1, discriminator: 1)
!7582 = !DILocation(line: 3617, column: 5, scope: !7499)
!7583 = !DILocation(line: 3618, column: 13, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7496, file: !1, line: 3618, column: 13)
!7585 = !DILocation(line: 3618, column: 52, scope: !7584)
!7586 = !DILocation(line: 3619, column: 13, scope: !7584)
!7587 = !DILocation(line: 3619, column: 19, scope: !7584)
!7588 = !DILocation(line: 3619, column: 23, scope: !7584)
!7589 = !DILocation(line: 3618, column: 13, scope: !7590)
!7590 = !DILexicalBlockFile(scope: !7496, file: !1, discriminator: 1)
!7591 = !DILocalVariable(name: "start", scope: !7592, file: !1, line: 3627, type: !230)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !1, line: 3619, column: 45)
!7593 = !DILocation(line: 3627, column: 13, scope: !7592)
!7594 = !DILocation(line: 3630, column: 15, scope: !7592)
!7595 = !DILocation(line: 3630, column: 18, scope: !7592)
!7596 = !DILocation(line: 3630, column: 20, scope: !7592)
!7597 = !DILocation(line: 3630, column: 13, scope: !7592)
!7598 = !DILocation(line: 3631, column: 7, scope: !7592)
!7599 = !DILocation(line: 3631, column: 14, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !7592, file: !1, discriminator: 1)
!7601 = !DILocation(line: 3631, column: 13, scope: !7600)
!7602 = !DILocation(line: 3631, column: 20, scope: !7600)
!7603 = !DILocation(line: 3631, column: 23, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7592, file: !1, discriminator: 2)
!7605 = !DILocation(line: 3631, column: 20, scope: !7604)
!7606 = !DILocation(line: 3631, column: 7, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7592, file: !1, discriminator: 3)
!7608 = !DILocation(line: 3632, column: 14, scope: !7592)
!7609 = !DILocation(line: 3631, column: 7, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !7592, file: !1, discriminator: 4)
!7611 = !DILocation(line: 3635, column: 10, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7592, file: !1, line: 3635, column: 10)
!7613 = !DILocation(line: 3635, column: 10, scope: !7592)
!7614 = !DILocation(line: 3636, column: 9, scope: !7612)
!7615 = !DILocation(line: 3636, column: 12, scope: !7612)
!7616 = !DILocation(line: 3636, column: 26, scope: !7612)
!7617 = !DILocation(line: 3637, column: 15, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7612, file: !1, line: 3637, column: 15)
!7619 = !DILocation(line: 3637, column: 15, scope: !7612)
!7620 = !DILocation(line: 3638, column: 9, scope: !7618)
!7621 = !DILocation(line: 3638, column: 12, scope: !7618)
!7622 = !DILocation(line: 3638, column: 26, scope: !7618)
!7623 = !DILocation(line: 3639, column: 15, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7618, file: !1, line: 3639, column: 15)
!7625 = !DILocation(line: 3640, column: 15, scope: !7624)
!7626 = !DILocation(line: 3640, column: 18, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7624, file: !1, discriminator: 1)
!7628 = !DILocation(line: 3639, column: 15, scope: !7629)
!7629 = !DILexicalBlockFile(scope: !7618, file: !1, discriminator: 1)
!7630 = !DILocation(line: 3641, column: 9, scope: !7624)
!7631 = !DILocation(line: 3641, column: 12, scope: !7624)
!7632 = !DILocation(line: 3641, column: 26, scope: !7624)
!7633 = !DILocation(line: 3642, column: 5, scope: !7592)
!7634 = !DILocation(line: 3643, column: 13, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7584, file: !1, line: 3643, column: 13)
!7636 = !DILocation(line: 3643, column: 13, scope: !7584)
!7637 = !DILocalVariable(name: "ptr", scope: !7638, file: !1, line: 3655, type: !230)
!7638 = distinct !DILexicalBlock(scope: !7635, file: !1, line: 3643, column: 50)
!7639 = !DILocation(line: 3655, column: 13, scope: !7638)
!7640 = !DILocation(line: 3655, column: 19, scope: !7638)
!7641 = !DILocation(line: 3655, column: 22, scope: !7638)
!7642 = !DILocation(line: 3655, column: 24, scope: !7638)
!7643 = !DILocation(line: 3658, column: 7, scope: !7638)
!7644 = !DILocation(line: 3658, column: 14, scope: !7645)
!7645 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 1)
!7646 = !DILocation(line: 3658, column: 13, scope: !7645)
!7647 = !DILocation(line: 3658, column: 18, scope: !7645)
!7648 = !DILocation(line: 3658, column: 22, scope: !7649)
!7649 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 2)
!7650 = !DILocation(line: 3658, column: 36, scope: !7649)
!7651 = !DILocation(line: 3658, column: 40, scope: !7652)
!7652 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 3)
!7653 = !DILocation(line: 3658, column: 39, scope: !7652)
!7654 = !DILocation(line: 3658, column: 44, scope: !7652)
!7655 = !DILocation(line: 3658, column: 7, scope: !7656)
!7656 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 4)
!7657 = !DILocation(line: 3659, column: 12, scope: !7638)
!7658 = !DILocation(line: 3658, column: 7, scope: !7659)
!7659 = !DILexicalBlockFile(scope: !7638, file: !1, discriminator: 5)
!7660 = !DILocation(line: 3662, column: 10, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7638, file: !1, line: 3662, column: 10)
!7662 = !DILocation(line: 3662, column: 10, scope: !7638)
!7663 = !DILocation(line: 3663, column: 37, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7661, file: !1, line: 3662, column: 25)
!7665 = !DILocation(line: 3663, column: 21, scope: !7664)
!7666 = !DILocation(line: 3663, column: 9, scope: !7664)
!7667 = !DILocation(line: 3663, column: 12, scope: !7664)
!7668 = !DILocation(line: 3663, column: 19, scope: !7664)
!7669 = !DILocation(line: 3665, column: 12, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7664, file: !1, line: 3665, column: 12)
!7671 = !DILocation(line: 3665, column: 18, scope: !7670)
!7672 = !DILocation(line: 3665, column: 24, scope: !7670)
!7673 = !DILocation(line: 3665, column: 39, scope: !7670)
!7674 = !DILocation(line: 3665, column: 42, scope: !7670)
!7675 = !DILocation(line: 3665, column: 36, scope: !7670)
!7676 = !DILocation(line: 3665, column: 12, scope: !7664)
!7677 = !DILocation(line: 3667, column: 11, scope: !7670)
!7678 = !DILocation(line: 3667, column: 14, scope: !7670)
!7679 = !DILocation(line: 3667, column: 28, scope: !7670)
!7680 = !DILocation(line: 3668, column: 7, scope: !7664)
!7681 = !DILocation(line: 3670, column: 9, scope: !7661)
!7682 = !DILocation(line: 3670, column: 15, scope: !7661)
!7683 = !DILocation(line: 3670, column: 21, scope: !7661)
!7684 = !DILocation(line: 3670, column: 33, scope: !7661)
!7685 = !DILocation(line: 3671, column: 5, scope: !7638)
!7686 = !DILocation(line: 3673, column: 13, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7635, file: !1, line: 3673, column: 13)
!7688 = !DILocation(line: 3673, column: 19, scope: !7687)
!7689 = !DILocation(line: 3673, column: 27, scope: !7687)
!7690 = !DILocation(line: 3674, column: 13, scope: !7687)
!7691 = !DILocation(line: 3673, column: 13, scope: !7692)
!7692 = !DILexicalBlockFile(scope: !7635, file: !1, discriminator: 1)
!7693 = !DILocation(line: 3675, column: 23, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7687, file: !1, line: 3674, column: 47)
!7695 = !DILocation(line: 3675, column: 7, scope: !7694)
!7696 = !DILocation(line: 3677, column: 23, scope: !7694)
!7697 = !DILocation(line: 3678, column: 23, scope: !7694)
!7698 = !DILocation(line: 3678, column: 29, scope: !7694)
!7699 = !DILocation(line: 3678, column: 44, scope: !7694)
!7700 = !DILocation(line: 3678, column: 47, scope: !7694)
!7701 = !DILocation(line: 3678, column: 48, scope: !7694)
!7702 = !DILocation(line: 3681, column: 23, scope: !7694)
!7703 = !DILocation(line: 3681, column: 29, scope: !7694)
!7704 = !DILocation(line: 3681, column: 38, scope: !7694)
!7705 = !DILocation(line: 3682, column: 23, scope: !7694)
!7706 = !DILocation(line: 3682, column: 29, scope: !7694)
!7707 = !DILocation(line: 3682, column: 38, scope: !7694)
!7708 = !DILocation(line: 3681, column: 23, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7694, file: !1, discriminator: 1)
!7710 = !DILocation(line: 3682, column: 49, scope: !7709)
!7711 = !DILocation(line: 3682, column: 55, scope: !7709)
!7712 = !DILocation(line: 3682, column: 60, scope: !7709)
!7713 = !DILocation(line: 3681, column: 23, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7694, file: !1, discriminator: 2)
!7715 = !DILocation(line: 3681, column: 23, scope: !7716)
!7716 = !DILexicalBlockFile(scope: !7694, file: !1, discriminator: 3)
!7717 = !DILocation(line: 3683, column: 23, scope: !7694)
!7718 = !DILocation(line: 3683, column: 29, scope: !7694)
!7719 = !DILocation(line: 3683, column: 35, scope: !7694)
!7720 = !DILocation(line: 3677, column: 7, scope: !7709)
!7721 = !DILocation(line: 3684, column: 25, scope: !7694)
!7722 = !DILocation(line: 3684, column: 7, scope: !7694)
!7723 = !DILocation(line: 3685, column: 5, scope: !7694)
!7724 = !DILocation(line: 3687, column: 13, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7687, file: !1, line: 3687, column: 13)
!7726 = !DILocation(line: 3687, column: 49, scope: !7725)
!7727 = !DILocation(line: 3688, column: 14, scope: !7725)
!7728 = !DILocation(line: 3688, column: 20, scope: !7725)
!7729 = !DILocation(line: 3688, column: 24, scope: !7725)
!7730 = !DILocation(line: 3688, column: 38, scope: !7725)
!7731 = !DILocation(line: 3688, column: 41, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7725, file: !1, discriminator: 1)
!7733 = !DILocation(line: 3688, column: 47, scope: !7732)
!7734 = !DILocation(line: 3688, column: 51, scope: !7732)
!7735 = !DILocation(line: 3687, column: 13, scope: !7736)
!7736 = !DILexicalBlockFile(scope: !7687, file: !1, discriminator: 1)
!7737 = !DILocalVariable(name: "secs", scope: !7738, file: !1, line: 3689, type: !257)
!7738 = distinct !DILexicalBlock(scope: !7725, file: !1, line: 3688, column: 67)
!7739 = !DILocation(line: 3689, column: 14, scope: !7738)
!7740 = !DILocation(line: 3689, column: 19, scope: !7738)
!7741 = !DILocation(line: 3690, column: 35, scope: !7738)
!7742 = !DILocation(line: 3690, column: 38, scope: !7738)
!7743 = !DILocation(line: 3690, column: 39, scope: !7738)
!7744 = !DILocation(line: 3690, column: 22, scope: !7738)
!7745 = !DILocation(line: 3690, column: 7, scope: !7738)
!7746 = !DILocation(line: 3690, column: 10, scope: !7738)
!7747 = !DILocation(line: 3690, column: 20, scope: !7738)
!7748 = !DILocation(line: 3692, column: 10, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 3692, column: 10)
!7750 = !DILocation(line: 3692, column: 16, scope: !7749)
!7751 = !DILocation(line: 3692, column: 20, scope: !7749)
!7752 = !DILocation(line: 3692, column: 10, scope: !7738)
!7753 = !DILocation(line: 3693, column: 37, scope: !7749)
!7754 = !DILocation(line: 3693, column: 40, scope: !7749)
!7755 = !DILocation(line: 3693, column: 9, scope: !7749)
!7756 = !DILocation(line: 3693, column: 15, scope: !7749)
!7757 = !DILocation(line: 3693, column: 20, scope: !7749)
!7758 = !DILocation(line: 3693, column: 29, scope: !7749)
!7759 = !DILocation(line: 3694, column: 5, scope: !7738)
!7760 = !DILocation(line: 3695, column: 14, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7725, file: !1, line: 3695, column: 13)
!7762 = !DILocation(line: 3695, column: 53, scope: !7761)
!7763 = !DILocation(line: 3696, column: 22, scope: !7761)
!7764 = !DILocation(line: 3696, column: 25, scope: !7761)
!7765 = !DILocation(line: 3696, column: 19, scope: !7761)
!7766 = !DILocation(line: 3696, column: 36, scope: !7761)
!7767 = !DILocation(line: 3697, column: 14, scope: !7761)
!7768 = !DILocation(line: 3697, column: 55, scope: !7761)
!7769 = !DILocation(line: 3698, column: 22, scope: !7761)
!7770 = !DILocation(line: 3698, column: 25, scope: !7761)
!7771 = !DILocation(line: 3698, column: 19, scope: !7761)
!7772 = !DILocation(line: 3695, column: 13, scope: !7732)
!7773 = !DILocalVariable(name: "proxy", scope: !7774, file: !1, line: 3700, type: !226)
!7774 = distinct !DILexicalBlock(scope: !7761, file: !1, line: 3698, column: 37)
!7775 = !DILocation(line: 3700, column: 12, scope: !7774)
!7776 = !DILocation(line: 3700, column: 21, scope: !7774)
!7777 = !DILocation(line: 3700, column: 24, scope: !7774)
!7778 = !DILocation(line: 3700, column: 33, scope: !7774)
!7779 = !DILocation(line: 3700, column: 20, scope: !7774)
!7780 = !DILocalVariable(name: "auth", scope: !7774, file: !1, line: 3701, type: !230)
!7781 = !DILocation(line: 3701, column: 13, scope: !7774)
!7782 = !DILocation(line: 3701, column: 43, scope: !7774)
!7783 = !DILocation(line: 3701, column: 46, scope: !7774)
!7784 = !DILocation(line: 3701, column: 20, scope: !7774)
!7785 = !DILocation(line: 3702, column: 11, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7774, file: !1, line: 3702, column: 10)
!7787 = !DILocation(line: 3702, column: 10, scope: !7774)
!7788 = !DILocation(line: 3703, column: 9, scope: !7786)
!7789 = !DILocation(line: 3705, column: 37, scope: !7774)
!7790 = !DILocation(line: 3705, column: 43, scope: !7774)
!7791 = !DILocation(line: 3705, column: 50, scope: !7774)
!7792 = !DILocation(line: 3705, column: 16, scope: !7774)
!7793 = !DILocation(line: 3705, column: 14, scope: !7774)
!7794 = !DILocation(line: 3707, column: 7, scope: !7774)
!7795 = !DILocation(line: 3709, column: 10, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7774, file: !1, line: 3709, column: 10)
!7797 = !DILocation(line: 3709, column: 10, scope: !7774)
!7798 = !DILocation(line: 3710, column: 16, scope: !7796)
!7799 = !DILocation(line: 3710, column: 9, scope: !7796)
!7800 = !DILocation(line: 3711, column: 5, scope: !7774)
!7801 = !DILocation(line: 3712, column: 14, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7761, file: !1, line: 3712, column: 13)
!7803 = !DILocation(line: 3712, column: 17, scope: !7802)
!7804 = !DILocation(line: 3712, column: 26, scope: !7802)
!7805 = !DILocation(line: 3712, column: 33, scope: !7802)
!7806 = !DILocation(line: 3712, column: 36, scope: !7807)
!7807 = !DILexicalBlockFile(scope: !7802, file: !1, discriminator: 1)
!7808 = !DILocation(line: 3712, column: 39, scope: !7807)
!7809 = !DILocation(line: 3712, column: 48, scope: !7807)
!7810 = !DILocation(line: 3712, column: 55, scope: !7807)
!7811 = !DILocation(line: 3713, column: 13, scope: !7802)
!7812 = !DILocation(line: 3713, column: 44, scope: !7802)
!7813 = !DILocation(line: 3714, column: 14, scope: !7802)
!7814 = !DILocation(line: 3714, column: 20, scope: !7802)
!7815 = !DILocation(line: 3714, column: 24, scope: !7802)
!7816 = !DILocation(line: 3712, column: 13, scope: !7817)
!7817 = !DILexicalBlockFile(scope: !7761, file: !1, discriminator: 2)
!7818 = !DILocalVariable(name: "location", scope: !7819, file: !1, line: 3716, type: !230)
!7819 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 3714, column: 34)
!7820 = !DILocation(line: 3716, column: 13, scope: !7819)
!7821 = !DILocation(line: 3716, column: 47, scope: !7819)
!7822 = !DILocation(line: 3716, column: 50, scope: !7819)
!7823 = !DILocation(line: 3716, column: 24, scope: !7819)
!7824 = !DILocation(line: 3717, column: 11, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7819, file: !1, line: 3717, column: 10)
!7826 = !DILocation(line: 3717, column: 10, scope: !7819)
!7827 = !DILocation(line: 3718, column: 9, scope: !7825)
!7828 = !DILocation(line: 3719, column: 12, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7819, file: !1, line: 3719, column: 10)
!7830 = !DILocation(line: 3719, column: 11, scope: !7829)
!7831 = !DILocation(line: 3719, column: 10, scope: !7819)
!7832 = !DILocation(line: 3721, column: 9, scope: !7829)
!7833 = !DILocation(line: 3723, column: 30, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7829, file: !1, line: 3722, column: 12)
!7835 = !DILocation(line: 3723, column: 9, scope: !7834)
!7836 = !DILocation(line: 3723, column: 15, scope: !7834)
!7837 = !DILocation(line: 3723, column: 19, scope: !7834)
!7838 = !DILocation(line: 3723, column: 28, scope: !7834)
!7839 = !DILocation(line: 3725, column: 12, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7834, file: !1, line: 3725, column: 12)
!7841 = !DILocation(line: 3725, column: 18, scope: !7840)
!7842 = !DILocation(line: 3725, column: 22, scope: !7840)
!7843 = !DILocation(line: 3725, column: 12, scope: !7834)
!7844 = !DILocation(line: 3726, column: 11, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !1, line: 3725, column: 44)
!7846 = !DILocation(line: 3726, column: 11, scope: !7847)
!7847 = !DILexicalBlockFile(scope: !7848, file: !1, discriminator: 1)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 3726, column: 11)
!7849 = !DILocation(line: 3727, column: 30, scope: !7845)
!7850 = !DILocation(line: 3727, column: 11, scope: !7845)
!7851 = !DILocation(line: 3727, column: 17, scope: !7845)
!7852 = !DILocation(line: 3727, column: 21, scope: !7845)
!7853 = !DILocation(line: 3727, column: 28, scope: !7845)
!7854 = !DILocation(line: 3728, column: 15, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 3728, column: 14)
!7856 = !DILocation(line: 3728, column: 21, scope: !7855)
!7857 = !DILocation(line: 3728, column: 25, scope: !7855)
!7858 = !DILocation(line: 3728, column: 14, scope: !7845)
!7859 = !DILocation(line: 3729, column: 13, scope: !7855)
!7860 = !DILocation(line: 3733, column: 39, scope: !7845)
!7861 = !DILocation(line: 3733, column: 20, scope: !7845)
!7862 = !DILocation(line: 3733, column: 18, scope: !7845)
!7863 = !DILocation(line: 3734, column: 14, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 3734, column: 14)
!7865 = !DILocation(line: 3734, column: 14, scope: !7845)
!7866 = !DILocation(line: 3735, column: 20, scope: !7864)
!7867 = !DILocation(line: 3735, column: 13, scope: !7864)
!7868 = !DILocation(line: 3736, column: 9, scope: !7845)
!7869 = !DILocation(line: 3738, column: 5, scope: !7819)
!7870 = !DILocation(line: 3739, column: 13, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 3739, column: 13)
!7872 = !DILocation(line: 3739, column: 19, scope: !7871)
!7873 = !DILocation(line: 3739, column: 28, scope: !7871)
!7874 = !DILocation(line: 3739, column: 37, scope: !7871)
!7875 = !DILocation(line: 3739, column: 13, scope: !7802)
!7876 = !DILocation(line: 3740, column: 14, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7871, file: !1, line: 3739, column: 55)
!7878 = !DILocation(line: 3741, column: 10, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7877, file: !1, line: 3741, column: 10)
!7880 = !DILocation(line: 3741, column: 10, scope: !7877)
!7881 = !DILocation(line: 3742, column: 16, scope: !7879)
!7882 = !DILocation(line: 3742, column: 9, scope: !7879)
!7883 = !DILocation(line: 3743, column: 5, scope: !7877)
!7884 = !DILocation(line: 3749, column: 15, scope: !6450)
!7885 = !DILocation(line: 3750, column: 8, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3750, column: 8)
!7887 = !DILocation(line: 3750, column: 14, scope: !7886)
!7888 = !DILocation(line: 3750, column: 18, scope: !7886)
!7889 = !DILocation(line: 3750, column: 8, scope: !6450)
!7890 = !DILocation(line: 3751, column: 17, scope: !7886)
!7891 = !DILocation(line: 3751, column: 7, scope: !7886)
!7892 = !DILocation(line: 3753, column: 8, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3753, column: 8)
!7894 = !DILocation(line: 3753, column: 14, scope: !7893)
!7895 = !DILocation(line: 3753, column: 18, scope: !7893)
!7896 = !DILocation(line: 3753, column: 8, scope: !6450)
!7897 = !DILocation(line: 3754, column: 18, scope: !7893)
!7898 = !DILocation(line: 3755, column: 18, scope: !7893)
!7899 = !DILocation(line: 3755, column: 21, scope: !7893)
!7900 = !DILocation(line: 3755, column: 32, scope: !7893)
!7901 = !DILocation(line: 3755, column: 35, scope: !7893)
!7902 = !DILocation(line: 3755, column: 44, scope: !7893)
!7903 = !DILocation(line: 3754, column: 7, scope: !7893)
!7904 = !DILocation(line: 3757, column: 32, scope: !6450)
!7905 = !DILocation(line: 3757, column: 38, scope: !6450)
!7906 = !DILocation(line: 3757, column: 49, scope: !6450)
!7907 = !DILocation(line: 3757, column: 52, scope: !6450)
!7908 = !DILocation(line: 3757, column: 55, scope: !6450)
!7909 = !DILocation(line: 3757, column: 58, scope: !6450)
!7910 = !DILocation(line: 3757, column: 14, scope: !6450)
!7911 = !DILocation(line: 3757, column: 12, scope: !6450)
!7912 = !DILocation(line: 3758, column: 8, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 3758, column: 8)
!7914 = !DILocation(line: 3758, column: 8, scope: !6450)
!7915 = !DILocation(line: 3759, column: 14, scope: !7913)
!7916 = !DILocation(line: 3759, column: 7, scope: !7913)
!7917 = !DILocation(line: 3761, column: 37, scope: !6450)
!7918 = !DILocation(line: 3761, column: 40, scope: !6450)
!7919 = !DILocation(line: 3761, column: 5, scope: !6450)
!7920 = !DILocation(line: 3761, column: 11, scope: !6450)
!7921 = !DILocation(line: 3761, column: 16, scope: !6450)
!7922 = !DILocation(line: 3761, column: 28, scope: !6450)
!7923 = !DILocation(line: 3762, column: 40, scope: !6450)
!7924 = !DILocation(line: 3762, column: 43, scope: !6450)
!7925 = !DILocation(line: 3762, column: 5, scope: !6450)
!7926 = !DILocation(line: 3762, column: 11, scope: !6450)
!7927 = !DILocation(line: 3762, column: 15, scope: !6450)
!7928 = !DILocation(line: 3762, column: 31, scope: !6450)
!7929 = !DILocation(line: 3765, column: 16, scope: !6450)
!7930 = !DILocation(line: 3765, column: 22, scope: !6450)
!7931 = !DILocation(line: 3765, column: 28, scope: !6450)
!7932 = !DILocation(line: 3765, column: 5, scope: !6450)
!7933 = !DILocation(line: 3765, column: 8, scope: !6450)
!7934 = !DILocation(line: 3765, column: 14, scope: !6450)
!7935 = !DILocation(line: 3766, column: 5, scope: !6450)
!7936 = !DILocation(line: 3766, column: 8, scope: !6450)
!7937 = !DILocation(line: 3766, column: 16, scope: !6450)
!7938 = !DILocation(line: 3767, column: 3, scope: !6450)
!7939 = !DILocation(line: 3768, column: 10, scope: !1905)
!7940 = !DILocation(line: 3768, column: 13, scope: !1905)
!7941 = !DILocation(line: 3768, column: 9, scope: !1905)
!7942 = !DILocation(line: 3767, column: 3, scope: !7943)
!7943 = !DILexicalBlockFile(scope: !6450, file: !1, discriminator: 1)
!7944 = !DILocation(line: 3774, column: 3, scope: !1905)
!7945 = !DILocation(line: 3775, column: 1, scope: !1905)
!7946 = !DILocalVariable(name: "data", arg: 1, scope: !1931, file: !1, line: 2841, type: !559)
!7947 = !DILocation(line: 2841, column: 49, scope: !1931)
!7948 = !DILocalVariable(name: "k", arg: 2, scope: !1931, file: !1, line: 2842, type: !1934)
!7949 = !DILocation(line: 2842, column: 53, scope: !1931)
!7950 = !DILocalVariable(name: "length", arg: 3, scope: !1931, file: !1, line: 2843, type: !158)
!7951 = !DILocation(line: 2843, column: 38, scope: !1931)
!7952 = !DILocation(line: 2845, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !1931, file: !1, line: 2845, column: 6)
!7954 = !DILocation(line: 2845, column: 9, scope: !7953)
!7955 = !DILocation(line: 2845, column: 19, scope: !7953)
!7956 = !DILocation(line: 2845, column: 17, scope: !7953)
!7957 = !DILocation(line: 2845, column: 29, scope: !7953)
!7958 = !DILocation(line: 2845, column: 35, scope: !7953)
!7959 = !DILocation(line: 2845, column: 41, scope: !7953)
!7960 = !DILocation(line: 2845, column: 26, scope: !7953)
!7961 = !DILocation(line: 2845, column: 6, scope: !1931)
!7962 = !DILocalVariable(name: "newbuff", scope: !7963, file: !1, line: 2847, type: !230)
!7963 = distinct !DILexicalBlock(scope: !7953, file: !1, line: 2845, column: 53)
!7964 = !DILocation(line: 2847, column: 11, scope: !7963)
!7965 = !DILocalVariable(name: "hbufp_index", scope: !7963, file: !1, line: 2848, type: !158)
!7966 = !DILocation(line: 2848, column: 12, scope: !7963)
!7967 = !DILocalVariable(name: "newsize", scope: !7963, file: !1, line: 2849, type: !158)
!7968 = !DILocation(line: 2849, column: 12, scope: !7963)
!7969 = !DILocation(line: 2851, column: 8, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2851, column: 8)
!7971 = !DILocation(line: 2851, column: 11, scope: !7970)
!7972 = !DILocation(line: 2851, column: 21, scope: !7970)
!7973 = !DILocation(line: 2851, column: 19, scope: !7970)
!7974 = !DILocation(line: 2851, column: 28, scope: !7970)
!7975 = !DILocation(line: 2851, column: 8, scope: !7963)
!7976 = !DILocation(line: 2855, column: 13, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7970, file: !1, line: 2851, column: 52)
!7978 = !DILocation(line: 2855, column: 7, scope: !7977)
!7979 = !DILocation(line: 2857, column: 7, scope: !7977)
!7980 = !DILocation(line: 2860, column: 13, scope: !7963)
!7981 = !DILocation(line: 2860, column: 13, scope: !7982)
!7982 = !DILexicalBlockFile(scope: !7963, file: !1, discriminator: 1)
!7983 = !DILocation(line: 2860, column: 13, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !7963, file: !1, discriminator: 2)
!7985 = !DILocation(line: 2860, column: 13, scope: !7986)
!7986 = !DILexicalBlockFile(scope: !7963, file: !1, discriminator: 3)
!7987 = !DILocation(line: 2860, column: 12, scope: !7986)
!7988 = !DILocation(line: 2861, column: 19, scope: !7963)
!7989 = !DILocation(line: 2861, column: 22, scope: !7963)
!7990 = !DILocation(line: 2861, column: 30, scope: !7963)
!7991 = !DILocation(line: 2861, column: 36, scope: !7963)
!7992 = !DILocation(line: 2861, column: 42, scope: !7963)
!7993 = !DILocation(line: 2861, column: 28, scope: !7963)
!7994 = !DILocation(line: 2861, column: 17, scope: !7963)
!7995 = !DILocation(line: 2862, column: 15, scope: !7963)
!7996 = !DILocation(line: 2862, column: 13, scope: !7963)
!7997 = !DILocation(line: 2863, column: 9, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2863, column: 8)
!7999 = !DILocation(line: 2863, column: 8, scope: !7963)
!8000 = !DILocation(line: 2864, column: 13, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7998, file: !1, line: 2863, column: 18)
!8002 = !DILocation(line: 2864, column: 7, scope: !8001)
!8003 = !DILocation(line: 2865, column: 7, scope: !8001)
!8004 = !DILocation(line: 2867, column: 28, scope: !7963)
!8005 = !DILocation(line: 2867, column: 5, scope: !7963)
!8006 = !DILocation(line: 2867, column: 11, scope: !7963)
!8007 = !DILocation(line: 2867, column: 17, scope: !7963)
!8008 = !DILocation(line: 2867, column: 27, scope: !7963)
!8009 = !DILocation(line: 2868, column: 30, scope: !7963)
!8010 = !DILocation(line: 2868, column: 5, scope: !7963)
!8011 = !DILocation(line: 2868, column: 11, scope: !7963)
!8012 = !DILocation(line: 2868, column: 17, scope: !7963)
!8013 = !DILocation(line: 2868, column: 28, scope: !7963)
!8014 = !DILocation(line: 2869, column: 16, scope: !7963)
!8015 = !DILocation(line: 2869, column: 22, scope: !7963)
!8016 = !DILocation(line: 2869, column: 28, scope: !7963)
!8017 = !DILocation(line: 2869, column: 41, scope: !7963)
!8018 = !DILocation(line: 2869, column: 39, scope: !7963)
!8019 = !DILocation(line: 2869, column: 5, scope: !7963)
!8020 = !DILocation(line: 2869, column: 8, scope: !7963)
!8021 = !DILocation(line: 2869, column: 14, scope: !7963)
!8022 = !DILocation(line: 2870, column: 3, scope: !7963)
!8023 = !DILocation(line: 2871, column: 10, scope: !1931)
!8024 = !DILocation(line: 2871, column: 13, scope: !1931)
!8025 = !DILocation(line: 2871, column: 20, scope: !1931)
!8026 = !DILocation(line: 2871, column: 23, scope: !1931)
!8027 = !DILocation(line: 2871, column: 34, scope: !1931)
!8028 = !DILocation(line: 2871, column: 3, scope: !1931)
!8029 = !DILocation(line: 2872, column: 15, scope: !1931)
!8030 = !DILocation(line: 2872, column: 3, scope: !1931)
!8031 = !DILocation(line: 2872, column: 6, scope: !1931)
!8032 = !DILocation(line: 2872, column: 12, scope: !1931)
!8033 = !DILocation(line: 2873, column: 17, scope: !1931)
!8034 = !DILocation(line: 2873, column: 3, scope: !1931)
!8035 = !DILocation(line: 2873, column: 6, scope: !1931)
!8036 = !DILocation(line: 2873, column: 14, scope: !1931)
!8037 = !DILocation(line: 2874, column: 4, scope: !1931)
!8038 = !DILocation(line: 2874, column: 7, scope: !1931)
!8039 = !DILocation(line: 2874, column: 13, scope: !1931)
!8040 = !DILocation(line: 2876, column: 3, scope: !1931)
!8041 = !DILocation(line: 2877, column: 1, scope: !1931)
!8042 = !DILocalVariable(name: "data", arg: 1, scope: !1935, file: !1, line: 2823, type: !559)
!8043 = !DILocation(line: 2823, column: 36, scope: !1935)
!8044 = !DILocalVariable(name: "conn", arg: 2, scope: !1935, file: !1, line: 2823, type: !565)
!8045 = !DILocation(line: 2823, column: 62, scope: !1935)
!8046 = !DILocalVariable(name: "s", arg: 3, scope: !1935, file: !1, line: 2824, type: !716)
!8047 = !DILocation(line: 2824, column: 30, scope: !1935)
!8048 = !DILocation(line: 2830, column: 9, scope: !1935)
!8049 = !DILocation(line: 2833, column: 26, scope: !1935)
!8050 = !DILocation(line: 2833, column: 32, scope: !1935)
!8051 = !DILocation(line: 2833, column: 10, scope: !1935)
!8052 = !DILocation(line: 2833, column: 3, scope: !1935)
!8053 = !DILocalVariable(name: "data", arg: 1, scope: !1938, file: !1, line: 2757, type: !559)
!8054 = !DILocation(line: 2757, column: 35, scope: !1938)
!8055 = !DILocalVariable(name: "s", arg: 2, scope: !1938, file: !1, line: 2758, type: !716)
!8056 = !DILocation(line: 2758, column: 29, scope: !1938)
!8057 = !DILocalVariable(name: "head", scope: !1938, file: !1, line: 2760, type: !916)
!8058 = !DILocation(line: 2760, column: 22, scope: !1938)
!8059 = !DILocation(line: 2760, column: 29, scope: !1938)
!8060 = !DILocation(line: 2760, column: 35, scope: !1938)
!8061 = !DILocation(line: 2760, column: 39, scope: !1938)
!8062 = !DILocalVariable(name: "rc", scope: !1938, file: !1, line: 2761, type: !226)
!8063 = !DILocation(line: 2761, column: 8, scope: !1938)
!8064 = !DILocation(line: 2777, column: 3, scope: !1938)
!8065 = !DILocation(line: 2777, column: 9, scope: !8066)
!8066 = !DILexicalBlockFile(scope: !1938, file: !1, discriminator: 1)
!8067 = !DILocation(line: 2777, column: 3, scope: !8066)
!8068 = !DILocation(line: 2778, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !1, line: 2778, column: 8)
!8070 = distinct !DILexicalBlock(scope: !1938, file: !1, line: 2777, column: 15)
!8071 = !DILocation(line: 2778, column: 8, scope: !8072)
!8072 = !DILexicalBlockFile(scope: !8069, file: !1, discriminator: 1)
!8073 = !DILocation(line: 2778, column: 8, scope: !8070)
!8074 = !DILocation(line: 2779, column: 10, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8069, file: !1, line: 2778, column: 36)
!8076 = !DILocation(line: 2780, column: 7, scope: !8075)
!8077 = !DILocation(line: 2782, column: 12, scope: !8070)
!8078 = !DILocation(line: 2782, column: 18, scope: !8070)
!8079 = !DILocation(line: 2782, column: 10, scope: !8070)
!8080 = !DILocation(line: 2777, column: 3, scope: !8081)
!8081 = !DILexicalBlockFile(scope: !1938, file: !1, discriminator: 2)
!8082 = !DILocation(line: 2785, column: 7, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !1938, file: !1, line: 2785, column: 6)
!8084 = !DILocation(line: 2785, column: 10, scope: !8083)
!8085 = !DILocation(line: 2785, column: 14, scope: !8086)
!8086 = !DILexicalBlockFile(scope: !8083, file: !1, discriminator: 1)
!8087 = !DILocation(line: 2785, column: 6, scope: !8086)
!8088 = !DILocation(line: 2786, column: 8, scope: !8083)
!8089 = !DILocation(line: 2786, column: 5, scope: !8083)
!8090 = !DILocation(line: 2791, column: 10, scope: !1938)
!8091 = !DILocation(line: 2791, column: 3, scope: !1938)
!8092 = !DILocalVariable(name: "data", arg: 1, scope: !1941, file: !1, line: 2879, type: !559)
!8093 = !DILocation(line: 2879, column: 48, scope: !1941)
!8094 = !DILocalVariable(name: "k", scope: !1941, file: !1, line: 2881, type: !1934)
!8095 = !DILocation(line: 2881, column: 25, scope: !1941)
!8096 = !DILocation(line: 2881, column: 30, scope: !1941)
!8097 = !DILocation(line: 2881, column: 36, scope: !1941)
!8098 = !DILocalVariable(name: "beg", scope: !1941, file: !1, line: 2882, type: !230)
!8099 = !DILocation(line: 2882, column: 9, scope: !1941)
!8100 = !DILocation(line: 2882, column: 15, scope: !1941)
!8101 = !DILocation(line: 2882, column: 18, scope: !1941)
!8102 = !DILocation(line: 2885, column: 15, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2885, column: 6)
!8104 = !DILocation(line: 2885, column: 7, scope: !8103)
!8105 = !DILocation(line: 2885, column: 6, scope: !1941)
!8106 = !DILocation(line: 2888, column: 18, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8103, file: !1, line: 2885, column: 32)
!8108 = !DILocation(line: 2888, column: 11, scope: !8107)
!8109 = !DILocation(line: 2888, column: 9, scope: !8107)
!8110 = !DILocation(line: 2889, column: 8, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8107, file: !1, line: 2889, column: 8)
!8112 = !DILocation(line: 2889, column: 12, scope: !8111)
!8113 = !DILocation(line: 2889, column: 16, scope: !8114)
!8114 = !DILexicalBlockFile(scope: !8111, file: !1, discriminator: 1)
!8115 = !DILocation(line: 2889, column: 15, scope: !8114)
!8116 = !DILocation(line: 2889, column: 8, scope: !8114)
!8117 = !DILocalVariable(name: "end_char", scope: !8118, file: !1, line: 2892, type: !231)
!8118 = distinct !DILexicalBlock(scope: !8111, file: !1, line: 2889, column: 23)
!8119 = !DILocation(line: 2892, column: 12, scope: !8118)
!8120 = !DILocalVariable(name: "end", scope: !8118, file: !1, line: 2893, type: !230)
!8121 = !DILocation(line: 2893, column: 13, scope: !8118)
!8122 = !DILocation(line: 2893, column: 26, scope: !8118)
!8123 = !DILocation(line: 2893, column: 31, scope: !8118)
!8124 = !DILocation(line: 2893, column: 19, scope: !8118)
!8125 = !DILocation(line: 2894, column: 11, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 2894, column: 10)
!8127 = !DILocation(line: 2894, column: 10, scope: !8118)
!8128 = !DILocation(line: 2896, column: 18, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8126, file: !1, line: 2894, column: 16)
!8130 = !DILocation(line: 2897, column: 22, scope: !8129)
!8131 = !DILocation(line: 2897, column: 27, scope: !8129)
!8132 = !DILocation(line: 2897, column: 15, scope: !8129)
!8133 = !DILocation(line: 2897, column: 13, scope: !8129)
!8134 = !DILocation(line: 2898, column: 7, scope: !8129)
!8135 = !DILocation(line: 2900, column: 10, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8118, file: !1, line: 2900, column: 10)
!8137 = !DILocation(line: 2900, column: 10, scope: !8118)
!8138 = !DILocation(line: 2902, column: 10, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8136, file: !1, line: 2900, column: 15)
!8140 = !DILocation(line: 2902, column: 14, scope: !8139)
!8141 = !DILocation(line: 2903, column: 15, scope: !8139)
!8142 = !DILocation(line: 2903, column: 61, scope: !8139)
!8143 = !DILocation(line: 2903, column: 9, scope: !8139)
!8144 = !DILocation(line: 2906, column: 16, scope: !8139)
!8145 = !DILocation(line: 2906, column: 10, scope: !8139)
!8146 = !DILocation(line: 2906, column: 14, scope: !8139)
!8147 = !DILocation(line: 2907, column: 9, scope: !8139)
!8148 = !DILocation(line: 2909, column: 5, scope: !8118)
!8149 = !DILocation(line: 2910, column: 3, scope: !8107)
!8150 = !DILocation(line: 2913, column: 9, scope: !1941)
!8151 = !DILocation(line: 2913, column: 55, scope: !1941)
!8152 = !DILocation(line: 2913, column: 58, scope: !1941)
!8153 = !DILocation(line: 2913, column: 3, scope: !1941)
!8154 = !DILocation(line: 2914, column: 1, scope: !1941)
!8155 = !DILocation(line: 2914, column: 1, scope: !8156)
!8156 = !DILexicalBlockFile(scope: !1941, file: !1, discriminator: 1)
!8157 = !DILocalVariable(name: "conn", arg: 1, scope: !1914, file: !1, line: 279, type: !565)
!8158 = !DILocation(line: 279, column: 55, scope: !1914)
!8159 = !DILocalVariable(name: "proxy", arg: 2, scope: !1914, file: !1, line: 279, type: !226)
!8160 = !DILocation(line: 279, column: 66, scope: !1914)
!8161 = !DILocalVariable(name: "size", scope: !1914, file: !1, line: 281, type: !158)
!8162 = !DILocation(line: 281, column: 10, scope: !1914)
!8163 = !DILocalVariable(name: "authorization", scope: !1914, file: !1, line: 282, type: !230)
!8164 = !DILocation(line: 282, column: 9, scope: !1914)
!8165 = !DILocalVariable(name: "data", scope: !1914, file: !1, line: 283, type: !559)
!8166 = !DILocation(line: 283, column: 21, scope: !1914)
!8167 = !DILocation(line: 283, column: 28, scope: !1914)
!8168 = !DILocation(line: 283, column: 34, scope: !1914)
!8169 = !DILocalVariable(name: "userp", scope: !1914, file: !1, line: 284, type: !1562)
!8170 = !DILocation(line: 284, column: 10, scope: !1914)
!8171 = !DILocalVariable(name: "user", scope: !1914, file: !1, line: 285, type: !716)
!8172 = !DILocation(line: 285, column: 15, scope: !1914)
!8173 = !DILocalVariable(name: "pwd", scope: !1914, file: !1, line: 286, type: !716)
!8174 = !DILocation(line: 286, column: 15, scope: !1914)
!8175 = !DILocalVariable(name: "result", scope: !1914, file: !1, line: 287, type: !569)
!8176 = !DILocation(line: 287, column: 12, scope: !1914)
!8177 = !DILocation(line: 289, column: 6, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 289, column: 6)
!8179 = !DILocation(line: 289, column: 6, scope: !1914)
!8180 = !DILocation(line: 290, column: 14, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8178, file: !1, line: 289, column: 13)
!8182 = !DILocation(line: 290, column: 20, scope: !8181)
!8183 = !DILocation(line: 290, column: 29, scope: !8181)
!8184 = !DILocation(line: 290, column: 11, scope: !8181)
!8185 = !DILocation(line: 291, column: 12, scope: !8181)
!8186 = !DILocation(line: 291, column: 18, scope: !8181)
!8187 = !DILocation(line: 291, column: 29, scope: !8181)
!8188 = !DILocation(line: 291, column: 10, scope: !8181)
!8189 = !DILocation(line: 292, column: 11, scope: !8181)
!8190 = !DILocation(line: 292, column: 17, scope: !8181)
!8191 = !DILocation(line: 292, column: 28, scope: !8181)
!8192 = !DILocation(line: 292, column: 9, scope: !8181)
!8193 = !DILocation(line: 293, column: 3, scope: !8181)
!8194 = !DILocation(line: 295, column: 14, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8178, file: !1, line: 294, column: 8)
!8196 = !DILocation(line: 295, column: 20, scope: !8195)
!8197 = !DILocation(line: 295, column: 29, scope: !8195)
!8198 = !DILocation(line: 295, column: 11, scope: !8195)
!8199 = !DILocation(line: 296, column: 12, scope: !8195)
!8200 = !DILocation(line: 296, column: 18, scope: !8195)
!8201 = !DILocation(line: 296, column: 10, scope: !8195)
!8202 = !DILocation(line: 297, column: 11, scope: !8195)
!8203 = !DILocation(line: 297, column: 17, scope: !8195)
!8204 = !DILocation(line: 297, column: 9, scope: !8195)
!8205 = !DILocation(line: 300, column: 12, scope: !1914)
!8206 = !DILocation(line: 300, column: 18, scope: !1914)
!8207 = !DILocation(line: 300, column: 24, scope: !1914)
!8208 = !DILocation(line: 300, column: 32, scope: !1914)
!8209 = !DILocation(line: 300, column: 32, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !1914, file: !1, discriminator: 1)
!8211 = !DILocation(line: 300, column: 32, scope: !8212)
!8212 = !DILexicalBlockFile(scope: !1914, file: !1, discriminator: 2)
!8213 = !DILocation(line: 300, column: 32, scope: !8214)
!8214 = !DILexicalBlockFile(scope: !1914, file: !1, discriminator: 3)
!8215 = !DILocation(line: 301, column: 21, scope: !1914)
!8216 = !DILocation(line: 301, column: 27, scope: !1914)
!8217 = !DILocation(line: 300, column: 3, scope: !8214)
!8218 = !DILocation(line: 303, column: 31, scope: !1914)
!8219 = !DILocation(line: 304, column: 31, scope: !1914)
!8220 = !DILocation(line: 304, column: 37, scope: !1914)
!8221 = !DILocation(line: 304, column: 43, scope: !1914)
!8222 = !DILocation(line: 304, column: 58, scope: !1914)
!8223 = !DILocation(line: 304, column: 64, scope: !1914)
!8224 = !DILocation(line: 304, column: 70, scope: !1914)
!8225 = !DILocation(line: 304, column: 51, scope: !1914)
!8226 = !DILocation(line: 303, column: 12, scope: !1914)
!8227 = !DILocation(line: 303, column: 10, scope: !1914)
!8228 = !DILocation(line: 306, column: 6, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 306, column: 6)
!8230 = !DILocation(line: 306, column: 6, scope: !1914)
!8231 = !DILocation(line: 307, column: 12, scope: !8229)
!8232 = !DILocation(line: 307, column: 5, scope: !8229)
!8233 = !DILocation(line: 309, column: 7, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 309, column: 6)
!8235 = !DILocation(line: 309, column: 6, scope: !1914)
!8236 = !DILocation(line: 310, column: 5, scope: !8234)
!8237 = !DILocation(line: 312, column: 3, scope: !1914)
!8238 = !DILocation(line: 314, column: 20, scope: !1914)
!8239 = !DILocation(line: 315, column: 20, scope: !1914)
!8240 = !DILocation(line: 313, column: 12, scope: !1914)
!8241 = !DILocation(line: 313, column: 4, scope: !1914)
!8242 = !DILocation(line: 313, column: 10, scope: !1914)
!8243 = !DILocation(line: 316, column: 3, scope: !1914)
!8244 = !DILocation(line: 317, column: 8, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 317, column: 6)
!8246 = !DILocation(line: 317, column: 7, scope: !8245)
!8247 = !DILocation(line: 317, column: 6, scope: !1914)
!8248 = !DILocation(line: 318, column: 5, scope: !8245)
!8249 = !DILocation(line: 320, column: 3, scope: !1914)
!8250 = !DILocation(line: 321, column: 1, scope: !1914)

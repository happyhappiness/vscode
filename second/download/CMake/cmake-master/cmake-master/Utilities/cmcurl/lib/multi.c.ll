; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmcurl/lib/multi.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Curl_easy = type { %struct.Curl_easy*, %struct.Curl_easy*, %struct.connectdata*, i32, i32, %struct.Curl_message, [5 x i32], i32, %struct.Names, %struct.Curl_multi*, %struct.Curl_multi*, %struct.Curl_share*, %struct.SingleRequest, %struct.UserDefined, %struct.DynamicStatic, %struct.CookieInfo*, %struct.Progress, %struct.UrlState, %struct.WildcardData, %struct.PureInfo, %struct.curl_tlssessioninfo, i32 }
%struct.connectdata = type { %struct.Curl_easy*, %struct.Curl_chunker, i32 (i8*, i32)*, i8*, i8, i64, %struct.Curl_dns_entry*, %struct.Curl_addrinfo*, [2 x %struct.Curl_addrinfo*], [46 x i8], i32, i32, %struct.hostname, i8*, %struct.hostname, %struct.proxy_info, %struct.proxy_info, i64, i32, i32, i16, [46 x i8], i64, [46 x i8], i64, i8*, i8*, i8*, i8*, i32, i32, %struct.timeval, %struct.timeval, [2 x i32], [2 x i32], [2 x i8], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x i64 (%struct.connectdata*, i32, i8*, i64, i32*)*], [2 x %struct.ssl_connect_data], [2 x %struct.ssl_connect_data], %struct.ssl_primary_config, %struct.ssl_primary_config, i8, %struct.ConnectBits, %struct.timeval, i32, i64, %struct.Curl_handler*, %struct.Curl_handler*, i64, i32, i32, %struct.dynamically_allocated_data, i8, i8, %struct.curl_llist, %struct.curl_llist, i8*, i64, i64, i32 (i8*, i64, i32)*, i8*, [256 x i8], i8*, i32, i32, %union.anon, i32, i32, i8*, i16, i32, [2 x i32], %struct.connectbundle*, i32 }
%struct.Curl_chunker = type { [17 x i8], i32, i32, i64, i64 }
%struct.Curl_dns_entry = type { %struct.Curl_addrinfo*, i64, i64 }
%struct.Curl_addrinfo = type { i32, i32, i32, i32, i32, i8*, %struct.sockaddr*, %struct.Curl_addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.hostname = type { i8*, i8*, i8*, i8* }
%struct.proxy_info = type { %struct.hostname, i64, i32, i8*, i8* }
%struct.ssl_connect_data = type { i8, i32, i32 }
%struct.ssl_primary_config = type { i64, i64, i8, i8, i8, i8*, i8*, i8*, i8*, i8*, i8*, i8 }
%struct.ConnectBits = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8 }
%struct.timeval = type { i64, i64 }
%struct.Curl_handler = type { i8*, i32 (%struct.connectdata*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i1)*, i32 (%struct.Curl_easy*, %struct.connectdata*, i64*, i8*)*, i64, i32, i32 }
%struct.dynamically_allocated_data = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.curl_llist = type { %struct.curl_llist_element*, %struct.curl_llist_element*, void (i8*, i8*)*, i64 }
%struct.curl_llist_element = type { i8*, %struct.curl_llist_element*, %struct.curl_llist_element* }
%union.anon = type { %struct.ftp_conn }
%struct.ftp_conn = type { %struct.pingpong, i8*, i8**, i32, i32, i8*, i8, i8, i8, i8, i8, i8*, i8, i32, i32, i32, i32, i32, i64, i8*, i64, i8*, i16 }
%struct.pingpong = type { i8*, i64, i64, i8*, i8, i8*, i64, i64, %struct.timeval, i64, %struct.connectdata*, i32 (%struct.connectdata*)*, i1 (%struct.connectdata*, i8*, i64, i32*)* }
%struct.connectbundle = type { i32, i64, %struct.curl_llist }
%struct.Curl_message = type { %struct.CURLMsg }
%struct.CURLMsg = type { i32, %struct.Curl_easy*, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.Names = type { %struct.curl_hash*, i32 }
%struct.curl_hash = type { %struct.curl_llist*, i64 (i8*, i64, i64)*, i64 (i8*, i64, i8*, i64)*, void (i8*)*, i32, i64 }
%struct.Curl_multi = type { i64, %struct.Curl_easy*, %struct.Curl_easy*, i32, i32, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i8*, i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)*, i8*, %struct.curl_hash, %struct.Curl_tree*, %struct.curl_hash, i64, i8, %struct.conncache, %struct.Curl_easy*, i64, i64, i64, i64, i64, i64, %struct.curl_llist, %struct.curl_llist, i32 (%struct.Curl_multi*, i64, i8*)*, i8*, %struct.timeval }
%struct.curl_pushheaders = type opaque
%struct.Curl_tree = type { %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree*, %struct.timeval, i8* }
%struct.conncache = type { %struct.curl_hash, i64, i64, %struct.timeval }
%struct.Curl_share = type { i32, i32, void (%struct.Curl_easy*, i32, i32, i8*)*, void (%struct.Curl_easy*, i32, i8*)*, i8*, %struct.curl_hash, %struct.CookieInfo*, %struct.curl_ssl_session*, i64, i64 }
%struct.curl_ssl_session = type { i8*, i8*, i8*, i8*, i64, i64, i32, i32, %struct.ssl_primary_config }
%struct.SingleRequest = type { i64, i64*, i64, i64*, i64, i64, i64, i64, %struct.timeval, %struct.timeval, i8, i32, i32, i8*, i64, i8*, i8*, i8*, i8*, i8, i64, i32, %struct.timeval, i32, i32, i32, i64, i64, i8*, i8*, i32, i32, i8, i8, i8, i8*, i8*, i64, i8*, i8, i8, i8, i8, i8* }
%struct.UserDefined = type { %struct._IO_FILE*, i8*, i8*, i64, i8*, i8*, i8*, i8*, i64, i64, i64, i64, i64, i32, i8, i8*, i32 (i8*, i64, i32)*, i64, i16, i32, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i64 (i8*, i64, i64, i8*)*, i32, i32, i32 (i8*, double, double, double, double)*, i32 (i8*, i64, i64, i64, i64)*, i32 (%struct.Curl_easy*, i32, i8*, i64, i8*)*, i32 (%struct.Curl_easy*, i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32 (i8*, i32, %struct.curl_sockaddr*)*, i8*, i32 (i8*, i32)*, i8*, i8*, i32 (i8*, i64)*, i32 (i8*, i64)*, i32 (i8*, i64)*, i8*, i8*, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64, i64, i64, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_httppost*, i8, i8, i8, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, %struct.curl_slist*, i32, i64, i32, i64, %struct.ssl_config_data, %struct.ssl_config_data, %struct.ssl_general_config, i32, i64, i64, i8*, %struct.curl_slist*, i64, i64, i32, i32, i32 (%struct.Curl_easy*, %struct.curl_khkey*, %struct.curl_khkey*, i32, i8*)*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i64, i8, i8, i64, i64, i8, [56 x i8*], i32, i64, i64, %struct.curl_slist*, i8, i32, i64, i8, i64 (i8*, i8*, i32)*, i64 (i8*)*, i32 (i8*, i8*, i8*)*, i8*, i64, i8, i64, i64, i8, i64, i8, i8, i8, i8, i64, i8, %struct.Curl_easy*, i8, i32, %struct.Curl_http2_dep*, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.curl_sockaddr = type { i32, i32, i32, i32, %struct.sockaddr }
%struct.curl_httppost = type { %struct.curl_httppost*, i8*, i64, i8*, i64, i8*, i64, i8*, %struct.curl_slist*, %struct.curl_httppost*, i64, i8*, i8*, i64 }
%struct.ssl_config_data = type { %struct.ssl_primary_config, i8, i8, i64, i8*, i8*, i32 (%struct.Curl_easy*, i8*, i8*)*, i8*, i8, i8, i8*, i8*, i8*, i8*, i8* }
%struct.ssl_general_config = type { i64 }
%struct.curl_khkey = type { i8*, i64, i32 }
%struct.curl_slist = type { i8*, %struct.curl_slist* }
%struct.Curl_http2_dep = type { %struct.Curl_http2_dep*, %struct.Curl_easy* }
%struct.DynamicStatic = type { i8*, i8, i8*, i8, %struct.curl_slist*, %struct.curl_slist* }
%struct.CookieInfo = type { %struct.Cookie*, i8*, i8, i64, i8 }
%struct.Cookie = type { %struct.Cookie*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8, i8*, i8*, i8, i8, i8 }
%struct.Progress = type { i64, i64, i64, i64, i64, i64, i8, i32, i32, double, i64, i64, double, double, double, double, double, double, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, i64, %struct.timeval, i64, [6 x i64], [6 x %struct.timeval], i32 }
%struct.UrlState = type { %struct.conncache*, i8, %struct.timeval, %struct.connectdata*, i8*, i64, i8*, [16385 x i8], i64, i8, i8*, i32, %struct.curl_ssl_session*, i64, i32, [3 x %struct.tempbuf], i8*, i8, i32, void (i32)*, i8, %struct.digestdata, %struct.digestdata, %struct.auth, %struct.auth, i8, i8*, %struct.timeval, %struct.Curl_tree, %struct.curl_llist, i8*, i8, i32, i8, i8, i8, i64, i8*, i8*, i8, i8, i8, i8*, i64, i64, i64, i64, i64, i64, i8, i64 (i8*, i64, i64, i8*)*, i8*, %struct.Curl_easy*, i8, i32 }
%struct.tempbuf = type { i8*, i64, i32 }
%struct.digestdata = type { i8*, i8*, i8*, i32, i8, i8*, i8*, i8*, i32 }
%struct.auth = type { i64, i64, i64, i8, i8, i8 }
%struct.WildcardData = type { i32, i8*, i8*, %struct.curl_llist, i8*, void (i8*)*, i8* }
%struct.PureInfo = type { i32, i32, i32, i64, i8, i64, i64, i64, i64, i64, i8*, i8*, [46 x i8], i64, [46 x i8], i64, i8*, i32, %struct.curl_certinfo }
%struct.curl_certinfo = type { i32, %struct.curl_slist** }
%struct.curl_tlssessioninfo = type { i32, i8* }
%struct.Curl_sh_entry = type { %struct.Curl_easy*, i32, i32, i8* }
%struct.fd_set = type { [16 x i64] }
%struct.curl_waitfd = type { i32, i16, i16 }
%struct.pollfd = type { i32, i16, i16 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@Curl_ccalloc = external global i8* (i64, i64)*, align 8
@Curl_cfree = external global void (i8*)*, align 8
@Curl_cmalloc = external global i8* (i64)*, align 8
@.str = private unnamed_addr constant [41 x i8] c"Internal error removing splay node = %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Internal error clearing splay node = %d\0A\00", align 1
@mstate.finit = internal constant [19 x void (%struct.Curl_easy*)*] [void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* @Curl_init_CONNECT, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null, void (%struct.Curl_easy*)* null], align 16
@.str.2 = private unnamed_addr constant [40 x i8] c"Connection #%ld to host %s left intact\0A\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"Connection cache is full, closing the oldest one.\0A\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Pipe broke: handle %p, url = %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"In state %d with no easy_conn, bail out!\0A\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Resolving timed out after %ld milliseconds\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"Connection timed out after %ld milliseconds\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"Operation timed out after %ld milliseconds with %ld out of %ld bytes received\00", align 1
@.str.9 = private unnamed_addr constant [67 x i8] c"Operation timed out after %ld milliseconds with %ld bytes received\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"Hostname '%s' was found in DNS cache\0A\00", align 1
@.str.11 = private unnamed_addr constant [46 x i8] c"Re-used connection seems dead, get a new one\0A\00", align 1
@multi_timeout.tv_zero = internal global %struct.timeval zeroinitializer, align 8
@update_timer.none = internal constant %struct.timeval zeroinitializer, align 8

; Function Attrs: nounwind uwtable
define %struct.Curl_multi* @Curl_multi_handle(i32 %hashsize, i32 %chashsize) #0 !dbg !1781 {
entry:
  %retval = alloca %struct.Curl_multi*, align 8
  %hashsize.addr = alloca i32, align 4
  %chashsize.addr = alloca i32, align 4
  %multi = alloca %struct.Curl_multi*, align 8
  store i32 %hashsize, i32* %hashsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hashsize.addr, metadata !1962, metadata !1963), !dbg !1964
  store i32 %chashsize, i32* %chashsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chashsize.addr, metadata !1965, metadata !1963), !dbg !1966
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi, metadata !1967, metadata !1963), !dbg !1968
  %0 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !1969
  %call = call i8* %0(i64 1, i64 480), !dbg !1969
  %1 = bitcast i8* %call to %struct.Curl_multi*, !dbg !1969
  store %struct.Curl_multi* %1, %struct.Curl_multi** %multi, align 8, !dbg !1968
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1970
  %tobool = icmp ne %struct.Curl_multi* %2, null, !dbg !1970
  br i1 %tobool, label %if.end, label %if.then, !dbg !1972

if.then:                                          ; preds = %entry
  store %struct.Curl_multi* null, %struct.Curl_multi** %retval, align 8, !dbg !1973
  br label %return, !dbg !1973

if.end:                                           ; preds = %entry
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1974
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %3, i32 0, i32 0, !dbg !1975
  store i64 764702, i64* %type, align 8, !dbg !1976
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1977
  %hostcache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %4, i32 0, i32 11, !dbg !1979
  %call1 = call i32 @Curl_mk_dnscache(%struct.curl_hash* %hostcache), !dbg !1980
  %tobool2 = icmp ne i32 %call1, 0, !dbg !1980
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !1981

if.then3:                                         ; preds = %if.end
  br label %error, !dbg !1982

if.end4:                                          ; preds = %if.end
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1983
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %5, i32 0, i32 13, !dbg !1985
  %6 = load i32, i32* %hashsize.addr, align 4, !dbg !1986
  %call5 = call i32 @sh_init(%struct.curl_hash* %sockhash, i32 %6), !dbg !1987
  %tobool6 = icmp ne i32 %call5, 0, !dbg !1987
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !1988

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !1989

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1990
  %conn_cache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %7, i32 0, i32 16, !dbg !1992
  %8 = load i32, i32* %chashsize.addr, align 4, !dbg !1993
  %call9 = call i32 @Curl_conncache_init(%struct.conncache* %conn_cache, i32 %8), !dbg !1994
  %tobool10 = icmp ne i32 %call9, 0, !dbg !1994
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !1995

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !1996

if.end12:                                         ; preds = %if.end8
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !1997
  %msglist = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %9, i32 0, i32 5, !dbg !1998
  call void @Curl_llist_init(%struct.curl_llist* %msglist, void (i8*, i8*)* @multi_freeamsg), !dbg !1999
  %10 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2000
  %pending = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %10, i32 0, i32 6, !dbg !2001
  call void @Curl_llist_init(%struct.curl_llist* %pending, void (i8*, i8*)* @multi_freeamsg), !dbg !2002
  %call13 = call %struct.Curl_easy* @curl_easy_init(), !dbg !2003
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2004
  %closure_handle = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %11, i32 0, i32 17, !dbg !2005
  store %struct.Curl_easy* %call13, %struct.Curl_easy** %closure_handle, align 8, !dbg !2006
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2007
  %closure_handle14 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %12, i32 0, i32 17, !dbg !2009
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle14, align 8, !dbg !2009
  %tobool15 = icmp ne %struct.Curl_easy* %13, null, !dbg !2007
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !2010

if.then16:                                        ; preds = %if.end12
  br label %error, !dbg !2011

if.end17:                                         ; preds = %if.end12
  %14 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2012
  %15 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2013
  %closure_handle18 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %15, i32 0, i32 17, !dbg !2014
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle18, align 8, !dbg !2014
  %multi19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 9, !dbg !2015
  store %struct.Curl_multi* %14, %struct.Curl_multi** %multi19, align 8, !dbg !2016
  %17 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2017
  %conn_cache20 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %17, i32 0, i32 16, !dbg !2018
  %18 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2019
  %closure_handle21 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %18, i32 0, i32 17, !dbg !2020
  %19 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle21, align 8, !dbg !2020
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %19, i32 0, i32 17, !dbg !2021
  %conn_cache22 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !2022
  store %struct.conncache* %conn_cache20, %struct.conncache** %conn_cache22, align 8, !dbg !2023
  %20 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2024
  %max_pipeline_length = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %20, i32 0, i32 21, !dbg !2025
  store i64 5, i64* %max_pipeline_length, align 8, !dbg !2026
  %21 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2027
  %maxconnects = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %21, i32 0, i32 18, !dbg !2028
  store i64 -1, i64* %maxconnects, align 8, !dbg !2029
  %22 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2030
  store %struct.Curl_multi* %22, %struct.Curl_multi** %retval, align 8, !dbg !2031
  br label %return, !dbg !2031

error:                                            ; preds = %if.then16, %if.then11, %if.then7, %if.then3
  %23 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2032
  %sockhash23 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %23, i32 0, i32 13, !dbg !2033
  call void @Curl_hash_destroy(%struct.curl_hash* %sockhash23), !dbg !2034
  %24 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2035
  %hostcache24 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %24, i32 0, i32 11, !dbg !2036
  call void @Curl_hash_destroy(%struct.curl_hash* %hostcache24), !dbg !2037
  %25 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2038
  %conn_cache25 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %25, i32 0, i32 16, !dbg !2039
  call void @Curl_conncache_destroy(%struct.conncache* %conn_cache25), !dbg !2040
  %26 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2041
  %closure_handle26 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %26, i32 0, i32 17, !dbg !2042
  %27 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle26, align 8, !dbg !2042
  %call27 = call i32 @Curl_close(%struct.Curl_easy* %27), !dbg !2043
  %28 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2044
  %closure_handle28 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %28, i32 0, i32 17, !dbg !2045
  store %struct.Curl_easy* null, %struct.Curl_easy** %closure_handle28, align 8, !dbg !2046
  %29 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2047
  %msglist29 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %29, i32 0, i32 5, !dbg !2048
  call void @Curl_llist_destroy(%struct.curl_llist* %msglist29, i8* null), !dbg !2049
  %30 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2050
  %pending30 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %30, i32 0, i32 6, !dbg !2051
  call void @Curl_llist_destroy(%struct.curl_llist* %pending30, i8* null), !dbg !2052
  %31 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2053
  %32 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2053
  %33 = bitcast %struct.Curl_multi* %32 to i8*, !dbg !2053
  call void %31(i8* %33), !dbg !2053
  store %struct.Curl_multi* null, %struct.Curl_multi** %retval, align 8, !dbg !2054
  br label %return, !dbg !2054

return:                                           ; preds = %error, %if.end17, %if.then
  %34 = load %struct.Curl_multi*, %struct.Curl_multi** %retval, align 8, !dbg !2055
  ret %struct.Curl_multi* %34, !dbg !2055
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @Curl_mk_dnscache(%struct.curl_hash*) #2

; Function Attrs: nounwind uwtable
define internal i32 @sh_init(%struct.curl_hash* %hash, i32 %hashsize) #0 !dbg !1878 {
entry:
  %hash.addr = alloca %struct.curl_hash*, align 8
  %hashsize.addr = alloca i32, align 4
  store %struct.curl_hash* %hash, %struct.curl_hash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_hash** %hash.addr, metadata !2056, metadata !1963), !dbg !2057
  store i32 %hashsize, i32* %hashsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hashsize.addr, metadata !2058, metadata !1963), !dbg !2059
  %0 = load %struct.curl_hash*, %struct.curl_hash** %hash.addr, align 8, !dbg !2060
  %1 = load i32, i32* %hashsize.addr, align 4, !dbg !2061
  %call = call i32 @Curl_hash_init(%struct.curl_hash* %0, i32 %1, i64 (i8*, i64, i64)* @hash_fd, i64 (i8*, i64, i8*, i64)* @fd_key_compare, void (i8*)* @sh_freeentry), !dbg !2062
  ret i32 %call, !dbg !2063
}

declare i32 @Curl_conncache_init(%struct.conncache*, i32) #2

declare void @Curl_llist_init(%struct.curl_llist*, void (i8*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal void @multi_freeamsg(i8* %a, i8* %b) #0 !dbg !1884 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !2064, metadata !1963), !dbg !2065
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !2066, metadata !1963), !dbg !2067
  %0 = load i8*, i8** %a.addr, align 8, !dbg !2068
  %1 = load i8*, i8** %b.addr, align 8, !dbg !2069
  ret void, !dbg !2070
}

declare %struct.Curl_easy* @curl_easy_init() #2

declare void @Curl_hash_destroy(%struct.curl_hash*) #2

declare void @Curl_conncache_destroy(%struct.conncache*) #2

declare i32 @Curl_close(%struct.Curl_easy*) #2

declare void @Curl_llist_destroy(%struct.curl_llist*, i8*) #2

; Function Attrs: nounwind uwtable
define %struct.Curl_multi* @curl_multi_init() #0 !dbg !1785 {
entry:
  %call = call %struct.Curl_multi* @Curl_multi_handle(i32 911, i32 97), !dbg !2071
  ret %struct.Curl_multi* %call, !dbg !2072
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_add_handle(%struct.Curl_multi* %multi, %struct.Curl_easy* %data) #0 !dbg !1788 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %global = alloca %struct.curl_hash*, align 8
  %last = alloca %struct.Curl_easy*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !2073, metadata !1963), !dbg !2074
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2075, metadata !1963), !dbg !2076
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2077
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !2077
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !2077

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2079
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 0, !dbg !2079
  %2 = load i64, i64* %type, align 8, !dbg !2079
  %cmp = icmp eq i64 %2, 764702, !dbg !2079
  br i1 %cmp, label %if.end, label %if.then, !dbg !2081

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !2082
  br label %return, !dbg !2082

if.end:                                           ; preds = %land.lhs.true
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2083
  %tobool1 = icmp ne %struct.Curl_easy* %3, null, !dbg !2083
  br i1 %tobool1, label %land.lhs.true2, label %if.then4, !dbg !2083

land.lhs.true2:                                   ; preds = %if.end
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2085
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 21, !dbg !2085
  %5 = load i32, i32* %magic, align 8, !dbg !2085
  %cmp3 = icmp eq i32 %5, -1059136595, !dbg !2085
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !2087

if.then4:                                         ; preds = %land.lhs.true2, %if.end
  store i32 2, i32* %retval, align 4, !dbg !2088
  br label %return, !dbg !2088

if.end5:                                          ; preds = %land.lhs.true2
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2089
  %multi6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 9, !dbg !2091
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi6, align 8, !dbg !2091
  %tobool7 = icmp ne %struct.Curl_multi* %7, null, !dbg !2089
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !2092

if.then8:                                         ; preds = %if.end5
  store i32 7, i32* %retval, align 4, !dbg !2093
  br label %return, !dbg !2093

if.end9:                                          ; preds = %if.end5
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2094
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 17, !dbg !2095
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 29, !dbg !2096
  call void @Curl_llist_init(%struct.curl_llist* %timeoutlist, void (i8*, i8*)* @multi_freetimeout), !dbg !2097
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2098
  call void @mstate(%struct.Curl_easy* %9, i32 0), !dbg !2098
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2099
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %10, i32 0, i32 13, !dbg !2101
  %global_dns_cache = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 117, !dbg !2102
  %11 = load i8, i8* %global_dns_cache, align 1, !dbg !2102
  %tobool10 = trunc i8 %11 to i1, !dbg !2102
  br i1 %tobool10, label %land.lhs.true11, label %if.else, !dbg !2103

land.lhs.true11:                                  ; preds = %if.end9
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2104
  %dns = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %12, i32 0, i32 8, !dbg !2105
  %hostcachetype = getelementptr inbounds %struct.Names, %struct.Names* %dns, i32 0, i32 1, !dbg !2106
  %13 = load i32, i32* %hostcachetype, align 8, !dbg !2106
  %cmp12 = icmp ne i32 %13, 1, !dbg !2107
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !2108

if.then13:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata %struct.curl_hash** %global, metadata !2110, metadata !1963), !dbg !2112
  %call = call %struct.curl_hash* @Curl_global_host_cache_init(), !dbg !2113
  store %struct.curl_hash* %call, %struct.curl_hash** %global, align 8, !dbg !2112
  %14 = load %struct.curl_hash*, %struct.curl_hash** %global, align 8, !dbg !2114
  %tobool14 = icmp ne %struct.curl_hash* %14, null, !dbg !2114
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !2116

if.then15:                                        ; preds = %if.then13
  %15 = load %struct.curl_hash*, %struct.curl_hash** %global, align 8, !dbg !2117
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2119
  %dns16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 8, !dbg !2120
  %hostcache = getelementptr inbounds %struct.Names, %struct.Names* %dns16, i32 0, i32 0, !dbg !2121
  store %struct.curl_hash* %15, %struct.curl_hash** %hostcache, align 8, !dbg !2122
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2123
  %dns17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 8, !dbg !2124
  %hostcachetype18 = getelementptr inbounds %struct.Names, %struct.Names* %dns17, i32 0, i32 1, !dbg !2125
  store i32 1, i32* %hostcachetype18, align 8, !dbg !2126
  br label %if.end19, !dbg !2127

if.end19:                                         ; preds = %if.then15, %if.then13
  br label %if.end33, !dbg !2128

if.else:                                          ; preds = %land.lhs.true11, %if.end9
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2129
  %dns20 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 8, !dbg !2131
  %hostcache21 = getelementptr inbounds %struct.Names, %struct.Names* %dns20, i32 0, i32 0, !dbg !2132
  %19 = load %struct.curl_hash*, %struct.curl_hash** %hostcache21, align 8, !dbg !2132
  %tobool22 = icmp ne %struct.curl_hash* %19, null, !dbg !2129
  br i1 %tobool22, label %lor.lhs.false, label %if.then26, !dbg !2133

lor.lhs.false:                                    ; preds = %if.else
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2134
  %dns23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 8, !dbg !2135
  %hostcachetype24 = getelementptr inbounds %struct.Names, %struct.Names* %dns23, i32 0, i32 1, !dbg !2136
  %21 = load i32, i32* %hostcachetype24, align 8, !dbg !2136
  %cmp25 = icmp eq i32 %21, 0, !dbg !2137
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !2138

if.then26:                                        ; preds = %lor.lhs.false, %if.else
  %22 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2140
  %hostcache27 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %22, i32 0, i32 11, !dbg !2142
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2143
  %dns28 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 8, !dbg !2144
  %hostcache29 = getelementptr inbounds %struct.Names, %struct.Names* %dns28, i32 0, i32 0, !dbg !2145
  store %struct.curl_hash* %hostcache27, %struct.curl_hash** %hostcache29, align 8, !dbg !2146
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2147
  %dns30 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 8, !dbg !2148
  %hostcachetype31 = getelementptr inbounds %struct.Names, %struct.Names* %dns30, i32 0, i32 1, !dbg !2149
  store i32 2, i32* %hostcachetype31, align 8, !dbg !2150
  br label %if.end32, !dbg !2151

if.end32:                                         ; preds = %if.then26, %lor.lhs.false
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end19
  %25 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2152
  %conn_cache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %25, i32 0, i32 16, !dbg !2153
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2154
  %state34 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 17, !dbg !2155
  %conn_cache35 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state34, i32 0, i32 0, !dbg !2156
  store %struct.conncache* %conn_cache, %struct.conncache** %conn_cache35, align 8, !dbg !2157
  %27 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2158
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %27, i32 0, i32 0, !dbg !2159
  store %struct.Curl_easy* null, %struct.Curl_easy** %next, align 8, !dbg !2160
  %28 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2161
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %28, i32 0, i32 1, !dbg !2163
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !2163
  %tobool36 = icmp ne %struct.Curl_easy* %29, null, !dbg !2161
  br i1 %tobool36, label %if.then37, label %if.else40, !dbg !2164

if.then37:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %last, metadata !2165, metadata !1963), !dbg !2167
  %30 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2168
  %easylp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %30, i32 0, i32 2, !dbg !2169
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %easylp, align 8, !dbg !2169
  store %struct.Curl_easy* %31, %struct.Curl_easy** %last, align 8, !dbg !2167
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2170
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %last, align 8, !dbg !2171
  %next38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 0, !dbg !2172
  store %struct.Curl_easy* %32, %struct.Curl_easy** %next38, align 8, !dbg !2173
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %last, align 8, !dbg !2174
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2175
  %prev = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 1, !dbg !2176
  store %struct.Curl_easy* %34, %struct.Curl_easy** %prev, align 8, !dbg !2177
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2178
  %37 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2179
  %easylp39 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %37, i32 0, i32 2, !dbg !2180
  store %struct.Curl_easy* %36, %struct.Curl_easy** %easylp39, align 8, !dbg !2181
  br label %if.end44, !dbg !2182

if.else40:                                        ; preds = %if.end33
  %38 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2183
  %prev41 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %38, i32 0, i32 1, !dbg !2185
  store %struct.Curl_easy* null, %struct.Curl_easy** %prev41, align 8, !dbg !2186
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2187
  %40 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2188
  %easyp42 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %40, i32 0, i32 1, !dbg !2189
  store %struct.Curl_easy* %39, %struct.Curl_easy** %easyp42, align 8, !dbg !2190
  %41 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2191
  %easylp43 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %41, i32 0, i32 2, !dbg !2192
  store %struct.Curl_easy* %39, %struct.Curl_easy** %easylp43, align 8, !dbg !2193
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %if.then37
  %42 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2194
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2195
  %multi45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %43, i32 0, i32 9, !dbg !2196
  store %struct.Curl_multi* %42, %struct.Curl_multi** %multi45, align 8, !dbg !2197
  %44 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2198
  call void @Curl_expire(%struct.Curl_easy* %44, i64 0), !dbg !2199
  %45 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2200
  %num_easy = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %45, i32 0, i32 3, !dbg !2201
  %46 = load i32, i32* %num_easy, align 8, !dbg !2202
  %inc = add nsw i32 %46, 1, !dbg !2202
  store i32 %inc, i32* %num_easy, align 8, !dbg !2202
  %47 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2203
  %num_alive = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %47, i32 0, i32 4, !dbg !2204
  %48 = load i32, i32* %num_alive, align 4, !dbg !2205
  %inc46 = add nsw i32 %48, 1, !dbg !2205
  store i32 %inc46, i32* %num_alive, align 4, !dbg !2205
  %49 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2206
  %timer_lastcall = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %49, i32 0, i32 28, !dbg !2207
  %50 = bitcast %struct.timeval* %timer_lastcall to i8*, !dbg !2208
  call void @llvm.memset.p0i8.i64(i8* %50, i8 0, i64 16, i32 8, i1 false), !dbg !2208
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2209
  %set47 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 13, !dbg !2210
  %timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set47, i32 0, i32 42, !dbg !2211
  %52 = load i64, i64* %timeout, align 8, !dbg !2211
  %53 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2212
  %closure_handle = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %53, i32 0, i32 17, !dbg !2213
  %54 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle, align 8, !dbg !2213
  %set48 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %54, i32 0, i32 13, !dbg !2214
  %timeout49 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set48, i32 0, i32 42, !dbg !2215
  store i64 %52, i64* %timeout49, align 8, !dbg !2216
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2217
  %set50 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %55, i32 0, i32 13, !dbg !2218
  %server_response_timeout = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set50, i32 0, i32 45, !dbg !2219
  %56 = load i64, i64* %server_response_timeout, align 8, !dbg !2219
  %57 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2220
  %closure_handle51 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %57, i32 0, i32 17, !dbg !2221
  %58 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle51, align 8, !dbg !2221
  %set52 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %58, i32 0, i32 13, !dbg !2222
  %server_response_timeout53 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set52, i32 0, i32 45, !dbg !2223
  store i64 %56, i64* %server_response_timeout53, align 8, !dbg !2224
  %59 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2225
  %call54 = call i32 @update_timer(%struct.Curl_multi* %59), !dbg !2226
  store i32 0, i32* %retval, align 4, !dbg !2227
  br label %return, !dbg !2227

return:                                           ; preds = %if.end44, %if.then8, %if.then4, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !2228
  ret i32 %60, !dbg !2228
}

; Function Attrs: nounwind uwtable
define internal void @multi_freetimeout(i8* %user, i8* %entryptr) #0 !dbg !1944 {
entry:
  %user.addr = alloca i8*, align 8
  %entryptr.addr = alloca i8*, align 8
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !2229, metadata !1963), !dbg !2230
  store i8* %entryptr, i8** %entryptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entryptr.addr, metadata !2231, metadata !1963), !dbg !2232
  %0 = load i8*, i8** %user.addr, align 8, !dbg !2233
  %1 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2234
  %2 = load i8*, i8** %entryptr.addr, align 8, !dbg !2234
  call void %1(i8* %2), !dbg !2234
  ret void, !dbg !2235
}

; Function Attrs: nounwind uwtable
define internal void @mstate(%struct.Curl_easy* %data, i32 %state) #0 !dbg !1885 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %state.addr = alloca i32, align 4
  %oldstate = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2236, metadata !1963), !dbg !2237
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !2238, metadata !1963), !dbg !2239
  call void @llvm.dbg.declare(metadata i32* %oldstate, metadata !2240, metadata !1963), !dbg !2241
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2242
  %mstate = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 3, !dbg !2243
  %1 = load i32, i32* %mstate, align 8, !dbg !2243
  store i32 %1, i32* %oldstate, align 4, !dbg !2241
  %2 = load i32, i32* %oldstate, align 4, !dbg !2244
  %3 = load i32, i32* %state.addr, align 4, !dbg !2246
  %cmp = icmp eq i32 %2, %3, !dbg !2247
  br i1 %cmp, label %if.then, label %if.end, !dbg !2248

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !2249

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %state.addr, align 4, !dbg !2250
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2251
  %mstate1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 3, !dbg !2252
  store i32 %4, i32* %mstate1, align 8, !dbg !2253
  %6 = load i32, i32* %state.addr, align 4, !dbg !2254
  %cmp2 = icmp eq i32 %6, 17, !dbg !2256
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2257

if.then3:                                         ; preds = %if.end
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2258
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 9, !dbg !2259
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2259
  %num_alive = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %8, i32 0, i32 4, !dbg !2260
  %9 = load i32, i32* %num_alive, align 4, !dbg !2261
  %dec = add nsw i32 %9, -1, !dbg !2261
  store i32 %dec, i32* %num_alive, align 4, !dbg !2261
  br label %if.end4, !dbg !2258

if.end4:                                          ; preds = %if.then3, %if.end
  %10 = load i32, i32* %state.addr, align 4, !dbg !2262
  %idxprom = zext i32 %10 to i64, !dbg !2264
  %arrayidx = getelementptr inbounds [19 x void (%struct.Curl_easy*)*], [19 x void (%struct.Curl_easy*)*]* @mstate.finit, i64 0, i64 %idxprom, !dbg !2264
  %11 = load void (%struct.Curl_easy*)*, void (%struct.Curl_easy*)** %arrayidx, align 8, !dbg !2264
  %tobool = icmp ne void (%struct.Curl_easy*)* %11, null, !dbg !2264
  br i1 %tobool, label %if.then5, label %if.end8, !dbg !2265

if.then5:                                         ; preds = %if.end4
  %12 = load i32, i32* %state.addr, align 4, !dbg !2266
  %idxprom6 = zext i32 %12 to i64, !dbg !2267
  %arrayidx7 = getelementptr inbounds [19 x void (%struct.Curl_easy*)*], [19 x void (%struct.Curl_easy*)*]* @mstate.finit, i64 0, i64 %idxprom6, !dbg !2267
  %13 = load void (%struct.Curl_easy*)*, void (%struct.Curl_easy*)** %arrayidx7, align 8, !dbg !2267
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2268
  call void %13(%struct.Curl_easy* %14), !dbg !2267
  br label %if.end8, !dbg !2267

if.end8:                                          ; preds = %if.then, %if.then5, %if.end4
  ret void, !dbg !2269
}

declare %struct.curl_hash* @Curl_global_host_cache_init() #2

; Function Attrs: nounwind uwtable
define void @Curl_expire(%struct.Curl_easy* %data, i64 %milli) #0 !dbg !1857 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %milli.addr = alloca i64, align 8
  %multi = alloca %struct.Curl_multi*, align 8
  %nowp = alloca %struct.timeval*, align 8
  %rc = alloca i32, align 4
  %set = alloca %struct.timeval, align 8
  %coerce = alloca %struct.timeval, align 8
  %diff = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2270, metadata !1963), !dbg !2271
  store i64 %milli, i64* %milli.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %milli.addr, metadata !2272, metadata !1963), !dbg !2273
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi, metadata !2274, metadata !1963), !dbg !2275
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2276
  %multi1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 9, !dbg !2277
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi1, align 8, !dbg !2277
  store %struct.Curl_multi* %1, %struct.Curl_multi** %multi, align 8, !dbg !2275
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowp, metadata !2278, metadata !1963), !dbg !2279
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2280
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 17, !dbg !2281
  %expiretime = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 27, !dbg !2282
  store %struct.timeval* %expiretime, %struct.timeval** %nowp, align 8, !dbg !2279
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !2283, metadata !1963), !dbg !2284
  call void @llvm.dbg.declare(metadata %struct.timeval* %set, metadata !2285, metadata !1963), !dbg !2286
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2287
  %tobool = icmp ne %struct.Curl_multi* %3, null, !dbg !2287
  br i1 %tobool, label %if.end, label %if.then, !dbg !2289

if.then:                                          ; preds = %entry
  br label %return, !dbg !2290

if.end:                                           ; preds = %entry
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !2291
  %4 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !2291
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0, !dbg !2291
  %6 = extractvalue { i64, i64 } %call, 0, !dbg !2291
  store i64 %6, i64* %5, align 8, !dbg !2291
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !2291
  %8 = extractvalue { i64, i64 } %call, 1, !dbg !2291
  store i64 %8, i64* %7, align 8, !dbg !2291
  %9 = bitcast %struct.timeval* %set to i8*, !dbg !2291
  %10 = bitcast %struct.timeval* %coerce to i8*, !dbg !2291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false), !dbg !2292
  %11 = load i64, i64* %milli.addr, align 8, !dbg !2294
  %div = sdiv i64 %11, 1000, !dbg !2295
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 0, !dbg !2296
  %12 = load i64, i64* %tv_sec, align 8, !dbg !2297
  %add = add nsw i64 %12, %div, !dbg !2297
  store i64 %add, i64* %tv_sec, align 8, !dbg !2297
  %13 = load i64, i64* %milli.addr, align 8, !dbg !2298
  %rem = srem i64 %13, 1000, !dbg !2299
  %mul = mul nsw i64 %rem, 1000, !dbg !2300
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !2301
  %14 = load i64, i64* %tv_usec, align 8, !dbg !2302
  %add2 = add nsw i64 %14, %mul, !dbg !2302
  store i64 %add2, i64* %tv_usec, align 8, !dbg !2302
  %tv_usec3 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !2303
  %15 = load i64, i64* %tv_usec3, align 8, !dbg !2303
  %cmp = icmp sge i64 %15, 1000000, !dbg !2305
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !2306

if.then4:                                         ; preds = %if.end
  %tv_sec5 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 0, !dbg !2307
  %16 = load i64, i64* %tv_sec5, align 8, !dbg !2309
  %inc = add nsw i64 %16, 1, !dbg !2309
  store i64 %inc, i64* %tv_sec5, align 8, !dbg !2309
  %tv_usec6 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !2310
  %17 = load i64, i64* %tv_usec6, align 8, !dbg !2311
  %sub = sub nsw i64 %17, 1000000, !dbg !2311
  store i64 %sub, i64* %tv_usec6, align 8, !dbg !2311
  br label %if.end7, !dbg !2312

if.end7:                                          ; preds = %if.then4, %if.end
  %18 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2313
  %tv_sec8 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0, !dbg !2315
  %19 = load i64, i64* %tv_sec8, align 8, !dbg !2315
  %tobool9 = icmp ne i64 %19, 0, !dbg !2313
  br i1 %tobool9, label %if.then12, label %lor.lhs.false, !dbg !2316

lor.lhs.false:                                    ; preds = %if.end7
  %20 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2317
  %tv_usec10 = getelementptr inbounds %struct.timeval, %struct.timeval* %20, i32 0, i32 1, !dbg !2319
  %21 = load i64, i64* %tv_usec10, align 8, !dbg !2319
  %tobool11 = icmp ne i64 %21, 0, !dbg !2317
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !2320

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !2321, metadata !1963), !dbg !2323
  %22 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2324
  %23 = bitcast %struct.timeval* %set to { i64, i64 }*, !dbg !2325
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0, !dbg !2325
  %25 = load i64, i64* %24, align 8, !dbg !2325
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1, !dbg !2325
  %27 = load i64, i64* %26, align 8, !dbg !2325
  %28 = bitcast %struct.timeval* %22 to { i64, i64 }*, !dbg !2325
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !2325
  %30 = load i64, i64* %29, align 8, !dbg !2325
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !2325
  %32 = load i64, i64* %31, align 8, !dbg !2325
  %call13 = call i64 @curlx_tvdiff(i64 %25, i64 %27, i64 %30, i64 %32), !dbg !2325
  store i64 %call13, i64* %diff, align 8, !dbg !2323
  %33 = load i64, i64* %diff, align 8, !dbg !2326
  %cmp14 = icmp sgt i64 %33, 0, !dbg !2328
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !2329

if.then15:                                        ; preds = %if.then12
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2330
  %state16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 17, !dbg !2332
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state16, i32 0, i32 29, !dbg !2333
  %call17 = call i32 @multi_addtimeout(%struct.curl_llist* %timeoutlist, %struct.timeval* %set), !dbg !2334
  br label %return, !dbg !2335

if.end18:                                         ; preds = %if.then12
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2336
  %state19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 17, !dbg !2337
  %timeoutlist20 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state19, i32 0, i32 29, !dbg !2338
  %36 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2339
  %call21 = call i32 @multi_addtimeout(%struct.curl_llist* %timeoutlist20, %struct.timeval* %36), !dbg !2340
  %37 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2341
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %37, i32 0, i32 12, !dbg !2342
  %38 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !2342
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2343
  %state22 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %39, i32 0, i32 17, !dbg !2344
  %timenode = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state22, i32 0, i32 28, !dbg !2345
  %40 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2346
  %timetree23 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %40, i32 0, i32 12, !dbg !2347
  %call24 = call i32 @Curl_splayremovebyaddr(%struct.Curl_tree* %38, %struct.Curl_tree* %timenode, %struct.Curl_tree** %timetree23), !dbg !2348
  store i32 %call24, i32* %rc, align 4, !dbg !2349
  %41 = load i32, i32* %rc, align 4, !dbg !2350
  %tobool25 = icmp ne i32 %41, 0, !dbg !2350
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !2352

if.then26:                                        ; preds = %if.end18
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2353
  %43 = load i32, i32* %rc, align 4, !dbg !2354
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %42, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i32 0, i32 0), i32 %43), !dbg !2355
  br label %if.end27, !dbg !2355

if.end27:                                         ; preds = %if.then26, %if.end18
  br label %if.end28, !dbg !2356

if.end28:                                         ; preds = %if.end27, %lor.lhs.false
  %44 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2357
  %45 = bitcast %struct.timeval* %44 to i8*, !dbg !2358
  %46 = bitcast %struct.timeval* %set to i8*, !dbg !2358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 16, i32 8, i1 false), !dbg !2358
  %47 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2359
  %48 = bitcast %struct.Curl_easy* %47 to i8*, !dbg !2359
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2360
  %state29 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %49, i32 0, i32 17, !dbg !2361
  %timenode30 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state29, i32 0, i32 28, !dbg !2362
  %payload = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %timenode30, i32 0, i32 5, !dbg !2363
  store i8* %48, i8** %payload, align 8, !dbg !2364
  %50 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2365
  %51 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2366
  %timetree31 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %51, i32 0, i32 12, !dbg !2367
  %52 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree31, align 8, !dbg !2367
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2368
  %state32 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %53, i32 0, i32 17, !dbg !2369
  %timenode33 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state32, i32 0, i32 28, !dbg !2370
  %54 = bitcast %struct.timeval* %50 to { i64, i64 }*, !dbg !2371
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %54, i32 0, i32 0, !dbg !2371
  %56 = load i64, i64* %55, align 8, !dbg !2371
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %54, i32 0, i32 1, !dbg !2371
  %58 = load i64, i64* %57, align 8, !dbg !2371
  %call34 = call %struct.Curl_tree* @Curl_splayinsert(i64 %56, i64 %58, %struct.Curl_tree* %52, %struct.Curl_tree* %timenode33), !dbg !2371
  %59 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2372
  %timetree35 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %59, i32 0, i32 12, !dbg !2373
  store %struct.Curl_tree* %call34, %struct.Curl_tree** %timetree35, align 8, !dbg !2374
  br label %return, !dbg !2375

return:                                           ; preds = %if.end28, %if.then15, %if.then
  ret void, !dbg !2376
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @update_timer(%struct.Curl_multi* %multi) #0 !dbg !1941 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %timeout_ms = alloca i64, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !2377, metadata !1963), !dbg !2378
  call void @llvm.dbg.declare(metadata i64* %timeout_ms, metadata !2379, metadata !1963), !dbg !2380
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2381
  %timer_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 26, !dbg !2383
  %1 = load i32 (%struct.Curl_multi*, i64, i8*)*, i32 (%struct.Curl_multi*, i64, i8*)** %timer_cb, align 8, !dbg !2383
  %tobool = icmp ne i32 (%struct.Curl_multi*, i64, i8*)* %1, null, !dbg !2381
  br i1 %tobool, label %if.end, label %if.then, !dbg !2384

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2385
  br label %return, !dbg !2385

if.end:                                           ; preds = %entry
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2386
  %call = call i32 @multi_timeout(%struct.Curl_multi* %2, i64* %timeout_ms), !dbg !2388
  %tobool1 = icmp ne i32 %call, 0, !dbg !2388
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !2389

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !2390
  br label %return, !dbg !2390

if.end3:                                          ; preds = %if.end
  %3 = load i64, i64* %timeout_ms, align 8, !dbg !2392
  %cmp = icmp slt i64 %3, 0, !dbg !2394
  br i1 %cmp, label %if.then4, label %if.end25, !dbg !2395

if.then4:                                         ; preds = %if.end3
  %4 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @update_timer.none, i32 0, i32 0), align 8, !dbg !2396
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2396
  %timer_lastcall = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %5, i32 0, i32 28, !dbg !2396
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall, i32 0, i32 0, !dbg !2396
  %6 = load i64, i64* %tv_sec, align 8, !dbg !2396
  %cmp5 = icmp slt i64 %4, %6, !dbg !2396
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !2399

cond.true:                                        ; preds = %if.then4
  br i1 true, label %if.then20, label %if.end24, !dbg !2400

cond.false:                                       ; preds = %if.then4
  %7 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @update_timer.none, i32 0, i32 0), align 8, !dbg !2402
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2402
  %timer_lastcall6 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %8, i32 0, i32 28, !dbg !2402
  %tv_sec7 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall6, i32 0, i32 0, !dbg !2402
  %9 = load i64, i64* %tv_sec7, align 8, !dbg !2402
  %cmp8 = icmp sgt i64 %7, %9, !dbg !2402
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !2402

cond.true9:                                       ; preds = %cond.false
  br i1 true, label %if.then20, label %if.end24, !dbg !2404

cond.false10:                                     ; preds = %cond.false
  %10 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @update_timer.none, i32 0, i32 1), align 8, !dbg !2406
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2406
  %timer_lastcall11 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %11, i32 0, i32 28, !dbg !2406
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall11, i32 0, i32 1, !dbg !2406
  %12 = load i64, i64* %tv_usec, align 8, !dbg !2406
  %cmp12 = icmp slt i64 %10, %12, !dbg !2406
  br i1 %cmp12, label %cond.true13, label %cond.false14, !dbg !2406

cond.true13:                                      ; preds = %cond.false10
  br i1 true, label %if.then20, label %if.end24, !dbg !2408

cond.false14:                                     ; preds = %cond.false10
  %13 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @update_timer.none, i32 0, i32 1), align 8, !dbg !2410
  %14 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2410
  %timer_lastcall15 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %14, i32 0, i32 28, !dbg !2410
  %tv_usec16 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall15, i32 0, i32 1, !dbg !2410
  %15 = load i64, i64* %tv_usec16, align 8, !dbg !2410
  %cmp17 = icmp sgt i64 %13, %15, !dbg !2410
  br i1 %cmp17, label %cond.true18, label %cond.false19, !dbg !2410

cond.true18:                                      ; preds = %cond.false14
  br i1 true, label %if.then20, label %if.end24, !dbg !2412

cond.false19:                                     ; preds = %cond.false14
  br i1 false, label %if.then20, label %if.end24, !dbg !2414

if.then20:                                        ; preds = %cond.false19, %cond.true18, %cond.true13, %cond.true9, %cond.true
  %16 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2416
  %timer_lastcall21 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %16, i32 0, i32 28, !dbg !2418
  %17 = bitcast %struct.timeval* %timer_lastcall21 to i8*, !dbg !2419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* bitcast (%struct.timeval* @update_timer.none to i8*), i64 16, i32 8, i1 false), !dbg !2419
  %18 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2420
  %timer_cb22 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %18, i32 0, i32 26, !dbg !2421
  %19 = load i32 (%struct.Curl_multi*, i64, i8*)*, i32 (%struct.Curl_multi*, i64, i8*)** %timer_cb22, align 8, !dbg !2421
  %20 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2422
  %21 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2423
  %timer_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %21, i32 0, i32 27, !dbg !2424
  %22 = load i8*, i8** %timer_userp, align 8, !dbg !2424
  %call23 = call i32 %19(%struct.Curl_multi* %20, i64 -1, i8* %22), !dbg !2420
  store i32 %call23, i32* %retval, align 4, !dbg !2425
  br label %return, !dbg !2425

if.end24:                                         ; preds = %cond.false19, %cond.true18, %cond.true13, %cond.true9, %cond.true
  store i32 0, i32* %retval, align 4, !dbg !2426
  br label %return, !dbg !2426

if.end25:                                         ; preds = %if.end3
  %23 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2427
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %23, i32 0, i32 12, !dbg !2427
  %24 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !2427
  %key = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %24, i32 0, i32 4, !dbg !2427
  %tv_sec26 = getelementptr inbounds %struct.timeval, %struct.timeval* %key, i32 0, i32 0, !dbg !2427
  %25 = load i64, i64* %tv_sec26, align 8, !dbg !2427
  %26 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2427
  %timer_lastcall27 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %26, i32 0, i32 28, !dbg !2427
  %tv_sec28 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall27, i32 0, i32 0, !dbg !2427
  %27 = load i64, i64* %tv_sec28, align 8, !dbg !2427
  %cmp29 = icmp slt i64 %25, %27, !dbg !2427
  br i1 %cmp29, label %cond.true30, label %cond.false31, !dbg !2427

cond.true30:                                      ; preds = %if.end25
  br label %cond.end57, !dbg !2429

cond.false31:                                     ; preds = %if.end25
  %28 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2431
  %timetree32 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %28, i32 0, i32 12, !dbg !2431
  %29 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree32, align 8, !dbg !2431
  %key33 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %29, i32 0, i32 4, !dbg !2431
  %tv_sec34 = getelementptr inbounds %struct.timeval, %struct.timeval* %key33, i32 0, i32 0, !dbg !2431
  %30 = load i64, i64* %tv_sec34, align 8, !dbg !2431
  %31 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2431
  %timer_lastcall35 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %31, i32 0, i32 28, !dbg !2431
  %tv_sec36 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall35, i32 0, i32 0, !dbg !2431
  %32 = load i64, i64* %tv_sec36, align 8, !dbg !2431
  %cmp37 = icmp sgt i64 %30, %32, !dbg !2431
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !2431

cond.true38:                                      ; preds = %cond.false31
  br label %cond.end55, !dbg !2433

cond.false39:                                     ; preds = %cond.false31
  %33 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2435
  %timetree40 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %33, i32 0, i32 12, !dbg !2435
  %34 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree40, align 8, !dbg !2435
  %key41 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %34, i32 0, i32 4, !dbg !2435
  %tv_usec42 = getelementptr inbounds %struct.timeval, %struct.timeval* %key41, i32 0, i32 1, !dbg !2435
  %35 = load i64, i64* %tv_usec42, align 8, !dbg !2435
  %36 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2435
  %timer_lastcall43 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %36, i32 0, i32 28, !dbg !2435
  %tv_usec44 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall43, i32 0, i32 1, !dbg !2435
  %37 = load i64, i64* %tv_usec44, align 8, !dbg !2435
  %cmp45 = icmp slt i64 %35, %37, !dbg !2435
  br i1 %cmp45, label %cond.true46, label %cond.false47, !dbg !2435

cond.true46:                                      ; preds = %cond.false39
  br label %cond.end, !dbg !2437

cond.false47:                                     ; preds = %cond.false39
  %38 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2439
  %timetree48 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %38, i32 0, i32 12, !dbg !2439
  %39 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree48, align 8, !dbg !2439
  %key49 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %39, i32 0, i32 4, !dbg !2439
  %tv_usec50 = getelementptr inbounds %struct.timeval, %struct.timeval* %key49, i32 0, i32 1, !dbg !2439
  %40 = load i64, i64* %tv_usec50, align 8, !dbg !2439
  %41 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2439
  %timer_lastcall51 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %41, i32 0, i32 28, !dbg !2439
  %tv_usec52 = getelementptr inbounds %struct.timeval, %struct.timeval* %timer_lastcall51, i32 0, i32 1, !dbg !2439
  %42 = load i64, i64* %tv_usec52, align 8, !dbg !2439
  %cmp53 = icmp sgt i64 %40, %42, !dbg !2439
  %cond = select i1 %cmp53, i32 1, i32 0, !dbg !2439
  br label %cond.end, !dbg !2439

cond.end:                                         ; preds = %cond.false47, %cond.true46
  %cond54 = phi i32 [ -1, %cond.true46 ], [ %cond, %cond.false47 ], !dbg !2441
  br label %cond.end55, !dbg !2441

cond.end55:                                       ; preds = %cond.end, %cond.true38
  %cond56 = phi i32 [ 1, %cond.true38 ], [ %cond54, %cond.end ], !dbg !2443
  br label %cond.end57, !dbg !2443

cond.end57:                                       ; preds = %cond.end55, %cond.true30
  %cond58 = phi i32 [ -1, %cond.true30 ], [ %cond56, %cond.end55 ], !dbg !2445
  %cmp59 = icmp eq i32 %cond58, 0, !dbg !2447
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !2445

if.then60:                                        ; preds = %cond.end57
  store i32 0, i32* %retval, align 4, !dbg !2448
  br label %return, !dbg !2448

if.end61:                                         ; preds = %cond.end57
  %43 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2449
  %timer_lastcall62 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %43, i32 0, i32 28, !dbg !2450
  %44 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2451
  %timetree63 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %44, i32 0, i32 12, !dbg !2452
  %45 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree63, align 8, !dbg !2452
  %key64 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %45, i32 0, i32 4, !dbg !2453
  %46 = bitcast %struct.timeval* %timer_lastcall62 to i8*, !dbg !2453
  %47 = bitcast %struct.timeval* %key64 to i8*, !dbg !2453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !2453
  %48 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2454
  %timer_cb65 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %48, i32 0, i32 26, !dbg !2455
  %49 = load i32 (%struct.Curl_multi*, i64, i8*)*, i32 (%struct.Curl_multi*, i64, i8*)** %timer_cb65, align 8, !dbg !2455
  %50 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2456
  %51 = load i64, i64* %timeout_ms, align 8, !dbg !2457
  %52 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2458
  %timer_userp66 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %52, i32 0, i32 27, !dbg !2459
  %53 = load i8*, i8** %timer_userp66, align 8, !dbg !2459
  %call67 = call i32 %49(%struct.Curl_multi* %50, i64 %51, i8* %53), !dbg !2454
  store i32 %call67, i32* %retval, align 4, !dbg !2460
  br label %return, !dbg !2460

return:                                           ; preds = %if.end61, %if.then60, %if.end24, %if.then20, %if.then2, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !2461
  ret i32 %54, !dbg !2461
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_remove_handle(%struct.Curl_multi* %multi, %struct.Curl_easy* %data) #0 !dbg !1792 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %easy = alloca %struct.Curl_easy*, align 8
  %premature = alloca i8, align 1
  %easy_owns_conn = alloca i8, align 1
  %e = alloca %struct.curl_llist_element*, align 8
  %msg = alloca %struct.Curl_message*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !2462, metadata !1963), !dbg !2463
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2464, metadata !1963), !dbg !2465
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %easy, metadata !2466, metadata !1963), !dbg !2467
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2468
  store %struct.Curl_easy* %0, %struct.Curl_easy** %easy, align 8, !dbg !2467
  call void @llvm.dbg.declare(metadata i8* %premature, metadata !2469, metadata !1963), !dbg !2470
  call void @llvm.dbg.declare(metadata i8* %easy_owns_conn, metadata !2471, metadata !1963), !dbg !2472
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %e, metadata !2473, metadata !1963), !dbg !2474
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2475
  %tobool = icmp ne %struct.Curl_multi* %1, null, !dbg !2475
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !2475

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2477
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %2, i32 0, i32 0, !dbg !2477
  %3 = load i64, i64* %type, align 8, !dbg !2477
  %cmp = icmp eq i64 %3, 764702, !dbg !2477
  br i1 %cmp, label %if.end, label %if.then, !dbg !2479

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !2480
  br label %return, !dbg !2480

if.end:                                           ; preds = %land.lhs.true
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2481
  %tobool1 = icmp ne %struct.Curl_easy* %4, null, !dbg !2481
  br i1 %tobool1, label %land.lhs.true2, label %if.then4, !dbg !2481

land.lhs.true2:                                   ; preds = %if.end
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2483
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %5, i32 0, i32 21, !dbg !2483
  %6 = load i32, i32* %magic, align 8, !dbg !2483
  %cmp3 = icmp eq i32 %6, -1059136595, !dbg !2483
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !2485

if.then4:                                         ; preds = %land.lhs.true2, %if.end
  store i32 2, i32* %retval, align 4, !dbg !2486
  br label %return, !dbg !2486

if.end5:                                          ; preds = %land.lhs.true2
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2487
  %multi6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 9, !dbg !2489
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi6, align 8, !dbg !2489
  %tobool7 = icmp ne %struct.Curl_multi* %8, null, !dbg !2487
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !2490

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !2491
  br label %return, !dbg !2491

if.end9:                                          ; preds = %if.end5
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2492
  %mstate = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 3, !dbg !2493
  %10 = load i32, i32* %mstate, align 8, !dbg !2493
  %cmp10 = icmp ult i32 %10, 17, !dbg !2494
  %cond = select i1 %cmp10, i32 1, i32 0, !dbg !2495
  %tobool11 = icmp ne i32 %cond, 0, !dbg !2495
  %frombool = zext i1 %tobool11 to i8, !dbg !2496
  store i8 %frombool, i8* %premature, align 1, !dbg !2496
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2497
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 2, !dbg !2498
  %12 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !2498
  %tobool12 = icmp ne %struct.connectdata* %12, null, !dbg !2497
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !2499

land.rhs:                                         ; preds = %if.end9
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2500
  %easy_conn13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 2, !dbg !2502
  %14 = load %struct.connectdata*, %struct.connectdata** %easy_conn13, align 8, !dbg !2502
  %data14 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %14, i32 0, i32 0, !dbg !2503
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data14, align 8, !dbg !2503
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !2504
  %cmp15 = icmp eq %struct.Curl_easy* %15, %16, !dbg !2505
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end9
  %17 = phi i1 [ false, %if.end9 ], [ %cmp15, %land.rhs ]
  %cond16 = select i1 %17, i32 1, i32 0, !dbg !2506
  %tobool17 = icmp ne i32 %cond16, 0, !dbg !2506
  %frombool18 = zext i1 %tobool17 to i8, !dbg !2508
  store i8 %frombool18, i8* %easy_owns_conn, align 1, !dbg !2508
  %18 = load i8, i8* %premature, align 1, !dbg !2509
  %tobool19 = trunc i8 %18 to i1, !dbg !2509
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2511

if.then20:                                        ; preds = %land.end
  %19 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2512
  %num_alive = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %19, i32 0, i32 4, !dbg !2514
  %20 = load i32, i32* %num_alive, align 4, !dbg !2515
  %dec = add nsw i32 %20, -1, !dbg !2515
  store i32 %dec, i32* %num_alive, align 4, !dbg !2515
  %21 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2516
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %21), !dbg !2517
  br label %if.end21, !dbg !2518

if.end21:                                         ; preds = %if.then20, %land.end
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2519
  %easy_conn22 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 2, !dbg !2521
  %23 = load %struct.connectdata*, %struct.connectdata** %easy_conn22, align 8, !dbg !2521
  %tobool23 = icmp ne %struct.connectdata* %23, null, !dbg !2519
  br i1 %tobool23, label %land.lhs.true24, label %if.end34, !dbg !2522

land.lhs.true24:                                  ; preds = %if.end21
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2523
  %mstate25 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 3, !dbg !2524
  %25 = load i32, i32* %mstate25, align 8, !dbg !2524
  %cmp26 = icmp ugt i32 %25, 9, !dbg !2525
  br i1 %cmp26, label %land.lhs.true27, label %if.end34, !dbg !2526

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2527
  %mstate28 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 3, !dbg !2528
  %27 = load i32, i32* %mstate28, align 8, !dbg !2528
  %cmp29 = icmp ult i32 %27, 17, !dbg !2529
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !2530

if.then30:                                        ; preds = %land.lhs.true27
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !2531
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2533
  %easy_conn31 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %29, i32 0, i32 2, !dbg !2534
  %30 = load %struct.connectdata*, %struct.connectdata** %easy_conn31, align 8, !dbg !2534
  %data32 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %30, i32 0, i32 0, !dbg !2535
  store %struct.Curl_easy* %28, %struct.Curl_easy** %data32, align 8, !dbg !2536
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2537
  %easy_conn33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 2, !dbg !2537
  %32 = load %struct.connectdata*, %struct.connectdata** %easy_conn33, align 8, !dbg !2537
  call void @Curl_conncontrol(%struct.connectdata* %32, i32 2), !dbg !2537
  store i8 1, i8* %easy_owns_conn, align 1, !dbg !2538
  br label %if.end34, !dbg !2539

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %land.lhs.true24, %if.end21
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2540
  call void @Curl_expire_clear(%struct.Curl_easy* %33), !dbg !2541
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2542
  %dns = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 8, !dbg !2544
  %hostcachetype = getelementptr inbounds %struct.Names, %struct.Names* %dns, i32 0, i32 1, !dbg !2545
  %35 = load i32, i32* %hostcachetype, align 8, !dbg !2545
  %cmp35 = icmp eq i32 %35, 2, !dbg !2546
  br i1 %cmp35, label %if.then36, label %if.end40, !dbg !2547

if.then36:                                        ; preds = %if.end34
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2548
  %dns37 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %36, i32 0, i32 8, !dbg !2550
  %hostcache = getelementptr inbounds %struct.Names, %struct.Names* %dns37, i32 0, i32 0, !dbg !2551
  store %struct.curl_hash* null, %struct.curl_hash** %hostcache, align 8, !dbg !2552
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2553
  %dns38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %37, i32 0, i32 8, !dbg !2554
  %hostcachetype39 = getelementptr inbounds %struct.Names, %struct.Names* %dns38, i32 0, i32 1, !dbg !2555
  store i32 0, i32* %hostcachetype39, align 8, !dbg !2556
  br label %if.end40, !dbg !2557

if.end40:                                         ; preds = %if.then36, %if.end34
  %38 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2558
  %easy_conn41 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %38, i32 0, i32 2, !dbg !2560
  %39 = load %struct.connectdata*, %struct.connectdata** %easy_conn41, align 8, !dbg !2560
  %tobool42 = icmp ne %struct.connectdata* %39, null, !dbg !2558
  br i1 %tobool42, label %if.then43, label %if.end50, !dbg !2561

if.then43:                                        ; preds = %if.end40
  %40 = load i8, i8* %easy_owns_conn, align 1, !dbg !2562
  %tobool44 = trunc i8 %40 to i1, !dbg !2562
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !2565

if.then45:                                        ; preds = %if.then43
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2566
  %easy_conn46 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %41, i32 0, i32 2, !dbg !2568
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2569
  %result = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 4, !dbg !2570
  %43 = load i32, i32* %result, align 4, !dbg !2570
  %44 = load i8, i8* %premature, align 1, !dbg !2571
  %tobool47 = trunc i8 %44 to i1, !dbg !2571
  %call = call i32 @multi_done(%struct.connectdata** %easy_conn46, i32 %43, i1 zeroext %tobool47), !dbg !2572
  br label %if.end49, !dbg !2573

if.else:                                          ; preds = %if.then43
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2574
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2575
  %easy_conn48 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 2, !dbg !2576
  %47 = load %struct.connectdata*, %struct.connectdata** %easy_conn48, align 8, !dbg !2576
  call void @Curl_getoff_all_pipelines(%struct.Curl_easy* %45, %struct.connectdata* %47), !dbg !2577
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then45
  br label %if.end50, !dbg !2578

if.end50:                                         ; preds = %if.end49, %if.end40
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2579
  %wildcard = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 18, !dbg !2580
  call void @Curl_wildcard_dtor(%struct.WildcardData* %wildcard), !dbg !2581
  %49 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2582
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %49, i32 0, i32 17, !dbg !2583
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 29, !dbg !2584
  call void @Curl_llist_destroy(%struct.curl_llist* %timeoutlist, i8* null), !dbg !2585
  %50 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2586
  %state51 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %50, i32 0, i32 17, !dbg !2587
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state51, i32 0, i32 0, !dbg !2588
  store %struct.conncache* null, %struct.conncache** %conn_cache, align 8, !dbg !2589
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2590
  %mstate52 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 3, !dbg !2591
  store i32 17, i32* %mstate52, align 8, !dbg !2592
  %52 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2593
  %53 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !2594
  call void @singlesocket(%struct.Curl_multi* %52, %struct.Curl_easy* %53), !dbg !2595
  %54 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2596
  %easy_conn53 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %54, i32 0, i32 2, !dbg !2598
  %55 = load %struct.connectdata*, %struct.connectdata** %easy_conn53, align 8, !dbg !2598
  %tobool54 = icmp ne %struct.connectdata* %55, null, !dbg !2596
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !2599

if.then55:                                        ; preds = %if.end50
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2600
  %easy_conn56 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %56, i32 0, i32 2, !dbg !2602
  %57 = load %struct.connectdata*, %struct.connectdata** %easy_conn56, align 8, !dbg !2602
  %data57 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %57, i32 0, i32 0, !dbg !2603
  store %struct.Curl_easy* null, %struct.Curl_easy** %data57, align 8, !dbg !2604
  %58 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2605
  %easy_conn58 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %58, i32 0, i32 2, !dbg !2606
  store %struct.connectdata* null, %struct.connectdata** %easy_conn58, align 8, !dbg !2607
  br label %if.end59, !dbg !2608

if.end59:                                         ; preds = %if.then55, %if.end50
  %59 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2609
  %multi60 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %59, i32 0, i32 9, !dbg !2610
  store %struct.Curl_multi* null, %struct.Curl_multi** %multi60, align 8, !dbg !2611
  %60 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2612
  %msglist = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %60, i32 0, i32 5, !dbg !2614
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %msglist, i32 0, i32 0, !dbg !2615
  %61 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !2615
  store %struct.curl_llist_element* %61, %struct.curl_llist_element** %e, align 8, !dbg !2616
  br label %for.cond, !dbg !2617

for.cond:                                         ; preds = %for.inc, %if.end59
  %62 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2618
  %tobool61 = icmp ne %struct.curl_llist_element* %62, null, !dbg !2621
  br i1 %tobool61, label %for.body, label %for.end, !dbg !2621

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Curl_message** %msg, metadata !2622, metadata !1963), !dbg !2624
  %63 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2625
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %63, i32 0, i32 0, !dbg !2626
  %64 = load i8*, i8** %ptr, align 8, !dbg !2626
  %65 = bitcast i8* %64 to %struct.Curl_message*, !dbg !2625
  store %struct.Curl_message* %65, %struct.Curl_message** %msg, align 8, !dbg !2624
  %66 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !2627
  %extmsg = getelementptr inbounds %struct.Curl_message, %struct.Curl_message* %66, i32 0, i32 0, !dbg !2629
  %easy_handle = getelementptr inbounds %struct.CURLMsg, %struct.CURLMsg* %extmsg, i32 0, i32 1, !dbg !2630
  %67 = load %struct.Curl_easy*, %struct.Curl_easy** %easy_handle, align 8, !dbg !2630
  %68 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !2631
  %cmp62 = icmp eq %struct.Curl_easy* %67, %68, !dbg !2632
  br i1 %cmp62, label %if.then63, label %if.end66, !dbg !2633

if.then63:                                        ; preds = %for.body
  %69 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2634
  %msglist64 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %69, i32 0, i32 5, !dbg !2636
  %70 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2637
  %call65 = call i32 @Curl_llist_remove(%struct.curl_llist* %msglist64, %struct.curl_llist_element* %70, i8* null), !dbg !2638
  br label %for.end, !dbg !2639

if.end66:                                         ; preds = %for.body
  br label %for.inc, !dbg !2640

for.inc:                                          ; preds = %if.end66
  %71 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2641
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %71, i32 0, i32 2, !dbg !2643
  %72 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !2643
  store %struct.curl_llist_element* %72, %struct.curl_llist_element** %e, align 8, !dbg !2644
  br label %for.cond, !dbg !2645

for.end:                                          ; preds = %if.then63, %for.cond
  %73 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2646
  %prev = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %73, i32 0, i32 1, !dbg !2648
  %74 = load %struct.Curl_easy*, %struct.Curl_easy** %prev, align 8, !dbg !2648
  %tobool67 = icmp ne %struct.Curl_easy* %74, null, !dbg !2646
  br i1 %tobool67, label %if.then68, label %if.else72, !dbg !2649

if.then68:                                        ; preds = %for.end
  %75 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2650
  %next69 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %75, i32 0, i32 0, !dbg !2651
  %76 = load %struct.Curl_easy*, %struct.Curl_easy** %next69, align 8, !dbg !2651
  %77 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2652
  %prev70 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %77, i32 0, i32 1, !dbg !2653
  %78 = load %struct.Curl_easy*, %struct.Curl_easy** %prev70, align 8, !dbg !2653
  %next71 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %78, i32 0, i32 0, !dbg !2654
  store %struct.Curl_easy* %76, %struct.Curl_easy** %next71, align 8, !dbg !2655
  br label %if.end74, !dbg !2652

if.else72:                                        ; preds = %for.end
  %79 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2656
  %next73 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %79, i32 0, i32 0, !dbg !2657
  %80 = load %struct.Curl_easy*, %struct.Curl_easy** %next73, align 8, !dbg !2657
  %81 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2658
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %81, i32 0, i32 1, !dbg !2659
  store %struct.Curl_easy* %80, %struct.Curl_easy** %easyp, align 8, !dbg !2660
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then68
  %82 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2661
  %next75 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %82, i32 0, i32 0, !dbg !2663
  %83 = load %struct.Curl_easy*, %struct.Curl_easy** %next75, align 8, !dbg !2663
  %tobool76 = icmp ne %struct.Curl_easy* %83, null, !dbg !2661
  br i1 %tobool76, label %if.then77, label %if.else81, !dbg !2664

if.then77:                                        ; preds = %if.end74
  %84 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2665
  %prev78 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %84, i32 0, i32 1, !dbg !2666
  %85 = load %struct.Curl_easy*, %struct.Curl_easy** %prev78, align 8, !dbg !2666
  %86 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2667
  %next79 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %86, i32 0, i32 0, !dbg !2668
  %87 = load %struct.Curl_easy*, %struct.Curl_easy** %next79, align 8, !dbg !2668
  %prev80 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %87, i32 0, i32 1, !dbg !2669
  store %struct.Curl_easy* %85, %struct.Curl_easy** %prev80, align 8, !dbg !2670
  br label %if.end83, !dbg !2667

if.else81:                                        ; preds = %if.end74
  %88 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2671
  %prev82 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %88, i32 0, i32 1, !dbg !2672
  %89 = load %struct.Curl_easy*, %struct.Curl_easy** %prev82, align 8, !dbg !2672
  %90 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2673
  %easylp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %90, i32 0, i32 2, !dbg !2674
  store %struct.Curl_easy* %89, %struct.Curl_easy** %easylp, align 8, !dbg !2675
  br label %if.end83

if.end83:                                         ; preds = %if.else81, %if.then77
  %91 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2676
  %num_easy = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %91, i32 0, i32 3, !dbg !2677
  %92 = load i32, i32* %num_easy, align 8, !dbg !2678
  %dec84 = add nsw i32 %92, -1, !dbg !2678
  store i32 %dec84, i32* %num_easy, align 8, !dbg !2678
  %93 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2679
  %call85 = call i32 @update_timer(%struct.Curl_multi* %93), !dbg !2680
  store i32 0, i32* %retval, align 4, !dbg !2681
  br label %return, !dbg !2681

return:                                           ; preds = %if.end83, %if.then8, %if.then4, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !2682
  ret i32 %94, !dbg !2682
}

; Function Attrs: nounwind uwtable
define void @Curl_multi_process_pending_handles(%struct.Curl_multi* %multi) #0 !dbg !1877 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %e = alloca %struct.curl_llist_element*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %next = alloca %struct.curl_llist_element*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !2683, metadata !1963), !dbg !2684
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %e, metadata !2685, metadata !1963), !dbg !2686
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2687
  %pending = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 6, !dbg !2688
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %pending, i32 0, i32 0, !dbg !2689
  %1 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !2689
  store %struct.curl_llist_element* %1, %struct.curl_llist_element** %e, align 8, !dbg !2686
  br label %while.cond, !dbg !2690

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2691
  %tobool = icmp ne %struct.curl_llist_element* %2, null, !dbg !2693
  br i1 %tobool, label %while.body, label %while.end, !dbg !2693

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !2694, metadata !1963), !dbg !2696
  %3 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2697
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %3, i32 0, i32 0, !dbg !2698
  %4 = load i8*, i8** %ptr, align 8, !dbg !2698
  %5 = bitcast i8* %4 to %struct.Curl_easy*, !dbg !2697
  store %struct.Curl_easy* %5, %struct.Curl_easy** %data, align 8, !dbg !2696
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %next, metadata !2699, metadata !1963), !dbg !2700
  %6 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2701
  %next1 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %6, i32 0, i32 2, !dbg !2702
  %7 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next1, align 8, !dbg !2702
  store %struct.curl_llist_element* %7, %struct.curl_llist_element** %next, align 8, !dbg !2700
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2703
  %mstate = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 3, !dbg !2705
  %9 = load i32, i32* %mstate, align 8, !dbg !2705
  %cmp = icmp eq i32 %9, 1, !dbg !2706
  br i1 %cmp, label %if.then, label %if.end, !dbg !2707

if.then:                                          ; preds = %while.body
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2708
  call void @mstate(%struct.Curl_easy* %10, i32 2), !dbg !2708
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !2710
  %pending2 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %11, i32 0, i32 6, !dbg !2711
  %12 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !2712
  %call = call i32 @Curl_llist_remove(%struct.curl_llist* %pending2, %struct.curl_llist_element* %12, i8* null), !dbg !2713
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2714
  call void @Curl_expire_latest(%struct.Curl_easy* %13, i64 0), !dbg !2715
  br label %if.end, !dbg !2716

if.end:                                           ; preds = %if.then, %while.body
  %14 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !2717
  store %struct.curl_llist_element* %14, %struct.curl_llist_element** %e, align 8, !dbg !2718
  br label %while.cond, !dbg !2719

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2721
}

declare void @Curl_conncontrol(%struct.connectdata*, i32) #2

; Function Attrs: nounwind uwtable
define void @Curl_expire_clear(%struct.Curl_easy* %data) #0 !dbg !1861 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %multi = alloca %struct.Curl_multi*, align 8
  %nowp = alloca %struct.timeval*, align 8
  %rc = alloca i32, align 4
  %list = alloca %struct.curl_llist*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !2722, metadata !1963), !dbg !2723
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi, metadata !2724, metadata !1963), !dbg !2725
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2726
  %multi1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 9, !dbg !2727
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi1, align 8, !dbg !2727
  store %struct.Curl_multi* %1, %struct.Curl_multi** %multi, align 8, !dbg !2725
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowp, metadata !2728, metadata !1963), !dbg !2729
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2730
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 17, !dbg !2731
  %expiretime = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 27, !dbg !2732
  store %struct.timeval* %expiretime, %struct.timeval** %nowp, align 8, !dbg !2729
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !2733, metadata !1963), !dbg !2734
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2735
  %tobool = icmp ne %struct.Curl_multi* %3, null, !dbg !2735
  br i1 %tobool, label %if.end, label %if.then, !dbg !2737

if.then:                                          ; preds = %entry
  br label %if.end14, !dbg !2738

if.end:                                           ; preds = %entry
  %4 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2739
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0, !dbg !2741
  %5 = load i64, i64* %tv_sec, align 8, !dbg !2741
  %tobool2 = icmp ne i64 %5, 0, !dbg !2739
  br i1 %tobool2, label %if.then4, label %lor.lhs.false, !dbg !2742

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2743
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 1, !dbg !2745
  %7 = load i64, i64* %tv_usec, align 8, !dbg !2745
  %tobool3 = icmp ne i64 %7, 0, !dbg !2743
  br i1 %tobool3, label %if.then4, label %if.end14, !dbg !2746

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %list, metadata !2747, metadata !1963), !dbg !2749
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2750
  %state5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %8, i32 0, i32 17, !dbg !2751
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state5, i32 0, i32 29, !dbg !2752
  store %struct.curl_llist* %timeoutlist, %struct.curl_llist** %list, align 8, !dbg !2749
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2753
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %9, i32 0, i32 12, !dbg !2754
  %10 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !2754
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2755
  %state6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 17, !dbg !2756
  %timenode = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state6, i32 0, i32 28, !dbg !2757
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !2758
  %timetree7 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %12, i32 0, i32 12, !dbg !2759
  %call = call i32 @Curl_splayremovebyaddr(%struct.Curl_tree* %10, %struct.Curl_tree* %timenode, %struct.Curl_tree** %timetree7), !dbg !2760
  store i32 %call, i32* %rc, align 4, !dbg !2761
  %13 = load i32, i32* %rc, align 4, !dbg !2762
  %tobool8 = icmp ne i32 %13, 0, !dbg !2762
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !2764

if.then9:                                         ; preds = %if.then4
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !2765
  %15 = load i32, i32* %rc, align 4, !dbg !2766
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i32 0, i32 0), i32 %15), !dbg !2767
  br label %if.end10, !dbg !2767

if.end10:                                         ; preds = %if.then9, %if.then4
  br label %while.cond, !dbg !2768

while.cond:                                       ; preds = %while.body, %if.end10
  %16 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !2769
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %16, i32 0, i32 3, !dbg !2771
  %17 = load i64, i64* %size, align 8, !dbg !2771
  %cmp = icmp ugt i64 %17, 0, !dbg !2772
  br i1 %cmp, label %while.body, label %while.end, !dbg !2773

while.body:                                       ; preds = %while.cond
  %18 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !2774
  %19 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !2775
  %tail = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %19, i32 0, i32 1, !dbg !2776
  %20 = load %struct.curl_llist_element*, %struct.curl_llist_element** %tail, align 8, !dbg !2776
  %call11 = call i32 @Curl_llist_remove(%struct.curl_llist* %18, %struct.curl_llist_element* %20, i8* null), !dbg !2777
  br label %while.cond, !dbg !2778

while.end:                                        ; preds = %while.cond
  %21 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2780
  %tv_sec12 = getelementptr inbounds %struct.timeval, %struct.timeval* %21, i32 0, i32 0, !dbg !2781
  store i64 0, i64* %tv_sec12, align 8, !dbg !2782
  %22 = load %struct.timeval*, %struct.timeval** %nowp, align 8, !dbg !2783
  %tv_usec13 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1, !dbg !2784
  store i64 0, i64* %tv_usec13, align 8, !dbg !2785
  br label %if.end14, !dbg !2786

if.end14:                                         ; preds = %if.then, %while.end, %lor.lhs.false
  ret void, !dbg !2787
}

; Function Attrs: nounwind uwtable
define internal i32 @multi_done(%struct.connectdata** %connp, i32 %status, i1 zeroext %premature) #0 !dbg !1888 {
entry:
  %retval = alloca i32, align 4
  %connp.addr = alloca %struct.connectdata**, align 8
  %status.addr = alloca i32, align 4
  %premature.addr = alloca i8, align 1
  %result = alloca i32, align 4
  %conn = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  %res2 = alloca i32, align 4
  store %struct.connectdata** %connp, %struct.connectdata*** %connp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %connp.addr, metadata !2788, metadata !1963), !dbg !2789
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2790, metadata !1963), !dbg !2791
  %frombool = zext i1 %premature to i8
  store i8 %frombool, i8* %premature.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %premature.addr, metadata !2792, metadata !1963), !dbg !2793
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2794, metadata !1963), !dbg !2795
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !2796, metadata !1963), !dbg !2797
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !2798, metadata !1963), !dbg !2799
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2800, metadata !1963), !dbg !2801
  br label %do.body, !dbg !2802

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !2803

do.end:                                           ; preds = %do.body
  %0 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !2806
  %1 = load %struct.connectdata*, %struct.connectdata** %0, align 8, !dbg !2807
  store %struct.connectdata* %1, %struct.connectdata** %conn, align 8, !dbg !2808
  %2 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2809
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 0, !dbg !2810
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !2810
  store %struct.Curl_easy* %3, %struct.Curl_easy** %data, align 8, !dbg !2811
  br label %do.body2, !dbg !2812

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !2813

do.end3:                                          ; preds = %do.body2
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2816
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 17, !dbg !2818
  %done = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 49, !dbg !2819
  %5 = load i8, i8* %done, align 8, !dbg !2819
  %tobool = trunc i8 %5 to i1, !dbg !2819
  br i1 %tobool, label %if.then, label %if.end, !dbg !2820

if.then:                                          ; preds = %do.end3
  store i32 0, i32* %retval, align 4, !dbg !2821
  br label %return, !dbg !2821

if.end:                                           ; preds = %do.end3
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2822
  %7 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2823
  call void @Curl_getoff_all_pipelines(%struct.Curl_easy* %6, %struct.connectdata* %7), !dbg !2824
  %8 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2825
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2825
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 12, !dbg !2825
  %newurl = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 36, !dbg !2825
  %10 = load i8*, i8** %newurl, align 8, !dbg !2825
  call void %8(i8* %10), !dbg !2825
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2826
  %req4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 12, !dbg !2827
  %newurl5 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req4, i32 0, i32 36, !dbg !2828
  store i8* null, i8** %newurl5, align 8, !dbg !2829
  %12 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2830
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2830
  %req6 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 12, !dbg !2830
  %location = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req6, i32 0, i32 35, !dbg !2830
  %14 = load i8*, i8** %location, align 8, !dbg !2830
  call void %12(i8* %14), !dbg !2830
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2831
  %req7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 12, !dbg !2832
  %location8 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req7, i32 0, i32 35, !dbg !2833
  store i8* null, i8** %location8, align 8, !dbg !2834
  %16 = load i32, i32* %status.addr, align 4, !dbg !2835
  switch i32 %16, label %sw.default [
    i32 42, label %sw.bb
    i32 26, label %sw.bb
    i32 23, label %sw.bb
  ], !dbg !2836

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  store i8 1, i8* %premature.addr, align 1, !dbg !2837
  br label %sw.default, !dbg !2839

sw.default:                                       ; preds = %if.end, %sw.bb
  br label %sw.epilog, !dbg !2840

sw.epilog:                                        ; preds = %sw.default
  %17 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2841
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %17, i32 0, i32 47, !dbg !2843
  %18 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !2843
  %done9 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %18, i32 0, i32 3, !dbg !2844
  %19 = load i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32, i1)** %done9, align 8, !dbg !2844
  %tobool10 = icmp ne i32 (%struct.connectdata*, i32, i1)* %19, null, !dbg !2841
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !2845

if.then11:                                        ; preds = %sw.epilog
  %20 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2846
  %handler12 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %20, i32 0, i32 47, !dbg !2847
  %21 = load %struct.Curl_handler*, %struct.Curl_handler** %handler12, align 8, !dbg !2847
  %done13 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %21, i32 0, i32 3, !dbg !2848
  %22 = load i32 (%struct.connectdata*, i32, i1)*, i32 (%struct.connectdata*, i32, i1)** %done13, align 8, !dbg !2848
  %23 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2849
  %24 = load i32, i32* %status.addr, align 4, !dbg !2850
  %25 = load i8, i8* %premature.addr, align 1, !dbg !2851
  %tobool14 = trunc i8 %25 to i1, !dbg !2851
  %call = call i32 %22(%struct.connectdata* %23, i32 %24, i1 zeroext %tobool14), !dbg !2846
  store i32 %call, i32* %result, align 4, !dbg !2852
  br label %if.end15, !dbg !2853

if.else:                                          ; preds = %sw.epilog
  %26 = load i32, i32* %status.addr, align 4, !dbg !2854
  store i32 %26, i32* %result, align 4, !dbg !2855
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  %27 = load i32, i32* %result, align 4, !dbg !2856
  %cmp = icmp ne i32 42, %27, !dbg !2858
  br i1 %cmp, label %if.then16, label %if.end22, !dbg !2859

if.then16:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !2860, metadata !1963), !dbg !2862
  %28 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2863
  %call17 = call i32 @Curl_pgrsDone(%struct.connectdata* %28), !dbg !2864
  store i32 %call17, i32* %rc, align 4, !dbg !2862
  %29 = load i32, i32* %result, align 4, !dbg !2865
  %tobool18 = icmp ne i32 %29, 0, !dbg !2865
  br i1 %tobool18, label %if.end21, label %land.lhs.true, !dbg !2867

land.lhs.true:                                    ; preds = %if.then16
  %30 = load i32, i32* %rc, align 4, !dbg !2868
  %tobool19 = icmp ne i32 %30, 0, !dbg !2868
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2870

if.then20:                                        ; preds = %land.lhs.true
  store i32 42, i32* %result, align 4, !dbg !2871
  br label %if.end21, !dbg !2872

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %if.then16
  br label %if.end22, !dbg !2873

if.end22:                                         ; preds = %if.end21, %if.end15
  %31 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2874
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %31, i32 0, i32 55, !dbg !2876
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !2877
  %32 = load i64, i64* %size, align 8, !dbg !2877
  %33 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2878
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %33, i32 0, i32 56, !dbg !2879
  %size23 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !2880
  %34 = load i64, i64* %size23, align 8, !dbg !2880
  %add = add i64 %32, %34, !dbg !2881
  %cmp24 = icmp ne i64 %add, 0, !dbg !2882
  br i1 %cmp24, label %land.lhs.true25, label %if.end32, !dbg !2883

land.lhs.true25:                                  ; preds = %if.end22
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2884
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %35, i32 0, i32 13, !dbg !2885
  %reuse_forbid = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 108, !dbg !2886
  %36 = load i8, i8* %reuse_forbid, align 2, !dbg !2886
  %tobool26 = trunc i8 %36 to i1, !dbg !2886
  br i1 %tobool26, label %if.end32, label %land.lhs.true27, !dbg !2887

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %37 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2888
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 43, !dbg !2889
  %close = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 0, !dbg !2890
  %38 = load i8, i8* %close, align 1, !dbg !2890
  %tobool28 = trunc i8 %38 to i1, !dbg !2890
  br i1 %tobool28, label %if.end32, label %if.then29, !dbg !2891

if.then29:                                        ; preds = %land.lhs.true27
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2893
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %39, i32 0, i32 2, !dbg !2895
  store %struct.connectdata* null, %struct.connectdata** %easy_conn, align 8, !dbg !2896
  br label %do.body30, !dbg !2897

do.body30:                                        ; preds = %if.then29
  br label %do.end31, !dbg !2898

do.end31:                                         ; preds = %do.body30
  store i32 0, i32* %retval, align 4, !dbg !2901
  br label %return, !dbg !2901

if.end32:                                         ; preds = %land.lhs.true27, %land.lhs.true25, %if.end22
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2902
  %state33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 17, !dbg !2903
  %done34 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state33, i32 0, i32 49, !dbg !2904
  store i8 1, i8* %done34, align 8, !dbg !2905
  br label %do.body35, !dbg !2906

do.body35:                                        ; preds = %if.end32
  br label %do.end36, !dbg !2907

do.end36:                                         ; preds = %do.body35
  %41 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2910
  %dns_entry = getelementptr inbounds %struct.connectdata, %struct.connectdata* %41, i32 0, i32 6, !dbg !2912
  %42 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns_entry, align 8, !dbg !2912
  %tobool37 = icmp ne %struct.Curl_dns_entry* %42, null, !dbg !2910
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !2913

if.then38:                                        ; preds = %do.end36
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2914
  %44 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2916
  %dns_entry39 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %44, i32 0, i32 6, !dbg !2917
  %45 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns_entry39, align 8, !dbg !2917
  call void @Curl_resolv_unlock(%struct.Curl_easy* %43, %struct.Curl_dns_entry* %45), !dbg !2918
  %46 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2919
  %dns_entry40 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %46, i32 0, i32 6, !dbg !2920
  store %struct.Curl_dns_entry* null, %struct.Curl_dns_entry** %dns_entry40, align 8, !dbg !2921
  br label %if.end41, !dbg !2922

if.end41:                                         ; preds = %if.then38, %do.end36
  store i32 0, i32* %i, align 4, !dbg !2923
  br label %for.cond, !dbg !2925

for.cond:                                         ; preds = %for.inc, %if.end41
  %47 = load i32, i32* %i, align 4, !dbg !2926
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2929
  %state42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 17, !dbg !2930
  %tempcount = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state42, i32 0, i32 14, !dbg !2931
  %49 = load i32, i32* %tempcount, align 8, !dbg !2931
  %cmp43 = icmp ult i32 %47, %49, !dbg !2932
  br i1 %cmp43, label %for.body, label %for.end, !dbg !2933

for.body:                                         ; preds = %for.cond
  %50 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !2934
  %51 = load i32, i32* %i, align 4, !dbg !2934
  %idxprom = zext i32 %51 to i64, !dbg !2934
  %52 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2934
  %state44 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %52, i32 0, i32 17, !dbg !2934
  %tempwrite = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state44, i32 0, i32 15, !dbg !2934
  %arrayidx = getelementptr inbounds [3 x %struct.tempbuf], [3 x %struct.tempbuf]* %tempwrite, i64 0, i64 %idxprom, !dbg !2934
  %buf = getelementptr inbounds %struct.tempbuf, %struct.tempbuf* %arrayidx, i32 0, i32 0, !dbg !2934
  %53 = load i8*, i8** %buf, align 8, !dbg !2934
  call void %50(i8* %53), !dbg !2934
  br label %for.inc, !dbg !2936

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !2937
  %inc = add i32 %54, 1, !dbg !2937
  store i32 %inc, i32* %i, align 4, !dbg !2937
  br label %for.cond, !dbg !2939

for.end:                                          ; preds = %for.cond
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2940
  %state45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %55, i32 0, i32 17, !dbg !2941
  %tempcount46 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state45, i32 0, i32 14, !dbg !2942
  store i32 0, i32* %tempcount46, align 8, !dbg !2943
  %56 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2944
  %set47 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %56, i32 0, i32 13, !dbg !2946
  %reuse_forbid48 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set47, i32 0, i32 108, !dbg !2947
  %57 = load i8, i8* %reuse_forbid48, align 2, !dbg !2947
  %tobool49 = trunc i8 %57 to i1, !dbg !2947
  br i1 %tobool49, label %if.then55, label %lor.lhs.false, !dbg !2948

lor.lhs.false:                                    ; preds = %for.end
  %58 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2949
  %bits50 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %58, i32 0, i32 43, !dbg !2951
  %close51 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits50, i32 0, i32 0, !dbg !2952
  %59 = load i8, i8* %close51, align 1, !dbg !2952
  %tobool52 = trunc i8 %59 to i1, !dbg !2952
  br i1 %tobool52, label %if.then55, label %lor.lhs.false53, !dbg !2953

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %60 = load i8, i8* %premature.addr, align 1, !dbg !2954
  %tobool54 = trunc i8 %60 to i1, !dbg !2954
  br i1 %tobool54, label %if.then55, label %if.else63, !dbg !2956

if.then55:                                        ; preds = %lor.lhs.false53, %lor.lhs.false, %for.end
  call void @llvm.dbg.declare(metadata i32* %res2, metadata !2957, metadata !1963), !dbg !2959
  %61 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2960
  %62 = load i8, i8* %premature.addr, align 1, !dbg !2961
  %tobool56 = trunc i8 %62 to i1, !dbg !2961
  %call57 = call i32 @Curl_disconnect(%struct.connectdata* %61, i1 zeroext %tobool56), !dbg !2962
  store i32 %call57, i32* %res2, align 4, !dbg !2959
  %63 = load i32, i32* %result, align 4, !dbg !2963
  %tobool58 = icmp ne i32 %63, 0, !dbg !2963
  br i1 %tobool58, label %if.end62, label %land.lhs.true59, !dbg !2965

land.lhs.true59:                                  ; preds = %if.then55
  %64 = load i32, i32* %res2, align 4, !dbg !2966
  %tobool60 = icmp ne i32 %64, 0, !dbg !2966
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !2968

if.then61:                                        ; preds = %land.lhs.true59
  %65 = load i32, i32* %res2, align 4, !dbg !2969
  store i32 %65, i32* %result, align 4, !dbg !2970
  br label %if.end62, !dbg !2971

if.end62:                                         ; preds = %if.then61, %land.lhs.true59, %if.then55
  br label %if.end91, !dbg !2972

if.else63:                                        ; preds = %lor.lhs.false53
  %66 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2973
  %67 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2976
  %call64 = call zeroext i1 @ConnectionDone(%struct.Curl_easy* %66, %struct.connectdata* %67), !dbg !2977
  br i1 %call64, label %if.then65, label %if.else87, !dbg !2978

if.then65:                                        ; preds = %if.else63
  %68 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2979
  %69 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2981
  %state66 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %69, i32 0, i32 17, !dbg !2982
  %lastconnect = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state66, i32 0, i32 3, !dbg !2983
  store %struct.connectdata* %68, %struct.connectdata** %lastconnect, align 8, !dbg !2984
  %70 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !2985
  %71 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2986
  %connection_id = getelementptr inbounds %struct.connectdata, %struct.connectdata* %71, i32 0, i32 5, !dbg !2987
  %72 = load i64, i64* %connection_id, align 8, !dbg !2987
  %73 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2988
  %bits67 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %73, i32 0, i32 43, !dbg !2989
  %socksproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits67, i32 0, i32 6, !dbg !2990
  %74 = load i8, i8* %socksproxy, align 1, !dbg !2990
  %tobool68 = trunc i8 %74 to i1, !dbg !2990
  br i1 %tobool68, label %cond.true, label %cond.false, !dbg !2988

cond.true:                                        ; preds = %if.then65
  %75 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2991
  %socks_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %75, i32 0, i32 15, !dbg !2993
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %socks_proxy, i32 0, i32 0, !dbg !2994
  %dispname = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 3, !dbg !2995
  %76 = load i8*, i8** %dispname, align 8, !dbg !2995
  br label %cond.end85, !dbg !2996

cond.false:                                       ; preds = %if.then65
  %77 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !2997
  %bits69 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %77, i32 0, i32 43, !dbg !2998
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits69, i32 0, i32 5, !dbg !2999
  %78 = load i8, i8* %httpproxy, align 1, !dbg !2999
  %tobool70 = trunc i8 %78 to i1, !dbg !2999
  br i1 %tobool70, label %cond.true71, label %cond.false74, !dbg !2997

cond.true71:                                      ; preds = %cond.false
  %79 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !3000
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %79, i32 0, i32 16, !dbg !3001
  %host72 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !3002
  %dispname73 = getelementptr inbounds %struct.hostname, %struct.hostname* %host72, i32 0, i32 3, !dbg !3003
  %80 = load i8*, i8** %dispname73, align 8, !dbg !3003
  br label %cond.end83, !dbg !3004

cond.false74:                                     ; preds = %cond.false
  %81 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !3005
  %bits75 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %81, i32 0, i32 43, !dbg !3006
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits75, i32 0, i32 2, !dbg !3007
  %82 = load i8, i8* %conn_to_host, align 1, !dbg !3007
  %tobool76 = trunc i8 %82 to i1, !dbg !3007
  br i1 %tobool76, label %cond.true77, label %cond.false80, !dbg !3005

cond.true77:                                      ; preds = %cond.false74
  %83 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !3008
  %conn_to_host78 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %83, i32 0, i32 14, !dbg !3009
  %dispname79 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host78, i32 0, i32 3, !dbg !3010
  %84 = load i8*, i8** %dispname79, align 8, !dbg !3010
  br label %cond.end, !dbg !3011

cond.false80:                                     ; preds = %cond.false74
  %85 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !3012
  %host81 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %85, i32 0, i32 12, !dbg !3013
  %dispname82 = getelementptr inbounds %struct.hostname, %struct.hostname* %host81, i32 0, i32 3, !dbg !3014
  %86 = load i8*, i8** %dispname82, align 8, !dbg !3014
  br label %cond.end, !dbg !3015

cond.end:                                         ; preds = %cond.false80, %cond.true77
  %cond = phi i8* [ %84, %cond.true77 ], [ %86, %cond.false80 ], !dbg !3017
  br label %cond.end83, !dbg !3019

cond.end83:                                       ; preds = %cond.end, %cond.true71
  %cond84 = phi i8* [ %80, %cond.true71 ], [ %cond, %cond.end ], !dbg !3020
  br label %cond.end85, !dbg !3021

cond.end85:                                       ; preds = %cond.end83, %cond.true
  %cond86 = phi i8* [ %76, %cond.true ], [ %cond84, %cond.end83 ], !dbg !3022
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %70, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i64 %72, i8* %cond86), !dbg !3023
  br label %if.end90, !dbg !3024

if.else87:                                        ; preds = %if.else63
  %87 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3025
  %state88 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %87, i32 0, i32 17, !dbg !3026
  %lastconnect89 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state88, i32 0, i32 3, !dbg !3027
  store %struct.connectdata* null, %struct.connectdata** %lastconnect89, align 8, !dbg !3028
  br label %if.end90

if.end90:                                         ; preds = %if.else87, %cond.end85
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end62
  %88 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !3029
  store %struct.connectdata* null, %struct.connectdata** %88, align 8, !dbg !3030
  %89 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3031
  call void @Curl_free_request_state(%struct.Curl_easy* %89), !dbg !3032
  %90 = load i32, i32* %result, align 4, !dbg !3033
  store i32 %90, i32* %retval, align 4, !dbg !3034
  br label %return, !dbg !3034

return:                                           ; preds = %if.end91, %do.end31, %if.then
  %91 = load i32, i32* %retval, align 4, !dbg !3035
  ret i32 %91, !dbg !3035
}

declare void @Curl_getoff_all_pipelines(%struct.Curl_easy*, %struct.connectdata*) #2

declare void @Curl_wildcard_dtor(%struct.WildcardData*) #2

; Function Attrs: nounwind uwtable
define internal void @singlesocket(%struct.Curl_multi* %multi, %struct.Curl_easy* %data) #0 !dbg !1922 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %socks = alloca [5 x i32], align 16
  %i = alloca i32, align 4
  %entry1 = alloca %struct.Curl_sh_entry*, align 8
  %s = alloca i32, align 4
  %num = alloca i32, align 4
  %curraction = alloca i32, align 4
  %action = alloca i32, align 4
  %j = alloca i32, align 4
  %remove_sock_from_hash = alloca i8, align 1
  %easy_conn = alloca %struct.connectdata*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3036, metadata !1963), !dbg !3037
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !3038, metadata !1963), !dbg !3039
  call void @llvm.dbg.declare(metadata [5 x i32]* %socks, metadata !3040, metadata !1963), !dbg !3041
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3042, metadata !1963), !dbg !3043
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %entry1, metadata !3044, metadata !1963), !dbg !3045
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3046, metadata !1963), !dbg !3047
  call void @llvm.dbg.declare(metadata i32* %num, metadata !3048, metadata !1963), !dbg !3049
  call void @llvm.dbg.declare(metadata i32* %curraction, metadata !3050, metadata !1963), !dbg !3051
  store i32 0, i32* %i, align 4, !dbg !3052
  br label %for.cond, !dbg !3054

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3055
  %cmp = icmp slt i32 %0, 5, !dbg !3058
  br i1 %cmp, label %for.body, label %for.end, !dbg !3059

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3060
  %idxprom = sext i32 %1 to i64, !dbg !3061
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %socks, i64 0, i64 %idxprom, !dbg !3061
  store i32 -1, i32* %arrayidx, align 4, !dbg !3062
  br label %for.inc, !dbg !3061

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3063
  %inc = add nsw i32 %2, 1, !dbg !3063
  store i32 %inc, i32* %i, align 4, !dbg !3063
  br label %for.cond, !dbg !3065

for.end:                                          ; preds = %for.cond
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3066
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %socks, i32 0, i32 0, !dbg !3067
  %call = call i32 @multi_getsock(%struct.Curl_easy* %3, i32* %arraydecay, i32 5), !dbg !3068
  store i32 %call, i32* %curraction, align 4, !dbg !3069
  store i32 0, i32* %i, align 4, !dbg !3070
  br label %for.cond2, !dbg !3072

for.cond2:                                        ; preds = %for.inc38, %for.end
  %4 = load i32, i32* %i, align 4, !dbg !3073
  %cmp3 = icmp slt i32 %4, 5, !dbg !3076
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !3077

land.rhs:                                         ; preds = %for.cond2
  %5 = load i32, i32* %curraction, align 4, !dbg !3078
  %6 = load i32, i32* %i, align 4, !dbg !3079
  %shl = shl i32 1, %6, !dbg !3079
  %7 = load i32, i32* %i, align 4, !dbg !3080
  %add = add nsw i32 16, %7, !dbg !3080
  %shl4 = shl i32 1, %add, !dbg !3080
  %or = or i32 %shl, %shl4, !dbg !3081
  %and = and i32 %5, %or, !dbg !3082
  %tobool = icmp ne i32 %and, 0, !dbg !3083
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond2
  %8 = phi i1 [ false, %for.cond2 ], [ %tobool, %land.rhs ]
  br i1 %8, label %for.body5, label %for.end40, !dbg !3085

for.body5:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %action, metadata !3087, metadata !1963), !dbg !3089
  store i32 0, i32* %action, align 4, !dbg !3089
  %9 = load i32, i32* %i, align 4, !dbg !3090
  %idxprom6 = sext i32 %9 to i64, !dbg !3091
  %arrayidx7 = getelementptr inbounds [5 x i32], [5 x i32]* %socks, i64 0, i64 %idxprom6, !dbg !3091
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !3091
  store i32 %10, i32* %s, align 4, !dbg !3092
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3093
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %11, i32 0, i32 13, !dbg !3094
  %12 = load i32, i32* %s, align 4, !dbg !3095
  %call8 = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sockhash, i32 %12), !dbg !3096
  store %struct.Curl_sh_entry* %call8, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3097
  %13 = load i32, i32* %curraction, align 4, !dbg !3098
  %14 = load i32, i32* %i, align 4, !dbg !3100
  %shl9 = shl i32 1, %14, !dbg !3100
  %and10 = and i32 %13, %shl9, !dbg !3101
  %tobool11 = icmp ne i32 %and10, 0, !dbg !3101
  br i1 %tobool11, label %if.then, label %if.end, !dbg !3102

if.then:                                          ; preds = %for.body5
  %15 = load i32, i32* %action, align 4, !dbg !3103
  %or12 = or i32 %15, 1, !dbg !3103
  store i32 %or12, i32* %action, align 4, !dbg !3103
  br label %if.end, !dbg !3104

if.end:                                           ; preds = %if.then, %for.body5
  %16 = load i32, i32* %curraction, align 4, !dbg !3105
  %17 = load i32, i32* %i, align 4, !dbg !3107
  %add13 = add nsw i32 16, %17, !dbg !3107
  %shl14 = shl i32 1, %add13, !dbg !3107
  %and15 = and i32 %16, %shl14, !dbg !3108
  %tobool16 = icmp ne i32 %and15, 0, !dbg !3108
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3109

if.then17:                                        ; preds = %if.end
  %18 = load i32, i32* %action, align 4, !dbg !3110
  %or18 = or i32 %18, 2, !dbg !3110
  store i32 %or18, i32* %action, align 4, !dbg !3110
  br label %if.end19, !dbg !3111

if.end19:                                         ; preds = %if.then17, %if.end
  %19 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3112
  %tobool20 = icmp ne %struct.Curl_sh_entry* %19, null, !dbg !3112
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !3114

if.then21:                                        ; preds = %if.end19
  %20 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3115
  %action22 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %20, i32 0, i32 1, !dbg !3118
  %21 = load i32, i32* %action22, align 8, !dbg !3118
  %22 = load i32, i32* %action, align 4, !dbg !3119
  %cmp23 = icmp eq i32 %21, %22, !dbg !3120
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !3121

if.then24:                                        ; preds = %if.then21
  br label %for.inc38, !dbg !3122

if.end25:                                         ; preds = %if.then21
  br label %if.end31, !dbg !3123

if.else:                                          ; preds = %if.end19
  %23 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3124
  %sockhash26 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %23, i32 0, i32 13, !dbg !3126
  %24 = load i32, i32* %s, align 4, !dbg !3127
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3128
  %call27 = call %struct.Curl_sh_entry* @sh_addentry(%struct.curl_hash* %sockhash26, i32 %24, %struct.Curl_easy* %25), !dbg !3129
  store %struct.Curl_sh_entry* %call27, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3130
  %26 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3131
  %tobool28 = icmp ne %struct.Curl_sh_entry* %26, null, !dbg !3131
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !3133

if.then29:                                        ; preds = %if.else
  br label %return, !dbg !3134

if.end30:                                         ; preds = %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end25
  %27 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3135
  %socket_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %27, i32 0, i32 7, !dbg !3137
  %28 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb, align 8, !dbg !3137
  %tobool32 = icmp ne i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)* %28, null, !dbg !3135
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !3138

if.then33:                                        ; preds = %if.end31
  %29 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3139
  %socket_cb34 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %29, i32 0, i32 7, !dbg !3140
  %30 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb34, align 8, !dbg !3140
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3141
  %32 = load i32, i32* %s, align 4, !dbg !3142
  %33 = load i32, i32* %action, align 4, !dbg !3143
  %34 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3144
  %socket_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %34, i32 0, i32 8, !dbg !3145
  %35 = load i8*, i8** %socket_userp, align 8, !dbg !3145
  %36 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3146
  %socketp = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %36, i32 0, i32 3, !dbg !3147
  %37 = load i8*, i8** %socketp, align 8, !dbg !3147
  %call35 = call i32 %30(%struct.Curl_easy* %31, i32 %32, i32 %33, i8* %35, i8* %37), !dbg !3139
  br label %if.end36, !dbg !3139

if.end36:                                         ; preds = %if.then33, %if.end31
  %38 = load i32, i32* %action, align 4, !dbg !3148
  %39 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3149
  %action37 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %39, i32 0, i32 1, !dbg !3150
  store i32 %38, i32* %action37, align 8, !dbg !3151
  br label %for.inc38, !dbg !3152

for.inc38:                                        ; preds = %if.end36, %if.then24
  %40 = load i32, i32* %i, align 4, !dbg !3153
  %inc39 = add nsw i32 %40, 1, !dbg !3153
  store i32 %inc39, i32* %i, align 4, !dbg !3153
  br label %for.cond2, !dbg !3154

for.end40:                                        ; preds = %land.end
  %41 = load i32, i32* %i, align 4, !dbg !3156
  store i32 %41, i32* %num, align 4, !dbg !3157
  store i32 0, i32* %i, align 4, !dbg !3158
  br label %for.cond41, !dbg !3160

for.cond41:                                       ; preds = %for.inc115, %for.end40
  %42 = load i32, i32* %i, align 4, !dbg !3161
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3164
  %numsocks = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %43, i32 0, i32 7, !dbg !3165
  %44 = load i32, i32* %numsocks, align 4, !dbg !3165
  %cmp42 = icmp slt i32 %42, %44, !dbg !3166
  br i1 %cmp42, label %for.body43, label %for.end117, !dbg !3167

for.body43:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3168, metadata !1963), !dbg !3170
  %45 = load i32, i32* %i, align 4, !dbg !3171
  %idxprom44 = sext i32 %45 to i64, !dbg !3172
  %46 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3172
  %sockets = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %46, i32 0, i32 6, !dbg !3173
  %arrayidx45 = getelementptr inbounds [5 x i32], [5 x i32]* %sockets, i64 0, i64 %idxprom44, !dbg !3172
  %47 = load i32, i32* %arrayidx45, align 4, !dbg !3172
  store i32 %47, i32* %s, align 4, !dbg !3174
  store i32 0, i32* %j, align 4, !dbg !3175
  br label %for.cond46, !dbg !3177

for.cond46:                                       ; preds = %for.inc54, %for.body43
  %48 = load i32, i32* %j, align 4, !dbg !3178
  %49 = load i32, i32* %num, align 4, !dbg !3181
  %cmp47 = icmp slt i32 %48, %49, !dbg !3182
  br i1 %cmp47, label %for.body48, label %for.end56, !dbg !3183

for.body48:                                       ; preds = %for.cond46
  %50 = load i32, i32* %s, align 4, !dbg !3184
  %51 = load i32, i32* %j, align 4, !dbg !3187
  %idxprom49 = sext i32 %51 to i64, !dbg !3188
  %arrayidx50 = getelementptr inbounds [5 x i32], [5 x i32]* %socks, i64 0, i64 %idxprom49, !dbg !3188
  %52 = load i32, i32* %arrayidx50, align 4, !dbg !3188
  %cmp51 = icmp eq i32 %50, %52, !dbg !3189
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !3190

if.then52:                                        ; preds = %for.body48
  store i32 -1, i32* %s, align 4, !dbg !3191
  br label %for.end56, !dbg !3193

if.end53:                                         ; preds = %for.body48
  br label %for.inc54, !dbg !3194

for.inc54:                                        ; preds = %if.end53
  %53 = load i32, i32* %j, align 4, !dbg !3195
  %inc55 = add nsw i32 %53, 1, !dbg !3195
  store i32 %inc55, i32* %j, align 4, !dbg !3195
  br label %for.cond46, !dbg !3197

for.end56:                                        ; preds = %if.then52, %for.cond46
  %54 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3198
  %sockhash57 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %54, i32 0, i32 13, !dbg !3199
  %55 = load i32, i32* %s, align 4, !dbg !3200
  %call58 = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sockhash57, i32 %55), !dbg !3201
  store %struct.Curl_sh_entry* %call58, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3202
  %56 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3203
  %tobool59 = icmp ne %struct.Curl_sh_entry* %56, null, !dbg !3203
  br i1 %tobool59, label %if.then60, label %if.end114, !dbg !3205

if.then60:                                        ; preds = %for.end56
  call void @llvm.dbg.declare(metadata i8* %remove_sock_from_hash, metadata !3206, metadata !1963), !dbg !3208
  store i8 1, i8* %remove_sock_from_hash, align 1, !dbg !3208
  call void @llvm.dbg.declare(metadata %struct.connectdata** %easy_conn, metadata !3209, metadata !1963), !dbg !3210
  %57 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3211
  %easy_conn61 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %57, i32 0, i32 2, !dbg !3212
  %58 = load %struct.connectdata*, %struct.connectdata** %easy_conn61, align 8, !dbg !3212
  store %struct.connectdata* %58, %struct.connectdata** %easy_conn, align 8, !dbg !3210
  %59 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3213
  %tobool62 = icmp ne %struct.connectdata* %59, null, !dbg !3213
  br i1 %tobool62, label %if.then63, label %if.end101, !dbg !3215

if.then63:                                        ; preds = %if.then60
  %60 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3216
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %60, i32 0, i32 56, !dbg !3219
  %size = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 3, !dbg !3220
  %61 = load i64, i64* %size, align 8, !dbg !3220
  %cmp64 = icmp ugt i64 %61, 1, !dbg !3221
  br i1 %cmp64, label %if.then65, label %if.end79, !dbg !3222

if.then65:                                        ; preds = %if.then63
  store i8 0, i8* %remove_sock_from_hash, align 1, !dbg !3223
  %62 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3225
  %easy = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %62, i32 0, i32 0, !dbg !3227
  %63 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !3227
  %64 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3228
  %cmp66 = icmp eq %struct.Curl_easy* %63, %64, !dbg !3229
  br i1 %cmp66, label %if.then67, label %if.end78, !dbg !3230

if.then67:                                        ; preds = %if.then65
  %65 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3231
  %66 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3234
  %call68 = call zeroext i1 @Curl_recvpipe_head(%struct.Curl_easy* %65, %struct.connectdata* %66), !dbg !3235
  br i1 %call68, label %if.then69, label %if.else72, !dbg !3236

if.then69:                                        ; preds = %if.then67
  %67 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3237
  %recv_pipe70 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %67, i32 0, i32 56, !dbg !3238
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe70, i32 0, i32 0, !dbg !3239
  %68 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !3239
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %68, i32 0, i32 2, !dbg !3240
  %69 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !3240
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %69, i32 0, i32 0, !dbg !3241
  %70 = load i8*, i8** %ptr, align 8, !dbg !3241
  %71 = bitcast i8* %70 to %struct.Curl_easy*, !dbg !3237
  %72 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3242
  %easy71 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %72, i32 0, i32 0, !dbg !3243
  store %struct.Curl_easy* %71, %struct.Curl_easy** %easy71, align 8, !dbg !3244
  br label %if.end77, !dbg !3242

if.else72:                                        ; preds = %if.then67
  %73 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3245
  %recv_pipe73 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %73, i32 0, i32 56, !dbg !3246
  %head74 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe73, i32 0, i32 0, !dbg !3247
  %74 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head74, align 8, !dbg !3247
  %ptr75 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %74, i32 0, i32 0, !dbg !3248
  %75 = load i8*, i8** %ptr75, align 8, !dbg !3248
  %76 = bitcast i8* %75 to %struct.Curl_easy*, !dbg !3245
  %77 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3249
  %easy76 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %77, i32 0, i32 0, !dbg !3250
  store %struct.Curl_easy* %76, %struct.Curl_easy** %easy76, align 8, !dbg !3251
  br label %if.end77

if.end77:                                         ; preds = %if.else72, %if.then69
  br label %if.end78, !dbg !3252

if.end78:                                         ; preds = %if.end77, %if.then65
  br label %if.end79, !dbg !3253

if.end79:                                         ; preds = %if.end78, %if.then63
  %78 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3254
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %78, i32 0, i32 55, !dbg !3256
  %size80 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 3, !dbg !3257
  %79 = load i64, i64* %size80, align 8, !dbg !3257
  %cmp81 = icmp ugt i64 %79, 1, !dbg !3258
  br i1 %cmp81, label %if.then82, label %if.end100, !dbg !3259

if.then82:                                        ; preds = %if.end79
  store i8 0, i8* %remove_sock_from_hash, align 1, !dbg !3260
  %80 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3262
  %easy83 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %80, i32 0, i32 0, !dbg !3264
  %81 = load %struct.Curl_easy*, %struct.Curl_easy** %easy83, align 8, !dbg !3264
  %82 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3265
  %cmp84 = icmp eq %struct.Curl_easy* %81, %82, !dbg !3266
  br i1 %cmp84, label %if.then85, label %if.end99, !dbg !3267

if.then85:                                        ; preds = %if.then82
  %83 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3268
  %84 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3271
  %call86 = call zeroext i1 @Curl_sendpipe_head(%struct.Curl_easy* %83, %struct.connectdata* %84), !dbg !3272
  br i1 %call86, label %if.then87, label %if.else93, !dbg !3273

if.then87:                                        ; preds = %if.then85
  %85 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3274
  %send_pipe88 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %85, i32 0, i32 55, !dbg !3275
  %head89 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe88, i32 0, i32 0, !dbg !3276
  %86 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head89, align 8, !dbg !3276
  %next90 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %86, i32 0, i32 2, !dbg !3277
  %87 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next90, align 8, !dbg !3277
  %ptr91 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %87, i32 0, i32 0, !dbg !3278
  %88 = load i8*, i8** %ptr91, align 8, !dbg !3278
  %89 = bitcast i8* %88 to %struct.Curl_easy*, !dbg !3274
  %90 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3279
  %easy92 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %90, i32 0, i32 0, !dbg !3280
  store %struct.Curl_easy* %89, %struct.Curl_easy** %easy92, align 8, !dbg !3281
  br label %if.end98, !dbg !3279

if.else93:                                        ; preds = %if.then85
  %91 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3282
  %send_pipe94 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %91, i32 0, i32 55, !dbg !3283
  %head95 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe94, i32 0, i32 0, !dbg !3284
  %92 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head95, align 8, !dbg !3284
  %ptr96 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %92, i32 0, i32 0, !dbg !3285
  %93 = load i8*, i8** %ptr96, align 8, !dbg !3285
  %94 = bitcast i8* %93 to %struct.Curl_easy*, !dbg !3282
  %95 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3286
  %easy97 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %95, i32 0, i32 0, !dbg !3287
  store %struct.Curl_easy* %94, %struct.Curl_easy** %easy97, align 8, !dbg !3288
  br label %if.end98

if.end98:                                         ; preds = %if.else93, %if.then87
  br label %if.end99, !dbg !3289

if.end99:                                         ; preds = %if.end98, %if.then82
  br label %if.end100, !dbg !3290

if.end100:                                        ; preds = %if.end99, %if.end79
  br label %if.end101, !dbg !3291

if.end101:                                        ; preds = %if.end100, %if.then60
  %96 = load i8, i8* %remove_sock_from_hash, align 1, !dbg !3292
  %tobool102 = trunc i8 %96 to i1, !dbg !3292
  br i1 %tobool102, label %if.then103, label %if.end113, !dbg !3294

if.then103:                                       ; preds = %if.end101
  %97 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3295
  %socket_cb104 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %97, i32 0, i32 7, !dbg !3298
  %98 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb104, align 8, !dbg !3298
  %tobool105 = icmp ne i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)* %98, null, !dbg !3295
  br i1 %tobool105, label %if.then106, label %if.end111, !dbg !3299

if.then106:                                       ; preds = %if.then103
  %99 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3300
  %socket_cb107 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %99, i32 0, i32 7, !dbg !3301
  %100 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb107, align 8, !dbg !3301
  %101 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3302
  %102 = load i32, i32* %s, align 4, !dbg !3303
  %103 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3304
  %socket_userp108 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %103, i32 0, i32 8, !dbg !3305
  %104 = load i8*, i8** %socket_userp108, align 8, !dbg !3305
  %105 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry1, align 8, !dbg !3306
  %socketp109 = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %105, i32 0, i32 3, !dbg !3307
  %106 = load i8*, i8** %socketp109, align 8, !dbg !3307
  %call110 = call i32 %100(%struct.Curl_easy* %101, i32 %102, i32 4, i8* %104, i8* %106), !dbg !3300
  br label %if.end111, !dbg !3300

if.end111:                                        ; preds = %if.then106, %if.then103
  %107 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3308
  %sockhash112 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %107, i32 0, i32 13, !dbg !3309
  %108 = load i32, i32* %s, align 4, !dbg !3310
  call void @sh_delentry(%struct.curl_hash* %sockhash112, i32 %108), !dbg !3311
  br label %if.end113, !dbg !3312

if.end113:                                        ; preds = %if.end111, %if.end101
  br label %if.end114, !dbg !3313

if.end114:                                        ; preds = %if.end113, %for.end56
  br label %for.inc115, !dbg !3314

for.inc115:                                       ; preds = %if.end114
  %109 = load i32, i32* %i, align 4, !dbg !3315
  %inc116 = add nsw i32 %109, 1, !dbg !3315
  store i32 %inc116, i32* %i, align 4, !dbg !3315
  br label %for.cond41, !dbg !3317

for.end117:                                       ; preds = %for.cond41
  %110 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3318
  %sockets118 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %110, i32 0, i32 6, !dbg !3319
  %arraydecay119 = getelementptr inbounds [5 x i32], [5 x i32]* %sockets118, i32 0, i32 0, !dbg !3320
  %111 = bitcast i32* %arraydecay119 to i8*, !dbg !3320
  %arraydecay120 = getelementptr inbounds [5 x i32], [5 x i32]* %socks, i32 0, i32 0, !dbg !3320
  %112 = bitcast i32* %arraydecay120 to i8*, !dbg !3320
  %113 = load i32, i32* %num, align 4, !dbg !3321
  %conv = sext i32 %113 to i64, !dbg !3321
  %mul = mul i64 %conv, 4, !dbg !3322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 %mul, i32 8, i1 false), !dbg !3320
  %114 = load i32, i32* %num, align 4, !dbg !3323
  %115 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3324
  %numsocks121 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %115, i32 0, i32 7, !dbg !3325
  store i32 %114, i32* %numsocks121, align 4, !dbg !3326
  br label %return, !dbg !3327

return:                                           ; preds = %for.end117, %if.then29
  ret void, !dbg !3328
}

declare i32 @Curl_llist_remove(%struct.curl_llist*, %struct.curl_llist_element*, i8*) #2

; Function Attrs: nounwind uwtable
define zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %multi, i32 %bits) #0 !dbg !1793 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %bits.addr = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3330, metadata !1963), !dbg !3331
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !3332, metadata !1963), !dbg !3333
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3334
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !3334
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3335

land.rhs:                                         ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3336
  %pipelining = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 14, !dbg !3338
  %2 = load i64, i64* %pipelining, align 8, !dbg !3338
  %3 = load i32, i32* %bits.addr, align 4, !dbg !3339
  %conv = sext i32 %3 to i64, !dbg !3339
  %and = and i64 %2, %conv, !dbg !3340
  %tobool1 = icmp ne i64 %and, 0, !dbg !3341
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ]
  %cond = select i1 %4, i32 1, i32 0, !dbg !3342
  %tobool2 = icmp ne i32 %cond, 0, !dbg !3342
  ret i1 %tobool2, !dbg !3344
}

; Function Attrs: nounwind uwtable
define void @Curl_multi_handlePipeBreak(%struct.Curl_easy* %data) #0 !dbg !1798 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !3345, metadata !1963), !dbg !3346
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3347
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 2, !dbg !3348
  store %struct.connectdata* null, %struct.connectdata** %easy_conn, align 8, !dbg !3349
  ret void, !dbg !3350
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_fdset(%struct.Curl_multi* %multi, %struct.fd_set* %read_fd_set, %struct.fd_set* %write_fd_set, %struct.fd_set* %exc_fd_set, i32* %max_fd) #0 !dbg !1801 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %read_fd_set.addr = alloca %struct.fd_set*, align 8
  %write_fd_set.addr = alloca %struct.fd_set*, align 8
  %exc_fd_set.addr = alloca %struct.fd_set*, align 8
  %max_fd.addr = alloca i32*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %this_max_fd = alloca i32, align 4
  %sockbunch = alloca [5 x i32], align 16
  %bitmap = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3351, metadata !1963), !dbg !3352
  store %struct.fd_set* %read_fd_set, %struct.fd_set** %read_fd_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %read_fd_set.addr, metadata !3353, metadata !1963), !dbg !3354
  store %struct.fd_set* %write_fd_set, %struct.fd_set** %write_fd_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %write_fd_set.addr, metadata !3355, metadata !1963), !dbg !3356
  store %struct.fd_set* %exc_fd_set, %struct.fd_set** %exc_fd_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %exc_fd_set.addr, metadata !3357, metadata !1963), !dbg !3358
  store i32* %max_fd, i32** %max_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %max_fd.addr, metadata !3359, metadata !1963), !dbg !3360
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !3361, metadata !1963), !dbg !3362
  call void @llvm.dbg.declare(metadata i32* %this_max_fd, metadata !3363, metadata !1963), !dbg !3364
  store i32 -1, i32* %this_max_fd, align 4, !dbg !3364
  call void @llvm.dbg.declare(metadata [5 x i32]* %sockbunch, metadata !3365, metadata !1963), !dbg !3366
  call void @llvm.dbg.declare(metadata i32* %bitmap, metadata !3367, metadata !1963), !dbg !3368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3369, metadata !1963), !dbg !3370
  %0 = load %struct.fd_set*, %struct.fd_set** %exc_fd_set.addr, align 8, !dbg !3371
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3372
  %tobool = icmp ne %struct.Curl_multi* %1, null, !dbg !3372
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !3372

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3374
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %2, i32 0, i32 0, !dbg !3374
  %3 = load i64, i64* %type, align 8, !dbg !3374
  %cmp = icmp eq i64 %3, 764702, !dbg !3374
  br i1 %cmp, label %if.end, label %if.then, !dbg !3376

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !3377
  br label %return, !dbg !3377

if.end:                                           ; preds = %land.lhs.true
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3378
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %4, i32 0, i32 1, !dbg !3379
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !3379
  store %struct.Curl_easy* %5, %struct.Curl_easy** %data, align 8, !dbg !3380
  br label %while.cond, !dbg !3381

while.cond:                                       ; preds = %for.end, %if.end
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3382
  %tobool1 = icmp ne %struct.Curl_easy* %6, null, !dbg !3384
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3384

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3385
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i32 0, i32 0, !dbg !3387
  %call = call i32 @multi_getsock(%struct.Curl_easy* %7, i32* %arraydecay, i32 5), !dbg !3388
  store i32 %call, i32* %bitmap, align 4, !dbg !3389
  store i32 0, i32* %i, align 4, !dbg !3390
  br label %for.cond, !dbg !3392

for.cond:                                         ; preds = %for.inc, %while.body
  %8 = load i32, i32* %i, align 4, !dbg !3393
  %cmp2 = icmp slt i32 %8, 5, !dbg !3396
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3397

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3398, metadata !1963), !dbg !3400
  store i32 -1, i32* %s, align 4, !dbg !3400
  %9 = load i32, i32* %bitmap, align 4, !dbg !3401
  %10 = load i32, i32* %i, align 4, !dbg !3403
  %shl = shl i32 1, %10, !dbg !3403
  %and = and i32 %9, %shl, !dbg !3404
  %tobool3 = icmp ne i32 %and, 0, !dbg !3404
  br i1 %tobool3, label %land.lhs.true4, label %if.end20, !dbg !3405

land.lhs.true4:                                   ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !3406
  %idxprom = sext i32 %11 to i64, !dbg !3406
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom, !dbg !3406
  %12 = load i32, i32* %arrayidx, align 4, !dbg !3406
  %cmp5 = icmp sge i32 %12, 0, !dbg !3406
  br i1 %cmp5, label %land.lhs.true6, label %if.end20, !dbg !3406

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %13 = load i32, i32* %i, align 4, !dbg !3408
  %idxprom7 = sext i32 %13 to i64, !dbg !3408
  %arrayidx8 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom7, !dbg !3408
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !3408
  %cmp9 = icmp slt i32 %14, 1024, !dbg !3408
  br i1 %cmp9, label %if.then10, label %if.end20, !dbg !3410

if.then10:                                        ; preds = %land.lhs.true6
  %15 = load i32, i32* %i, align 4, !dbg !3411
  %idxprom11 = sext i32 %15 to i64, !dbg !3411
  %arrayidx12 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom11, !dbg !3411
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !3411
  %rem = srem i32 %16, 64, !dbg !3411
  %sh_prom = zext i32 %rem to i64, !dbg !3411
  %shl13 = shl i64 1, %sh_prom, !dbg !3411
  %17 = load i32, i32* %i, align 4, !dbg !3411
  %idxprom14 = sext i32 %17 to i64, !dbg !3411
  %arrayidx15 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom14, !dbg !3411
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !3411
  %div = sdiv i32 %18, 64, !dbg !3411
  %idxprom16 = sext i32 %div to i64, !dbg !3411
  %19 = load %struct.fd_set*, %struct.fd_set** %read_fd_set.addr, align 8, !dbg !3411
  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set* %19, i32 0, i32 0, !dbg !3411
  %arrayidx17 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 %idxprom16, !dbg !3411
  %20 = load i64, i64* %arrayidx17, align 8, !dbg !3411
  %or = or i64 %20, %shl13, !dbg !3411
  store i64 %or, i64* %arrayidx17, align 8, !dbg !3411
  %21 = load i32, i32* %i, align 4, !dbg !3413
  %idxprom18 = sext i32 %21 to i64, !dbg !3414
  %arrayidx19 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom18, !dbg !3414
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !3414
  store i32 %22, i32* %s, align 4, !dbg !3415
  br label %if.end20, !dbg !3416

if.end20:                                         ; preds = %if.then10, %land.lhs.true6, %land.lhs.true4, %for.body
  %23 = load i32, i32* %bitmap, align 4, !dbg !3417
  %24 = load i32, i32* %i, align 4, !dbg !3419
  %add = add nsw i32 16, %24, !dbg !3419
  %shl21 = shl i32 1, %add, !dbg !3419
  %and22 = and i32 %23, %shl21, !dbg !3420
  %tobool23 = icmp ne i32 %and22, 0, !dbg !3420
  br i1 %tobool23, label %land.lhs.true24, label %if.end47, !dbg !3421

land.lhs.true24:                                  ; preds = %if.end20
  %25 = load i32, i32* %i, align 4, !dbg !3422
  %idxprom25 = sext i32 %25 to i64, !dbg !3422
  %arrayidx26 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom25, !dbg !3422
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !3422
  %cmp27 = icmp sge i32 %26, 0, !dbg !3422
  br i1 %cmp27, label %land.lhs.true28, label %if.end47, !dbg !3422

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %27 = load i32, i32* %i, align 4, !dbg !3424
  %idxprom29 = sext i32 %27 to i64, !dbg !3424
  %arrayidx30 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom29, !dbg !3424
  %28 = load i32, i32* %arrayidx30, align 4, !dbg !3424
  %cmp31 = icmp slt i32 %28, 1024, !dbg !3424
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !3426

if.then32:                                        ; preds = %land.lhs.true28
  %29 = load i32, i32* %i, align 4, !dbg !3427
  %idxprom33 = sext i32 %29 to i64, !dbg !3427
  %arrayidx34 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom33, !dbg !3427
  %30 = load i32, i32* %arrayidx34, align 4, !dbg !3427
  %rem35 = srem i32 %30, 64, !dbg !3427
  %sh_prom36 = zext i32 %rem35 to i64, !dbg !3427
  %shl37 = shl i64 1, %sh_prom36, !dbg !3427
  %31 = load i32, i32* %i, align 4, !dbg !3427
  %idxprom38 = sext i32 %31 to i64, !dbg !3427
  %arrayidx39 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom38, !dbg !3427
  %32 = load i32, i32* %arrayidx39, align 4, !dbg !3427
  %div40 = sdiv i32 %32, 64, !dbg !3427
  %idxprom41 = sext i32 %div40 to i64, !dbg !3427
  %33 = load %struct.fd_set*, %struct.fd_set** %write_fd_set.addr, align 8, !dbg !3427
  %__fds_bits42 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %33, i32 0, i32 0, !dbg !3427
  %arrayidx43 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits42, i64 0, i64 %idxprom41, !dbg !3427
  %34 = load i64, i64* %arrayidx43, align 8, !dbg !3427
  %or44 = or i64 %34, %shl37, !dbg !3427
  store i64 %or44, i64* %arrayidx43, align 8, !dbg !3427
  %35 = load i32, i32* %i, align 4, !dbg !3429
  %idxprom45 = sext i32 %35 to i64, !dbg !3430
  %arrayidx46 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom45, !dbg !3430
  %36 = load i32, i32* %arrayidx46, align 4, !dbg !3430
  store i32 %36, i32* %s, align 4, !dbg !3431
  br label %if.end47, !dbg !3432

if.end47:                                         ; preds = %if.then32, %land.lhs.true28, %land.lhs.true24, %if.end20
  %37 = load i32, i32* %s, align 4, !dbg !3433
  %cmp48 = icmp eq i32 %37, -1, !dbg !3435
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !3436

if.then49:                                        ; preds = %if.end47
  br label %for.end, !dbg !3437

if.end50:                                         ; preds = %if.end47
  %38 = load i32, i32* %s, align 4, !dbg !3438
  %39 = load i32, i32* %this_max_fd, align 4, !dbg !3440
  %cmp51 = icmp sgt i32 %38, %39, !dbg !3441
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !3442

if.then52:                                        ; preds = %if.end50
  %40 = load i32, i32* %s, align 4, !dbg !3443
  store i32 %40, i32* %this_max_fd, align 4, !dbg !3444
  br label %if.end53, !dbg !3445

if.end53:                                         ; preds = %if.then52, %if.end50
  br label %for.inc, !dbg !3446

for.inc:                                          ; preds = %if.end53
  %41 = load i32, i32* %i, align 4, !dbg !3447
  %inc = add nsw i32 %41, 1, !dbg !3447
  store i32 %inc, i32* %i, align 4, !dbg !3447
  br label %for.cond, !dbg !3449

for.end:                                          ; preds = %if.then49, %for.cond
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3450
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 0, !dbg !3451
  %43 = load %struct.Curl_easy*, %struct.Curl_easy** %next, align 8, !dbg !3451
  store %struct.Curl_easy* %43, %struct.Curl_easy** %data, align 8, !dbg !3452
  br label %while.cond, !dbg !3453

while.end:                                        ; preds = %while.cond
  %44 = load i32, i32* %this_max_fd, align 4, !dbg !3455
  %45 = load i32*, i32** %max_fd.addr, align 8, !dbg !3456
  store i32 %44, i32* %45, align 4, !dbg !3457
  store i32 0, i32* %retval, align 4, !dbg !3458
  br label %return, !dbg !3458

return:                                           ; preds = %while.end, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !3459
  ret i32 %46, !dbg !3459
}

; Function Attrs: nounwind uwtable
define internal i32 @multi_getsock(%struct.Curl_easy* %data, i32* %socks, i32 %numsocks) #0 !dbg !1895 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %socks.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !3460, metadata !1963), !dbg !3461
  store i32* %socks, i32** %socks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %socks.addr, metadata !3462, metadata !1963), !dbg !3463
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !3464, metadata !1963), !dbg !3465
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3466
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !3468
  %pipe_broke = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 34, !dbg !3469
  %1 = load i8, i8* %pipe_broke, align 1, !dbg !3469
  %tobool = trunc i8 %1 to i1, !dbg !3469
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3470

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3471
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %2, i32 0, i32 2, !dbg !3473
  %3 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !3473
  %tobool1 = icmp ne %struct.connectdata* %3, null, !dbg !3471
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3474

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3475
  br label %return, !dbg !3475

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3476
  %mstate = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 3, !dbg !3478
  %5 = load i32, i32* %mstate, align 8, !dbg !3478
  %cmp = icmp ugt i32 %5, 2, !dbg !3479
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !3480

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3481
  %mstate2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 3, !dbg !3482
  %7 = load i32, i32* %mstate2, align 8, !dbg !3482
  %cmp3 = icmp ult i32 %7, 17, !dbg !3483
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !3484

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3486
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3488
  %easy_conn5 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 2, !dbg !3489
  %10 = load %struct.connectdata*, %struct.connectdata** %easy_conn5, align 8, !dbg !3489
  %data6 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 0, !dbg !3490
  store %struct.Curl_easy* %8, %struct.Curl_easy** %data6, align 8, !dbg !3491
  br label %if.end7, !dbg !3492

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3493
  %mstate8 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 3, !dbg !3494
  %12 = load i32, i32* %mstate8, align 8, !dbg !3494
  switch i32 %12, label %sw.default [
    i32 3, label %sw.bb
    i32 7, label %sw.bb9
    i32 6, label %sw.bb9
    i32 9, label %sw.bb11
    i32 10, label %sw.bb11
    i32 5, label %sw.bb14
    i32 4, label %sw.bb17
    i32 11, label %sw.bb20
    i32 12, label %sw.bb23
    i32 14, label %sw.bb23
    i32 13, label %sw.bb23
  ], !dbg !3495

sw.default:                                       ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3496
  br label %return, !dbg !3496

sw.bb:                                            ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3498
  br label %return, !dbg !3498

sw.bb9:                                           ; preds = %if.end7, %if.end7
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3499
  %easy_conn10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 2, !dbg !3500
  %14 = load %struct.connectdata*, %struct.connectdata** %easy_conn10, align 8, !dbg !3500
  %15 = load i32*, i32** %socks.addr, align 8, !dbg !3501
  %16 = load i32, i32* %numsocks.addr, align 4, !dbg !3502
  %call = call i32 @Curl_protocol_getsock(%struct.connectdata* %14, i32* %15, i32 %16), !dbg !3503
  store i32 %call, i32* %retval, align 4, !dbg !3504
  br label %return, !dbg !3504

sw.bb11:                                          ; preds = %if.end7, %if.end7
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3505
  %easy_conn12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 2, !dbg !3506
  %18 = load %struct.connectdata*, %struct.connectdata** %easy_conn12, align 8, !dbg !3506
  %19 = load i32*, i32** %socks.addr, align 8, !dbg !3507
  %20 = load i32, i32* %numsocks.addr, align 4, !dbg !3508
  %call13 = call i32 @Curl_doing_getsock(%struct.connectdata* %18, i32* %19, i32 %20), !dbg !3509
  store i32 %call13, i32* %retval, align 4, !dbg !3510
  br label %return, !dbg !3510

sw.bb14:                                          ; preds = %if.end7
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3511
  %easy_conn15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %21, i32 0, i32 2, !dbg !3512
  %22 = load %struct.connectdata*, %struct.connectdata** %easy_conn15, align 8, !dbg !3512
  %23 = load i32*, i32** %socks.addr, align 8, !dbg !3513
  %24 = load i32, i32* %numsocks.addr, align 4, !dbg !3514
  %call16 = call i32 @waitproxyconnect_getsock(%struct.connectdata* %22, i32* %23, i32 %24), !dbg !3515
  store i32 %call16, i32* %retval, align 4, !dbg !3516
  br label %return, !dbg !3516

sw.bb17:                                          ; preds = %if.end7
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3517
  %easy_conn18 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 2, !dbg !3518
  %26 = load %struct.connectdata*, %struct.connectdata** %easy_conn18, align 8, !dbg !3518
  %27 = load i32*, i32** %socks.addr, align 8, !dbg !3519
  %28 = load i32, i32* %numsocks.addr, align 4, !dbg !3520
  %call19 = call i32 @waitconnect_getsock(%struct.connectdata* %26, i32* %27, i32 %28), !dbg !3521
  store i32 %call19, i32* %retval, align 4, !dbg !3522
  br label %return, !dbg !3522

sw.bb20:                                          ; preds = %if.end7
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3523
  %easy_conn21 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %29, i32 0, i32 2, !dbg !3524
  %30 = load %struct.connectdata*, %struct.connectdata** %easy_conn21, align 8, !dbg !3524
  %31 = load i32*, i32** %socks.addr, align 8, !dbg !3525
  %32 = load i32, i32* %numsocks.addr, align 4, !dbg !3526
  %call22 = call i32 @domore_getsock(%struct.connectdata* %30, i32* %31, i32 %32), !dbg !3527
  store i32 %call22, i32* %retval, align 4, !dbg !3528
  br label %return, !dbg !3528

sw.bb23:                                          ; preds = %if.end7, %if.end7, %if.end7
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3529
  %easy_conn24 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 2, !dbg !3530
  %34 = load %struct.connectdata*, %struct.connectdata** %easy_conn24, align 8, !dbg !3530
  %35 = load i32*, i32** %socks.addr, align 8, !dbg !3531
  %36 = load i32, i32* %numsocks.addr, align 4, !dbg !3532
  %call25 = call i32 @Curl_single_getsock(%struct.connectdata* %34, i32* %35, i32 %36), !dbg !3533
  store i32 %call25, i32* %retval, align 4, !dbg !3534
  br label %return, !dbg !3534

return:                                           ; preds = %sw.bb23, %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb11, %sw.bb9, %sw.bb, %sw.default, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !3535
  ret i32 %37, !dbg !3535
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_wait(%struct.Curl_multi* %multi, %struct.curl_waitfd* %extra_fds, i32 %extra_nfds, i32 %timeout_ms, i32* %ret) #0 !dbg !1812 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %extra_fds.addr = alloca %struct.curl_waitfd*, align 8
  %extra_nfds.addr = alloca i32, align 4
  %timeout_ms.addr = alloca i32, align 4
  %ret.addr = alloca i32*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %sockbunch = alloca [5 x i32], align 16
  %bitmap = alloca i32, align 4
  %i = alloca i32, align 4
  %nfds = alloca i32, align 4
  %curlfds = alloca i32, align 4
  %ufds = alloca %struct.pollfd*, align 8
  %ufds_malloc = alloca i8, align 1
  %timeout_internal = alloca i64, align 8
  %retcode = alloca i32, align 4
  %a_few_on_stack = alloca [10 x %struct.pollfd], align 16
  %s = alloca i32, align 4
  %s55 = alloca i32, align 4
  %pollrc = alloca i32, align 4
  %mask = alloca i16, align 2
  %r = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3536, metadata !1963), !dbg !3537
  store %struct.curl_waitfd* %extra_fds, %struct.curl_waitfd** %extra_fds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_waitfd** %extra_fds.addr, metadata !3538, metadata !1963), !dbg !3539
  store i32 %extra_nfds, i32* %extra_nfds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra_nfds.addr, metadata !3540, metadata !1963), !dbg !3541
  store i32 %timeout_ms, i32* %timeout_ms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_ms.addr, metadata !3542, metadata !1963), !dbg !3543
  store i32* %ret, i32** %ret.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ret.addr, metadata !3544, metadata !1963), !dbg !3545
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !3546, metadata !1963), !dbg !3547
  call void @llvm.dbg.declare(metadata [5 x i32]* %sockbunch, metadata !3548, metadata !1963), !dbg !3549
  call void @llvm.dbg.declare(metadata i32* %bitmap, metadata !3550, metadata !1963), !dbg !3551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3552, metadata !1963), !dbg !3553
  call void @llvm.dbg.declare(metadata i32* %nfds, metadata !3554, metadata !1963), !dbg !3555
  store i32 0, i32* %nfds, align 4, !dbg !3555
  call void @llvm.dbg.declare(metadata i32* %curlfds, metadata !3556, metadata !1963), !dbg !3557
  call void @llvm.dbg.declare(metadata %struct.pollfd** %ufds, metadata !3558, metadata !1963), !dbg !3566
  store %struct.pollfd* null, %struct.pollfd** %ufds, align 8, !dbg !3566
  call void @llvm.dbg.declare(metadata i8* %ufds_malloc, metadata !3567, metadata !1963), !dbg !3568
  store i8 0, i8* %ufds_malloc, align 1, !dbg !3568
  call void @llvm.dbg.declare(metadata i64* %timeout_internal, metadata !3569, metadata !1963), !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %retcode, metadata !3571, metadata !1963), !dbg !3572
  store i32 0, i32* %retcode, align 4, !dbg !3572
  call void @llvm.dbg.declare(metadata [10 x %struct.pollfd]* %a_few_on_stack, metadata !3573, metadata !1963), !dbg !3577
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3578
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !3578
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !3578

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3580
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 0, !dbg !3580
  %2 = load i64, i64* %type, align 8, !dbg !3580
  %cmp = icmp eq i64 %2, 764702, !dbg !3580
  br i1 %cmp, label %if.end, label %if.then, !dbg !3582

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !3583
  br label %return, !dbg !3583

if.end:                                           ; preds = %land.lhs.true
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3584
  %call = call i32 @multi_timeout(%struct.Curl_multi* %3, i64* %timeout_internal), !dbg !3585
  %4 = load i64, i64* %timeout_internal, align 8, !dbg !3586
  %cmp1 = icmp sge i64 %4, 0, !dbg !3588
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !3589

land.lhs.true2:                                   ; preds = %if.end
  %5 = load i64, i64* %timeout_internal, align 8, !dbg !3590
  %6 = load i32, i32* %timeout_ms.addr, align 4, !dbg !3592
  %conv = sext i32 %6 to i64, !dbg !3593
  %cmp3 = icmp slt i64 %5, %conv, !dbg !3594
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !3595

if.then5:                                         ; preds = %land.lhs.true2
  %7 = load i64, i64* %timeout_internal, align 8, !dbg !3596
  %conv6 = trunc i64 %7 to i32, !dbg !3597
  store i32 %conv6, i32* %timeout_ms.addr, align 4, !dbg !3598
  br label %if.end7, !dbg !3599

if.end7:                                          ; preds = %if.then5, %land.lhs.true2, %if.end
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3600
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %8, i32 0, i32 1, !dbg !3601
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !3601
  store %struct.Curl_easy* %9, %struct.Curl_easy** %data, align 8, !dbg !3602
  br label %while.cond, !dbg !3603

while.cond:                                       ; preds = %for.end, %if.end7
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3604
  %tobool8 = icmp ne %struct.Curl_easy* %10, null, !dbg !3606
  br i1 %tobool8, label %while.body, label %while.end, !dbg !3606

while.body:                                       ; preds = %while.cond
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3607
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i32 0, i32 0, !dbg !3609
  %call9 = call i32 @multi_getsock(%struct.Curl_easy* %11, i32* %arraydecay, i32 5), !dbg !3610
  store i32 %call9, i32* %bitmap, align 4, !dbg !3611
  store i32 0, i32* %i, align 4, !dbg !3612
  br label %for.cond, !dbg !3614

for.cond:                                         ; preds = %for.inc, %while.body
  %12 = load i32, i32* %i, align 4, !dbg !3615
  %cmp10 = icmp ult i32 %12, 5, !dbg !3618
  br i1 %cmp10, label %for.body, label %for.end, !dbg !3619

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3620, metadata !1963), !dbg !3622
  store i32 -1, i32* %s, align 4, !dbg !3622
  %13 = load i32, i32* %bitmap, align 4, !dbg !3623
  %14 = load i32, i32* %i, align 4, !dbg !3625
  %shl = shl i32 1, %14, !dbg !3625
  %and = and i32 %13, %shl, !dbg !3626
  %tobool12 = icmp ne i32 %and, 0, !dbg !3626
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3627

if.then13:                                        ; preds = %for.body
  %15 = load i32, i32* %nfds, align 4, !dbg !3628
  %inc = add i32 %15, 1, !dbg !3628
  store i32 %inc, i32* %nfds, align 4, !dbg !3628
  %16 = load i32, i32* %i, align 4, !dbg !3630
  %idxprom = zext i32 %16 to i64, !dbg !3631
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom, !dbg !3631
  %17 = load i32, i32* %arrayidx, align 4, !dbg !3631
  store i32 %17, i32* %s, align 4, !dbg !3632
  br label %if.end14, !dbg !3633

if.end14:                                         ; preds = %if.then13, %for.body
  %18 = load i32, i32* %bitmap, align 4, !dbg !3634
  %19 = load i32, i32* %i, align 4, !dbg !3636
  %add = add i32 16, %19, !dbg !3636
  %shl15 = shl i32 1, %add, !dbg !3636
  %and16 = and i32 %18, %shl15, !dbg !3637
  %tobool17 = icmp ne i32 %and16, 0, !dbg !3637
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !3638

if.then18:                                        ; preds = %if.end14
  %20 = load i32, i32* %nfds, align 4, !dbg !3639
  %inc19 = add i32 %20, 1, !dbg !3639
  store i32 %inc19, i32* %nfds, align 4, !dbg !3639
  %21 = load i32, i32* %i, align 4, !dbg !3641
  %idxprom20 = zext i32 %21 to i64, !dbg !3642
  %arrayidx21 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom20, !dbg !3642
  %22 = load i32, i32* %arrayidx21, align 4, !dbg !3642
  store i32 %22, i32* %s, align 4, !dbg !3643
  br label %if.end22, !dbg !3644

if.end22:                                         ; preds = %if.then18, %if.end14
  %23 = load i32, i32* %s, align 4, !dbg !3645
  %cmp23 = icmp eq i32 %23, -1, !dbg !3647
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !3648

if.then25:                                        ; preds = %if.end22
  br label %for.end, !dbg !3649

if.end26:                                         ; preds = %if.end22
  br label %for.inc, !dbg !3651

for.inc:                                          ; preds = %if.end26
  %24 = load i32, i32* %i, align 4, !dbg !3652
  %inc27 = add i32 %24, 1, !dbg !3652
  store i32 %inc27, i32* %i, align 4, !dbg !3652
  br label %for.cond, !dbg !3654

for.end:                                          ; preds = %if.then25, %for.cond
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3655
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 0, !dbg !3656
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %next, align 8, !dbg !3656
  store %struct.Curl_easy* %26, %struct.Curl_easy** %data, align 8, !dbg !3657
  br label %while.cond, !dbg !3658

while.end:                                        ; preds = %while.cond
  %27 = load i32, i32* %nfds, align 4, !dbg !3660
  store i32 %27, i32* %curlfds, align 4, !dbg !3661
  %28 = load i32, i32* %extra_nfds.addr, align 4, !dbg !3662
  %29 = load i32, i32* %nfds, align 4, !dbg !3663
  %add28 = add i32 %29, %28, !dbg !3663
  store i32 %add28, i32* %nfds, align 4, !dbg !3663
  %30 = load i32, i32* %nfds, align 4, !dbg !3664
  %tobool29 = icmp ne i32 %30, 0, !dbg !3664
  br i1 %tobool29, label %if.then31, label %lor.lhs.false, !dbg !3666

lor.lhs.false:                                    ; preds = %while.end
  %31 = load i32, i32* %extra_nfds.addr, align 4, !dbg !3667
  %tobool30 = icmp ne i32 %31, 0, !dbg !3667
  br i1 %tobool30, label %if.then31, label %if.end42, !dbg !3669

if.then31:                                        ; preds = %lor.lhs.false, %while.end
  %32 = load i32, i32* %nfds, align 4, !dbg !3670
  %cmp32 = icmp ugt i32 %32, 10, !dbg !3673
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !3674

if.then34:                                        ; preds = %if.then31
  %33 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !3675
  %34 = load i32, i32* %nfds, align 4, !dbg !3675
  %conv35 = zext i32 %34 to i64, !dbg !3675
  %mul = mul i64 %conv35, 8, !dbg !3675
  %call36 = call i8* %33(i64 %mul), !dbg !3675
  %35 = bitcast i8* %call36 to %struct.pollfd*, !dbg !3675
  store %struct.pollfd* %35, %struct.pollfd** %ufds, align 8, !dbg !3677
  %36 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3678
  %tobool37 = icmp ne %struct.pollfd* %36, null, !dbg !3678
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !3680

if.then38:                                        ; preds = %if.then34
  store i32 3, i32* %retval, align 4, !dbg !3681
  br label %return, !dbg !3681

if.end39:                                         ; preds = %if.then34
  store i8 1, i8* %ufds_malloc, align 1, !dbg !3682
  br label %if.end41, !dbg !3683

if.else:                                          ; preds = %if.then31
  %arrayidx40 = getelementptr inbounds [10 x %struct.pollfd], [10 x %struct.pollfd]* %a_few_on_stack, i64 0, i64 0, !dbg !3684
  store %struct.pollfd* %arrayidx40, %struct.pollfd** %ufds, align 8, !dbg !3685
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.end39
  br label %if.end42, !dbg !3686

if.end42:                                         ; preds = %if.end41, %lor.lhs.false
  store i32 0, i32* %nfds, align 4, !dbg !3687
  %37 = load i32, i32* %curlfds, align 4, !dbg !3688
  %tobool43 = icmp ne i32 %37, 0, !dbg !3688
  br i1 %tobool43, label %if.then44, label %if.end96, !dbg !3690

if.then44:                                        ; preds = %if.end42
  %38 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3691
  %easyp45 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %38, i32 0, i32 1, !dbg !3693
  %39 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp45, align 8, !dbg !3693
  store %struct.Curl_easy* %39, %struct.Curl_easy** %data, align 8, !dbg !3694
  br label %while.cond46, !dbg !3695

while.cond46:                                     ; preds = %for.end93, %if.then44
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3696
  %tobool47 = icmp ne %struct.Curl_easy* %40, null, !dbg !3698
  br i1 %tobool47, label %while.body48, label %while.end95, !dbg !3698

while.body48:                                     ; preds = %while.cond46
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3699
  %arraydecay49 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i32 0, i32 0, !dbg !3701
  %call50 = call i32 @multi_getsock(%struct.Curl_easy* %41, i32* %arraydecay49, i32 5), !dbg !3702
  store i32 %call50, i32* %bitmap, align 4, !dbg !3703
  store i32 0, i32* %i, align 4, !dbg !3704
  br label %for.cond51, !dbg !3706

for.cond51:                                       ; preds = %for.inc91, %while.body48
  %42 = load i32, i32* %i, align 4, !dbg !3707
  %cmp52 = icmp ult i32 %42, 5, !dbg !3710
  br i1 %cmp52, label %for.body54, label %for.end93, !dbg !3711

for.body54:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata i32* %s55, metadata !3712, metadata !1963), !dbg !3714
  store i32 -1, i32* %s55, align 4, !dbg !3714
  %43 = load i32, i32* %bitmap, align 4, !dbg !3715
  %44 = load i32, i32* %i, align 4, !dbg !3717
  %shl56 = shl i32 1, %44, !dbg !3717
  %and57 = and i32 %43, %shl56, !dbg !3718
  %tobool58 = icmp ne i32 %and57, 0, !dbg !3718
  br i1 %tobool58, label %if.then59, label %if.end69, !dbg !3719

if.then59:                                        ; preds = %for.body54
  %45 = load i32, i32* %i, align 4, !dbg !3720
  %idxprom60 = zext i32 %45 to i64, !dbg !3722
  %arrayidx61 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom60, !dbg !3722
  %46 = load i32, i32* %arrayidx61, align 4, !dbg !3722
  %47 = load i32, i32* %nfds, align 4, !dbg !3723
  %idxprom62 = zext i32 %47 to i64, !dbg !3724
  %48 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3724
  %arrayidx63 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %48, i64 %idxprom62, !dbg !3724
  %fd = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx63, i32 0, i32 0, !dbg !3725
  store i32 %46, i32* %fd, align 4, !dbg !3726
  %49 = load i32, i32* %nfds, align 4, !dbg !3727
  %idxprom64 = zext i32 %49 to i64, !dbg !3728
  %50 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3728
  %arrayidx65 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %50, i64 %idxprom64, !dbg !3728
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx65, i32 0, i32 1, !dbg !3729
  store i16 1, i16* %events, align 4, !dbg !3730
  %51 = load i32, i32* %nfds, align 4, !dbg !3731
  %inc66 = add i32 %51, 1, !dbg !3731
  store i32 %inc66, i32* %nfds, align 4, !dbg !3731
  %52 = load i32, i32* %i, align 4, !dbg !3732
  %idxprom67 = zext i32 %52 to i64, !dbg !3733
  %arrayidx68 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom67, !dbg !3733
  %53 = load i32, i32* %arrayidx68, align 4, !dbg !3733
  store i32 %53, i32* %s55, align 4, !dbg !3734
  br label %if.end69, !dbg !3735

if.end69:                                         ; preds = %if.then59, %for.body54
  %54 = load i32, i32* %bitmap, align 4, !dbg !3736
  %55 = load i32, i32* %i, align 4, !dbg !3738
  %add70 = add i32 16, %55, !dbg !3738
  %shl71 = shl i32 1, %add70, !dbg !3738
  %and72 = and i32 %54, %shl71, !dbg !3739
  %tobool73 = icmp ne i32 %and72, 0, !dbg !3739
  br i1 %tobool73, label %if.then74, label %if.end86, !dbg !3740

if.then74:                                        ; preds = %if.end69
  %56 = load i32, i32* %i, align 4, !dbg !3741
  %idxprom75 = zext i32 %56 to i64, !dbg !3743
  %arrayidx76 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom75, !dbg !3743
  %57 = load i32, i32* %arrayidx76, align 4, !dbg !3743
  %58 = load i32, i32* %nfds, align 4, !dbg !3744
  %idxprom77 = zext i32 %58 to i64, !dbg !3745
  %59 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3745
  %arrayidx78 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %59, i64 %idxprom77, !dbg !3745
  %fd79 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx78, i32 0, i32 0, !dbg !3746
  store i32 %57, i32* %fd79, align 4, !dbg !3747
  %60 = load i32, i32* %nfds, align 4, !dbg !3748
  %idxprom80 = zext i32 %60 to i64, !dbg !3749
  %61 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3749
  %arrayidx81 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %61, i64 %idxprom80, !dbg !3749
  %events82 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx81, i32 0, i32 1, !dbg !3750
  store i16 4, i16* %events82, align 4, !dbg !3751
  %62 = load i32, i32* %nfds, align 4, !dbg !3752
  %inc83 = add i32 %62, 1, !dbg !3752
  store i32 %inc83, i32* %nfds, align 4, !dbg !3752
  %63 = load i32, i32* %i, align 4, !dbg !3753
  %idxprom84 = zext i32 %63 to i64, !dbg !3754
  %arrayidx85 = getelementptr inbounds [5 x i32], [5 x i32]* %sockbunch, i64 0, i64 %idxprom84, !dbg !3754
  %64 = load i32, i32* %arrayidx85, align 4, !dbg !3754
  store i32 %64, i32* %s55, align 4, !dbg !3755
  br label %if.end86, !dbg !3756

if.end86:                                         ; preds = %if.then74, %if.end69
  %65 = load i32, i32* %s55, align 4, !dbg !3757
  %cmp87 = icmp eq i32 %65, -1, !dbg !3759
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !3760

if.then89:                                        ; preds = %if.end86
  br label %for.end93, !dbg !3761

if.end90:                                         ; preds = %if.end86
  br label %for.inc91, !dbg !3763

for.inc91:                                        ; preds = %if.end90
  %66 = load i32, i32* %i, align 4, !dbg !3764
  %inc92 = add i32 %66, 1, !dbg !3764
  store i32 %inc92, i32* %i, align 4, !dbg !3764
  br label %for.cond51, !dbg !3766

for.end93:                                        ; preds = %if.then89, %for.cond51
  %67 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !3767
  %next94 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %67, i32 0, i32 0, !dbg !3768
  %68 = load %struct.Curl_easy*, %struct.Curl_easy** %next94, align 8, !dbg !3768
  store %struct.Curl_easy* %68, %struct.Curl_easy** %data, align 8, !dbg !3769
  br label %while.cond46, !dbg !3770

while.end95:                                      ; preds = %while.cond46
  br label %if.end96, !dbg !3772

if.end96:                                         ; preds = %while.end95, %if.end42
  store i32 0, i32* %i, align 4, !dbg !3773
  br label %for.cond97, !dbg !3775

for.cond97:                                       ; preds = %for.inc152, %if.end96
  %69 = load i32, i32* %i, align 4, !dbg !3776
  %70 = load i32, i32* %extra_nfds.addr, align 4, !dbg !3779
  %cmp98 = icmp ult i32 %69, %70, !dbg !3780
  br i1 %cmp98, label %for.body100, label %for.end154, !dbg !3781

for.body100:                                      ; preds = %for.cond97
  %71 = load i32, i32* %i, align 4, !dbg !3782
  %idxprom101 = zext i32 %71 to i64, !dbg !3784
  %72 = load %struct.curl_waitfd*, %struct.curl_waitfd** %extra_fds.addr, align 8, !dbg !3784
  %arrayidx102 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %72, i64 %idxprom101, !dbg !3784
  %fd103 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %arrayidx102, i32 0, i32 0, !dbg !3785
  %73 = load i32, i32* %fd103, align 4, !dbg !3785
  %74 = load i32, i32* %nfds, align 4, !dbg !3786
  %idxprom104 = zext i32 %74 to i64, !dbg !3787
  %75 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3787
  %arrayidx105 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %75, i64 %idxprom104, !dbg !3787
  %fd106 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx105, i32 0, i32 0, !dbg !3788
  store i32 %73, i32* %fd106, align 4, !dbg !3789
  %76 = load i32, i32* %nfds, align 4, !dbg !3790
  %idxprom107 = zext i32 %76 to i64, !dbg !3791
  %77 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3791
  %arrayidx108 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %77, i64 %idxprom107, !dbg !3791
  %events109 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx108, i32 0, i32 1, !dbg !3792
  store i16 0, i16* %events109, align 4, !dbg !3793
  %78 = load i32, i32* %i, align 4, !dbg !3794
  %idxprom110 = zext i32 %78 to i64, !dbg !3796
  %79 = load %struct.curl_waitfd*, %struct.curl_waitfd** %extra_fds.addr, align 8, !dbg !3796
  %arrayidx111 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %79, i64 %idxprom110, !dbg !3796
  %events112 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %arrayidx111, i32 0, i32 1, !dbg !3797
  %80 = load i16, i16* %events112, align 4, !dbg !3797
  %conv113 = sext i16 %80 to i32, !dbg !3796
  %and114 = and i32 %conv113, 1, !dbg !3798
  %tobool115 = icmp ne i32 %and114, 0, !dbg !3798
  br i1 %tobool115, label %if.then116, label %if.end122, !dbg !3799

if.then116:                                       ; preds = %for.body100
  %81 = load i32, i32* %nfds, align 4, !dbg !3800
  %idxprom117 = zext i32 %81 to i64, !dbg !3801
  %82 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3801
  %arrayidx118 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %82, i64 %idxprom117, !dbg !3801
  %events119 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx118, i32 0, i32 1, !dbg !3802
  %83 = load i16, i16* %events119, align 4, !dbg !3803
  %conv120 = sext i16 %83 to i32, !dbg !3803
  %or = or i32 %conv120, 1, !dbg !3803
  %conv121 = trunc i32 %or to i16, !dbg !3803
  store i16 %conv121, i16* %events119, align 4, !dbg !3803
  br label %if.end122, !dbg !3801

if.end122:                                        ; preds = %if.then116, %for.body100
  %84 = load i32, i32* %i, align 4, !dbg !3804
  %idxprom123 = zext i32 %84 to i64, !dbg !3806
  %85 = load %struct.curl_waitfd*, %struct.curl_waitfd** %extra_fds.addr, align 8, !dbg !3806
  %arrayidx124 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %85, i64 %idxprom123, !dbg !3806
  %events125 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %arrayidx124, i32 0, i32 1, !dbg !3807
  %86 = load i16, i16* %events125, align 4, !dbg !3807
  %conv126 = sext i16 %86 to i32, !dbg !3806
  %and127 = and i32 %conv126, 2, !dbg !3808
  %tobool128 = icmp ne i32 %and127, 0, !dbg !3808
  br i1 %tobool128, label %if.then129, label %if.end136, !dbg !3809

if.then129:                                       ; preds = %if.end122
  %87 = load i32, i32* %nfds, align 4, !dbg !3810
  %idxprom130 = zext i32 %87 to i64, !dbg !3811
  %88 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3811
  %arrayidx131 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %88, i64 %idxprom130, !dbg !3811
  %events132 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx131, i32 0, i32 1, !dbg !3812
  %89 = load i16, i16* %events132, align 4, !dbg !3813
  %conv133 = sext i16 %89 to i32, !dbg !3813
  %or134 = or i32 %conv133, 2, !dbg !3813
  %conv135 = trunc i32 %or134 to i16, !dbg !3813
  store i16 %conv135, i16* %events132, align 4, !dbg !3813
  br label %if.end136, !dbg !3811

if.end136:                                        ; preds = %if.then129, %if.end122
  %90 = load i32, i32* %i, align 4, !dbg !3814
  %idxprom137 = zext i32 %90 to i64, !dbg !3816
  %91 = load %struct.curl_waitfd*, %struct.curl_waitfd** %extra_fds.addr, align 8, !dbg !3816
  %arrayidx138 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %91, i64 %idxprom137, !dbg !3816
  %events139 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %arrayidx138, i32 0, i32 1, !dbg !3817
  %92 = load i16, i16* %events139, align 4, !dbg !3817
  %conv140 = sext i16 %92 to i32, !dbg !3816
  %and141 = and i32 %conv140, 4, !dbg !3818
  %tobool142 = icmp ne i32 %and141, 0, !dbg !3818
  br i1 %tobool142, label %if.then143, label %if.end150, !dbg !3819

if.then143:                                       ; preds = %if.end136
  %93 = load i32, i32* %nfds, align 4, !dbg !3820
  %idxprom144 = zext i32 %93 to i64, !dbg !3821
  %94 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3821
  %arrayidx145 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %94, i64 %idxprom144, !dbg !3821
  %events146 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx145, i32 0, i32 1, !dbg !3822
  %95 = load i16, i16* %events146, align 4, !dbg !3823
  %conv147 = sext i16 %95 to i32, !dbg !3823
  %or148 = or i32 %conv147, 4, !dbg !3823
  %conv149 = trunc i32 %or148 to i16, !dbg !3823
  store i16 %conv149, i16* %events146, align 4, !dbg !3823
  br label %if.end150, !dbg !3821

if.end150:                                        ; preds = %if.then143, %if.end136
  %96 = load i32, i32* %nfds, align 4, !dbg !3824
  %inc151 = add i32 %96, 1, !dbg !3824
  store i32 %inc151, i32* %nfds, align 4, !dbg !3824
  br label %for.inc152, !dbg !3825

for.inc152:                                       ; preds = %if.end150
  %97 = load i32, i32* %i, align 4, !dbg !3826
  %inc153 = add i32 %97, 1, !dbg !3826
  store i32 %inc153, i32* %i, align 4, !dbg !3826
  br label %for.cond97, !dbg !3828

for.end154:                                       ; preds = %for.cond97
  %98 = load i32, i32* %nfds, align 4, !dbg !3829
  %tobool155 = icmp ne i32 %98, 0, !dbg !3829
  br i1 %tobool155, label %if.then156, label %if.end197, !dbg !3831

if.then156:                                       ; preds = %for.end154
  call void @llvm.dbg.declare(metadata i32* %pollrc, metadata !3832, metadata !1963), !dbg !3834
  %99 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3835
  %100 = load i32, i32* %nfds, align 4, !dbg !3836
  %101 = load i32, i32* %timeout_ms.addr, align 4, !dbg !3837
  %call157 = call i32 @Curl_poll(%struct.pollfd* %99, i32 %100, i32 %101), !dbg !3838
  store i32 %call157, i32* %pollrc, align 4, !dbg !3839
  br label %do.body, !dbg !3840

do.body:                                          ; preds = %if.then156
  br label %do.end, !dbg !3841

do.end:                                           ; preds = %do.body
  %102 = load i32, i32* %pollrc, align 4, !dbg !3844
  %cmp158 = icmp sgt i32 %102, 0, !dbg !3846
  br i1 %cmp158, label %if.then160, label %if.end196, !dbg !3847

if.then160:                                       ; preds = %do.end
  %103 = load i32, i32* %pollrc, align 4, !dbg !3848
  store i32 %103, i32* %retcode, align 4, !dbg !3850
  store i32 0, i32* %i, align 4, !dbg !3851
  br label %for.cond161, !dbg !3853

for.cond161:                                      ; preds = %for.inc193, %if.then160
  %104 = load i32, i32* %i, align 4, !dbg !3854
  %105 = load i32, i32* %extra_nfds.addr, align 4, !dbg !3857
  %cmp162 = icmp ult i32 %104, %105, !dbg !3858
  br i1 %cmp162, label %for.body164, label %for.end195, !dbg !3859

for.body164:                                      ; preds = %for.cond161
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !3860, metadata !1963), !dbg !3862
  store i16 0, i16* %mask, align 2, !dbg !3862
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3863, metadata !1963), !dbg !3864
  %106 = load i32, i32* %curlfds, align 4, !dbg !3865
  %107 = load i32, i32* %i, align 4, !dbg !3866
  %add165 = add i32 %106, %107, !dbg !3867
  %idxprom166 = zext i32 %add165 to i64, !dbg !3868
  %108 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3868
  %arrayidx167 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %108, i64 %idxprom166, !dbg !3868
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx167, i32 0, i32 2, !dbg !3869
  %109 = load i16, i16* %revents, align 2, !dbg !3869
  %conv168 = sext i16 %109 to i32, !dbg !3868
  store i32 %conv168, i32* %r, align 4, !dbg !3864
  %110 = load i32, i32* %r, align 4, !dbg !3870
  %and169 = and i32 %110, 1, !dbg !3872
  %tobool170 = icmp ne i32 %and169, 0, !dbg !3872
  br i1 %tobool170, label %if.then171, label %if.end175, !dbg !3873

if.then171:                                       ; preds = %for.body164
  %111 = load i16, i16* %mask, align 2, !dbg !3874
  %conv172 = zext i16 %111 to i32, !dbg !3874
  %or173 = or i32 %conv172, 1, !dbg !3874
  %conv174 = trunc i32 %or173 to i16, !dbg !3874
  store i16 %conv174, i16* %mask, align 2, !dbg !3874
  br label %if.end175, !dbg !3875

if.end175:                                        ; preds = %if.then171, %for.body164
  %112 = load i32, i32* %r, align 4, !dbg !3876
  %and176 = and i32 %112, 4, !dbg !3878
  %tobool177 = icmp ne i32 %and176, 0, !dbg !3878
  br i1 %tobool177, label %if.then178, label %if.end182, !dbg !3879

if.then178:                                       ; preds = %if.end175
  %113 = load i16, i16* %mask, align 2, !dbg !3880
  %conv179 = zext i16 %113 to i32, !dbg !3880
  %or180 = or i32 %conv179, 4, !dbg !3880
  %conv181 = trunc i32 %or180 to i16, !dbg !3880
  store i16 %conv181, i16* %mask, align 2, !dbg !3880
  br label %if.end182, !dbg !3881

if.end182:                                        ; preds = %if.then178, %if.end175
  %114 = load i32, i32* %r, align 4, !dbg !3882
  %and183 = and i32 %114, 2, !dbg !3884
  %tobool184 = icmp ne i32 %and183, 0, !dbg !3884
  br i1 %tobool184, label %if.then185, label %if.end189, !dbg !3885

if.then185:                                       ; preds = %if.end182
  %115 = load i16, i16* %mask, align 2, !dbg !3886
  %conv186 = zext i16 %115 to i32, !dbg !3886
  %or187 = or i32 %conv186, 2, !dbg !3886
  %conv188 = trunc i32 %or187 to i16, !dbg !3886
  store i16 %conv188, i16* %mask, align 2, !dbg !3886
  br label %if.end189, !dbg !3887

if.end189:                                        ; preds = %if.then185, %if.end182
  %116 = load i16, i16* %mask, align 2, !dbg !3888
  %117 = load i32, i32* %i, align 4, !dbg !3889
  %idxprom190 = zext i32 %117 to i64, !dbg !3890
  %118 = load %struct.curl_waitfd*, %struct.curl_waitfd** %extra_fds.addr, align 8, !dbg !3890
  %arrayidx191 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %118, i64 %idxprom190, !dbg !3890
  %revents192 = getelementptr inbounds %struct.curl_waitfd, %struct.curl_waitfd* %arrayidx191, i32 0, i32 2, !dbg !3891
  store i16 %116, i16* %revents192, align 2, !dbg !3892
  br label %for.inc193, !dbg !3893

for.inc193:                                       ; preds = %if.end189
  %119 = load i32, i32* %i, align 4, !dbg !3894
  %inc194 = add i32 %119, 1, !dbg !3894
  store i32 %inc194, i32* %i, align 4, !dbg !3894
  br label %for.cond161, !dbg !3896

for.end195:                                       ; preds = %for.cond161
  br label %if.end196, !dbg !3897

if.end196:                                        ; preds = %for.end195, %do.end
  br label %if.end197, !dbg !3898

if.end197:                                        ; preds = %if.end196, %for.end154
  %120 = load i8, i8* %ufds_malloc, align 1, !dbg !3899
  %tobool198 = trunc i8 %120 to i1, !dbg !3899
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !3901

if.then199:                                       ; preds = %if.end197
  %121 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !3902
  %122 = load %struct.pollfd*, %struct.pollfd** %ufds, align 8, !dbg !3902
  %123 = bitcast %struct.pollfd* %122 to i8*, !dbg !3902
  call void %121(i8* %123), !dbg !3902
  br label %if.end200, !dbg !3902

if.end200:                                        ; preds = %if.then199, %if.end197
  %124 = load i32*, i32** %ret.addr, align 8, !dbg !3903
  %tobool201 = icmp ne i32* %124, null, !dbg !3903
  br i1 %tobool201, label %if.then202, label %if.end203, !dbg !3905

if.then202:                                       ; preds = %if.end200
  %125 = load i32, i32* %retcode, align 4, !dbg !3906
  %126 = load i32*, i32** %ret.addr, align 8, !dbg !3907
  store i32 %125, i32* %126, align 4, !dbg !3908
  br label %if.end203, !dbg !3909

if.end203:                                        ; preds = %if.then202, %if.end200
  store i32 0, i32* %retval, align 4, !dbg !3910
  br label %return, !dbg !3910

return:                                           ; preds = %if.end203, %if.then38, %if.then
  %127 = load i32, i32* %retval, align 4, !dbg !3911
  ret i32 %127, !dbg !3911
}

; Function Attrs: nounwind uwtable
define internal i32 @multi_timeout(%struct.Curl_multi* %multi, i64* %timeout_ms) #0 !dbg !1940 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %timeout_ms.addr = alloca i64*, align 8
  %now = alloca %struct.timeval, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3912, metadata !1963), !dbg !3913
  store i64* %timeout_ms, i64** %timeout_ms.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %timeout_ms.addr, metadata !3914, metadata !1963), !dbg !3915
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3916
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 12, !dbg !3918
  %1 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !3918
  %tobool = icmp ne %struct.Curl_tree* %1, null, !dbg !3916
  br i1 %tobool, label %if.then, label %if.else37, !dbg !3919

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !3920, metadata !1963), !dbg !3922
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !3923
  %2 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !3923
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3923
  %4 = extractvalue { i64, i64 } %call, 0, !dbg !3923
  store i64 %4, i64* %3, align 8, !dbg !3923
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3923
  %6 = extractvalue { i64, i64 } %call, 1, !dbg !3923
  store i64 %6, i64* %5, align 8, !dbg !3923
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3924
  %timetree1 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %7, i32 0, i32 12, !dbg !3925
  %8 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree1, align 8, !dbg !3925
  %9 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @multi_timeout.tv_zero to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !3926
  %10 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @multi_timeout.tv_zero to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !3926
  %call2 = call %struct.Curl_tree* @Curl_splay(i64 %9, i64 %10, %struct.Curl_tree* %8), !dbg !3926
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3927
  %timetree3 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %11, i32 0, i32 12, !dbg !3928
  store %struct.Curl_tree* %call2, %struct.Curl_tree** %timetree3, align 8, !dbg !3929
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3930
  %timetree4 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %12, i32 0, i32 12, !dbg !3930
  %13 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree4, align 8, !dbg !3930
  %key = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %13, i32 0, i32 4, !dbg !3930
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %key, i32 0, i32 0, !dbg !3930
  %14 = load i64, i64* %tv_sec, align 8, !dbg !3930
  %tv_sec5 = getelementptr inbounds %struct.timeval, %struct.timeval* %now, i32 0, i32 0, !dbg !3930
  %15 = load i64, i64* %tv_sec5, align 8, !dbg !3930
  %cmp = icmp slt i64 %14, %15, !dbg !3930
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3930

cond.true:                                        ; preds = %if.then
  br label %cond.end27, !dbg !3932

cond.false:                                       ; preds = %if.then
  %16 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3934
  %timetree6 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %16, i32 0, i32 12, !dbg !3934
  %17 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree6, align 8, !dbg !3934
  %key7 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %17, i32 0, i32 4, !dbg !3934
  %tv_sec8 = getelementptr inbounds %struct.timeval, %struct.timeval* %key7, i32 0, i32 0, !dbg !3934
  %18 = load i64, i64* %tv_sec8, align 8, !dbg !3934
  %tv_sec9 = getelementptr inbounds %struct.timeval, %struct.timeval* %now, i32 0, i32 0, !dbg !3934
  %19 = load i64, i64* %tv_sec9, align 8, !dbg !3934
  %cmp10 = icmp sgt i64 %18, %19, !dbg !3934
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !3934

cond.true11:                                      ; preds = %cond.false
  br label %cond.end25, !dbg !3936

cond.false12:                                     ; preds = %cond.false
  %20 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3938
  %timetree13 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %20, i32 0, i32 12, !dbg !3938
  %21 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree13, align 8, !dbg !3938
  %key14 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %21, i32 0, i32 4, !dbg !3938
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %key14, i32 0, i32 1, !dbg !3938
  %22 = load i64, i64* %tv_usec, align 8, !dbg !3938
  %tv_usec15 = getelementptr inbounds %struct.timeval, %struct.timeval* %now, i32 0, i32 1, !dbg !3938
  %23 = load i64, i64* %tv_usec15, align 8, !dbg !3938
  %cmp16 = icmp slt i64 %22, %23, !dbg !3938
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !3938

cond.true17:                                      ; preds = %cond.false12
  br label %cond.end, !dbg !3940

cond.false18:                                     ; preds = %cond.false12
  %24 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3942
  %timetree19 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %24, i32 0, i32 12, !dbg !3942
  %25 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree19, align 8, !dbg !3942
  %key20 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %25, i32 0, i32 4, !dbg !3942
  %tv_usec21 = getelementptr inbounds %struct.timeval, %struct.timeval* %key20, i32 0, i32 1, !dbg !3942
  %26 = load i64, i64* %tv_usec21, align 8, !dbg !3942
  %tv_usec22 = getelementptr inbounds %struct.timeval, %struct.timeval* %now, i32 0, i32 1, !dbg !3942
  %27 = load i64, i64* %tv_usec22, align 8, !dbg !3942
  %cmp23 = icmp sgt i64 %26, %27, !dbg !3942
  %cond = select i1 %cmp23, i32 1, i32 0, !dbg !3942
  br label %cond.end, !dbg !3942

cond.end:                                         ; preds = %cond.false18, %cond.true17
  %cond24 = phi i32 [ -1, %cond.true17 ], [ %cond, %cond.false18 ], !dbg !3944
  br label %cond.end25, !dbg !3944

cond.end25:                                       ; preds = %cond.end, %cond.true11
  %cond26 = phi i32 [ 1, %cond.true11 ], [ %cond24, %cond.end ], !dbg !3946
  br label %cond.end27, !dbg !3946

cond.end27:                                       ; preds = %cond.end25, %cond.true
  %cond28 = phi i32 [ -1, %cond.true ], [ %cond26, %cond.end25 ], !dbg !3948
  %cmp29 = icmp sgt i32 %cond28, 0, !dbg !3950
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !3948

if.then30:                                        ; preds = %cond.end27
  %28 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3951
  %timetree31 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %28, i32 0, i32 12, !dbg !3953
  %29 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree31, align 8, !dbg !3953
  %key32 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %29, i32 0, i32 4, !dbg !3954
  %30 = bitcast %struct.timeval* %key32 to { i64, i64 }*, !dbg !3955
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !3955
  %32 = load i64, i64* %31, align 8, !dbg !3955
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !3955
  %34 = load i64, i64* %33, align 8, !dbg !3955
  %35 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !3955
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i32 0, i32 0, !dbg !3955
  %37 = load i64, i64* %36, align 8, !dbg !3955
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i32 0, i32 1, !dbg !3955
  %39 = load i64, i64* %38, align 8, !dbg !3955
  %call33 = call i64 @curlx_tvdiff(i64 %32, i64 %34, i64 %37, i64 %39), !dbg !3955
  %40 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !3956
  store i64 %call33, i64* %40, align 8, !dbg !3957
  %41 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !3958
  %42 = load i64, i64* %41, align 8, !dbg !3960
  %tobool34 = icmp ne i64 %42, 0, !dbg !3960
  br i1 %tobool34, label %if.end, label %if.then35, !dbg !3961

if.then35:                                        ; preds = %if.then30
  %43 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !3962
  store i64 1, i64* %43, align 8, !dbg !3963
  br label %if.end, !dbg !3964

if.end:                                           ; preds = %if.then35, %if.then30
  br label %if.end36, !dbg !3965

if.else:                                          ; preds = %cond.end27
  %44 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !3966
  store i64 0, i64* %44, align 8, !dbg !3967
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.end
  br label %if.end38, !dbg !3968

if.else37:                                        ; preds = %entry
  %45 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !3969
  store i64 -1, i64* %45, align 8, !dbg !3970
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.end36
  ret i32 0, !dbg !3971
}

declare i32 @Curl_poll(%struct.pollfd*, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @Curl_multi_connchanged(%struct.Curl_multi* %multi) #0 !dbg !1822 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3972, metadata !1963), !dbg !3973
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3974
  %recheckstate = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 15, !dbg !3975
  store i8 1, i8* %recheckstate, align 8, !dbg !3976
  ret void, !dbg !3977
}

; Function Attrs: nounwind uwtable
define i32 @Curl_multi_add_perform(%struct.Curl_multi* %multi, %struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !1825 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %rc = alloca i32, align 4
  %k = alloca %struct.SingleRequest*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !3978, metadata !1963), !dbg !3979
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !3980, metadata !1963), !dbg !3981
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !3982, metadata !1963), !dbg !3983
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !3984, metadata !1963), !dbg !3985
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !3986
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3987
  %call = call i32 @curl_multi_add_handle(%struct.Curl_multi* %0, %struct.Curl_easy* %1), !dbg !3988
  store i32 %call, i32* %rc, align 4, !dbg !3989
  %2 = load i32, i32* %rc, align 4, !dbg !3990
  %tobool = icmp ne i32 %2, 0, !dbg !3990
  br i1 %tobool, label %if.end, label %if.then, !dbg !3992

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k, metadata !3993, metadata !1963), !dbg !3996
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3997
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 12, !dbg !3998
  store %struct.SingleRequest* %req, %struct.SingleRequest** %k, align 8, !dbg !3996
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !3999
  %call1 = call i32 @Curl_init_do(%struct.Curl_easy* %4, %struct.connectdata* null), !dbg !4000
  %5 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4001
  call void @mstate(%struct.Curl_easy* %5, i32 14), !dbg !4001
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !4002
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4003
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %7, i32 0, i32 2, !dbg !4004
  store %struct.connectdata* %6, %struct.connectdata** %easy_conn, align 8, !dbg !4005
  %8 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !4006
  %keepon = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %8, i32 0, i32 31, !dbg !4007
  %9 = load i32, i32* %keepon, align 4, !dbg !4008
  %or = or i32 %9, 1, !dbg !4008
  store i32 %or, i32* %keepon, align 4, !dbg !4008
  br label %if.end, !dbg !4009

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %rc, align 4, !dbg !4010
  ret i32 %10, !dbg !4011
}

declare i32 @Curl_init_do(%struct.Curl_easy*, %struct.connectdata*) #2

; Function Attrs: nounwind uwtable
define i32 @curl_multi_perform(%struct.Curl_multi* %multi, i32* %running_handles) #0 !dbg !1828 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %running_handles.addr = alloca i32*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %returncode = alloca i32, align 4
  %t = alloca %struct.Curl_tree*, align 8
  %now = alloca %struct.timeval, align 8
  %result = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !4012, metadata !1963), !dbg !4013
  store i32* %running_handles, i32** %running_handles.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %running_handles.addr, metadata !4014, metadata !1963), !dbg !4015
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !4016, metadata !1963), !dbg !4017
  call void @llvm.dbg.declare(metadata i32* %returncode, metadata !4018, metadata !1963), !dbg !4019
  store i32 0, i32* %returncode, align 4, !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.Curl_tree** %t, metadata !4020, metadata !1963), !dbg !4021
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !4022, metadata !1963), !dbg !4023
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !4024
  %0 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4024
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4024
  %2 = extractvalue { i64, i64 } %call, 0, !dbg !4024
  store i64 %2, i64* %1, align 8, !dbg !4024
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4024
  %4 = extractvalue { i64, i64 } %call, 1, !dbg !4024
  store i64 %4, i64* %3, align 8, !dbg !4024
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4025
  %tobool = icmp ne %struct.Curl_multi* %5, null, !dbg !4025
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !4025

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4027
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %6, i32 0, i32 0, !dbg !4027
  %7 = load i64, i64* %type, align 8, !dbg !4027
  %cmp = icmp eq i64 %7, 764702, !dbg !4027
  br i1 %cmp, label %if.end, label %if.then, !dbg !4029

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !4030
  br label %return, !dbg !4030

if.end:                                           ; preds = %land.lhs.true
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4031
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %8, i32 0, i32 1, !dbg !4032
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !4032
  store %struct.Curl_easy* %9, %struct.Curl_easy** %data, align 8, !dbg !4033
  br label %while.cond, !dbg !4034

while.cond:                                       ; preds = %if.end7, %if.end
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4035
  %tobool1 = icmp ne %struct.Curl_easy* %10, null, !dbg !4037
  br i1 %tobool1, label %while.body, label %while.end, !dbg !4037

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4038, metadata !1963), !dbg !4040
  br label %do.body, !dbg !4041

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !4042

do.end:                                           ; preds = %do.body
  %11 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4045
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4046
  %13 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4047
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4047
  %15 = load i64, i64* %14, align 8, !dbg !4047
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4047
  %17 = load i64, i64* %16, align 8, !dbg !4047
  %call2 = call i32 @multi_runsingle(%struct.Curl_multi* %11, i64 %15, i64 %17, %struct.Curl_easy* %12), !dbg !4047
  store i32 %call2, i32* %result, align 4, !dbg !4048
  br label %do.body3, !dbg !4049

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !4050

do.end4:                                          ; preds = %do.body3
  %18 = load i32, i32* %result, align 4, !dbg !4053
  %tobool5 = icmp ne i32 %18, 0, !dbg !4053
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !4055

if.then6:                                         ; preds = %do.end4
  %19 = load i32, i32* %result, align 4, !dbg !4056
  store i32 %19, i32* %returncode, align 4, !dbg !4057
  br label %if.end7, !dbg !4058

if.end7:                                          ; preds = %if.then6, %do.end4
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !4059
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 0, !dbg !4060
  %21 = load %struct.Curl_easy*, %struct.Curl_easy** %next, align 8, !dbg !4060
  store %struct.Curl_easy* %21, %struct.Curl_easy** %data, align 8, !dbg !4061
  br label %while.cond, !dbg !4062

while.end:                                        ; preds = %while.cond
  br label %do.body8, !dbg !4064

do.body8:                                         ; preds = %do.cond, %while.end
  %22 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4065
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %22, i32 0, i32 12, !dbg !4067
  %23 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !4067
  %24 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4068
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !4068
  %26 = load i64, i64* %25, align 8, !dbg !4068
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !4068
  %28 = load i64, i64* %27, align 8, !dbg !4068
  %call9 = call %struct.Curl_tree* @Curl_splaygetbest(i64 %26, i64 %28, %struct.Curl_tree* %23, %struct.Curl_tree** %t), !dbg !4068
  %29 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4069
  %timetree10 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %29, i32 0, i32 12, !dbg !4070
  store %struct.Curl_tree* %call9, %struct.Curl_tree** %timetree10, align 8, !dbg !4071
  %30 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !4072
  %tobool11 = icmp ne %struct.Curl_tree* %30, null, !dbg !4072
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !4074

if.then12:                                        ; preds = %do.body8
  %31 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4075
  %32 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !4076
  %payload = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %32, i32 0, i32 5, !dbg !4077
  %33 = load i8*, i8** %payload, align 8, !dbg !4077
  %34 = bitcast i8* %33 to %struct.Curl_easy*, !dbg !4076
  %35 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4078
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i32 0, i32 0, !dbg !4078
  %37 = load i64, i64* %36, align 8, !dbg !4078
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %35, i32 0, i32 1, !dbg !4078
  %39 = load i64, i64* %38, align 8, !dbg !4078
  %call13 = call i32 @add_next_timeout(i64 %37, i64 %39, %struct.Curl_multi* %31, %struct.Curl_easy* %34), !dbg !4078
  br label %if.end14, !dbg !4079

if.end14:                                         ; preds = %if.then12, %do.body8
  br label %do.cond, !dbg !4080

do.cond:                                          ; preds = %if.end14
  %40 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !4081
  %tobool15 = icmp ne %struct.Curl_tree* %40, null, !dbg !4082
  br i1 %tobool15, label %do.body8, label %do.end16, !dbg !4082

do.end16:                                         ; preds = %do.cond
  %41 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4083
  %num_alive = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %41, i32 0, i32 4, !dbg !4084
  %42 = load i32, i32* %num_alive, align 4, !dbg !4084
  %43 = load i32*, i32** %running_handles.addr, align 8, !dbg !4085
  store i32 %42, i32* %43, align 4, !dbg !4086
  %44 = load i32, i32* %returncode, align 4, !dbg !4087
  %cmp17 = icmp sge i32 0, %44, !dbg !4089
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4090

if.then18:                                        ; preds = %do.end16
  %45 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4091
  %call19 = call i32 @update_timer(%struct.Curl_multi* %45), !dbg !4092
  br label %if.end20, !dbg !4092

if.end20:                                         ; preds = %if.then18, %do.end16
  %46 = load i32, i32* %returncode, align 4, !dbg !4093
  store i32 %46, i32* %retval, align 4, !dbg !4094
  br label %return, !dbg !4094

return:                                           ; preds = %if.end20, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !4095
  ret i32 %47, !dbg !4095
}

declare { i64, i64 } @curlx_tvnow() #2

; Function Attrs: nounwind uwtable
define internal i32 @multi_runsingle(%struct.Curl_multi* %multi, i64 %now.coerce0, i64 %now.coerce1, %struct.Curl_easy* %data) #0 !dbg !1901 {
entry:
  %retval = alloca i32, align 4
  %now = alloca %struct.timeval, align 8
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data.addr = alloca %struct.Curl_easy*, align 8
  %msg = alloca %struct.Curl_message*, align 8
  %connected = alloca i8, align 1
  %async = alloca i8, align 1
  %protocol_connect = alloca i8, align 1
  %dophase_done = alloca i8, align 1
  %done = alloca i8, align 1
  %rc = alloca i32, align 4
  %result = alloca i32, align 4
  %k = alloca %struct.SingleRequest*, align 8
  %timeout_ms = alloca i64, align 8
  %recv_timeout_ms = alloca i64, align 8
  %send_timeout_ms = alloca i64, align 8
  %control = alloca i32, align 4
  %stream_error = alloca i8, align 1
  %dns = alloca %struct.Curl_dns_entry*, align 8
  %conn = alloca %struct.connectdata*, align 8
  %hostname = alloca i8*, align 8
  %wc = alloca %struct.WildcardData*, align 8
  %newurl = alloca i8*, align 8
  %follow = alloca i32, align 4
  %drc = alloca i32, align 4
  %retry = alloca i8, align 1
  %newurl469 = alloca i8*, align 8
  %retry470 = alloca i8, align 1
  %comeback = alloca i8, align 1
  %ret = alloca i32, align 4
  %follow562 = alloca i32, align 4
  %res = alloca i32, align 4
  %dead_connection = alloca i8, align 1
  %0 = bitcast %struct.timeval* %now to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %now.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %now.coerce1, i64* %2, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !4096, metadata !1963), !dbg !4097
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !4098, metadata !1963), !dbg !4099
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !4100, metadata !1963), !dbg !4101
  call void @llvm.dbg.declare(metadata %struct.Curl_message** %msg, metadata !4102, metadata !1963), !dbg !4103
  store %struct.Curl_message* null, %struct.Curl_message** %msg, align 8, !dbg !4103
  call void @llvm.dbg.declare(metadata i8* %connected, metadata !4104, metadata !1963), !dbg !4105
  call void @llvm.dbg.declare(metadata i8* %async, metadata !4106, metadata !1963), !dbg !4107
  call void @llvm.dbg.declare(metadata i8* %protocol_connect, metadata !4108, metadata !1963), !dbg !4109
  store i8 0, i8* %protocol_connect, align 1, !dbg !4109
  call void @llvm.dbg.declare(metadata i8* %dophase_done, metadata !4110, metadata !1963), !dbg !4111
  store i8 0, i8* %dophase_done, align 1, !dbg !4111
  call void @llvm.dbg.declare(metadata i8* %done, metadata !4112, metadata !1963), !dbg !4113
  store i8 0, i8* %done, align 1, !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4114, metadata !1963), !dbg !4115
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4116, metadata !1963), !dbg !4117
  store i32 0, i32* %result, align 4, !dbg !4117
  call void @llvm.dbg.declare(metadata %struct.SingleRequest** %k, metadata !4118, metadata !1963), !dbg !4119
  call void @llvm.dbg.declare(metadata i64* %timeout_ms, metadata !4120, metadata !1963), !dbg !4121
  call void @llvm.dbg.declare(metadata i64* %recv_timeout_ms, metadata !4122, metadata !1963), !dbg !4123
  call void @llvm.dbg.declare(metadata i64* %send_timeout_ms, metadata !4124, metadata !1963), !dbg !4125
  call void @llvm.dbg.declare(metadata i32* %control, metadata !4126, metadata !1963), !dbg !4127
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4128
  %tobool = icmp ne %struct.Curl_easy* %3, null, !dbg !4128
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !4128

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4130
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 21, !dbg !4130
  %5 = load i32, i32* %magic, align 8, !dbg !4130
  %cmp = icmp eq i32 %5, -1059136595, !dbg !4130
  br i1 %cmp, label %if.end, label %if.then, !dbg !4132

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 2, i32* %retval, align 4, !dbg !4133
  br label %return, !dbg !4133

if.end:                                           ; preds = %land.lhs.true
  br label %do.body, !dbg !4134

do.body:                                          ; preds = %lor.end, %if.end
  call void @llvm.dbg.declare(metadata i8* %stream_error, metadata !4135, metadata !1963), !dbg !4137
  store i8 0, i8* %stream_error, align 1, !dbg !4137
  store i32 0, i32* %rc, align 4, !dbg !4138
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4139
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 17, !dbg !4141
  %pipe_broke = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 34, !dbg !4142
  %7 = load i8, i8* %pipe_broke, align 1, !dbg !4142
  %tobool1 = trunc i8 %7 to i1, !dbg !4142
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !4143

if.then2:                                         ; preds = %do.body
  %8 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4144
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4146
  %10 = bitcast %struct.Curl_easy* %9 to i8*, !dbg !4147
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4148
  %state3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 17, !dbg !4149
  %path = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state3, i32 0, i32 38, !dbg !4150
  %12 = load i8*, i8** %path, align 8, !dbg !4150
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0), i8* %10, i8* %12), !dbg !4151
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4152
  %mstate = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 3, !dbg !4154
  %14 = load i32, i32* %mstate, align 8, !dbg !4154
  %cmp4 = icmp ult i32 %14, 17, !dbg !4155
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4156

if.then5:                                         ; preds = %if.then2
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4157
  call void @mstate(%struct.Curl_easy* %15, i32 2), !dbg !4157
  store i32 -1, i32* %rc, align 4, !dbg !4159
  store i32 0, i32* %result, align 4, !dbg !4160
  br label %if.end6, !dbg !4161

if.end6:                                          ; preds = %if.then5, %if.then2
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4162
  %state7 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %16, i32 0, i32 17, !dbg !4163
  %pipe_broke8 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state7, i32 0, i32 34, !dbg !4164
  store i8 0, i8* %pipe_broke8, align 1, !dbg !4165
  %17 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4166
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %17, i32 0, i32 2, !dbg !4167
  store %struct.connectdata* null, %struct.connectdata** %easy_conn, align 8, !dbg !4168
  br label %do.cond, !dbg !4169

if.end9:                                          ; preds = %do.body
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4170
  %easy_conn10 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %18, i32 0, i32 2, !dbg !4172
  %19 = load %struct.connectdata*, %struct.connectdata** %easy_conn10, align 8, !dbg !4172
  %tobool11 = icmp ne %struct.connectdata* %19, null, !dbg !4170
  br i1 %tobool11, label %if.end20, label %land.lhs.true12, !dbg !4173

land.lhs.true12:                                  ; preds = %if.end9
  %20 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4174
  %mstate13 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %20, i32 0, i32 3, !dbg !4175
  %21 = load i32, i32* %mstate13, align 8, !dbg !4175
  %cmp14 = icmp ugt i32 %21, 2, !dbg !4176
  br i1 %cmp14, label %land.lhs.true15, label %if.end20, !dbg !4177

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4178
  %mstate16 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %22, i32 0, i32 3, !dbg !4179
  %23 = load i32, i32* %mstate16, align 8, !dbg !4179
  %cmp17 = icmp ult i32 %23, 16, !dbg !4180
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4181

if.then18:                                        ; preds = %land.lhs.true15
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4183
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4185
  %mstate19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 3, !dbg !4186
  %26 = load i32, i32* %mstate19, align 8, !dbg !4186
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i32 0, i32 0), i32 %26), !dbg !4187
  store i32 4, i32* %retval, align 4, !dbg !4188
  br label %return, !dbg !4188

if.end20:                                         ; preds = %land.lhs.true15, %land.lhs.true12, %if.end9
  %27 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4189
  %call = call zeroext i1 @multi_ischanged(%struct.Curl_multi* %27, i1 zeroext true), !dbg !4191
  br i1 %call, label %if.then21, label %if.end23, !dbg !4192

if.then21:                                        ; preds = %if.end20
  br label %do.body22, !dbg !4193

do.body22:                                        ; preds = %if.then21
  br label %do.end, !dbg !4195

do.end:                                           ; preds = %do.body22
  %28 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4198
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %28), !dbg !4199
  br label %if.end23, !dbg !4200

if.end23:                                         ; preds = %do.end, %if.end20
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4201
  %easy_conn24 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %29, i32 0, i32 2, !dbg !4203
  %30 = load %struct.connectdata*, %struct.connectdata** %easy_conn24, align 8, !dbg !4203
  %tobool25 = icmp ne %struct.connectdata* %30, null, !dbg !4201
  br i1 %tobool25, label %land.lhs.true26, label %if.end35, !dbg !4204

land.lhs.true26:                                  ; preds = %if.end23
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4205
  %mstate27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 3, !dbg !4207
  %32 = load i32, i32* %mstate27, align 8, !dbg !4207
  %cmp28 = icmp ugt i32 %32, 2, !dbg !4208
  br i1 %cmp28, label %land.lhs.true29, label %if.end35, !dbg !4209

land.lhs.true29:                                  ; preds = %land.lhs.true26
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4210
  %mstate30 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 3, !dbg !4211
  %34 = load i32, i32* %mstate30, align 8, !dbg !4211
  %cmp31 = icmp ult i32 %34, 17, !dbg !4212
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !4213

if.then32:                                        ; preds = %land.lhs.true29
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4215
  %36 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4216
  %easy_conn33 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %36, i32 0, i32 2, !dbg !4217
  %37 = load %struct.connectdata*, %struct.connectdata** %easy_conn33, align 8, !dbg !4217
  %data34 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %37, i32 0, i32 0, !dbg !4218
  store %struct.Curl_easy* %35, %struct.Curl_easy** %data34, align 8, !dbg !4219
  br label %if.end35, !dbg !4216

if.end35:                                         ; preds = %if.then32, %land.lhs.true29, %land.lhs.true26, %if.end23
  %38 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4220
  %easy_conn36 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %38, i32 0, i32 2, !dbg !4222
  %39 = load %struct.connectdata*, %struct.connectdata** %easy_conn36, align 8, !dbg !4222
  %tobool37 = icmp ne %struct.connectdata* %39, null, !dbg !4220
  br i1 %tobool37, label %land.lhs.true38, label %if.end84, !dbg !4223

land.lhs.true38:                                  ; preds = %if.end35
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4224
  %mstate39 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 3, !dbg !4225
  %41 = load i32, i32* %mstate39, align 8, !dbg !4225
  %cmp40 = icmp uge i32 %41, 2, !dbg !4226
  br i1 %cmp40, label %land.lhs.true41, label %if.end84, !dbg !4227

land.lhs.true41:                                  ; preds = %land.lhs.true38
  %42 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4228
  %mstate42 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %42, i32 0, i32 3, !dbg !4229
  %43 = load i32, i32* %mstate42, align 8, !dbg !4229
  %cmp43 = icmp ult i32 %43, 17, !dbg !4230
  br i1 %cmp43, label %if.then44, label %if.end84, !dbg !4231

if.then44:                                        ; preds = %land.lhs.true41
  %44 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4232
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4234
  %mstate45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 3, !dbg !4235
  %46 = load i32, i32* %mstate45, align 8, !dbg !4235
  %cmp46 = icmp ule i32 %46, 8, !dbg !4236
  %cond = select i1 %cmp46, i32 1, i32 0, !dbg !4237
  %tobool47 = icmp ne i32 %cond, 0, !dbg !4237
  %call48 = call i64 @Curl_timeleft(%struct.Curl_easy* %44, %struct.timeval* %now, i1 zeroext %tobool47), !dbg !4238
  store i64 %call48, i64* %timeout_ms, align 8, !dbg !4239
  %47 = load i64, i64* %timeout_ms, align 8, !dbg !4240
  %cmp49 = icmp slt i64 %47, 0, !dbg !4242
  br i1 %cmp49, label %if.then50, label %if.end83, !dbg !4243

if.then50:                                        ; preds = %if.then44
  %48 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4244
  %mstate51 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %48, i32 0, i32 3, !dbg !4247
  %49 = load i32, i32* %mstate51, align 8, !dbg !4247
  %cmp52 = icmp eq i32 %49, 3, !dbg !4248
  br i1 %cmp52, label %if.then53, label %if.else, !dbg !4249

if.then53:                                        ; preds = %if.then50
  %50 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4250
  %51 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4251
  %progress = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %51, i32 0, i32 16, !dbg !4251
  %t_startsingle = getelementptr inbounds %struct.Progress, %struct.Progress* %progress, i32 0, i32 19, !dbg !4251
  %52 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4251
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %52, i32 0, i32 0, !dbg !4251
  %54 = load i64, i64* %53, align 8, !dbg !4251
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %52, i32 0, i32 1, !dbg !4251
  %56 = load i64, i64* %55, align 8, !dbg !4251
  %57 = bitcast %struct.timeval* %t_startsingle to { i64, i64 }*, !dbg !4251
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %57, i32 0, i32 0, !dbg !4251
  %59 = load i64, i64* %58, align 8, !dbg !4251
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %57, i32 0, i32 1, !dbg !4251
  %61 = load i64, i64* %60, align 8, !dbg !4251
  %call54 = call i64 @curlx_tvdiff(i64 %54, i64 %56, i64 %59, i64 %61), !dbg !4251
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %50, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i32 0, i32 0), i64 %call54), !dbg !4252
  br label %if.end75, !dbg !4252

if.else:                                          ; preds = %if.then50
  %62 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4253
  %mstate55 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %62, i32 0, i32 3, !dbg !4255
  %63 = load i32, i32* %mstate55, align 8, !dbg !4255
  %cmp56 = icmp eq i32 %63, 4, !dbg !4256
  br i1 %cmp56, label %if.then57, label %if.else61, !dbg !4257

if.then57:                                        ; preds = %if.else
  %64 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4258
  %65 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4259
  %progress58 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %65, i32 0, i32 16, !dbg !4259
  %t_startsingle59 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress58, i32 0, i32 19, !dbg !4259
  %66 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4259
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 0, !dbg !4259
  %68 = load i64, i64* %67, align 8, !dbg !4259
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 1, !dbg !4259
  %70 = load i64, i64* %69, align 8, !dbg !4259
  %71 = bitcast %struct.timeval* %t_startsingle59 to { i64, i64 }*, !dbg !4259
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %71, i32 0, i32 0, !dbg !4259
  %73 = load i64, i64* %72, align 8, !dbg !4259
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %71, i32 0, i32 1, !dbg !4259
  %75 = load i64, i64* %74, align 8, !dbg !4259
  %call60 = call i64 @curlx_tvdiff(i64 %68, i64 %70, i64 %73, i64 %75), !dbg !4259
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i32 0, i32 0), i64 %call60), !dbg !4260
  br label %if.end74, !dbg !4260

if.else61:                                        ; preds = %if.else
  %76 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4261
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %76, i32 0, i32 12, !dbg !4263
  store %struct.SingleRequest* %req, %struct.SingleRequest** %k, align 8, !dbg !4264
  %77 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !4265
  %size = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %77, i32 0, i32 0, !dbg !4267
  %78 = load i64, i64* %size, align 8, !dbg !4267
  %cmp62 = icmp ne i64 %78, -1, !dbg !4268
  br i1 %cmp62, label %if.then63, label %if.else68, !dbg !4269

if.then63:                                        ; preds = %if.else61
  %79 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4270
  %80 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4272
  %progress64 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %80, i32 0, i32 16, !dbg !4272
  %t_startsingle65 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress64, i32 0, i32 19, !dbg !4272
  %81 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4272
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %81, i32 0, i32 0, !dbg !4272
  %83 = load i64, i64* %82, align 8, !dbg !4272
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %81, i32 0, i32 1, !dbg !4272
  %85 = load i64, i64* %84, align 8, !dbg !4272
  %86 = bitcast %struct.timeval* %t_startsingle65 to { i64, i64 }*, !dbg !4272
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4272
  %88 = load i64, i64* %87, align 8, !dbg !4272
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4272
  %90 = load i64, i64* %89, align 8, !dbg !4272
  %call66 = call i64 @curlx_tvdiff(i64 %83, i64 %85, i64 %88, i64 %90), !dbg !4272
  %91 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !4273
  %bytecount = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %91, i32 0, i32 4, !dbg !4274
  %92 = load i64, i64* %bytecount, align 8, !dbg !4274
  %93 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !4275
  %size67 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %93, i32 0, i32 0, !dbg !4276
  %94 = load i64, i64* %size67, align 8, !dbg !4276
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %79, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i32 0, i32 0), i64 %call66, i64 %92, i64 %94), !dbg !4277
  br label %if.end73, !dbg !4278

if.else68:                                        ; preds = %if.else61
  %95 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4279
  %96 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4281
  %progress69 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %96, i32 0, i32 16, !dbg !4281
  %t_startsingle70 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress69, i32 0, i32 19, !dbg !4281
  %97 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4281
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %97, i32 0, i32 0, !dbg !4281
  %99 = load i64, i64* %98, align 8, !dbg !4281
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %97, i32 0, i32 1, !dbg !4281
  %101 = load i64, i64* %100, align 8, !dbg !4281
  %102 = bitcast %struct.timeval* %t_startsingle70 to { i64, i64 }*, !dbg !4281
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %102, i32 0, i32 0, !dbg !4281
  %104 = load i64, i64* %103, align 8, !dbg !4281
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %102, i32 0, i32 1, !dbg !4281
  %106 = load i64, i64* %105, align 8, !dbg !4281
  %call71 = call i64 @curlx_tvdiff(i64 %99, i64 %101, i64 %104, i64 %106), !dbg !4281
  %107 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !4282
  %bytecount72 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %107, i32 0, i32 4, !dbg !4283
  %108 = load i64, i64* %bytecount72, align 8, !dbg !4283
  call void (%struct.Curl_easy*, i8*, ...) @Curl_failf(%struct.Curl_easy* %95, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.9, i32 0, i32 0), i64 %call71, i64 %108), !dbg !4284
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.then63
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then57
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then53
  %109 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4285
  %mstate76 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %109, i32 0, i32 3, !dbg !4287
  %110 = load i32, i32* %mstate76, align 8, !dbg !4287
  %cmp77 = icmp ugt i32 %110, 9, !dbg !4288
  br i1 %cmp77, label %if.then78, label %if.end80, !dbg !4289

if.then78:                                        ; preds = %if.end75
  %111 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4290
  %easy_conn79 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %111, i32 0, i32 2, !dbg !4290
  %112 = load %struct.connectdata*, %struct.connectdata** %easy_conn79, align 8, !dbg !4290
  call void @Curl_conncontrol(%struct.connectdata* %112, i32 2), !dbg !4290
  store i8 1, i8* %stream_error, align 1, !dbg !4292
  br label %if.end80, !dbg !4293

if.end80:                                         ; preds = %if.then78, %if.end75
  store i32 28, i32* %result, align 4, !dbg !4294
  %113 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4295
  %easy_conn81 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %113, i32 0, i32 2, !dbg !4296
  %114 = load i32, i32* %result, align 4, !dbg !4297
  %call82 = call i32 @multi_done(%struct.connectdata** %easy_conn81, i32 %114, i1 zeroext true), !dbg !4298
  br label %statemachine_end, !dbg !4299

if.end83:                                         ; preds = %if.then44
  br label %if.end84, !dbg !4300

if.end84:                                         ; preds = %if.end83, %land.lhs.true41, %land.lhs.true38, %if.end35
  %115 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4301
  %mstate85 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %115, i32 0, i32 3, !dbg !4302
  %116 = load i32, i32* %mstate85, align 8, !dbg !4302
  switch i32 %116, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb90
    i32 2, label %sw.bb91
    i32 3, label %sw.bb127
    i32 5, label %sw.bb175
    i32 4, label %sw.bb206
    i32 6, label %sw.bb243
    i32 7, label %sw.bb263
    i32 8, label %sw.bb282
    i32 9, label %sw.bb287
    i32 10, label %sw.bb369
    i32 11, label %sw.bb388
    i32 12, label %sw.bb405
    i32 13, label %sw.bb417
    i32 15, label %sw.bb422
    i32 14, label %sw.bb468
    i32 16, label %sw.bb619
    i32 17, label %sw.bb648
    i32 18, label %sw.bb650
  ], !dbg !4303

sw.bb:                                            ; preds = %if.end84
  %117 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4304
  %call86 = call i32 @Curl_pretransfer(%struct.Curl_easy* %117), !dbg !4306
  store i32 %call86, i32* %result, align 4, !dbg !4307
  %118 = load i32, i32* %result, align 4, !dbg !4308
  %tobool87 = icmp ne i32 %118, 0, !dbg !4308
  br i1 %tobool87, label %if.end89, label %if.then88, !dbg !4310

if.then88:                                        ; preds = %sw.bb
  %119 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4311
  call void @mstate(%struct.Curl_easy* %119, i32 2), !dbg !4311
  %120 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4313
  call void @Curl_pgrsTime(%struct.Curl_easy* %120, i32 1), !dbg !4314
  store i32 -1, i32* %rc, align 4, !dbg !4315
  br label %if.end89, !dbg !4316

if.end89:                                         ; preds = %if.then88, %sw.bb
  br label %sw.epilog, !dbg !4317

sw.bb90:                                          ; preds = %if.end84
  br label %sw.epilog, !dbg !4318

sw.bb91:                                          ; preds = %if.end84
  %121 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4319
  call void @Curl_pgrsTime(%struct.Curl_easy* %121, i32 2), !dbg !4320
  %122 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4321
  %123 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4322
  %easy_conn92 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %123, i32 0, i32 2, !dbg !4323
  %call93 = call i32 @Curl_connect(%struct.Curl_easy* %122, %struct.connectdata** %easy_conn92, i8* %async, i8* %protocol_connect), !dbg !4324
  store i32 %call93, i32* %result, align 4, !dbg !4325
  %124 = load i32, i32* %result, align 4, !dbg !4326
  %cmp94 = icmp eq i32 89, %124, !dbg !4328
  br i1 %cmp94, label %if.then95, label %if.end102, !dbg !4329

if.then95:                                        ; preds = %sw.bb91
  %125 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4330
  call void @mstate(%struct.Curl_easy* %125, i32 1), !dbg !4330
  %126 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4332
  %pending = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %126, i32 0, i32 6, !dbg !4334
  %127 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4335
  %pending96 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %127, i32 0, i32 6, !dbg !4336
  %tail = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %pending96, i32 0, i32 1, !dbg !4337
  %128 = load %struct.curl_llist_element*, %struct.curl_llist_element** %tail, align 8, !dbg !4337
  %129 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4338
  %130 = bitcast %struct.Curl_easy* %129 to i8*, !dbg !4338
  %call97 = call i32 @Curl_llist_insert_next(%struct.curl_llist* %pending, %struct.curl_llist_element* %128, i8* %130), !dbg !4339
  %tobool98 = icmp ne i32 %call97, 0, !dbg !4339
  br i1 %tobool98, label %if.else100, label %if.then99, !dbg !4340

if.then99:                                        ; preds = %if.then95
  store i32 27, i32* %result, align 4, !dbg !4341
  br label %if.end101, !dbg !4342

if.else100:                                       ; preds = %if.then95
  store i32 0, i32* %result, align 4, !dbg !4343
  br label %if.end101

if.end101:                                        ; preds = %if.else100, %if.then99
  br label %sw.epilog, !dbg !4344

if.end102:                                        ; preds = %sw.bb91
  %131 = load i32, i32* %result, align 4, !dbg !4345
  %tobool103 = icmp ne i32 %131, 0, !dbg !4345
  br i1 %tobool103, label %if.end126, label %if.then104, !dbg !4347

if.then104:                                       ; preds = %if.end102
  %132 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4348
  %133 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4350
  %easy_conn105 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %133, i32 0, i32 2, !dbg !4351
  %134 = load %struct.connectdata*, %struct.connectdata** %easy_conn105, align 8, !dbg !4351
  %call106 = call i32 @Curl_add_handle_to_pipeline(%struct.Curl_easy* %132, %struct.connectdata* %134), !dbg !4352
  store i32 %call106, i32* %result, align 4, !dbg !4353
  %135 = load i32, i32* %result, align 4, !dbg !4354
  %tobool107 = icmp ne i32 %135, 0, !dbg !4354
  br i1 %tobool107, label %if.then108, label %if.else109, !dbg !4356

if.then108:                                       ; preds = %if.then104
  store i8 1, i8* %stream_error, align 1, !dbg !4357
  br label %if.end125, !dbg !4358

if.else109:                                       ; preds = %if.then104
  %136 = load i8, i8* %async, align 1, !dbg !4359
  %tobool110 = trunc i8 %136 to i1, !dbg !4359
  br i1 %tobool110, label %if.then111, label %if.else112, !dbg !4362

if.then111:                                       ; preds = %if.else109
  %137 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4363
  call void @mstate(%struct.Curl_easy* %137, i32 3), !dbg !4363
  br label %if.end124, !dbg !4363

if.else112:                                       ; preds = %if.else109
  store i32 -1, i32* %rc, align 4, !dbg !4364
  %138 = load i8, i8* %protocol_connect, align 1, !dbg !4366
  %tobool113 = trunc i8 %138 to i1, !dbg !4366
  br i1 %tobool113, label %if.then114, label %if.else117, !dbg !4368

if.then114:                                       ; preds = %if.else112
  %139 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4369
  %140 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4369
  %call115 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %140, i32 1), !dbg !4369
  %cond116 = select i1 %call115, i32 8, i32 9, !dbg !4369
  call void @mstate(%struct.Curl_easy* %139, i32 %cond116), !dbg !4370
  br label %if.end123, !dbg !4369

if.else117:                                       ; preds = %if.else112
  %141 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4372
  %easy_conn118 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %141, i32 0, i32 2, !dbg !4375
  %142 = load %struct.connectdata*, %struct.connectdata** %easy_conn118, align 8, !dbg !4375
  %tunnel_state = getelementptr inbounds %struct.connectdata, %struct.connectdata* %142, i32 0, i32 72, !dbg !4376
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state, i64 0, i64 0, !dbg !4372
  %143 = load i32, i32* %arrayidx, align 8, !dbg !4372
  %cmp119 = icmp eq i32 %143, 1, !dbg !4377
  br i1 %cmp119, label %if.then120, label %if.else121, !dbg !4378

if.then120:                                       ; preds = %if.else117
  %144 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4379
  call void @mstate(%struct.Curl_easy* %144, i32 5), !dbg !4379
  br label %if.end122, !dbg !4379

if.else121:                                       ; preds = %if.else117
  %145 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4380
  call void @mstate(%struct.Curl_easy* %145, i32 4), !dbg !4380
  br label %if.end122

if.end122:                                        ; preds = %if.else121, %if.then120
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then114
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then111
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then108
  br label %if.end126, !dbg !4381

if.end126:                                        ; preds = %if.end125, %if.end102
  br label %sw.epilog, !dbg !4382

sw.bb127:                                         ; preds = %if.end84
  call void @llvm.dbg.declare(metadata %struct.Curl_dns_entry** %dns, metadata !4383, metadata !1963), !dbg !4385
  store %struct.Curl_dns_entry* null, %struct.Curl_dns_entry** %dns, align 8, !dbg !4385
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !4386, metadata !1963), !dbg !4387
  %146 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4388
  %easy_conn128 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %146, i32 0, i32 2, !dbg !4389
  %147 = load %struct.connectdata*, %struct.connectdata** %easy_conn128, align 8, !dbg !4389
  store %struct.connectdata* %147, %struct.connectdata** %conn, align 8, !dbg !4387
  call void @llvm.dbg.declare(metadata i8** %hostname, metadata !4390, metadata !1963), !dbg !4391
  %148 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4392
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %148, i32 0, i32 43, !dbg !4394
  %httpproxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 5, !dbg !4395
  %149 = load i8, i8* %httpproxy, align 1, !dbg !4395
  %tobool129 = trunc i8 %149 to i1, !dbg !4395
  br i1 %tobool129, label %if.then130, label %if.else131, !dbg !4396

if.then130:                                       ; preds = %sw.bb127
  %150 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4397
  %http_proxy = getelementptr inbounds %struct.connectdata, %struct.connectdata* %150, i32 0, i32 16, !dbg !4398
  %host = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy, i32 0, i32 0, !dbg !4399
  %name = getelementptr inbounds %struct.hostname, %struct.hostname* %host, i32 0, i32 2, !dbg !4400
  %151 = load i8*, i8** %name, align 8, !dbg !4400
  store i8* %151, i8** %hostname, align 8, !dbg !4401
  br label %if.end141, !dbg !4402

if.else131:                                       ; preds = %sw.bb127
  %152 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4403
  %bits132 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %152, i32 0, i32 43, !dbg !4405
  %conn_to_host = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits132, i32 0, i32 2, !dbg !4406
  %153 = load i8, i8* %conn_to_host, align 1, !dbg !4406
  %tobool133 = trunc i8 %153 to i1, !dbg !4406
  br i1 %tobool133, label %if.then134, label %if.else137, !dbg !4407

if.then134:                                       ; preds = %if.else131
  %154 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4408
  %conn_to_host135 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %154, i32 0, i32 14, !dbg !4409
  %name136 = getelementptr inbounds %struct.hostname, %struct.hostname* %conn_to_host135, i32 0, i32 2, !dbg !4410
  %155 = load i8*, i8** %name136, align 8, !dbg !4410
  store i8* %155, i8** %hostname, align 8, !dbg !4411
  br label %if.end140, !dbg !4412

if.else137:                                       ; preds = %if.else131
  %156 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4413
  %host138 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %156, i32 0, i32 12, !dbg !4414
  %name139 = getelementptr inbounds %struct.hostname, %struct.hostname* %host138, i32 0, i32 2, !dbg !4415
  %157 = load i8*, i8** %name139, align 8, !dbg !4415
  store i8* %157, i8** %hostname, align 8, !dbg !4416
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.then134
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then130
  %158 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4417
  %159 = load i8*, i8** %hostname, align 8, !dbg !4418
  %160 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !4419
  %port = getelementptr inbounds %struct.connectdata, %struct.connectdata* %160, i32 0, i32 17, !dbg !4420
  %161 = load i64, i64* %port, align 8, !dbg !4420
  %conv = trunc i64 %161 to i32, !dbg !4421
  %call142 = call %struct.Curl_dns_entry* @Curl_fetch_addr(%struct.connectdata* %158, i8* %159, i32 %conv), !dbg !4422
  store %struct.Curl_dns_entry* %call142, %struct.Curl_dns_entry** %dns, align 8, !dbg !4423
  %162 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns, align 8, !dbg !4424
  %tobool143 = icmp ne %struct.Curl_dns_entry* %162, null, !dbg !4424
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !4426

if.then144:                                       ; preds = %if.end141
  store i32 0, i32* %result, align 4, !dbg !4427
  %163 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4429
  %164 = load i8*, i8** %hostname, align 8, !dbg !4430
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %163, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0), i8* %164), !dbg !4431
  br label %if.end145, !dbg !4432

if.end145:                                        ; preds = %if.then144, %if.end141
  %165 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns, align 8, !dbg !4433
  %tobool146 = icmp ne %struct.Curl_dns_entry* %165, null, !dbg !4433
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !4435

if.then147:                                       ; preds = %if.end145
  store i32 6, i32* %result, align 4, !dbg !4436
  br label %if.end148, !dbg !4437

if.end148:                                        ; preds = %if.then147, %if.end145
  %166 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4438
  %167 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4439
  call void @singlesocket(%struct.Curl_multi* %166, %struct.Curl_easy* %167), !dbg !4440
  %168 = load %struct.Curl_dns_entry*, %struct.Curl_dns_entry** %dns, align 8, !dbg !4441
  %tobool149 = icmp ne %struct.Curl_dns_entry* %168, null, !dbg !4441
  br i1 %tobool149, label %if.then150, label %if.end171, !dbg !4443

if.then150:                                       ; preds = %if.end148
  store i32 0, i32* %result, align 4, !dbg !4444
  %169 = load i32, i32* %result, align 4, !dbg !4446
  %tobool151 = icmp ne i32 %169, 0, !dbg !4446
  br i1 %tobool151, label %if.then152, label %if.else154, !dbg !4448

if.then152:                                       ; preds = %if.then150
  %170 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4449
  %easy_conn153 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %170, i32 0, i32 2, !dbg !4450
  store %struct.connectdata* null, %struct.connectdata** %easy_conn153, align 8, !dbg !4451
  br label %if.end170, !dbg !4449

if.else154:                                       ; preds = %if.then150
  store i32 -1, i32* %rc, align 4, !dbg !4452
  %171 = load i8, i8* %protocol_connect, align 1, !dbg !4454
  %tobool155 = trunc i8 %171 to i1, !dbg !4454
  br i1 %tobool155, label %if.then156, label %if.else160, !dbg !4456

if.then156:                                       ; preds = %if.else154
  %172 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4457
  %173 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4457
  %call157 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %173, i32 1), !dbg !4457
  %cond159 = select i1 %call157, i32 8, i32 9, !dbg !4457
  call void @mstate(%struct.Curl_easy* %172, i32 %cond159), !dbg !4458
  br label %if.end169, !dbg !4457

if.else160:                                       ; preds = %if.else154
  %174 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4460
  %easy_conn161 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %174, i32 0, i32 2, !dbg !4463
  %175 = load %struct.connectdata*, %struct.connectdata** %easy_conn161, align 8, !dbg !4463
  %tunnel_state162 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %175, i32 0, i32 72, !dbg !4464
  %arrayidx163 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state162, i64 0, i64 0, !dbg !4460
  %176 = load i32, i32* %arrayidx163, align 8, !dbg !4460
  %cmp164 = icmp eq i32 %176, 1, !dbg !4465
  br i1 %cmp164, label %if.then166, label %if.else167, !dbg !4466

if.then166:                                       ; preds = %if.else160
  %177 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4467
  call void @mstate(%struct.Curl_easy* %177, i32 5), !dbg !4467
  br label %if.end168, !dbg !4467

if.else167:                                       ; preds = %if.else160
  %178 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4468
  call void @mstate(%struct.Curl_easy* %178, i32 4), !dbg !4468
  br label %if.end168

if.end168:                                        ; preds = %if.else167, %if.then166
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.then156
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then152
  br label %if.end171, !dbg !4469

if.end171:                                        ; preds = %if.end170, %if.end148
  %179 = load i32, i32* %result, align 4, !dbg !4470
  %tobool172 = icmp ne i32 %179, 0, !dbg !4470
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !4472

if.then173:                                       ; preds = %if.end171
  store i8 1, i8* %stream_error, align 1, !dbg !4473
  br label %sw.epilog, !dbg !4475

if.end174:                                        ; preds = %if.end171
  br label %sw.epilog, !dbg !4476

sw.bb175:                                         ; preds = %if.end84
  %180 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4477
  %easy_conn176 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %180, i32 0, i32 2, !dbg !4478
  %181 = load %struct.connectdata*, %struct.connectdata** %easy_conn176, align 8, !dbg !4478
  %call177 = call i32 @Curl_http_connect(%struct.connectdata* %181, i8* %protocol_connect), !dbg !4479
  store i32 %call177, i32* %result, align 4, !dbg !4480
  %182 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4481
  %easy_conn178 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %182, i32 0, i32 2, !dbg !4483
  %183 = load %struct.connectdata*, %struct.connectdata** %easy_conn178, align 8, !dbg !4483
  %bits179 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %183, i32 0, i32 43, !dbg !4484
  %proxy_connect_closed = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits179, i32 0, i32 24, !dbg !4485
  %184 = load i8, i8* %proxy_connect_closed, align 1, !dbg !4485
  %tobool180 = trunc i8 %184 to i1, !dbg !4485
  br i1 %tobool180, label %if.then181, label %if.else184, !dbg !4486

if.then181:                                       ; preds = %sw.bb175
  store i32 -1, i32* %rc, align 4, !dbg !4487
  store i32 0, i32* %result, align 4, !dbg !4489
  %185 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4490
  %easy_conn182 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %185, i32 0, i32 2, !dbg !4491
  %call183 = call i32 @multi_done(%struct.connectdata** %easy_conn182, i32 0, i1 zeroext false), !dbg !4492
  %186 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4493
  call void @mstate(%struct.Curl_easy* %186, i32 2), !dbg !4493
  br label %if.end205, !dbg !4494

if.else184:                                       ; preds = %sw.bb175
  %187 = load i32, i32* %result, align 4, !dbg !4495
  %tobool185 = icmp ne i32 %187, 0, !dbg !4495
  br i1 %tobool185, label %if.end204, label %if.then186, !dbg !4497

if.then186:                                       ; preds = %if.else184
  %188 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4498
  %easy_conn187 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %188, i32 0, i32 2, !dbg !4501
  %189 = load %struct.connectdata*, %struct.connectdata** %easy_conn187, align 8, !dbg !4501
  %http_proxy188 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %189, i32 0, i32 16, !dbg !4502
  %proxytype = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy188, i32 0, i32 2, !dbg !4503
  %190 = load i32, i32* %proxytype, align 8, !dbg !4503
  %cmp189 = icmp ne i32 %190, 2, !dbg !4504
  br i1 %cmp189, label %land.lhs.true196, label %lor.lhs.false, !dbg !4505

lor.lhs.false:                                    ; preds = %if.then186
  %191 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4506
  %easy_conn191 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %191, i32 0, i32 2, !dbg !4507
  %192 = load %struct.connectdata*, %struct.connectdata** %easy_conn191, align 8, !dbg !4507
  %bits192 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %192, i32 0, i32 43, !dbg !4508
  %proxy_ssl_connected = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits192, i32 0, i32 31, !dbg !4509
  %arrayidx193 = getelementptr inbounds [2 x i8], [2 x i8]* %proxy_ssl_connected, i64 0, i64 0, !dbg !4506
  %193 = load i8, i8* %arrayidx193, align 1, !dbg !4506
  %tobool194 = trunc i8 %193 to i1, !dbg !4506
  br i1 %tobool194, label %land.lhs.true196, label %if.end203, !dbg !4510

land.lhs.true196:                                 ; preds = %lor.lhs.false, %if.then186
  %194 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4511
  %easy_conn197 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %194, i32 0, i32 2, !dbg !4512
  %195 = load %struct.connectdata*, %struct.connectdata** %easy_conn197, align 8, !dbg !4512
  %tunnel_state198 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %195, i32 0, i32 72, !dbg !4513
  %arrayidx199 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state198, i64 0, i64 0, !dbg !4511
  %196 = load i32, i32* %arrayidx199, align 8, !dbg !4511
  %cmp200 = icmp ne i32 %196, 1, !dbg !4514
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !4515

if.then202:                                       ; preds = %land.lhs.true196
  store i32 -1, i32* %rc, align 4, !dbg !4517
  %197 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4519
  call void @mstate(%struct.Curl_easy* %197, i32 6), !dbg !4519
  br label %if.end203, !dbg !4520

if.end203:                                        ; preds = %if.then202, %land.lhs.true196, %lor.lhs.false
  br label %if.end204, !dbg !4521

if.end204:                                        ; preds = %if.end203, %if.else184
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then181
  br label %sw.epilog, !dbg !4522

sw.bb206:                                         ; preds = %if.end84
  %198 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4523
  %easy_conn207 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %198, i32 0, i32 2, !dbg !4524
  %199 = load %struct.connectdata*, %struct.connectdata** %easy_conn207, align 8, !dbg !4524
  %call208 = call i32 @Curl_is_connected(%struct.connectdata* %199, i32 0, i8* %connected), !dbg !4525
  store i32 %call208, i32* %result, align 4, !dbg !4526
  %200 = load i8, i8* %connected, align 1, !dbg !4527
  %tobool209 = trunc i8 %200 to i1, !dbg !4527
  br i1 %tobool209, label %land.lhs.true211, label %if.else238, !dbg !4529

land.lhs.true211:                                 ; preds = %sw.bb206
  %201 = load i32, i32* %result, align 4, !dbg !4530
  %tobool212 = icmp ne i32 %201, 0, !dbg !4530
  br i1 %tobool212, label %if.else238, label %if.then213, !dbg !4532

if.then213:                                       ; preds = %land.lhs.true211
  %202 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4533
  %easy_conn214 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %202, i32 0, i32 2, !dbg !4536
  %203 = load %struct.connectdata*, %struct.connectdata** %easy_conn214, align 8, !dbg !4536
  %http_proxy215 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %203, i32 0, i32 16, !dbg !4537
  %proxytype216 = getelementptr inbounds %struct.proxy_info, %struct.proxy_info* %http_proxy215, i32 0, i32 2, !dbg !4538
  %204 = load i32, i32* %proxytype216, align 8, !dbg !4538
  %cmp217 = icmp eq i32 %204, 2, !dbg !4539
  br i1 %cmp217, label %land.lhs.true219, label %lor.lhs.false225, !dbg !4540

land.lhs.true219:                                 ; preds = %if.then213
  %205 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4541
  %easy_conn220 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %205, i32 0, i32 2, !dbg !4542
  %206 = load %struct.connectdata*, %struct.connectdata** %easy_conn220, align 8, !dbg !4542
  %bits221 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %206, i32 0, i32 43, !dbg !4543
  %proxy_ssl_connected222 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits221, i32 0, i32 31, !dbg !4544
  %arrayidx223 = getelementptr inbounds [2 x i8], [2 x i8]* %proxy_ssl_connected222, i64 0, i64 0, !dbg !4541
  %207 = load i8, i8* %arrayidx223, align 1, !dbg !4541
  %tobool224 = trunc i8 %207 to i1, !dbg !4541
  br i1 %tobool224, label %lor.lhs.false225, label %if.then231, !dbg !4545

lor.lhs.false225:                                 ; preds = %land.lhs.true219, %if.then213
  %208 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4546
  %easy_conn226 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %208, i32 0, i32 2, !dbg !4547
  %209 = load %struct.connectdata*, %struct.connectdata** %easy_conn226, align 8, !dbg !4547
  %tunnel_state227 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %209, i32 0, i32 72, !dbg !4548
  %arrayidx228 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state227, i64 0, i64 0, !dbg !4546
  %210 = load i32, i32* %arrayidx228, align 8, !dbg !4546
  %cmp229 = icmp eq i32 %210, 1, !dbg !4549
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !4550

if.then231:                                       ; preds = %lor.lhs.false225, %land.lhs.true219
  %211 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4552
  call void @mstate(%struct.Curl_easy* %211, i32 5), !dbg !4552
  br label %sw.epilog, !dbg !4554

if.end232:                                        ; preds = %lor.lhs.false225
  store i32 -1, i32* %rc, align 4, !dbg !4555
  %212 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4556
  %213 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4556
  %easy_conn233 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %213, i32 0, i32 2, !dbg !4556
  %214 = load %struct.connectdata*, %struct.connectdata** %easy_conn233, align 8, !dbg !4556
  %bits234 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %214, i32 0, i32 43, !dbg !4556
  %tunnel_proxy = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits234, i32 0, i32 15, !dbg !4556
  %215 = load i8, i8* %tunnel_proxy, align 1, !dbg !4556
  %tobool235 = trunc i8 %215 to i1, !dbg !4556
  %cond237 = select i1 %tobool235, i32 5, i32 6, !dbg !4556
  call void @mstate(%struct.Curl_easy* %212, i32 %cond237), !dbg !4556
  br label %if.end242, !dbg !4557

if.else238:                                       ; preds = %land.lhs.true211, %sw.bb206
  %216 = load i32, i32* %result, align 4, !dbg !4558
  %tobool239 = icmp ne i32 %216, 0, !dbg !4558
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !4560

if.then240:                                       ; preds = %if.else238
  store i8 1, i8* %stream_error, align 1, !dbg !4561
  br label %sw.epilog, !dbg !4563

if.end241:                                        ; preds = %if.else238
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.end232
  br label %sw.epilog, !dbg !4564

sw.bb243:                                         ; preds = %if.end84
  %217 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4565
  %easy_conn244 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %217, i32 0, i32 2, !dbg !4566
  %218 = load %struct.connectdata*, %struct.connectdata** %easy_conn244, align 8, !dbg !4566
  %call245 = call i32 @Curl_protocol_connect(%struct.connectdata* %218, i8* %protocol_connect), !dbg !4567
  store i32 %call245, i32* %result, align 4, !dbg !4568
  %219 = load i8, i8* %protocol_connect, align 1, !dbg !4569
  %tobool246 = trunc i8 %219 to i1, !dbg !4569
  br i1 %tobool246, label %if.else248, label %if.then247, !dbg !4571

if.then247:                                       ; preds = %sw.bb243
  %220 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4572
  call void @mstate(%struct.Curl_easy* %220, i32 7), !dbg !4572
  br label %if.end262, !dbg !4572

if.else248:                                       ; preds = %sw.bb243
  %221 = load i32, i32* %result, align 4, !dbg !4573
  %tobool249 = icmp ne i32 %221, 0, !dbg !4573
  br i1 %tobool249, label %if.else254, label %if.then250, !dbg !4575

if.then250:                                       ; preds = %if.else248
  %222 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4576
  %223 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4576
  %call251 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %223, i32 1), !dbg !4576
  %cond253 = select i1 %call251, i32 8, i32 9, !dbg !4576
  call void @mstate(%struct.Curl_easy* %222, i32 %cond253), !dbg !4578
  store i32 -1, i32* %rc, align 4, !dbg !4580
  br label %if.end261, !dbg !4581

if.else254:                                       ; preds = %if.else248
  %224 = load i32, i32* %result, align 4, !dbg !4582
  %tobool255 = icmp ne i32 %224, 0, !dbg !4582
  br i1 %tobool255, label %if.then256, label %if.end260, !dbg !4584

if.then256:                                       ; preds = %if.else254
  %225 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4585
  %call257 = call i32 @Curl_posttransfer(%struct.Curl_easy* %225), !dbg !4587
  %226 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4588
  %easy_conn258 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %226, i32 0, i32 2, !dbg !4589
  %227 = load i32, i32* %result, align 4, !dbg !4590
  %call259 = call i32 @multi_done(%struct.connectdata** %easy_conn258, i32 %227, i1 zeroext true), !dbg !4591
  store i8 1, i8* %stream_error, align 1, !dbg !4592
  br label %if.end260, !dbg !4593

if.end260:                                        ; preds = %if.then256, %if.else254
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.then250
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.then247
  br label %sw.epilog, !dbg !4594

sw.bb263:                                         ; preds = %if.end84
  %228 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4595
  %easy_conn264 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %228, i32 0, i32 2, !dbg !4596
  %229 = load %struct.connectdata*, %struct.connectdata** %easy_conn264, align 8, !dbg !4596
  %call265 = call i32 @Curl_protocol_connecting(%struct.connectdata* %229, i8* %protocol_connect), !dbg !4597
  store i32 %call265, i32* %result, align 4, !dbg !4598
  %230 = load i32, i32* %result, align 4, !dbg !4599
  %tobool266 = icmp ne i32 %230, 0, !dbg !4599
  br i1 %tobool266, label %if.else274, label %land.lhs.true267, !dbg !4601

land.lhs.true267:                                 ; preds = %sw.bb263
  %231 = load i8, i8* %protocol_connect, align 1, !dbg !4602
  %tobool268 = trunc i8 %231 to i1, !dbg !4602
  br i1 %tobool268, label %if.then270, label %if.else274, !dbg !4604

if.then270:                                       ; preds = %land.lhs.true267
  %232 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4605
  %233 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4605
  %call271 = call zeroext i1 @Curl_pipeline_wanted(%struct.Curl_multi* %233, i32 1), !dbg !4605
  %cond273 = select i1 %call271, i32 8, i32 9, !dbg !4605
  call void @mstate(%struct.Curl_easy* %232, i32 %cond273), !dbg !4607
  store i32 -1, i32* %rc, align 4, !dbg !4609
  br label %if.end281, !dbg !4610

if.else274:                                       ; preds = %land.lhs.true267, %sw.bb263
  %234 = load i32, i32* %result, align 4, !dbg !4611
  %tobool275 = icmp ne i32 %234, 0, !dbg !4611
  br i1 %tobool275, label %if.then276, label %if.end280, !dbg !4613

if.then276:                                       ; preds = %if.else274
  %235 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4614
  %call277 = call i32 @Curl_posttransfer(%struct.Curl_easy* %235), !dbg !4616
  %236 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4617
  %easy_conn278 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %236, i32 0, i32 2, !dbg !4618
  %237 = load i32, i32* %result, align 4, !dbg !4619
  %call279 = call i32 @multi_done(%struct.connectdata** %easy_conn278, i32 %237, i1 zeroext true), !dbg !4620
  store i8 1, i8* %stream_error, align 1, !dbg !4621
  br label %if.end280, !dbg !4622

if.end280:                                        ; preds = %if.then276, %if.else274
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then270
  br label %sw.epilog, !dbg !4623

sw.bb282:                                         ; preds = %if.end84
  %238 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4624
  %239 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4626
  %easy_conn283 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %239, i32 0, i32 2, !dbg !4627
  %240 = load %struct.connectdata*, %struct.connectdata** %easy_conn283, align 8, !dbg !4627
  %call284 = call zeroext i1 @Curl_pipeline_checkget_write(%struct.Curl_easy* %238, %struct.connectdata* %240), !dbg !4628
  br i1 %call284, label %if.then285, label %if.end286, !dbg !4629

if.then285:                                       ; preds = %sw.bb282
  %241 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4630
  call void @mstate(%struct.Curl_easy* %241, i32 9), !dbg !4630
  store i32 -1, i32* %rc, align 4, !dbg !4632
  br label %if.end286, !dbg !4633

if.end286:                                        ; preds = %if.then285, %sw.bb282
  br label %sw.epilog, !dbg !4634

sw.bb287:                                         ; preds = %if.end84
  %242 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4635
  %set = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %242, i32 0, i32 13, !dbg !4637
  %connect_only = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set, i32 0, i32 121, !dbg !4638
  %243 = load i8, i8* %connect_only, align 1, !dbg !4638
  %tobool288 = trunc i8 %243 to i1, !dbg !4638
  br i1 %tobool288, label %if.then289, label %if.else291, !dbg !4639

if.then289:                                       ; preds = %sw.bb287
  %244 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4640
  %easy_conn290 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %244, i32 0, i32 2, !dbg !4640
  %245 = load %struct.connectdata*, %struct.connectdata** %easy_conn290, align 8, !dbg !4640
  call void @Curl_conncontrol(%struct.connectdata* %245, i32 0), !dbg !4640
  %246 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4642
  call void @mstate(%struct.Curl_easy* %246, i32 16), !dbg !4642
  store i32 0, i32* %result, align 4, !dbg !4643
  store i32 -1, i32* %rc, align 4, !dbg !4644
  br label %if.end368, !dbg !4645

if.else291:                                       ; preds = %sw.bb287
  %247 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4646
  %easy_conn292 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %247, i32 0, i32 2, !dbg !4648
  %call293 = call i32 @multi_do(%struct.connectdata** %easy_conn292, i8* %dophase_done), !dbg !4649
  store i32 %call293, i32* %result, align 4, !dbg !4650
  %248 = load i32, i32* %result, align 4, !dbg !4651
  %tobool294 = icmp ne i32 %248, 0, !dbg !4651
  br i1 %tobool294, label %if.else321, label %if.then295, !dbg !4653

if.then295:                                       ; preds = %if.else291
  %249 = load i8, i8* %dophase_done, align 1, !dbg !4654
  %tobool296 = trunc i8 %249 to i1, !dbg !4654
  br i1 %tobool296, label %if.else313, label %if.then297, !dbg !4657

if.then297:                                       ; preds = %if.then295
  %250 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4658
  %set298 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %250, i32 0, i32 13, !dbg !4661
  %wildcardmatch = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set298, i32 0, i32 136, !dbg !4662
  %251 = load i8, i8* %wildcardmatch, align 8, !dbg !4662
  %tobool299 = trunc i8 %251 to i1, !dbg !4662
  br i1 %tobool299, label %if.then300, label %if.end312, !dbg !4663

if.then300:                                       ; preds = %if.then297
  call void @llvm.dbg.declare(metadata %struct.WildcardData** %wc, metadata !4664, metadata !1963), !dbg !4667
  %252 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4668
  %wildcard = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %252, i32 0, i32 18, !dbg !4669
  store %struct.WildcardData* %wildcard, %struct.WildcardData** %wc, align 8, !dbg !4667
  %253 = load %struct.WildcardData*, %struct.WildcardData** %wc, align 8, !dbg !4670
  %state301 = getelementptr inbounds %struct.WildcardData, %struct.WildcardData* %253, i32 0, i32 0, !dbg !4672
  %254 = load i32, i32* %state301, align 8, !dbg !4672
  %cmp302 = icmp eq i32 %254, 7, !dbg !4673
  br i1 %cmp302, label %if.then308, label %lor.lhs.false304, !dbg !4674

lor.lhs.false304:                                 ; preds = %if.then300
  %255 = load %struct.WildcardData*, %struct.WildcardData** %wc, align 8, !dbg !4675
  %state305 = getelementptr inbounds %struct.WildcardData, %struct.WildcardData* %255, i32 0, i32 0, !dbg !4677
  %256 = load i32, i32* %state305, align 8, !dbg !4677
  %cmp306 = icmp eq i32 %256, 5, !dbg !4678
  br i1 %cmp306, label %if.then308, label %if.end311, !dbg !4679

if.then308:                                       ; preds = %lor.lhs.false304, %if.then300
  %257 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4680
  %easy_conn309 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %257, i32 0, i32 2, !dbg !4682
  %call310 = call i32 @multi_done(%struct.connectdata** %easy_conn309, i32 0, i1 zeroext false), !dbg !4683
  %258 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4684
  call void @mstate(%struct.Curl_easy* %258, i32 16), !dbg !4684
  store i32 -1, i32* %rc, align 4, !dbg !4685
  br label %sw.epilog, !dbg !4686

if.end311:                                        ; preds = %lor.lhs.false304
  br label %if.end312, !dbg !4687

if.end312:                                        ; preds = %if.end311, %if.then297
  %259 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4688
  call void @mstate(%struct.Curl_easy* %259, i32 10), !dbg !4688
  store i32 0, i32* %rc, align 4, !dbg !4689
  br label %if.end320, !dbg !4690

if.else313:                                       ; preds = %if.then295
  %260 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4691
  %easy_conn314 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %260, i32 0, i32 2, !dbg !4693
  %261 = load %struct.connectdata*, %struct.connectdata** %easy_conn314, align 8, !dbg !4693
  %bits315 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %261, i32 0, i32 43, !dbg !4694
  %do_more = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits315, i32 0, i32 11, !dbg !4695
  %262 = load i8, i8* %do_more, align 1, !dbg !4695
  %tobool316 = trunc i8 %262 to i1, !dbg !4695
  br i1 %tobool316, label %if.then317, label %if.else318, !dbg !4696

if.then317:                                       ; preds = %if.else313
  %263 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4697
  call void @mstate(%struct.Curl_easy* %263, i32 11), !dbg !4697
  store i32 0, i32* %rc, align 4, !dbg !4699
  br label %if.end319, !dbg !4700

if.else318:                                       ; preds = %if.else313
  %264 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4701
  call void @mstate(%struct.Curl_easy* %264, i32 12), !dbg !4701
  store i32 -1, i32* %rc, align 4, !dbg !4703
  br label %if.end319

if.end319:                                        ; preds = %if.else318, %if.then317
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.end312
  br label %if.end367, !dbg !4704

if.else321:                                       ; preds = %if.else291
  %265 = load i32, i32* %result, align 4, !dbg !4705
  %cmp322 = icmp eq i32 55, %265, !dbg !4707
  br i1 %cmp322, label %land.lhs.true324, label %if.else358, !dbg !4708

land.lhs.true324:                                 ; preds = %if.else321
  %266 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4709
  %easy_conn325 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %266, i32 0, i32 2, !dbg !4710
  %267 = load %struct.connectdata*, %struct.connectdata** %easy_conn325, align 8, !dbg !4710
  %bits326 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %267, i32 0, i32 43, !dbg !4711
  %reuse = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits326, i32 0, i32 1, !dbg !4712
  %268 = load i8, i8* %reuse, align 1, !dbg !4712
  %tobool327 = trunc i8 %268 to i1, !dbg !4712
  br i1 %tobool327, label %if.then329, label %if.else358, !dbg !4713

if.then329:                                       ; preds = %land.lhs.true324
  call void @llvm.dbg.declare(metadata i8** %newurl, metadata !4715, metadata !1963), !dbg !4717
  store i8* null, i8** %newurl, align 8, !dbg !4717
  call void @llvm.dbg.declare(metadata i32* %follow, metadata !4718, metadata !1963), !dbg !4720
  store i32 0, i32* %follow, align 4, !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %drc, metadata !4721, metadata !1963), !dbg !4722
  call void @llvm.dbg.declare(metadata i8* %retry, metadata !4723, metadata !1963), !dbg !4724
  store i8 0, i8* %retry, align 1, !dbg !4724
  %269 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4725
  %easy_conn330 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %269, i32 0, i32 2, !dbg !4726
  %270 = load %struct.connectdata*, %struct.connectdata** %easy_conn330, align 8, !dbg !4726
  %call331 = call i32 @Curl_retry_request(%struct.connectdata* %270, i8** %newurl), !dbg !4727
  store i32 %call331, i32* %drc, align 4, !dbg !4728
  %271 = load i32, i32* %drc, align 4, !dbg !4729
  %tobool332 = icmp ne i32 %271, 0, !dbg !4729
  br i1 %tobool332, label %if.then333, label %if.else334, !dbg !4731

if.then333:                                       ; preds = %if.then329
  %272 = load i32, i32* %drc, align 4, !dbg !4732
  store i32 %272, i32* %result, align 4, !dbg !4734
  store i8 1, i8* %stream_error, align 1, !dbg !4735
  br label %if.end338, !dbg !4736

if.else334:                                       ; preds = %if.then329
  %273 = load i8*, i8** %newurl, align 8, !dbg !4737
  %tobool335 = icmp ne i8* %273, null, !dbg !4738
  %cond336 = select i1 %tobool335, i32 1, i32 0, !dbg !4738
  %tobool337 = icmp ne i32 %cond336, 0, !dbg !4738
  %frombool = zext i1 %tobool337 to i8, !dbg !4739
  store i8 %frombool, i8* %retry, align 1, !dbg !4739
  br label %if.end338

if.end338:                                        ; preds = %if.else334, %if.then333
  %274 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4740
  %call339 = call i32 @Curl_posttransfer(%struct.Curl_easy* %274), !dbg !4741
  %275 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4742
  %easy_conn340 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %275, i32 0, i32 2, !dbg !4743
  %276 = load i32, i32* %result, align 4, !dbg !4744
  %call341 = call i32 @multi_done(%struct.connectdata** %easy_conn340, i32 %276, i1 zeroext false), !dbg !4745
  store i32 %call341, i32* %drc, align 4, !dbg !4746
  %277 = load i8, i8* %retry, align 1, !dbg !4747
  %tobool342 = trunc i8 %277 to i1, !dbg !4747
  br i1 %tobool342, label %if.then343, label %if.else356, !dbg !4749

if.then343:                                       ; preds = %if.end338
  %278 = load i32, i32* %drc, align 4, !dbg !4750
  %tobool344 = icmp ne i32 %278, 0, !dbg !4750
  br i1 %tobool344, label %lor.lhs.false345, label %if.then348, !dbg !4753

lor.lhs.false345:                                 ; preds = %if.then343
  %279 = load i32, i32* %drc, align 4, !dbg !4754
  %cmp346 = icmp eq i32 %279, 55, !dbg !4756
  br i1 %cmp346, label %if.then348, label %if.else354, !dbg !4757

if.then348:                                       ; preds = %lor.lhs.false345, %if.then343
  store i32 2, i32* %follow, align 4, !dbg !4758
  %280 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4760
  %281 = load i8*, i8** %newurl, align 8, !dbg !4761
  %282 = load i32, i32* %follow, align 4, !dbg !4762
  %call349 = call i32 @Curl_follow(%struct.Curl_easy* %280, i8* %281, i32 %282), !dbg !4763
  store i32 %call349, i32* %drc, align 4, !dbg !4764
  %283 = load i32, i32* %drc, align 4, !dbg !4765
  %tobool350 = icmp ne i32 %283, 0, !dbg !4765
  br i1 %tobool350, label %if.else352, label %if.then351, !dbg !4767

if.then351:                                       ; preds = %if.then348
  %284 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4768
  call void @mstate(%struct.Curl_easy* %284, i32 2), !dbg !4768
  store i32 -1, i32* %rc, align 4, !dbg !4770
  store i32 0, i32* %result, align 4, !dbg !4771
  br label %if.end353, !dbg !4772

if.else352:                                       ; preds = %if.then348
  %285 = load i32, i32* %drc, align 4, !dbg !4773
  store i32 %285, i32* %result, align 4, !dbg !4775
  %286 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !4776
  %287 = load i8*, i8** %newurl, align 8, !dbg !4776
  call void %286(i8* %287), !dbg !4776
  br label %if.end353

if.end353:                                        ; preds = %if.else352, %if.then351
  br label %if.end355, !dbg !4777

if.else354:                                       ; preds = %lor.lhs.false345
  %288 = load i32, i32* %drc, align 4, !dbg !4778
  store i32 %288, i32* %result, align 4, !dbg !4780
  %289 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !4781
  %290 = load i8*, i8** %newurl, align 8, !dbg !4781
  call void %289(i8* %290), !dbg !4781
  br label %if.end355

if.end355:                                        ; preds = %if.else354, %if.end353
  br label %if.end357, !dbg !4782

if.else356:                                       ; preds = %if.end338
  store i8 1, i8* %stream_error, align 1, !dbg !4783
  %291 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !4785
  %292 = load i8*, i8** %newurl, align 8, !dbg !4785
  call void %291(i8* %292), !dbg !4785
  br label %if.end357

if.end357:                                        ; preds = %if.else356, %if.end355
  br label %if.end366, !dbg !4786

if.else358:                                       ; preds = %land.lhs.true324, %if.else321
  %293 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4787
  %call359 = call i32 @Curl_posttransfer(%struct.Curl_easy* %293), !dbg !4789
  %294 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4790
  %easy_conn360 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %294, i32 0, i32 2, !dbg !4792
  %295 = load %struct.connectdata*, %struct.connectdata** %easy_conn360, align 8, !dbg !4792
  %tobool361 = icmp ne %struct.connectdata* %295, null, !dbg !4790
  br i1 %tobool361, label %if.then362, label %if.end365, !dbg !4793

if.then362:                                       ; preds = %if.else358
  %296 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4794
  %easy_conn363 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %296, i32 0, i32 2, !dbg !4795
  %297 = load i32, i32* %result, align 4, !dbg !4796
  %call364 = call i32 @multi_done(%struct.connectdata** %easy_conn363, i32 %297, i1 zeroext false), !dbg !4797
  br label %if.end365, !dbg !4797

if.end365:                                        ; preds = %if.then362, %if.else358
  store i8 1, i8* %stream_error, align 1, !dbg !4798
  br label %if.end366

if.end366:                                        ; preds = %if.end365, %if.end357
  br label %if.end367

if.end367:                                        ; preds = %if.end366, %if.end320
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then289
  br label %sw.epilog, !dbg !4799

sw.bb369:                                         ; preds = %if.end84
  %298 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4800
  %easy_conn370 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %298, i32 0, i32 2, !dbg !4801
  %299 = load %struct.connectdata*, %struct.connectdata** %easy_conn370, align 8, !dbg !4801
  %call371 = call i32 @Curl_protocol_doing(%struct.connectdata* %299, i8* %dophase_done), !dbg !4802
  store i32 %call371, i32* %result, align 4, !dbg !4803
  %300 = load i32, i32* %result, align 4, !dbg !4804
  %tobool372 = icmp ne i32 %300, 0, !dbg !4804
  br i1 %tobool372, label %if.else383, label %if.then373, !dbg !4806

if.then373:                                       ; preds = %sw.bb369
  %301 = load i8, i8* %dophase_done, align 1, !dbg !4807
  %tobool374 = trunc i8 %301 to i1, !dbg !4807
  br i1 %tobool374, label %if.then375, label %if.end382, !dbg !4810

if.then375:                                       ; preds = %if.then373
  %302 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4811
  %303 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4811
  %easy_conn376 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %303, i32 0, i32 2, !dbg !4811
  %304 = load %struct.connectdata*, %struct.connectdata** %easy_conn376, align 8, !dbg !4811
  %bits377 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %304, i32 0, i32 43, !dbg !4811
  %do_more378 = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits377, i32 0, i32 11, !dbg !4811
  %305 = load i8, i8* %do_more378, align 1, !dbg !4811
  %tobool379 = trunc i8 %305 to i1, !dbg !4811
  %cond381 = select i1 %tobool379, i32 11, i32 12, !dbg !4811
  call void @mstate(%struct.Curl_easy* %302, i32 %cond381), !dbg !4811
  store i32 -1, i32* %rc, align 4, !dbg !4813
  br label %if.end382, !dbg !4814

if.end382:                                        ; preds = %if.then375, %if.then373
  br label %if.end387, !dbg !4815

if.else383:                                       ; preds = %sw.bb369
  %306 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4816
  %call384 = call i32 @Curl_posttransfer(%struct.Curl_easy* %306), !dbg !4818
  %307 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4819
  %easy_conn385 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %307, i32 0, i32 2, !dbg !4820
  %308 = load i32, i32* %result, align 4, !dbg !4821
  %call386 = call i32 @multi_done(%struct.connectdata** %easy_conn385, i32 %308, i1 zeroext false), !dbg !4822
  store i8 1, i8* %stream_error, align 1, !dbg !4823
  br label %if.end387

if.end387:                                        ; preds = %if.else383, %if.end382
  br label %sw.epilog, !dbg !4824

sw.bb388:                                         ; preds = %if.end84
  %309 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4825
  %easy_conn389 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %309, i32 0, i32 2, !dbg !4826
  %310 = load %struct.connectdata*, %struct.connectdata** %easy_conn389, align 8, !dbg !4826
  %call390 = call i32 @multi_do_more(%struct.connectdata* %310, i32* %control), !dbg !4827
  store i32 %call390, i32* %result, align 4, !dbg !4828
  %311 = load i32, i32* %result, align 4, !dbg !4829
  %tobool391 = icmp ne i32 %311, 0, !dbg !4829
  br i1 %tobool391, label %if.else400, label %if.then392, !dbg !4831

if.then392:                                       ; preds = %sw.bb388
  %312 = load i32, i32* %control, align 4, !dbg !4832
  %tobool393 = icmp ne i32 %312, 0, !dbg !4832
  br i1 %tobool393, label %if.then394, label %if.else398, !dbg !4835

if.then394:                                       ; preds = %if.then392
  %313 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4836
  %314 = load i32, i32* %control, align 4, !dbg !4836
  %cmp395 = icmp eq i32 %314, 1, !dbg !4836
  %cond397 = select i1 %cmp395, i32 12, i32 10, !dbg !4836
  call void @mstate(%struct.Curl_easy* %313, i32 %cond397), !dbg !4836
  store i32 -1, i32* %rc, align 4, !dbg !4838
  br label %if.end399, !dbg !4839

if.else398:                                       ; preds = %if.then392
  store i32 0, i32* %rc, align 4, !dbg !4840
  br label %if.end399

if.end399:                                        ; preds = %if.else398, %if.then394
  br label %if.end404, !dbg !4841

if.else400:                                       ; preds = %sw.bb388
  %315 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4842
  %call401 = call i32 @Curl_posttransfer(%struct.Curl_easy* %315), !dbg !4844
  %316 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4845
  %easy_conn402 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %316, i32 0, i32 2, !dbg !4846
  %317 = load i32, i32* %result, align 4, !dbg !4847
  %call403 = call i32 @multi_done(%struct.connectdata** %easy_conn402, i32 %317, i1 zeroext false), !dbg !4848
  store i8 1, i8* %stream_error, align 1, !dbg !4849
  br label %if.end404

if.end404:                                        ; preds = %if.else400, %if.end399
  br label %sw.epilog, !dbg !4850

sw.bb405:                                         ; preds = %if.end84
  %318 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4851
  %319 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4852
  %easy_conn406 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %319, i32 0, i32 2, !dbg !4853
  %320 = load %struct.connectdata*, %struct.connectdata** %easy_conn406, align 8, !dbg !4853
  call void @Curl_move_handle_from_send_to_recv_pipe(%struct.Curl_easy* %318, %struct.connectdata* %320), !dbg !4854
  %321 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !4855
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %321), !dbg !4856
  %322 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4857
  %easy_conn407 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %322, i32 0, i32 2, !dbg !4859
  %323 = load %struct.connectdata*, %struct.connectdata** %easy_conn407, align 8, !dbg !4859
  %sockfd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %323, i32 0, i32 50, !dbg !4860
  %324 = load i32, i32* %sockfd, align 8, !dbg !4860
  %cmp408 = icmp ne i32 %324, -1, !dbg !4861
  br i1 %cmp408, label %if.then414, label %lor.lhs.false410, !dbg !4862

lor.lhs.false410:                                 ; preds = %sw.bb405
  %325 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4863
  %easy_conn411 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %325, i32 0, i32 2, !dbg !4864
  %326 = load %struct.connectdata*, %struct.connectdata** %easy_conn411, align 8, !dbg !4864
  %writesockfd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %326, i32 0, i32 51, !dbg !4865
  %327 = load i32, i32* %writesockfd, align 4, !dbg !4865
  %cmp412 = icmp ne i32 %327, -1, !dbg !4866
  br i1 %cmp412, label %if.then414, label %if.else415, !dbg !4867

if.then414:                                       ; preds = %lor.lhs.false410, %sw.bb405
  %328 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4869
  call void @mstate(%struct.Curl_easy* %328, i32 13), !dbg !4869
  br label %if.end416, !dbg !4869

if.else415:                                       ; preds = %lor.lhs.false410
  %329 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4870
  call void @mstate(%struct.Curl_easy* %329, i32 16), !dbg !4870
  br label %if.end416

if.end416:                                        ; preds = %if.else415, %if.then414
  store i32 -1, i32* %rc, align 4, !dbg !4871
  br label %sw.epilog, !dbg !4872

sw.bb417:                                         ; preds = %if.end84
  %330 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4873
  %331 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4875
  %easy_conn418 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %331, i32 0, i32 2, !dbg !4876
  %332 = load %struct.connectdata*, %struct.connectdata** %easy_conn418, align 8, !dbg !4876
  %call419 = call zeroext i1 @Curl_pipeline_checkget_read(%struct.Curl_easy* %330, %struct.connectdata* %332), !dbg !4877
  br i1 %call419, label %if.then420, label %if.end421, !dbg !4878

if.then420:                                       ; preds = %sw.bb417
  %333 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4879
  call void @mstate(%struct.Curl_easy* %333, i32 14), !dbg !4879
  store i32 -1, i32* %rc, align 4, !dbg !4881
  br label %if.end421, !dbg !4882

if.end421:                                        ; preds = %if.then420, %sw.bb417
  br label %sw.epilog, !dbg !4883

sw.bb422:                                         ; preds = %if.end84
  %334 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4884
  %easy_conn423 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %334, i32 0, i32 2, !dbg !4886
  %335 = load %struct.connectdata*, %struct.connectdata** %easy_conn423, align 8, !dbg !4886
  %call424 = call i32 @Curl_pgrsUpdate(%struct.connectdata* %335), !dbg !4887
  %tobool425 = icmp ne i32 %call424, 0, !dbg !4887
  br i1 %tobool425, label %if.then426, label %if.else427, !dbg !4888

if.then426:                                       ; preds = %sw.bb422
  store i32 42, i32* %result, align 4, !dbg !4889
  br label %if.end429, !dbg !4890

if.else427:                                       ; preds = %sw.bb422
  %336 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4891
  %337 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !4892
  %338 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %337, i32 0, i32 0, !dbg !4892
  %339 = load i64, i64* %338, align 8, !dbg !4892
  %340 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %337, i32 0, i32 1, !dbg !4892
  %341 = load i64, i64* %340, align 8, !dbg !4892
  %call428 = call i32 @Curl_speedcheck(%struct.Curl_easy* %336, i64 %339, i64 %341), !dbg !4892
  store i32 %call428, i32* %result, align 4, !dbg !4893
  br label %if.end429

if.end429:                                        ; preds = %if.else427, %if.then426
  %342 = load i32, i32* %result, align 4, !dbg !4894
  %tobool430 = icmp ne i32 %342, 0, !dbg !4894
  br i1 %tobool430, label %if.end467, label %if.then431, !dbg !4896

if.then431:                                       ; preds = %if.end429
  store i64 0, i64* %send_timeout_ms, align 8, !dbg !4897
  %343 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4899
  %set432 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %343, i32 0, i32 13, !dbg !4901
  %max_send_speed = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set432, i32 0, i32 51, !dbg !4902
  %344 = load i64, i64* %max_send_speed, align 8, !dbg !4902
  %cmp433 = icmp sgt i64 %344, 0, !dbg !4903
  br i1 %cmp433, label %if.then435, label %if.end442, !dbg !4904

if.then435:                                       ; preds = %if.then431
  %345 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4905
  %progress436 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %345, i32 0, i32 16, !dbg !4906
  %uploaded = getelementptr inbounds %struct.Progress, %struct.Progress* %progress436, i32 0, i32 4, !dbg !4907
  %346 = load i64, i64* %uploaded, align 8, !dbg !4907
  %347 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4908
  %progress437 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %347, i32 0, i32 16, !dbg !4909
  %ul_limit_size = getelementptr inbounds %struct.Progress, %struct.Progress* %progress437, i32 0, i32 23, !dbg !4910
  %348 = load i64, i64* %ul_limit_size, align 8, !dbg !4910
  %349 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4911
  %set438 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %349, i32 0, i32 13, !dbg !4912
  %max_send_speed439 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set438, i32 0, i32 51, !dbg !4913
  %350 = load i64, i64* %max_send_speed439, align 8, !dbg !4913
  %351 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4914
  %progress440 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %351, i32 0, i32 16, !dbg !4915
  %ul_limit_start = getelementptr inbounds %struct.Progress, %struct.Progress* %progress440, i32 0, i32 22, !dbg !4916
  %352 = bitcast %struct.timeval* %ul_limit_start to { i64, i64 }*, !dbg !4917
  %353 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %352, i32 0, i32 0, !dbg !4917
  %354 = load i64, i64* %353, align 8, !dbg !4917
  %355 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %352, i32 0, i32 1, !dbg !4917
  %356 = load i64, i64* %355, align 8, !dbg !4917
  %call441 = call i64 @Curl_pgrsLimitWaitTime(i64 %346, i64 %348, i64 %350, i64 %354, i64 %356, %struct.timeval* byval align 8 %now), !dbg !4917
  store i64 %call441, i64* %send_timeout_ms, align 8, !dbg !4918
  br label %if.end442, !dbg !4919

if.end442:                                        ; preds = %if.then435, %if.then431
  store i64 0, i64* %recv_timeout_ms, align 8, !dbg !4920
  %357 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4921
  %set443 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %357, i32 0, i32 13, !dbg !4923
  %max_recv_speed = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set443, i32 0, i32 52, !dbg !4924
  %358 = load i64, i64* %max_recv_speed, align 8, !dbg !4924
  %cmp444 = icmp sgt i64 %358, 0, !dbg !4925
  br i1 %cmp444, label %if.then446, label %if.end453, !dbg !4926

if.then446:                                       ; preds = %if.end442
  %359 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4927
  %progress447 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %359, i32 0, i32 16, !dbg !4928
  %downloaded = getelementptr inbounds %struct.Progress, %struct.Progress* %progress447, i32 0, i32 3, !dbg !4929
  %360 = load i64, i64* %downloaded, align 8, !dbg !4929
  %361 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4930
  %progress448 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %361, i32 0, i32 16, !dbg !4931
  %dl_limit_size = getelementptr inbounds %struct.Progress, %struct.Progress* %progress448, i32 0, i32 25, !dbg !4932
  %362 = load i64, i64* %dl_limit_size, align 8, !dbg !4932
  %363 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4933
  %set449 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %363, i32 0, i32 13, !dbg !4934
  %max_recv_speed450 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set449, i32 0, i32 52, !dbg !4935
  %364 = load i64, i64* %max_recv_speed450, align 8, !dbg !4935
  %365 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4936
  %progress451 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %365, i32 0, i32 16, !dbg !4937
  %dl_limit_start = getelementptr inbounds %struct.Progress, %struct.Progress* %progress451, i32 0, i32 24, !dbg !4938
  %366 = bitcast %struct.timeval* %dl_limit_start to { i64, i64 }*, !dbg !4939
  %367 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %366, i32 0, i32 0, !dbg !4939
  %368 = load i64, i64* %367, align 8, !dbg !4939
  %369 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %366, i32 0, i32 1, !dbg !4939
  %370 = load i64, i64* %369, align 8, !dbg !4939
  %call452 = call i64 @Curl_pgrsLimitWaitTime(i64 %360, i64 %362, i64 %364, i64 %368, i64 %370, %struct.timeval* byval align 8 %now), !dbg !4939
  store i64 %call452, i64* %recv_timeout_ms, align 8, !dbg !4940
  br label %if.end453, !dbg !4941

if.end453:                                        ; preds = %if.then446, %if.end442
  %371 = load i64, i64* %send_timeout_ms, align 8, !dbg !4942
  %cmp454 = icmp sle i64 %371, 0, !dbg !4944
  br i1 %cmp454, label %land.lhs.true456, label %if.else460, !dbg !4945

land.lhs.true456:                                 ; preds = %if.end453
  %372 = load i64, i64* %recv_timeout_ms, align 8, !dbg !4946
  %cmp457 = icmp sle i64 %372, 0, !dbg !4948
  br i1 %cmp457, label %if.then459, label %if.else460, !dbg !4949

if.then459:                                       ; preds = %land.lhs.true456
  %373 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4950
  call void @mstate(%struct.Curl_easy* %373, i32 14), !dbg !4950
  br label %if.end466, !dbg !4950

if.else460:                                       ; preds = %land.lhs.true456, %if.end453
  %374 = load i64, i64* %send_timeout_ms, align 8, !dbg !4951
  %375 = load i64, i64* %recv_timeout_ms, align 8, !dbg !4953
  %cmp461 = icmp sge i64 %374, %375, !dbg !4954
  br i1 %cmp461, label %if.then463, label %if.else464, !dbg !4955

if.then463:                                       ; preds = %if.else460
  %376 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4956
  %377 = load i64, i64* %send_timeout_ms, align 8, !dbg !4957
  call void @Curl_expire_latest(%struct.Curl_easy* %376, i64 %377), !dbg !4958
  br label %if.end465, !dbg !4958

if.else464:                                       ; preds = %if.else460
  %378 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4959
  %379 = load i64, i64* %recv_timeout_ms, align 8, !dbg !4960
  call void @Curl_expire_latest(%struct.Curl_easy* %378, i64 %379), !dbg !4961
  br label %if.end465

if.end465:                                        ; preds = %if.else464, %if.then463
  br label %if.end466

if.end466:                                        ; preds = %if.end465, %if.then459
  br label %if.end467, !dbg !4962

if.end467:                                        ; preds = %if.end466, %if.end429
  br label %sw.epilog, !dbg !4963

sw.bb468:                                         ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i8** %newurl469, metadata !4964, metadata !1963), !dbg !4966
  store i8* null, i8** %newurl469, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata i8* %retry470, metadata !4967, metadata !1963), !dbg !4968
  store i8 0, i8* %retry470, align 1, !dbg !4968
  call void @llvm.dbg.declare(metadata i8* %comeback, metadata !4969, metadata !1963), !dbg !4970
  store i8 0, i8* %comeback, align 1, !dbg !4970
  store i64 0, i64* %send_timeout_ms, align 8, !dbg !4971
  %380 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4972
  %set471 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %380, i32 0, i32 13, !dbg !4974
  %max_send_speed472 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set471, i32 0, i32 51, !dbg !4975
  %381 = load i64, i64* %max_send_speed472, align 8, !dbg !4975
  %cmp473 = icmp sgt i64 %381, 0, !dbg !4976
  br i1 %cmp473, label %if.then475, label %if.end485, !dbg !4977

if.then475:                                       ; preds = %sw.bb468
  %382 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4978
  %progress476 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %382, i32 0, i32 16, !dbg !4979
  %uploaded477 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress476, i32 0, i32 4, !dbg !4980
  %383 = load i64, i64* %uploaded477, align 8, !dbg !4980
  %384 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4981
  %progress478 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %384, i32 0, i32 16, !dbg !4982
  %ul_limit_size479 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress478, i32 0, i32 23, !dbg !4983
  %385 = load i64, i64* %ul_limit_size479, align 8, !dbg !4983
  %386 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4984
  %set480 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %386, i32 0, i32 13, !dbg !4985
  %max_send_speed481 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set480, i32 0, i32 51, !dbg !4986
  %387 = load i64, i64* %max_send_speed481, align 8, !dbg !4986
  %388 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4987
  %progress482 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %388, i32 0, i32 16, !dbg !4988
  %ul_limit_start483 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress482, i32 0, i32 22, !dbg !4989
  %389 = bitcast %struct.timeval* %ul_limit_start483 to { i64, i64 }*, !dbg !4990
  %390 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %389, i32 0, i32 0, !dbg !4990
  %391 = load i64, i64* %390, align 8, !dbg !4990
  %392 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %389, i32 0, i32 1, !dbg !4990
  %393 = load i64, i64* %392, align 8, !dbg !4990
  %call484 = call i64 @Curl_pgrsLimitWaitTime(i64 %383, i64 %385, i64 %387, i64 %391, i64 %393, %struct.timeval* byval align 8 %now), !dbg !4990
  store i64 %call484, i64* %send_timeout_ms, align 8, !dbg !4991
  br label %if.end485, !dbg !4992

if.end485:                                        ; preds = %if.then475, %sw.bb468
  store i64 0, i64* %recv_timeout_ms, align 8, !dbg !4993
  %394 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !4994
  %set486 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %394, i32 0, i32 13, !dbg !4996
  %max_recv_speed487 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set486, i32 0, i32 52, !dbg !4997
  %395 = load i64, i64* %max_recv_speed487, align 8, !dbg !4997
  %cmp488 = icmp sgt i64 %395, 0, !dbg !4998
  br i1 %cmp488, label %if.then490, label %if.end500, !dbg !4999

if.then490:                                       ; preds = %if.end485
  %396 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5000
  %progress491 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %396, i32 0, i32 16, !dbg !5001
  %downloaded492 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress491, i32 0, i32 3, !dbg !5002
  %397 = load i64, i64* %downloaded492, align 8, !dbg !5002
  %398 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5003
  %progress493 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %398, i32 0, i32 16, !dbg !5004
  %dl_limit_size494 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress493, i32 0, i32 25, !dbg !5005
  %399 = load i64, i64* %dl_limit_size494, align 8, !dbg !5005
  %400 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5006
  %set495 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %400, i32 0, i32 13, !dbg !5007
  %max_recv_speed496 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set495, i32 0, i32 52, !dbg !5008
  %401 = load i64, i64* %max_recv_speed496, align 8, !dbg !5008
  %402 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5009
  %progress497 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %402, i32 0, i32 16, !dbg !5010
  %dl_limit_start498 = getelementptr inbounds %struct.Progress, %struct.Progress* %progress497, i32 0, i32 24, !dbg !5011
  %403 = bitcast %struct.timeval* %dl_limit_start498 to { i64, i64 }*, !dbg !5012
  %404 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %403, i32 0, i32 0, !dbg !5012
  %405 = load i64, i64* %404, align 8, !dbg !5012
  %406 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %403, i32 0, i32 1, !dbg !5012
  %407 = load i64, i64* %406, align 8, !dbg !5012
  %call499 = call i64 @Curl_pgrsLimitWaitTime(i64 %397, i64 %399, i64 %401, i64 %405, i64 %407, %struct.timeval* byval align 8 %now), !dbg !5012
  store i64 %call499, i64* %recv_timeout_ms, align 8, !dbg !5013
  br label %if.end500, !dbg !5014

if.end500:                                        ; preds = %if.then490, %if.end485
  %408 = load i64, i64* %send_timeout_ms, align 8, !dbg !5015
  %cmp501 = icmp sgt i64 %408, 0, !dbg !5017
  br i1 %cmp501, label %if.then506, label %lor.lhs.false503, !dbg !5018

lor.lhs.false503:                                 ; preds = %if.end500
  %409 = load i64, i64* %recv_timeout_ms, align 8, !dbg !5019
  %cmp504 = icmp sgt i64 %409, 0, !dbg !5021
  br i1 %cmp504, label %if.then506, label %if.end512, !dbg !5022

if.then506:                                       ; preds = %lor.lhs.false503, %if.end500
  %410 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5023
  call void @mstate(%struct.Curl_easy* %410, i32 15), !dbg !5023
  %411 = load i64, i64* %send_timeout_ms, align 8, !dbg !5025
  %412 = load i64, i64* %recv_timeout_ms, align 8, !dbg !5027
  %cmp507 = icmp sge i64 %411, %412, !dbg !5028
  br i1 %cmp507, label %if.then509, label %if.else510, !dbg !5029

if.then509:                                       ; preds = %if.then506
  %413 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5030
  %414 = load i64, i64* %send_timeout_ms, align 8, !dbg !5031
  call void @Curl_expire_latest(%struct.Curl_easy* %413, i64 %414), !dbg !5032
  br label %if.end511, !dbg !5032

if.else510:                                       ; preds = %if.then506
  %415 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5033
  %416 = load i64, i64* %recv_timeout_ms, align 8, !dbg !5034
  call void @Curl_expire_latest(%struct.Curl_easy* %415, i64 %416), !dbg !5035
  br label %if.end511

if.end511:                                        ; preds = %if.else510, %if.then509
  br label %sw.epilog, !dbg !5036

if.end512:                                        ; preds = %lor.lhs.false503
  %417 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5037
  %easy_conn513 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %417, i32 0, i32 2, !dbg !5038
  %418 = load %struct.connectdata*, %struct.connectdata** %easy_conn513, align 8, !dbg !5038
  %419 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5039
  %call514 = call i32 @Curl_readwrite(%struct.connectdata* %418, %struct.Curl_easy* %419, i8* %done, i8* %comeback), !dbg !5040
  store i32 %call514, i32* %result, align 4, !dbg !5041
  %420 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5042
  %req515 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %420, i32 0, i32 12, !dbg !5043
  store %struct.SingleRequest* %req515, %struct.SingleRequest** %k, align 8, !dbg !5044
  %421 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !5045
  %keepon = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %421, i32 0, i32 31, !dbg !5047
  %422 = load i32, i32* %keepon, align 4, !dbg !5047
  %and = and i32 %422, 1, !dbg !5048
  %tobool516 = icmp ne i32 %and, 0, !dbg !5048
  br i1 %tobool516, label %if.end519, label %if.then517, !dbg !5049

if.then517:                                       ; preds = %if.end512
  %423 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5050
  %easy_conn518 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %423, i32 0, i32 2, !dbg !5051
  %424 = load %struct.connectdata*, %struct.connectdata** %easy_conn518, align 8, !dbg !5051
  call void @Curl_pipeline_leave_read(%struct.connectdata* %424), !dbg !5052
  br label %if.end519, !dbg !5052

if.end519:                                        ; preds = %if.then517, %if.end512
  %425 = load %struct.SingleRequest*, %struct.SingleRequest** %k, align 8, !dbg !5053
  %keepon520 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %425, i32 0, i32 31, !dbg !5055
  %426 = load i32, i32* %keepon520, align 4, !dbg !5055
  %and521 = and i32 %426, 2, !dbg !5056
  %tobool522 = icmp ne i32 %and521, 0, !dbg !5056
  br i1 %tobool522, label %if.end525, label %if.then523, !dbg !5057

if.then523:                                       ; preds = %if.end519
  %427 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5058
  %easy_conn524 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %427, i32 0, i32 2, !dbg !5059
  %428 = load %struct.connectdata*, %struct.connectdata** %easy_conn524, align 8, !dbg !5059
  call void @Curl_pipeline_leave_write(%struct.connectdata* %428), !dbg !5060
  br label %if.end525, !dbg !5060

if.end525:                                        ; preds = %if.then523, %if.end519
  %429 = load i8, i8* %done, align 1, !dbg !5061
  %tobool526 = trunc i8 %429 to i1, !dbg !5061
  br i1 %tobool526, label %if.then531, label %lor.lhs.false528, !dbg !5063

lor.lhs.false528:                                 ; preds = %if.end525
  %430 = load i32, i32* %result, align 4, !dbg !5064
  %cmp529 = icmp eq i32 %430, 56, !dbg !5066
  br i1 %cmp529, label %if.then531, label %if.end544, !dbg !5067

if.then531:                                       ; preds = %lor.lhs.false528, %if.end525
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5068, metadata !1963), !dbg !5070
  %431 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5071
  %easy_conn532 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %431, i32 0, i32 2, !dbg !5072
  %432 = load %struct.connectdata*, %struct.connectdata** %easy_conn532, align 8, !dbg !5072
  %call533 = call i32 @Curl_retry_request(%struct.connectdata* %432, i8** %newurl469), !dbg !5073
  store i32 %call533, i32* %ret, align 4, !dbg !5070
  %433 = load i32, i32* %ret, align 4, !dbg !5074
  %tobool534 = icmp ne i32 %433, 0, !dbg !5074
  br i1 %tobool534, label %if.end540, label %if.then535, !dbg !5076

if.then535:                                       ; preds = %if.then531
  %434 = load i8*, i8** %newurl469, align 8, !dbg !5077
  %tobool536 = icmp ne i8* %434, null, !dbg !5078
  %cond537 = select i1 %tobool536, i32 1, i32 0, !dbg !5078
  %tobool538 = icmp ne i32 %cond537, 0, !dbg !5078
  %frombool539 = zext i1 %tobool538 to i8, !dbg !5079
  store i8 %frombool539, i8* %retry470, align 1, !dbg !5079
  br label %if.end540, !dbg !5080

if.end540:                                        ; preds = %if.then535, %if.then531
  %435 = load i8, i8* %retry470, align 1, !dbg !5081
  %tobool541 = trunc i8 %435 to i1, !dbg !5081
  br i1 %tobool541, label %if.then542, label %if.end543, !dbg !5083

if.then542:                                       ; preds = %if.end540
  store i32 0, i32* %result, align 4, !dbg !5084
  store i8 1, i8* %done, align 1, !dbg !5086
  br label %if.end543, !dbg !5087

if.end543:                                        ; preds = %if.then542, %if.end540
  br label %if.end544, !dbg !5088

if.end544:                                        ; preds = %if.end543, %lor.lhs.false528
  %436 = load i32, i32* %result, align 4, !dbg !5089
  %tobool545 = icmp ne i32 %436, 0, !dbg !5089
  br i1 %tobool545, label %if.then546, label %if.else559, !dbg !5091

if.then546:                                       ; preds = %if.end544
  %437 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5092
  %easy_conn547 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %437, i32 0, i32 2, !dbg !5095
  %438 = load %struct.connectdata*, %struct.connectdata** %easy_conn547, align 8, !dbg !5095
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %438, i32 0, i32 47, !dbg !5096
  %439 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !5096
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %439, i32 0, i32 16, !dbg !5097
  %440 = load i32, i32* %flags, align 4, !dbg !5097
  %and548 = and i32 %440, 2, !dbg !5098
  %tobool549 = icmp ne i32 %and548, 0, !dbg !5098
  br i1 %tobool549, label %if.end555, label %land.lhs.true550, !dbg !5099

land.lhs.true550:                                 ; preds = %if.then546
  %441 = load i32, i32* %result, align 4, !dbg !5100
  %cmp551 = icmp ne i32 %441, 92, !dbg !5101
  br i1 %cmp551, label %if.then553, label %if.end555, !dbg !5102

if.then553:                                       ; preds = %land.lhs.true550
  %442 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5104
  %easy_conn554 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %442, i32 0, i32 2, !dbg !5104
  %443 = load %struct.connectdata*, %struct.connectdata** %easy_conn554, align 8, !dbg !5104
  call void @Curl_conncontrol(%struct.connectdata* %443, i32 2), !dbg !5104
  br label %if.end555, !dbg !5104

if.end555:                                        ; preds = %if.then553, %land.lhs.true550, %if.then546
  %444 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5105
  %call556 = call i32 @Curl_posttransfer(%struct.Curl_easy* %444), !dbg !5106
  %445 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5107
  %easy_conn557 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %445, i32 0, i32 2, !dbg !5108
  %446 = load i32, i32* %result, align 4, !dbg !5109
  %call558 = call i32 @multi_done(%struct.connectdata** %easy_conn557, i32 %446, i1 zeroext true), !dbg !5110
  br label %if.end618, !dbg !5111

if.else559:                                       ; preds = %if.end544
  %447 = load i8, i8* %done, align 1, !dbg !5112
  %tobool560 = trunc i8 %447 to i1, !dbg !5112
  br i1 %tobool560, label %if.then561, label %if.else613, !dbg !5114

if.then561:                                       ; preds = %if.else559
  call void @llvm.dbg.declare(metadata i32* %follow562, metadata !5115, metadata !1963), !dbg !5117
  store i32 0, i32* %follow562, align 4, !dbg !5117
  %448 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5118
  %call563 = call i32 @Curl_posttransfer(%struct.Curl_easy* %448), !dbg !5119
  %449 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5120
  %450 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5121
  %easy_conn564 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %450, i32 0, i32 2, !dbg !5122
  %451 = load %struct.connectdata*, %struct.connectdata** %easy_conn564, align 8, !dbg !5122
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %451, i32 0, i32 56, !dbg !5123
  %call565 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %449, %struct.curl_llist* %recv_pipe), !dbg !5124
  %452 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5125
  %easy_conn566 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %452, i32 0, i32 2, !dbg !5127
  %453 = load %struct.connectdata*, %struct.connectdata** %easy_conn566, align 8, !dbg !5127
  %recv_pipe567 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %453, i32 0, i32 56, !dbg !5128
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe567, i32 0, i32 0, !dbg !5129
  %454 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !5129
  %tobool568 = icmp ne %struct.curl_llist_element* %454, null, !dbg !5125
  br i1 %tobool568, label %if.then569, label %if.end573, !dbg !5130

if.then569:                                       ; preds = %if.then561
  %455 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5131
  %easy_conn570 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %455, i32 0, i32 2, !dbg !5132
  %456 = load %struct.connectdata*, %struct.connectdata** %easy_conn570, align 8, !dbg !5132
  %recv_pipe571 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %456, i32 0, i32 56, !dbg !5133
  %head572 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe571, i32 0, i32 0, !dbg !5134
  %457 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head572, align 8, !dbg !5134
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %457, i32 0, i32 0, !dbg !5135
  %458 = load i8*, i8** %ptr, align 8, !dbg !5135
  %459 = bitcast i8* %458 to %struct.Curl_easy*, !dbg !5131
  call void @Curl_expire_latest(%struct.Curl_easy* %459, i64 0), !dbg !5136
  br label %if.end573, !dbg !5136

if.end573:                                        ; preds = %if.then569, %if.then561
  %460 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5137
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %460), !dbg !5138
  %461 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5139
  %req574 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %461, i32 0, i32 12, !dbg !5141
  %newurl575 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req574, i32 0, i32 36, !dbg !5142
  %462 = load i8*, i8** %newurl575, align 8, !dbg !5142
  %tobool576 = icmp ne i8* %462, null, !dbg !5139
  br i1 %tobool576, label %if.then580, label %lor.lhs.false577, !dbg !5143

lor.lhs.false577:                                 ; preds = %if.end573
  %463 = load i8, i8* %retry470, align 1, !dbg !5144
  %tobool578 = trunc i8 %463 to i1, !dbg !5144
  br i1 %tobool578, label %if.then580, label %if.else598, !dbg !5146

if.then580:                                       ; preds = %lor.lhs.false577, %if.end573
  %464 = load i8, i8* %retry470, align 1, !dbg !5147
  %tobool581 = trunc i8 %464 to i1, !dbg !5147
  br i1 %tobool581, label %if.else587, label %if.then582, !dbg !5150

if.then582:                                       ; preds = %if.then580
  %465 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5151
  %466 = load i8*, i8** %newurl469, align 8, !dbg !5151
  call void %465(i8* %466), !dbg !5151
  %467 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5153
  %req583 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %467, i32 0, i32 12, !dbg !5154
  %newurl584 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req583, i32 0, i32 36, !dbg !5155
  %468 = load i8*, i8** %newurl584, align 8, !dbg !5155
  store i8* %468, i8** %newurl469, align 8, !dbg !5156
  %469 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5157
  %req585 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %469, i32 0, i32 12, !dbg !5158
  %newurl586 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req585, i32 0, i32 36, !dbg !5159
  store i8* null, i8** %newurl586, align 8, !dbg !5160
  store i32 3, i32* %follow562, align 4, !dbg !5161
  br label %if.end588, !dbg !5162

if.else587:                                       ; preds = %if.then580
  store i32 2, i32* %follow562, align 4, !dbg !5163
  br label %if.end588

if.end588:                                        ; preds = %if.else587, %if.then582
  %470 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5164
  %easy_conn589 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %470, i32 0, i32 2, !dbg !5165
  %call590 = call i32 @multi_done(%struct.connectdata** %easy_conn589, i32 0, i1 zeroext false), !dbg !5166
  store i32 %call590, i32* %result, align 4, !dbg !5167
  %471 = load i32, i32* %result, align 4, !dbg !5168
  %tobool591 = icmp ne i32 %471, 0, !dbg !5168
  br i1 %tobool591, label %if.end597, label %if.then592, !dbg !5170

if.then592:                                       ; preds = %if.end588
  %472 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5171
  %473 = load i8*, i8** %newurl469, align 8, !dbg !5173
  %474 = load i32, i32* %follow562, align 4, !dbg !5174
  %call593 = call i32 @Curl_follow(%struct.Curl_easy* %472, i8* %473, i32 %474), !dbg !5175
  store i32 %call593, i32* %result, align 4, !dbg !5176
  %475 = load i32, i32* %result, align 4, !dbg !5177
  %tobool594 = icmp ne i32 %475, 0, !dbg !5177
  br i1 %tobool594, label %if.end596, label %if.then595, !dbg !5179

if.then595:                                       ; preds = %if.then592
  %476 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5180
  call void @mstate(%struct.Curl_easy* %476, i32 2), !dbg !5180
  store i32 -1, i32* %rc, align 4, !dbg !5182
  store i8* null, i8** %newurl469, align 8, !dbg !5183
  br label %if.end596, !dbg !5184

if.end596:                                        ; preds = %if.then595, %if.then592
  br label %if.end597, !dbg !5185

if.end597:                                        ; preds = %if.end596, %if.end588
  br label %if.end612, !dbg !5186

if.else598:                                       ; preds = %lor.lhs.false577
  %477 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5187
  %req599 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %477, i32 0, i32 12, !dbg !5190
  %location = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req599, i32 0, i32 35, !dbg !5191
  %478 = load i8*, i8** %location, align 8, !dbg !5191
  %tobool600 = icmp ne i8* %478, null, !dbg !5187
  br i1 %tobool600, label %if.then601, label %if.end611, !dbg !5192

if.then601:                                       ; preds = %if.else598
  %479 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5193
  %480 = load i8*, i8** %newurl469, align 8, !dbg !5193
  call void %479(i8* %480), !dbg !5193
  %481 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5195
  %req602 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %481, i32 0, i32 12, !dbg !5196
  %location603 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req602, i32 0, i32 35, !dbg !5197
  %482 = load i8*, i8** %location603, align 8, !dbg !5197
  store i8* %482, i8** %newurl469, align 8, !dbg !5198
  %483 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5199
  %req604 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %483, i32 0, i32 12, !dbg !5200
  %location605 = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req604, i32 0, i32 35, !dbg !5201
  store i8* null, i8** %location605, align 8, !dbg !5202
  %484 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5203
  %485 = load i8*, i8** %newurl469, align 8, !dbg !5204
  %call606 = call i32 @Curl_follow(%struct.Curl_easy* %484, i8* %485, i32 1), !dbg !5205
  store i32 %call606, i32* %result, align 4, !dbg !5206
  %486 = load i32, i32* %result, align 4, !dbg !5207
  %tobool607 = icmp ne i32 %486, 0, !dbg !5207
  br i1 %tobool607, label %if.else609, label %if.then608, !dbg !5209

if.then608:                                       ; preds = %if.then601
  store i8* null, i8** %newurl469, align 8, !dbg !5210
  br label %if.end610, !dbg !5211

if.else609:                                       ; preds = %if.then601
  store i8 1, i8* %stream_error, align 1, !dbg !5212
  br label %if.end610

if.end610:                                        ; preds = %if.else609, %if.then608
  br label %if.end611, !dbg !5213

if.end611:                                        ; preds = %if.end610, %if.else598
  %487 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5214
  call void @mstate(%struct.Curl_easy* %487, i32 16), !dbg !5214
  store i32 -1, i32* %rc, align 4, !dbg !5215
  br label %if.end612

if.end612:                                        ; preds = %if.end611, %if.end597
  br label %if.end617, !dbg !5216

if.else613:                                       ; preds = %if.else559
  %488 = load i8, i8* %comeback, align 1, !dbg !5217
  %tobool614 = trunc i8 %488 to i1, !dbg !5217
  br i1 %tobool614, label %if.then615, label %if.end616, !dbg !5219

if.then615:                                       ; preds = %if.else613
  store i32 -1, i32* %rc, align 4, !dbg !5220
  br label %if.end616, !dbg !5221

if.end616:                                        ; preds = %if.then615, %if.else613
  br label %if.end617

if.end617:                                        ; preds = %if.end616, %if.end612
  br label %if.end618

if.end618:                                        ; preds = %if.end617, %if.end555
  %489 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5222
  %490 = load i8*, i8** %newurl469, align 8, !dbg !5222
  call void %489(i8* %490), !dbg !5222
  br label %sw.epilog, !dbg !5223

sw.bb619:                                         ; preds = %if.end84
  store i32 -1, i32* %rc, align 4, !dbg !5224
  %491 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5225
  %easy_conn620 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %491, i32 0, i32 2, !dbg !5227
  %492 = load %struct.connectdata*, %struct.connectdata** %easy_conn620, align 8, !dbg !5227
  %tobool621 = icmp ne %struct.connectdata* %492, null, !dbg !5225
  br i1 %tobool621, label %if.then622, label %if.end636, !dbg !5228

if.then622:                                       ; preds = %sw.bb619
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5229, metadata !1963), !dbg !5231
  %493 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5232
  %494 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5233
  %easy_conn623 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %494, i32 0, i32 2, !dbg !5234
  %495 = load %struct.connectdata*, %struct.connectdata** %easy_conn623, align 8, !dbg !5234
  %recv_pipe624 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %495, i32 0, i32 56, !dbg !5235
  %call625 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %493, %struct.curl_llist* %recv_pipe624), !dbg !5236
  %496 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5237
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %496), !dbg !5238
  %497 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5239
  %easy_conn626 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %497, i32 0, i32 2, !dbg !5240
  %498 = load i32, i32* %result, align 4, !dbg !5241
  %call627 = call i32 @multi_done(%struct.connectdata** %easy_conn626, i32 %498, i1 zeroext false), !dbg !5242
  store i32 %call627, i32* %res, align 4, !dbg !5243
  %499 = load i32, i32* %result, align 4, !dbg !5244
  %tobool628 = icmp ne i32 %499, 0, !dbg !5244
  br i1 %tobool628, label %if.end630, label %if.then629, !dbg !5246

if.then629:                                       ; preds = %if.then622
  %500 = load i32, i32* %res, align 4, !dbg !5247
  store i32 %500, i32* %result, align 4, !dbg !5248
  br label %if.end630, !dbg !5249

if.end630:                                        ; preds = %if.then629, %if.then622
  %501 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5250
  %easy_conn631 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %501, i32 0, i32 2, !dbg !5252
  %502 = load %struct.connectdata*, %struct.connectdata** %easy_conn631, align 8, !dbg !5252
  %tobool632 = icmp ne %struct.connectdata* %502, null, !dbg !5250
  br i1 %tobool632, label %if.then633, label %if.end635, !dbg !5253

if.then633:                                       ; preds = %if.end630
  %503 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5254
  %easy_conn634 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %503, i32 0, i32 2, !dbg !5255
  store %struct.connectdata* null, %struct.connectdata** %easy_conn634, align 8, !dbg !5256
  br label %if.end635, !dbg !5254

if.end635:                                        ; preds = %if.then633, %if.end630
  br label %if.end636, !dbg !5257

if.end636:                                        ; preds = %if.end635, %sw.bb619
  %504 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5258
  %set637 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %504, i32 0, i32 13, !dbg !5260
  %wildcardmatch638 = getelementptr inbounds %struct.UserDefined, %struct.UserDefined* %set637, i32 0, i32 136, !dbg !5261
  %505 = load i8, i8* %wildcardmatch638, align 8, !dbg !5261
  %tobool639 = trunc i8 %505 to i1, !dbg !5261
  br i1 %tobool639, label %if.then640, label %if.end647, !dbg !5262

if.then640:                                       ; preds = %if.end636
  %506 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5263
  %wildcard641 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %506, i32 0, i32 18, !dbg !5266
  %state642 = getelementptr inbounds %struct.WildcardData, %struct.WildcardData* %wildcard641, i32 0, i32 0, !dbg !5267
  %507 = load i32, i32* %state642, align 8, !dbg !5267
  %cmp643 = icmp ne i32 %507, 7, !dbg !5268
  br i1 %cmp643, label %if.then645, label %if.end646, !dbg !5269

if.then645:                                       ; preds = %if.then640
  %508 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5270
  call void @mstate(%struct.Curl_easy* %508, i32 0), !dbg !5270
  br label %sw.epilog, !dbg !5272

if.end646:                                        ; preds = %if.then640
  br label %if.end647, !dbg !5273

if.end647:                                        ; preds = %if.end646, %if.end636
  %509 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5274
  call void @mstate(%struct.Curl_easy* %509, i32 17), !dbg !5274
  br label %sw.epilog, !dbg !5275

sw.bb648:                                         ; preds = %if.end84
  %510 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5276
  %easy_conn649 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %510, i32 0, i32 2, !dbg !5277
  store %struct.connectdata* null, %struct.connectdata** %easy_conn649, align 8, !dbg !5278
  %511 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5279
  call void @Curl_expire_clear(%struct.Curl_easy* %511), !dbg !5280
  br label %sw.epilog, !dbg !5281

sw.bb650:                                         ; preds = %if.end84
  %512 = load i32, i32* %result, align 4, !dbg !5282
  %513 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5283
  %result651 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %513, i32 0, i32 4, !dbg !5284
  store i32 %512, i32* %result651, align 4, !dbg !5285
  store i32 0, i32* %retval, align 4, !dbg !5286
  br label %return, !dbg !5286

sw.default:                                       ; preds = %if.end84
  store i32 4, i32* %retval, align 4, !dbg !5287
  br label %return, !dbg !5287

sw.epilog:                                        ; preds = %sw.bb648, %if.end647, %if.then645, %if.end618, %if.end511, %if.end467, %if.end421, %if.end416, %if.end404, %if.end387, %if.end368, %if.then308, %if.end286, %if.end281, %if.end262, %if.end242, %if.then240, %if.then231, %if.end205, %if.end174, %if.then173, %if.end126, %if.end101, %sw.bb90, %if.end89
  br label %statemachine_end, !dbg !5288

statemachine_end:                                 ; preds = %sw.epilog, %if.end80
  %514 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5289
  %mstate652 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %514, i32 0, i32 3, !dbg !5291
  %515 = load i32, i32* %mstate652, align 8, !dbg !5291
  %cmp653 = icmp ult i32 %515, 17, !dbg !5292
  br i1 %cmp653, label %if.then655, label %if.end703, !dbg !5293

if.then655:                                       ; preds = %statemachine_end
  %516 = load i32, i32* %result, align 4, !dbg !5294
  %tobool656 = icmp ne i32 %516, 0, !dbg !5294
  br i1 %tobool656, label %if.then657, label %if.else688, !dbg !5297

if.then657:                                       ; preds = %if.then655
  %517 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5298
  %state658 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %517, i32 0, i32 17, !dbg !5300
  %pipe_broke659 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state658, i32 0, i32 34, !dbg !5301
  store i8 0, i8* %pipe_broke659, align 1, !dbg !5302
  %518 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5303
  call void @Curl_multi_process_pending_handles(%struct.Curl_multi* %518), !dbg !5304
  %519 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5305
  %easy_conn660 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %519, i32 0, i32 2, !dbg !5307
  %520 = load %struct.connectdata*, %struct.connectdata** %easy_conn660, align 8, !dbg !5307
  %tobool661 = icmp ne %struct.connectdata* %520, null, !dbg !5305
  br i1 %tobool661, label %if.then662, label %if.else680, !dbg !5308

if.then662:                                       ; preds = %if.then657
  %521 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5309
  %easy_conn663 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %521, i32 0, i32 2, !dbg !5311
  %522 = load %struct.connectdata*, %struct.connectdata** %easy_conn663, align 8, !dbg !5311
  call void @Curl_pipeline_leave_write(%struct.connectdata* %522), !dbg !5312
  %523 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5313
  %easy_conn664 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %523, i32 0, i32 2, !dbg !5314
  %524 = load %struct.connectdata*, %struct.connectdata** %easy_conn664, align 8, !dbg !5314
  call void @Curl_pipeline_leave_read(%struct.connectdata* %524), !dbg !5315
  %525 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5316
  %526 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5317
  %easy_conn665 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %526, i32 0, i32 2, !dbg !5318
  %527 = load %struct.connectdata*, %struct.connectdata** %easy_conn665, align 8, !dbg !5318
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %527, i32 0, i32 55, !dbg !5319
  %call666 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %525, %struct.curl_llist* %send_pipe), !dbg !5320
  %528 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5321
  %529 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5322
  %easy_conn667 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %529, i32 0, i32 2, !dbg !5323
  %530 = load %struct.connectdata*, %struct.connectdata** %easy_conn667, align 8, !dbg !5323
  %recv_pipe668 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %530, i32 0, i32 56, !dbg !5324
  %call669 = call i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy* %528, %struct.curl_llist* %recv_pipe668), !dbg !5325
  %531 = load i8, i8* %stream_error, align 1, !dbg !5326
  %tobool670 = trunc i8 %531 to i1, !dbg !5326
  br i1 %tobool670, label %if.then671, label %if.end679, !dbg !5328

if.then671:                                       ; preds = %if.then662
  call void @llvm.dbg.declare(metadata i8* %dead_connection, metadata !5329, metadata !1963), !dbg !5331
  %532 = load i32, i32* %result, align 4, !dbg !5332
  %cmp672 = icmp eq i32 %532, 28, !dbg !5333
  %frombool674 = zext i1 %cmp672 to i8, !dbg !5331
  store i8 %frombool674, i8* %dead_connection, align 1, !dbg !5331
  %533 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5334
  %easy_conn675 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %533, i32 0, i32 2, !dbg !5335
  %534 = load %struct.connectdata*, %struct.connectdata** %easy_conn675, align 8, !dbg !5335
  %535 = load i8, i8* %dead_connection, align 1, !dbg !5336
  %tobool676 = trunc i8 %535 to i1, !dbg !5336
  %call677 = call i32 @Curl_disconnect(%struct.connectdata* %534, i1 zeroext %tobool676), !dbg !5337
  %536 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5338
  %easy_conn678 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %536, i32 0, i32 2, !dbg !5339
  store %struct.connectdata* null, %struct.connectdata** %easy_conn678, align 8, !dbg !5340
  br label %if.end679, !dbg !5341

if.end679:                                        ; preds = %if.then671, %if.then662
  br label %if.end687, !dbg !5342

if.else680:                                       ; preds = %if.then657
  %537 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5343
  %mstate681 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %537, i32 0, i32 3, !dbg !5345
  %538 = load i32, i32* %mstate681, align 8, !dbg !5345
  %cmp682 = icmp eq i32 %538, 2, !dbg !5346
  br i1 %cmp682, label %if.then684, label %if.end686, !dbg !5347

if.then684:                                       ; preds = %if.else680
  %539 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5348
  %call685 = call i32 @Curl_posttransfer(%struct.Curl_easy* %539), !dbg !5350
  br label %if.end686, !dbg !5351

if.end686:                                        ; preds = %if.then684, %if.else680
  br label %if.end687

if.end687:                                        ; preds = %if.end686, %if.end679
  %540 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5352
  call void @mstate(%struct.Curl_easy* %540, i32 17), !dbg !5352
  br label %if.end702, !dbg !5353

if.else688:                                       ; preds = %if.then655
  %541 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5354
  %easy_conn689 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %541, i32 0, i32 2, !dbg !5356
  %542 = load %struct.connectdata*, %struct.connectdata** %easy_conn689, align 8, !dbg !5356
  %tobool690 = icmp ne %struct.connectdata* %542, null, !dbg !5354
  br i1 %tobool690, label %land.lhs.true691, label %if.end701, !dbg !5357

land.lhs.true691:                                 ; preds = %if.else688
  %543 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5358
  %easy_conn692 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %543, i32 0, i32 2, !dbg !5360
  %544 = load %struct.connectdata*, %struct.connectdata** %easy_conn692, align 8, !dbg !5360
  %call693 = call i32 @Curl_pgrsUpdate(%struct.connectdata* %544), !dbg !5361
  %tobool694 = icmp ne i32 %call693, 0, !dbg !5361
  br i1 %tobool694, label %if.then695, label %if.end701, !dbg !5362

if.then695:                                       ; preds = %land.lhs.true691
  store i32 42, i32* %result, align 4, !dbg !5363
  %545 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5365
  %easy_conn696 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %545, i32 0, i32 2, !dbg !5365
  %546 = load %struct.connectdata*, %struct.connectdata** %easy_conn696, align 8, !dbg !5365
  call void @Curl_conncontrol(%struct.connectdata* %546, i32 2), !dbg !5365
  %547 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5366
  %548 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5366
  %mstate697 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %548, i32 0, i32 3, !dbg !5366
  %549 = load i32, i32* %mstate697, align 8, !dbg !5366
  %cmp698 = icmp ult i32 %549, 16, !dbg !5366
  %cond700 = select i1 %cmp698, i32 16, i32 17, !dbg !5366
  call void @mstate(%struct.Curl_easy* %547, i32 %cond700), !dbg !5366
  store i32 -1, i32* %rc, align 4, !dbg !5367
  br label %if.end701, !dbg !5368

if.end701:                                        ; preds = %if.then695, %land.lhs.true691, %if.else688
  br label %if.end702

if.end702:                                        ; preds = %if.end701, %if.end687
  br label %if.end703, !dbg !5369

if.end703:                                        ; preds = %if.end702, %statemachine_end
  %550 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5370
  %mstate704 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %550, i32 0, i32 3, !dbg !5372
  %551 = load i32, i32* %mstate704, align 8, !dbg !5372
  %cmp705 = icmp eq i32 17, %551, !dbg !5373
  br i1 %cmp705, label %if.then707, label %if.end715, !dbg !5374

if.then707:                                       ; preds = %if.end703
  %552 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5375
  %msg708 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %552, i32 0, i32 5, !dbg !5377
  store %struct.Curl_message* %msg708, %struct.Curl_message** %msg, align 8, !dbg !5378
  %553 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !5379
  %extmsg = getelementptr inbounds %struct.Curl_message, %struct.Curl_message* %553, i32 0, i32 0, !dbg !5380
  %msg709 = getelementptr inbounds %struct.CURLMsg, %struct.CURLMsg* %extmsg, i32 0, i32 0, !dbg !5381
  store i32 1, i32* %msg709, align 8, !dbg !5382
  %554 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5383
  %555 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !5384
  %extmsg710 = getelementptr inbounds %struct.Curl_message, %struct.Curl_message* %555, i32 0, i32 0, !dbg !5385
  %easy_handle = getelementptr inbounds %struct.CURLMsg, %struct.CURLMsg* %extmsg710, i32 0, i32 1, !dbg !5386
  store %struct.Curl_easy* %554, %struct.Curl_easy** %easy_handle, align 8, !dbg !5387
  %556 = load i32, i32* %result, align 4, !dbg !5388
  %557 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !5389
  %extmsg711 = getelementptr inbounds %struct.Curl_message, %struct.Curl_message* %557, i32 0, i32 0, !dbg !5390
  %data712 = getelementptr inbounds %struct.CURLMsg, %struct.CURLMsg* %extmsg711, i32 0, i32 2, !dbg !5391
  %result713 = bitcast %union.anon.0* %data712 to i32*, !dbg !5392
  store i32 %556, i32* %result713, align 8, !dbg !5393
  %558 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5394
  %559 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !5395
  %call714 = call i32 @multi_addmsg(%struct.Curl_multi* %558, %struct.Curl_message* %559), !dbg !5396
  store i32 %call714, i32* %rc, align 4, !dbg !5397
  %560 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5398
  call void @mstate(%struct.Curl_easy* %560, i32 18), !dbg !5398
  br label %if.end715, !dbg !5399

if.end715:                                        ; preds = %if.then707, %if.end703
  br label %do.cond, !dbg !5400

do.cond:                                          ; preds = %if.end715, %if.end6
  %561 = load i32, i32* %rc, align 4, !dbg !5401
  %cmp716 = icmp eq i32 %561, -1, !dbg !5403
  br i1 %cmp716, label %lor.end, label %lor.rhs, !dbg !5404

lor.rhs:                                          ; preds = %do.cond
  %562 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5405
  %call718 = call zeroext i1 @multi_ischanged(%struct.Curl_multi* %562, i1 zeroext false), !dbg !5407
  br label %lor.end, !dbg !5408

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %563 = phi i1 [ true, %do.cond ], [ %call718, %lor.rhs ]
  br i1 %563, label %do.body, label %do.end720, !dbg !5409

do.end720:                                        ; preds = %lor.end
  %564 = load i32, i32* %result, align 4, !dbg !5411
  %565 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !5412
  %result721 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %565, i32 0, i32 4, !dbg !5413
  store i32 %564, i32* %result721, align 4, !dbg !5414
  %566 = load i32, i32* %rc, align 4, !dbg !5415
  store i32 %566, i32* %retval, align 4, !dbg !5416
  br label %return, !dbg !5416

return:                                           ; preds = %do.end720, %sw.default, %sw.bb650, %if.then18, %if.then
  %567 = load i32, i32* %retval, align 4, !dbg !5417
  ret i32 %567, !dbg !5417
}

declare %struct.Curl_tree* @Curl_splaygetbest(i64, i64, %struct.Curl_tree*, %struct.Curl_tree**) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_next_timeout(i64 %now.coerce0, i64 %now.coerce1, %struct.Curl_multi* %multi, %struct.Curl_easy* %d) #0 !dbg !1934 {
entry:
  %now = alloca %struct.timeval, align 8
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %d.addr = alloca %struct.Curl_easy*, align 8
  %tv = alloca %struct.timeval*, align 8
  %list = alloca %struct.curl_llist*, align 8
  %e = alloca %struct.curl_llist_element*, align 8
  %n = alloca %struct.curl_llist_element*, align 8
  %diff = alloca i64, align 8
  %0 = bitcast %struct.timeval* %now to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %now.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %now.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !5418, metadata !1963), !dbg !5419
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5420, metadata !1963), !dbg !5421
  store %struct.Curl_easy* %d, %struct.Curl_easy** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %d.addr, metadata !5422, metadata !1963), !dbg !5423
  call void @llvm.dbg.declare(metadata %struct.timeval** %tv, metadata !5424, metadata !1963), !dbg !5425
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %d.addr, align 8, !dbg !5426
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 17, !dbg !5427
  %expiretime = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 27, !dbg !5428
  store %struct.timeval* %expiretime, %struct.timeval** %tv, align 8, !dbg !5425
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %list, metadata !5429, metadata !1963), !dbg !5430
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %d.addr, align 8, !dbg !5431
  %state1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %4, i32 0, i32 17, !dbg !5432
  %timeoutlist = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state1, i32 0, i32 29, !dbg !5433
  store %struct.curl_llist* %timeoutlist, %struct.curl_llist** %list, align 8, !dbg !5430
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %e, metadata !5434, metadata !1963), !dbg !5435
  %5 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !5436
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %5, i32 0, i32 0, !dbg !5438
  %6 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !5438
  store %struct.curl_llist_element* %6, %struct.curl_llist_element** %e, align 8, !dbg !5439
  br label %for.cond, !dbg !5440

for.cond:                                         ; preds = %if.end, %entry
  %7 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5441
  %tobool = icmp ne %struct.curl_llist_element* %7, null, !dbg !5444
  br i1 %tobool, label %for.body, label %for.end, !dbg !5444

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %n, metadata !5445, metadata !1963), !dbg !5447
  %8 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5448
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %8, i32 0, i32 2, !dbg !5449
  %9 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !5449
  store %struct.curl_llist_element* %9, %struct.curl_llist_element** %n, align 8, !dbg !5447
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !5450, metadata !1963), !dbg !5451
  %10 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5452
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %10, i32 0, i32 0, !dbg !5453
  %11 = load i8*, i8** %ptr, align 8, !dbg !5453
  %12 = bitcast i8* %11 to %struct.timeval*, !dbg !5454
  %13 = bitcast %struct.timeval* %12 to { i64, i64 }*, !dbg !5455
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !5455
  %15 = load i64, i64* %14, align 8, !dbg !5455
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !5455
  %17 = load i64, i64* %16, align 8, !dbg !5455
  %18 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !5455
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0, !dbg !5455
  %20 = load i64, i64* %19, align 8, !dbg !5455
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1, !dbg !5455
  %22 = load i64, i64* %21, align 8, !dbg !5455
  %call = call i64 @curlx_tvdiff(i64 %15, i64 %17, i64 %20, i64 %22), !dbg !5455
  store i64 %call, i64* %diff, align 8, !dbg !5451
  %23 = load i64, i64* %diff, align 8, !dbg !5456
  %cmp = icmp sle i64 %23, 0, !dbg !5458
  br i1 %cmp, label %if.then, label %if.else, !dbg !5459

if.then:                                          ; preds = %for.body
  %24 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !5460
  %25 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5461
  %call2 = call i32 @Curl_llist_remove(%struct.curl_llist* %24, %struct.curl_llist_element* %25, i8* null), !dbg !5462
  br label %if.end, !dbg !5462

if.else:                                          ; preds = %for.body
  br label %for.end, !dbg !5463

if.end:                                           ; preds = %if.then
  %26 = load %struct.curl_llist_element*, %struct.curl_llist_element** %n, align 8, !dbg !5464
  store %struct.curl_llist_element* %26, %struct.curl_llist_element** %e, align 8, !dbg !5465
  br label %for.cond, !dbg !5466

for.end:                                          ; preds = %if.else, %for.cond
  %27 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !5468
  %head3 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %27, i32 0, i32 0, !dbg !5469
  %28 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head3, align 8, !dbg !5469
  store %struct.curl_llist_element* %28, %struct.curl_llist_element** %e, align 8, !dbg !5470
  %29 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5471
  %tobool4 = icmp ne %struct.curl_llist_element* %29, null, !dbg !5471
  br i1 %tobool4, label %if.else6, label %if.then5, !dbg !5473

if.then5:                                         ; preds = %for.end
  %30 = load %struct.timeval*, %struct.timeval** %tv, align 8, !dbg !5474
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %30, i32 0, i32 0, !dbg !5476
  store i64 0, i64* %tv_sec, align 8, !dbg !5477
  %31 = load %struct.timeval*, %struct.timeval** %tv, align 8, !dbg !5478
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %31, i32 0, i32 1, !dbg !5479
  store i64 0, i64* %tv_usec, align 8, !dbg !5480
  br label %if.end12, !dbg !5481

if.else6:                                         ; preds = %for.end
  %32 = load %struct.timeval*, %struct.timeval** %tv, align 8, !dbg !5482
  %33 = bitcast %struct.timeval* %32 to i8*, !dbg !5484
  %34 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5485
  %ptr7 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %34, i32 0, i32 0, !dbg !5486
  %35 = load i8*, i8** %ptr7, align 8, !dbg !5486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %35, i64 16, i32 1, i1 false), !dbg !5484
  %36 = load %struct.curl_llist*, %struct.curl_llist** %list, align 8, !dbg !5487
  %37 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5488
  %call8 = call i32 @Curl_llist_remove(%struct.curl_llist* %36, %struct.curl_llist_element* %37, i8* null), !dbg !5489
  %38 = load %struct.timeval*, %struct.timeval** %tv, align 8, !dbg !5490
  %39 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5491
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %39, i32 0, i32 12, !dbg !5492
  %40 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !5492
  %41 = load %struct.Curl_easy*, %struct.Curl_easy** %d.addr, align 8, !dbg !5493
  %state9 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %41, i32 0, i32 17, !dbg !5494
  %timenode = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state9, i32 0, i32 28, !dbg !5495
  %42 = bitcast %struct.timeval* %38 to { i64, i64 }*, !dbg !5496
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i32 0, i32 0, !dbg !5496
  %44 = load i64, i64* %43, align 8, !dbg !5496
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i32 0, i32 1, !dbg !5496
  %46 = load i64, i64* %45, align 8, !dbg !5496
  %call10 = call %struct.Curl_tree* @Curl_splayinsert(i64 %44, i64 %46, %struct.Curl_tree* %40, %struct.Curl_tree* %timenode), !dbg !5496
  %47 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5497
  %timetree11 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %47, i32 0, i32 12, !dbg !5498
  store %struct.Curl_tree* %call10, %struct.Curl_tree** %timetree11, align 8, !dbg !5499
  br label %if.end12

if.end12:                                         ; preds = %if.else6, %if.then5
  ret i32 0, !dbg !5500
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_cleanup(%struct.Curl_multi* %multi) #0 !dbg !1831 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %nextdata = alloca %struct.Curl_easy*, align 8
  %restore_pipe = alloca i8, align 1
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5501, metadata !1963), !dbg !5502
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5503, metadata !1963), !dbg !5504
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %nextdata, metadata !5505, metadata !1963), !dbg !5506
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5507
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !5507
  br i1 %tobool, label %land.lhs.true, label %if.end32, !dbg !5507

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5509
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 0, !dbg !5509
  %2 = load i64, i64* %type, align 8, !dbg !5509
  %cmp = icmp eq i64 %2, 764702, !dbg !5509
  br i1 %cmp, label %if.then, label %if.end32, !dbg !5509

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %restore_pipe, metadata !5511, metadata !1963), !dbg !5513
  store i8 0, i8* %restore_pipe, align 1, !dbg !5513
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5514
  %type1 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %3, i32 0, i32 0, !dbg !5515
  store i64 0, i64* %type1, align 8, !dbg !5516
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5517
  call void @close_all_connections(%struct.Curl_multi* %4), !dbg !5518
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5519
  %closure_handle = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %5, i32 0, i32 17, !dbg !5521
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle, align 8, !dbg !5521
  %tobool2 = icmp ne %struct.Curl_easy* %6, null, !dbg !5519
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5522

if.then3:                                         ; preds = %if.then
  br label %do.body, !dbg !5523

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !5525

do.end:                                           ; preds = %do.body
  store i8 1, i8* %restore_pipe, align 1, !dbg !5528
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5529
  %hostcache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %7, i32 0, i32 11, !dbg !5530
  %8 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5531
  %closure_handle4 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %8, i32 0, i32 17, !dbg !5532
  %9 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle4, align 8, !dbg !5532
  %dns = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %9, i32 0, i32 8, !dbg !5533
  %hostcache5 = getelementptr inbounds %struct.Names, %struct.Names* %dns, i32 0, i32 0, !dbg !5534
  store %struct.curl_hash* %hostcache, %struct.curl_hash** %hostcache5, align 8, !dbg !5535
  %10 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5536
  %closure_handle6 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %10, i32 0, i32 17, !dbg !5537
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle6, align 8, !dbg !5537
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5538
  %closure_handle7 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %12, i32 0, i32 17, !dbg !5539
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle7, align 8, !dbg !5539
  %dns8 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %13, i32 0, i32 8, !dbg !5540
  %hostcache9 = getelementptr inbounds %struct.Names, %struct.Names* %dns8, i32 0, i32 0, !dbg !5541
  %14 = load %struct.curl_hash*, %struct.curl_hash** %hostcache9, align 8, !dbg !5541
  call void @Curl_hostcache_clean(%struct.Curl_easy* %11, %struct.curl_hash* %14), !dbg !5542
  %15 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5543
  %closure_handle10 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %15, i32 0, i32 17, !dbg !5544
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle10, align 8, !dbg !5544
  %call = call i32 @Curl_close(%struct.Curl_easy* %16), !dbg !5545
  br label %if.end, !dbg !5546

if.end:                                           ; preds = %do.end, %if.then
  %17 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5547
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %17, i32 0, i32 13, !dbg !5548
  call void @Curl_hash_destroy(%struct.curl_hash* %sockhash), !dbg !5549
  %18 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5550
  %conn_cache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %18, i32 0, i32 16, !dbg !5551
  call void @Curl_conncache_destroy(%struct.conncache* %conn_cache), !dbg !5552
  %19 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5553
  %msglist = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %19, i32 0, i32 5, !dbg !5554
  call void @Curl_llist_destroy(%struct.curl_llist* %msglist, i8* null), !dbg !5555
  %20 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5556
  %pending = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %20, i32 0, i32 6, !dbg !5557
  call void @Curl_llist_destroy(%struct.curl_llist* %pending, i8* null), !dbg !5558
  %21 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5559
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %21, i32 0, i32 1, !dbg !5560
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !5560
  store %struct.Curl_easy* %22, %struct.Curl_easy** %data, align 8, !dbg !5561
  br label %while.cond, !dbg !5562

while.cond:                                       ; preds = %if.end21, %if.end
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5563
  %tobool11 = icmp ne %struct.Curl_easy* %23, null, !dbg !5565
  br i1 %tobool11, label %while.body, label %while.end, !dbg !5565

while.body:                                       ; preds = %while.cond
  %24 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5566
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %24, i32 0, i32 0, !dbg !5568
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %next, align 8, !dbg !5568
  store %struct.Curl_easy* %25, %struct.Curl_easy** %nextdata, align 8, !dbg !5569
  %26 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5570
  %dns12 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %26, i32 0, i32 8, !dbg !5572
  %hostcachetype = getelementptr inbounds %struct.Names, %struct.Names* %dns12, i32 0, i32 1, !dbg !5573
  %27 = load i32, i32* %hostcachetype, align 8, !dbg !5573
  %cmp13 = icmp eq i32 %27, 2, !dbg !5574
  br i1 %cmp13, label %if.then14, label %if.end21, !dbg !5575

if.then14:                                        ; preds = %while.body
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5576
  %29 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5578
  %dns15 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %29, i32 0, i32 8, !dbg !5579
  %hostcache16 = getelementptr inbounds %struct.Names, %struct.Names* %dns15, i32 0, i32 0, !dbg !5580
  %30 = load %struct.curl_hash*, %struct.curl_hash** %hostcache16, align 8, !dbg !5580
  call void @Curl_hostcache_clean(%struct.Curl_easy* %28, %struct.curl_hash* %30), !dbg !5581
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5582
  %dns17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 8, !dbg !5583
  %hostcache18 = getelementptr inbounds %struct.Names, %struct.Names* %dns17, i32 0, i32 0, !dbg !5584
  store %struct.curl_hash* null, %struct.curl_hash** %hostcache18, align 8, !dbg !5585
  %32 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5586
  %dns19 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %32, i32 0, i32 8, !dbg !5587
  %hostcachetype20 = getelementptr inbounds %struct.Names, %struct.Names* %dns19, i32 0, i32 1, !dbg !5588
  store i32 0, i32* %hostcachetype20, align 8, !dbg !5589
  br label %if.end21, !dbg !5590

if.end21:                                         ; preds = %if.then14, %while.body
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5591
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %33, i32 0, i32 17, !dbg !5592
  %conn_cache22 = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !5593
  store %struct.conncache* null, %struct.conncache** %conn_cache22, align 8, !dbg !5594
  %34 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5595
  %multi23 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %34, i32 0, i32 9, !dbg !5596
  store %struct.Curl_multi* null, %struct.Curl_multi** %multi23, align 8, !dbg !5597
  %35 = load %struct.Curl_easy*, %struct.Curl_easy** %nextdata, align 8, !dbg !5598
  store %struct.Curl_easy* %35, %struct.Curl_easy** %data, align 8, !dbg !5599
  br label %while.cond, !dbg !5600

while.end:                                        ; preds = %while.cond
  %36 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5602
  %hostcache24 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %36, i32 0, i32 11, !dbg !5603
  call void @Curl_hash_destroy(%struct.curl_hash* %hostcache24), !dbg !5604
  %37 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5605
  %pipelining_site_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %37, i32 0, i32 24, !dbg !5606
  %call25 = call i32 @Curl_pipeline_set_site_blacklist(i8** null, %struct.curl_llist* %pipelining_site_bl), !dbg !5607
  %38 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5608
  %pipelining_server_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %38, i32 0, i32 25, !dbg !5609
  %call26 = call i32 @Curl_pipeline_set_server_blacklist(i8** null, %struct.curl_llist* %pipelining_server_bl), !dbg !5610
  %39 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !5611
  %40 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5611
  %41 = bitcast %struct.Curl_multi* %40 to i8*, !dbg !5611
  call void %39(i8* %41), !dbg !5611
  %42 = load i8, i8* %restore_pipe, align 1, !dbg !5612
  %tobool27 = trunc i8 %42 to i1, !dbg !5612
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !5614

if.then28:                                        ; preds = %while.end
  br label %do.body29, !dbg !5615

do.body29:                                        ; preds = %if.then28
  br label %do.end30, !dbg !5616

do.end30:                                         ; preds = %do.body29
  br label %if.end31, !dbg !5619

if.end31:                                         ; preds = %do.end30, %while.end
  store i32 0, i32* %retval, align 4, !dbg !5621
  br label %return, !dbg !5621

if.end32:                                         ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

return:                                           ; preds = %if.end32, %if.end31
  %43 = load i32, i32* %retval, align 4, !dbg !5623
  ret i32 %43, !dbg !5623
}

; Function Attrs: nounwind uwtable
define internal void @close_all_connections(%struct.Curl_multi* %multi) #0 !dbg !1921 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %conn = alloca %struct.connectdata*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5624, metadata !1963), !dbg !5625
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !5626, metadata !1963), !dbg !5627
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5628
  %conn_cache = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 16, !dbg !5629
  %call = call %struct.connectdata* @Curl_conncache_find_first_connection(%struct.conncache* %conn_cache), !dbg !5630
  store %struct.connectdata* %call, %struct.connectdata** %conn, align 8, !dbg !5631
  br label %while.cond, !dbg !5632

while.cond:                                       ; preds = %do.end4, %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5633
  %tobool = icmp ne %struct.connectdata* %1, null, !dbg !5635
  br i1 %tobool, label %while.body, label %while.end, !dbg !5635

while.body:                                       ; preds = %while.cond
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5636
  %closure_handle = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %2, i32 0, i32 17, !dbg !5638
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %closure_handle, align 8, !dbg !5638
  %4 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5639
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 0, !dbg !5640
  store %struct.Curl_easy* %3, %struct.Curl_easy** %data, align 8, !dbg !5641
  br label %do.body, !dbg !5642

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !5643

do.end:                                           ; preds = %do.body
  %5 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5646
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %5, i32 0, i32 0, !dbg !5647
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !5647
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 2, !dbg !5648
  store %struct.connectdata* null, %struct.connectdata** %easy_conn, align 8, !dbg !5649
  %7 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5650
  call void @Curl_conncontrol(%struct.connectdata* %7, i32 1), !dbg !5650
  %8 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !5651
  %call2 = call i32 @Curl_disconnect(%struct.connectdata* %8, i1 zeroext false), !dbg !5652
  br label %do.body3, !dbg !5653

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !5654

do.end4:                                          ; preds = %do.body3
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5657
  %conn_cache5 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %9, i32 0, i32 16, !dbg !5658
  %call6 = call %struct.connectdata* @Curl_conncache_find_first_connection(%struct.conncache* %conn_cache5), !dbg !5659
  store %struct.connectdata* %call6, %struct.connectdata** %conn, align 8, !dbg !5660
  br label %while.cond, !dbg !5661

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5663
}

declare void @Curl_hostcache_clean(%struct.Curl_easy*, %struct.curl_hash*) #2

declare i32 @Curl_pipeline_set_site_blacklist(i8**, %struct.curl_llist*) #2

declare i32 @Curl_pipeline_set_server_blacklist(i8**, %struct.curl_llist*) #2

; Function Attrs: nounwind uwtable
define %struct.CURLMsg* @curl_multi_info_read(%struct.Curl_multi* %multi, i32* %msgs_in_queue) #0 !dbg !1834 {
entry:
  %retval = alloca %struct.CURLMsg*, align 8
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %msgs_in_queue.addr = alloca i32*, align 8
  %msg = alloca %struct.Curl_message*, align 8
  %e = alloca %struct.curl_llist_element*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5664, metadata !1963), !dbg !5665
  store i32* %msgs_in_queue, i32** %msgs_in_queue.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %msgs_in_queue.addr, metadata !5666, metadata !1963), !dbg !5667
  call void @llvm.dbg.declare(metadata %struct.Curl_message** %msg, metadata !5668, metadata !1963), !dbg !5669
  %0 = load i32*, i32** %msgs_in_queue.addr, align 8, !dbg !5670
  store i32 0, i32* %0, align 4, !dbg !5671
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5672
  %tobool = icmp ne %struct.Curl_multi* %1, null, !dbg !5672
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5672

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5674
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %2, i32 0, i32 0, !dbg !5674
  %3 = load i64, i64* %type, align 8, !dbg !5674
  %cmp = icmp eq i64 %3, 764702, !dbg !5674
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !5676

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5677
  %msglist = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %4, i32 0, i32 5, !dbg !5679
  %call = call i64 @Curl_llist_count(%struct.curl_llist* %msglist), !dbg !5680
  %tobool2 = icmp ne i64 %call, 0, !dbg !5680
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5681

if.then:                                          ; preds = %land.lhs.true1
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %e, metadata !5682, metadata !1963), !dbg !5684
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5685
  %msglist3 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %5, i32 0, i32 5, !dbg !5686
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %msglist3, i32 0, i32 0, !dbg !5687
  %6 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !5687
  store %struct.curl_llist_element* %6, %struct.curl_llist_element** %e, align 8, !dbg !5688
  %7 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5689
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %7, i32 0, i32 0, !dbg !5690
  %8 = load i8*, i8** %ptr, align 8, !dbg !5690
  %9 = bitcast i8* %8 to %struct.Curl_message*, !dbg !5689
  store %struct.Curl_message* %9, %struct.Curl_message** %msg, align 8, !dbg !5691
  %10 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5692
  %msglist4 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %10, i32 0, i32 5, !dbg !5693
  %11 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !5694
  %call5 = call i32 @Curl_llist_remove(%struct.curl_llist* %msglist4, %struct.curl_llist_element* %11, i8* null), !dbg !5695
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5696
  %msglist6 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %12, i32 0, i32 5, !dbg !5697
  %call7 = call i64 @Curl_llist_count(%struct.curl_llist* %msglist6), !dbg !5698
  %call8 = call i32 @curlx_uztosi(i64 %call7), !dbg !5699
  %13 = load i32*, i32** %msgs_in_queue.addr, align 8, !dbg !5701
  store i32 %call8, i32* %13, align 4, !dbg !5702
  %14 = load %struct.Curl_message*, %struct.Curl_message** %msg, align 8, !dbg !5703
  %extmsg = getelementptr inbounds %struct.Curl_message, %struct.Curl_message* %14, i32 0, i32 0, !dbg !5704
  store %struct.CURLMsg* %extmsg, %struct.CURLMsg** %retval, align 8, !dbg !5705
  br label %return, !dbg !5705

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  store %struct.CURLMsg* null, %struct.CURLMsg** %retval, align 8, !dbg !5706
  br label %return, !dbg !5706

return:                                           ; preds = %if.end, %if.then
  %15 = load %struct.CURLMsg*, %struct.CURLMsg** %retval, align 8, !dbg !5707
  ret %struct.CURLMsg* %15, !dbg !5707
}

declare i64 @Curl_llist_count(%struct.curl_llist*) #2

declare i32 @curlx_uztosi(i64) #2

; Function Attrs: nounwind uwtable
define void @Curl_multi_closed(%struct.connectdata* %conn, i32 %s) #0 !dbg !1839 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %s.addr = alloca i32, align 4
  %multi = alloca %struct.Curl_multi*, align 8
  %entry2 = alloca %struct.Curl_sh_entry*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !5708, metadata !1963), !dbg !5709
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5710, metadata !1963), !dbg !5711
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi, metadata !5712, metadata !1963), !dbg !5713
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5714
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !5715
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5715
  %multi1 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 9, !dbg !5716
  %2 = load %struct.Curl_multi*, %struct.Curl_multi** %multi1, align 8, !dbg !5716
  store %struct.Curl_multi* %2, %struct.Curl_multi** %multi, align 8, !dbg !5713
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5717
  %tobool = icmp ne %struct.Curl_multi* %3, null, !dbg !5717
  br i1 %tobool, label %if.then, label %if.end12, !dbg !5719

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %entry2, metadata !5720, metadata !1963), !dbg !5722
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5723
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %4, i32 0, i32 13, !dbg !5724
  %5 = load i32, i32* %s.addr, align 4, !dbg !5725
  %call = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sockhash, i32 %5), !dbg !5726
  store %struct.Curl_sh_entry* %call, %struct.Curl_sh_entry** %entry2, align 8, !dbg !5722
  %6 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry2, align 8, !dbg !5727
  %tobool3 = icmp ne %struct.Curl_sh_entry* %6, null, !dbg !5727
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !5729

if.then4:                                         ; preds = %if.then
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5730
  %socket_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %7, i32 0, i32 7, !dbg !5733
  %8 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb, align 8, !dbg !5733
  %tobool5 = icmp ne i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)* %8, null, !dbg !5730
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5734

if.then6:                                         ; preds = %if.then4
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5735
  %socket_cb7 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %9, i32 0, i32 7, !dbg !5736
  %10 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb7, align 8, !dbg !5736
  %11 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !5737
  %data8 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %11, i32 0, i32 0, !dbg !5738
  %12 = load %struct.Curl_easy*, %struct.Curl_easy** %data8, align 8, !dbg !5738
  %13 = load i32, i32* %s.addr, align 4, !dbg !5739
  %14 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5740
  %socket_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %14, i32 0, i32 8, !dbg !5741
  %15 = load i8*, i8** %socket_userp, align 8, !dbg !5741
  %16 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry2, align 8, !dbg !5742
  %socketp = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %16, i32 0, i32 3, !dbg !5743
  %17 = load i8*, i8** %socketp, align 8, !dbg !5743
  %call9 = call i32 %10(%struct.Curl_easy* %12, i32 %13, i32 4, i8* %15, i8* %17), !dbg !5735
  br label %if.end, !dbg !5735

if.end:                                           ; preds = %if.then6, %if.then4
  %18 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !5744
  %sockhash10 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %18, i32 0, i32 13, !dbg !5745
  %19 = load i32, i32* %s.addr, align 4, !dbg !5746
  call void @sh_delentry(%struct.curl_hash* %sockhash10, i32 %19), !dbg !5747
  br label %if.end11, !dbg !5748

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !5749

if.end12:                                         ; preds = %if.end11, %entry
  ret void, !dbg !5750
}

; Function Attrs: nounwind uwtable
define internal %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sh, i32 %s) #0 !dbg !1928 {
entry:
  %retval = alloca %struct.Curl_sh_entry*, align 8
  %sh.addr = alloca %struct.curl_hash*, align 8
  %s.addr = alloca i32, align 4
  store %struct.curl_hash* %sh, %struct.curl_hash** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_hash** %sh.addr, metadata !5751, metadata !1963), !dbg !5752
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5753, metadata !1963), !dbg !5754
  %0 = load i32, i32* %s.addr, align 4, !dbg !5755
  %cmp = icmp ne i32 %0, -1, !dbg !5757
  br i1 %cmp, label %if.then, label %if.end, !dbg !5758

if.then:                                          ; preds = %entry
  %1 = load %struct.curl_hash*, %struct.curl_hash** %sh.addr, align 8, !dbg !5759
  %2 = bitcast i32* %s.addr to i8*, !dbg !5760
  %call = call i8* @Curl_hash_pick(%struct.curl_hash* %1, i8* %2, i64 4), !dbg !5761
  %3 = bitcast i8* %call to %struct.Curl_sh_entry*, !dbg !5761
  store %struct.Curl_sh_entry* %3, %struct.Curl_sh_entry** %retval, align 8, !dbg !5762
  br label %return, !dbg !5762

if.end:                                           ; preds = %entry
  store %struct.Curl_sh_entry* null, %struct.Curl_sh_entry** %retval, align 8, !dbg !5763
  br label %return, !dbg !5763

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %retval, align 8, !dbg !5764
  ret %struct.Curl_sh_entry* %4, !dbg !5764
}

; Function Attrs: nounwind uwtable
define internal void @sh_delentry(%struct.curl_hash* %sh, i32 %s) #0 !dbg !1931 {
entry:
  %sh.addr = alloca %struct.curl_hash*, align 8
  %s.addr = alloca i32, align 4
  store %struct.curl_hash* %sh, %struct.curl_hash** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_hash** %sh.addr, metadata !5765, metadata !1963), !dbg !5766
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5767, metadata !1963), !dbg !5768
  %0 = load %struct.curl_hash*, %struct.curl_hash** %sh.addr, align 8, !dbg !5769
  %1 = bitcast i32* %s.addr to i8*, !dbg !5770
  %call = call i32 @Curl_hash_delete(%struct.curl_hash* %0, i8* %1, i64 4), !dbg !5771
  ret void, !dbg !5772
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_setopt(%struct.Curl_multi* %multi, i32 %option, ...) #0 !dbg !1842 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %option.addr = alloca i32, align 4
  %res = alloca i32, align 4
  %param = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5773, metadata !1963), !dbg !5774
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !5775, metadata !1963), !dbg !5776
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5777, metadata !1963), !dbg !5778
  store i32 0, i32* %res, align 4, !dbg !5778
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %param, metadata !5779, metadata !1963), !dbg !5791
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5792
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !5792
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !5792

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5794
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 0, !dbg !5794
  %2 = load i64, i64* %type, align 8, !dbg !5794
  %cmp = icmp eq i64 %2, 764702, !dbg !5794
  br i1 %cmp, label %if.end, label %if.then, !dbg !5796

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !5797
  br label %return, !dbg !5797

if.end:                                           ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5798
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5798
  call void @llvm.va_start(i8* %arraydecay1), !dbg !5798
  %3 = load i32, i32* %option.addr, align 4, !dbg !5799
  switch i32 %3, label %sw.default [
    i32 20001, label %sw.bb
    i32 10002, label %sw.bb3
    i32 20014, label %sw.bb16
    i32 10015, label %sw.bb29
    i32 3, label %sw.bb42
    i32 20004, label %sw.bb55
    i32 10005, label %sw.bb68
    i32 6, label %sw.bb81
    i32 7, label %sw.bb94
    i32 8, label %sw.bb107
    i32 30009, label %sw.bb120
    i32 30010, label %sw.bb133
    i32 10011, label %sw.bb146
    i32 10012, label %sw.bb159
    i32 13, label %sw.bb173
  ], !dbg !5800

sw.bb:                                            ; preds = %if.end
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5801
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !5801
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !5801
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !5801
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !5801

vaarg.in_reg:                                     ; preds = %sw.bb
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !5803
  %reg_save_area = load i8*, i8** %4, align 16, !dbg !5803
  %5 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !5803
  %6 = bitcast i8* %5 to i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)**, !dbg !5803
  %7 = add i32 %gp_offset, 8, !dbg !5803
  store i32 %7, i32* %gp_offset_p, align 16, !dbg !5803
  br label %vaarg.end, !dbg !5803

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !5805
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !5805
  %8 = bitcast i8* %overflow_arg_area to i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)**, !dbg !5805
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !5805
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !5805
  br label %vaarg.end, !dbg !5805

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** [ %6, %vaarg.in_reg ], [ %8, %vaarg.in_mem ], !dbg !5807
  %9 = load i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)*, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %vaarg.addr, align 8, !dbg !5807
  %10 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5809
  %socket_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %10, i32 0, i32 7, !dbg !5810
  store i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)* %9, i32 (%struct.Curl_easy*, i32, i32, i8*, i8*)** %socket_cb, align 8, !dbg !5811
  br label %sw.epilog, !dbg !5812

sw.bb3:                                           ; preds = %if.end
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5813
  %gp_offset_p5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay4, i32 0, i32 0, !dbg !5813
  %gp_offset6 = load i32, i32* %gp_offset_p5, align 16, !dbg !5813
  %fits_in_gp7 = icmp ule i32 %gp_offset6, 40, !dbg !5813
  br i1 %fits_in_gp7, label %vaarg.in_reg8, label %vaarg.in_mem10, !dbg !5813

vaarg.in_reg8:                                    ; preds = %sw.bb3
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay4, i32 0, i32 3, !dbg !5814
  %reg_save_area9 = load i8*, i8** %11, align 16, !dbg !5814
  %12 = getelementptr i8, i8* %reg_save_area9, i32 %gp_offset6, !dbg !5814
  %13 = bitcast i8* %12 to i8**, !dbg !5814
  %14 = add i32 %gp_offset6, 8, !dbg !5814
  store i32 %14, i32* %gp_offset_p5, align 16, !dbg !5814
  br label %vaarg.end14, !dbg !5814

vaarg.in_mem10:                                   ; preds = %sw.bb3
  %overflow_arg_area_p11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay4, i32 0, i32 2, !dbg !5815
  %overflow_arg_area12 = load i8*, i8** %overflow_arg_area_p11, align 8, !dbg !5815
  %15 = bitcast i8* %overflow_arg_area12 to i8**, !dbg !5815
  %overflow_arg_area.next13 = getelementptr i8, i8* %overflow_arg_area12, i32 8, !dbg !5815
  store i8* %overflow_arg_area.next13, i8** %overflow_arg_area_p11, align 8, !dbg !5815
  br label %vaarg.end14, !dbg !5815

vaarg.end14:                                      ; preds = %vaarg.in_mem10, %vaarg.in_reg8
  %vaarg.addr15 = phi i8** [ %13, %vaarg.in_reg8 ], [ %15, %vaarg.in_mem10 ], !dbg !5816
  %16 = load i8*, i8** %vaarg.addr15, align 8, !dbg !5816
  %17 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5817
  %socket_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %17, i32 0, i32 8, !dbg !5818
  store i8* %16, i8** %socket_userp, align 8, !dbg !5819
  br label %sw.epilog, !dbg !5820

sw.bb16:                                          ; preds = %if.end
  %arraydecay17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5821
  %gp_offset_p18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay17, i32 0, i32 0, !dbg !5821
  %gp_offset19 = load i32, i32* %gp_offset_p18, align 16, !dbg !5821
  %fits_in_gp20 = icmp ule i32 %gp_offset19, 40, !dbg !5821
  br i1 %fits_in_gp20, label %vaarg.in_reg21, label %vaarg.in_mem23, !dbg !5821

vaarg.in_reg21:                                   ; preds = %sw.bb16
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay17, i32 0, i32 3, !dbg !5822
  %reg_save_area22 = load i8*, i8** %18, align 16, !dbg !5822
  %19 = getelementptr i8, i8* %reg_save_area22, i32 %gp_offset19, !dbg !5822
  %20 = bitcast i8* %19 to i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)**, !dbg !5822
  %21 = add i32 %gp_offset19, 8, !dbg !5822
  store i32 %21, i32* %gp_offset_p18, align 16, !dbg !5822
  br label %vaarg.end27, !dbg !5822

vaarg.in_mem23:                                   ; preds = %sw.bb16
  %overflow_arg_area_p24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay17, i32 0, i32 2, !dbg !5823
  %overflow_arg_area25 = load i8*, i8** %overflow_arg_area_p24, align 8, !dbg !5823
  %22 = bitcast i8* %overflow_arg_area25 to i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)**, !dbg !5823
  %overflow_arg_area.next26 = getelementptr i8, i8* %overflow_arg_area25, i32 8, !dbg !5823
  store i8* %overflow_arg_area.next26, i8** %overflow_arg_area_p24, align 8, !dbg !5823
  br label %vaarg.end27, !dbg !5823

vaarg.end27:                                      ; preds = %vaarg.in_mem23, %vaarg.in_reg21
  %vaarg.addr28 = phi i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)** [ %20, %vaarg.in_reg21 ], [ %22, %vaarg.in_mem23 ], !dbg !5824
  %23 = load i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)*, i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)** %vaarg.addr28, align 8, !dbg !5824
  %24 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5825
  %push_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %24, i32 0, i32 9, !dbg !5826
  store i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)* %23, i32 (%struct.Curl_easy*, %struct.Curl_easy*, i64, %struct.curl_pushheaders*, i8*)** %push_cb, align 8, !dbg !5827
  br label %sw.epilog, !dbg !5828

sw.bb29:                                          ; preds = %if.end
  %arraydecay30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5829
  %gp_offset_p31 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay30, i32 0, i32 0, !dbg !5829
  %gp_offset32 = load i32, i32* %gp_offset_p31, align 16, !dbg !5829
  %fits_in_gp33 = icmp ule i32 %gp_offset32, 40, !dbg !5829
  br i1 %fits_in_gp33, label %vaarg.in_reg34, label %vaarg.in_mem36, !dbg !5829

vaarg.in_reg34:                                   ; preds = %sw.bb29
  %25 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay30, i32 0, i32 3, !dbg !5830
  %reg_save_area35 = load i8*, i8** %25, align 16, !dbg !5830
  %26 = getelementptr i8, i8* %reg_save_area35, i32 %gp_offset32, !dbg !5830
  %27 = bitcast i8* %26 to i8**, !dbg !5830
  %28 = add i32 %gp_offset32, 8, !dbg !5830
  store i32 %28, i32* %gp_offset_p31, align 16, !dbg !5830
  br label %vaarg.end40, !dbg !5830

vaarg.in_mem36:                                   ; preds = %sw.bb29
  %overflow_arg_area_p37 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay30, i32 0, i32 2, !dbg !5831
  %overflow_arg_area38 = load i8*, i8** %overflow_arg_area_p37, align 8, !dbg !5831
  %29 = bitcast i8* %overflow_arg_area38 to i8**, !dbg !5831
  %overflow_arg_area.next39 = getelementptr i8, i8* %overflow_arg_area38, i32 8, !dbg !5831
  store i8* %overflow_arg_area.next39, i8** %overflow_arg_area_p37, align 8, !dbg !5831
  br label %vaarg.end40, !dbg !5831

vaarg.end40:                                      ; preds = %vaarg.in_mem36, %vaarg.in_reg34
  %vaarg.addr41 = phi i8** [ %27, %vaarg.in_reg34 ], [ %29, %vaarg.in_mem36 ], !dbg !5832
  %30 = load i8*, i8** %vaarg.addr41, align 8, !dbg !5832
  %31 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5833
  %push_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %31, i32 0, i32 10, !dbg !5834
  store i8* %30, i8** %push_userp, align 8, !dbg !5835
  br label %sw.epilog, !dbg !5836

sw.bb42:                                          ; preds = %if.end
  %arraydecay43 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5837
  %gp_offset_p44 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay43, i32 0, i32 0, !dbg !5837
  %gp_offset45 = load i32, i32* %gp_offset_p44, align 16, !dbg !5837
  %fits_in_gp46 = icmp ule i32 %gp_offset45, 40, !dbg !5837
  br i1 %fits_in_gp46, label %vaarg.in_reg47, label %vaarg.in_mem49, !dbg !5837

vaarg.in_reg47:                                   ; preds = %sw.bb42
  %32 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay43, i32 0, i32 3, !dbg !5838
  %reg_save_area48 = load i8*, i8** %32, align 16, !dbg !5838
  %33 = getelementptr i8, i8* %reg_save_area48, i32 %gp_offset45, !dbg !5838
  %34 = bitcast i8* %33 to i64*, !dbg !5838
  %35 = add i32 %gp_offset45, 8, !dbg !5838
  store i32 %35, i32* %gp_offset_p44, align 16, !dbg !5838
  br label %vaarg.end53, !dbg !5838

vaarg.in_mem49:                                   ; preds = %sw.bb42
  %overflow_arg_area_p50 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay43, i32 0, i32 2, !dbg !5839
  %overflow_arg_area51 = load i8*, i8** %overflow_arg_area_p50, align 8, !dbg !5839
  %36 = bitcast i8* %overflow_arg_area51 to i64*, !dbg !5839
  %overflow_arg_area.next52 = getelementptr i8, i8* %overflow_arg_area51, i32 8, !dbg !5839
  store i8* %overflow_arg_area.next52, i8** %overflow_arg_area_p50, align 8, !dbg !5839
  br label %vaarg.end53, !dbg !5839

vaarg.end53:                                      ; preds = %vaarg.in_mem49, %vaarg.in_reg47
  %vaarg.addr54 = phi i64* [ %34, %vaarg.in_reg47 ], [ %36, %vaarg.in_mem49 ], !dbg !5840
  %37 = load i64, i64* %vaarg.addr54, align 8, !dbg !5840
  %38 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5841
  %pipelining = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %38, i32 0, i32 14, !dbg !5842
  store i64 %37, i64* %pipelining, align 8, !dbg !5843
  br label %sw.epilog, !dbg !5844

sw.bb55:                                          ; preds = %if.end
  %arraydecay56 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5845
  %gp_offset_p57 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay56, i32 0, i32 0, !dbg !5845
  %gp_offset58 = load i32, i32* %gp_offset_p57, align 16, !dbg !5845
  %fits_in_gp59 = icmp ule i32 %gp_offset58, 40, !dbg !5845
  br i1 %fits_in_gp59, label %vaarg.in_reg60, label %vaarg.in_mem62, !dbg !5845

vaarg.in_reg60:                                   ; preds = %sw.bb55
  %39 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay56, i32 0, i32 3, !dbg !5846
  %reg_save_area61 = load i8*, i8** %39, align 16, !dbg !5846
  %40 = getelementptr i8, i8* %reg_save_area61, i32 %gp_offset58, !dbg !5846
  %41 = bitcast i8* %40 to i32 (%struct.Curl_multi*, i64, i8*)**, !dbg !5846
  %42 = add i32 %gp_offset58, 8, !dbg !5846
  store i32 %42, i32* %gp_offset_p57, align 16, !dbg !5846
  br label %vaarg.end66, !dbg !5846

vaarg.in_mem62:                                   ; preds = %sw.bb55
  %overflow_arg_area_p63 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay56, i32 0, i32 2, !dbg !5847
  %overflow_arg_area64 = load i8*, i8** %overflow_arg_area_p63, align 8, !dbg !5847
  %43 = bitcast i8* %overflow_arg_area64 to i32 (%struct.Curl_multi*, i64, i8*)**, !dbg !5847
  %overflow_arg_area.next65 = getelementptr i8, i8* %overflow_arg_area64, i32 8, !dbg !5847
  store i8* %overflow_arg_area.next65, i8** %overflow_arg_area_p63, align 8, !dbg !5847
  br label %vaarg.end66, !dbg !5847

vaarg.end66:                                      ; preds = %vaarg.in_mem62, %vaarg.in_reg60
  %vaarg.addr67 = phi i32 (%struct.Curl_multi*, i64, i8*)** [ %41, %vaarg.in_reg60 ], [ %43, %vaarg.in_mem62 ], !dbg !5848
  %44 = load i32 (%struct.Curl_multi*, i64, i8*)*, i32 (%struct.Curl_multi*, i64, i8*)** %vaarg.addr67, align 8, !dbg !5848
  %45 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5849
  %timer_cb = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %45, i32 0, i32 26, !dbg !5850
  store i32 (%struct.Curl_multi*, i64, i8*)* %44, i32 (%struct.Curl_multi*, i64, i8*)** %timer_cb, align 8, !dbg !5851
  br label %sw.epilog, !dbg !5852

sw.bb68:                                          ; preds = %if.end
  %arraydecay69 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5853
  %gp_offset_p70 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay69, i32 0, i32 0, !dbg !5853
  %gp_offset71 = load i32, i32* %gp_offset_p70, align 16, !dbg !5853
  %fits_in_gp72 = icmp ule i32 %gp_offset71, 40, !dbg !5853
  br i1 %fits_in_gp72, label %vaarg.in_reg73, label %vaarg.in_mem75, !dbg !5853

vaarg.in_reg73:                                   ; preds = %sw.bb68
  %46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay69, i32 0, i32 3, !dbg !5854
  %reg_save_area74 = load i8*, i8** %46, align 16, !dbg !5854
  %47 = getelementptr i8, i8* %reg_save_area74, i32 %gp_offset71, !dbg !5854
  %48 = bitcast i8* %47 to i8**, !dbg !5854
  %49 = add i32 %gp_offset71, 8, !dbg !5854
  store i32 %49, i32* %gp_offset_p70, align 16, !dbg !5854
  br label %vaarg.end79, !dbg !5854

vaarg.in_mem75:                                   ; preds = %sw.bb68
  %overflow_arg_area_p76 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay69, i32 0, i32 2, !dbg !5855
  %overflow_arg_area77 = load i8*, i8** %overflow_arg_area_p76, align 8, !dbg !5855
  %50 = bitcast i8* %overflow_arg_area77 to i8**, !dbg !5855
  %overflow_arg_area.next78 = getelementptr i8, i8* %overflow_arg_area77, i32 8, !dbg !5855
  store i8* %overflow_arg_area.next78, i8** %overflow_arg_area_p76, align 8, !dbg !5855
  br label %vaarg.end79, !dbg !5855

vaarg.end79:                                      ; preds = %vaarg.in_mem75, %vaarg.in_reg73
  %vaarg.addr80 = phi i8** [ %48, %vaarg.in_reg73 ], [ %50, %vaarg.in_mem75 ], !dbg !5856
  %51 = load i8*, i8** %vaarg.addr80, align 8, !dbg !5856
  %52 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5857
  %timer_userp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %52, i32 0, i32 27, !dbg !5858
  store i8* %51, i8** %timer_userp, align 8, !dbg !5859
  br label %sw.epilog, !dbg !5860

sw.bb81:                                          ; preds = %if.end
  %arraydecay82 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5861
  %gp_offset_p83 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay82, i32 0, i32 0, !dbg !5861
  %gp_offset84 = load i32, i32* %gp_offset_p83, align 16, !dbg !5861
  %fits_in_gp85 = icmp ule i32 %gp_offset84, 40, !dbg !5861
  br i1 %fits_in_gp85, label %vaarg.in_reg86, label %vaarg.in_mem88, !dbg !5861

vaarg.in_reg86:                                   ; preds = %sw.bb81
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay82, i32 0, i32 3, !dbg !5862
  %reg_save_area87 = load i8*, i8** %53, align 16, !dbg !5862
  %54 = getelementptr i8, i8* %reg_save_area87, i32 %gp_offset84, !dbg !5862
  %55 = bitcast i8* %54 to i64*, !dbg !5862
  %56 = add i32 %gp_offset84, 8, !dbg !5862
  store i32 %56, i32* %gp_offset_p83, align 16, !dbg !5862
  br label %vaarg.end92, !dbg !5862

vaarg.in_mem88:                                   ; preds = %sw.bb81
  %overflow_arg_area_p89 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay82, i32 0, i32 2, !dbg !5863
  %overflow_arg_area90 = load i8*, i8** %overflow_arg_area_p89, align 8, !dbg !5863
  %57 = bitcast i8* %overflow_arg_area90 to i64*, !dbg !5863
  %overflow_arg_area.next91 = getelementptr i8, i8* %overflow_arg_area90, i32 8, !dbg !5863
  store i8* %overflow_arg_area.next91, i8** %overflow_arg_area_p89, align 8, !dbg !5863
  br label %vaarg.end92, !dbg !5863

vaarg.end92:                                      ; preds = %vaarg.in_mem88, %vaarg.in_reg86
  %vaarg.addr93 = phi i64* [ %55, %vaarg.in_reg86 ], [ %57, %vaarg.in_mem88 ], !dbg !5864
  %58 = load i64, i64* %vaarg.addr93, align 8, !dbg !5864
  %59 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5865
  %maxconnects = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %59, i32 0, i32 18, !dbg !5866
  store i64 %58, i64* %maxconnects, align 8, !dbg !5867
  br label %sw.epilog, !dbg !5868

sw.bb94:                                          ; preds = %if.end
  %arraydecay95 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5869
  %gp_offset_p96 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay95, i32 0, i32 0, !dbg !5869
  %gp_offset97 = load i32, i32* %gp_offset_p96, align 16, !dbg !5869
  %fits_in_gp98 = icmp ule i32 %gp_offset97, 40, !dbg !5869
  br i1 %fits_in_gp98, label %vaarg.in_reg99, label %vaarg.in_mem101, !dbg !5869

vaarg.in_reg99:                                   ; preds = %sw.bb94
  %60 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay95, i32 0, i32 3, !dbg !5870
  %reg_save_area100 = load i8*, i8** %60, align 16, !dbg !5870
  %61 = getelementptr i8, i8* %reg_save_area100, i32 %gp_offset97, !dbg !5870
  %62 = bitcast i8* %61 to i64*, !dbg !5870
  %63 = add i32 %gp_offset97, 8, !dbg !5870
  store i32 %63, i32* %gp_offset_p96, align 16, !dbg !5870
  br label %vaarg.end105, !dbg !5870

vaarg.in_mem101:                                  ; preds = %sw.bb94
  %overflow_arg_area_p102 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay95, i32 0, i32 2, !dbg !5871
  %overflow_arg_area103 = load i8*, i8** %overflow_arg_area_p102, align 8, !dbg !5871
  %64 = bitcast i8* %overflow_arg_area103 to i64*, !dbg !5871
  %overflow_arg_area.next104 = getelementptr i8, i8* %overflow_arg_area103, i32 8, !dbg !5871
  store i8* %overflow_arg_area.next104, i8** %overflow_arg_area_p102, align 8, !dbg !5871
  br label %vaarg.end105, !dbg !5871

vaarg.end105:                                     ; preds = %vaarg.in_mem101, %vaarg.in_reg99
  %vaarg.addr106 = phi i64* [ %62, %vaarg.in_reg99 ], [ %64, %vaarg.in_mem101 ], !dbg !5872
  %65 = load i64, i64* %vaarg.addr106, align 8, !dbg !5872
  %66 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5873
  %max_host_connections = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %66, i32 0, i32 19, !dbg !5874
  store i64 %65, i64* %max_host_connections, align 8, !dbg !5875
  br label %sw.epilog, !dbg !5876

sw.bb107:                                         ; preds = %if.end
  %arraydecay108 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5877
  %gp_offset_p109 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay108, i32 0, i32 0, !dbg !5877
  %gp_offset110 = load i32, i32* %gp_offset_p109, align 16, !dbg !5877
  %fits_in_gp111 = icmp ule i32 %gp_offset110, 40, !dbg !5877
  br i1 %fits_in_gp111, label %vaarg.in_reg112, label %vaarg.in_mem114, !dbg !5877

vaarg.in_reg112:                                  ; preds = %sw.bb107
  %67 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay108, i32 0, i32 3, !dbg !5878
  %reg_save_area113 = load i8*, i8** %67, align 16, !dbg !5878
  %68 = getelementptr i8, i8* %reg_save_area113, i32 %gp_offset110, !dbg !5878
  %69 = bitcast i8* %68 to i64*, !dbg !5878
  %70 = add i32 %gp_offset110, 8, !dbg !5878
  store i32 %70, i32* %gp_offset_p109, align 16, !dbg !5878
  br label %vaarg.end118, !dbg !5878

vaarg.in_mem114:                                  ; preds = %sw.bb107
  %overflow_arg_area_p115 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay108, i32 0, i32 2, !dbg !5879
  %overflow_arg_area116 = load i8*, i8** %overflow_arg_area_p115, align 8, !dbg !5879
  %71 = bitcast i8* %overflow_arg_area116 to i64*, !dbg !5879
  %overflow_arg_area.next117 = getelementptr i8, i8* %overflow_arg_area116, i32 8, !dbg !5879
  store i8* %overflow_arg_area.next117, i8** %overflow_arg_area_p115, align 8, !dbg !5879
  br label %vaarg.end118, !dbg !5879

vaarg.end118:                                     ; preds = %vaarg.in_mem114, %vaarg.in_reg112
  %vaarg.addr119 = phi i64* [ %69, %vaarg.in_reg112 ], [ %71, %vaarg.in_mem114 ], !dbg !5880
  %72 = load i64, i64* %vaarg.addr119, align 8, !dbg !5880
  %73 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5881
  %max_pipeline_length = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %73, i32 0, i32 21, !dbg !5882
  store i64 %72, i64* %max_pipeline_length, align 8, !dbg !5883
  br label %sw.epilog, !dbg !5884

sw.bb120:                                         ; preds = %if.end
  %arraydecay121 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5885
  %gp_offset_p122 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay121, i32 0, i32 0, !dbg !5885
  %gp_offset123 = load i32, i32* %gp_offset_p122, align 16, !dbg !5885
  %fits_in_gp124 = icmp ule i32 %gp_offset123, 40, !dbg !5885
  br i1 %fits_in_gp124, label %vaarg.in_reg125, label %vaarg.in_mem127, !dbg !5885

vaarg.in_reg125:                                  ; preds = %sw.bb120
  %74 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay121, i32 0, i32 3, !dbg !5886
  %reg_save_area126 = load i8*, i8** %74, align 16, !dbg !5886
  %75 = getelementptr i8, i8* %reg_save_area126, i32 %gp_offset123, !dbg !5886
  %76 = bitcast i8* %75 to i64*, !dbg !5886
  %77 = add i32 %gp_offset123, 8, !dbg !5886
  store i32 %77, i32* %gp_offset_p122, align 16, !dbg !5886
  br label %vaarg.end131, !dbg !5886

vaarg.in_mem127:                                  ; preds = %sw.bb120
  %overflow_arg_area_p128 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay121, i32 0, i32 2, !dbg !5887
  %overflow_arg_area129 = load i8*, i8** %overflow_arg_area_p128, align 8, !dbg !5887
  %78 = bitcast i8* %overflow_arg_area129 to i64*, !dbg !5887
  %overflow_arg_area.next130 = getelementptr i8, i8* %overflow_arg_area129, i32 8, !dbg !5887
  store i8* %overflow_arg_area.next130, i8** %overflow_arg_area_p128, align 8, !dbg !5887
  br label %vaarg.end131, !dbg !5887

vaarg.end131:                                     ; preds = %vaarg.in_mem127, %vaarg.in_reg125
  %vaarg.addr132 = phi i64* [ %76, %vaarg.in_reg125 ], [ %78, %vaarg.in_mem127 ], !dbg !5888
  %79 = load i64, i64* %vaarg.addr132, align 8, !dbg !5888
  %80 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5889
  %content_length_penalty_size = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %80, i32 0, i32 22, !dbg !5890
  store i64 %79, i64* %content_length_penalty_size, align 8, !dbg !5891
  br label %sw.epilog, !dbg !5892

sw.bb133:                                         ; preds = %if.end
  %arraydecay134 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5893
  %gp_offset_p135 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay134, i32 0, i32 0, !dbg !5893
  %gp_offset136 = load i32, i32* %gp_offset_p135, align 16, !dbg !5893
  %fits_in_gp137 = icmp ule i32 %gp_offset136, 40, !dbg !5893
  br i1 %fits_in_gp137, label %vaarg.in_reg138, label %vaarg.in_mem140, !dbg !5893

vaarg.in_reg138:                                  ; preds = %sw.bb133
  %81 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay134, i32 0, i32 3, !dbg !5894
  %reg_save_area139 = load i8*, i8** %81, align 16, !dbg !5894
  %82 = getelementptr i8, i8* %reg_save_area139, i32 %gp_offset136, !dbg !5894
  %83 = bitcast i8* %82 to i64*, !dbg !5894
  %84 = add i32 %gp_offset136, 8, !dbg !5894
  store i32 %84, i32* %gp_offset_p135, align 16, !dbg !5894
  br label %vaarg.end144, !dbg !5894

vaarg.in_mem140:                                  ; preds = %sw.bb133
  %overflow_arg_area_p141 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay134, i32 0, i32 2, !dbg !5895
  %overflow_arg_area142 = load i8*, i8** %overflow_arg_area_p141, align 8, !dbg !5895
  %85 = bitcast i8* %overflow_arg_area142 to i64*, !dbg !5895
  %overflow_arg_area.next143 = getelementptr i8, i8* %overflow_arg_area142, i32 8, !dbg !5895
  store i8* %overflow_arg_area.next143, i8** %overflow_arg_area_p141, align 8, !dbg !5895
  br label %vaarg.end144, !dbg !5895

vaarg.end144:                                     ; preds = %vaarg.in_mem140, %vaarg.in_reg138
  %vaarg.addr145 = phi i64* [ %83, %vaarg.in_reg138 ], [ %85, %vaarg.in_mem140 ], !dbg !5896
  %86 = load i64, i64* %vaarg.addr145, align 8, !dbg !5896
  %87 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5897
  %chunk_length_penalty_size = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %87, i32 0, i32 23, !dbg !5898
  store i64 %86, i64* %chunk_length_penalty_size, align 8, !dbg !5899
  br label %sw.epilog, !dbg !5900

sw.bb146:                                         ; preds = %if.end
  %arraydecay147 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5901
  %gp_offset_p148 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay147, i32 0, i32 0, !dbg !5901
  %gp_offset149 = load i32, i32* %gp_offset_p148, align 16, !dbg !5901
  %fits_in_gp150 = icmp ule i32 %gp_offset149, 40, !dbg !5901
  br i1 %fits_in_gp150, label %vaarg.in_reg151, label %vaarg.in_mem153, !dbg !5901

vaarg.in_reg151:                                  ; preds = %sw.bb146
  %88 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay147, i32 0, i32 3, !dbg !5902
  %reg_save_area152 = load i8*, i8** %88, align 16, !dbg !5902
  %89 = getelementptr i8, i8* %reg_save_area152, i32 %gp_offset149, !dbg !5902
  %90 = bitcast i8* %89 to i8***, !dbg !5902
  %91 = add i32 %gp_offset149, 8, !dbg !5902
  store i32 %91, i32* %gp_offset_p148, align 16, !dbg !5902
  br label %vaarg.end157, !dbg !5902

vaarg.in_mem153:                                  ; preds = %sw.bb146
  %overflow_arg_area_p154 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay147, i32 0, i32 2, !dbg !5903
  %overflow_arg_area155 = load i8*, i8** %overflow_arg_area_p154, align 8, !dbg !5903
  %92 = bitcast i8* %overflow_arg_area155 to i8***, !dbg !5903
  %overflow_arg_area.next156 = getelementptr i8, i8* %overflow_arg_area155, i32 8, !dbg !5903
  store i8* %overflow_arg_area.next156, i8** %overflow_arg_area_p154, align 8, !dbg !5903
  br label %vaarg.end157, !dbg !5903

vaarg.end157:                                     ; preds = %vaarg.in_mem153, %vaarg.in_reg151
  %vaarg.addr158 = phi i8*** [ %90, %vaarg.in_reg151 ], [ %92, %vaarg.in_mem153 ], !dbg !5904
  %93 = load i8**, i8*** %vaarg.addr158, align 8, !dbg !5904
  %94 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5905
  %pipelining_site_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %94, i32 0, i32 24, !dbg !5906
  %call = call i32 @Curl_pipeline_set_site_blacklist(i8** %93, %struct.curl_llist* %pipelining_site_bl), !dbg !5907
  store i32 %call, i32* %res, align 4, !dbg !5908
  br label %sw.epilog, !dbg !5909

sw.bb159:                                         ; preds = %if.end
  %arraydecay160 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5910
  %gp_offset_p161 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay160, i32 0, i32 0, !dbg !5910
  %gp_offset162 = load i32, i32* %gp_offset_p161, align 16, !dbg !5910
  %fits_in_gp163 = icmp ule i32 %gp_offset162, 40, !dbg !5910
  br i1 %fits_in_gp163, label %vaarg.in_reg164, label %vaarg.in_mem166, !dbg !5910

vaarg.in_reg164:                                  ; preds = %sw.bb159
  %95 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay160, i32 0, i32 3, !dbg !5911
  %reg_save_area165 = load i8*, i8** %95, align 16, !dbg !5911
  %96 = getelementptr i8, i8* %reg_save_area165, i32 %gp_offset162, !dbg !5911
  %97 = bitcast i8* %96 to i8***, !dbg !5911
  %98 = add i32 %gp_offset162, 8, !dbg !5911
  store i32 %98, i32* %gp_offset_p161, align 16, !dbg !5911
  br label %vaarg.end170, !dbg !5911

vaarg.in_mem166:                                  ; preds = %sw.bb159
  %overflow_arg_area_p167 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay160, i32 0, i32 2, !dbg !5912
  %overflow_arg_area168 = load i8*, i8** %overflow_arg_area_p167, align 8, !dbg !5912
  %99 = bitcast i8* %overflow_arg_area168 to i8***, !dbg !5912
  %overflow_arg_area.next169 = getelementptr i8, i8* %overflow_arg_area168, i32 8, !dbg !5912
  store i8* %overflow_arg_area.next169, i8** %overflow_arg_area_p167, align 8, !dbg !5912
  br label %vaarg.end170, !dbg !5912

vaarg.end170:                                     ; preds = %vaarg.in_mem166, %vaarg.in_reg164
  %vaarg.addr171 = phi i8*** [ %97, %vaarg.in_reg164 ], [ %99, %vaarg.in_mem166 ], !dbg !5913
  %100 = load i8**, i8*** %vaarg.addr171, align 8, !dbg !5913
  %101 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5914
  %pipelining_server_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %101, i32 0, i32 25, !dbg !5915
  %call172 = call i32 @Curl_pipeline_set_server_blacklist(i8** %100, %struct.curl_llist* %pipelining_server_bl), !dbg !5916
  store i32 %call172, i32* %res, align 4, !dbg !5917
  br label %sw.epilog, !dbg !5918

sw.bb173:                                         ; preds = %if.end
  %arraydecay174 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5919
  %gp_offset_p175 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay174, i32 0, i32 0, !dbg !5919
  %gp_offset176 = load i32, i32* %gp_offset_p175, align 16, !dbg !5919
  %fits_in_gp177 = icmp ule i32 %gp_offset176, 40, !dbg !5919
  br i1 %fits_in_gp177, label %vaarg.in_reg178, label %vaarg.in_mem180, !dbg !5919

vaarg.in_reg178:                                  ; preds = %sw.bb173
  %102 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay174, i32 0, i32 3, !dbg !5920
  %reg_save_area179 = load i8*, i8** %102, align 16, !dbg !5920
  %103 = getelementptr i8, i8* %reg_save_area179, i32 %gp_offset176, !dbg !5920
  %104 = bitcast i8* %103 to i64*, !dbg !5920
  %105 = add i32 %gp_offset176, 8, !dbg !5920
  store i32 %105, i32* %gp_offset_p175, align 16, !dbg !5920
  br label %vaarg.end184, !dbg !5920

vaarg.in_mem180:                                  ; preds = %sw.bb173
  %overflow_arg_area_p181 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay174, i32 0, i32 2, !dbg !5921
  %overflow_arg_area182 = load i8*, i8** %overflow_arg_area_p181, align 8, !dbg !5921
  %106 = bitcast i8* %overflow_arg_area182 to i64*, !dbg !5921
  %overflow_arg_area.next183 = getelementptr i8, i8* %overflow_arg_area182, i32 8, !dbg !5921
  store i8* %overflow_arg_area.next183, i8** %overflow_arg_area_p181, align 8, !dbg !5921
  br label %vaarg.end184, !dbg !5921

vaarg.end184:                                     ; preds = %vaarg.in_mem180, %vaarg.in_reg178
  %vaarg.addr185 = phi i64* [ %104, %vaarg.in_reg178 ], [ %106, %vaarg.in_mem180 ], !dbg !5922
  %107 = load i64, i64* %vaarg.addr185, align 8, !dbg !5922
  %108 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5923
  %max_total_connections = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %108, i32 0, i32 20, !dbg !5924
  store i64 %107, i64* %max_total_connections, align 8, !dbg !5925
  br label %sw.epilog, !dbg !5926

sw.default:                                       ; preds = %if.end
  store i32 6, i32* %res, align 4, !dbg !5927
  br label %sw.epilog, !dbg !5928

sw.epilog:                                        ; preds = %sw.default, %vaarg.end184, %vaarg.end170, %vaarg.end157, %vaarg.end144, %vaarg.end131, %vaarg.end118, %vaarg.end105, %vaarg.end92, %vaarg.end79, %vaarg.end66, %vaarg.end53, %vaarg.end40, %vaarg.end27, %vaarg.end14, %vaarg.end
  %arraydecay186 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %param, i32 0, i32 0, !dbg !5929
  %arraydecay186187 = bitcast %struct.__va_list_tag* %arraydecay186 to i8*, !dbg !5929
  call void @llvm.va_end(i8* %arraydecay186187), !dbg !5929
  %109 = load i32, i32* %res, align 4, !dbg !5930
  store i32 %109, i32* %retval, align 4, !dbg !5931
  br label %return, !dbg !5931

return:                                           ; preds = %sw.epilog, %if.then
  %110 = load i32, i32* %retval, align 4, !dbg !5932
  ret i32 %110, !dbg !5932
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: nounwind uwtable
define i32 @curl_multi_socket(%struct.Curl_multi* %multi, i32 %s, i32* %running_handles) #0 !dbg !1846 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %s.addr = alloca i32, align 4
  %running_handles.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5933, metadata !1963), !dbg !5934
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5935, metadata !1963), !dbg !5936
  store i32* %running_handles, i32** %running_handles.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %running_handles.addr, metadata !5937, metadata !1963), !dbg !5938
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5939, metadata !1963), !dbg !5940
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5941
  %1 = load i32, i32* %s.addr, align 4, !dbg !5942
  %2 = load i32*, i32** %running_handles.addr, align 8, !dbg !5943
  %call = call i32 @multi_socket(%struct.Curl_multi* %0, i1 zeroext false, i32 %1, i32 0, i32* %2), !dbg !5944
  store i32 %call, i32* %result, align 4, !dbg !5940
  %3 = load i32, i32* %result, align 4, !dbg !5945
  %cmp = icmp sge i32 0, %3, !dbg !5947
  br i1 %cmp, label %if.then, label %if.end, !dbg !5948

if.then:                                          ; preds = %entry
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5949
  %call1 = call i32 @update_timer(%struct.Curl_multi* %4), !dbg !5950
  br label %if.end, !dbg !5950

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %result, align 4, !dbg !5951
  ret i32 %5, !dbg !5952
}

; Function Attrs: nounwind uwtable
define internal i32 @multi_socket(%struct.Curl_multi* %multi, i1 zeroext %checkall, i32 %s, i32 %ev_bitmask, i32* %running_handles) #0 !dbg !1937 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %checkall.addr = alloca i8, align 1
  %s.addr = alloca i32, align 4
  %ev_bitmask.addr = alloca i32, align 4
  %running_handles.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  %data = alloca %struct.Curl_easy*, align 8
  %t = alloca %struct.Curl_tree*, align 8
  %now = alloca %struct.timeval, align 8
  %entry7 = alloca %struct.Curl_sh_entry*, align 8
  %coerce = alloca %struct.timeval, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !5953, metadata !1963), !dbg !5954
  %frombool = zext i1 %checkall to i8
  store i8 %frombool, i8* %checkall.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %checkall.addr, metadata !5955, metadata !1963), !dbg !5956
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5957, metadata !1963), !dbg !5958
  store i32 %ev_bitmask, i32* %ev_bitmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ev_bitmask.addr, metadata !5959, metadata !1963), !dbg !5960
  store i32* %running_handles, i32** %running_handles.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %running_handles.addr, metadata !5961, metadata !1963), !dbg !5962
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5963, metadata !1963), !dbg !5964
  store i32 0, i32* %result, align 4, !dbg !5964
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !5965, metadata !1963), !dbg !5966
  store %struct.Curl_easy* null, %struct.Curl_easy** %data, align 8, !dbg !5966
  call void @llvm.dbg.declare(metadata %struct.Curl_tree** %t, metadata !5967, metadata !1963), !dbg !5968
  call void @llvm.dbg.declare(metadata %struct.timeval* %now, metadata !5969, metadata !1963), !dbg !5970
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !5971
  %0 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !5971
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5971
  %2 = extractvalue { i64, i64 } %call, 0, !dbg !5971
  store i64 %2, i64* %1, align 8, !dbg !5971
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5971
  %4 = extractvalue { i64, i64 } %call, 1, !dbg !5971
  store i64 %4, i64* %3, align 8, !dbg !5971
  %5 = load i8, i8* %checkall.addr, align 1, !dbg !5972
  %tobool = trunc i8 %5 to i1, !dbg !5972
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5974

if.then:                                          ; preds = %entry
  %6 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5975
  %7 = load i32*, i32** %running_handles.addr, align 8, !dbg !5977
  %call1 = call i32 @curl_multi_perform(%struct.Curl_multi* %6, i32* %7), !dbg !5978
  store i32 %call1, i32* %result, align 4, !dbg !5979
  %8 = load i32, i32* %result, align 4, !dbg !5980
  %cmp = icmp ne i32 %8, 1, !dbg !5982
  br i1 %cmp, label %if.then2, label %if.end, !dbg !5983

if.then2:                                         ; preds = %if.then
  %9 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5984
  %easyp = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %9, i32 0, i32 1, !dbg !5986
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %easyp, align 8, !dbg !5986
  store %struct.Curl_easy* %10, %struct.Curl_easy** %data, align 8, !dbg !5987
  br label %while.cond, !dbg !5988

while.cond:                                       ; preds = %while.body, %if.then2
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5989
  %tobool3 = icmp ne %struct.Curl_easy* %11, null, !dbg !5991
  br i1 %tobool3, label %while.body, label %while.end, !dbg !5991

while.body:                                       ; preds = %while.cond
  %12 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !5992
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5994
  call void @singlesocket(%struct.Curl_multi* %12, %struct.Curl_easy* %13), !dbg !5995
  %14 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !5996
  %next = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %14, i32 0, i32 0, !dbg !5997
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %next, align 8, !dbg !5997
  store %struct.Curl_easy* %15, %struct.Curl_easy** %data, align 8, !dbg !5998
  br label %while.cond, !dbg !5999

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !6001

if.end:                                           ; preds = %while.end, %if.then
  %16 = load i32, i32* %result, align 4, !dbg !6002
  store i32 %16, i32* %retval, align 4, !dbg !6003
  br label %return, !dbg !6003

if.end4:                                          ; preds = %entry
  %17 = load i32, i32* %s.addr, align 4, !dbg !6004
  %cmp5 = icmp ne i32 %17, -1, !dbg !6006
  br i1 %cmp5, label %if.then6, label %if.else67, !dbg !6007

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %entry7, metadata !6008, metadata !1963), !dbg !6010
  %18 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6011
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %18, i32 0, i32 13, !dbg !6012
  %19 = load i32, i32* %s.addr, align 4, !dbg !6013
  %call8 = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sockhash, i32 %19), !dbg !6014
  store %struct.Curl_sh_entry* %call8, %struct.Curl_sh_entry** %entry7, align 8, !dbg !6010
  %20 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry7, align 8, !dbg !6015
  %tobool9 = icmp ne %struct.Curl_sh_entry* %20, null, !dbg !6015
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !6017

if.then10:                                        ; preds = %if.then6
  br label %if.end66, !dbg !6018

if.else:                                          ; preds = %if.then6
  %21 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %entry7, align 8, !dbg !6020
  %easy = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %21, i32 0, i32 0, !dbg !6022
  %22 = load %struct.Curl_easy*, %struct.Curl_easy** %easy, align 8, !dbg !6022
  store %struct.Curl_easy* %22, %struct.Curl_easy** %data, align 8, !dbg !6023
  %23 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6024
  %magic = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %23, i32 0, i32 21, !dbg !6026
  %24 = load i32, i32* %magic, align 8, !dbg !6026
  %cmp11 = icmp ne i32 %24, -1059136595, !dbg !6027
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6028

if.then12:                                        ; preds = %if.else
  store i32 4, i32* %retval, align 4, !dbg !6029
  br label %return, !dbg !6029

if.end13:                                         ; preds = %if.else
  %25 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6030
  %easy_conn = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %25, i32 0, i32 2, !dbg !6032
  %26 = load %struct.connectdata*, %struct.connectdata** %easy_conn, align 8, !dbg !6032
  %tobool14 = icmp ne %struct.connectdata* %26, null, !dbg !6030
  br i1 %tobool14, label %if.then15, label %if.end37, !dbg !6033

if.then15:                                        ; preds = %if.end13
  %27 = load i32, i32* %ev_bitmask.addr, align 4, !dbg !6034
  %and = and i32 %27, 2, !dbg !6037
  %tobool16 = icmp ne i32 %and, 0, !dbg !6037
  br i1 %tobool16, label %land.lhs.true, label %if.else23, !dbg !6038

land.lhs.true:                                    ; preds = %if.then15
  %28 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6039
  %easy_conn17 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %28, i32 0, i32 2, !dbg !6040
  %29 = load %struct.connectdata*, %struct.connectdata** %easy_conn17, align 8, !dbg !6040
  %send_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %29, i32 0, i32 55, !dbg !6041
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe, i32 0, i32 0, !dbg !6042
  %30 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !6042
  %tobool18 = icmp ne %struct.curl_llist_element* %30, null, !dbg !6039
  br i1 %tobool18, label %if.then19, label %if.else23, !dbg !6043

if.then19:                                        ; preds = %land.lhs.true
  %31 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6045
  %easy_conn20 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %31, i32 0, i32 2, !dbg !6046
  %32 = load %struct.connectdata*, %struct.connectdata** %easy_conn20, align 8, !dbg !6046
  %send_pipe21 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %32, i32 0, i32 55, !dbg !6047
  %head22 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %send_pipe21, i32 0, i32 0, !dbg !6048
  %33 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head22, align 8, !dbg !6048
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %33, i32 0, i32 0, !dbg !6049
  %34 = load i8*, i8** %ptr, align 8, !dbg !6049
  %35 = bitcast i8* %34 to %struct.Curl_easy*, !dbg !6045
  store %struct.Curl_easy* %35, %struct.Curl_easy** %data, align 8, !dbg !6050
  br label %if.end36, !dbg !6051

if.else23:                                        ; preds = %land.lhs.true, %if.then15
  %36 = load i32, i32* %ev_bitmask.addr, align 4, !dbg !6052
  %and24 = and i32 %36, 1, !dbg !6054
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6054
  br i1 %tobool25, label %land.lhs.true26, label %if.end35, !dbg !6055

land.lhs.true26:                                  ; preds = %if.else23
  %37 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6056
  %easy_conn27 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %37, i32 0, i32 2, !dbg !6057
  %38 = load %struct.connectdata*, %struct.connectdata** %easy_conn27, align 8, !dbg !6057
  %recv_pipe = getelementptr inbounds %struct.connectdata, %struct.connectdata* %38, i32 0, i32 56, !dbg !6058
  %head28 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe, i32 0, i32 0, !dbg !6059
  %39 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head28, align 8, !dbg !6059
  %tobool29 = icmp ne %struct.curl_llist_element* %39, null, !dbg !6056
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !6060

if.then30:                                        ; preds = %land.lhs.true26
  %40 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6062
  %easy_conn31 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %40, i32 0, i32 2, !dbg !6063
  %41 = load %struct.connectdata*, %struct.connectdata** %easy_conn31, align 8, !dbg !6063
  %recv_pipe32 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %41, i32 0, i32 56, !dbg !6064
  %head33 = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %recv_pipe32, i32 0, i32 0, !dbg !6065
  %42 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head33, align 8, !dbg !6065
  %ptr34 = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %42, i32 0, i32 0, !dbg !6066
  %43 = load i8*, i8** %ptr34, align 8, !dbg !6066
  %44 = bitcast i8* %43 to %struct.Curl_easy*, !dbg !6062
  store %struct.Curl_easy* %44, %struct.Curl_easy** %data, align 8, !dbg !6067
  br label %if.end35, !dbg !6068

if.end35:                                         ; preds = %if.then30, %land.lhs.true26, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then19
  br label %if.end37, !dbg !6069

if.end37:                                         ; preds = %if.end36, %if.end13
  %45 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6070
  %easy_conn38 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %45, i32 0, i32 2, !dbg !6072
  %46 = load %struct.connectdata*, %struct.connectdata** %easy_conn38, align 8, !dbg !6072
  %tobool39 = icmp ne %struct.connectdata* %46, null, !dbg !6070
  br i1 %tobool39, label %land.lhs.true40, label %if.end46, !dbg !6073

land.lhs.true40:                                  ; preds = %if.end37
  %47 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6074
  %easy_conn41 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %47, i32 0, i32 2, !dbg !6075
  %48 = load %struct.connectdata*, %struct.connectdata** %easy_conn41, align 8, !dbg !6075
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %48, i32 0, i32 47, !dbg !6076
  %49 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6076
  %flags = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %49, i32 0, i32 16, !dbg !6077
  %50 = load i32, i32* %flags, align 4, !dbg !6077
  %and42 = and i32 %50, 8, !dbg !6078
  %tobool43 = icmp ne i32 %and42, 0, !dbg !6078
  br i1 %tobool43, label %if.end46, label %if.then44, !dbg !6079

if.then44:                                        ; preds = %land.lhs.true40
  %51 = load i32, i32* %ev_bitmask.addr, align 4, !dbg !6081
  %52 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6082
  %easy_conn45 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %52, i32 0, i32 2, !dbg !6083
  %53 = load %struct.connectdata*, %struct.connectdata** %easy_conn45, align 8, !dbg !6083
  %cselect_bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %53, i32 0, i32 67, !dbg !6084
  store i32 %51, i32* %cselect_bits, align 8, !dbg !6085
  br label %if.end46, !dbg !6082

if.end46:                                         ; preds = %if.then44, %land.lhs.true40, %if.end37
  br label %do.body, !dbg !6086

do.body:                                          ; preds = %if.end46
  br label %do.end, !dbg !6087

do.end:                                           ; preds = %do.body
  %54 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6090
  %55 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6091
  %56 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !6092
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 0, !dbg !6092
  %58 = load i64, i64* %57, align 8, !dbg !6092
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 1, !dbg !6092
  %60 = load i64, i64* %59, align 8, !dbg !6092
  %call47 = call i32 @multi_runsingle(%struct.Curl_multi* %54, i64 %58, i64 %60, %struct.Curl_easy* %55), !dbg !6092
  store i32 %call47, i32* %result, align 4, !dbg !6093
  br label %do.body48, !dbg !6094

do.body48:                                        ; preds = %do.end
  br label %do.end49, !dbg !6095

do.end49:                                         ; preds = %do.body48
  %61 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6098
  %easy_conn50 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %61, i32 0, i32 2, !dbg !6100
  %62 = load %struct.connectdata*, %struct.connectdata** %easy_conn50, align 8, !dbg !6100
  %tobool51 = icmp ne %struct.connectdata* %62, null, !dbg !6098
  br i1 %tobool51, label %land.lhs.true52, label %if.end61, !dbg !6101

land.lhs.true52:                                  ; preds = %do.end49
  %63 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6102
  %easy_conn53 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %63, i32 0, i32 2, !dbg !6103
  %64 = load %struct.connectdata*, %struct.connectdata** %easy_conn53, align 8, !dbg !6103
  %handler54 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %64, i32 0, i32 47, !dbg !6104
  %65 = load %struct.Curl_handler*, %struct.Curl_handler** %handler54, align 8, !dbg !6104
  %flags55 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %65, i32 0, i32 16, !dbg !6105
  %66 = load i32, i32* %flags55, align 4, !dbg !6105
  %and56 = and i32 %66, 8, !dbg !6106
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6106
  br i1 %tobool57, label %if.end61, label %if.then58, !dbg !6107

if.then58:                                        ; preds = %land.lhs.true52
  %67 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6108
  %easy_conn59 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %67, i32 0, i32 2, !dbg !6109
  %68 = load %struct.connectdata*, %struct.connectdata** %easy_conn59, align 8, !dbg !6109
  %cselect_bits60 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %68, i32 0, i32 67, !dbg !6110
  store i32 0, i32* %cselect_bits60, align 8, !dbg !6111
  br label %if.end61, !dbg !6108

if.end61:                                         ; preds = %if.then58, %land.lhs.true52, %do.end49
  %69 = load i32, i32* %result, align 4, !dbg !6112
  %cmp62 = icmp sge i32 0, %69, !dbg !6114
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !6115

if.then63:                                        ; preds = %if.end61
  %70 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6116
  %71 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6117
  call void @singlesocket(%struct.Curl_multi* %70, %struct.Curl_easy* %71), !dbg !6118
  br label %if.end64, !dbg !6118

if.end64:                                         ; preds = %if.then63, %if.end61
  store %struct.Curl_easy* null, %struct.Curl_easy** %data, align 8, !dbg !6119
  %call65 = call { i64, i64 } @curlx_tvnow(), !dbg !6120
  %72 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !6120
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %72, i32 0, i32 0, !dbg !6120
  %74 = extractvalue { i64, i64 } %call65, 0, !dbg !6120
  store i64 %74, i64* %73, align 8, !dbg !6120
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %72, i32 0, i32 1, !dbg !6120
  %76 = extractvalue { i64, i64 } %call65, 1, !dbg !6120
  store i64 %76, i64* %75, align 8, !dbg !6120
  %77 = bitcast %struct.timeval* %now to i8*, !dbg !6120
  %78 = bitcast %struct.timeval* %coerce to i8*, !dbg !6120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false), !dbg !6121
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.then10
  br label %if.end68, !dbg !6122

if.else67:                                        ; preds = %if.end4
  %79 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6123
  %timer_lastcall = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %79, i32 0, i32 28, !dbg !6125
  %80 = bitcast %struct.timeval* %timer_lastcall to i8*, !dbg !6126
  call void @llvm.memset.p0i8.i64(i8* %80, i8 0, i64 16, i32 8, i1 false), !dbg !6126
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.end66
  br label %do.body69, !dbg !6127

do.body69:                                        ; preds = %do.cond, %if.end68
  %81 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6128
  %tobool70 = icmp ne %struct.Curl_easy* %81, null, !dbg !6128
  br i1 %tobool70, label %if.then71, label %if.end80, !dbg !6131

if.then71:                                        ; preds = %do.body69
  br label %do.body72, !dbg !6132

do.body72:                                        ; preds = %if.then71
  br label %do.end73, !dbg !6134

do.end73:                                         ; preds = %do.body72
  %82 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6137
  %83 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6138
  %84 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !6139
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %84, i32 0, i32 0, !dbg !6139
  %86 = load i64, i64* %85, align 8, !dbg !6139
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %84, i32 0, i32 1, !dbg !6139
  %88 = load i64, i64* %87, align 8, !dbg !6139
  %call74 = call i32 @multi_runsingle(%struct.Curl_multi* %82, i64 %86, i64 %88, %struct.Curl_easy* %83), !dbg !6139
  store i32 %call74, i32* %result, align 4, !dbg !6140
  br label %do.body75, !dbg !6141

do.body75:                                        ; preds = %do.end73
  br label %do.end76, !dbg !6142

do.end76:                                         ; preds = %do.body75
  %89 = load i32, i32* %result, align 4, !dbg !6145
  %cmp77 = icmp sge i32 0, %89, !dbg !6147
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !6148

if.then78:                                        ; preds = %do.end76
  %90 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6149
  %91 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6150
  call void @singlesocket(%struct.Curl_multi* %90, %struct.Curl_easy* %91), !dbg !6151
  br label %if.end79, !dbg !6151

if.end79:                                         ; preds = %if.then78, %do.end76
  br label %if.end80, !dbg !6152

if.end80:                                         ; preds = %if.end79, %do.body69
  %92 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6153
  %timetree = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %92, i32 0, i32 12, !dbg !6154
  %93 = load %struct.Curl_tree*, %struct.Curl_tree** %timetree, align 8, !dbg !6154
  %94 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !6155
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !6155
  %96 = load i64, i64* %95, align 8, !dbg !6155
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !6155
  %98 = load i64, i64* %97, align 8, !dbg !6155
  %call81 = call %struct.Curl_tree* @Curl_splaygetbest(i64 %96, i64 %98, %struct.Curl_tree* %93, %struct.Curl_tree** %t), !dbg !6155
  %99 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6156
  %timetree82 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %99, i32 0, i32 12, !dbg !6157
  store %struct.Curl_tree* %call81, %struct.Curl_tree** %timetree82, align 8, !dbg !6158
  %100 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !6159
  %tobool83 = icmp ne %struct.Curl_tree* %100, null, !dbg !6159
  br i1 %tobool83, label %if.then84, label %if.end87, !dbg !6161

if.then84:                                        ; preds = %if.end80
  %101 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !6162
  %payload = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %101, i32 0, i32 5, !dbg !6164
  %102 = load i8*, i8** %payload, align 8, !dbg !6164
  %103 = bitcast i8* %102 to %struct.Curl_easy*, !dbg !6162
  store %struct.Curl_easy* %103, %struct.Curl_easy** %data, align 8, !dbg !6165
  %104 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6166
  %105 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !6167
  %payload85 = getelementptr inbounds %struct.Curl_tree, %struct.Curl_tree* %105, i32 0, i32 5, !dbg !6168
  %106 = load i8*, i8** %payload85, align 8, !dbg !6168
  %107 = bitcast i8* %106 to %struct.Curl_easy*, !dbg !6167
  %108 = bitcast %struct.timeval* %now to { i64, i64 }*, !dbg !6169
  %109 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %108, i32 0, i32 0, !dbg !6169
  %110 = load i64, i64* %109, align 8, !dbg !6169
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %108, i32 0, i32 1, !dbg !6169
  %112 = load i64, i64* %111, align 8, !dbg !6169
  %call86 = call i32 @add_next_timeout(i64 %110, i64 %112, %struct.Curl_multi* %104, %struct.Curl_easy* %107), !dbg !6169
  br label %if.end87, !dbg !6170

if.end87:                                         ; preds = %if.then84, %if.end80
  br label %do.cond, !dbg !6171

do.cond:                                          ; preds = %if.end87
  %113 = load %struct.Curl_tree*, %struct.Curl_tree** %t, align 8, !dbg !6172
  %tobool88 = icmp ne %struct.Curl_tree* %113, null, !dbg !6174
  br i1 %tobool88, label %do.body69, label %do.end89, !dbg !6174

do.end89:                                         ; preds = %do.cond
  %114 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6175
  %num_alive = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %114, i32 0, i32 4, !dbg !6176
  %115 = load i32, i32* %num_alive, align 4, !dbg !6176
  %116 = load i32*, i32** %running_handles.addr, align 8, !dbg !6177
  store i32 %115, i32* %116, align 4, !dbg !6178
  %117 = load i32, i32* %result, align 4, !dbg !6179
  store i32 %117, i32* %retval, align 4, !dbg !6180
  br label %return, !dbg !6180

return:                                           ; preds = %do.end89, %if.then12, %if.end
  %118 = load i32, i32* %retval, align 4, !dbg !6181
  ret i32 %118, !dbg !6181
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_socket_action(%struct.Curl_multi* %multi, i32 %s, i32 %ev_bitmask, i32* %running_handles) #0 !dbg !1849 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %s.addr = alloca i32, align 4
  %ev_bitmask.addr = alloca i32, align 4
  %running_handles.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6182, metadata !1963), !dbg !6183
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !6184, metadata !1963), !dbg !6185
  store i32 %ev_bitmask, i32* %ev_bitmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ev_bitmask.addr, metadata !6186, metadata !1963), !dbg !6187
  store i32* %running_handles, i32** %running_handles.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %running_handles.addr, metadata !6188, metadata !1963), !dbg !6189
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6190, metadata !1963), !dbg !6191
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6192
  %1 = load i32, i32* %s.addr, align 4, !dbg !6193
  %2 = load i32, i32* %ev_bitmask.addr, align 4, !dbg !6194
  %3 = load i32*, i32** %running_handles.addr, align 8, !dbg !6195
  %call = call i32 @multi_socket(%struct.Curl_multi* %0, i1 zeroext false, i32 %1, i32 %2, i32* %3), !dbg !6196
  store i32 %call, i32* %result, align 4, !dbg !6191
  %4 = load i32, i32* %result, align 4, !dbg !6197
  %cmp = icmp sge i32 0, %4, !dbg !6199
  br i1 %cmp, label %if.then, label %if.end, !dbg !6200

if.then:                                          ; preds = %entry
  %5 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6201
  %call1 = call i32 @update_timer(%struct.Curl_multi* %5), !dbg !6202
  br label %if.end, !dbg !6202

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %result, align 4, !dbg !6203
  ret i32 %6, !dbg !6204
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_socket_all(%struct.Curl_multi* %multi, i32* %running_handles) #0 !dbg !1852 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %running_handles.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6205, metadata !1963), !dbg !6206
  store i32* %running_handles, i32** %running_handles.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %running_handles.addr, metadata !6207, metadata !1963), !dbg !6208
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6209, metadata !1963), !dbg !6210
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6211
  %1 = load i32*, i32** %running_handles.addr, align 8, !dbg !6212
  %call = call i32 @multi_socket(%struct.Curl_multi* %0, i1 zeroext true, i32 -1, i32 0, i32* %1), !dbg !6213
  store i32 %call, i32* %result, align 4, !dbg !6210
  %2 = load i32, i32* %result, align 4, !dbg !6214
  %cmp = icmp sge i32 0, %2, !dbg !6216
  br i1 %cmp, label %if.then, label %if.end, !dbg !6217

if.then:                                          ; preds = %entry
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6218
  %call1 = call i32 @update_timer(%struct.Curl_multi* %3), !dbg !6219
  br label %if.end, !dbg !6219

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %result, align 4, !dbg !6220
  ret i32 %4, !dbg !6221
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_timeout(%struct.Curl_multi* %multi, i64* %timeout_ms) #0 !dbg !1853 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %timeout_ms.addr = alloca i64*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6222, metadata !1963), !dbg !6223
  store i64* %timeout_ms, i64** %timeout_ms.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %timeout_ms.addr, metadata !6224, metadata !1963), !dbg !6225
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6226
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !6226
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !6226

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6228
  %type = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 0, !dbg !6228
  %2 = load i64, i64* %type, align 8, !dbg !6228
  %cmp = icmp eq i64 %2, 764702, !dbg !6228
  br i1 %cmp, label %if.end, label %if.then, !dbg !6230

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !6231
  br label %return, !dbg !6231

if.end:                                           ; preds = %land.lhs.true
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6232
  %4 = load i64*, i64** %timeout_ms.addr, align 8, !dbg !6233
  %call = call i32 @multi_timeout(%struct.Curl_multi* %3, i64* %4), !dbg !6234
  store i32 %call, i32* %retval, align 4, !dbg !6235
  br label %return, !dbg !6235

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6236
  ret i32 %5, !dbg !6236
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare i64 @curlx_tvdiff(i64, i64, i64, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @multi_addtimeout(%struct.curl_llist* %timeoutlist, %struct.timeval* %stamp) #0 !dbg !1945 {
entry:
  %retval = alloca i32, align 4
  %timeoutlist.addr = alloca %struct.curl_llist*, align 8
  %stamp.addr = alloca %struct.timeval*, align 8
  %e = alloca %struct.curl_llist_element*, align 8
  %timedup = alloca %struct.timeval*, align 8
  %prev = alloca %struct.curl_llist_element*, align 8
  %checktime = alloca %struct.timeval*, align 8
  %diff = alloca i64, align 8
  store %struct.curl_llist* %timeoutlist, %struct.curl_llist** %timeoutlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_llist** %timeoutlist.addr, metadata !6237, metadata !1963), !dbg !6238
  store %struct.timeval* %stamp, %struct.timeval** %stamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %stamp.addr, metadata !6239, metadata !1963), !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %e, metadata !6241, metadata !1963), !dbg !6242
  call void @llvm.dbg.declare(metadata %struct.timeval** %timedup, metadata !6243, metadata !1963), !dbg !6244
  call void @llvm.dbg.declare(metadata %struct.curl_llist_element** %prev, metadata !6245, metadata !1963), !dbg !6246
  store %struct.curl_llist_element* null, %struct.curl_llist_element** %prev, align 8, !dbg !6246
  %0 = load i8* (i64)*, i8* (i64)** @Curl_cmalloc, align 8, !dbg !6247
  %call = call i8* %0(i64 16), !dbg !6247
  %1 = bitcast i8* %call to %struct.timeval*, !dbg !6247
  store %struct.timeval* %1, %struct.timeval** %timedup, align 8, !dbg !6248
  %2 = load %struct.timeval*, %struct.timeval** %timedup, align 8, !dbg !6249
  %tobool = icmp ne %struct.timeval* %2, null, !dbg !6249
  br i1 %tobool, label %if.end, label %if.then, !dbg !6251

if.then:                                          ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !6252
  br label %return, !dbg !6252

if.end:                                           ; preds = %entry
  %3 = load %struct.timeval*, %struct.timeval** %timedup, align 8, !dbg !6253
  %4 = bitcast %struct.timeval* %3 to i8*, !dbg !6254
  %5 = load %struct.timeval*, %struct.timeval** %stamp.addr, align 8, !dbg !6255
  %6 = bitcast %struct.timeval* %5 to i8*, !dbg !6254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %6, i64 16, i32 8, i1 false), !dbg !6254
  %7 = load %struct.curl_llist*, %struct.curl_llist** %timeoutlist.addr, align 8, !dbg !6256
  %call1 = call i64 @Curl_llist_count(%struct.curl_llist* %7), !dbg !6258
  %tobool2 = icmp ne i64 %call1, 0, !dbg !6258
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !6259

if.then3:                                         ; preds = %if.end
  %8 = load %struct.curl_llist*, %struct.curl_llist** %timeoutlist.addr, align 8, !dbg !6260
  %head = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %8, i32 0, i32 0, !dbg !6263
  %9 = load %struct.curl_llist_element*, %struct.curl_llist_element** %head, align 8, !dbg !6263
  store %struct.curl_llist_element* %9, %struct.curl_llist_element** %e, align 8, !dbg !6264
  br label %for.cond, !dbg !6265

for.cond:                                         ; preds = %for.inc, %if.then3
  %10 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !6266
  %tobool4 = icmp ne %struct.curl_llist_element* %10, null, !dbg !6269
  br i1 %tobool4, label %for.body, label %for.end, !dbg !6269

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.timeval** %checktime, metadata !6270, metadata !1963), !dbg !6272
  %11 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !6273
  %ptr = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %11, i32 0, i32 0, !dbg !6274
  %12 = load i8*, i8** %ptr, align 8, !dbg !6274
  %13 = bitcast i8* %12 to %struct.timeval*, !dbg !6273
  store %struct.timeval* %13, %struct.timeval** %checktime, align 8, !dbg !6272
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !6275, metadata !1963), !dbg !6276
  %14 = load %struct.timeval*, %struct.timeval** %checktime, align 8, !dbg !6277
  %15 = load %struct.timeval*, %struct.timeval** %timedup, align 8, !dbg !6278
  %16 = bitcast %struct.timeval* %14 to { i64, i64 }*, !dbg !6279
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !6279
  %18 = load i64, i64* %17, align 8, !dbg !6279
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !6279
  %20 = load i64, i64* %19, align 8, !dbg !6279
  %21 = bitcast %struct.timeval* %15 to { i64, i64 }*, !dbg !6279
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !6279
  %23 = load i64, i64* %22, align 8, !dbg !6279
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !6279
  %25 = load i64, i64* %24, align 8, !dbg !6279
  %call5 = call i64 @curlx_tvdiff(i64 %18, i64 %20, i64 %23, i64 %25), !dbg !6279
  store i64 %call5, i64* %diff, align 8, !dbg !6276
  %26 = load i64, i64* %diff, align 8, !dbg !6280
  %cmp = icmp sgt i64 %26, 0, !dbg !6282
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6283

if.then6:                                         ; preds = %for.body
  br label %for.end, !dbg !6284

if.end7:                                          ; preds = %for.body
  %27 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !6285
  store %struct.curl_llist_element* %27, %struct.curl_llist_element** %prev, align 8, !dbg !6286
  br label %for.inc, !dbg !6287

for.inc:                                          ; preds = %if.end7
  %28 = load %struct.curl_llist_element*, %struct.curl_llist_element** %e, align 8, !dbg !6288
  %next = getelementptr inbounds %struct.curl_llist_element, %struct.curl_llist_element* %28, i32 0, i32 2, !dbg !6290
  %29 = load %struct.curl_llist_element*, %struct.curl_llist_element** %next, align 8, !dbg !6290
  store %struct.curl_llist_element* %29, %struct.curl_llist_element** %e, align 8, !dbg !6291
  br label %for.cond, !dbg !6292

for.end:                                          ; preds = %if.then6, %for.cond
  br label %if.end8, !dbg !6293

if.end8:                                          ; preds = %for.end, %if.end
  %30 = load %struct.curl_llist*, %struct.curl_llist** %timeoutlist.addr, align 8, !dbg !6294
  %31 = load %struct.curl_llist_element*, %struct.curl_llist_element** %prev, align 8, !dbg !6296
  %32 = load %struct.timeval*, %struct.timeval** %timedup, align 8, !dbg !6297
  %33 = bitcast %struct.timeval* %32 to i8*, !dbg !6297
  %call9 = call i32 @Curl_llist_insert_next(%struct.curl_llist* %30, %struct.curl_llist_element* %31, i8* %33), !dbg !6298
  %tobool10 = icmp ne i32 %call9, 0, !dbg !6298
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6299

if.then11:                                        ; preds = %if.end8
  %34 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6300
  %35 = load %struct.timeval*, %struct.timeval** %timedup, align 8, !dbg !6300
  %36 = bitcast %struct.timeval* %35 to i8*, !dbg !6300
  call void %34(i8* %36), !dbg !6300
  store i32 3, i32* %retval, align 4, !dbg !6302
  br label %return, !dbg !6302

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !6303
  br label %return, !dbg !6303

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !6304
  ret i32 %37, !dbg !6304
}

declare i32 @Curl_splayremovebyaddr(%struct.Curl_tree*, %struct.Curl_tree*, %struct.Curl_tree**) #2

declare void @Curl_infof(%struct.Curl_easy*, i8*, ...) #2

declare %struct.Curl_tree* @Curl_splayinsert(i64, i64, %struct.Curl_tree*, %struct.Curl_tree*) #2

; Function Attrs: nounwind uwtable
define void @Curl_expire_latest(%struct.Curl_easy* %data, i64 %milli) #0 !dbg !1860 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %milli.addr = alloca i64, align 8
  %expire = alloca %struct.timeval*, align 8
  %set = alloca %struct.timeval, align 8
  %coerce = alloca %struct.timeval, align 8
  %diff = alloca i64, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6305, metadata !1963), !dbg !6306
  store i64 %milli, i64* %milli.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %milli.addr, metadata !6307, metadata !1963), !dbg !6308
  call void @llvm.dbg.declare(metadata %struct.timeval** %expire, metadata !6309, metadata !1963), !dbg !6310
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6311
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 17, !dbg !6312
  %expiretime = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 27, !dbg !6313
  store %struct.timeval* %expiretime, %struct.timeval** %expire, align 8, !dbg !6310
  call void @llvm.dbg.declare(metadata %struct.timeval* %set, metadata !6314, metadata !1963), !dbg !6315
  %call = call { i64, i64 } @curlx_tvnow(), !dbg !6316
  %1 = bitcast %struct.timeval* %coerce to { i64, i64 }*, !dbg !6316
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !6316
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !6316
  store i64 %3, i64* %2, align 8, !dbg !6316
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6316
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !6316
  store i64 %5, i64* %4, align 8, !dbg !6316
  %6 = bitcast %struct.timeval* %set to i8*, !dbg !6316
  %7 = bitcast %struct.timeval* %coerce to i8*, !dbg !6316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 16, i32 8, i1 false), !dbg !6317
  %8 = load i64, i64* %milli.addr, align 8, !dbg !6319
  %div = sdiv i64 %8, 1000, !dbg !6320
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 0, !dbg !6321
  %9 = load i64, i64* %tv_sec, align 8, !dbg !6322
  %add = add nsw i64 %9, %div, !dbg !6322
  store i64 %add, i64* %tv_sec, align 8, !dbg !6322
  %10 = load i64, i64* %milli.addr, align 8, !dbg !6323
  %rem = srem i64 %10, 1000, !dbg !6324
  %mul = mul nsw i64 %rem, 1000, !dbg !6325
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !6326
  %11 = load i64, i64* %tv_usec, align 8, !dbg !6327
  %add1 = add nsw i64 %11, %mul, !dbg !6327
  store i64 %add1, i64* %tv_usec, align 8, !dbg !6327
  %tv_usec2 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !6328
  %12 = load i64, i64* %tv_usec2, align 8, !dbg !6328
  %cmp = icmp sge i64 %12, 1000000, !dbg !6330
  br i1 %cmp, label %if.then, label %if.end, !dbg !6331

if.then:                                          ; preds = %entry
  %tv_sec3 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 0, !dbg !6332
  %13 = load i64, i64* %tv_sec3, align 8, !dbg !6334
  %inc = add nsw i64 %13, 1, !dbg !6334
  store i64 %inc, i64* %tv_sec3, align 8, !dbg !6334
  %tv_usec4 = getelementptr inbounds %struct.timeval, %struct.timeval* %set, i32 0, i32 1, !dbg !6335
  %14 = load i64, i64* %tv_usec4, align 8, !dbg !6336
  %sub = sub nsw i64 %14, 1000000, !dbg !6336
  store i64 %sub, i64* %tv_usec4, align 8, !dbg !6336
  br label %if.end, !dbg !6337

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.timeval*, %struct.timeval** %expire, align 8, !dbg !6338
  %tv_sec5 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0, !dbg !6340
  %16 = load i64, i64* %tv_sec5, align 8, !dbg !6340
  %tobool = icmp ne i64 %16, 0, !dbg !6338
  br i1 %tobool, label %if.then8, label %lor.lhs.false, !dbg !6341

lor.lhs.false:                                    ; preds = %if.end
  %17 = load %struct.timeval*, %struct.timeval** %expire, align 8, !dbg !6342
  %tv_usec6 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i32 0, i32 1, !dbg !6344
  %18 = load i64, i64* %tv_usec6, align 8, !dbg !6344
  %tobool7 = icmp ne i64 %18, 0, !dbg !6342
  br i1 %tobool7, label %if.then8, label %if.end14, !dbg !6345

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !6346, metadata !1963), !dbg !6348
  %19 = load %struct.timeval*, %struct.timeval** %expire, align 8, !dbg !6349
  %20 = bitcast %struct.timeval* %set to { i64, i64 }*, !dbg !6350
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !6350
  %22 = load i64, i64* %21, align 8, !dbg !6350
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !6350
  %24 = load i64, i64* %23, align 8, !dbg !6350
  %25 = bitcast %struct.timeval* %19 to { i64, i64 }*, !dbg !6350
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 0, !dbg !6350
  %27 = load i64, i64* %26, align 8, !dbg !6350
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 1, !dbg !6350
  %29 = load i64, i64* %28, align 8, !dbg !6350
  %call9 = call i64 @curlx_tvdiff(i64 %22, i64 %24, i64 %27, i64 %29), !dbg !6350
  store i64 %call9, i64* %diff, align 8, !dbg !6348
  %30 = load i64, i64* %diff, align 8, !dbg !6351
  %cmp10 = icmp sgt i64 %30, 0, !dbg !6353
  br i1 %cmp10, label %land.lhs.true, label %if.end13, !dbg !6354

land.lhs.true:                                    ; preds = %if.then8
  %31 = load i64, i64* %diff, align 8, !dbg !6355
  %32 = load i64, i64* %milli.addr, align 8, !dbg !6357
  %cmp11 = icmp slt i64 %31, %32, !dbg !6358
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6359

if.then12:                                        ; preds = %land.lhs.true
  br label %return, !dbg !6360

if.end13:                                         ; preds = %land.lhs.true, %if.then8
  br label %if.end14, !dbg !6362

if.end14:                                         ; preds = %if.end13, %lor.lhs.false
  %33 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6363
  %34 = load i64, i64* %milli.addr, align 8, !dbg !6364
  call void @Curl_expire(%struct.Curl_easy* %33, i64 %34), !dbg !6365
  br label %return, !dbg !6366

return:                                           ; preds = %if.end14, %if.then12
  ret void, !dbg !6367
}

; Function Attrs: nounwind uwtable
define i32 @curl_multi_assign(%struct.Curl_multi* %multi, i32 %s, i8* %hashp) #0 !dbg !1862 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %s.addr = alloca i32, align 4
  %hashp.addr = alloca i8*, align 8
  %there = alloca %struct.Curl_sh_entry*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6368, metadata !1963), !dbg !6369
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !6370, metadata !1963), !dbg !6371
  store i8* %hashp, i8** %hashp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hashp.addr, metadata !6372, metadata !1963), !dbg !6373
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %there, metadata !6374, metadata !1963), !dbg !6375
  store %struct.Curl_sh_entry* null, %struct.Curl_sh_entry** %there, align 8, !dbg !6375
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6376
  %sockhash = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 13, !dbg !6377
  %1 = load i32, i32* %s.addr, align 4, !dbg !6378
  %call = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %sockhash, i32 %1), !dbg !6379
  store %struct.Curl_sh_entry* %call, %struct.Curl_sh_entry** %there, align 8, !dbg !6380
  %2 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %there, align 8, !dbg !6381
  %tobool = icmp ne %struct.Curl_sh_entry* %2, null, !dbg !6381
  br i1 %tobool, label %if.end, label %if.then, !dbg !6383

if.then:                                          ; preds = %entry
  store i32 5, i32* %retval, align 4, !dbg !6384
  br label %return, !dbg !6384

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %hashp.addr, align 8, !dbg !6385
  %4 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %there, align 8, !dbg !6386
  %socketp = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %4, i32 0, i32 3, !dbg !6387
  store i8* %3, i8** %socketp, align 8, !dbg !6388
  store i32 0, i32* %retval, align 4, !dbg !6389
  br label %return, !dbg !6389

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6390
  ret i32 %5, !dbg !6390
}

; Function Attrs: nounwind uwtable
define i64 @Curl_multi_max_host_connections(%struct.Curl_multi* %multi) #0 !dbg !1865 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6391, metadata !1963), !dbg !6392
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6393
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !6393
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6393

cond.true:                                        ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6394
  %max_host_connections = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 19, !dbg !6396
  %2 = load i64, i64* %max_host_connections, align 8, !dbg !6396
  br label %cond.end, !dbg !6397

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6400
  ret i64 %cond, !dbg !6402
}

; Function Attrs: nounwind uwtable
define i64 @Curl_multi_max_total_connections(%struct.Curl_multi* %multi) #0 !dbg !1868 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6403, metadata !1963), !dbg !6404
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6405
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !6405
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6405

cond.true:                                        ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6406
  %max_total_connections = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 20, !dbg !6408
  %2 = load i64, i64* %max_total_connections, align 8, !dbg !6408
  br label %cond.end, !dbg !6409

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6410

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6412
  ret i64 %cond, !dbg !6414
}

; Function Attrs: nounwind uwtable
define i64 @Curl_multi_content_length_penalty_size(%struct.Curl_multi* %multi) #0 !dbg !1869 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6415, metadata !1963), !dbg !6416
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6417
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !6417
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6417

cond.true:                                        ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6418
  %content_length_penalty_size = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 22, !dbg !6420
  %2 = load i64, i64* %content_length_penalty_size, align 8, !dbg !6420
  br label %cond.end, !dbg !6421

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6422

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6424
  ret i64 %cond, !dbg !6426
}

; Function Attrs: nounwind uwtable
define i64 @Curl_multi_chunk_length_penalty_size(%struct.Curl_multi* %multi) #0 !dbg !1872 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6427, metadata !1963), !dbg !6428
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6429
  %tobool = icmp ne %struct.Curl_multi* %0, null, !dbg !6429
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6429

cond.true:                                        ; preds = %entry
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6430
  %chunk_length_penalty_size = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 23, !dbg !6432
  %2 = load i64, i64* %chunk_length_penalty_size, align 8, !dbg !6432
  br label %cond.end, !dbg !6433

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6436
  ret i64 %cond, !dbg !6438
}

; Function Attrs: nounwind uwtable
define %struct.curl_llist* @Curl_multi_pipelining_site_bl(%struct.Curl_multi* %multi) #0 !dbg !1873 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6439, metadata !1963), !dbg !6440
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6441
  %pipelining_site_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 24, !dbg !6442
  ret %struct.curl_llist* %pipelining_site_bl, !dbg !6443
}

; Function Attrs: nounwind uwtable
define %struct.curl_llist* @Curl_multi_pipelining_server_bl(%struct.Curl_multi* %multi) #0 !dbg !1876 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6444, metadata !1963), !dbg !6445
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6446
  %pipelining_server_bl = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 25, !dbg !6447
  ret %struct.curl_llist* %pipelining_server_bl, !dbg !6448
}

declare i32 @Curl_hash_init(%struct.curl_hash*, i32, i64 (i8*, i64, i64)*, i64 (i8*, i64, i8*, i64)*, void (i8*)*) #2

; Function Attrs: nounwind uwtable
define internal i64 @hash_fd(i8* %key, i64 %key_length, i64 %slots_num) #0 !dbg !1881 {
entry:
  %key.addr = alloca i8*, align 8
  %key_length.addr = alloca i64, align 8
  %slots_num.addr = alloca i64, align 8
  %fd = alloca i32, align 4
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6449, metadata !1963), !dbg !6450
  store i64 %key_length, i64* %key_length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %key_length.addr, metadata !6451, metadata !1963), !dbg !6452
  store i64 %slots_num, i64* %slots_num.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %slots_num.addr, metadata !6453, metadata !1963), !dbg !6454
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6455, metadata !1963), !dbg !6456
  %0 = load i8*, i8** %key.addr, align 8, !dbg !6457
  %1 = bitcast i8* %0 to i32*, !dbg !6458
  %2 = load i32, i32* %1, align 4, !dbg !6459
  store i32 %2, i32* %fd, align 4, !dbg !6456
  %3 = load i64, i64* %key_length.addr, align 8, !dbg !6460
  %4 = load i32, i32* %fd, align 4, !dbg !6461
  %conv = sext i32 %4 to i64, !dbg !6461
  %5 = load i64, i64* %slots_num.addr, align 8, !dbg !6462
  %rem = urem i64 %conv, %5, !dbg !6463
  ret i64 %rem, !dbg !6464
}

; Function Attrs: nounwind uwtable
define internal i64 @fd_key_compare(i8* %k1, i64 %k1_len, i8* %k2, i64 %k2_len) #0 !dbg !1882 {
entry:
  %k1.addr = alloca i8*, align 8
  %k1_len.addr = alloca i64, align 8
  %k2.addr = alloca i8*, align 8
  %k2_len.addr = alloca i64, align 8
  store i8* %k1, i8** %k1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %k1.addr, metadata !6465, metadata !1963), !dbg !6466
  store i64 %k1_len, i64* %k1_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %k1_len.addr, metadata !6467, metadata !1963), !dbg !6468
  store i8* %k2, i8** %k2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %k2.addr, metadata !6469, metadata !1963), !dbg !6470
  store i64 %k2_len, i64* %k2_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %k2_len.addr, metadata !6471, metadata !1963), !dbg !6472
  %0 = load i64, i64* %k1_len.addr, align 8, !dbg !6473
  %1 = load i64, i64* %k2_len.addr, align 8, !dbg !6474
  %2 = load i8*, i8** %k1.addr, align 8, !dbg !6475
  %3 = bitcast i8* %2 to i32*, !dbg !6476
  %4 = load i32, i32* %3, align 4, !dbg !6477
  %5 = load i8*, i8** %k2.addr, align 8, !dbg !6478
  %6 = bitcast i8* %5 to i32*, !dbg !6479
  %7 = load i32, i32* %6, align 4, !dbg !6480
  %cmp = icmp eq i32 %4, %7, !dbg !6481
  %conv = zext i1 %cmp to i32, !dbg !6481
  %conv1 = sext i32 %conv to i64, !dbg !6482
  ret i64 %conv1, !dbg !6483
}

; Function Attrs: nounwind uwtable
define internal void @sh_freeentry(i8* %freethis) #0 !dbg !1883 {
entry:
  %freethis.addr = alloca i8*, align 8
  %p = alloca %struct.Curl_sh_entry*, align 8
  store i8* %freethis, i8** %freethis.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %freethis.addr, metadata !6484, metadata !1963), !dbg !6485
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %p, metadata !6486, metadata !1963), !dbg !6487
  %0 = load i8*, i8** %freethis.addr, align 8, !dbg !6488
  %1 = bitcast i8* %0 to %struct.Curl_sh_entry*, !dbg !6489
  store %struct.Curl_sh_entry* %1, %struct.Curl_sh_entry** %p, align 8, !dbg !6487
  %2 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6490
  %3 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %p, align 8, !dbg !6490
  %4 = bitcast %struct.Curl_sh_entry* %3 to i8*, !dbg !6490
  call void %2(i8* %4), !dbg !6490
  ret void, !dbg !6491
}

declare void @Curl_init_CONNECT(%struct.Curl_easy*) #2

declare i32 @Curl_pgrsDone(%struct.connectdata*) #2

declare void @Curl_resolv_unlock(%struct.Curl_easy*, %struct.Curl_dns_entry*) #2

declare i32 @Curl_disconnect(%struct.connectdata*, i1 zeroext) #2

; Function Attrs: nounwind uwtable
define internal zeroext i1 @ConnectionDone(%struct.Curl_easy* %data, %struct.connectdata* %conn) #0 !dbg !1892 {
entry:
  %data.addr = alloca %struct.Curl_easy*, align 8
  %conn.addr = alloca %struct.connectdata*, align 8
  %maxconnects = alloca i64, align 8
  %conn_candidate = alloca %struct.connectdata*, align 8
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6492, metadata !1963), !dbg !6493
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6494, metadata !1963), !dbg !6495
  call void @llvm.dbg.declare(metadata i64* %maxconnects, metadata !6496, metadata !1963), !dbg !6497
  %0 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6498
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %0, i32 0, i32 9, !dbg !6499
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !6499
  %maxconnects1 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 18, !dbg !6500
  %2 = load i64, i64* %maxconnects1, align 8, !dbg !6500
  %cmp = icmp slt i64 %2, 0, !dbg !6501
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6502

cond.true:                                        ; preds = %entry
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6503
  %multi2 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %3, i32 0, i32 9, !dbg !6505
  %4 = load %struct.Curl_multi*, %struct.Curl_multi** %multi2, align 8, !dbg !6505
  %num_easy = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %4, i32 0, i32 3, !dbg !6506
  %5 = load i32, i32* %num_easy, align 8, !dbg !6506
  %mul = mul nsw i32 %5, 4, !dbg !6507
  %conv = sext i32 %mul to i64, !dbg !6503
  br label %cond.end, !dbg !6508

cond.false:                                       ; preds = %entry
  %6 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6509
  %multi3 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %6, i32 0, i32 9, !dbg !6510
  %7 = load %struct.Curl_multi*, %struct.Curl_multi** %multi3, align 8, !dbg !6510
  %maxconnects4 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %7, i32 0, i32 18, !dbg !6511
  %8 = load i64, i64* %maxconnects4, align 8, !dbg !6511
  br label %cond.end, !dbg !6512

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %8, %cond.false ], !dbg !6514
  store i64 %cond, i64* %maxconnects, align 8, !dbg !6497
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn_candidate, metadata !6516, metadata !1963), !dbg !6517
  store %struct.connectdata* null, %struct.connectdata** %conn_candidate, align 8, !dbg !6517
  %9 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6518
  %inuse = getelementptr inbounds %struct.connectdata, %struct.connectdata* %9, i32 0, i32 4, !dbg !6519
  store i8 0, i8* %inuse, align 8, !dbg !6520
  %10 = load i64, i64* %maxconnects, align 8, !dbg !6521
  %cmp5 = icmp ugt i64 %10, 0, !dbg !6523
  br i1 %cmp5, label %land.lhs.true, label %if.end12, !dbg !6524

land.lhs.true:                                    ; preds = %cond.end
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6525
  %state = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 17, !dbg !6526
  %conn_cache = getelementptr inbounds %struct.UrlState, %struct.UrlState* %state, i32 0, i32 0, !dbg !6527
  %12 = load %struct.conncache*, %struct.conncache** %conn_cache, align 8, !dbg !6527
  %num_connections = getelementptr inbounds %struct.conncache, %struct.conncache* %12, i32 0, i32 1, !dbg !6528
  %13 = load i64, i64* %num_connections, align 8, !dbg !6528
  %14 = load i64, i64* %maxconnects, align 8, !dbg !6529
  %cmp7 = icmp ugt i64 %13, %14, !dbg !6530
  br i1 %cmp7, label %if.then, label %if.end12, !dbg !6531

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6532
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i32 0, i32 0)), !dbg !6534
  %16 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6535
  %call = call %struct.connectdata* @Curl_oldest_idle_connection(%struct.Curl_easy* %16), !dbg !6536
  store %struct.connectdata* %call, %struct.connectdata** %conn_candidate, align 8, !dbg !6537
  %17 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !6538
  %tobool = icmp ne %struct.connectdata* %17, null, !dbg !6538
  br i1 %tobool, label %if.then9, label %if.end, !dbg !6540

if.then9:                                         ; preds = %if.then
  %18 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6541
  %19 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !6543
  %data10 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %19, i32 0, i32 0, !dbg !6544
  store %struct.Curl_easy* %18, %struct.Curl_easy** %data10, align 8, !dbg !6545
  %20 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !6546
  %call11 = call i32 @Curl_disconnect(%struct.connectdata* %20, i1 zeroext false), !dbg !6547
  br label %if.end, !dbg !6548

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end12, !dbg !6549

if.end12:                                         ; preds = %if.end, %land.lhs.true, %cond.end
  %21 = load %struct.connectdata*, %struct.connectdata** %conn_candidate, align 8, !dbg !6550
  %22 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6551
  %cmp13 = icmp eq %struct.connectdata* %21, %22, !dbg !6552
  %cond15 = select i1 %cmp13, i32 0, i32 1, !dbg !6553
  %tobool16 = icmp ne i32 %cond15, 0, !dbg !6553
  ret i1 %tobool16, !dbg !6554
}

declare void @Curl_free_request_state(%struct.Curl_easy*) #2

declare %struct.connectdata* @Curl_oldest_idle_connection(%struct.Curl_easy*) #2

declare i32 @Curl_protocol_getsock(%struct.connectdata*, i32*, i32) #2

declare i32 @Curl_doing_getsock(%struct.connectdata*, i32*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @waitproxyconnect_getsock(%struct.connectdata* %conn, i32* %sock, i32 %numsocks) #0 !dbg !1898 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %sock.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6555, metadata !1963), !dbg !6556
  store i32* %sock, i32** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sock.addr, metadata !6557, metadata !1963), !dbg !6558
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !6559, metadata !1963), !dbg !6560
  %0 = load i32, i32* %numsocks.addr, align 4, !dbg !6561
  %tobool = icmp ne i32 %0, 0, !dbg !6561
  br i1 %tobool, label %if.end, label %if.then, !dbg !6563

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6564
  br label %return, !dbg !6564

if.end:                                           ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6565
  %sock1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 33, !dbg !6566
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %sock1, i64 0, i64 0, !dbg !6565
  %2 = load i32, i32* %arrayidx, align 8, !dbg !6565
  %3 = load i32*, i32** %sock.addr, align 8, !dbg !6567
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !6567
  store i32 %2, i32* %arrayidx2, align 4, !dbg !6568
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6569
  %tunnel_state = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 72, !dbg !6571
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %tunnel_state, i64 0, i64 0, !dbg !6569
  %5 = load i32, i32* %arrayidx3, align 8, !dbg !6569
  %cmp = icmp eq i32 %5, 1, !dbg !6572
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !6573

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !6574
  br label %return, !dbg !6574

if.end5:                                          ; preds = %if.end
  store i32 65536, i32* %retval, align 4, !dbg !6575
  br label %return, !dbg !6575

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6576
  ret i32 %6, !dbg !6576
}

; Function Attrs: nounwind uwtable
define internal i32 @waitconnect_getsock(%struct.connectdata* %conn, i32* %sock, i32 %numsocks) #0 !dbg !1899 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %sock.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6577, metadata !1963), !dbg !6578
  store i32* %sock, i32** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sock.addr, metadata !6579, metadata !1963), !dbg !6580
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !6581, metadata !1963), !dbg !6582
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6583, metadata !1963), !dbg !6584
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6585, metadata !1963), !dbg !6586
  store i32 0, i32* %s, align 4, !dbg !6586
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6587, metadata !1963), !dbg !6588
  store i32 0, i32* %rc, align 4, !dbg !6588
  %0 = load i32, i32* %numsocks.addr, align 4, !dbg !6589
  %tobool = icmp ne i32 %0, 0, !dbg !6589
  br i1 %tobool, label %if.end, label %if.then, !dbg !6591

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6592
  br label %return, !dbg !6592

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6593
  br label %for.cond, !dbg !6595

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !6596
  %cmp = icmp slt i32 %1, 2, !dbg !6599
  br i1 %cmp, label %for.body, label %for.end, !dbg !6600

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !6601
  %idxprom = sext i32 %2 to i64, !dbg !6604
  %3 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6604
  %tempsock = getelementptr inbounds %struct.connectdata, %struct.connectdata* %3, i32 0, i32 34, !dbg !6605
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock, i64 0, i64 %idxprom, !dbg !6604
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6604
  %cmp1 = icmp ne i32 %4, -1, !dbg !6606
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !6607

if.then2:                                         ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6608
  %idxprom3 = sext i32 %5 to i64, !dbg !6610
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6610
  %tempsock4 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 34, !dbg !6611
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %tempsock4, i64 0, i64 %idxprom3, !dbg !6610
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !6610
  %8 = load i32, i32* %s, align 4, !dbg !6612
  %idxprom6 = sext i32 %8 to i64, !dbg !6613
  %9 = load i32*, i32** %sock.addr, align 8, !dbg !6613
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 %idxprom6, !dbg !6613
  store i32 %7, i32* %arrayidx7, align 4, !dbg !6614
  %10 = load i32, i32* %s, align 4, !dbg !6615
  %inc = add nsw i32 %10, 1, !dbg !6615
  store i32 %inc, i32* %s, align 4, !dbg !6615
  %add = add nsw i32 16, %10, !dbg !6615
  %shl = shl i32 1, %add, !dbg !6615
  %11 = load i32, i32* %rc, align 4, !dbg !6616
  %or = or i32 %11, %shl, !dbg !6616
  store i32 %or, i32* %rc, align 4, !dbg !6616
  br label %if.end8, !dbg !6617

if.end8:                                          ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !6618

for.inc:                                          ; preds = %if.end8
  %12 = load i32, i32* %i, align 4, !dbg !6619
  %inc9 = add nsw i32 %12, 1, !dbg !6619
  store i32 %inc9, i32* %i, align 4, !dbg !6619
  br label %for.cond, !dbg !6621

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %rc, align 4, !dbg !6622
  store i32 %13, i32* %retval, align 4, !dbg !6623
  br label %return, !dbg !6623

return:                                           ; preds = %for.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6624
  ret i32 %14, !dbg !6624
}

; Function Attrs: nounwind uwtable
define internal i32 @domore_getsock(%struct.connectdata* %conn, i32* %socks, i32 %numsocks) #0 !dbg !1900 {
entry:
  %retval = alloca i32, align 4
  %conn.addr = alloca %struct.connectdata*, align 8
  %socks.addr = alloca i32*, align 8
  %numsocks.addr = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6625, metadata !1963), !dbg !6626
  store i32* %socks, i32** %socks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %socks.addr, metadata !6627, metadata !1963), !dbg !6628
  store i32 %numsocks, i32* %numsocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsocks.addr, metadata !6629, metadata !1963), !dbg !6630
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6631
  %tobool = icmp ne %struct.connectdata* %0, null, !dbg !6631
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6633

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6634
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 47, !dbg !6636
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6636
  %domore_getsock = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 10, !dbg !6637
  %3 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %domore_getsock, align 8, !dbg !6637
  %tobool1 = icmp ne i32 (%struct.connectdata*, i32*, i32)* %3, null, !dbg !6634
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6638

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6639
  %handler2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 47, !dbg !6640
  %5 = load %struct.Curl_handler*, %struct.Curl_handler** %handler2, align 8, !dbg !6640
  %domore_getsock3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %5, i32 0, i32 10, !dbg !6641
  %6 = load i32 (%struct.connectdata*, i32*, i32)*, i32 (%struct.connectdata*, i32*, i32)** %domore_getsock3, align 8, !dbg !6641
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6642
  %8 = load i32*, i32** %socks.addr, align 8, !dbg !6643
  %9 = load i32, i32* %numsocks.addr, align 4, !dbg !6644
  %call = call i32 %6(%struct.connectdata* %7, i32* %8, i32 %9), !dbg !6639
  store i32 %call, i32* %retval, align 4, !dbg !6645
  br label %return, !dbg !6645

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6646
  br label %return, !dbg !6646

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6647
  ret i32 %10, !dbg !6647
}

declare i32 @Curl_single_getsock(%struct.connectdata*, i32*, i32) #2

declare void @Curl_failf(%struct.Curl_easy*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal zeroext i1 @multi_ischanged(%struct.Curl_multi* %multi, i1 zeroext %clear) #0 !dbg !1904 {
entry:
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %clear.addr = alloca i8, align 1
  %retval1 = alloca i8, align 1
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6648, metadata !1963), !dbg !6649
  %frombool = zext i1 %clear to i8
  store i8 %frombool, i8* %clear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clear.addr, metadata !6650, metadata !1963), !dbg !6651
  call void @llvm.dbg.declare(metadata i8* %retval1, metadata !6652, metadata !1963), !dbg !6653
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6654
  %recheckstate = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 15, !dbg !6655
  %1 = load i8, i8* %recheckstate, align 8, !dbg !6655
  %tobool = trunc i8 %1 to i1, !dbg !6655
  %frombool2 = zext i1 %tobool to i8, !dbg !6653
  store i8 %frombool2, i8* %retval1, align 1, !dbg !6653
  %2 = load i8, i8* %clear.addr, align 1, !dbg !6656
  %tobool3 = trunc i8 %2 to i1, !dbg !6656
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6658

if.then:                                          ; preds = %entry
  %3 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6659
  %recheckstate4 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %3, i32 0, i32 15, !dbg !6660
  store i8 0, i8* %recheckstate4, align 8, !dbg !6661
  br label %if.end, !dbg !6659

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8, i8* %retval1, align 1, !dbg !6662
  %tobool5 = trunc i8 %4 to i1, !dbg !6662
  ret i1 %tobool5, !dbg !6663
}

declare i64 @Curl_timeleft(%struct.Curl_easy*, %struct.timeval*, i1 zeroext) #2

declare i32 @Curl_pretransfer(%struct.Curl_easy*) #2

declare void @Curl_pgrsTime(%struct.Curl_easy*, i32) #2

declare i32 @Curl_connect(%struct.Curl_easy*, %struct.connectdata**, i8*, i8*) #2

declare i32 @Curl_llist_insert_next(%struct.curl_llist*, %struct.curl_llist_element*, i8*) #2

declare i32 @Curl_add_handle_to_pipeline(%struct.Curl_easy*, %struct.connectdata*) #2

declare %struct.Curl_dns_entry* @Curl_fetch_addr(%struct.connectdata*, i8*, i32) #2

declare i32 @Curl_http_connect(%struct.connectdata*, i8*) #2

declare i32 @Curl_is_connected(%struct.connectdata*, i32, i8*) #2

declare i32 @Curl_protocol_connect(%struct.connectdata*, i8*) #2

declare i32 @Curl_posttransfer(%struct.Curl_easy*) #2

declare i32 @Curl_protocol_connecting(%struct.connectdata*, i8*) #2

declare zeroext i1 @Curl_pipeline_checkget_write(%struct.Curl_easy*, %struct.connectdata*) #2

; Function Attrs: nounwind uwtable
define internal i32 @multi_do(%struct.connectdata** %connp, i8* %done) #0 !dbg !1907 {
entry:
  %retval = alloca i32, align 4
  %connp.addr = alloca %struct.connectdata**, align 8
  %done.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %conn = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  store %struct.connectdata** %connp, %struct.connectdata*** %connp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %connp.addr, metadata !6664, metadata !1963), !dbg !6665
  store i8* %done, i8** %done.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %done.addr, metadata !6666, metadata !1963), !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6668, metadata !1963), !dbg !6669
  store i32 0, i32* %result, align 4, !dbg !6669
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !6670, metadata !1963), !dbg !6671
  %0 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6672
  %1 = load %struct.connectdata*, %struct.connectdata** %0, align 8, !dbg !6673
  store %struct.connectdata* %1, %struct.connectdata** %conn, align 8, !dbg !6671
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !6674, metadata !1963), !dbg !6675
  %2 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6676
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 0, !dbg !6677
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !6677
  store %struct.Curl_easy* %3, %struct.Curl_easy** %data, align 8, !dbg !6675
  %4 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6678
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 47, !dbg !6680
  %5 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6680
  %do_it = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %5, i32 0, i32 2, !dbg !6681
  %6 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %do_it, align 8, !dbg !6681
  %tobool = icmp ne i32 (%struct.connectdata*, i8*)* %6, null, !dbg !6678
  br i1 %tobool, label %if.then, label %if.end21, !dbg !6682

if.then:                                          ; preds = %entry
  %7 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6683
  %handler2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %7, i32 0, i32 47, !dbg !6685
  %8 = load %struct.Curl_handler*, %struct.Curl_handler** %handler2, align 8, !dbg !6685
  %do_it3 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %8, i32 0, i32 2, !dbg !6686
  %9 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %do_it3, align 8, !dbg !6686
  %10 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6687
  %11 = load i8*, i8** %done.addr, align 8, !dbg !6688
  %call = call i32 %9(%struct.connectdata* %10, i8* %11), !dbg !6683
  store i32 %call, i32* %result, align 4, !dbg !6689
  %12 = load i32, i32* %result, align 4, !dbg !6690
  %cmp = icmp eq i32 55, %12, !dbg !6692
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !6693

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6694
  %bits = getelementptr inbounds %struct.connectdata, %struct.connectdata* %13, i32 0, i32 43, !dbg !6696
  %reuse = getelementptr inbounds %struct.ConnectBits, %struct.ConnectBits* %bits, i32 0, i32 1, !dbg !6697
  %14 = load i8, i8* %reuse, align 1, !dbg !6697
  %tobool4 = trunc i8 %14 to i1, !dbg !6697
  br i1 %tobool4, label %if.then5, label %if.end15, !dbg !6698

if.then5:                                         ; preds = %land.lhs.true
  %15 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6699
  %multi = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %15, i32 0, i32 9, !dbg !6702
  %16 = load %struct.Curl_multi*, %struct.Curl_multi** %multi, align 8, !dbg !6702
  %tobool6 = icmp ne %struct.Curl_multi* %16, null, !dbg !6699
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !6703

if.then7:                                         ; preds = %if.then5
  %17 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6704
  %call8 = call i32 @multi_reconnect_request(%struct.connectdata** %17), !dbg !6706
  store i32 %call8, i32* %result, align 4, !dbg !6707
  %18 = load i32, i32* %result, align 4, !dbg !6708
  %tobool9 = icmp ne i32 %18, 0, !dbg !6708
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !6710

if.then10:                                        ; preds = %if.then7
  %19 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6711
  %20 = load %struct.connectdata*, %struct.connectdata** %19, align 8, !dbg !6713
  store %struct.connectdata* %20, %struct.connectdata** %conn, align 8, !dbg !6714
  %21 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6715
  %handler11 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %21, i32 0, i32 47, !dbg !6716
  %22 = load %struct.Curl_handler*, %struct.Curl_handler** %handler11, align 8, !dbg !6716
  %do_it12 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %22, i32 0, i32 2, !dbg !6717
  %23 = load i32 (%struct.connectdata*, i8*)*, i32 (%struct.connectdata*, i8*)** %do_it12, align 8, !dbg !6717
  %24 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6718
  %25 = load i8*, i8** %done.addr, align 8, !dbg !6719
  %call13 = call i32 %23(%struct.connectdata* %24, i8* %25), !dbg !6715
  store i32 %call13, i32* %result, align 4, !dbg !6720
  br label %if.end, !dbg !6721

if.end:                                           ; preds = %if.then10, %if.then7
  br label %if.end14, !dbg !6722

if.else:                                          ; preds = %if.then5
  %26 = load i32, i32* %result, align 4, !dbg !6723
  store i32 %26, i32* %retval, align 4, !dbg !6724
  br label %return, !dbg !6724

if.end14:                                         ; preds = %if.end
  br label %if.end15, !dbg !6725

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %if.then
  %27 = load i32, i32* %result, align 4, !dbg !6726
  %tobool16 = icmp ne i32 %27, 0, !dbg !6726
  br i1 %tobool16, label %if.end20, label %land.lhs.true17, !dbg !6728

land.lhs.true17:                                  ; preds = %if.end15
  %28 = load i8*, i8** %done.addr, align 8, !dbg !6729
  %29 = load i8, i8* %28, align 1, !dbg !6731
  %tobool18 = trunc i8 %29 to i1, !dbg !6731
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6732

if.then19:                                        ; preds = %land.lhs.true17
  %30 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6733
  call void @do_complete(%struct.connectdata* %30), !dbg !6734
  br label %if.end20, !dbg !6734

if.end20:                                         ; preds = %if.then19, %land.lhs.true17, %if.end15
  br label %if.end21, !dbg !6735

if.end21:                                         ; preds = %if.end20, %entry
  %31 = load i32, i32* %result, align 4, !dbg !6736
  store i32 %31, i32* %retval, align 4, !dbg !6737
  br label %return, !dbg !6737

return:                                           ; preds = %if.end21, %if.else
  %32 = load i32, i32* %retval, align 4, !dbg !6738
  ret i32 %32, !dbg !6738
}

declare i32 @Curl_retry_request(%struct.connectdata*, i8**) #2

declare i32 @Curl_follow(%struct.Curl_easy*, i8*, i32) #2

declare i32 @Curl_protocol_doing(%struct.connectdata*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @multi_do_more(%struct.connectdata* %conn, i32* %complete) #0 !dbg !1916 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  %complete.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6739, metadata !1963), !dbg !6740
  store i32* %complete, i32** %complete.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %complete.addr, metadata !6741, metadata !1963), !dbg !6742
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6743, metadata !1963), !dbg !6744
  store i32 0, i32* %result, align 4, !dbg !6744
  %0 = load i32*, i32** %complete.addr, align 8, !dbg !6745
  store i32 0, i32* %0, align 4, !dbg !6746
  %1 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6747
  %handler = getelementptr inbounds %struct.connectdata, %struct.connectdata* %1, i32 0, i32 47, !dbg !6749
  %2 = load %struct.Curl_handler*, %struct.Curl_handler** %handler, align 8, !dbg !6749
  %do_more = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %2, i32 0, i32 4, !dbg !6750
  %3 = load i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i32*)** %do_more, align 8, !dbg !6750
  %tobool = icmp ne i32 (%struct.connectdata*, i32*)* %3, null, !dbg !6747
  br i1 %tobool, label %if.then, label %if.end, !dbg !6751

if.then:                                          ; preds = %entry
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6752
  %handler1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 47, !dbg !6753
  %5 = load %struct.Curl_handler*, %struct.Curl_handler** %handler1, align 8, !dbg !6753
  %do_more2 = getelementptr inbounds %struct.Curl_handler, %struct.Curl_handler* %5, i32 0, i32 4, !dbg !6754
  %6 = load i32 (%struct.connectdata*, i32*)*, i32 (%struct.connectdata*, i32*)** %do_more2, align 8, !dbg !6754
  %7 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6755
  %8 = load i32*, i32** %complete.addr, align 8, !dbg !6756
  %call = call i32 %6(%struct.connectdata* %7, i32* %8), !dbg !6752
  store i32 %call, i32* %result, align 4, !dbg !6757
  br label %if.end, !dbg !6758

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %result, align 4, !dbg !6759
  %tobool3 = icmp ne i32 %9, 0, !dbg !6759
  br i1 %tobool3, label %if.end5, label %land.lhs.true, !dbg !6761

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32*, i32** %complete.addr, align 8, !dbg !6762
  %11 = load i32, i32* %10, align 4, !dbg !6764
  %cmp = icmp eq i32 %11, 1, !dbg !6765
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !6766

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6767
  call void @do_complete(%struct.connectdata* %12), !dbg !6768
  br label %if.end5, !dbg !6768

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %13 = load i32, i32* %result, align 4, !dbg !6769
  ret i32 %13, !dbg !6770
}

declare void @Curl_move_handle_from_send_to_recv_pipe(%struct.Curl_easy*, %struct.connectdata*) #2

declare zeroext i1 @Curl_pipeline_checkget_read(%struct.Curl_easy*, %struct.connectdata*) #2

declare i32 @Curl_pgrsUpdate(%struct.connectdata*) #2

declare i32 @Curl_speedcheck(%struct.Curl_easy*, i64, i64) #2

declare i64 @Curl_pgrsLimitWaitTime(i64, i64, i64, i64, i64, %struct.timeval* byval align 8) #2

declare i32 @Curl_readwrite(%struct.connectdata*, %struct.Curl_easy*, i8*, i8*) #2

declare void @Curl_pipeline_leave_read(%struct.connectdata*) #2

declare void @Curl_pipeline_leave_write(%struct.connectdata*) #2

declare i32 @Curl_removeHandleFromPipeline(%struct.Curl_easy*, %struct.curl_llist*) #2

; Function Attrs: nounwind uwtable
define internal i32 @multi_addmsg(%struct.Curl_multi* %multi, %struct.Curl_message* %msg) #0 !dbg !1917 {
entry:
  %retval = alloca i32, align 4
  %multi.addr = alloca %struct.Curl_multi*, align 8
  %msg.addr = alloca %struct.Curl_message*, align 8
  store %struct.Curl_multi* %multi, %struct.Curl_multi** %multi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_multi** %multi.addr, metadata !6771, metadata !1963), !dbg !6772
  store %struct.Curl_message* %msg, %struct.Curl_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_message** %msg.addr, metadata !6773, metadata !1963), !dbg !6774
  %0 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6775
  %msglist = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %0, i32 0, i32 5, !dbg !6777
  %1 = load %struct.Curl_multi*, %struct.Curl_multi** %multi.addr, align 8, !dbg !6778
  %msglist1 = getelementptr inbounds %struct.Curl_multi, %struct.Curl_multi* %1, i32 0, i32 5, !dbg !6779
  %tail = getelementptr inbounds %struct.curl_llist, %struct.curl_llist* %msglist1, i32 0, i32 1, !dbg !6780
  %2 = load %struct.curl_llist_element*, %struct.curl_llist_element** %tail, align 8, !dbg !6780
  %3 = load %struct.Curl_message*, %struct.Curl_message** %msg.addr, align 8, !dbg !6781
  %4 = bitcast %struct.Curl_message* %3 to i8*, !dbg !6781
  %call = call i32 @Curl_llist_insert_next(%struct.curl_llist* %msglist, %struct.curl_llist_element* %2, i8* %4), !dbg !6782
  %tobool = icmp ne i32 %call, 0, !dbg !6782
  br i1 %tobool, label %if.end, label %if.then, !dbg !6783

if.then:                                          ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !6784
  br label %return, !dbg !6784

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6785
  br label %return, !dbg !6785

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6786
  ret i32 %5, !dbg !6786
}

; Function Attrs: nounwind uwtable
define internal i32 @multi_reconnect_request(%struct.connectdata** %connp) #0 !dbg !1910 {
entry:
  %retval = alloca i32, align 4
  %connp.addr = alloca %struct.connectdata**, align 8
  %result = alloca i32, align 4
  %conn = alloca %struct.connectdata*, align 8
  %data = alloca %struct.Curl_easy*, align 8
  %async = alloca i8, align 1
  %protocol_done = alloca i8, align 1
  store %struct.connectdata** %connp, %struct.connectdata*** %connp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata*** %connp.addr, metadata !6787, metadata !1963), !dbg !6788
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6789, metadata !1963), !dbg !6790
  store i32 0, i32* %result, align 4, !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn, metadata !6791, metadata !1963), !dbg !6792
  %0 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6793
  %1 = load %struct.connectdata*, %struct.connectdata** %0, align 8, !dbg !6794
  store %struct.connectdata* %1, %struct.connectdata** %conn, align 8, !dbg !6792
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data, metadata !6795, metadata !1963), !dbg !6796
  %2 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6797
  %data1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 0, !dbg !6798
  %3 = load %struct.Curl_easy*, %struct.Curl_easy** %data1, align 8, !dbg !6798
  store %struct.Curl_easy* %3, %struct.Curl_easy** %data, align 8, !dbg !6796
  %4 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6799
  call void (%struct.Curl_easy*, i8*, ...) @Curl_infof(%struct.Curl_easy* %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.11, i32 0, i32 0)), !dbg !6800
  %5 = load %struct.connectdata*, %struct.connectdata** %conn, align 8, !dbg !6801
  call void @Curl_conncontrol(%struct.connectdata* %5, i32 1), !dbg !6801
  %6 = load i32, i32* %result, align 4, !dbg !6802
  %call = call i32 @multi_done(%struct.connectdata** %conn, i32 %6, i1 zeroext false), !dbg !6803
  store i32 %call, i32* %result, align 4, !dbg !6804
  %7 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6805
  store %struct.connectdata* null, %struct.connectdata** %7, align 8, !dbg !6806
  %8 = load i32, i32* %result, align 4, !dbg !6807
  %tobool = icmp ne i32 %8, 0, !dbg !6807
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6809

lor.lhs.false:                                    ; preds = %entry
  %9 = load i32, i32* %result, align 4, !dbg !6810
  %cmp = icmp eq i32 55, %9, !dbg !6812
  br i1 %cmp, label %if.then, label %if.end14, !dbg !6813

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i8* %async, metadata !6814, metadata !1963), !dbg !6816
  call void @llvm.dbg.declare(metadata i8* %protocol_done, metadata !6817, metadata !1963), !dbg !6818
  store i8 1, i8* %protocol_done, align 1, !dbg !6818
  %10 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6819
  %11 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6820
  %call2 = call i32 @Curl_connect(%struct.Curl_easy* %10, %struct.connectdata** %11, i8* %async, i8* %protocol_done), !dbg !6821
  store i32 %call2, i32* %result, align 4, !dbg !6822
  %12 = load i32, i32* %result, align 4, !dbg !6823
  %tobool3 = icmp ne i32 %12, 0, !dbg !6823
  br i1 %tobool3, label %if.end13, label %if.then4, !dbg !6825

if.then4:                                         ; preds = %if.then
  %13 = load %struct.connectdata**, %struct.connectdata*** %connp.addr, align 8, !dbg !6826
  %14 = load %struct.connectdata*, %struct.connectdata** %13, align 8, !dbg !6828
  store %struct.connectdata* %14, %struct.connectdata** %conn, align 8, !dbg !6829
  %15 = load i8, i8* %async, align 1, !dbg !6830
  %tobool5 = trunc i8 %15 to i1, !dbg !6830
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !6832

if.then6:                                         ; preds = %if.then4
  store i32 6, i32* %result, align 4, !dbg !6833
  %16 = load i32, i32* %result, align 4, !dbg !6835
  %tobool7 = icmp ne i32 %16, 0, !dbg !6835
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6837

if.then8:                                         ; preds = %if.then6
  %17 = load i32, i32* %result, align 4, !dbg !6838
  store i32 %17, i32* %retval, align 4, !dbg !6839
  br label %return, !dbg !6839

if.end:                                           ; preds = %if.then6
  store i32 0, i32* %result, align 4, !dbg !6840
  %18 = load i32, i32* %result, align 4, !dbg !6841
  %tobool9 = icmp ne i32 %18, 0, !dbg !6841
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6843

if.then10:                                        ; preds = %if.end
  %19 = load i32, i32* %result, align 4, !dbg !6844
  store i32 %19, i32* %retval, align 4, !dbg !6845
  br label %return, !dbg !6845

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !6846

if.end12:                                         ; preds = %if.end11, %if.then4
  br label %if.end13, !dbg !6847

if.end13:                                         ; preds = %if.end12, %if.then
  br label %if.end14, !dbg !6848

if.end14:                                         ; preds = %if.end13, %lor.lhs.false
  %20 = load i32, i32* %result, align 4, !dbg !6849
  store i32 %20, i32* %retval, align 4, !dbg !6850
  br label %return, !dbg !6850

return:                                           ; preds = %if.end14, %if.then10, %if.then8
  %21 = load i32, i32* %retval, align 4, !dbg !6851
  ret i32 %21, !dbg !6851
}

; Function Attrs: nounwind uwtable
define internal void @do_complete(%struct.connectdata* %conn) #0 !dbg !1913 {
entry:
  %conn.addr = alloca %struct.connectdata*, align 8
  store %struct.connectdata* %conn, %struct.connectdata** %conn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connectdata** %conn.addr, metadata !6852, metadata !1963), !dbg !6853
  %0 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6854
  %data = getelementptr inbounds %struct.connectdata, %struct.connectdata* %0, i32 0, i32 0, !dbg !6855
  %1 = load %struct.Curl_easy*, %struct.Curl_easy** %data, align 8, !dbg !6855
  %req = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %1, i32 0, i32 12, !dbg !6856
  %chunk = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req, i32 0, i32 39, !dbg !6857
  store i8 0, i8* %chunk, align 8, !dbg !6858
  %2 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6859
  %sockfd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %2, i32 0, i32 50, !dbg !6860
  %3 = load i32, i32* %sockfd, align 8, !dbg !6860
  %4 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6861
  %writesockfd = getelementptr inbounds %struct.connectdata, %struct.connectdata* %4, i32 0, i32 51, !dbg !6862
  %5 = load i32, i32* %writesockfd, align 4, !dbg !6862
  %cmp = icmp sgt i32 %3, %5, !dbg !6863
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6859

cond.true:                                        ; preds = %entry
  %6 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6864
  %sockfd1 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %6, i32 0, i32 50, !dbg !6865
  %7 = load i32, i32* %sockfd1, align 8, !dbg !6865
  br label %cond.end, !dbg !6866

cond.false:                                       ; preds = %entry
  %8 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6868
  %writesockfd2 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %8, i32 0, i32 51, !dbg !6869
  %9 = load i32, i32* %writesockfd2, align 4, !dbg !6869
  br label %cond.end, !dbg !6870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %9, %cond.false ], !dbg !6872
  %add = add nsw i32 %cond, 1, !dbg !6874
  %10 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6875
  %data3 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %10, i32 0, i32 0, !dbg !6876
  %11 = load %struct.Curl_easy*, %struct.Curl_easy** %data3, align 8, !dbg !6876
  %req4 = getelementptr inbounds %struct.Curl_easy, %struct.Curl_easy* %11, i32 0, i32 12, !dbg !6877
  %maxfd = getelementptr inbounds %struct.SingleRequest, %struct.SingleRequest* %req4, i32 0, i32 30, !dbg !6878
  store i32 %add, i32* %maxfd, align 8, !dbg !6879
  %12 = load %struct.connectdata*, %struct.connectdata** %conn.addr, align 8, !dbg !6880
  %data5 = getelementptr inbounds %struct.connectdata, %struct.connectdata* %12, i32 0, i32 0, !dbg !6881
  %13 = load %struct.Curl_easy*, %struct.Curl_easy** %data5, align 8, !dbg !6881
  call void @Curl_pgrsTime(%struct.Curl_easy* %13, i32 6), !dbg !6882
  ret void, !dbg !6883
}

declare %struct.connectdata* @Curl_conncache_find_first_connection(%struct.conncache*) #2

; Function Attrs: nounwind uwtable
define internal %struct.Curl_sh_entry* @sh_addentry(%struct.curl_hash* %sh, i32 %s, %struct.Curl_easy* %data) #0 !dbg !1925 {
entry:
  %retval = alloca %struct.Curl_sh_entry*, align 8
  %sh.addr = alloca %struct.curl_hash*, align 8
  %s.addr = alloca i32, align 4
  %data.addr = alloca %struct.Curl_easy*, align 8
  %there = alloca %struct.Curl_sh_entry*, align 8
  %check = alloca %struct.Curl_sh_entry*, align 8
  store %struct.curl_hash* %sh, %struct.curl_hash** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.curl_hash** %sh.addr, metadata !6884, metadata !1963), !dbg !6885
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !6886, metadata !1963), !dbg !6887
  store %struct.Curl_easy* %data, %struct.Curl_easy** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curl_easy** %data.addr, metadata !6888, metadata !1963), !dbg !6889
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %there, metadata !6890, metadata !1963), !dbg !6891
  %0 = load %struct.curl_hash*, %struct.curl_hash** %sh.addr, align 8, !dbg !6892
  %1 = load i32, i32* %s.addr, align 4, !dbg !6893
  %call = call %struct.Curl_sh_entry* @sh_getentry(%struct.curl_hash* %0, i32 %1), !dbg !6894
  store %struct.Curl_sh_entry* %call, %struct.Curl_sh_entry** %there, align 8, !dbg !6891
  call void @llvm.dbg.declare(metadata %struct.Curl_sh_entry** %check, metadata !6895, metadata !1963), !dbg !6896
  %2 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %there, align 8, !dbg !6897
  %tobool = icmp ne %struct.Curl_sh_entry* %2, null, !dbg !6897
  br i1 %tobool, label %if.then, label %if.end, !dbg !6899

if.then:                                          ; preds = %entry
  %3 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %there, align 8, !dbg !6900
  store %struct.Curl_sh_entry* %3, %struct.Curl_sh_entry** %retval, align 8, !dbg !6901
  br label %return, !dbg !6901

if.end:                                           ; preds = %entry
  %4 = load i8* (i64, i64)*, i8* (i64, i64)** @Curl_ccalloc, align 8, !dbg !6902
  %call1 = call i8* %4(i64 1, i64 24), !dbg !6902
  %5 = bitcast i8* %call1 to %struct.Curl_sh_entry*, !dbg !6902
  store %struct.Curl_sh_entry* %5, %struct.Curl_sh_entry** %check, align 8, !dbg !6903
  %6 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6904
  %tobool2 = icmp ne %struct.Curl_sh_entry* %6, null, !dbg !6904
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6906

if.then3:                                         ; preds = %if.end
  store %struct.Curl_sh_entry* null, %struct.Curl_sh_entry** %retval, align 8, !dbg !6907
  br label %return, !dbg !6907

if.end4:                                          ; preds = %if.end
  %7 = load %struct.Curl_easy*, %struct.Curl_easy** %data.addr, align 8, !dbg !6908
  %8 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6909
  %easy = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %8, i32 0, i32 0, !dbg !6910
  store %struct.Curl_easy* %7, %struct.Curl_easy** %easy, align 8, !dbg !6911
  %9 = load i32, i32* %s.addr, align 4, !dbg !6912
  %10 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6913
  %socket = getelementptr inbounds %struct.Curl_sh_entry, %struct.Curl_sh_entry* %10, i32 0, i32 2, !dbg !6914
  store i32 %9, i32* %socket, align 4, !dbg !6915
  %11 = load %struct.curl_hash*, %struct.curl_hash** %sh.addr, align 8, !dbg !6916
  %12 = bitcast i32* %s.addr to i8*, !dbg !6918
  %13 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6919
  %14 = bitcast %struct.Curl_sh_entry* %13 to i8*, !dbg !6919
  %call5 = call i8* @Curl_hash_add(%struct.curl_hash* %11, i8* %12, i64 4, i8* %14), !dbg !6920
  %tobool6 = icmp ne i8* %call5, null, !dbg !6920
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6921

if.then7:                                         ; preds = %if.end4
  %15 = load void (i8*)*, void (i8*)** @Curl_cfree, align 8, !dbg !6922
  %16 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6922
  %17 = bitcast %struct.Curl_sh_entry* %16 to i8*, !dbg !6922
  call void %15(i8* %17), !dbg !6922
  store %struct.Curl_sh_entry* null, %struct.Curl_sh_entry** %retval, align 8, !dbg !6924
  br label %return, !dbg !6924

if.end8:                                          ; preds = %if.end4
  %18 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %check, align 8, !dbg !6925
  store %struct.Curl_sh_entry* %18, %struct.Curl_sh_entry** %retval, align 8, !dbg !6926
  br label %return, !dbg !6926

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %19 = load %struct.Curl_sh_entry*, %struct.Curl_sh_entry** %retval, align 8, !dbg !6927
  ret %struct.Curl_sh_entry* %19, !dbg !6927
}

declare zeroext i1 @Curl_recvpipe_head(%struct.Curl_easy*, %struct.connectdata*) #2

declare zeroext i1 @Curl_sendpipe_head(%struct.Curl_easy*, %struct.connectdata*) #2

declare i8* @Curl_hash_add(%struct.curl_hash*, i8*, i64, i8*) #2

declare i8* @Curl_hash_pick(%struct.curl_hash*, i8*, i64) #2

declare i32 @Curl_hash_delete(%struct.curl_hash*, i8*, i64) #2

declare %struct.Curl_tree* @Curl_splay(i64, i64, %struct.Curl_tree*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1959, !1960}
!llvm.ident = !{!1961}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1769, subprograms: !1780, globals: !1948)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/multi.c", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!2 = !{!3, !14, !24, !120, !126, !134, !173, !192, !212, !227, !244, !252, !266, !299, !368, !466, !476, !567, !584, !591, !730, !746, !758, !855, !865, !913, !931, !937, !963, !978, !987, !995, !1024, !1225, !1277, !1716, !1728, !1746, !1761}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 31, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http_chunks.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13}
!6 = !DIEnumerator(name: "CHUNK_HEX", value: 0)
!7 = !DIEnumerator(name: "CHUNK_LF", value: 1)
!8 = !DIEnumerator(name: "CHUNK_DATA", value: 2)
!9 = !DIEnumerator(name: "CHUNK_POSTLF", value: 3)
!10 = !DIEnumerator(name: "CHUNK_STOP", value: 4)
!11 = !DIEnumerator(name: "CHUNK_TRAILER", value: 5)
!12 = !DIEnumerator(name: "CHUNK_TRAILER_CR", value: 6)
!13 = !DIEnumerator(name: "CHUNK_TRAILER_POSTCR", value: 7)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 644, size: 32, align: 32, elements: !16)
!15 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!16 = !{!17, !18, !19, !20, !21, !22, !23}
!17 = !DIEnumerator(name: "CURLPROXY_HTTP", value: 0)
!18 = !DIEnumerator(name: "CURLPROXY_HTTP_1_0", value: 1)
!19 = !DIEnumerator(name: "CURLPROXY_HTTPS", value: 2)
!20 = !DIEnumerator(name: "CURLPROXY_SOCKS4", value: 4)
!21 = !DIEnumerator(name: "CURLPROXY_SOCKS5", value: 5)
!22 = !DIEnumerator(name: "CURLPROXY_SOCKS4A", value: 6)
!23 = !DIEnumerator(name: "CURLPROXY_SOCKS5_HOSTNAME", value: 7)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 434, size: 32, align: 32, elements: !25)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119}
!26 = !DIEnumerator(name: "CURLE_OK", value: 0)
!27 = !DIEnumerator(name: "CURLE_UNSUPPORTED_PROTOCOL", value: 1)
!28 = !DIEnumerator(name: "CURLE_FAILED_INIT", value: 2)
!29 = !DIEnumerator(name: "CURLE_URL_MALFORMAT", value: 3)
!30 = !DIEnumerator(name: "CURLE_NOT_BUILT_IN", value: 4)
!31 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_PROXY", value: 5)
!32 = !DIEnumerator(name: "CURLE_COULDNT_RESOLVE_HOST", value: 6)
!33 = !DIEnumerator(name: "CURLE_COULDNT_CONNECT", value: 7)
!34 = !DIEnumerator(name: "CURLE_WEIRD_SERVER_REPLY", value: 8)
!35 = !DIEnumerator(name: "CURLE_REMOTE_ACCESS_DENIED", value: 9)
!36 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_FAILED", value: 10)
!37 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASS_REPLY", value: 11)
!38 = !DIEnumerator(name: "CURLE_FTP_ACCEPT_TIMEOUT", value: 12)
!39 = !DIEnumerator(name: "CURLE_FTP_WEIRD_PASV_REPLY", value: 13)
!40 = !DIEnumerator(name: "CURLE_FTP_WEIRD_227_FORMAT", value: 14)
!41 = !DIEnumerator(name: "CURLE_FTP_CANT_GET_HOST", value: 15)
!42 = !DIEnumerator(name: "CURLE_HTTP2", value: 16)
!43 = !DIEnumerator(name: "CURLE_FTP_COULDNT_SET_TYPE", value: 17)
!44 = !DIEnumerator(name: "CURLE_PARTIAL_FILE", value: 18)
!45 = !DIEnumerator(name: "CURLE_FTP_COULDNT_RETR_FILE", value: 19)
!46 = !DIEnumerator(name: "CURLE_OBSOLETE20", value: 20)
!47 = !DIEnumerator(name: "CURLE_QUOTE_ERROR", value: 21)
!48 = !DIEnumerator(name: "CURLE_HTTP_RETURNED_ERROR", value: 22)
!49 = !DIEnumerator(name: "CURLE_WRITE_ERROR", value: 23)
!50 = !DIEnumerator(name: "CURLE_OBSOLETE24", value: 24)
!51 = !DIEnumerator(name: "CURLE_UPLOAD_FAILED", value: 25)
!52 = !DIEnumerator(name: "CURLE_READ_ERROR", value: 26)
!53 = !DIEnumerator(name: "CURLE_OUT_OF_MEMORY", value: 27)
!54 = !DIEnumerator(name: "CURLE_OPERATION_TIMEDOUT", value: 28)
!55 = !DIEnumerator(name: "CURLE_OBSOLETE29", value: 29)
!56 = !DIEnumerator(name: "CURLE_FTP_PORT_FAILED", value: 30)
!57 = !DIEnumerator(name: "CURLE_FTP_COULDNT_USE_REST", value: 31)
!58 = !DIEnumerator(name: "CURLE_OBSOLETE32", value: 32)
!59 = !DIEnumerator(name: "CURLE_RANGE_ERROR", value: 33)
!60 = !DIEnumerator(name: "CURLE_HTTP_POST_ERROR", value: 34)
!61 = !DIEnumerator(name: "CURLE_SSL_CONNECT_ERROR", value: 35)
!62 = !DIEnumerator(name: "CURLE_BAD_DOWNLOAD_RESUME", value: 36)
!63 = !DIEnumerator(name: "CURLE_FILE_COULDNT_READ_FILE", value: 37)
!64 = !DIEnumerator(name: "CURLE_LDAP_CANNOT_BIND", value: 38)
!65 = !DIEnumerator(name: "CURLE_LDAP_SEARCH_FAILED", value: 39)
!66 = !DIEnumerator(name: "CURLE_OBSOLETE40", value: 40)
!67 = !DIEnumerator(name: "CURLE_FUNCTION_NOT_FOUND", value: 41)
!68 = !DIEnumerator(name: "CURLE_ABORTED_BY_CALLBACK", value: 42)
!69 = !DIEnumerator(name: "CURLE_BAD_FUNCTION_ARGUMENT", value: 43)
!70 = !DIEnumerator(name: "CURLE_OBSOLETE44", value: 44)
!71 = !DIEnumerator(name: "CURLE_INTERFACE_FAILED", value: 45)
!72 = !DIEnumerator(name: "CURLE_OBSOLETE46", value: 46)
!73 = !DIEnumerator(name: "CURLE_TOO_MANY_REDIRECTS", value: 47)
!74 = !DIEnumerator(name: "CURLE_UNKNOWN_OPTION", value: 48)
!75 = !DIEnumerator(name: "CURLE_TELNET_OPTION_SYNTAX", value: 49)
!76 = !DIEnumerator(name: "CURLE_OBSOLETE50", value: 50)
!77 = !DIEnumerator(name: "CURLE_PEER_FAILED_VERIFICATION", value: 51)
!78 = !DIEnumerator(name: "CURLE_GOT_NOTHING", value: 52)
!79 = !DIEnumerator(name: "CURLE_SSL_ENGINE_NOTFOUND", value: 53)
!80 = !DIEnumerator(name: "CURLE_SSL_ENGINE_SETFAILED", value: 54)
!81 = !DIEnumerator(name: "CURLE_SEND_ERROR", value: 55)
!82 = !DIEnumerator(name: "CURLE_RECV_ERROR", value: 56)
!83 = !DIEnumerator(name: "CURLE_OBSOLETE57", value: 57)
!84 = !DIEnumerator(name: "CURLE_SSL_CERTPROBLEM", value: 58)
!85 = !DIEnumerator(name: "CURLE_SSL_CIPHER", value: 59)
!86 = !DIEnumerator(name: "CURLE_SSL_CACERT", value: 60)
!87 = !DIEnumerator(name: "CURLE_BAD_CONTENT_ENCODING", value: 61)
!88 = !DIEnumerator(name: "CURLE_LDAP_INVALID_URL", value: 62)
!89 = !DIEnumerator(name: "CURLE_FILESIZE_EXCEEDED", value: 63)
!90 = !DIEnumerator(name: "CURLE_USE_SSL_FAILED", value: 64)
!91 = !DIEnumerator(name: "CURLE_SEND_FAIL_REWIND", value: 65)
!92 = !DIEnumerator(name: "CURLE_SSL_ENGINE_INITFAILED", value: 66)
!93 = !DIEnumerator(name: "CURLE_LOGIN_DENIED", value: 67)
!94 = !DIEnumerator(name: "CURLE_TFTP_NOTFOUND", value: 68)
!95 = !DIEnumerator(name: "CURLE_TFTP_PERM", value: 69)
!96 = !DIEnumerator(name: "CURLE_REMOTE_DISK_FULL", value: 70)
!97 = !DIEnumerator(name: "CURLE_TFTP_ILLEGAL", value: 71)
!98 = !DIEnumerator(name: "CURLE_TFTP_UNKNOWNID", value: 72)
!99 = !DIEnumerator(name: "CURLE_REMOTE_FILE_EXISTS", value: 73)
!100 = !DIEnumerator(name: "CURLE_TFTP_NOSUCHUSER", value: 74)
!101 = !DIEnumerator(name: "CURLE_CONV_FAILED", value: 75)
!102 = !DIEnumerator(name: "CURLE_CONV_REQD", value: 76)
!103 = !DIEnumerator(name: "CURLE_SSL_CACERT_BADFILE", value: 77)
!104 = !DIEnumerator(name: "CURLE_REMOTE_FILE_NOT_FOUND", value: 78)
!105 = !DIEnumerator(name: "CURLE_SSH", value: 79)
!106 = !DIEnumerator(name: "CURLE_SSL_SHUTDOWN_FAILED", value: 80)
!107 = !DIEnumerator(name: "CURLE_AGAIN", value: 81)
!108 = !DIEnumerator(name: "CURLE_SSL_CRL_BADFILE", value: 82)
!109 = !DIEnumerator(name: "CURLE_SSL_ISSUER_ERROR", value: 83)
!110 = !DIEnumerator(name: "CURLE_FTP_PRET_FAILED", value: 84)
!111 = !DIEnumerator(name: "CURLE_RTSP_CSEQ_ERROR", value: 85)
!112 = !DIEnumerator(name: "CURLE_RTSP_SESSION_ERROR", value: 86)
!113 = !DIEnumerator(name: "CURLE_FTP_BAD_FILE_LIST", value: 87)
!114 = !DIEnumerator(name: "CURLE_CHUNK_FAILED", value: 88)
!115 = !DIEnumerator(name: "CURLE_NO_CONNECTION_AVAILABLE", value: 89)
!116 = !DIEnumerator(name: "CURLE_SSL_PINNEDPUBKEYNOTMATCH", value: 90)
!117 = !DIEnumerator(name: "CURLE_SSL_INVALIDCERTSTATUS", value: 91)
!118 = !DIEnumerator(name: "CURLE_HTTP2_STREAM", value: 92)
!119 = !DIEnumerator(name: "CURL_LAST", value: 93)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 267, size: 32, align: 32, elements: !122)
!121 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/urldata.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "ssl_connection_none", value: 0)
!124 = !DIEnumerator(name: "ssl_connection_negotiating", value: 1)
!125 = !DIEnumerator(name: "ssl_connection_complete", value: 2)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 258, size: 32, align: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132, !133}
!128 = !DIEnumerator(name: "ssl_connect_1", value: 0)
!129 = !DIEnumerator(name: "ssl_connect_2", value: 1)
!130 = !DIEnumerator(name: "ssl_connect_2_reading", value: 2)
!131 = !DIEnumerator(name: "ssl_connect_2_writing", value: 3)
!132 = !DIEnumerator(name: "ssl_connect_3", value: 4)
!133 = !DIEnumerator(name: "ssl_connect_done", value: 5)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !135, line: 42, size: 32, align: 32, elements: !136)
!135 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ftp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!137 = !DIEnumerator(name: "FTP_STOP", value: 0)
!138 = !DIEnumerator(name: "FTP_WAIT220", value: 1)
!139 = !DIEnumerator(name: "FTP_AUTH", value: 2)
!140 = !DIEnumerator(name: "FTP_USER", value: 3)
!141 = !DIEnumerator(name: "FTP_PASS", value: 4)
!142 = !DIEnumerator(name: "FTP_ACCT", value: 5)
!143 = !DIEnumerator(name: "FTP_PBSZ", value: 6)
!144 = !DIEnumerator(name: "FTP_PROT", value: 7)
!145 = !DIEnumerator(name: "FTP_CCC", value: 8)
!146 = !DIEnumerator(name: "FTP_PWD", value: 9)
!147 = !DIEnumerator(name: "FTP_SYST", value: 10)
!148 = !DIEnumerator(name: "FTP_NAMEFMT", value: 11)
!149 = !DIEnumerator(name: "FTP_QUOTE", value: 12)
!150 = !DIEnumerator(name: "FTP_RETR_PREQUOTE", value: 13)
!151 = !DIEnumerator(name: "FTP_STOR_PREQUOTE", value: 14)
!152 = !DIEnumerator(name: "FTP_POSTQUOTE", value: 15)
!153 = !DIEnumerator(name: "FTP_CWD", value: 16)
!154 = !DIEnumerator(name: "FTP_MKD", value: 17)
!155 = !DIEnumerator(name: "FTP_MDTM", value: 18)
!156 = !DIEnumerator(name: "FTP_TYPE", value: 19)
!157 = !DIEnumerator(name: "FTP_LIST_TYPE", value: 20)
!158 = !DIEnumerator(name: "FTP_RETR_TYPE", value: 21)
!159 = !DIEnumerator(name: "FTP_STOR_TYPE", value: 22)
!160 = !DIEnumerator(name: "FTP_SIZE", value: 23)
!161 = !DIEnumerator(name: "FTP_RETR_SIZE", value: 24)
!162 = !DIEnumerator(name: "FTP_STOR_SIZE", value: 25)
!163 = !DIEnumerator(name: "FTP_REST", value: 26)
!164 = !DIEnumerator(name: "FTP_RETR_REST", value: 27)
!165 = !DIEnumerator(name: "FTP_PORT", value: 28)
!166 = !DIEnumerator(name: "FTP_PRET", value: 29)
!167 = !DIEnumerator(name: "FTP_PASV", value: 30)
!168 = !DIEnumerator(name: "FTP_LIST", value: 31)
!169 = !DIEnumerator(name: "FTP_RETR", value: 32)
!170 = !DIEnumerator(name: "FTP_STOR", value: 33)
!171 = !DIEnumerator(name: "FTP_QUIT", value: 34)
!172 = !DIEnumerator(name: "FTP_LAST", value: 35)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !174, line: 31, size: 32, align: 32, elements: !175)
!174 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/imap.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!176 = !DIEnumerator(name: "IMAP_STOP", value: 0)
!177 = !DIEnumerator(name: "IMAP_SERVERGREET", value: 1)
!178 = !DIEnumerator(name: "IMAP_CAPABILITY", value: 2)
!179 = !DIEnumerator(name: "IMAP_STARTTLS", value: 3)
!180 = !DIEnumerator(name: "IMAP_UPGRADETLS", value: 4)
!181 = !DIEnumerator(name: "IMAP_AUTHENTICATE", value: 5)
!182 = !DIEnumerator(name: "IMAP_LOGIN", value: 6)
!183 = !DIEnumerator(name: "IMAP_LIST", value: 7)
!184 = !DIEnumerator(name: "IMAP_SELECT", value: 8)
!185 = !DIEnumerator(name: "IMAP_FETCH", value: 9)
!186 = !DIEnumerator(name: "IMAP_FETCH_FINAL", value: 10)
!187 = !DIEnumerator(name: "IMAP_APPEND", value: 11)
!188 = !DIEnumerator(name: "IMAP_APPEND_FINAL", value: 12)
!189 = !DIEnumerator(name: "IMAP_SEARCH", value: 13)
!190 = !DIEnumerator(name: "IMAP_LOGOUT", value: 14)
!191 = !DIEnumerator(name: "IMAP_LAST", value: 15)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 58, size: 32, align: 32, elements: !194)
!193 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_sasl.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!194 = !{!195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211}
!195 = !DIEnumerator(name: "SASL_STOP", value: 0)
!196 = !DIEnumerator(name: "SASL_PLAIN", value: 1)
!197 = !DIEnumerator(name: "SASL_LOGIN", value: 2)
!198 = !DIEnumerator(name: "SASL_LOGIN_PASSWD", value: 3)
!199 = !DIEnumerator(name: "SASL_EXTERNAL", value: 4)
!200 = !DIEnumerator(name: "SASL_CRAMMD5", value: 5)
!201 = !DIEnumerator(name: "SASL_DIGESTMD5", value: 6)
!202 = !DIEnumerator(name: "SASL_DIGESTMD5_RESP", value: 7)
!203 = !DIEnumerator(name: "SASL_NTLM", value: 8)
!204 = !DIEnumerator(name: "SASL_NTLM_TYPE2MSG", value: 9)
!205 = !DIEnumerator(name: "SASL_GSSAPI", value: 10)
!206 = !DIEnumerator(name: "SASL_GSSAPI_TOKEN", value: 11)
!207 = !DIEnumerator(name: "SASL_GSSAPI_NO_DATA", value: 12)
!208 = !DIEnumerator(name: "SASL_OAUTH2", value: 13)
!209 = !DIEnumerator(name: "SASL_OAUTH2_RESP", value: 14)
!210 = !DIEnumerator(name: "SASL_CANCEL", value: 15)
!211 = !DIEnumerator(name: "SASL_FINAL", value: 16)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !213, line: 31, size: 32, align: 32, elements: !214)
!213 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pop3.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226}
!215 = !DIEnumerator(name: "POP3_STOP", value: 0)
!216 = !DIEnumerator(name: "POP3_SERVERGREET", value: 1)
!217 = !DIEnumerator(name: "POP3_CAPA", value: 2)
!218 = !DIEnumerator(name: "POP3_STARTTLS", value: 3)
!219 = !DIEnumerator(name: "POP3_UPGRADETLS", value: 4)
!220 = !DIEnumerator(name: "POP3_AUTH", value: 5)
!221 = !DIEnumerator(name: "POP3_APOP", value: 6)
!222 = !DIEnumerator(name: "POP3_USER", value: 7)
!223 = !DIEnumerator(name: "POP3_PASS", value: 8)
!224 = !DIEnumerator(name: "POP3_COMMAND", value: 9)
!225 = !DIEnumerator(name: "POP3_QUIT", value: 10)
!226 = !DIEnumerator(name: "POP3_LAST", value: 11)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 31, size: 32, align: 32, elements: !229)
!228 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smtp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!229 = !{!230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243}
!230 = !DIEnumerator(name: "SMTP_STOP", value: 0)
!231 = !DIEnumerator(name: "SMTP_SERVERGREET", value: 1)
!232 = !DIEnumerator(name: "SMTP_EHLO", value: 2)
!233 = !DIEnumerator(name: "SMTP_HELO", value: 3)
!234 = !DIEnumerator(name: "SMTP_STARTTLS", value: 4)
!235 = !DIEnumerator(name: "SMTP_UPGRADETLS", value: 5)
!236 = !DIEnumerator(name: "SMTP_AUTH", value: 6)
!237 = !DIEnumerator(name: "SMTP_COMMAND", value: 7)
!238 = !DIEnumerator(name: "SMTP_MAIL", value: 8)
!239 = !DIEnumerator(name: "SMTP_RCPT", value: 9)
!240 = !DIEnumerator(name: "SMTP_DATA", value: 10)
!241 = !DIEnumerator(name: "SMTP_POSTDATA", value: 11)
!242 = !DIEnumerator(name: "SMTP_QUIT", value: 12)
!243 = !DIEnumerator(name: "SMTP_LAST", value: 13)
!244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "smb_conn_state", file: !245, line: 25, size: 32, align: 32, elements: !246)
!245 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/smb.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIEnumerator(name: "SMB_NOT_CONNECTED", value: 0)
!248 = !DIEnumerator(name: "SMB_CONNECTING", value: 1)
!249 = !DIEnumerator(name: "SMB_NEGOTIATE", value: 2)
!250 = !DIEnumerator(name: "SMB_SETUP", value: 3)
!251 = !DIEnumerator(name: "SMB_CONNECTED", value: 4)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !253, file: !121, line: 1133, size: 32, align: 32, elements: !1712)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectdata", file: !121, line: 895, size: 13440, align: 64, elements: !254)
!254 = !{!255, !1293, !1305, !1306, !1307, !1308, !1309, !1335, !1336, !1340, !1341, !1342, !1343, !1350, !1351, !1352, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1379, !1380, !1382, !1389, !1395, !1404, !1405, !1406, !1407, !1408, !1444, !1445, !1446, !1447, !1501, !1502, !1503, !1504, !1505, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1531, !1532, !1533, !1534, !1697, !1698, !1699, !1700, !1701, !1702, !1704, !1711}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !253, file: !121, line: 899, baseType: !256, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64, align: 64)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_easy", file: !121, line: 1801, size: 160192, align: 64, elements: !258)
!258 = !{!259, !260, !261, !263, !288, !290, !313, !319, !320, !374, !450, !451, !551, !621, !1081, !1090, !1091, !1127, !1219, !1242, !1272, !1292}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !257, file: !121, line: 1803, baseType: !256, size: 64, align: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !257, file: !121, line: 1804, baseType: !256, size: 64, align: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "easy_conn", scope: !257, file: !121, line: 1806, baseType: !262, size: 64, align: 64, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !257, file: !121, line: 1808, baseType: !264, size: 32, align: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMstate", file: !265, line: 59, baseType: !266)
!265 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/multihandle.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 35, size: 32, align: 32, elements: !267)
!267 = !{!268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287}
!268 = !DIEnumerator(name: "CURLM_STATE_INIT", value: 0)
!269 = !DIEnumerator(name: "CURLM_STATE_CONNECT_PEND", value: 1)
!270 = !DIEnumerator(name: "CURLM_STATE_CONNECT", value: 2)
!271 = !DIEnumerator(name: "CURLM_STATE_WAITRESOLVE", value: 3)
!272 = !DIEnumerator(name: "CURLM_STATE_WAITCONNECT", value: 4)
!273 = !DIEnumerator(name: "CURLM_STATE_WAITPROXYCONNECT", value: 5)
!274 = !DIEnumerator(name: "CURLM_STATE_SENDPROTOCONNECT", value: 6)
!275 = !DIEnumerator(name: "CURLM_STATE_PROTOCONNECT", value: 7)
!276 = !DIEnumerator(name: "CURLM_STATE_WAITDO", value: 8)
!277 = !DIEnumerator(name: "CURLM_STATE_DO", value: 9)
!278 = !DIEnumerator(name: "CURLM_STATE_DOING", value: 10)
!279 = !DIEnumerator(name: "CURLM_STATE_DO_MORE", value: 11)
!280 = !DIEnumerator(name: "CURLM_STATE_DO_DONE", value: 12)
!281 = !DIEnumerator(name: "CURLM_STATE_WAITPERFORM", value: 13)
!282 = !DIEnumerator(name: "CURLM_STATE_PERFORM", value: 14)
!283 = !DIEnumerator(name: "CURLM_STATE_TOOFAST", value: 15)
!284 = !DIEnumerator(name: "CURLM_STATE_DONE", value: 16)
!285 = !DIEnumerator(name: "CURLM_STATE_COMPLETED", value: 17)
!286 = !DIEnumerator(name: "CURLM_STATE_MSGSENT", value: 18)
!287 = !DIEnumerator(name: "CURLM_STATE_LAST", value: 19)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !257, file: !121, line: 1809, baseType: !289, size: 32, align: 32, offset: 224)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLcode", file: !15, line: 561, baseType: !24)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !257, file: !121, line: 1811, baseType: !291, size: 192, align: 64, offset: 256)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_message", file: !265, line: 27, size: 192, align: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "extmsg", scope: !291, file: !265, line: 29, baseType: !294, size: 192, align: 64)
!294 = !DICompositeType(tag: DW_TAG_structure_type, name: "CURLMsg", file: !295, line: 93, size: 192, align: 64, elements: !296)
!295 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/multi.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!296 = !{!297, !304, !307}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !294, file: !295, line: 94, baseType: !298, size: 32, align: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMSG", file: !295, line: 91, baseType: !299)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !295, line: 86, size: 32, align: 32, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIEnumerator(name: "CURLMSG_NONE", value: 0)
!302 = !DIEnumerator(name: "CURLMSG_DONE", value: 1)
!303 = !DIEnumerator(name: "CURLMSG_LAST", value: 2)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "easy_handle", scope: !294, file: !295, line: 95, baseType: !305, size: 64, align: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURL", file: !15, line: 100, baseType: !257)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !294, file: !295, line: 99, baseType: !308, size: 64, align: 64, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_union_type, scope: !294, file: !295, line: 96, size: 64, align: 64, elements: !309)
!309 = !{!310, !312}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "whatever", scope: !308, file: !295, line: 97, baseType: !311, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !308, file: !295, line: 98, baseType: !289, size: 32, align: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "sockets", scope: !257, file: !121, line: 1817, baseType: !314, size: 160, align: 32, offset: 448)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 160, align: 32, elements: !317)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_t", file: !15, line: 131, baseType: !316)
!316 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!317 = !{!318}
!318 = !DISubrange(count: 5)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "numsocks", scope: !257, file: !121, line: 1818, baseType: !316, size: 32, align: 32, offset: 608)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "dns", scope: !257, file: !121, line: 1820, baseType: !321, size: 128, align: 64, offset: 640)
!321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Names", file: !121, line: 1781, size: 128, align: 64, elements: !322)
!322 = !{!323, !367}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !321, file: !121, line: 1782, baseType: !324, size: 64, align: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_hash", file: !326, line: 46, size: 384, align: 64, elements: !327)
!326 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hash.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!327 = !{!328, !350, !355, !360, !365, !366}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !325, file: !326, line: 47, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist", file: !331, line: 37, size: 256, align: 64, elements: !332)
!331 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/llist.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!332 = !{!333, !340, !341, !346}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !330, file: !331, line: 38, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_llist_element", file: !331, line: 30, size: 192, align: 64, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !335, file: !331, line: 31, baseType: !311, size: 64, align: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !331, line: 33, baseType: !334, size: 64, align: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !335, file: !331, line: 34, baseType: !334, size: 64, align: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !330, file: !331, line: 39, baseType: !334, size: 64, align: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !330, file: !331, line: 41, baseType: !342, size: 64, align: 64, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_llist_dtor", file: !331, line: 28, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{null, !311, !311}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !331, line: 43, baseType: !347, size: 64, align: 64, offset: 192)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !348, line: 62, baseType: !349)
!348 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!349 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "hash_func", scope: !325, file: !326, line: 50, baseType: !351, size: 64, align: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_function", file: !326, line: 32, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!347, !311, !347, !347}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "comp_func", scope: !325, file: !326, line: 53, baseType: !356, size: 64, align: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "comp_function", file: !326, line: 39, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64, align: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!347, !311, !347, !311, !347}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "dtor", scope: !325, file: !326, line: 54, baseType: !361, size: 64, align: 64, offset: 192)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_hash_dtor", file: !326, line: 44, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64, align: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{null, !311}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !325, file: !326, line: 55, baseType: !316, size: 32, align: 32, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !325, file: !326, line: 56, baseType: !347, size: 64, align: 64, offset: 320)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hostcachetype", scope: !321, file: !121, line: 1788, baseType: !368, size: 32, align: 32, offset: 64)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !321, file: !121, line: 1783, size: 32, align: 32, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIEnumerator(name: "HCACHE_NONE", value: 0)
!371 = !DIEnumerator(name: "HCACHE_GLOBAL", value: 1)
!372 = !DIEnumerator(name: "HCACHE_MULTI", value: 2)
!373 = !DIEnumerator(name: "HCACHE_SHARED", value: 3)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !257, file: !121, line: 1821, baseType: !375, size: 64, align: 64, offset: 768)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64, align: 64)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_multi", file: !265, line: 70, size: 3840, align: 64, elements: !377)
!377 = !{!378, !380, !381, !382, !383, !384, !385, !386, !391, !392, !399, !400, !401, !420, !421, !422, !424, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !448, !449}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !376, file: !265, line: 73, baseType: !379, size: 64, align: 64)
!379 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "easyp", scope: !376, file: !265, line: 76, baseType: !256, size: 64, align: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "easylp", scope: !376, file: !265, line: 77, baseType: !256, size: 64, align: 64, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "num_easy", scope: !376, file: !265, line: 79, baseType: !316, size: 32, align: 32, offset: 192)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "num_alive", scope: !376, file: !265, line: 80, baseType: !316, size: 32, align: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "msglist", scope: !376, file: !265, line: 83, baseType: !330, size: 256, align: 64, offset: 256)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !376, file: !265, line: 85, baseType: !330, size: 256, align: 64, offset: 512)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "socket_cb", scope: !376, file: !265, line: 89, baseType: !387, size: 64, align: 64, offset: 768)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socket_callback", file: !295, line: 268, baseType: !388)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{!316, !305, !315, !316, !311, !311}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "socket_userp", scope: !376, file: !265, line: 90, baseType: !311, size: 64, align: 64, offset: 832)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "push_cb", scope: !376, file: !265, line: 93, baseType: !393, size: 64, align: 64, offset: 896)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_push_callback", file: !295, line: 429, baseType: !394)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!316, !305, !305, !347, !397, !311}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, align: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_pushheaders", file: !295, line: 422, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "push_userp", scope: !376, file: !265, line: 94, baseType: !311, size: 64, align: 64, offset: 960)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !376, file: !265, line: 97, baseType: !325, size: 384, align: 64, offset: 1024)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "timetree", scope: !376, file: !265, line: 101, baseType: !402, size: 64, align: 64, offset: 1408)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64, align: 64)
!403 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_tree", file: !404, line: 26, size: 448, align: 64, elements: !405)
!404 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/splay.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!405 = !{!406, !407, !408, !409, !410, !419}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !403, file: !404, line: 27, baseType: !402, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "larger", scope: !403, file: !404, line: 28, baseType: !402, size: 64, align: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "samen", scope: !403, file: !404, line: 29, baseType: !402, size: 64, align: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "samep", scope: !403, file: !404, line: 30, baseType: !402, size: 64, align: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !403, file: !404, line: 31, baseType: !411, size: 128, align: 64, offset: 256)
!411 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !412, line: 30, size: 128, align: 64, elements: !413)
!412 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !411, file: !412, line: 32, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !416, line: 139, baseType: !379)
!416 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !411, file: !412, line: 33, baseType: !418, size: 64, align: 64, offset: 64)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !416, line: 141, baseType: !379)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !403, file: !404, line: 32, baseType: !311, size: 64, align: 64, offset: 384)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sockhash", scope: !376, file: !265, line: 106, baseType: !325, size: 384, align: 64, offset: 1472)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining", scope: !376, file: !265, line: 109, baseType: !379, size: 64, align: 64, offset: 1856)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "recheckstate", scope: !376, file: !265, line: 111, baseType: !423, size: 8, align: 8, offset: 1920)
!423 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !376, file: !265, line: 114, baseType: !425, size: 640, align: 64, offset: 1984)
!425 = !DICompositeType(tag: DW_TAG_structure_type, name: "conncache", file: !426, line: 26, size: 640, align: 64, elements: !427)
!426 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/conncache.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!427 = !{!428, !429, !430, !431}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !425, file: !426, line: 27, baseType: !325, size: 384, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !425, file: !426, line: 28, baseType: !347, size: 64, align: 64, offset: 384)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next_connection_id", scope: !425, file: !426, line: 29, baseType: !379, size: 64, align: 64, offset: 448)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "last_cleanup", scope: !425, file: !426, line: 30, baseType: !411, size: 128, align: 64, offset: 512)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "closure_handle", scope: !376, file: !265, line: 118, baseType: !256, size: 64, align: 64, offset: 2624)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !376, file: !265, line: 120, baseType: !379, size: 64, align: 64, offset: 2688)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_connections", scope: !376, file: !265, line: 123, baseType: !379, size: 64, align: 64, offset: 2752)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_connections", scope: !376, file: !265, line: 126, baseType: !379, size: 64, align: 64, offset: 2816)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "max_pipeline_length", scope: !376, file: !265, line: 129, baseType: !379, size: 64, align: 64, offset: 2880)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "content_length_penalty_size", scope: !376, file: !265, line: 132, baseType: !379, size: 64, align: 64, offset: 2944)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_length_penalty_size", scope: !376, file: !265, line: 137, baseType: !379, size: 64, align: 64, offset: 3008)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_site_bl", scope: !376, file: !265, line: 141, baseType: !330, size: 256, align: 64, offset: 3072)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pipelining_server_bl", scope: !376, file: !265, line: 144, baseType: !330, size: 256, align: 64, offset: 3328)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "timer_cb", scope: !376, file: !265, line: 148, baseType: !442, size: 64, align: 64, offset: 3584)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_multi_timer_callback", file: !295, line: 285, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!316, !446, !379, !311}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLM", file: !295, line: 56, baseType: !376)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "timer_userp", scope: !376, file: !265, line: 149, baseType: !311, size: 64, align: 64, offset: 3648)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "timer_lastcall", scope: !376, file: !265, line: 150, baseType: !411, size: 128, align: 64, offset: 3712)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "multi_easy", scope: !257, file: !121, line: 1824, baseType: !375, size: 64, align: 64, offset: 832)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "share", scope: !257, file: !121, line: 1827, baseType: !452, size: 64, align: 64, offset: 896)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64, align: 64)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_share", file: !454, line: 39, size: 896, align: 64, elements: !455)
!454 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/share.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!455 = !{!456, !458, !460, !482, !487, !488, !489, !520, !549, !550}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !453, file: !454, line: 40, baseType: !457, size: 32, align: 32)
!457 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !453, file: !454, line: 41, baseType: !459, size: 32, align: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !457)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "lockfunc", scope: !453, file: !454, line: 43, baseType: !461, size: 64, align: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_function", file: !15, line: 2365, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{null, !305, !465, !475, !311}
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_data", file: !15, line: 2355, baseType: !466)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2343, size: 32, align: 32, elements: !467)
!467 = !{!468, !469, !470, !471, !472, !473, !474}
!468 = !DIEnumerator(name: "CURL_LOCK_DATA_NONE", value: 0)
!469 = !DIEnumerator(name: "CURL_LOCK_DATA_SHARE", value: 1)
!470 = !DIEnumerator(name: "CURL_LOCK_DATA_COOKIE", value: 2)
!471 = !DIEnumerator(name: "CURL_LOCK_DATA_DNS", value: 3)
!472 = !DIEnumerator(name: "CURL_LOCK_DATA_SSL_SESSION", value: 4)
!473 = !DIEnumerator(name: "CURL_LOCK_DATA_CONNECT", value: 5)
!474 = !DIEnumerator(name: "CURL_LOCK_DATA_LAST", value: 6)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_lock_access", file: !15, line: 2363, baseType: !476)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2358, size: 32, align: 32, elements: !477)
!477 = !{!478, !479, !480, !481}
!478 = !DIEnumerator(name: "CURL_LOCK_ACCESS_NONE", value: 0)
!479 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SHARED", value: 1)
!480 = !DIEnumerator(name: "CURL_LOCK_ACCESS_SINGLE", value: 2)
!481 = !DIEnumerator(name: "CURL_LOCK_ACCESS_LAST", value: 3)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "unlockfunc", scope: !453, file: !454, line: 44, baseType: !483, size: 64, align: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_unlock_function", file: !15, line: 2369, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64, align: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{null, !305, !465, !311}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "clientdata", scope: !453, file: !454, line: 45, baseType: !311, size: 64, align: 64, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "hostcache", scope: !453, file: !454, line: 47, baseType: !325, size: 384, align: 64, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !453, file: !454, line: 49, baseType: !490, size: 64, align: 64, offset: 640)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "CookieInfo", file: !492, line: 48, size: 320, align: 64, elements: !493)
!492 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/cookie.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!493 = !{!494, !516, !517, !518, !519}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !491, file: !492, line: 50, baseType: !495, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cookie", file: !492, line: 28, size: 768, align: 64, elements: !497)
!497 = !{!498, !499, !502, !503, !504, !505, !506, !509, !510, !511, !512, !513, !514, !515}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !496, file: !492, line: 29, baseType: !495, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !496, file: !492, line: 30, baseType: !500, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64, align: 64)
!501 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !496, file: !492, line: 31, baseType: !500, size: 64, align: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !496, file: !492, line: 32, baseType: !500, size: 64, align: 64, offset: 192)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "spath", scope: !496, file: !492, line: 33, baseType: !500, size: 64, align: 64, offset: 256)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !496, file: !492, line: 34, baseType: !500, size: 64, align: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !496, file: !492, line: 35, baseType: !507, size: 64, align: 64, offset: 384)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_off_t", file: !508, line: 216, baseType: !379)
!508 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/include/curl/curlbuild.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!509 = !DIDerivedType(tag: DW_TAG_member, name: "expirestr", scope: !496, file: !492, line: 36, baseType: !500, size: 64, align: 64, offset: 448)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "tailmatch", scope: !496, file: !492, line: 37, baseType: !423, size: 8, align: 8, offset: 512)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !496, file: !492, line: 40, baseType: !500, size: 64, align: 64, offset: 576)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "maxage", scope: !496, file: !492, line: 41, baseType: !500, size: 64, align: 64, offset: 640)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "secure", scope: !496, file: !492, line: 43, baseType: !423, size: 8, align: 8, offset: 704)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "livecookie", scope: !496, file: !492, line: 44, baseType: !423, size: 8, align: 8, offset: 712)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "httponly", scope: !496, file: !492, line: 45, baseType: !423, size: 8, align: 8, offset: 720)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !491, file: !492, line: 52, baseType: !500, size: 64, align: 64, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !491, file: !492, line: 53, baseType: !423, size: 8, align: 8, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "numcookies", scope: !491, file: !492, line: 54, baseType: !379, size: 64, align: 64, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "newsession", scope: !491, file: !492, line: 55, baseType: !423, size: 8, align: 8, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "sslsession", scope: !453, file: !454, line: 52, baseType: !521, size: 64, align: 64, offset: 704)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64, align: 64)
!522 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_ssl_session", file: !121, line: 397, size: 1088, align: 64, elements: !523)
!523 = !{!524, !525, !526, !529, !530, !531, !532, !533, !534}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !121, line: 398, baseType: !500, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !522, file: !121, line: 399, baseType: !500, size: 64, align: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !522, file: !121, line: 400, baseType: !527, size: 64, align: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !522, file: !121, line: 401, baseType: !311, size: 64, align: 64, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "idsize", scope: !522, file: !121, line: 402, baseType: !347, size: 64, align: 64, offset: 256)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "age", scope: !522, file: !121, line: 403, baseType: !379, size: 64, align: 64, offset: 320)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !522, file: !121, line: 404, baseType: !316, size: 32, align: 32, offset: 384)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !522, file: !121, line: 405, baseType: !316, size: 32, align: 32, offset: 416)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !522, file: !121, line: 406, baseType: !535, size: 640, align: 64, offset: 448)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_primary_config", file: !121, line: 351, size: 640, align: 64, elements: !536)
!536 = !{!537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !535, file: !121, line: 352, baseType: !379, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "version_max", scope: !535, file: !121, line: 353, baseType: !379, size: 64, align: 64, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "verifypeer", scope: !535, file: !121, line: 354, baseType: !423, size: 8, align: 8, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "verifyhost", scope: !535, file: !121, line: 355, baseType: !423, size: 8, align: 8, offset: 136)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "verifystatus", scope: !535, file: !121, line: 356, baseType: !423, size: 8, align: 8, offset: 144)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "CApath", scope: !535, file: !121, line: 357, baseType: !500, size: 64, align: 64, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "CAfile", scope: !535, file: !121, line: 358, baseType: !500, size: 64, align: 64, offset: 256)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "clientcert", scope: !535, file: !121, line: 359, baseType: !500, size: 64, align: 64, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "random_file", scope: !535, file: !121, line: 360, baseType: !500, size: 64, align: 64, offset: 384)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "egdsocket", scope: !535, file: !121, line: 361, baseType: !500, size: 64, align: 64, offset: 448)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_list", scope: !535, file: !121, line: 362, baseType: !500, size: 64, align: 64, offset: 512)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "sessionid", scope: !535, file: !121, line: 363, baseType: !423, size: 8, align: 8, offset: 576)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !453, file: !454, line: 53, baseType: !347, size: 64, align: 64, offset: 768)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !453, file: !454, line: 54, baseType: !379, size: 64, align: 64, offset: 832)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !257, file: !121, line: 1828, baseType: !552, size: 2496, align: 64, offset: 960)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "SingleRequest", file: !121, line: 658, size: 2496, align: 64, elements: !553)
!553 = !{!554, !555, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !590, !597, !598, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !615, !616, !617, !618, !619, !620}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !552, file: !121, line: 659, baseType: !507, size: 64, align: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "bytecountp", scope: !552, file: !121, line: 660, baseType: !556, size: 64, align: 64, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64, align: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "maxdownload", scope: !552, file: !121, line: 662, baseType: !507, size: 64, align: 64, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecountp", scope: !552, file: !121, line: 664, baseType: !556, size: 64, align: 64, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "bytecount", scope: !552, file: !121, line: 666, baseType: !507, size: 64, align: 64, offset: 256)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "writebytecount", scope: !552, file: !121, line: 667, baseType: !507, size: 64, align: 64, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "headerbytecount", scope: !552, file: !121, line: 669, baseType: !379, size: 64, align: 64, offset: 384)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "deductheadercount", scope: !552, file: !121, line: 670, baseType: !379, size: 64, align: 64, offset: 448)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !552, file: !121, line: 676, baseType: !411, size: 128, align: 64, offset: 512)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !552, file: !121, line: 677, baseType: !411, size: 128, align: 64, offset: 640)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !552, file: !121, line: 678, baseType: !423, size: 8, align: 8, offset: 768)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "badheader", scope: !552, file: !121, line: 684, baseType: !567, size: 32, align: 32, offset: 800)
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !552, file: !121, line: 679, size: 32, align: 32, elements: !568)
!568 = !{!569, !570, !571}
!569 = !DIEnumerator(name: "HEADER_NORMAL", value: 0)
!570 = !DIEnumerator(name: "HEADER_PARTHEADER", value: 1)
!571 = !DIEnumerator(name: "HEADER_ALLBAD", value: 2)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "headerline", scope: !552, file: !121, line: 686, baseType: !316, size: 32, align: 32, offset: 832)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "hbufp", scope: !552, file: !121, line: 688, baseType: !500, size: 64, align: 64, offset: 896)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "hbuflen", scope: !552, file: !121, line: 689, baseType: !347, size: 64, align: 64, offset: 960)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !552, file: !121, line: 690, baseType: !500, size: 64, align: 64, offset: 1024)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "str_start", scope: !552, file: !121, line: 691, baseType: !500, size: 64, align: 64, offset: 1088)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "end_ptr", scope: !552, file: !121, line: 692, baseType: !500, size: 64, align: 64, offset: 1152)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !552, file: !121, line: 693, baseType: !500, size: 64, align: 64, offset: 1216)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "content_range", scope: !552, file: !121, line: 694, baseType: !423, size: 8, align: 8, offset: 1280)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !552, file: !121, line: 695, baseType: !507, size: 64, align: 64, offset: 1344)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !552, file: !121, line: 697, baseType: !316, size: 32, align: 32, offset: 1408)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "start100", scope: !552, file: !121, line: 699, baseType: !411, size: 128, align: 64, offset: 1472)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "exp100", scope: !552, file: !121, line: 700, baseType: !584, size: 32, align: 32, offset: 1600)
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expect100", file: !121, line: 636, size: 32, align: 32, elements: !585)
!585 = !{!586, !587, !588, !589}
!586 = !DIEnumerator(name: "EXP100_SEND_DATA", value: 0)
!587 = !DIEnumerator(name: "EXP100_AWAITING_CONTINUE", value: 1)
!588 = !DIEnumerator(name: "EXP100_SENDING_REQUEST", value: 2)
!589 = !DIEnumerator(name: "EXP100_FAILED", value: 3)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "upgr101", scope: !552, file: !121, line: 701, baseType: !591, size: 32, align: 32, offset: 1632)
!591 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "upgrade101", file: !121, line: 644, size: 32, align: 32, elements: !592)
!592 = !{!593, !594, !595, !596}
!593 = !DIEnumerator(name: "UPGR101_INIT", value: 0)
!594 = !DIEnumerator(name: "UPGR101_REQUESTED", value: 1)
!595 = !DIEnumerator(name: "UPGR101_RECEIVED", value: 2)
!596 = !DIEnumerator(name: "UPGR101_WORKING", value: 3)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "auto_decoding", scope: !552, file: !121, line: 703, baseType: !316, size: 32, align: 32, offset: 1664)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "timeofdoc", scope: !552, file: !121, line: 715, baseType: !599, size: 64, align: 64, offset: 1728)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !600, line: 75, baseType: !415)
!600 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!601 = !DIDerivedType(tag: DW_TAG_member, name: "bodywrites", scope: !552, file: !121, line: 716, baseType: !379, size: 64, align: 64, offset: 1792)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !552, file: !121, line: 718, baseType: !500, size: 64, align: 64, offset: 1856)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuf", scope: !552, file: !121, line: 719, baseType: !500, size: 64, align: 64, offset: 1920)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !552, file: !121, line: 720, baseType: !315, size: 32, align: 32, offset: 1984)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "keepon", scope: !552, file: !121, line: 722, baseType: !316, size: 32, align: 32, offset: 2016)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "upload_done", scope: !552, file: !121, line: 724, baseType: !423, size: 8, align: 8, offset: 2048)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ignorebody", scope: !552, file: !121, line: 727, baseType: !423, size: 8, align: 8, offset: 2056)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !552, file: !121, line: 728, baseType: !423, size: 8, align: 8, offset: 2064)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !552, file: !121, line: 731, baseType: !500, size: 64, align: 64, offset: 2112)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "newurl", scope: !552, file: !121, line: 733, baseType: !500, size: 64, align: 64, offset: 2176)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "upload_present", scope: !552, file: !121, line: 738, baseType: !612, size: 64, align: 64, offset: 2240)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !613, line: 109, baseType: !614)
!613 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !416, line: 172, baseType: !379)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "upload_fromhere", scope: !552, file: !121, line: 744, baseType: !500, size: 64, align: 64, offset: 2304)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !552, file: !121, line: 746, baseType: !423, size: 8, align: 8, offset: 2368)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "upload_chunky", scope: !552, file: !121, line: 747, baseType: !423, size: 8, align: 8, offset: 2376)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "getheader", scope: !552, file: !121, line: 749, baseType: !423, size: 8, align: 8, offset: 2384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "forbidchunk", scope: !552, file: !121, line: 751, baseType: !423, size: 8, align: 8, offset: 2392)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "protop", scope: !552, file: !121, line: 755, baseType: !311, size: 64, align: 64, offset: 2432)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !257, file: !121, line: 1829, baseType: !622, size: 13760, align: 64, offset: 3456)
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "UserDefined", file: !121, line: 1558, size: 13760, align: 64, elements: !623)
!623 = !{!624, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !699, !700, !701, !702, !707, !708, !709, !711, !712, !713, !719, !724, !740, !752, !763, !764, !787, !788, !793, !794, !795, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !822, !823, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !862, !863, !875, !876, !898, !899, !903, !905, !906, !907, !908, !909, !910, !911, !918, !919, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !969, !970, !971, !972, !973, !974, !975, !976, !985, !993, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1017, !1018, !1019, !1020, !1021, !1022, !1039, !1040, !1041, !1048, !1053, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1080}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !622, file: !121, line: 1559, baseType: !625, size: 64, align: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64, align: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !627, line: 48, baseType: !628)
!627 = !DIFile(filename: "/usr/include/stdio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !629, line: 245, size: 1728, align: 64, elements: !630)
!629 = !DIFile(filename: "/usr/include/libio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !651, !652, !653, !654, !656, !658, !660, !664, !667, !669, !670, !671, !672, !673, !674, !675}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !628, file: !629, line: 246, baseType: !316, size: 32, align: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !628, file: !629, line: 251, baseType: !500, size: 64, align: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !628, file: !629, line: 252, baseType: !500, size: 64, align: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !628, file: !629, line: 253, baseType: !500, size: 64, align: 64, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !628, file: !629, line: 254, baseType: !500, size: 64, align: 64, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !628, file: !629, line: 255, baseType: !500, size: 64, align: 64, offset: 320)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !628, file: !629, line: 256, baseType: !500, size: 64, align: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !628, file: !629, line: 257, baseType: !500, size: 64, align: 64, offset: 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !628, file: !629, line: 258, baseType: !500, size: 64, align: 64, offset: 512)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !628, file: !629, line: 260, baseType: !500, size: 64, align: 64, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !628, file: !629, line: 261, baseType: !500, size: 64, align: 64, offset: 640)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !628, file: !629, line: 262, baseType: !500, size: 64, align: 64, offset: 704)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !628, file: !629, line: 264, baseType: !644, size: 64, align: 64, offset: 768)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64, align: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !629, line: 160, size: 192, align: 64, elements: !646)
!646 = !{!647, !648, !650}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !645, file: !629, line: 161, baseType: !644, size: 64, align: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !645, file: !629, line: 162, baseType: !649, size: 64, align: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64, align: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !645, file: !629, line: 166, baseType: !316, size: 32, align: 32, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !628, file: !629, line: 266, baseType: !649, size: 64, align: 64, offset: 832)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !628, file: !629, line: 268, baseType: !316, size: 32, align: 32, offset: 896)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !628, file: !629, line: 272, baseType: !316, size: 32, align: 32, offset: 928)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !628, file: !629, line: 274, baseType: !655, size: 64, align: 64, offset: 960)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !416, line: 131, baseType: !379)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !628, file: !629, line: 278, baseType: !657, size: 16, align: 16, offset: 1024)
!657 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !628, file: !629, line: 279, baseType: !659, size: 8, align: 8, offset: 1040)
!659 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !628, file: !629, line: 280, baseType: !661, size: 8, align: 8, offset: 1048)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 8, align: 8, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !628, file: !629, line: 284, baseType: !665, size: 64, align: 64, offset: 1088)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64, align: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !629, line: 154, baseType: null)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !628, file: !629, line: 293, baseType: !668, size: 64, align: 64, offset: 1152)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !416, line: 132, baseType: !379)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !628, file: !629, line: 302, baseType: !311, size: 64, align: 64, offset: 1216)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !628, file: !629, line: 303, baseType: !311, size: 64, align: 64, offset: 1280)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !628, file: !629, line: 304, baseType: !311, size: 64, align: 64, offset: 1344)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !628, file: !629, line: 305, baseType: !311, size: 64, align: 64, offset: 1408)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !628, file: !629, line: 306, baseType: !347, size: 64, align: 64, offset: 1472)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !628, file: !629, line: 308, baseType: !316, size: 32, align: 32, offset: 1536)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !628, file: !629, line: 310, baseType: !676, size: 160, align: 8, offset: 1568)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, align: 8, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 20)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "debugdata", scope: !622, file: !121, line: 1560, baseType: !311, size: 64, align: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuffer", scope: !622, file: !121, line: 1561, baseType: !500, size: 64, align: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "proxyport", scope: !622, file: !121, line: 1562, baseType: !379, size: 64, align: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !622, file: !121, line: 1565, baseType: !311, size: 64, align: 64, offset: 256)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "in_set", scope: !622, file: !121, line: 1566, baseType: !311, size: 64, align: 64, offset: 320)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "writeheader", scope: !622, file: !121, line: 1567, baseType: !311, size: 64, align: 64, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_out", scope: !622, file: !121, line: 1568, baseType: !311, size: 64, align: 64, offset: 448)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "use_port", scope: !622, file: !121, line: 1569, baseType: !379, size: 64, align: 64, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "httpauth", scope: !622, file: !121, line: 1570, baseType: !349, size: 64, align: 64, offset: 576)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauth", scope: !622, file: !121, line: 1571, baseType: !349, size: 64, align: 64, offset: 640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "followlocation", scope: !622, file: !121, line: 1572, baseType: !379, size: 64, align: 64, offset: 704)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "maxredirs", scope: !622, file: !121, line: 1573, baseType: !379, size: 64, align: 64, offset: 768)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "keep_post", scope: !622, file: !121, line: 1576, baseType: !316, size: 32, align: 32, offset: 832)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "free_referer", scope: !622, file: !121, line: 1578, baseType: !423, size: 8, align: 8, offset: 864)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "postfields", scope: !622, file: !121, line: 1580, baseType: !311, size: 64, align: 64, offset: 896)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !622, file: !121, line: 1581, baseType: !695, size: 64, align: 64, offset: 960)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_seek_callback", file: !15, line: 324, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64, align: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!316, !311, !507, !316}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "postfieldsize", scope: !622, file: !121, line: 1582, baseType: !507, size: 64, align: 64, offset: 1024)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !622, file: !121, line: 1585, baseType: !657, size: 16, align: 16, offset: 1088)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !622, file: !121, line: 1586, baseType: !316, size: 32, align: 32, offset: 1120)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_func", scope: !622, file: !121, line: 1588, baseType: !703, size: 64, align: 64, offset: 1152)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_write_callback", file: !15, line: 223, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64, align: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!347, !500, !347, !347, !311}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_header", scope: !622, file: !121, line: 1589, baseType: !703, size: 64, align: 64, offset: 1216)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "fwrite_rtp", scope: !622, file: !121, line: 1590, baseType: !703, size: 64, align: 64, offset: 1280)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func_set", scope: !622, file: !121, line: 1591, baseType: !710, size: 64, align: 64, offset: 1344)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_read_callback", file: !15, line: 335, baseType: !704)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "is_fread_set", scope: !622, file: !121, line: 1592, baseType: !316, size: 32, align: 32, offset: 1408)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "is_fwrite_set", scope: !622, file: !121, line: 1593, baseType: !316, size: 32, align: 32, offset: 1440)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "fprogress", scope: !622, file: !121, line: 1594, baseType: !714, size: 64, align: 64, offset: 1472)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_progress_callback", file: !15, line: 183, baseType: !715)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64, align: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!316, !311, !718, !718, !718, !718}
!718 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "fxferinfo", scope: !622, file: !121, line: 1595, baseType: !720, size: 64, align: 64, offset: 1536)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_xferinfo_callback", file: !15, line: 191, baseType: !721)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64, align: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!316, !311, !507, !507, !507, !507}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fdebug", scope: !622, file: !121, line: 1596, baseType: !725, size: 64, align: 64, offset: 1600)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_debug_callback", file: !15, line: 420, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64, align: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!316, !305, !729, !500, !347, !311}
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_infotype", file: !15, line: 418, baseType: !730)
!730 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 409, size: 32, align: 32, elements: !731)
!731 = !{!732, !733, !734, !735, !736, !737, !738, !739}
!732 = !DIEnumerator(name: "CURLINFO_TEXT", value: 0)
!733 = !DIEnumerator(name: "CURLINFO_HEADER_IN", value: 1)
!734 = !DIEnumerator(name: "CURLINFO_HEADER_OUT", value: 2)
!735 = !DIEnumerator(name: "CURLINFO_DATA_IN", value: 3)
!736 = !DIEnumerator(name: "CURLINFO_DATA_OUT", value: 4)
!737 = !DIEnumerator(name: "CURLINFO_SSL_DATA_IN", value: 5)
!738 = !DIEnumerator(name: "CURLINFO_SSL_DATA_OUT", value: 6)
!739 = !DIEnumerator(name: "CURLINFO_END", value: 7)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_func", scope: !622, file: !121, line: 1597, baseType: !741, size: 64, align: 64, offset: 1664)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ioctl_callback", file: !15, line: 388, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64, align: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!745, !305, !316, !311}
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlioerr", file: !15, line: 380, baseType: !746)
!746 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 375, size: 32, align: 32, elements: !747)
!747 = !{!748, !749, !750, !751}
!748 = !DIEnumerator(name: "CURLIOE_OK", value: 0)
!749 = !DIEnumerator(name: "CURLIOE_UNKNOWNCMD", value: 1)
!750 = !DIEnumerator(name: "CURLIOE_FAILRESTART", value: 2)
!751 = !DIEnumerator(name: "CURLIOE_LAST", value: 3)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "fsockopt", scope: !622, file: !121, line: 1598, baseType: !753, size: 64, align: 64, offset: 1728)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sockopt_callback", file: !15, line: 353, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64, align: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!316, !311, !315, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "curlsocktype", file: !15, line: 344, baseType: !758)
!758 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 340, size: 32, align: 32, elements: !759)
!759 = !{!760, !761, !762}
!760 = !DIEnumerator(name: "CURLSOCKTYPE_IPCXN", value: 0)
!761 = !DIEnumerator(name: "CURLSOCKTYPE_ACCEPT", value: 1)
!762 = !DIEnumerator(name: "CURLSOCKTYPE_LAST", value: 2)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "sockopt_client", scope: !622, file: !121, line: 1599, baseType: !311, size: 64, align: 64, offset: 1792)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "fopensocket", scope: !622, file: !121, line: 1600, baseType: !765, size: 64, align: 64, offset: 1856)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_opensocket_callback", file: !15, line: 368, baseType: !766)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64, align: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{!315, !311, !757, !769}
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64, align: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_sockaddr", file: !15, line: 357, size: 256, align: 32, elements: !771)
!771 = !{!772, !773, !774, !775, !776}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !770, file: !15, line: 358, baseType: !316, size: 32, align: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !770, file: !15, line: 359, baseType: !316, size: 32, align: 32, offset: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !770, file: !15, line: 360, baseType: !316, size: 32, align: 32, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "addrlen", scope: !770, file: !15, line: 361, baseType: !457, size: 32, align: 32, offset: 96)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !770, file: !15, line: 364, baseType: !777, size: 128, align: 16, offset: 128)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !778, line: 149, size: 128, align: 16, elements: !779)
!778 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!779 = !{!780, !783}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !777, file: !778, line: 151, baseType: !781, size: 16, align: 16)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !782, line: 28, baseType: !657)
!782 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!783 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !777, file: !778, line: 152, baseType: !784, size: 112, align: 8, offset: 16)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 112, align: 8, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 14)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "opensocket_client", scope: !622, file: !121, line: 1603, baseType: !311, size: 64, align: 64, offset: 1920)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !622, file: !121, line: 1604, baseType: !789, size: 64, align: 64, offset: 1984)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_closesocket_callback", file: !15, line: 373, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64, align: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!316, !311, !315}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !622, file: !121, line: 1606, baseType: !311, size: 64, align: 64, offset: 2048)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !622, file: !121, line: 1608, baseType: !311, size: 64, align: 64, offset: 2112)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "convfromnetwork", scope: !622, file: !121, line: 1611, baseType: !796, size: 64, align: 64, offset: 2176)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_conv_callback", file: !15, line: 637, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64, align: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!289, !500, !347}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "convtonetwork", scope: !622, file: !121, line: 1613, baseType: !796, size: 64, align: 64, offset: 2240)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "convfromutf8", scope: !622, file: !121, line: 1615, baseType: !796, size: 64, align: 64, offset: 2304)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "progress_client", scope: !622, file: !121, line: 1617, baseType: !311, size: 64, align: 64, offset: 2368)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_client", scope: !622, file: !121, line: 1618, baseType: !311, size: 64, align: 64, offset: 2432)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !622, file: !121, line: 1619, baseType: !379, size: 64, align: 64, offset: 2496)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "connecttimeout", scope: !622, file: !121, line: 1620, baseType: !379, size: 64, align: 64, offset: 2560)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "accepttimeout", scope: !622, file: !121, line: 1621, baseType: !379, size: 64, align: 64, offset: 2624)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "server_response_timeout", scope: !622, file: !121, line: 1622, baseType: !379, size: 64, align: 64, offset: 2688)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_blksize", scope: !622, file: !121, line: 1623, baseType: !379, size: 64, align: 64, offset: 2752)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "tftp_no_options", scope: !622, file: !121, line: 1624, baseType: !423, size: 8, align: 8, offset: 2816)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "filesize", scope: !622, file: !121, line: 1625, baseType: !507, size: 64, align: 64, offset: 2880)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_limit", scope: !622, file: !121, line: 1626, baseType: !379, size: 64, align: 64, offset: 2944)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed_time", scope: !622, file: !121, line: 1627, baseType: !379, size: 64, align: 64, offset: 3008)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_speed", scope: !622, file: !121, line: 1628, baseType: !507, size: 64, align: 64, offset: 3072)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_speed", scope: !622, file: !121, line: 1629, baseType: !507, size: 64, align: 64, offset: 3136)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "set_resume_from", scope: !622, file: !121, line: 1631, baseType: !507, size: 64, align: 64, offset: 3200)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !622, file: !121, line: 1632, baseType: !817, size: 64, align: 64, offset: 3264)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64, align: 64)
!818 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_slist", file: !15, line: 2176, size: 128, align: 64, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !818, file: !15, line: 2177, baseType: !500, size: 64, align: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !818, file: !15, line: 2178, baseType: !817, size: 64, align: 64, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "proxyheaders", scope: !622, file: !121, line: 1633, baseType: !817, size: 64, align: 64, offset: 3328)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "httppost", scope: !622, file: !121, line: 1634, baseType: !824, size: 64, align: 64, offset: 3392)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64, align: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_httppost", file: !15, line: 137, size: 896, align: 64, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !825, file: !15, line: 138, baseType: !824, size: 64, align: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !825, file: !15, line: 139, baseType: !500, size: 64, align: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "namelength", scope: !825, file: !15, line: 140, baseType: !379, size: 64, align: 64, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !825, file: !15, line: 141, baseType: !500, size: 64, align: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "contentslength", scope: !825, file: !15, line: 142, baseType: !379, size: 64, align: 64, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !825, file: !15, line: 144, baseType: !500, size: 64, align: 64, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "bufferlength", scope: !825, file: !15, line: 145, baseType: !379, size: 64, align: 64, offset: 384)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !825, file: !15, line: 146, baseType: !500, size: 64, align: 64, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "contentheader", scope: !825, file: !15, line: 147, baseType: !817, size: 64, align: 64, offset: 512)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "more", scope: !825, file: !15, line: 148, baseType: !824, size: 64, align: 64, offset: 576)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !825, file: !15, line: 151, baseType: !379, size: 64, align: 64, offset: 640)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "showfilename", scope: !825, file: !15, line: 171, baseType: !500, size: 64, align: 64, offset: 704)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "userp", scope: !825, file: !15, line: 174, baseType: !311, size: 64, align: 64, offset: 768)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "contentlen", scope: !825, file: !15, line: 176, baseType: !507, size: 64, align: 64, offset: 832)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "sep_headers", scope: !622, file: !121, line: 1635, baseType: !423, size: 8, align: 8, offset: 3456)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "cookiesession", scope: !622, file: !121, line: 1636, baseType: !423, size: 8, align: 8, offset: 3464)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "crlf", scope: !622, file: !121, line: 1637, baseType: !423, size: 8, align: 8, offset: 3472)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !622, file: !121, line: 1638, baseType: !817, size: 64, align: 64, offset: 3520)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "postquote", scope: !622, file: !121, line: 1639, baseType: !817, size: 64, align: 64, offset: 3584)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "prequote", scope: !622, file: !121, line: 1640, baseType: !817, size: 64, align: 64, offset: 3648)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "source_quote", scope: !622, file: !121, line: 1641, baseType: !817, size: 64, align: 64, offset: 3712)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "source_prequote", scope: !622, file: !121, line: 1642, baseType: !817, size: 64, align: 64, offset: 3776)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "source_postquote", scope: !622, file: !121, line: 1644, baseType: !817, size: 64, align: 64, offset: 3840)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "telnet_options", scope: !622, file: !121, line: 1646, baseType: !817, size: 64, align: 64, offset: 3904)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !622, file: !121, line: 1647, baseType: !817, size: 64, align: 64, offset: 3968)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "connect_to", scope: !622, file: !121, line: 1649, baseType: !817, size: 64, align: 64, offset: 4032)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "timecondition", scope: !622, file: !121, line: 1651, baseType: !854, size: 32, align: 32, offset: 4096)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_TimeCond", file: !15, line: 1929, baseType: !855)
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 1921, size: 32, align: 32, elements: !856)
!856 = !{!857, !858, !859, !860, !861}
!857 = !DIEnumerator(name: "CURL_TIMECOND_NONE", value: 0)
!858 = !DIEnumerator(name: "CURL_TIMECOND_IFMODSINCE", value: 1)
!859 = !DIEnumerator(name: "CURL_TIMECOND_IFUNMODSINCE", value: 2)
!860 = !DIEnumerator(name: "CURL_TIMECOND_LASTMOD", value: 3)
!861 = !DIEnumerator(name: "CURL_TIMECOND_LAST", value: 4)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "timevalue", scope: !622, file: !121, line: 1652, baseType: !599, size: 64, align: 64, offset: 4160)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "httpreq", scope: !622, file: !121, line: 1653, baseType: !864, size: 32, align: 32, offset: 4224)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_HttpReq", file: !121, line: 1249, baseType: !865)
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 1240, size: 32, align: 32, elements: !866)
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874}
!867 = !DIEnumerator(name: "HTTPREQ_NONE", value: 0)
!868 = !DIEnumerator(name: "HTTPREQ_GET", value: 1)
!869 = !DIEnumerator(name: "HTTPREQ_POST", value: 2)
!870 = !DIEnumerator(name: "HTTPREQ_POST_FORM", value: 3)
!871 = !DIEnumerator(name: "HTTPREQ_PUT", value: 4)
!872 = !DIEnumerator(name: "HTTPREQ_HEAD", value: 5)
!873 = !DIEnumerator(name: "HTTPREQ_CUSTOM", value: 6)
!874 = !DIEnumerator(name: "HTTPREQ_LAST", value: 7)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !622, file: !121, line: 1654, baseType: !379, size: 64, align: 64, offset: 4288)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !622, file: !121, line: 1656, baseType: !877, size: 1408, align: 64, offset: 4352)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_config_data", file: !121, line: 366, size: 1408, align: 64, elements: !878)
!878 = !{!879, !880, !881, !882, !883, !884, !885, !890, !891, !892, !893, !894, !895, !896, !897}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !877, file: !121, line: 367, baseType: !535, size: 640, align: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "enable_beast", scope: !877, file: !121, line: 368, baseType: !423, size: 8, align: 8, offset: 640)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "no_revoke", scope: !877, file: !121, line: 370, baseType: !423, size: 8, align: 8, offset: 648)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "certverifyresult", scope: !877, file: !121, line: 371, baseType: !379, size: 64, align: 64, offset: 704)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "CRLfile", scope: !877, file: !121, line: 372, baseType: !500, size: 64, align: 64, offset: 768)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "issuercert", scope: !877, file: !121, line: 373, baseType: !500, size: 64, align: 64, offset: 832)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctx", scope: !877, file: !121, line: 374, baseType: !886, size: 64, align: 64, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ssl_ctx_callback", file: !15, line: 639, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64, align: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!289, !305, !311, !311}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "fsslctxp", scope: !877, file: !121, line: 375, baseType: !311, size: 64, align: 64, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !877, file: !121, line: 376, baseType: !423, size: 8, align: 8, offset: 1024)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "falsestart", scope: !877, file: !121, line: 377, baseType: !423, size: 8, align: 8, offset: 1032)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "cert", scope: !877, file: !121, line: 379, baseType: !500, size: 64, align: 64, offset: 1088)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "cert_type", scope: !877, file: !121, line: 380, baseType: !500, size: 64, align: 64, offset: 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !877, file: !121, line: 381, baseType: !500, size: 64, align: 64, offset: 1216)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !877, file: !121, line: 382, baseType: !500, size: 64, align: 64, offset: 1280)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "key_passwd", scope: !877, file: !121, line: 383, baseType: !500, size: 64, align: 64, offset: 1344)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !622, file: !121, line: 1657, baseType: !877, size: 1408, align: 64, offset: 5760)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "general_ssl", scope: !622, file: !121, line: 1658, baseType: !900, size: 64, align: 64, offset: 7168)
!900 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_general_config", file: !121, line: 392, size: 64, align: 64, elements: !901)
!901 = !{!902}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "max_ssl_sessions", scope: !900, file: !121, line: 393, baseType: !347, size: 64, align: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !622, file: !121, line: 1659, baseType: !904, size: 32, align: 32, offset: 7232)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_proxytype", file: !15, line: 657, baseType: !14)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "dns_cache_timeout", scope: !622, file: !121, line: 1660, baseType: !379, size: 64, align: 64, offset: 7296)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !622, file: !121, line: 1661, baseType: !379, size: 64, align: 64, offset: 7360)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !622, file: !121, line: 1662, baseType: !311, size: 64, align: 64, offset: 7424)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "http200aliases", scope: !622, file: !121, line: 1664, baseType: !817, size: 64, align: 64, offset: 7488)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "ipver", scope: !622, file: !121, line: 1666, baseType: !379, size: 64, align: 64, offset: 7552)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "max_filesize", scope: !622, file: !121, line: 1669, baseType: !507, size: 64, align: 64, offset: 7616)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_filemethod", scope: !622, file: !121, line: 1671, baseType: !912, size: 32, align: 32, offset: 7680)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpfile", file: !135, line: 98, baseType: !913)
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !135, line: 93, size: 32, align: 32, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIEnumerator(name: "FTPFILE_MULTICWD", value: 1)
!916 = !DIEnumerator(name: "FTPFILE_NOCWD", value: 2)
!917 = !DIEnumerator(name: "FTPFILE_SINGLECWD", value: 3)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_create_missing_dirs", scope: !622, file: !121, line: 1673, baseType: !316, size: 32, align: 32, offset: 7712)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc", scope: !622, file: !121, line: 1677, baseType: !920, size: 64, align: 64, offset: 7744)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sshkeycallback", file: !15, line: 739, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!316, !305, !924, !924, !937, !311}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_khkey", file: !15, line: 711, size: 192, align: 64, elements: !927)
!927 = !{!928, !929, !930}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !926, file: !15, line: 712, baseType: !527, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !926, file: !15, line: 714, baseType: !347, size: 64, align: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !926, file: !15, line: 715, baseType: !931, size: 32, align: 32, offset: 128)
!931 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khtype", file: !15, line: 704, size: 32, align: 32, elements: !932)
!932 = !{!933, !934, !935, !936}
!933 = !DIEnumerator(name: "CURLKHTYPE_UNKNOWN", value: 0)
!934 = !DIEnumerator(name: "CURLKHTYPE_RSA1", value: 1)
!935 = !DIEnumerator(name: "CURLKHTYPE_RSA", value: 2)
!936 = !DIEnumerator(name: "CURLKHTYPE_DSS", value: 3)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "curl_khmatch", file: !15, line: 731, size: 32, align: 32, elements: !938)
!938 = !{!939, !940, !941, !942}
!939 = !DIEnumerator(name: "CURLKHMATCH_OK", value: 0)
!940 = !DIEnumerator(name: "CURLKHMATCH_MISMATCH", value: 1)
!941 = !DIEnumerator(name: "CURLKHMATCH_MISSING", value: 2)
!942 = !DIEnumerator(name: "CURLKHMATCH_LAST", value: 3)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_keyfunc_userp", scope: !622, file: !121, line: 1678, baseType: !311, size: 64, align: 64, offset: 7808)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "printhost", scope: !622, file: !121, line: 1684, baseType: !423, size: 8, align: 8, offset: 7872)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "get_filetime", scope: !622, file: !121, line: 1685, baseType: !423, size: 8, align: 8, offset: 7880)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_thru_httpproxy", scope: !622, file: !121, line: 1686, baseType: !423, size: 8, align: 8, offset: 7888)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_ascii", scope: !622, file: !121, line: 1687, baseType: !423, size: 8, align: 8, offset: 7896)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_append", scope: !622, file: !121, line: 1688, baseType: !423, size: 8, align: 8, offset: 7904)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_list_only", scope: !622, file: !121, line: 1689, baseType: !423, size: 8, align: 8, offset: 7912)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_port", scope: !622, file: !121, line: 1690, baseType: !423, size: 8, align: 8, offset: 7920)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "hide_progress", scope: !622, file: !121, line: 1691, baseType: !423, size: 8, align: 8, offset: 7928)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "http_fail_on_error", scope: !622, file: !121, line: 1692, baseType: !423, size: 8, align: 8, offset: 7936)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "http_keep_sending_on_error", scope: !622, file: !121, line: 1693, baseType: !423, size: 8, align: 8, offset: 7944)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "http_follow_location", scope: !622, file: !121, line: 1694, baseType: !423, size: 8, align: 8, offset: 7952)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "http_transfer_encoding", scope: !622, file: !121, line: 1695, baseType: !423, size: 8, align: 8, offset: 7960)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "http_disable_hostname_check_before_authentication", scope: !622, file: !121, line: 1696, baseType: !423, size: 8, align: 8, offset: 7968)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "include_header", scope: !622, file: !121, line: 1697, baseType: !423, size: 8, align: 8, offset: 7976)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "http_set_referer", scope: !622, file: !121, line: 1698, baseType: !423, size: 8, align: 8, offset: 7984)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "http_auto_referer", scope: !622, file: !121, line: 1699, baseType: !423, size: 8, align: 8, offset: 7992)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "opt_no_body", scope: !622, file: !121, line: 1700, baseType: !423, size: 8, align: 8, offset: 8000)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !622, file: !121, line: 1701, baseType: !423, size: 8, align: 8, offset: 8008)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "use_netrc", scope: !622, file: !121, line: 1703, baseType: !963, size: 32, align: 32, offset: 8032)
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CURL_NETRC_OPTION", file: !15, line: 1867, size: 32, align: 32, elements: !964)
!964 = !{!965, !966, !967, !968}
!965 = !DIEnumerator(name: "CURL_NETRC_IGNORED", value: 0)
!966 = !DIEnumerator(name: "CURL_NETRC_OPTIONAL", value: 1)
!967 = !DIEnumerator(name: "CURL_NETRC_REQUIRED", value: 2)
!968 = !DIEnumerator(name: "CURL_NETRC_LAST", value: 3)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !622, file: !121, line: 1704, baseType: !423, size: 8, align: 8, offset: 8064)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "krb", scope: !622, file: !121, line: 1705, baseType: !423, size: 8, align: 8, offset: 8072)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_forbid", scope: !622, file: !121, line: 1706, baseType: !423, size: 8, align: 8, offset: 8080)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_fresh", scope: !622, file: !121, line: 1707, baseType: !423, size: 8, align: 8, offset: 8088)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !622, file: !121, line: 1708, baseType: !423, size: 8, align: 8, offset: 8096)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !622, file: !121, line: 1709, baseType: !423, size: 8, align: 8, offset: 8104)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_pret", scope: !622, file: !121, line: 1710, baseType: !423, size: 8, align: 8, offset: 8112)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "use_ssl", scope: !622, file: !121, line: 1712, baseType: !977, size: 32, align: 32, offset: 8128)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_usessl", file: !15, line: 752, baseType: !978)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 746, size: 32, align: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984}
!980 = !DIEnumerator(name: "CURLUSESSL_NONE", value: 0)
!981 = !DIEnumerator(name: "CURLUSESSL_TRY", value: 1)
!982 = !DIEnumerator(name: "CURLUSESSL_CONTROL", value: 2)
!983 = !DIEnumerator(name: "CURLUSESSL_ALL", value: 3)
!984 = !DIEnumerator(name: "CURLUSESSL_LAST", value: 4)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ftpsslauth", scope: !622, file: !121, line: 1714, baseType: !986, size: 32, align: 32, offset: 8160)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpauth", file: !15, line: 795, baseType: !987)
!987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 790, size: 32, align: 32, elements: !988)
!988 = !{!989, !990, !991, !992}
!989 = !DIEnumerator(name: "CURLFTPAUTH_DEFAULT", value: 0)
!990 = !DIEnumerator(name: "CURLFTPAUTH_SSL", value: 1)
!991 = !DIEnumerator(name: "CURLFTPAUTH_TLS", value: 2)
!992 = !DIEnumerator(name: "CURLFTPAUTH_LAST", value: 3)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_ccc", scope: !622, file: !121, line: 1715, baseType: !994, size: 32, align: 32, offset: 8192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_ftpccc", file: !15, line: 787, baseType: !995)
!995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 782, size: 32, align: 32, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "CURLFTPSSL_CCC_NONE", value: 0)
!998 = !DIEnumerator(name: "CURLFTPSSL_CCC_PASSIVE", value: 1)
!999 = !DIEnumerator(name: "CURLFTPSSL_CCC_ACTIVE", value: 2)
!1000 = !DIEnumerator(name: "CURLFTPSSL_CCC_LAST", value: 3)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "no_signal", scope: !622, file: !121, line: 1716, baseType: !423, size: 8, align: 8, offset: 8224)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "global_dns_cache", scope: !622, file: !121, line: 1717, baseType: !423, size: 8, align: 8, offset: 8232)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_nodelay", scope: !622, file: !121, line: 1718, baseType: !423, size: 8, align: 8, offset: 8240)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ignorecl", scope: !622, file: !121, line: 1719, baseType: !423, size: 8, align: 8, offset: 8248)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_skip_ip", scope: !622, file: !121, line: 1720, baseType: !423, size: 8, align: 8, offset: 8256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "connect_only", scope: !622, file: !121, line: 1722, baseType: !423, size: 8, align: 8, offset: 8264)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "ssh_auth_types", scope: !622, file: !121, line: 1723, baseType: !379, size: 64, align: 64, offset: 8320)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "http_te_skip", scope: !622, file: !121, line: 1724, baseType: !423, size: 8, align: 8, offset: 8384)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "http_ce_skip", scope: !622, file: !121, line: 1726, baseType: !423, size: 8, align: 8, offset: 8392)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "new_file_perms", scope: !622, file: !121, line: 1728, baseType: !379, size: 64, align: 64, offset: 8448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "new_directory_perms", scope: !622, file: !121, line: 1729, baseType: !379, size: 64, align: 64, offset: 8512)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_transfer_mode", scope: !622, file: !121, line: 1730, baseType: !423, size: 8, align: 8, offset: 8576)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !622, file: !121, line: 1732, baseType: !1014, size: 3584, align: 64, offset: 8640)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 3584, align: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DISubrange(count: 56)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !622, file: !121, line: 1733, baseType: !457, size: 32, align: 32, offset: 12224)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_protocols", scope: !622, file: !121, line: 1734, baseType: !379, size: 64, align: 64, offset: 12288)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "redir_protocols", scope: !622, file: !121, line: 1735, baseType: !379, size: 64, align: 64, offset: 12352)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mail_rcpt", scope: !622, file: !121, line: 1739, baseType: !817, size: 64, align: 64, offset: 12416)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sasl_ir", scope: !622, file: !121, line: 1740, baseType: !423, size: 8, align: 8, offset: 12480)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "rtspreq", scope: !622, file: !121, line: 1742, baseType: !1023, size: 32, align: 32, offset: 12512)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_RtspReq", file: !121, line: 1265, baseType: !1024)
!1024 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 1251, size: 32, align: 32, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038}
!1026 = !DIEnumerator(name: "RTSPREQ_NONE", value: 0)
!1027 = !DIEnumerator(name: "RTSPREQ_OPTIONS", value: 1)
!1028 = !DIEnumerator(name: "RTSPREQ_DESCRIBE", value: 2)
!1029 = !DIEnumerator(name: "RTSPREQ_ANNOUNCE", value: 3)
!1030 = !DIEnumerator(name: "RTSPREQ_SETUP", value: 4)
!1031 = !DIEnumerator(name: "RTSPREQ_PLAY", value: 5)
!1032 = !DIEnumerator(name: "RTSPREQ_PAUSE", value: 6)
!1033 = !DIEnumerator(name: "RTSPREQ_TEARDOWN", value: 7)
!1034 = !DIEnumerator(name: "RTSPREQ_GET_PARAMETER", value: 8)
!1035 = !DIEnumerator(name: "RTSPREQ_SET_PARAMETER", value: 9)
!1036 = !DIEnumerator(name: "RTSPREQ_RECORD", value: 10)
!1037 = !DIEnumerator(name: "RTSPREQ_RECEIVE", value: 11)
!1038 = !DIEnumerator(name: "RTSPREQ_LAST", value: 12)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !622, file: !121, line: 1743, baseType: !379, size: 64, align: 64, offset: 12544)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "wildcardmatch", scope: !622, file: !121, line: 1744, baseType: !423, size: 8, align: 8, offset: 12608)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_bgn", scope: !622, file: !121, line: 1745, baseType: !1042, size: 64, align: 64, offset: 12672)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_bgn_callback", file: !15, line: 292, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!379, !1046, !311, !316}
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_end", scope: !622, file: !121, line: 1747, baseType: !1049, size: 64, align: 64, offset: 12736)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_chunk_end_callback", file: !15, line: 306, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!379, !311}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch", scope: !622, file: !121, line: 1749, baseType: !1054, size: 64, align: 64, offset: 12800)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_fnmatch_callback", file: !15, line: 315, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!316, !311, !527, !527}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "fnmatch_data", scope: !622, file: !121, line: 1751, baseType: !311, size: 64, align: 64, offset: 12864)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "gssapi_delegation", scope: !622, file: !121, line: 1753, baseType: !379, size: 64, align: 64, offset: 12928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepalive", scope: !622, file: !121, line: 1756, baseType: !423, size: 8, align: 8, offset: 12992)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepidle", scope: !622, file: !121, line: 1757, baseType: !379, size: 64, align: 64, offset: 13056)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_keepintvl", scope: !622, file: !121, line: 1758, baseType: !379, size: 64, align: 64, offset: 13120)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !622, file: !121, line: 1759, baseType: !423, size: 8, align: 8, offset: 13184)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "maxconnects", scope: !622, file: !121, line: 1761, baseType: !347, size: 64, align: 64, offset: 13248)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_npn", scope: !622, file: !121, line: 1763, baseType: !423, size: 8, align: 8, offset: 13312)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_enable_alpn", scope: !622, file: !121, line: 1764, baseType: !423, size: 8, align: 8, offset: 13320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "path_as_is", scope: !622, file: !121, line: 1765, baseType: !423, size: 8, align: 8, offset: 13328)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pipewait", scope: !622, file: !121, line: 1766, baseType: !423, size: 8, align: 8, offset: 13336)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "expect_100_timeout", scope: !622, file: !121, line: 1768, baseType: !379, size: 64, align: 64, offset: 13376)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_connect_headers", scope: !622, file: !121, line: 1769, baseType: !423, size: 8, align: 8, offset: 13440)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !622, file: !121, line: 1772, baseType: !256, size: 64, align: 64, offset: 13504)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !622, file: !121, line: 1773, baseType: !423, size: 8, align: 8, offset: 13568)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !622, file: !121, line: 1774, baseType: !316, size: 32, align: 32, offset: 13600)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "stream_dependents", scope: !622, file: !121, line: 1776, baseType: !1075, size: 64, align: 64, offset: 13632)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_http2_dep", file: !121, line: 1292, size: 128, align: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1076, file: !121, line: 1293, baseType: !1075, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1076, file: !121, line: 1294, baseType: !256, size: 64, align: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_unix_socket", scope: !622, file: !121, line: 1778, baseType: !423, size: 8, align: 8, offset: 13696)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !257, file: !121, line: 1830, baseType: !1082, size: 384, align: 64, offset: 17216)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicStatic", file: !121, line: 1444, size: 384, align: 64, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087, !1088, !1089}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1082, file: !121, line: 1445, baseType: !500, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "url_alloc", scope: !1082, file: !121, line: 1446, baseType: !423, size: 8, align: 8, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "referer", scope: !1082, file: !121, line: 1447, baseType: !500, size: 64, align: 64, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "referer_alloc", scope: !1082, file: !121, line: 1448, baseType: !423, size: 8, align: 8, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "cookielist", scope: !1082, file: !121, line: 1449, baseType: !817, size: 64, align: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "resolve", scope: !1082, file: !121, line: 1451, baseType: !817, size: 64, align: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cookies", scope: !257, file: !121, line: 1831, baseType: !490, size: 64, align: 64, offset: 17600)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !257, file: !121, line: 1835, baseType: !1092, size: 3200, align: 64, offset: 17664)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "Progress", file: !121, line: 1195, size: 3200, align: 64, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1124, !1126}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "lastshow", scope: !1092, file: !121, line: 1196, baseType: !599, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "size_dl", scope: !1092, file: !121, line: 1198, baseType: !507, size: 64, align: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "size_ul", scope: !1092, file: !121, line: 1199, baseType: !507, size: 64, align: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "downloaded", scope: !1092, file: !121, line: 1200, baseType: !507, size: 64, align: 64, offset: 192)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "uploaded", scope: !1092, file: !121, line: 1201, baseType: !507, size: 64, align: 64, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1092, file: !121, line: 1203, baseType: !507, size: 64, align: 64, offset: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1092, file: !121, line: 1205, baseType: !423, size: 8, align: 8, offset: 384)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1092, file: !121, line: 1206, baseType: !316, size: 32, align: 32, offset: 416)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !121, line: 1207, baseType: !316, size: 32, align: 32, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "timespent", scope: !1092, file: !121, line: 1209, baseType: !718, size: 64, align: 64, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "dlspeed", scope: !1092, file: !121, line: 1211, baseType: !507, size: 64, align: 64, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ulspeed", scope: !1092, file: !121, line: 1212, baseType: !507, size: 64, align: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "t_nslookup", scope: !1092, file: !121, line: 1214, baseType: !718, size: 64, align: 64, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "t_connect", scope: !1092, file: !121, line: 1215, baseType: !718, size: 64, align: 64, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "t_appconnect", scope: !1092, file: !121, line: 1216, baseType: !718, size: 64, align: 64, offset: 832)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "t_pretransfer", scope: !1092, file: !121, line: 1217, baseType: !718, size: 64, align: 64, offset: 896)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "t_starttransfer", scope: !1092, file: !121, line: 1218, baseType: !718, size: 64, align: 64, offset: 960)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "t_redirect", scope: !1092, file: !121, line: 1219, baseType: !718, size: 64, align: 64, offset: 1024)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1092, file: !121, line: 1221, baseType: !411, size: 128, align: 64, offset: 1088)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "t_startsingle", scope: !1092, file: !121, line: 1222, baseType: !411, size: 128, align: 64, offset: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "t_startop", scope: !1092, file: !121, line: 1223, baseType: !411, size: 128, align: 64, offset: 1344)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "t_acceptdata", scope: !1092, file: !121, line: 1224, baseType: !411, size: 128, align: 64, offset: 1472)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_start", scope: !1092, file: !121, line: 1227, baseType: !411, size: 128, align: 64, offset: 1600)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ul_limit_size", scope: !1092, file: !121, line: 1228, baseType: !507, size: 64, align: 64, offset: 1728)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_start", scope: !1092, file: !121, line: 1230, baseType: !411, size: 128, align: 64, offset: 1792)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dl_limit_size", scope: !1092, file: !121, line: 1231, baseType: !507, size: 64, align: 64, offset: 1920)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "speeder", scope: !1092, file: !121, line: 1235, baseType: !1121, size: 384, align: 64, offset: 1984)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 384, align: 64, elements: !1122)
!1122 = !{!1123}
!1123 = !DISubrange(count: 6)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_time", scope: !1092, file: !121, line: 1236, baseType: !1125, size: 768, align: 64, offset: 2368)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 768, align: 64, elements: !1122)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "speeder_c", scope: !1092, file: !121, line: 1237, baseType: !316, size: 32, align: 32, offset: 3136)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !257, file: !121, line: 1836, baseType: !1128, size: 136640, align: 64, offset: 20864)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "UrlState", file: !121, line: 1310, size: 136640, align: 64, elements: !1129)
!1129 = !{!1130, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1158, !1159, !1160, !1161, !1165, !1166, !1178, !1179, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "conn_cache", scope: !1128, file: !121, line: 1313, baseType: !1131, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "multi_owned_by_easy", scope: !1128, file: !121, line: 1318, baseType: !423, size: 8, align: 8, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "keeps_speed", scope: !1128, file: !121, line: 1321, baseType: !411, size: 128, align: 64, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lastconnect", scope: !1128, file: !121, line: 1323, baseType: !262, size: 64, align: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "headerbuff", scope: !1128, file: !121, line: 1325, baseType: !500, size: 64, align: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "headersize", scope: !1128, file: !121, line: 1326, baseType: !347, size: 64, align: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1128, file: !121, line: 1328, baseType: !500, size: 64, align: 64, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "uploadbuffer", scope: !1128, file: !121, line: 1329, baseType: !1139, size: 131080, align: 8, offset: 512)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 131080, align: 8, elements: !1140)
!1140 = !{!1141}
!1141 = !DISubrange(count: 16385)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !1128, file: !121, line: 1330, baseType: !507, size: 64, align: 64, offset: 131648)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "this_is_a_follow", scope: !1128, file: !121, line: 1332, baseType: !423, size: 8, align: 8, offset: 131712)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "first_host", scope: !1128, file: !121, line: 1334, baseType: !500, size: 64, align: 64, offset: 131776)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "first_remote_port", scope: !1128, file: !121, line: 1340, baseType: !316, size: 32, align: 32, offset: 131840)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !1128, file: !121, line: 1341, baseType: !521, size: 64, align: 64, offset: 131904)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sessionage", scope: !1128, file: !121, line: 1342, baseType: !379, size: 64, align: 64, offset: 131968)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "tempcount", scope: !1128, file: !121, line: 1343, baseType: !457, size: 32, align: 32, offset: 132032)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "tempwrite", scope: !1128, file: !121, line: 1344, baseType: !1150, size: 576, align: 64, offset: 132096)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 576, align: 64, elements: !1156)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "tempbuf", file: !121, line: 1302, size: 192, align: 64, elements: !1152)
!1152 = !{!1153, !1154, !1155}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1151, file: !121, line: 1303, baseType: !500, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1151, file: !121, line: 1305, baseType: !347, size: 64, align: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1151, file: !121, line: 1306, baseType: !316, size: 32, align: 32, offset: 128)
!1156 = !{!1157}
!1157 = !DISubrange(count: 3)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1128, file: !121, line: 1345, baseType: !500, size: 64, align: 64, offset: 132672)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "errorbuf", scope: !1128, file: !121, line: 1346, baseType: !423, size: 8, align: 8, offset: 132736)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "os_errno", scope: !1128, file: !121, line: 1349, baseType: !316, size: 32, align: 32, offset: 132768)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "prev_signal", scope: !1128, file: !121, line: 1352, baseType: !1162, size: 64, align: 64, offset: 132800)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !316}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "allow_port", scope: !1128, file: !121, line: 1354, baseType: !423, size: 8, align: 8, offset: 132864)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !1128, file: !121, line: 1356, baseType: !1167, size: 512, align: 64, offset: 132928)
!1167 = !DICompositeType(tag: DW_TAG_structure_type, name: "digestdata", file: !121, line: 410, size: 512, align: 64, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !1167, file: !121, line: 416, baseType: !500, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cnonce", scope: !1167, file: !121, line: 417, baseType: !500, size: 64, align: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "realm", scope: !1167, file: !121, line: 418, baseType: !500, size: 64, align: 64, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !1167, file: !121, line: 419, baseType: !316, size: 32, align: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "stale", scope: !1167, file: !121, line: 420, baseType: !423, size: 8, align: 8, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1167, file: !121, line: 421, baseType: !500, size: 64, align: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "qop", scope: !1167, file: !121, line: 422, baseType: !500, size: 64, align: 64, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm", scope: !1167, file: !121, line: 423, baseType: !500, size: 64, align: 64, offset: 384)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1167, file: !121, line: 424, baseType: !316, size: 32, align: 32, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "proxydigest", scope: !1128, file: !121, line: 1357, baseType: !1167, size: 512, align: 64, offset: 133440)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "authhost", scope: !1128, file: !121, line: 1364, baseType: !1180, size: 256, align: 64, offset: 133952)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "auth", file: !121, line: 1278, size: 256, align: 64, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "want", scope: !1180, file: !121, line: 1279, baseType: !349, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "picked", scope: !1180, file: !121, line: 1281, baseType: !349, size: 64, align: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !1180, file: !121, line: 1282, baseType: !349, size: 64, align: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1180, file: !121, line: 1284, baseType: !423, size: 8, align: 8, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "multipass", scope: !1180, file: !121, line: 1286, baseType: !423, size: 8, align: 8, offset: 200)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "iestyle", scope: !1180, file: !121, line: 1288, baseType: !423, size: 8, align: 8, offset: 208)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "authproxy", scope: !1128, file: !121, line: 1365, baseType: !1180, size: 256, align: 64, offset: 134208)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "authproblem", scope: !1128, file: !121, line: 1367, baseType: !423, size: 8, align: 8, offset: 134464)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !1128, file: !121, line: 1369, baseType: !311, size: 64, align: 64, offset: 134528)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "expiretime", scope: !1128, file: !121, line: 1375, baseType: !411, size: 128, align: 64, offset: 134592)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "timenode", scope: !1128, file: !121, line: 1376, baseType: !403, size: 448, align: 64, offset: 134720)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutlist", scope: !1128, file: !121, line: 1377, baseType: !330, size: 256, align: 64, offset: 135168)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "most_recent_ftp_entrypath", scope: !1128, file: !121, line: 1380, baseType: !500, size: 64, align: 64, offset: 135424)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_trying_alternative", scope: !1128, file: !121, line: 1383, baseType: !423, size: 8, align: 8, offset: 135488)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1128, file: !121, line: 1385, baseType: !316, size: 32, align: 32, offset: 135520)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "expect100header", scope: !1128, file: !121, line: 1387, baseType: !423, size: 8, align: 8, offset: 135552)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_broke", scope: !1128, file: !121, line: 1389, baseType: !423, size: 8, align: 8, offset: 135560)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_had_trailing_cr", scope: !1128, file: !121, line: 1397, baseType: !423, size: 8, align: 8, offset: 135568)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "crlf_conversions", scope: !1128, file: !121, line: 1399, baseType: !507, size: 64, align: 64, offset: 135616)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pathbuffer", scope: !1128, file: !121, line: 1401, baseType: !500, size: 64, align: 64, offset: 135680)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1128, file: !121, line: 1402, baseType: !500, size: 64, align: 64, offset: 135744)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "slash_removed", scope: !1128, file: !121, line: 1404, baseType: !423, size: 8, align: 8, offset: 135808)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "use_range", scope: !1128, file: !121, line: 1406, baseType: !423, size: 8, align: 8, offset: 135816)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rangestringalloc", scope: !1128, file: !121, line: 1407, baseType: !423, size: 8, align: 8, offset: 135824)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1128, file: !121, line: 1409, baseType: !500, size: 64, align: 64, offset: 135872)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "resume_from", scope: !1128, file: !121, line: 1411, baseType: !507, size: 64, align: 64, offset: 135936)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_client_CSeq", scope: !1128, file: !121, line: 1414, baseType: !379, size: 64, align: 64, offset: 136000)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_next_server_CSeq", scope: !1128, file: !121, line: 1415, baseType: !379, size: 64, align: 64, offset: 136064)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_CSeq_recv", scope: !1128, file: !121, line: 1416, baseType: !379, size: 64, align: 64, offset: 136128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "infilesize", scope: !1128, file: !121, line: 1418, baseType: !507, size: 64, align: 64, offset: 136192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "drain", scope: !1128, file: !121, line: 1421, baseType: !347, size: 64, align: 64, offset: 136256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1128, file: !121, line: 1424, baseType: !423, size: 8, align: 8, offset: 136320)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fread_func", scope: !1128, file: !121, line: 1428, baseType: !710, size: 64, align: 64, offset: 136384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1128, file: !121, line: 1429, baseType: !311, size: 64, align: 64, offset: 136448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_on", scope: !1128, file: !121, line: 1431, baseType: !256, size: 64, align: 64, offset: 136512)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stream_depends_e", scope: !1128, file: !121, line: 1432, baseType: !423, size: 8, align: 8, offset: 136576)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "stream_weight", scope: !1128, file: !121, line: 1433, baseType: !316, size: 32, align: 32, offset: 136608)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !257, file: !121, line: 1838, baseType: !1220, size: 640, align: 64, offset: 157504)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "WildcardData", file: !1221, line: 46, size: 640, align: 64, elements: !1222)
!1221 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/wildcard.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1222 = !{!1223, !1235, !1236, !1237, !1238, !1239, !1241}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1220, file: !1221, line: 47, baseType: !1224, size: 32, align: 32)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_states", file: !1221, line: 41, baseType: !1225)
!1225 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1221, line: 30, size: 32, align: 32, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1227 = !DIEnumerator(name: "CURLWC_CLEAR", value: 0)
!1228 = !DIEnumerator(name: "CURLWC_INIT", value: 1)
!1229 = !DIEnumerator(name: "CURLWC_MATCHING", value: 2)
!1230 = !DIEnumerator(name: "CURLWC_DOWNLOADING", value: 3)
!1231 = !DIEnumerator(name: "CURLWC_CLEAN", value: 4)
!1232 = !DIEnumerator(name: "CURLWC_SKIP", value: 5)
!1233 = !DIEnumerator(name: "CURLWC_ERROR", value: 6)
!1234 = !DIEnumerator(name: "CURLWC_DONE", value: 7)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1220, file: !1221, line: 48, baseType: !500, size: 64, align: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !1220, file: !1221, line: 49, baseType: !500, size: 64, align: 64, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !1220, file: !1221, line: 50, baseType: !330, size: 256, align: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1220, file: !1221, line: 51, baseType: !311, size: 64, align: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_dtor", scope: !1220, file: !1221, line: 52, baseType: !1240, size: 64, align: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_wildcard_tmp_dtor", file: !1221, line: 43, baseType: !362)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "customptr", scope: !1220, file: !1221, line: 53, baseType: !311, size: 64, align: 64, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !257, file: !121, line: 1839, baseType: !1243, size: 1856, align: 64, offset: 158144)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "PureInfo", file: !121, line: 1154, size: 1856, align: 64, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1261, !1262, !1263, !1264, !1265, !1266}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "httpcode", scope: !1243, file: !121, line: 1155, baseType: !316, size: 32, align: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxycode", scope: !1243, file: !121, line: 1156, baseType: !316, size: 32, align: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !1243, file: !121, line: 1157, baseType: !316, size: 32, align: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "filetime", scope: !1243, file: !121, line: 1158, baseType: !379, size: 64, align: 64, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "timecond", scope: !1243, file: !121, line: 1162, baseType: !423, size: 8, align: 8, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !1243, file: !121, line: 1164, baseType: !379, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "request_size", scope: !1243, file: !121, line: 1165, baseType: !379, size: 64, align: 64, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "proxyauthavail", scope: !1243, file: !121, line: 1166, baseType: !349, size: 64, align: 64, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "httpauthavail", scope: !1243, file: !121, line: 1167, baseType: !349, size: 64, align: 64, offset: 448)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "numconnects", scope: !1243, file: !121, line: 1168, baseType: !379, size: 64, align: 64, offset: 512)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !1243, file: !121, line: 1169, baseType: !500, size: 64, align: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "wouldredirect", scope: !1243, file: !121, line: 1170, baseType: !500, size: 64, align: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_ip", scope: !1243, file: !121, line: 1180, baseType: !1258, size: 368, align: 8, offset: 704)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 368, align: 8, elements: !1259)
!1259 = !{!1260}
!1260 = !DISubrange(count: 46)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "conn_primary_port", scope: !1243, file: !121, line: 1181, baseType: !379, size: 64, align: 64, offset: 1088)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_ip", scope: !1243, file: !121, line: 1183, baseType: !1258, size: 368, align: 8, offset: 1152)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "conn_local_port", scope: !1243, file: !121, line: 1184, baseType: !379, size: 64, align: 64, offset: 1536)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "conn_scheme", scope: !1243, file: !121, line: 1186, baseType: !527, size: 64, align: 64, offset: 1600)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "conn_protocol", scope: !1243, file: !121, line: 1187, baseType: !457, size: 32, align: 32, offset: 1664)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "certs", scope: !1243, file: !121, line: 1189, baseType: !1267, size: 128, align: 64, offset: 1728)
!1267 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_certinfo", file: !15, line: 2214, size: 128, align: 64, elements: !1268)
!1268 = !{!1269, !1270}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_certs", scope: !1267, file: !15, line: 2215, baseType: !316, size: 32, align: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "certinfo", scope: !1267, file: !15, line: 2216, baseType: !1271, size: 64, align: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64, align: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tsi", scope: !257, file: !121, line: 1840, baseType: !1273, size: 128, align: 64, offset: 160000)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_tlssessioninfo", file: !15, line: 2245, size: 128, align: 64, elements: !1274)
!1274 = !{!1275, !1291}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "backend", scope: !1273, file: !15, line: 2246, baseType: !1276, size: 32, align: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_sslbackend", file: !15, line: 2235, baseType: !1277)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 2222, size: 32, align: 32, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1279 = !DIEnumerator(name: "CURLSSLBACKEND_NONE", value: 0)
!1280 = !DIEnumerator(name: "CURLSSLBACKEND_OPENSSL", value: 1)
!1281 = !DIEnumerator(name: "CURLSSLBACKEND_GNUTLS", value: 2)
!1282 = !DIEnumerator(name: "CURLSSLBACKEND_NSS", value: 3)
!1283 = !DIEnumerator(name: "CURLSSLBACKEND_OBSOLETE4", value: 4)
!1284 = !DIEnumerator(name: "CURLSSLBACKEND_GSKIT", value: 5)
!1285 = !DIEnumerator(name: "CURLSSLBACKEND_POLARSSL", value: 6)
!1286 = !DIEnumerator(name: "CURLSSLBACKEND_CYASSL", value: 7)
!1287 = !DIEnumerator(name: "CURLSSLBACKEND_SCHANNEL", value: 8)
!1288 = !DIEnumerator(name: "CURLSSLBACKEND_DARWINSSL", value: 9)
!1289 = !DIEnumerator(name: "CURLSSLBACKEND_AXTLS", value: 10)
!1290 = !DIEnumerator(name: "CURLSSLBACKEND_MBEDTLS", value: 11)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "internals", scope: !1273, file: !15, line: 2247, baseType: !311, size: 64, align: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !257, file: !121, line: 1847, baseType: !457, size: 32, align: 32, offset: 160128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !253, file: !121, line: 904, baseType: !1294, size: 384, align: 64, offset: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_chunker", file: !4, line: 82, size: 384, align: 64, elements: !1295)
!1295 = !{!1296, !1300, !1301, !1303, !1304}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hexbuffer", scope: !1294, file: !4, line: 83, baseType: !1297, size: 136, align: 8)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 136, align: 8, elements: !1298)
!1298 = !{!1299}
!1299 = !DISubrange(count: 17)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hexindex", scope: !1294, file: !4, line: 84, baseType: !316, size: 32, align: 32, offset: 160)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1294, file: !4, line: 85, baseType: !1302, size: 32, align: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChunkyState", file: !4, line: 66, baseType: !3)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "datasize", scope: !1294, file: !4, line: 86, baseType: !507, size: 64, align: 64, offset: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dataleft", scope: !1294, file: !4, line: 87, baseType: !347, size: 64, align: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fclosesocket", scope: !253, file: !121, line: 906, baseType: !789, size: 64, align: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "closesocket_client", scope: !253, file: !121, line: 907, baseType: !311, size: 64, align: 64, offset: 512)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !253, file: !121, line: 909, baseType: !423, size: 8, align: 8, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "connection_id", scope: !253, file: !121, line: 915, baseType: !379, size: 64, align: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dns_entry", scope: !253, file: !121, line: 922, baseType: !1310, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_dns_entry", file: !1312, line: 66, size: 192, align: 64, elements: !1313)
!1312 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/hostip.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1313 = !{!1314, !1333, !1334}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1311, file: !1312, line: 67, baseType: !1315, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_addrinfo", file: !1317, line: 61, baseType: !1318)
!1317 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/curl_addrinfo.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_addrinfo", file: !1317, line: 51, size: 384, align: 64, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1328, !1329, !1331}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !1318, file: !1317, line: 52, baseType: !316, size: 32, align: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !1318, file: !1317, line: 53, baseType: !316, size: 32, align: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !1318, file: !1317, line: 54, baseType: !316, size: 32, align: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !1318, file: !1317, line: 55, baseType: !316, size: 32, align: 32, offset: 96)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !1318, file: !1317, line: 56, baseType: !1325, size: 32, align: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "curl_socklen_t", file: !508, line: 186, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !778, line: 33, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !416, line: 189, baseType: !457)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !1318, file: !1317, line: 57, baseType: !500, size: 64, align: 64, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !1318, file: !1317, line: 58, baseType: !1330, size: 64, align: 64, offset: 256)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !1318, file: !1317, line: 59, baseType: !1332, size: 64, align: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1311, file: !1312, line: 69, baseType: !599, size: 64, align: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1311, file: !1312, line: 71, baseType: !379, size: 64, align: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !253, file: !121, line: 927, baseType: !1315, size: 64, align: 64, offset: 768)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr", scope: !253, file: !121, line: 928, baseType: !1337, size: 128, align: 64, offset: 832)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1315, size: 128, align: 64, elements: !1338)
!1338 = !{!1339}
!1339 = !DISubrange(count: 2)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr_str", scope: !253, file: !121, line: 933, baseType: !1258, size: 368, align: 8, offset: 960)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "scope_id", scope: !253, file: !121, line: 935, baseType: !457, size: 32, align: 32, offset: 1344)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "socktype", scope: !253, file: !121, line: 937, baseType: !316, size: 32, align: 32, offset: 1376)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !253, file: !121, line: 939, baseType: !1344, size: 256, align: 64, offset: 1408)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "hostname", file: !121, line: 581, size: 256, align: 64, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "rawalloc", scope: !1344, file: !121, line: 582, baseType: !500, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "encalloc", scope: !1344, file: !121, line: 583, baseType: !500, size: 64, align: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1344, file: !121, line: 584, baseType: !500, size: 64, align: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "dispname", scope: !1344, file: !121, line: 585, baseType: !527, size: 64, align: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "secondaryhostname", scope: !253, file: !121, line: 940, baseType: !500, size: 64, align: 64, offset: 1664)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !253, file: !121, line: 941, baseType: !1344, size: 256, align: 64, offset: 1728)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "socks_proxy", scope: !253, file: !121, line: 944, baseType: !1353, size: 512, align: 64, offset: 1984)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "proxy_info", file: !121, line: 883, size: 512, align: 64, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1353, file: !121, line: 884, baseType: !1344, size: 256, align: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1353, file: !121, line: 885, baseType: !379, size: 64, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "proxytype", scope: !1353, file: !121, line: 886, baseType: !904, size: 32, align: 32, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1353, file: !121, line: 887, baseType: !500, size: 64, align: 64, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !1353, file: !121, line: 888, baseType: !500, size: 64, align: 64, offset: 448)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "http_proxy", scope: !253, file: !121, line: 945, baseType: !1353, size: 512, align: 64, offset: 2496)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !253, file: !121, line: 947, baseType: !379, size: 64, align: 64, offset: 3008)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !253, file: !121, line: 948, baseType: !316, size: 32, align: 32, offset: 3072)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !253, file: !121, line: 949, baseType: !316, size: 32, align: 32, offset: 3104)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_port", scope: !253, file: !121, line: 951, baseType: !657, size: 16, align: 16, offset: 3136)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "primary_ip", scope: !253, file: !121, line: 961, baseType: !1258, size: 368, align: 8, offset: 3152)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "primary_port", scope: !253, file: !121, line: 962, baseType: !379, size: 64, align: 64, offset: 3520)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !253, file: !121, line: 968, baseType: !1258, size: 368, align: 8, offset: 3584)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !253, file: !121, line: 969, baseType: !379, size: 64, align: 64, offset: 3968)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !253, file: !121, line: 971, baseType: !500, size: 64, align: 64, offset: 4032)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "passwd", scope: !253, file: !121, line: 972, baseType: !500, size: 64, align: 64, offset: 4096)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !253, file: !121, line: 973, baseType: !500, size: 64, align: 64, offset: 4160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "oauth_bearer", scope: !253, file: !121, line: 975, baseType: !500, size: 64, align: 64, offset: 4224)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "httpversion", scope: !253, file: !121, line: 977, baseType: !316, size: 32, align: 32, offset: 4288)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rtspversion", scope: !253, file: !121, line: 978, baseType: !316, size: 32, align: 32, offset: 4320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !253, file: !121, line: 980, baseType: !411, size: 128, align: 64, offset: 4352)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "created", scope: !253, file: !121, line: 981, baseType: !411, size: 128, align: 64, offset: 4480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !253, file: !121, line: 982, baseType: !1378, size: 64, align: 32, offset: 4608)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 64, align: 32, elements: !1338)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tempsock", scope: !253, file: !121, line: 984, baseType: !1378, size: 64, align: 32, offset: 4672)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sock_accepted", scope: !253, file: !121, line: 985, baseType: !1381, size: 16, align: 8, offset: 4736)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 16, align: 8, elements: !1338)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !253, file: !121, line: 987, baseType: !1383, size: 128, align: 64, offset: 4800)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 128, align: 64, elements: !1338)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_recv", file: !121, line: 863, baseType: !1386)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!612, !262, !316, !500, !347, !1388}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64, align: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !253, file: !121, line: 988, baseType: !1390, size: 128, align: 64, offset: 4928)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 128, align: 64, elements: !1338)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_send", file: !121, line: 856, baseType: !1393)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!612, !262, !316, !1046, !347, !1388}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ssl", scope: !253, file: !121, line: 993, baseType: !1396, size: 192, align: 32, offset: 5056)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 192, align: 32, elements: !1338)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_connect_data", file: !121, line: 274, size: 96, align: 32, elements: !1398)
!1398 = !{!1399, !1400, !1402}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1397, file: !121, line: 278, baseType: !423, size: 8, align: 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1397, file: !121, line: 279, baseType: !1401, size: 32, align: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connection_state", file: !121, line: 271, baseType: !120)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "connecting_state", scope: !1397, file: !121, line: 280, baseType: !1403, size: 32, align: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssl_connect_state", file: !121, line: 265, baseType: !126)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl", scope: !253, file: !121, line: 994, baseType: !1396, size: 192, align: 32, offset: 5248)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ssl_config", scope: !253, file: !121, line: 995, baseType: !535, size: 640, align: 64, offset: 5440)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_config", scope: !253, file: !121, line: 996, baseType: !535, size: 640, align: 64, offset: 6080)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tls_upgraded", scope: !253, file: !121, line: 997, baseType: !423, size: 8, align: 8, offset: 6720)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !253, file: !121, line: 999, baseType: !1409, size: 280, align: 8, offset: 6728)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "ConnectBits", file: !121, line: 514, size: 280, align: 8, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1409, file: !121, line: 516, baseType: !423, size: 8, align: 8)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "reuse", scope: !1409, file: !121, line: 517, baseType: !423, size: 8, align: 8, offset: 8)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_host", scope: !1409, file: !121, line: 518, baseType: !423, size: 8, align: 8, offset: 16)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "conn_to_port", scope: !1409, file: !121, line: 520, baseType: !423, size: 8, align: 8, offset: 24)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1409, file: !121, line: 522, baseType: !423, size: 8, align: 8, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "httpproxy", scope: !1409, file: !121, line: 523, baseType: !423, size: 8, align: 8, offset: 40)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy", scope: !1409, file: !121, line: 524, baseType: !423, size: 8, align: 8, offset: 48)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "user_passwd", scope: !1409, file: !121, line: 525, baseType: !423, size: 8, align: 8, offset: 56)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_user_passwd", scope: !1409, file: !121, line: 526, baseType: !423, size: 8, align: 8, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_ip", scope: !1409, file: !121, line: 527, baseType: !423, size: 8, align: 8, offset: 72)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1409, file: !121, line: 529, baseType: !423, size: 8, align: 8, offset: 80)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1409, file: !121, line: 531, baseType: !423, size: 8, align: 8, offset: 88)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "tcpconnect", scope: !1409, file: !121, line: 533, baseType: !1381, size: 16, align: 8, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "protoconnstart", scope: !1409, file: !121, line: 535, baseType: !423, size: 8, align: 8, offset: 112)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1409, file: !121, line: 538, baseType: !423, size: 8, align: 8, offset: 120)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_proxy", scope: !1409, file: !121, line: 540, baseType: !423, size: 8, align: 8, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "authneg", scope: !1409, file: !121, line: 544, baseType: !423, size: 8, align: 8, offset: 136)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rewindaftersend", scope: !1409, file: !121, line: 548, baseType: !423, size: 8, align: 8, offset: 144)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_epsv", scope: !1409, file: !121, line: 552, baseType: !423, size: 8, align: 8, offset: 152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_eprt", scope: !1409, file: !121, line: 556, baseType: !423, size: 8, align: 8, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ftp_use_data_ssl", scope: !1409, file: !121, line: 559, baseType: !423, size: 8, align: 8, offset: 168)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "netrc", scope: !1409, file: !121, line: 560, baseType: !423, size: 8, align: 8, offset: 176)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd_in_url", scope: !1409, file: !121, line: 561, baseType: !423, size: 8, align: 8, offset: 184)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "stream_was_rewound", scope: !1409, file: !121, line: 562, baseType: !423, size: 8, align: 8, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_connect_closed", scope: !1409, file: !121, line: 565, baseType: !423, size: 8, align: 8, offset: 200)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1409, file: !121, line: 568, baseType: !423, size: 8, align: 8, offset: 208)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "type_set", scope: !1409, file: !121, line: 570, baseType: !423, size: 8, align: 8, offset: 216)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "multiplex", scope: !1409, file: !121, line: 571, baseType: !423, size: 8, align: 8, offset: 224)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen", scope: !1409, file: !121, line: 573, baseType: !423, size: 8, align: 8, offset: 232)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_npn", scope: !1409, file: !121, line: 574, baseType: !423, size: 8, align: 8, offset: 240)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "tls_enable_alpn", scope: !1409, file: !121, line: 575, baseType: !423, size: 8, align: 8, offset: 248)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ssl_connected", scope: !1409, file: !121, line: 576, baseType: !1381, size: 16, align: 8, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "socksproxy_connecting", scope: !1409, file: !121, line: 578, baseType: !423, size: 8, align: 8, offset: 272)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "connecttime", scope: !253, file: !121, line: 1004, baseType: !411, size: 128, align: 64, offset: 7040)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "num_addr", scope: !253, file: !121, line: 1006, baseType: !316, size: 32, align: 32, offset: 7168)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "timeoutms_per_addr", scope: !253, file: !121, line: 1007, baseType: !599, size: 64, align: 64, offset: 7232)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !253, file: !121, line: 1010, baseType: !1448, size: 64, align: 64, offset: 7296)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_handler", file: !121, line: 763, size: 1024, align: 64, elements: !1451)
!1451 = !{!1452, !1453, !1457, !1462, !1467, !1473, !1474, !1475, !1476, !1481, !1482, !1483, !1489, !1493, !1498, !1499, !1500}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !1450, file: !121, line: 764, baseType: !527, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "setup_connection", scope: !1450, file: !121, line: 767, baseType: !1454, size: 64, align: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!289, !262}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "do_it", scope: !1450, file: !121, line: 770, baseType: !1458, size: 64, align: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!289, !262, !1461}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1450, file: !121, line: 771, baseType: !1463, size: 64, align: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_done_func", file: !121, line: 634, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!289, !262, !289, !423}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "do_more", scope: !1450, file: !121, line: 777, baseType: !1468, size: 64, align: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curl_do_more_func", file: !121, line: 633, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!289, !262, !1472}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "connect_it", scope: !1450, file: !121, line: 785, baseType: !1458, size: 64, align: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "connecting", scope: !1450, file: !121, line: 788, baseType: !1458, size: 64, align: 64, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "doing", scope: !1450, file: !121, line: 789, baseType: !1458, size: 64, align: 64, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "proto_getsock", scope: !1450, file: !121, line: 793, baseType: !1477, size: 64, align: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!316, !262, !1480, !316}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64, align: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "doing_getsock", scope: !1450, file: !121, line: 799, baseType: !1477, size: 64, align: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "domore_getsock", scope: !1450, file: !121, line: 805, baseType: !1477, size: 64, align: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "perform_getsock", scope: !1450, file: !121, line: 812, baseType: !1484, size: 64, align: 64, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!316, !1487, !1480, !316}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !1450, file: !121, line: 821, baseType: !1490, size: 64, align: 64, offset: 768)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!289, !262, !423}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "readwrite", scope: !1450, file: !121, line: 825, baseType: !1494, size: 64, align: 64, offset: 832)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!289, !256, !262, !1497, !1461}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "defport", scope: !1450, file: !121, line: 828, baseType: !379, size: 64, align: 64, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1450, file: !121, line: 829, baseType: !457, size: 32, align: 32, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !121, line: 831, baseType: !457, size: 32, align: 32, offset: 992)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "given", scope: !253, file: !121, line: 1011, baseType: !1448, size: 64, align: 64, offset: 7360)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ip_version", scope: !253, file: !121, line: 1013, baseType: !379, size: 64, align: 64, offset: 7424)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sockfd", scope: !253, file: !121, line: 1017, baseType: !315, size: 32, align: 32, offset: 7488)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "writesockfd", scope: !253, file: !121, line: 1018, baseType: !315, size: 32, align: 32, offset: 7520)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "allocptr", scope: !253, file: !121, line: 1035, baseType: !1506, size: 640, align: 64, offset: 7552)
!1506 = !DICompositeType(tag: DW_TAG_structure_type, name: "dynamically_allocated_data", file: !121, line: 1024, size: 640, align: 64, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "proxyuserpwd", scope: !1506, file: !121, line: 1025, baseType: !500, size: 64, align: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "uagent", scope: !1506, file: !121, line: 1026, baseType: !500, size: 64, align: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "accept_encoding", scope: !1506, file: !121, line: 1027, baseType: !500, size: 64, align: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "userpwd", scope: !1506, file: !121, line: 1028, baseType: !500, size: 64, align: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rangeline", scope: !1506, file: !121, line: 1029, baseType: !500, size: 64, align: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1506, file: !121, line: 1030, baseType: !500, size: 64, align: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1506, file: !121, line: 1031, baseType: !500, size: 64, align: 64, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "cookiehost", scope: !1506, file: !121, line: 1032, baseType: !500, size: 64, align: 64, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rtsp_transport", scope: !1506, file: !121, line: 1033, baseType: !500, size: 64, align: 64, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "te", scope: !1506, file: !121, line: 1034, baseType: !500, size: 64, align: 64, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "readchannel_inuse", scope: !253, file: !121, line: 1057, baseType: !423, size: 8, align: 8, offset: 8192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "writechannel_inuse", scope: !253, file: !121, line: 1059, baseType: !423, size: 8, align: 8, offset: 8200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "send_pipe", scope: !253, file: !121, line: 1061, baseType: !330, size: 256, align: 64, offset: 8256)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "recv_pipe", scope: !253, file: !121, line: 1063, baseType: !330, size: 256, align: 64, offset: 8512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "master_buffer", scope: !253, file: !121, line: 1065, baseType: !500, size: 64, align: 64, offset: 8768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !253, file: !121, line: 1067, baseType: !347, size: 64, align: 64, offset: 8832)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !253, file: !121, line: 1068, baseType: !347, size: 64, align: 64, offset: 8896)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "seek_func", scope: !253, file: !121, line: 1071, baseType: !695, size: 64, align: 64, offset: 8960)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "seek_client", scope: !253, file: !121, line: 1072, baseType: !311, size: 64, align: 64, offset: 9024)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "syserr_buf", scope: !253, file: !121, line: 1091, baseType: !1528, size: 2048, align: 8, offset: 9088)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 2048, align: 8, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "trailer", scope: !253, file: !121, line: 1099, baseType: !500, size: 64, align: 64, offset: 11136)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "trlMax", scope: !253, file: !121, line: 1100, baseType: !316, size: 32, align: 32, offset: 11200)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "trlPos", scope: !253, file: !121, line: 1101, baseType: !316, size: 32, align: 32, offset: 11232)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !253, file: !121, line: 1114, baseType: !1535, size: 1792, align: 64, offset: 11264)
!1535 = !DICompositeType(tag: DW_TAG_union_type, scope: !253, file: !121, line: 1103, size: 1792, align: 64, elements: !1536)
!1536 = !{!1537, !1584, !1589, !1594, !1597, !1645, !1659, !1671, !1678, !1696}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ftpc", scope: !1535, file: !121, line: 1104, baseType: !1538, size: 1792, align: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "ftp_conn", file: !135, line: 118, size: 1792, align: 64, elements: !1539)
!1539 = !{!1540, !1560, !1561, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1578, !1579, !1580, !1581, !1582, !1583}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1538, file: !135, line: 119, baseType: !1541, size: 896, align: 64)
!1541 = !DICompositeType(tag: DW_TAG_structure_type, name: "pingpong", file: !1542, line: 48, size: 896, align: 64, elements: !1543)
!1542 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/pingpong.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1541, file: !1542, line: 49, baseType: !500, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !1541, file: !1542, line: 50, baseType: !347, size: 64, align: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "nread_resp", scope: !1541, file: !1542, line: 51, baseType: !347, size: 64, align: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "linestart_resp", scope: !1541, file: !1542, line: 52, baseType: !500, size: 64, align: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pending_resp", scope: !1541, file: !1542, line: 54, baseType: !423, size: 8, align: 8, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sendthis", scope: !1541, file: !1542, line: 57, baseType: !500, size: 64, align: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sendleft", scope: !1541, file: !1542, line: 59, baseType: !347, size: 64, align: 64, offset: 384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sendsize", scope: !1541, file: !1542, line: 60, baseType: !347, size: 64, align: 64, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1541, file: !1542, line: 61, baseType: !411, size: 128, align: 64, offset: 512)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "response_time", scope: !1541, file: !1542, line: 63, baseType: !379, size: 64, align: 64, offset: 640)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1541, file: !1542, line: 66, baseType: !262, size: 64, align: 64, offset: 704)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "statemach_act", scope: !1541, file: !1542, line: 72, baseType: !1454, size: 64, align: 64, offset: 768)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "endofresp", scope: !1541, file: !1542, line: 74, baseType: !1557, size: 64, align: 64, offset: 832)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!423, !262, !500, !347, !1472}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "entrypath", scope: !1538, file: !135, line: 120, baseType: !500, size: 64, align: 64, offset: 896)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dirs", scope: !1538, file: !135, line: 121, baseType: !1562, size: 64, align: 64, offset: 960)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dirdepth", scope: !1538, file: !135, line: 122, baseType: !316, size: 32, align: 32, offset: 1024)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "diralloc", scope: !1538, file: !135, line: 123, baseType: !316, size: 32, align: 32, offset: 1056)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1538, file: !135, line: 124, baseType: !500, size: 64, align: 64, offset: 1088)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "dont_check", scope: !1538, file: !135, line: 125, baseType: !423, size: 8, align: 8, offset: 1152)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_valid", scope: !1538, file: !135, line: 128, baseType: !423, size: 8, align: 8, offset: 1160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cwddone", scope: !1538, file: !135, line: 131, baseType: !423, size: 8, align: 8, offset: 1168)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cwdfail", scope: !1538, file: !135, line: 133, baseType: !423, size: 8, align: 8, offset: 1176)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_data_conn", scope: !1538, file: !135, line: 135, baseType: !423, size: 8, align: 8, offset: 1184)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prevpath", scope: !1538, file: !135, line: 136, baseType: !500, size: 64, align: 64, offset: 1216)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "transfertype", scope: !1538, file: !135, line: 137, baseType: !501, size: 8, align: 8, offset: 1280)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "count1", scope: !1538, file: !135, line: 139, baseType: !316, size: 32, align: 32, offset: 1312)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "count2", scope: !1538, file: !135, line: 140, baseType: !316, size: 32, align: 32, offset: 1344)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "count3", scope: !1538, file: !135, line: 141, baseType: !316, size: 32, align: 32, offset: 1376)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1538, file: !135, line: 142, baseType: !1577, size: 32, align: 32, offset: 1408)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "ftpstate", file: !135, line: 80, baseType: !134)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !1538, file: !135, line: 143, baseType: !1577, size: 32, align: 32, offset: 1440)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "retr_size_saved", scope: !1538, file: !135, line: 145, baseType: !507, size: 64, align: 64, offset: 1472)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "server_os", scope: !1538, file: !135, line: 146, baseType: !500, size: 64, align: 64, offset: 1536)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "known_filesize", scope: !1538, file: !135, line: 147, baseType: !507, size: 64, align: 64, offset: 1600)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "newhost", scope: !1538, file: !135, line: 152, baseType: !500, size: 64, align: 64, offset: 1664)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "newport", scope: !1538, file: !135, line: 153, baseType: !657, size: 16, align: 16, offset: 1728)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "httpc", scope: !1535, file: !121, line: 1105, baseType: !1585, size: 32, align: 32)
!1585 = !DICompositeType(tag: DW_TAG_structure_type, name: "http_conn", file: !1586, line: 200, size: 32, align: 32, elements: !1587)
!1586 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/http.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1587 = !{!1588}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1585, file: !1586, line: 227, baseType: !316, size: 32, align: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sshc", scope: !1535, file: !121, line: 1106, baseType: !1590, size: 64, align: 64)
!1590 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssh_conn", file: !1591, line: 110, size: 64, align: 64, elements: !1592)
!1591 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/ssh.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "authlist", scope: !1590, file: !1591, line: 111, baseType: !527, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tftpc", scope: !1535, file: !121, line: 1107, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tftp_state_data", file: !121, line: 1107, flags: DIFlagFwdDecl)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "imapc", scope: !1535, file: !121, line: 1108, baseType: !1598, size: 1472, align: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "imap_conn", file: !174, line: 70, size: 1472, align: 64, elements: !1599)
!1599 = !{!1600, !1601, !1603, !1604, !1636, !1637, !1638, !1640, !1641, !1642, !1643, !1644}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1598, file: !174, line: 71, baseType: !1541, size: 896, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1598, file: !174, line: 72, baseType: !1602, size: 32, align: 32, offset: 896)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "imapstate", file: !174, line: 50, baseType: !173)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1598, file: !174, line: 73, baseType: !423, size: 8, align: 8, offset: 928)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1598, file: !174, line: 74, baseType: !1605, size: 256, align: 64, offset: 960)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASL", file: !193, line: 101, size: 256, align: 64, elements: !1606)
!1606 = !{!1607, !1628, !1630, !1631, !1632, !1633, !1634, !1635}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !1605, file: !193, line: 102, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "SASLproto", file: !193, line: 86, size: 384, align: 64, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1620, !1624}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "service", scope: !1610, file: !193, line: 87, baseType: !527, size: 64, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "contcode", scope: !1610, file: !193, line: 88, baseType: !316, size: 32, align: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "finalcode", scope: !1610, file: !193, line: 89, baseType: !316, size: 32, align: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "maxirlen", scope: !1610, file: !193, line: 90, baseType: !347, size: 64, align: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "sendauth", scope: !1610, file: !193, line: 91, baseType: !1617, size: 64, align: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!289, !262, !527, !527}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "sendcont", scope: !1610, file: !193, line: 94, baseType: !1621, size: 64, align: 64, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!289, !262, !527}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "getmessage", scope: !1610, file: !193, line: 96, baseType: !1625, size: 64, align: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{null, !500, !1562}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1605, file: !193, line: 103, baseType: !1629, size: 32, align: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "saslstate", file: !193, line: 76, baseType: !192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "authmechs", scope: !1605, file: !193, line: 104, baseType: !457, size: 32, align: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "prefmech", scope: !1605, file: !193, line: 105, baseType: !457, size: 32, align: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "authused", scope: !1605, file: !193, line: 106, baseType: !457, size: 32, align: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "resetprefs", scope: !1605, file: !193, line: 107, baseType: !423, size: 8, align: 8, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mutual_auth", scope: !1605, file: !193, line: 108, baseType: !423, size: 8, align: 8, offset: 200)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "force_ir", scope: !1605, file: !193, line: 109, baseType: !423, size: 8, align: 8, offset: 208)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1598, file: !174, line: 75, baseType: !457, size: 32, align: 32, offset: 1216)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "cmdid", scope: !1598, file: !174, line: 76, baseType: !316, size: 32, align: 32, offset: 1248)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "resptag", scope: !1598, file: !174, line: 77, baseType: !1639, size: 40, align: 8, offset: 1280)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 40, align: 8, elements: !317)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1598, file: !174, line: 78, baseType: !423, size: 8, align: 8, offset: 1320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "login_disabled", scope: !1598, file: !174, line: 79, baseType: !423, size: 8, align: 8, offset: 1328)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ir_supported", scope: !1598, file: !174, line: 80, baseType: !423, size: 8, align: 8, offset: 1336)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox", scope: !1598, file: !174, line: 81, baseType: !500, size: 64, align: 64, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox_uidvalidity", scope: !1598, file: !174, line: 82, baseType: !500, size: 64, align: 64, offset: 1408)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pop3c", scope: !1535, file: !121, line: 1109, baseType: !1646, size: 1536, align: 64)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "pop3_conn", file: !213, line: 60, size: 1536, align: 64, elements: !1647)
!1647 = !{!1648, !1649, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1646, file: !213, line: 61, baseType: !1541, size: 896, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1646, file: !213, line: 62, baseType: !1650, size: 32, align: 32, offset: 896)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "pop3state", file: !213, line: 46, baseType: !212)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1646, file: !213, line: 63, baseType: !423, size: 8, align: 8, offset: 928)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "eob", scope: !1646, file: !213, line: 64, baseType: !347, size: 64, align: 64, offset: 960)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1646, file: !213, line: 66, baseType: !347, size: 64, align: 64, offset: 1024)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1646, file: !213, line: 68, baseType: !1605, size: 256, align: 64, offset: 1088)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "authtypes", scope: !1646, file: !213, line: 69, baseType: !457, size: 32, align: 32, offset: 1344)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "preftype", scope: !1646, file: !213, line: 70, baseType: !457, size: 32, align: 32, offset: 1376)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "apoptimestamp", scope: !1646, file: !213, line: 71, baseType: !500, size: 64, align: 64, offset: 1408)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1646, file: !213, line: 72, baseType: !423, size: 8, align: 8, offset: 1472)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "smtpc", scope: !1535, file: !121, line: 1110, baseType: !1660, size: 1344, align: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "smtp_conn", file: !228, line: 65, size: 1344, align: 64, elements: !1661)
!1661 = !{!1662, !1663, !1665, !1666, !1667, !1668, !1669, !1670}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pp", scope: !1660, file: !228, line: 66, baseType: !1541, size: 896, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1660, file: !228, line: 67, baseType: !1664, size: 32, align: 32, offset: 896)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "smtpstate", file: !228, line: 48, baseType: !227)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ssldone", scope: !1660, file: !228, line: 68, baseType: !423, size: 8, align: 8, offset: 928)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1660, file: !228, line: 69, baseType: !500, size: 64, align: 64, offset: 960)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "sasl", scope: !1660, file: !228, line: 70, baseType: !1605, size: 256, align: 64, offset: 1024)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "tls_supported", scope: !1660, file: !228, line: 71, baseType: !423, size: 8, align: 8, offset: 1280)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "size_supported", scope: !1660, file: !228, line: 72, baseType: !423, size: 8, align: 8, offset: 1288)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "auth_supported", scope: !1660, file: !228, line: 74, baseType: !423, size: 8, align: 8, offset: 1296)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rtspc", scope: !1535, file: !121, line: 1111, baseType: !1672, size: 192, align: 64)
!1672 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtsp_conn", file: !1673, line: 43, size: 192, align: 64, elements: !1674)
!1673 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/rtsp.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_buf", scope: !1672, file: !1673, line: 44, baseType: !500, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_bufsize", scope: !1672, file: !1673, line: 45, baseType: !612, size: 64, align: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_channel", scope: !1672, file: !1673, line: 46, baseType: !316, size: 32, align: 32, offset: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "smbc", scope: !1535, file: !121, line: 1112, baseType: !1679, size: 640, align: 64)
!1679 = !DICompositeType(tag: DW_TAG_structure_type, name: "smb_conn", file: !245, line: 33, size: 640, align: 64, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1679, file: !245, line: 34, baseType: !244, size: 32, align: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1679, file: !245, line: 35, baseType: !500, size: 64, align: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1679, file: !245, line: 36, baseType: !500, size: 64, align: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "challenge", scope: !1679, file: !245, line: 37, baseType: !1685, size: 64, align: 8, offset: 192)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 64, align: 8, elements: !1687)
!1686 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1687 = !{!1688}
!1688 = !DISubrange(count: 8)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1679, file: !245, line: 38, baseType: !457, size: 32, align: 32, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1679, file: !245, line: 39, baseType: !657, size: 16, align: 16, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "recv_buf", scope: !1679, file: !245, line: 40, baseType: !500, size: 64, align: 64, offset: 320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "upload_size", scope: !1679, file: !245, line: 41, baseType: !347, size: 64, align: 64, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !1679, file: !245, line: 42, baseType: !347, size: 64, align: 64, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1679, file: !245, line: 43, baseType: !347, size: 64, align: 64, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "got", scope: !1679, file: !245, line: 44, baseType: !347, size: 64, align: 64, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1535, file: !121, line: 1113, baseType: !311, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cselect_bits", scope: !253, file: !121, line: 1116, baseType: !316, size: 32, align: 32, offset: 13056)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "waitfor", scope: !253, file: !121, line: 1117, baseType: !316, size: 32, align: 32, offset: 13088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "localdev", scope: !253, file: !121, line: 1128, baseType: !500, size: 64, align: 64, offset: 13120)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "localport", scope: !253, file: !121, line: 1129, baseType: !657, size: 16, align: 16, offset: 13184)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "localportrange", scope: !253, file: !121, line: 1130, baseType: !316, size: 32, align: 32, offset: 13216)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_state", scope: !253, file: !121, line: 1137, baseType: !1703, size: 64, align: 32, offset: 13248)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 64, align: 32, elements: !1338)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "bundle", scope: !253, file: !121, line: 1138, baseType: !1705, size: 64, align: 64, offset: 13312)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "connectbundle", file: !426, line: 38, size: 384, align: 64, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "multiuse", scope: !1706, file: !426, line: 39, baseType: !316, size: 32, align: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "num_connections", scope: !1706, file: !426, line: 40, baseType: !347, size: 64, align: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "conn_list", scope: !1706, file: !426, line: 41, baseType: !330, size: 256, align: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "negnpn", scope: !253, file: !121, line: 1140, baseType: !316, size: 32, align: 32, offset: 13376)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIEnumerator(name: "TUNNEL_INIT", value: 0)
!1714 = !DIEnumerator(name: "TUNNEL_CONNECT", value: 1)
!1715 = !DIEnumerator(name: "TUNNEL_COMPLETE", value: 2)
!1716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !295, line: 61, size: 32, align: 32, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1718 = !DIEnumerator(name: "CURLM_CALL_MULTI_PERFORM", value: -1)
!1719 = !DIEnumerator(name: "CURLM_OK", value: 0)
!1720 = !DIEnumerator(name: "CURLM_BAD_HANDLE", value: 1)
!1721 = !DIEnumerator(name: "CURLM_BAD_EASY_HANDLE", value: 2)
!1722 = !DIEnumerator(name: "CURLM_OUT_OF_MEMORY", value: 3)
!1723 = !DIEnumerator(name: "CURLM_INTERNAL_ERROR", value: 4)
!1724 = !DIEnumerator(name: "CURLM_BAD_SOCKET", value: 5)
!1725 = !DIEnumerator(name: "CURLM_UNKNOWN_OPTION", value: 6)
!1726 = !DIEnumerator(name: "CURLM_ADDED_ALREADY", value: 7)
!1727 = !DIEnumerator(name: "CURLM_LAST", value: 8)
!1728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !295, line: 333, size: 32, align: 32, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745}
!1730 = !DIEnumerator(name: "CURLMOPT_SOCKETFUNCTION", value: 20001)
!1731 = !DIEnumerator(name: "CURLMOPT_SOCKETDATA", value: 10002)
!1732 = !DIEnumerator(name: "CURLMOPT_PIPELINING", value: 3)
!1733 = !DIEnumerator(name: "CURLMOPT_TIMERFUNCTION", value: 20004)
!1734 = !DIEnumerator(name: "CURLMOPT_TIMERDATA", value: 10005)
!1735 = !DIEnumerator(name: "CURLMOPT_MAXCONNECTS", value: 6)
!1736 = !DIEnumerator(name: "CURLMOPT_MAX_HOST_CONNECTIONS", value: 7)
!1737 = !DIEnumerator(name: "CURLMOPT_MAX_PIPELINE_LENGTH", value: 8)
!1738 = !DIEnumerator(name: "CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE", value: 30009)
!1739 = !DIEnumerator(name: "CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE", value: 30010)
!1740 = !DIEnumerator(name: "CURLMOPT_PIPELINING_SITE_BL", value: 10011)
!1741 = !DIEnumerator(name: "CURLMOPT_PIPELINING_SERVER_BL", value: 10012)
!1742 = !DIEnumerator(name: "CURLMOPT_MAX_TOTAL_CONNECTIONS", value: 13)
!1743 = !DIEnumerator(name: "CURLMOPT_PUSHFUNCTION", value: 20014)
!1744 = !DIEnumerator(name: "CURLMOPT_PUSHDATA", value: 10015)
!1745 = !DIEnumerator(name: "CURLMOPT_LASTENTRY", value: 10016)
!1746 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1747, line: 28, size: 32, align: 32, elements: !1748)
!1747 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/progress.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760}
!1749 = !DIEnumerator(name: "TIMER_NONE", value: 0)
!1750 = !DIEnumerator(name: "TIMER_STARTOP", value: 1)
!1751 = !DIEnumerator(name: "TIMER_STARTSINGLE", value: 2)
!1752 = !DIEnumerator(name: "TIMER_NAMELOOKUP", value: 3)
!1753 = !DIEnumerator(name: "TIMER_CONNECT", value: 4)
!1754 = !DIEnumerator(name: "TIMER_APPCONNECT", value: 5)
!1755 = !DIEnumerator(name: "TIMER_PRETRANSFER", value: 6)
!1756 = !DIEnumerator(name: "TIMER_STARTTRANSFER", value: 7)
!1757 = !DIEnumerator(name: "TIMER_POSTRANSFER", value: 8)
!1758 = !DIEnumerator(name: "TIMER_STARTACCEPT", value: 9)
!1759 = !DIEnumerator(name: "TIMER_REDIRECT", value: 10)
!1760 = !DIEnumerator(name: "TIMER_LAST", value: 11)
!1761 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1762, line: 31, size: 32, align: 32, elements: !1763)
!1762 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib/transfer.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1763 = !{!1764, !1765, !1766, !1767, !1768}
!1764 = !DIEnumerator(name: "FOLLOW_NONE", value: 0)
!1765 = !DIEnumerator(name: "FOLLOW_FAKE", value: 1)
!1766 = !DIEnumerator(name: "FOLLOW_RETRY", value: 2)
!1767 = !DIEnumerator(name: "FOLLOW_REDIR", value: 3)
!1768 = !DIEnumerator(name: "FOLLOW_LAST", value: 4)
!1769 = !{!311, !1770, !316, !379, !1480, !1772, !500, !1779}
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !1771, line: 54, baseType: !379)
!1771 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "Curl_sh_entry", file: !1, line: 166, size: 192, align: 64, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "easy", scope: !1773, file: !1, line: 167, baseType: !256, size: 64, align: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1773, file: !1, line: 168, baseType: !316, size: 32, align: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "socket", scope: !1773, file: !1, line: 169, baseType: !315, size: 32, align: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "socketp", scope: !1773, file: !1, line: 170, baseType: !311, size: 64, align: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64, align: 64)
!1780 = !{!1781, !1785, !1788, !1792, !1793, !1798, !1801, !1812, !1822, !1825, !1828, !1831, !1834, !1839, !1842, !1846, !1849, !1852, !1853, !1857, !1860, !1861, !1862, !1865, !1868, !1869, !1872, !1873, !1876, !1877, !1878, !1881, !1882, !1883, !1884, !1885, !1888, !1892, !1895, !1898, !1899, !1900, !1901, !1904, !1907, !1910, !1913, !1916, !1917, !1921, !1922, !1925, !1928, !1931, !1934, !1937, !1940, !1941, !1944, !1945}
!1781 = distinct !DISubprogram(name: "Curl_multi_handle", scope: !1, file: !1, line: 300, type: !1782, isLocal: false, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!375, !316, !316}
!1784 = !{}
!1785 = distinct !DISubprogram(name: "curl_multi_init", scope: !1, file: !1, line: 350, type: !1786, isLocal: false, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!446}
!1788 = distinct !DISubprogram(name: "curl_multi_add_handle", scope: !1, file: !1, line: 356, type: !1789, isLocal: false, isDefinition: true, scopeLine: 358, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!1791, !375, !256}
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMcode", file: !295, line: 74, baseType: !1716)
!1792 = distinct !DISubprogram(name: "curl_multi_remove_handle", scope: !1, file: !1, line: 649, type: !1789, isLocal: false, isDefinition: true, scopeLine: 651, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1793 = distinct !DISubprogram(name: "Curl_pipeline_wanted", scope: !1, file: !1, line: 785, type: !1794, isLocal: false, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!423, !1796, !316}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64, align: 64)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !376)
!1798 = distinct !DISubprogram(name: "Curl_multi_handlePipeBreak", scope: !1, file: !1, line: 790, type: !1799, isLocal: false, isDefinition: true, scopeLine: 791, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{null, !256}
!1801 = distinct !DISubprogram(name: "curl_multi_fdset", scope: !1, file: !1, line: 914, type: !1802, isLocal: false, isDefinition: true, scopeLine: 917, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!1791, !375, !1804, !1804, !1804, !1472}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64, align: 64)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !1771, line: 75, baseType: !1806)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, file: !1771, line: 64, size: 1024, align: 64, elements: !1807)
!1807 = !{!1808}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !1806, file: !1771, line: 72, baseType: !1809, size: 1024, align: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 1024, align: 64, elements: !1810)
!1810 = !{!1811}
!1811 = !DISubrange(count: 16)
!1812 = distinct !DISubprogram(name: "curl_multi_wait", scope: !1, file: !1, line: 963, type: !1813, isLocal: false, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!1791, !375, !1815, !457, !316, !1472}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DICompositeType(tag: DW_TAG_structure_type, name: "curl_waitfd", file: !295, line: 110, size: 64, align: 32, elements: !1817)
!1817 = !{!1818, !1819, !1821}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1816, file: !295, line: 111, baseType: !315, size: 32, align: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1816, file: !295, line: 112, baseType: !1820, size: 16, align: 16, offset: 32)
!1820 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1816, file: !295, line: 113, baseType: !1820, size: 16, align: 16, offset: 48)
!1822 = distinct !DISubprogram(name: "Curl_multi_connchanged", scope: !1, file: !1, line: 1118, type: !1823, isLocal: false, isDefinition: true, scopeLine: 1119, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !375}
!1825 = distinct !DISubprogram(name: "Curl_multi_add_perform", scope: !1, file: !1, line: 1139, type: !1826, isLocal: false, isDefinition: true, scopeLine: 1142, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1791, !375, !256, !262}
!1828 = distinct !DISubprogram(name: "curl_multi_perform", scope: !1, file: !1, line: 2143, type: !1829, isLocal: false, isDefinition: true, scopeLine: 2144, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!1791, !375, !1472}
!1831 = distinct !DISubprogram(name: "curl_multi_cleanup", scope: !1, file: !1, line: 2215, type: !1832, isLocal: false, isDefinition: true, scopeLine: 2216, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!1791, !375}
!1834 = distinct !DISubprogram(name: "curl_multi_info_read", scope: !1, file: !1, line: 2288, type: !1835, isLocal: false, isDefinition: true, scopeLine: 2289, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!1837, !375, !1472}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64, align: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMsg", file: !295, line: 101, baseType: !294)
!1839 = distinct !DISubprogram(name: "Curl_multi_closed", scope: !1, file: !1, line: 2466, type: !1840, isLocal: false, isDefinition: true, scopeLine: 2467, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{null, !262, !315}
!1842 = distinct !DISubprogram(name: "curl_multi_setopt", scope: !1, file: !1, line: 2676, type: !1843, isLocal: false, isDefinition: true, scopeLine: 2678, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!1791, !375, !1845, null}
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "CURLMoption", file: !295, line: 384, baseType: !1728)
!1846 = distinct !DISubprogram(name: "curl_multi_socket", scope: !1, file: !1, line: 2746, type: !1847, isLocal: false, isDefinition: true, scopeLine: 2748, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!1791, !375, !315, !1472}
!1849 = distinct !DISubprogram(name: "curl_multi_socket_action", scope: !1, file: !1, line: 2755, type: !1850, isLocal: false, isDefinition: true, scopeLine: 2757, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!1791, !375, !315, !316, !1472}
!1852 = distinct !DISubprogram(name: "curl_multi_socket_all", scope: !1, file: !1, line: 2765, type: !1829, isLocal: false, isDefinition: true, scopeLine: 2767, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1853 = distinct !DISubprogram(name: "curl_multi_timeout", scope: !1, file: !1, line: 2810, type: !1854, isLocal: false, isDefinition: true, scopeLine: 2812, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!1791, !375, !1856}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64, align: 64)
!1857 = distinct !DISubprogram(name: "Curl_expire", scope: !1, file: !1, line: 2923, type: !1858, isLocal: false, isDefinition: true, scopeLine: 2924, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !256, !599}
!1860 = distinct !DISubprogram(name: "Curl_expire_latest", scope: !1, file: !1, line: 2986, type: !1858, isLocal: false, isDefinition: true, scopeLine: 2987, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1861 = distinct !DISubprogram(name: "Curl_expire_clear", scope: !1, file: !1, line: 3024, type: !1799, isLocal: false, isDefinition: true, scopeLine: 3025, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1862 = distinct !DISubprogram(name: "curl_multi_assign", scope: !1, file: !1, line: 3061, type: !1863, isLocal: false, isDefinition: true, scopeLine: 3063, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!1791, !375, !315, !311}
!1865 = distinct !DISubprogram(name: "Curl_multi_max_host_connections", scope: !1, file: !1, line: 3076, type: !1866, isLocal: false, isDefinition: true, scopeLine: 3077, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!347, !375}
!1868 = distinct !DISubprogram(name: "Curl_multi_max_total_connections", scope: !1, file: !1, line: 3081, type: !1866, isLocal: false, isDefinition: true, scopeLine: 3082, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1869 = distinct !DISubprogram(name: "Curl_multi_content_length_penalty_size", scope: !1, file: !1, line: 3086, type: !1870, isLocal: false, isDefinition: true, scopeLine: 3087, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!507, !375}
!1872 = distinct !DISubprogram(name: "Curl_multi_chunk_length_penalty_size", scope: !1, file: !1, line: 3091, type: !1870, isLocal: false, isDefinition: true, scopeLine: 3092, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1873 = distinct !DISubprogram(name: "Curl_multi_pipelining_site_bl", scope: !1, file: !1, line: 3096, type: !1874, isLocal: false, isDefinition: true, scopeLine: 3097, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!329, !375}
!1876 = distinct !DISubprogram(name: "Curl_multi_pipelining_server_bl", scope: !1, file: !1, line: 3101, type: !1874, isLocal: false, isDefinition: true, scopeLine: 3102, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1877 = distinct !DISubprogram(name: "Curl_multi_process_pending_handles", scope: !1, file: !1, line: 3106, type: !1823, isLocal: false, isDefinition: true, scopeLine: 3107, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1878 = distinct !DISubprogram(name: "sh_init", scope: !1, file: !1, line: 268, type: !1879, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!316, !324, !316}
!1881 = distinct !DISubprogram(name: "hash_fd", scope: !1, file: !1, line: 242, type: !353, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1882 = distinct !DISubprogram(name: "fd_key_compare", scope: !1, file: !1, line: 235, type: !358, isLocal: true, isDefinition: true, scopeLine: 236, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1883 = distinct !DISubprogram(name: "sh_freeentry", scope: !1, file: !1, line: 228, type: !363, isLocal: true, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1884 = distinct !DISubprogram(name: "multi_freeamsg", scope: !1, file: !1, line: 294, type: !344, isLocal: true, isDefinition: true, scopeLine: 295, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1885 = distinct !DISubprogram(name: "mstate", scope: !1, file: !1, line: 108, type: !1886, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{null, !256, !264}
!1888 = distinct !DISubprogram(name: "multi_done", scope: !1, file: !1, line: 514, type: !1889, isLocal: true, isDefinition: true, scopeLine: 518, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!289, !1891, !289, !423}
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64, align: 64)
!1892 = distinct !DISubprogram(name: "ConnectionDone", scope: !1, file: !1, line: 485, type: !1893, isLocal: true, isDefinition: true, scopeLine: 486, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!423, !256, !262}
!1895 = distinct !DISubprogram(name: "multi_getsock", scope: !1, file: !1, line: 848, type: !1896, isLocal: true, isDefinition: true, scopeLine: 852, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!316, !256, !1480, !316}
!1898 = distinct !DISubprogram(name: "waitproxyconnect_getsock", scope: !1, file: !1, line: 821, type: !1478, isLocal: true, isDefinition: true, scopeLine: 824, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1899 = distinct !DISubprogram(name: "waitconnect_getsock", scope: !1, file: !1, line: 795, type: !1478, isLocal: true, isDefinition: true, scopeLine: 798, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1900 = distinct !DISubprogram(name: "domore_getsock", scope: !1, file: !1, line: 838, type: !1478, isLocal: true, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1901 = distinct !DISubprogram(name: "multi_runsingle", scope: !1, file: !1, line: 1294, type: !1902, isLocal: true, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!1791, !375, !411, !256}
!1904 = distinct !DISubprogram(name: "multi_ischanged", scope: !1, file: !1, line: 1131, type: !1905, isLocal: true, isDefinition: true, scopeLine: 1132, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!423, !375, !423}
!1907 = distinct !DISubprogram(name: "multi_do", scope: !1, file: !1, line: 1229, type: !1908, isLocal: true, isDefinition: true, scopeLine: 1230, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!289, !1891, !1461}
!1910 = distinct !DISubprogram(name: "multi_reconnect_request", scope: !1, file: !1, line: 1161, type: !1911, isLocal: true, isDefinition: true, scopeLine: 1162, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!289, !1891}
!1913 = distinct !DISubprogram(name: "do_complete", scope: !1, file: !1, line: 1221, type: !1914, isLocal: true, isDefinition: true, scopeLine: 1222, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{null, !262}
!1916 = distinct !DISubprogram(name: "multi_do_more", scope: !1, file: !1, line: 1278, type: !1470, isLocal: true, isDefinition: true, scopeLine: 1279, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1917 = distinct !DISubprogram(name: "multi_addmsg", scope: !1, file: !1, line: 280, type: !1918, isLocal: true, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!1791, !375, !1920}
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!1921 = distinct !DISubprogram(name: "close_all_connections", scope: !1, file: !1, line: 2194, type: !1823, isLocal: true, isDefinition: true, scopeLine: 2195, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1922 = distinct !DISubprogram(name: "singlesocket", scope: !1, file: !1, line: 2318, type: !1923, isLocal: true, isDefinition: true, scopeLine: 2320, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{null, !375, !256}
!1925 = distinct !DISubprogram(name: "sh_addentry", scope: !1, file: !1, line: 188, type: !1926, isLocal: true, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!1772, !324, !315, !256}
!1928 = distinct !DISubprogram(name: "sh_getentry", scope: !1, file: !1, line: 178, type: !1929, isLocal: true, isDefinition: true, scopeLine: 180, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!1772, !324, !315}
!1931 = distinct !DISubprogram(name: "sh_delentry", scope: !1, file: !1, line: 218, type: !1932, isLocal: true, isDefinition: true, scopeLine: 219, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !324, !315}
!1934 = distinct !DISubprogram(name: "add_next_timeout", scope: !1, file: !1, line: 2500, type: !1935, isLocal: true, isDefinition: true, scopeLine: 2503, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1791, !411, !375, !256}
!1937 = distinct !DISubprogram(name: "multi_socket", scope: !1, file: !1, line: 2543, type: !1938, isLocal: true, isDefinition: true, scopeLine: 2548, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!1791, !375, !423, !315, !316, !1472}
!1940 = distinct !DISubprogram(name: "multi_timeout", scope: !1, file: !1, line: 2775, type: !1854, isLocal: true, isDefinition: true, scopeLine: 2777, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1941 = distinct !DISubprogram(name: "update_timer", scope: !1, file: !1, line: 2824, type: !1942, isLocal: true, isDefinition: true, scopeLine: 2825, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!316, !375}
!1944 = distinct !DISubprogram(name: "multi_freetimeout", scope: !1, file: !1, line: 2862, type: !344, isLocal: true, isDefinition: true, scopeLine: 2863, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1945 = distinct !DISubprogram(name: "multi_addtimeout", scope: !1, file: !1, line: 2878, type: !1946, isLocal: true, isDefinition: true, scopeLine: 2880, flags: DIFlagPrototyped, isOptimized: false, variables: !1784)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1791, !329, !1779}
!1948 = !{!1949, !1956, !1957}
!1949 = !DIGlobalVariable(name: "finit", scope: !1885, file: !1, line: 115, type: !1950, isLocal: true, isDefinition: true, variable: [19 x void (%struct.Curl_easy*)*]* @mstate.finit)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 1216, align: 64, elements: !1954)
!1951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "init_multistate_func", file: !1, line: 105, baseType: !1953)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64, align: 64)
!1954 = !{!1955}
!1955 = !DISubrange(count: 19)
!1956 = !DIGlobalVariable(name: "tv_zero", scope: !1940, file: !1, line: 2778, type: !411, isLocal: true, isDefinition: true, variable: %struct.timeval* @multi_timeout.tv_zero)
!1957 = !DIGlobalVariable(name: "none", scope: !1941, file: !1, line: 2834, type: !1958, isLocal: true, isDefinition: true, variable: %struct.timeval* @update_timer.none)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !411)
!1959 = !{i32 2, !"Dwarf Version", i32 4}
!1960 = !{i32 2, !"Debug Info Version", i32 3}
!1961 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!1962 = !DILocalVariable(name: "hashsize", arg: 1, scope: !1781, file: !1, line: 300, type: !316)
!1963 = !DIExpression()
!1964 = !DILocation(line: 300, column: 42, scope: !1781)
!1965 = !DILocalVariable(name: "chashsize", arg: 2, scope: !1781, file: !1, line: 301, type: !316)
!1966 = !DILocation(line: 301, column: 42, scope: !1781)
!1967 = !DILocalVariable(name: "multi", scope: !1781, file: !1, line: 303, type: !375)
!1968 = !DILocation(line: 303, column: 22, scope: !1781)
!1969 = !DILocation(line: 303, column: 30, scope: !1781)
!1970 = !DILocation(line: 305, column: 7, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 305, column: 6)
!1972 = !DILocation(line: 305, column: 6, scope: !1781)
!1973 = !DILocation(line: 306, column: 5, scope: !1971)
!1974 = !DILocation(line: 308, column: 3, scope: !1781)
!1975 = !DILocation(line: 308, column: 10, scope: !1781)
!1976 = !DILocation(line: 308, column: 15, scope: !1781)
!1977 = !DILocation(line: 310, column: 24, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 310, column: 6)
!1979 = !DILocation(line: 310, column: 31, scope: !1978)
!1980 = !DILocation(line: 310, column: 6, scope: !1978)
!1981 = !DILocation(line: 310, column: 6, scope: !1781)
!1982 = !DILocation(line: 311, column: 5, scope: !1978)
!1983 = !DILocation(line: 313, column: 15, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 313, column: 6)
!1985 = !DILocation(line: 313, column: 22, scope: !1984)
!1986 = !DILocation(line: 313, column: 32, scope: !1984)
!1987 = !DILocation(line: 313, column: 6, scope: !1984)
!1988 = !DILocation(line: 313, column: 6, scope: !1781)
!1989 = !DILocation(line: 314, column: 5, scope: !1984)
!1990 = !DILocation(line: 316, column: 27, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 316, column: 6)
!1992 = !DILocation(line: 316, column: 34, scope: !1991)
!1993 = !DILocation(line: 316, column: 46, scope: !1991)
!1994 = !DILocation(line: 316, column: 6, scope: !1991)
!1995 = !DILocation(line: 316, column: 6, scope: !1781)
!1996 = !DILocation(line: 317, column: 5, scope: !1991)
!1997 = !DILocation(line: 319, column: 20, scope: !1781)
!1998 = !DILocation(line: 319, column: 27, scope: !1781)
!1999 = !DILocation(line: 319, column: 3, scope: !1781)
!2000 = !DILocation(line: 320, column: 20, scope: !1781)
!2001 = !DILocation(line: 320, column: 27, scope: !1781)
!2002 = !DILocation(line: 320, column: 3, scope: !1781)
!2003 = !DILocation(line: 323, column: 27, scope: !1781)
!2004 = !DILocation(line: 323, column: 3, scope: !1781)
!2005 = !DILocation(line: 323, column: 10, scope: !1781)
!2006 = !DILocation(line: 323, column: 25, scope: !1781)
!2007 = !DILocation(line: 324, column: 7, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 324, column: 6)
!2009 = !DILocation(line: 324, column: 14, scope: !2008)
!2010 = !DILocation(line: 324, column: 6, scope: !1781)
!2011 = !DILocation(line: 325, column: 5, scope: !2008)
!2012 = !DILocation(line: 327, column: 34, scope: !1781)
!2013 = !DILocation(line: 327, column: 3, scope: !1781)
!2014 = !DILocation(line: 327, column: 10, scope: !1781)
!2015 = !DILocation(line: 327, column: 26, scope: !1781)
!2016 = !DILocation(line: 327, column: 32, scope: !1781)
!2017 = !DILocation(line: 328, column: 46, scope: !1781)
!2018 = !DILocation(line: 328, column: 53, scope: !1781)
!2019 = !DILocation(line: 328, column: 3, scope: !1781)
!2020 = !DILocation(line: 328, column: 10, scope: !1781)
!2021 = !DILocation(line: 328, column: 26, scope: !1781)
!2022 = !DILocation(line: 328, column: 32, scope: !1781)
!2023 = !DILocation(line: 328, column: 43, scope: !1781)
!2024 = !DILocation(line: 330, column: 3, scope: !1781)
!2025 = !DILocation(line: 330, column: 10, scope: !1781)
!2026 = !DILocation(line: 330, column: 30, scope: !1781)
!2027 = !DILocation(line: 333, column: 3, scope: !1781)
!2028 = !DILocation(line: 333, column: 10, scope: !1781)
!2029 = !DILocation(line: 333, column: 22, scope: !1781)
!2030 = !DILocation(line: 334, column: 10, scope: !1781)
!2031 = !DILocation(line: 334, column: 3, scope: !1781)
!2032 = !DILocation(line: 338, column: 22, scope: !1781)
!2033 = !DILocation(line: 338, column: 29, scope: !1781)
!2034 = !DILocation(line: 338, column: 3, scope: !1781)
!2035 = !DILocation(line: 339, column: 22, scope: !1781)
!2036 = !DILocation(line: 339, column: 29, scope: !1781)
!2037 = !DILocation(line: 339, column: 3, scope: !1781)
!2038 = !DILocation(line: 340, column: 27, scope: !1781)
!2039 = !DILocation(line: 340, column: 34, scope: !1781)
!2040 = !DILocation(line: 340, column: 3, scope: !1781)
!2041 = !DILocation(line: 341, column: 14, scope: !1781)
!2042 = !DILocation(line: 341, column: 21, scope: !1781)
!2043 = !DILocation(line: 341, column: 3, scope: !1781)
!2044 = !DILocation(line: 342, column: 3, scope: !1781)
!2045 = !DILocation(line: 342, column: 10, scope: !1781)
!2046 = !DILocation(line: 342, column: 25, scope: !1781)
!2047 = !DILocation(line: 343, column: 23, scope: !1781)
!2048 = !DILocation(line: 343, column: 30, scope: !1781)
!2049 = !DILocation(line: 343, column: 3, scope: !1781)
!2050 = !DILocation(line: 344, column: 23, scope: !1781)
!2051 = !DILocation(line: 344, column: 30, scope: !1781)
!2052 = !DILocation(line: 344, column: 3, scope: !1781)
!2053 = !DILocation(line: 346, column: 3, scope: !1781)
!2054 = !DILocation(line: 347, column: 3, scope: !1781)
!2055 = !DILocation(line: 348, column: 1, scope: !1781)
!2056 = !DILocalVariable(name: "hash", arg: 1, scope: !1878, file: !1, line: 268, type: !324)
!2057 = !DILocation(line: 268, column: 38, scope: !1878)
!2058 = !DILocalVariable(name: "hashsize", arg: 2, scope: !1878, file: !1, line: 268, type: !316)
!2059 = !DILocation(line: 268, column: 48, scope: !1878)
!2060 = !DILocation(line: 270, column: 25, scope: !1878)
!2061 = !DILocation(line: 270, column: 31, scope: !1878)
!2062 = !DILocation(line: 270, column: 10, scope: !1878)
!2063 = !DILocation(line: 270, column: 3, scope: !1878)
!2064 = !DILocalVariable(name: "a", arg: 1, scope: !1884, file: !1, line: 294, type: !311)
!2065 = !DILocation(line: 294, column: 34, scope: !1884)
!2066 = !DILocalVariable(name: "b", arg: 2, scope: !1884, file: !1, line: 294, type: !311)
!2067 = !DILocation(line: 294, column: 43, scope: !1884)
!2068 = !DILocation(line: 296, column: 9, scope: !1884)
!2069 = !DILocation(line: 297, column: 9, scope: !1884)
!2070 = !DILocation(line: 298, column: 1, scope: !1884)
!2071 = !DILocation(line: 352, column: 10, scope: !1785)
!2072 = !DILocation(line: 352, column: 3, scope: !1785)
!2073 = !DILocalVariable(name: "multi", arg: 1, scope: !1788, file: !1, line: 356, type: !375)
!2074 = !DILocation(line: 356, column: 52, scope: !1788)
!2075 = !DILocalVariable(name: "data", arg: 2, scope: !1788, file: !1, line: 357, type: !256)
!2076 = !DILocation(line: 357, column: 51, scope: !1788)
!2077 = !DILocation(line: 360, column: 7, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 360, column: 6)
!2079 = !DILocation(line: 360, column: 7, scope: !2080)
!2080 = !DILexicalBlockFile(scope: !2078, file: !1, discriminator: 1)
!2081 = !DILocation(line: 360, column: 6, scope: !2080)
!2082 = !DILocation(line: 361, column: 5, scope: !2078)
!2083 = !DILocation(line: 364, column: 7, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 364, column: 6)
!2085 = !DILocation(line: 364, column: 7, scope: !2086)
!2086 = !DILexicalBlockFile(scope: !2084, file: !1, discriminator: 1)
!2087 = !DILocation(line: 364, column: 6, scope: !2086)
!2088 = !DILocation(line: 365, column: 5, scope: !2084)
!2089 = !DILocation(line: 369, column: 6, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 369, column: 6)
!2091 = !DILocation(line: 369, column: 12, scope: !2090)
!2092 = !DILocation(line: 369, column: 6, scope: !1788)
!2093 = !DILocation(line: 370, column: 5, scope: !2090)
!2094 = !DILocation(line: 373, column: 20, scope: !1788)
!2095 = !DILocation(line: 373, column: 26, scope: !1788)
!2096 = !DILocation(line: 373, column: 32, scope: !1788)
!2097 = !DILocation(line: 373, column: 3, scope: !1788)
!2098 = !DILocation(line: 383, column: 3, scope: !1788)
!2099 = !DILocation(line: 385, column: 7, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 385, column: 6)
!2101 = !DILocation(line: 385, column: 13, scope: !2100)
!2102 = !DILocation(line: 385, column: 17, scope: !2100)
!2103 = !DILocation(line: 385, column: 35, scope: !2100)
!2104 = !DILocation(line: 386, column: 7, scope: !2100)
!2105 = !DILocation(line: 386, column: 13, scope: !2100)
!2106 = !DILocation(line: 386, column: 17, scope: !2100)
!2107 = !DILocation(line: 386, column: 31, scope: !2100)
!2108 = !DILocation(line: 385, column: 6, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !1788, file: !1, discriminator: 1)
!2110 = !DILocalVariable(name: "global", scope: !2111, file: !1, line: 388, type: !324)
!2111 = distinct !DILexicalBlock(scope: !2100, file: !1, line: 386, column: 50)
!2112 = !DILocation(line: 388, column: 23, scope: !2111)
!2113 = !DILocation(line: 388, column: 32, scope: !2111)
!2114 = !DILocation(line: 389, column: 8, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2111, file: !1, line: 389, column: 8)
!2116 = !DILocation(line: 389, column: 8, scope: !2111)
!2117 = !DILocation(line: 391, column: 29, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2115, file: !1, line: 389, column: 16)
!2119 = !DILocation(line: 391, column: 7, scope: !2118)
!2120 = !DILocation(line: 391, column: 13, scope: !2118)
!2121 = !DILocation(line: 391, column: 17, scope: !2118)
!2122 = !DILocation(line: 391, column: 27, scope: !2118)
!2123 = !DILocation(line: 392, column: 7, scope: !2118)
!2124 = !DILocation(line: 392, column: 13, scope: !2118)
!2125 = !DILocation(line: 392, column: 17, scope: !2118)
!2126 = !DILocation(line: 392, column: 31, scope: !2118)
!2127 = !DILocation(line: 393, column: 5, scope: !2118)
!2128 = !DILocation(line: 394, column: 3, scope: !2111)
!2129 = !DILocation(line: 397, column: 12, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2100, file: !1, line: 397, column: 11)
!2131 = !DILocation(line: 397, column: 18, scope: !2130)
!2132 = !DILocation(line: 397, column: 22, scope: !2130)
!2133 = !DILocation(line: 397, column: 32, scope: !2130)
!2134 = !DILocation(line: 398, column: 7, scope: !2130)
!2135 = !DILocation(line: 398, column: 13, scope: !2130)
!2136 = !DILocation(line: 398, column: 17, scope: !2130)
!2137 = !DILocation(line: 398, column: 31, scope: !2130)
!2138 = !DILocation(line: 397, column: 11, scope: !2139)
!2139 = !DILexicalBlockFile(scope: !2100, file: !1, discriminator: 1)
!2140 = !DILocation(line: 399, column: 28, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2130, file: !1, line: 398, column: 48)
!2142 = !DILocation(line: 399, column: 35, scope: !2141)
!2143 = !DILocation(line: 399, column: 5, scope: !2141)
!2144 = !DILocation(line: 399, column: 11, scope: !2141)
!2145 = !DILocation(line: 399, column: 15, scope: !2141)
!2146 = !DILocation(line: 399, column: 25, scope: !2141)
!2147 = !DILocation(line: 400, column: 5, scope: !2141)
!2148 = !DILocation(line: 400, column: 11, scope: !2141)
!2149 = !DILocation(line: 400, column: 15, scope: !2141)
!2150 = !DILocation(line: 400, column: 29, scope: !2141)
!2151 = !DILocation(line: 401, column: 3, scope: !2141)
!2152 = !DILocation(line: 404, column: 29, scope: !1788)
!2153 = !DILocation(line: 404, column: 36, scope: !1788)
!2154 = !DILocation(line: 404, column: 3, scope: !1788)
!2155 = !DILocation(line: 404, column: 9, scope: !1788)
!2156 = !DILocation(line: 404, column: 15, scope: !1788)
!2157 = !DILocation(line: 404, column: 26, scope: !1788)
!2158 = !DILocation(line: 412, column: 3, scope: !1788)
!2159 = !DILocation(line: 412, column: 9, scope: !1788)
!2160 = !DILocation(line: 412, column: 14, scope: !1788)
!2161 = !DILocation(line: 413, column: 6, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !1788, file: !1, line: 413, column: 6)
!2163 = !DILocation(line: 413, column: 13, scope: !2162)
!2164 = !DILocation(line: 413, column: 6, scope: !1788)
!2165 = !DILocalVariable(name: "last", scope: !2166, file: !1, line: 414, type: !256)
!2166 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 413, column: 20)
!2167 = !DILocation(line: 414, column: 23, scope: !2166)
!2168 = !DILocation(line: 414, column: 30, scope: !2166)
!2169 = !DILocation(line: 414, column: 37, scope: !2166)
!2170 = !DILocation(line: 415, column: 18, scope: !2166)
!2171 = !DILocation(line: 415, column: 5, scope: !2166)
!2172 = !DILocation(line: 415, column: 11, scope: !2166)
!2173 = !DILocation(line: 415, column: 16, scope: !2166)
!2174 = !DILocation(line: 416, column: 18, scope: !2166)
!2175 = !DILocation(line: 416, column: 5, scope: !2166)
!2176 = !DILocation(line: 416, column: 11, scope: !2166)
!2177 = !DILocation(line: 416, column: 16, scope: !2166)
!2178 = !DILocation(line: 417, column: 21, scope: !2166)
!2179 = !DILocation(line: 417, column: 5, scope: !2166)
!2180 = !DILocation(line: 417, column: 12, scope: !2166)
!2181 = !DILocation(line: 417, column: 19, scope: !2166)
!2182 = !DILocation(line: 418, column: 3, scope: !2166)
!2183 = !DILocation(line: 421, column: 5, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2162, file: !1, line: 419, column: 8)
!2185 = !DILocation(line: 421, column: 11, scope: !2184)
!2186 = !DILocation(line: 421, column: 16, scope: !2184)
!2187 = !DILocation(line: 422, column: 36, scope: !2184)
!2188 = !DILocation(line: 422, column: 21, scope: !2184)
!2189 = !DILocation(line: 422, column: 28, scope: !2184)
!2190 = !DILocation(line: 422, column: 34, scope: !2184)
!2191 = !DILocation(line: 422, column: 5, scope: !2184)
!2192 = !DILocation(line: 422, column: 12, scope: !2184)
!2193 = !DILocation(line: 422, column: 19, scope: !2184)
!2194 = !DILocation(line: 426, column: 17, scope: !1788)
!2195 = !DILocation(line: 426, column: 3, scope: !1788)
!2196 = !DILocation(line: 426, column: 9, scope: !1788)
!2197 = !DILocation(line: 426, column: 15, scope: !1788)
!2198 = !DILocation(line: 434, column: 15, scope: !1788)
!2199 = !DILocation(line: 434, column: 3, scope: !1788)
!2200 = !DILocation(line: 437, column: 3, scope: !1788)
!2201 = !DILocation(line: 437, column: 10, scope: !1788)
!2202 = !DILocation(line: 437, column: 18, scope: !1788)
!2203 = !DILocation(line: 440, column: 3, scope: !1788)
!2204 = !DILocation(line: 440, column: 10, scope: !1788)
!2205 = !DILocation(line: 440, column: 19, scope: !1788)
!2206 = !DILocation(line: 452, column: 11, scope: !1788)
!2207 = !DILocation(line: 452, column: 18, scope: !1788)
!2208 = !DILocation(line: 452, column: 3, scope: !1788)
!2209 = !DILocation(line: 458, column: 40, scope: !1788)
!2210 = !DILocation(line: 458, column: 46, scope: !1788)
!2211 = !DILocation(line: 458, column: 50, scope: !1788)
!2212 = !DILocation(line: 458, column: 3, scope: !1788)
!2213 = !DILocation(line: 458, column: 10, scope: !1788)
!2214 = !DILocation(line: 458, column: 26, scope: !1788)
!2215 = !DILocation(line: 458, column: 30, scope: !1788)
!2216 = !DILocation(line: 458, column: 38, scope: !1788)
!2217 = !DILocation(line: 460, column: 5, scope: !1788)
!2218 = !DILocation(line: 460, column: 11, scope: !1788)
!2219 = !DILocation(line: 460, column: 15, scope: !1788)
!2220 = !DILocation(line: 459, column: 3, scope: !1788)
!2221 = !DILocation(line: 459, column: 10, scope: !1788)
!2222 = !DILocation(line: 459, column: 26, scope: !1788)
!2223 = !DILocation(line: 459, column: 30, scope: !1788)
!2224 = !DILocation(line: 459, column: 54, scope: !1788)
!2225 = !DILocation(line: 462, column: 16, scope: !1788)
!2226 = !DILocation(line: 462, column: 3, scope: !1788)
!2227 = !DILocation(line: 463, column: 3, scope: !1788)
!2228 = !DILocation(line: 464, column: 1, scope: !1788)
!2229 = !DILocalVariable(name: "user", arg: 1, scope: !1944, file: !1, line: 2862, type: !311)
!2230 = !DILocation(line: 2862, column: 37, scope: !1944)
!2231 = !DILocalVariable(name: "entryptr", arg: 2, scope: !1944, file: !1, line: 2862, type: !311)
!2232 = !DILocation(line: 2862, column: 49, scope: !1944)
!2233 = !DILocation(line: 2864, column: 9, scope: !1944)
!2234 = !DILocation(line: 2867, column: 3, scope: !1944)
!2235 = !DILocation(line: 2868, column: 1, scope: !1944)
!2236 = !DILocalVariable(name: "data", arg: 1, scope: !1885, file: !1, line: 108, type: !256)
!2237 = !DILocation(line: 108, column: 38, scope: !1885)
!2238 = !DILocalVariable(name: "state", arg: 2, scope: !1885, file: !1, line: 108, type: !264)
!2239 = !DILocation(line: 108, column: 55, scope: !1885)
!2240 = !DILocalVariable(name: "oldstate", scope: !1885, file: !1, line: 114, type: !264)
!2241 = !DILocation(line: 114, column: 14, scope: !1885)
!2242 = !DILocation(line: 114, column: 25, scope: !1885)
!2243 = !DILocation(line: 114, column: 31, scope: !1885)
!2244 = !DILocation(line: 126, column: 6, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !1885, file: !1, line: 126, column: 6)
!2246 = !DILocation(line: 126, column: 18, scope: !2245)
!2247 = !DILocation(line: 126, column: 15, scope: !2245)
!2248 = !DILocation(line: 126, column: 6, scope: !1885)
!2249 = !DILocation(line: 128, column: 5, scope: !2245)
!2250 = !DILocation(line: 130, column: 18, scope: !1885)
!2251 = !DILocation(line: 130, column: 3, scope: !1885)
!2252 = !DILocation(line: 130, column: 9, scope: !1885)
!2253 = !DILocation(line: 130, column: 16, scope: !1885)
!2254 = !DILocation(line: 147, column: 6, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !1885, file: !1, line: 147, column: 6)
!2256 = !DILocation(line: 147, column: 12, scope: !2255)
!2257 = !DILocation(line: 147, column: 6, scope: !1885)
!2258 = !DILocation(line: 149, column: 5, scope: !2255)
!2259 = !DILocation(line: 149, column: 11, scope: !2255)
!2260 = !DILocation(line: 149, column: 18, scope: !2255)
!2261 = !DILocation(line: 149, column: 27, scope: !2255)
!2262 = !DILocation(line: 152, column: 12, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !1885, file: !1, line: 152, column: 6)
!2264 = !DILocation(line: 152, column: 6, scope: !2263)
!2265 = !DILocation(line: 152, column: 6, scope: !1885)
!2266 = !DILocation(line: 153, column: 11, scope: !2263)
!2267 = !DILocation(line: 153, column: 5, scope: !2263)
!2268 = !DILocation(line: 153, column: 18, scope: !2263)
!2269 = !DILocation(line: 154, column: 1, scope: !1885)
!2270 = !DILocalVariable(name: "data", arg: 1, scope: !1857, file: !1, line: 2923, type: !256)
!2271 = !DILocation(line: 2923, column: 36, scope: !1857)
!2272 = !DILocalVariable(name: "milli", arg: 2, scope: !1857, file: !1, line: 2923, type: !599)
!2273 = !DILocation(line: 2923, column: 49, scope: !1857)
!2274 = !DILocalVariable(name: "multi", scope: !1857, file: !1, line: 2925, type: !375)
!2275 = !DILocation(line: 2925, column: 22, scope: !1857)
!2276 = !DILocation(line: 2925, column: 30, scope: !1857)
!2277 = !DILocation(line: 2925, column: 36, scope: !1857)
!2278 = !DILocalVariable(name: "nowp", scope: !1857, file: !1, line: 2926, type: !1779)
!2279 = !DILocation(line: 2926, column: 19, scope: !1857)
!2280 = !DILocation(line: 2926, column: 27, scope: !1857)
!2281 = !DILocation(line: 2926, column: 33, scope: !1857)
!2282 = !DILocation(line: 2926, column: 39, scope: !1857)
!2283 = !DILocalVariable(name: "rc", scope: !1857, file: !1, line: 2927, type: !316)
!2284 = !DILocation(line: 2927, column: 7, scope: !1857)
!2285 = !DILocalVariable(name: "set", scope: !1857, file: !1, line: 2928, type: !411)
!2286 = !DILocation(line: 2928, column: 18, scope: !1857)
!2287 = !DILocation(line: 2932, column: 7, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !1857, file: !1, line: 2932, column: 6)
!2289 = !DILocation(line: 2932, column: 6, scope: !1857)
!2290 = !DILocation(line: 2933, column: 5, scope: !2288)
!2291 = !DILocation(line: 2935, column: 9, scope: !1857)
!2292 = !DILocation(line: 2935, column: 9, scope: !2293)
!2293 = !DILexicalBlockFile(scope: !1857, file: !1, discriminator: 1)
!2294 = !DILocation(line: 2936, column: 24, scope: !1857)
!2295 = !DILocation(line: 2936, column: 29, scope: !1857)
!2296 = !DILocation(line: 2936, column: 7, scope: !1857)
!2297 = !DILocation(line: 2936, column: 14, scope: !1857)
!2298 = !DILocation(line: 2937, column: 25, scope: !1857)
!2299 = !DILocation(line: 2937, column: 30, scope: !1857)
!2300 = !DILocation(line: 2937, column: 36, scope: !1857)
!2301 = !DILocation(line: 2937, column: 7, scope: !1857)
!2302 = !DILocation(line: 2937, column: 15, scope: !1857)
!2303 = !DILocation(line: 2939, column: 10, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !1857, file: !1, line: 2939, column: 6)
!2305 = !DILocation(line: 2939, column: 18, scope: !2304)
!2306 = !DILocation(line: 2939, column: 6, scope: !1857)
!2307 = !DILocation(line: 2940, column: 9, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2304, file: !1, line: 2939, column: 30)
!2309 = !DILocation(line: 2940, column: 15, scope: !2308)
!2310 = !DILocation(line: 2941, column: 9, scope: !2308)
!2311 = !DILocation(line: 2941, column: 17, scope: !2308)
!2312 = !DILocation(line: 2942, column: 3, scope: !2308)
!2313 = !DILocation(line: 2944, column: 6, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !1857, file: !1, line: 2944, column: 6)
!2315 = !DILocation(line: 2944, column: 12, scope: !2314)
!2316 = !DILocation(line: 2944, column: 19, scope: !2314)
!2317 = !DILocation(line: 2944, column: 22, scope: !2318)
!2318 = !DILexicalBlockFile(scope: !2314, file: !1, discriminator: 1)
!2319 = !DILocation(line: 2944, column: 28, scope: !2318)
!2320 = !DILocation(line: 2944, column: 6, scope: !2318)
!2321 = !DILocalVariable(name: "diff", scope: !2322, file: !1, line: 2948, type: !599)
!2322 = distinct !DILexicalBlock(scope: !2314, file: !1, line: 2944, column: 37)
!2323 = !DILocation(line: 2948, column: 12, scope: !2322)
!2324 = !DILocation(line: 2948, column: 38, scope: !2322)
!2325 = !DILocation(line: 2948, column: 19, scope: !2322)
!2326 = !DILocation(line: 2949, column: 8, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 2949, column: 8)
!2328 = !DILocation(line: 2949, column: 13, scope: !2327)
!2329 = !DILocation(line: 2949, column: 8, scope: !2322)
!2330 = !DILocation(line: 2952, column: 25, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 2949, column: 18)
!2332 = !DILocation(line: 2952, column: 31, scope: !2331)
!2333 = !DILocation(line: 2952, column: 37, scope: !2331)
!2334 = !DILocation(line: 2952, column: 7, scope: !2331)
!2335 = !DILocation(line: 2953, column: 7, scope: !2331)
!2336 = !DILocation(line: 2958, column: 23, scope: !2322)
!2337 = !DILocation(line: 2958, column: 29, scope: !2322)
!2338 = !DILocation(line: 2958, column: 35, scope: !2322)
!2339 = !DILocation(line: 2958, column: 48, scope: !2322)
!2340 = !DILocation(line: 2958, column: 5, scope: !2322)
!2341 = !DILocation(line: 2962, column: 33, scope: !2322)
!2342 = !DILocation(line: 2962, column: 40, scope: !2322)
!2343 = !DILocation(line: 2963, column: 34, scope: !2322)
!2344 = !DILocation(line: 2963, column: 40, scope: !2322)
!2345 = !DILocation(line: 2963, column: 46, scope: !2322)
!2346 = !DILocation(line: 2964, column: 34, scope: !2322)
!2347 = !DILocation(line: 2964, column: 41, scope: !2322)
!2348 = !DILocation(line: 2962, column: 10, scope: !2322)
!2349 = !DILocation(line: 2962, column: 8, scope: !2322)
!2350 = !DILocation(line: 2965, column: 8, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 2965, column: 8)
!2352 = !DILocation(line: 2965, column: 8, scope: !2322)
!2353 = !DILocation(line: 2966, column: 13, scope: !2351)
!2354 = !DILocation(line: 2966, column: 64, scope: !2351)
!2355 = !DILocation(line: 2966, column: 7, scope: !2351)
!2356 = !DILocation(line: 2967, column: 3, scope: !2322)
!2357 = !DILocation(line: 2969, column: 4, scope: !1857)
!2358 = !DILocation(line: 2969, column: 11, scope: !1857)
!2359 = !DILocation(line: 2970, column: 34, scope: !1857)
!2360 = !DILocation(line: 2970, column: 3, scope: !1857)
!2361 = !DILocation(line: 2970, column: 9, scope: !1857)
!2362 = !DILocation(line: 2970, column: 15, scope: !1857)
!2363 = !DILocation(line: 2970, column: 24, scope: !1857)
!2364 = !DILocation(line: 2970, column: 32, scope: !1857)
!2365 = !DILocation(line: 2971, column: 39, scope: !1857)
!2366 = !DILocation(line: 2971, column: 45, scope: !1857)
!2367 = !DILocation(line: 2971, column: 52, scope: !1857)
!2368 = !DILocation(line: 2972, column: 39, scope: !1857)
!2369 = !DILocation(line: 2972, column: 45, scope: !1857)
!2370 = !DILocation(line: 2972, column: 51, scope: !1857)
!2371 = !DILocation(line: 2971, column: 21, scope: !1857)
!2372 = !DILocation(line: 2971, column: 3, scope: !1857)
!2373 = !DILocation(line: 2971, column: 10, scope: !1857)
!2374 = !DILocation(line: 2971, column: 19, scope: !1857)
!2375 = !DILocation(line: 2973, column: 1, scope: !1857)
!2376 = !DILocation(line: 2973, column: 1, scope: !2293)
!2377 = !DILocalVariable(name: "multi", arg: 1, scope: !1941, file: !1, line: 2824, type: !375)
!2378 = !DILocation(line: 2824, column: 44, scope: !1941)
!2379 = !DILocalVariable(name: "timeout_ms", scope: !1941, file: !1, line: 2826, type: !379)
!2380 = !DILocation(line: 2826, column: 8, scope: !1941)
!2381 = !DILocation(line: 2828, column: 7, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2828, column: 6)
!2383 = !DILocation(line: 2828, column: 14, scope: !2382)
!2384 = !DILocation(line: 2828, column: 6, scope: !1941)
!2385 = !DILocation(line: 2829, column: 5, scope: !2382)
!2386 = !DILocation(line: 2830, column: 20, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2830, column: 6)
!2388 = !DILocation(line: 2830, column: 6, scope: !2387)
!2389 = !DILocation(line: 2830, column: 6, scope: !1941)
!2390 = !DILocation(line: 2831, column: 5, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2387, file: !1, line: 2830, column: 41)
!2392 = !DILocation(line: 2833, column: 6, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2833, column: 6)
!2394 = !DILocation(line: 2833, column: 17, scope: !2393)
!2395 = !DILocation(line: 2833, column: 6, scope: !1941)
!2396 = !DILocation(line: 2835, column: 8, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 2835, column: 8)
!2398 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 2833, column: 22)
!2399 = !DILocation(line: 2835, column: 8, scope: !2398)
!2400 = !DILocation(line: 2835, column: 8, scope: !2401)
!2401 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 1)
!2402 = !DILocation(line: 2835, column: 8, scope: !2403)
!2403 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 2)
!2404 = !DILocation(line: 2835, column: 8, scope: !2405)
!2405 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 3)
!2406 = !DILocation(line: 2835, column: 8, scope: !2407)
!2407 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 4)
!2408 = !DILocation(line: 2835, column: 8, scope: !2409)
!2409 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 5)
!2410 = !DILocation(line: 2835, column: 8, scope: !2411)
!2411 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 6)
!2412 = !DILocation(line: 2835, column: 8, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !2397, file: !1, discriminator: 7)
!2414 = !DILocation(line: 2835, column: 8, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !2398, file: !1, discriminator: 8)
!2416 = !DILocation(line: 2836, column: 7, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2397, file: !1, line: 2835, column: 60)
!2418 = !DILocation(line: 2836, column: 14, scope: !2417)
!2419 = !DILocation(line: 2836, column: 31, scope: !2417)
!2420 = !DILocation(line: 2839, column: 14, scope: !2417)
!2421 = !DILocation(line: 2839, column: 21, scope: !2417)
!2422 = !DILocation(line: 2839, column: 30, scope: !2417)
!2423 = !DILocation(line: 2839, column: 41, scope: !2417)
!2424 = !DILocation(line: 2839, column: 48, scope: !2417)
!2425 = !DILocation(line: 2839, column: 7, scope: !2417)
!2426 = !DILocation(line: 2841, column: 5, scope: !2398)
!2427 = !DILocation(line: 2848, column: 6, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 2848, column: 6)
!2429 = !DILocation(line: 2848, column: 6, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 1)
!2431 = !DILocation(line: 2848, column: 6, scope: !2432)
!2432 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 2)
!2433 = !DILocation(line: 2848, column: 6, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 3)
!2435 = !DILocation(line: 2848, column: 6, scope: !2436)
!2436 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 4)
!2437 = !DILocation(line: 2848, column: 6, scope: !2438)
!2438 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 5)
!2439 = !DILocation(line: 2848, column: 6, scope: !2440)
!2440 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 6)
!2441 = !DILocation(line: 2848, column: 6, scope: !2442)
!2442 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 7)
!2443 = !DILocation(line: 2848, column: 6, scope: !2444)
!2444 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 8)
!2445 = !DILocation(line: 2848, column: 6, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !2428, file: !1, discriminator: 9)
!2447 = !DILocation(line: 2848, column: 73, scope: !2446)
!2448 = !DILocation(line: 2849, column: 5, scope: !2428)
!2449 = !DILocation(line: 2851, column: 3, scope: !1941)
!2450 = !DILocation(line: 2851, column: 10, scope: !1941)
!2451 = !DILocation(line: 2851, column: 27, scope: !1941)
!2452 = !DILocation(line: 2851, column: 34, scope: !1941)
!2453 = !DILocation(line: 2851, column: 44, scope: !1941)
!2454 = !DILocation(line: 2853, column: 10, scope: !1941)
!2455 = !DILocation(line: 2853, column: 17, scope: !1941)
!2456 = !DILocation(line: 2853, column: 26, scope: !1941)
!2457 = !DILocation(line: 2853, column: 33, scope: !1941)
!2458 = !DILocation(line: 2853, column: 45, scope: !1941)
!2459 = !DILocation(line: 2853, column: 52, scope: !1941)
!2460 = !DILocation(line: 2853, column: 3, scope: !1941)
!2461 = !DILocation(line: 2854, column: 1, scope: !1941)
!2462 = !DILocalVariable(name: "multi", arg: 1, scope: !1792, file: !1, line: 649, type: !375)
!2463 = !DILocation(line: 649, column: 55, scope: !1792)
!2464 = !DILocalVariable(name: "data", arg: 2, scope: !1792, file: !1, line: 650, type: !256)
!2465 = !DILocation(line: 650, column: 54, scope: !1792)
!2466 = !DILocalVariable(name: "easy", scope: !1792, file: !1, line: 652, type: !256)
!2467 = !DILocation(line: 652, column: 21, scope: !1792)
!2468 = !DILocation(line: 652, column: 28, scope: !1792)
!2469 = !DILocalVariable(name: "premature", scope: !1792, file: !1, line: 653, type: !423)
!2470 = !DILocation(line: 653, column: 8, scope: !1792)
!2471 = !DILocalVariable(name: "easy_owns_conn", scope: !1792, file: !1, line: 654, type: !423)
!2472 = !DILocation(line: 654, column: 8, scope: !1792)
!2473 = !DILocalVariable(name: "e", scope: !1792, file: !1, line: 655, type: !334)
!2474 = !DILocation(line: 655, column: 30, scope: !1792)
!2475 = !DILocation(line: 658, column: 7, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 658, column: 6)
!2477 = !DILocation(line: 658, column: 7, scope: !2478)
!2478 = !DILexicalBlockFile(scope: !2476, file: !1, discriminator: 1)
!2479 = !DILocation(line: 658, column: 6, scope: !2478)
!2480 = !DILocation(line: 659, column: 5, scope: !2476)
!2481 = !DILocation(line: 662, column: 7, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 662, column: 6)
!2483 = !DILocation(line: 662, column: 7, scope: !2484)
!2484 = !DILexicalBlockFile(scope: !2482, file: !1, discriminator: 1)
!2485 = !DILocation(line: 662, column: 6, scope: !2484)
!2486 = !DILocation(line: 663, column: 5, scope: !2482)
!2487 = !DILocation(line: 666, column: 7, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 666, column: 6)
!2489 = !DILocation(line: 666, column: 13, scope: !2488)
!2490 = !DILocation(line: 666, column: 6, scope: !1792)
!2491 = !DILocation(line: 667, column: 5, scope: !2488)
!2492 = !DILocation(line: 669, column: 16, scope: !1792)
!2493 = !DILocation(line: 669, column: 22, scope: !1792)
!2494 = !DILocation(line: 669, column: 29, scope: !1792)
!2495 = !DILocation(line: 669, column: 15, scope: !1792)
!2496 = !DILocation(line: 669, column: 13, scope: !1792)
!2497 = !DILocation(line: 670, column: 21, scope: !1792)
!2498 = !DILocation(line: 670, column: 27, scope: !1792)
!2499 = !DILocation(line: 670, column: 37, scope: !1792)
!2500 = !DILocation(line: 670, column: 41, scope: !2501)
!2501 = !DILexicalBlockFile(scope: !1792, file: !1, discriminator: 1)
!2502 = !DILocation(line: 670, column: 47, scope: !2501)
!2503 = !DILocation(line: 670, column: 58, scope: !2501)
!2504 = !DILocation(line: 670, column: 66, scope: !2501)
!2505 = !DILocation(line: 670, column: 63, scope: !2501)
!2506 = !DILocation(line: 670, column: 20, scope: !2507)
!2507 = !DILexicalBlockFile(scope: !1792, file: !1, discriminator: 2)
!2508 = !DILocation(line: 670, column: 18, scope: !2507)
!2509 = !DILocation(line: 675, column: 6, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 675, column: 6)
!2511 = !DILocation(line: 675, column: 6, scope: !1792)
!2512 = !DILocation(line: 678, column: 5, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2510, file: !1, line: 675, column: 17)
!2514 = !DILocation(line: 678, column: 12, scope: !2513)
!2515 = !DILocation(line: 678, column: 21, scope: !2513)
!2516 = !DILocation(line: 682, column: 40, scope: !2513)
!2517 = !DILocation(line: 682, column: 5, scope: !2513)
!2518 = !DILocation(line: 683, column: 3, scope: !2513)
!2519 = !DILocation(line: 685, column: 6, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 685, column: 6)
!2521 = !DILocation(line: 685, column: 12, scope: !2520)
!2522 = !DILocation(line: 685, column: 22, scope: !2520)
!2523 = !DILocation(line: 686, column: 6, scope: !2520)
!2524 = !DILocation(line: 686, column: 12, scope: !2520)
!2525 = !DILocation(line: 686, column: 19, scope: !2520)
!2526 = !DILocation(line: 686, column: 36, scope: !2520)
!2527 = !DILocation(line: 687, column: 6, scope: !2520)
!2528 = !DILocation(line: 687, column: 12, scope: !2520)
!2529 = !DILocation(line: 687, column: 19, scope: !2520)
!2530 = !DILocation(line: 685, column: 6, scope: !2501)
!2531 = !DILocation(line: 690, column: 29, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2520, file: !1, line: 687, column: 44)
!2533 = !DILocation(line: 690, column: 5, scope: !2532)
!2534 = !DILocation(line: 690, column: 11, scope: !2532)
!2535 = !DILocation(line: 690, column: 22, scope: !2532)
!2536 = !DILocation(line: 690, column: 27, scope: !2532)
!2537 = !DILocation(line: 694, column: 5, scope: !2532)
!2538 = !DILocation(line: 695, column: 20, scope: !2532)
!2539 = !DILocation(line: 696, column: 3, scope: !2532)
!2540 = !DILocation(line: 701, column: 21, scope: !1792)
!2541 = !DILocation(line: 701, column: 3, scope: !1792)
!2542 = !DILocation(line: 703, column: 6, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 703, column: 6)
!2544 = !DILocation(line: 703, column: 12, scope: !2543)
!2545 = !DILocation(line: 703, column: 16, scope: !2543)
!2546 = !DILocation(line: 703, column: 30, scope: !2543)
!2547 = !DILocation(line: 703, column: 6, scope: !1792)
!2548 = !DILocation(line: 705, column: 5, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2543, file: !1, line: 703, column: 47)
!2550 = !DILocation(line: 705, column: 11, scope: !2549)
!2551 = !DILocation(line: 705, column: 15, scope: !2549)
!2552 = !DILocation(line: 705, column: 25, scope: !2549)
!2553 = !DILocation(line: 706, column: 5, scope: !2549)
!2554 = !DILocation(line: 706, column: 11, scope: !2549)
!2555 = !DILocation(line: 706, column: 15, scope: !2549)
!2556 = !DILocation(line: 706, column: 29, scope: !2549)
!2557 = !DILocation(line: 707, column: 3, scope: !2549)
!2558 = !DILocation(line: 709, column: 6, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 709, column: 6)
!2560 = !DILocation(line: 709, column: 12, scope: !2559)
!2561 = !DILocation(line: 709, column: 6, scope: !1792)
!2562 = !DILocation(line: 713, column: 8, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !1, line: 713, column: 8)
!2564 = distinct !DILexicalBlock(scope: !2559, file: !1, line: 709, column: 23)
!2565 = !DILocation(line: 713, column: 8, scope: !2564)
!2566 = !DILocation(line: 720, column: 25, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2563, file: !1, line: 713, column: 24)
!2568 = !DILocation(line: 720, column: 31, scope: !2567)
!2569 = !DILocation(line: 720, column: 42, scope: !2567)
!2570 = !DILocation(line: 720, column: 48, scope: !2567)
!2571 = !DILocation(line: 720, column: 56, scope: !2567)
!2572 = !DILocation(line: 720, column: 13, scope: !2567)
!2573 = !DILocation(line: 721, column: 5, scope: !2567)
!2574 = !DILocation(line: 724, column: 33, scope: !2563)
!2575 = !DILocation(line: 724, column: 39, scope: !2563)
!2576 = !DILocation(line: 724, column: 45, scope: !2563)
!2577 = !DILocation(line: 724, column: 7, scope: !2563)
!2578 = !DILocation(line: 725, column: 3, scope: !2564)
!2579 = !DILocation(line: 727, column: 23, scope: !1792)
!2580 = !DILocation(line: 727, column: 29, scope: !1792)
!2581 = !DILocation(line: 727, column: 3, scope: !1792)
!2582 = !DILocation(line: 731, column: 23, scope: !1792)
!2583 = !DILocation(line: 731, column: 29, scope: !1792)
!2584 = !DILocation(line: 731, column: 35, scope: !1792)
!2585 = !DILocation(line: 731, column: 3, scope: !1792)
!2586 = !DILocation(line: 735, column: 3, scope: !1792)
!2587 = !DILocation(line: 735, column: 9, scope: !1792)
!2588 = !DILocation(line: 735, column: 15, scope: !1792)
!2589 = !DILocation(line: 735, column: 26, scope: !1792)
!2590 = !DILocation(line: 739, column: 3, scope: !1792)
!2591 = !DILocation(line: 739, column: 9, scope: !1792)
!2592 = !DILocation(line: 739, column: 16, scope: !1792)
!2593 = !DILocation(line: 740, column: 16, scope: !1792)
!2594 = !DILocation(line: 740, column: 23, scope: !1792)
!2595 = !DILocation(line: 740, column: 3, scope: !1792)
!2596 = !DILocation(line: 744, column: 6, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 744, column: 6)
!2598 = !DILocation(line: 744, column: 12, scope: !2597)
!2599 = !DILocation(line: 744, column: 6, scope: !1792)
!2600 = !DILocation(line: 745, column: 5, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2597, file: !1, line: 744, column: 23)
!2602 = !DILocation(line: 745, column: 11, scope: !2601)
!2603 = !DILocation(line: 745, column: 22, scope: !2601)
!2604 = !DILocation(line: 745, column: 27, scope: !2601)
!2605 = !DILocation(line: 746, column: 5, scope: !2601)
!2606 = !DILocation(line: 746, column: 11, scope: !2601)
!2607 = !DILocation(line: 746, column: 21, scope: !2601)
!2608 = !DILocation(line: 747, column: 3, scope: !2601)
!2609 = !DILocation(line: 749, column: 3, scope: !1792)
!2610 = !DILocation(line: 749, column: 9, scope: !1792)
!2611 = !DILocation(line: 749, column: 15, scope: !1792)
!2612 = !DILocation(line: 754, column: 11, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 754, column: 3)
!2614 = !DILocation(line: 754, column: 18, scope: !2613)
!2615 = !DILocation(line: 754, column: 26, scope: !2613)
!2616 = !DILocation(line: 754, column: 9, scope: !2613)
!2617 = !DILocation(line: 754, column: 7, scope: !2613)
!2618 = !DILocation(line: 754, column: 32, scope: !2619)
!2619 = !DILexicalBlockFile(scope: !2620, file: !1, discriminator: 1)
!2620 = distinct !DILexicalBlock(scope: !2613, file: !1, line: 754, column: 3)
!2621 = !DILocation(line: 754, column: 3, scope: !2619)
!2622 = !DILocalVariable(name: "msg", scope: !2623, file: !1, line: 755, type: !1920)
!2623 = distinct !DILexicalBlock(scope: !2620, file: !1, line: 754, column: 48)
!2624 = !DILocation(line: 755, column: 26, scope: !2623)
!2625 = !DILocation(line: 755, column: 32, scope: !2623)
!2626 = !DILocation(line: 755, column: 35, scope: !2623)
!2627 = !DILocation(line: 757, column: 8, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2623, file: !1, line: 757, column: 8)
!2629 = !DILocation(line: 757, column: 13, scope: !2628)
!2630 = !DILocation(line: 757, column: 20, scope: !2628)
!2631 = !DILocation(line: 757, column: 35, scope: !2628)
!2632 = !DILocation(line: 757, column: 32, scope: !2628)
!2633 = !DILocation(line: 757, column: 8, scope: !2623)
!2634 = !DILocation(line: 758, column: 26, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2628, file: !1, line: 757, column: 41)
!2636 = !DILocation(line: 758, column: 33, scope: !2635)
!2637 = !DILocation(line: 758, column: 42, scope: !2635)
!2638 = !DILocation(line: 758, column: 7, scope: !2635)
!2639 = !DILocation(line: 760, column: 7, scope: !2635)
!2640 = !DILocation(line: 762, column: 3, scope: !2623)
!2641 = !DILocation(line: 754, column: 39, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2620, file: !1, discriminator: 2)
!2643 = !DILocation(line: 754, column: 42, scope: !2642)
!2644 = !DILocation(line: 754, column: 37, scope: !2642)
!2645 = !DILocation(line: 754, column: 3, scope: !2642)
!2646 = !DILocation(line: 765, column: 6, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 765, column: 6)
!2648 = !DILocation(line: 765, column: 12, scope: !2647)
!2649 = !DILocation(line: 765, column: 6, scope: !1792)
!2650 = !DILocation(line: 766, column: 24, scope: !2647)
!2651 = !DILocation(line: 766, column: 30, scope: !2647)
!2652 = !DILocation(line: 766, column: 5, scope: !2647)
!2653 = !DILocation(line: 766, column: 11, scope: !2647)
!2654 = !DILocation(line: 766, column: 17, scope: !2647)
!2655 = !DILocation(line: 766, column: 22, scope: !2647)
!2656 = !DILocation(line: 768, column: 20, scope: !2647)
!2657 = !DILocation(line: 768, column: 26, scope: !2647)
!2658 = !DILocation(line: 768, column: 5, scope: !2647)
!2659 = !DILocation(line: 768, column: 12, scope: !2647)
!2660 = !DILocation(line: 768, column: 18, scope: !2647)
!2661 = !DILocation(line: 771, column: 6, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !1792, file: !1, line: 771, column: 6)
!2663 = !DILocation(line: 771, column: 12, scope: !2662)
!2664 = !DILocation(line: 771, column: 6, scope: !1792)
!2665 = !DILocation(line: 772, column: 24, scope: !2662)
!2666 = !DILocation(line: 772, column: 30, scope: !2662)
!2667 = !DILocation(line: 772, column: 5, scope: !2662)
!2668 = !DILocation(line: 772, column: 11, scope: !2662)
!2669 = !DILocation(line: 772, column: 17, scope: !2662)
!2670 = !DILocation(line: 772, column: 22, scope: !2662)
!2671 = !DILocation(line: 774, column: 21, scope: !2662)
!2672 = !DILocation(line: 774, column: 27, scope: !2662)
!2673 = !DILocation(line: 774, column: 5, scope: !2662)
!2674 = !DILocation(line: 774, column: 12, scope: !2662)
!2675 = !DILocation(line: 774, column: 19, scope: !2662)
!2676 = !DILocation(line: 778, column: 3, scope: !1792)
!2677 = !DILocation(line: 778, column: 10, scope: !1792)
!2678 = !DILocation(line: 778, column: 18, scope: !1792)
!2679 = !DILocation(line: 780, column: 16, scope: !1792)
!2680 = !DILocation(line: 780, column: 3, scope: !1792)
!2681 = !DILocation(line: 781, column: 3, scope: !1792)
!2682 = !DILocation(line: 782, column: 1, scope: !1792)
!2683 = !DILocalVariable(name: "multi", arg: 1, scope: !1877, file: !1, line: 3106, type: !375)
!2684 = !DILocation(line: 3106, column: 60, scope: !1877)
!2685 = !DILocalVariable(name: "e", scope: !1877, file: !1, line: 3108, type: !334)
!2686 = !DILocation(line: 3108, column: 30, scope: !1877)
!2687 = !DILocation(line: 3108, column: 34, scope: !1877)
!2688 = !DILocation(line: 3108, column: 41, scope: !1877)
!2689 = !DILocation(line: 3108, column: 49, scope: !1877)
!2690 = !DILocation(line: 3110, column: 3, scope: !1877)
!2691 = !DILocation(line: 3110, column: 9, scope: !2692)
!2692 = !DILexicalBlockFile(scope: !1877, file: !1, discriminator: 1)
!2693 = !DILocation(line: 3110, column: 3, scope: !2692)
!2694 = !DILocalVariable(name: "data", scope: !2695, file: !1, line: 3111, type: !256)
!2695 = distinct !DILexicalBlock(scope: !1877, file: !1, line: 3110, column: 12)
!2696 = !DILocation(line: 3111, column: 23, scope: !2695)
!2697 = !DILocation(line: 3111, column: 30, scope: !2695)
!2698 = !DILocation(line: 3111, column: 33, scope: !2695)
!2699 = !DILocalVariable(name: "next", scope: !2695, file: !1, line: 3112, type: !334)
!2700 = !DILocation(line: 3112, column: 32, scope: !2695)
!2701 = !DILocation(line: 3112, column: 39, scope: !2695)
!2702 = !DILocation(line: 3112, column: 42, scope: !2695)
!2703 = !DILocation(line: 3114, column: 8, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2695, file: !1, line: 3114, column: 8)
!2705 = !DILocation(line: 3114, column: 14, scope: !2704)
!2706 = !DILocation(line: 3114, column: 21, scope: !2704)
!2707 = !DILocation(line: 3114, column: 8, scope: !2695)
!2708 = !DILocation(line: 3115, column: 7, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2704, file: !1, line: 3114, column: 50)
!2710 = !DILocation(line: 3118, column: 26, scope: !2709)
!2711 = !DILocation(line: 3118, column: 33, scope: !2709)
!2712 = !DILocation(line: 3118, column: 42, scope: !2709)
!2713 = !DILocation(line: 3118, column: 7, scope: !2709)
!2714 = !DILocation(line: 3121, column: 26, scope: !2709)
!2715 = !DILocation(line: 3121, column: 7, scope: !2709)
!2716 = !DILocation(line: 3122, column: 5, scope: !2709)
!2717 = !DILocation(line: 3124, column: 9, scope: !2695)
!2718 = !DILocation(line: 3124, column: 7, scope: !2695)
!2719 = !DILocation(line: 3110, column: 3, scope: !2720)
!2720 = !DILexicalBlockFile(scope: !1877, file: !1, discriminator: 2)
!2721 = !DILocation(line: 3126, column: 1, scope: !1877)
!2722 = !DILocalVariable(name: "data", arg: 1, scope: !1861, file: !1, line: 3024, type: !256)
!2723 = !DILocation(line: 3024, column: 42, scope: !1861)
!2724 = !DILocalVariable(name: "multi", scope: !1861, file: !1, line: 3026, type: !375)
!2725 = !DILocation(line: 3026, column: 22, scope: !1861)
!2726 = !DILocation(line: 3026, column: 30, scope: !1861)
!2727 = !DILocation(line: 3026, column: 36, scope: !1861)
!2728 = !DILocalVariable(name: "nowp", scope: !1861, file: !1, line: 3027, type: !1779)
!2729 = !DILocation(line: 3027, column: 19, scope: !1861)
!2730 = !DILocation(line: 3027, column: 27, scope: !1861)
!2731 = !DILocation(line: 3027, column: 33, scope: !1861)
!2732 = !DILocation(line: 3027, column: 39, scope: !1861)
!2733 = !DILocalVariable(name: "rc", scope: !1861, file: !1, line: 3028, type: !316)
!2734 = !DILocation(line: 3028, column: 7, scope: !1861)
!2735 = !DILocation(line: 3032, column: 7, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !1861, file: !1, line: 3032, column: 6)
!2737 = !DILocation(line: 3032, column: 6, scope: !1861)
!2738 = !DILocation(line: 3033, column: 5, scope: !2736)
!2739 = !DILocation(line: 3035, column: 6, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !1861, file: !1, line: 3035, column: 6)
!2741 = !DILocation(line: 3035, column: 12, scope: !2740)
!2742 = !DILocation(line: 3035, column: 19, scope: !2740)
!2743 = !DILocation(line: 3035, column: 22, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2740, file: !1, discriminator: 1)
!2745 = !DILocation(line: 3035, column: 28, scope: !2744)
!2746 = !DILocation(line: 3035, column: 6, scope: !2744)
!2747 = !DILocalVariable(name: "list", scope: !2748, file: !1, line: 3038, type: !329)
!2748 = distinct !DILexicalBlock(scope: !2740, file: !1, line: 3035, column: 37)
!2749 = !DILocation(line: 3038, column: 24, scope: !2748)
!2750 = !DILocation(line: 3038, column: 32, scope: !2748)
!2751 = !DILocation(line: 3038, column: 38, scope: !2748)
!2752 = !DILocation(line: 3038, column: 44, scope: !2748)
!2753 = !DILocation(line: 3040, column: 33, scope: !2748)
!2754 = !DILocation(line: 3040, column: 40, scope: !2748)
!2755 = !DILocation(line: 3041, column: 34, scope: !2748)
!2756 = !DILocation(line: 3041, column: 40, scope: !2748)
!2757 = !DILocation(line: 3041, column: 46, scope: !2748)
!2758 = !DILocation(line: 3042, column: 34, scope: !2748)
!2759 = !DILocation(line: 3042, column: 41, scope: !2748)
!2760 = !DILocation(line: 3040, column: 10, scope: !2748)
!2761 = !DILocation(line: 3040, column: 8, scope: !2748)
!2762 = !DILocation(line: 3043, column: 8, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2748, file: !1, line: 3043, column: 8)
!2764 = !DILocation(line: 3043, column: 8, scope: !2748)
!2765 = !DILocation(line: 3044, column: 13, scope: !2763)
!2766 = !DILocation(line: 3044, column: 64, scope: !2763)
!2767 = !DILocation(line: 3044, column: 7, scope: !2763)
!2768 = !DILocation(line: 3047, column: 5, scope: !2748)
!2769 = !DILocation(line: 3047, column: 11, scope: !2770)
!2770 = !DILexicalBlockFile(scope: !2748, file: !1, discriminator: 1)
!2771 = !DILocation(line: 3047, column: 17, scope: !2770)
!2772 = !DILocation(line: 3047, column: 22, scope: !2770)
!2773 = !DILocation(line: 3047, column: 5, scope: !2770)
!2774 = !DILocation(line: 3048, column: 25, scope: !2748)
!2775 = !DILocation(line: 3048, column: 31, scope: !2748)
!2776 = !DILocation(line: 3048, column: 37, scope: !2748)
!2777 = !DILocation(line: 3048, column: 7, scope: !2748)
!2778 = !DILocation(line: 3047, column: 5, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2748, file: !1, discriminator: 2)
!2780 = !DILocation(line: 3053, column: 5, scope: !2748)
!2781 = !DILocation(line: 3053, column: 11, scope: !2748)
!2782 = !DILocation(line: 3053, column: 18, scope: !2748)
!2783 = !DILocation(line: 3054, column: 5, scope: !2748)
!2784 = !DILocation(line: 3054, column: 11, scope: !2748)
!2785 = !DILocation(line: 3054, column: 19, scope: !2748)
!2786 = !DILocation(line: 3055, column: 3, scope: !2748)
!2787 = !DILocation(line: 3056, column: 1, scope: !1861)
!2788 = !DILocalVariable(name: "connp", arg: 1, scope: !1888, file: !1, line: 514, type: !1891)
!2789 = !DILocation(line: 514, column: 49, scope: !1888)
!2790 = !DILocalVariable(name: "status", arg: 2, scope: !1888, file: !1, line: 515, type: !289)
!2791 = !DILocation(line: 515, column: 36, scope: !1888)
!2792 = !DILocalVariable(name: "premature", arg: 3, scope: !1888, file: !1, line: 517, type: !423)
!2793 = !DILocation(line: 517, column: 32, scope: !1888)
!2794 = !DILocalVariable(name: "result", scope: !1888, file: !1, line: 519, type: !289)
!2795 = !DILocation(line: 519, column: 12, scope: !1888)
!2796 = !DILocalVariable(name: "conn", scope: !1888, file: !1, line: 520, type: !262)
!2797 = !DILocation(line: 520, column: 23, scope: !1888)
!2798 = !DILocalVariable(name: "data", scope: !1888, file: !1, line: 521, type: !256)
!2799 = !DILocation(line: 521, column: 21, scope: !1888)
!2800 = !DILocalVariable(name: "i", scope: !1888, file: !1, line: 522, type: !457)
!2801 = !DILocation(line: 522, column: 16, scope: !1888)
!2802 = !DILocation(line: 524, column: 3, scope: !1888)
!2803 = !DILocation(line: 524, column: 3, scope: !2804)
!2804 = !DILexicalBlockFile(scope: !2805, file: !1, discriminator: 1)
!2805 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 524, column: 3)
!2806 = !DILocation(line: 526, column: 11, scope: !1888)
!2807 = !DILocation(line: 526, column: 10, scope: !1888)
!2808 = !DILocation(line: 526, column: 8, scope: !1888)
!2809 = !DILocation(line: 527, column: 10, scope: !1888)
!2810 = !DILocation(line: 527, column: 16, scope: !1888)
!2811 = !DILocation(line: 527, column: 8, scope: !1888)
!2812 = !DILocation(line: 529, column: 3, scope: !1888)
!2813 = !DILocation(line: 529, column: 3, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !2815, file: !1, discriminator: 1)
!2815 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 529, column: 3)
!2816 = !DILocation(line: 531, column: 6, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 531, column: 6)
!2818 = !DILocation(line: 531, column: 12, scope: !2817)
!2819 = !DILocation(line: 531, column: 18, scope: !2817)
!2820 = !DILocation(line: 531, column: 6, scope: !1888)
!2821 = !DILocation(line: 533, column: 5, scope: !2817)
!2822 = !DILocation(line: 535, column: 29, scope: !1888)
!2823 = !DILocation(line: 535, column: 35, scope: !1888)
!2824 = !DILocation(line: 535, column: 3, scope: !1888)
!2825 = !DILocation(line: 538, column: 3, scope: !1888)
!2826 = !DILocation(line: 539, column: 3, scope: !1888)
!2827 = !DILocation(line: 539, column: 9, scope: !1888)
!2828 = !DILocation(line: 539, column: 13, scope: !1888)
!2829 = !DILocation(line: 539, column: 20, scope: !1888)
!2830 = !DILocation(line: 540, column: 3, scope: !1888)
!2831 = !DILocation(line: 541, column: 3, scope: !1888)
!2832 = !DILocation(line: 541, column: 9, scope: !1888)
!2833 = !DILocation(line: 541, column: 13, scope: !1888)
!2834 = !DILocation(line: 541, column: 22, scope: !1888)
!2835 = !DILocation(line: 543, column: 10, scope: !1888)
!2836 = !DILocation(line: 543, column: 3, scope: !1888)
!2837 = !DILocation(line: 551, column: 15, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 543, column: 18)
!2839 = !DILocation(line: 551, column: 5, scope: !2838)
!2840 = !DILocation(line: 553, column: 5, scope: !2838)
!2841 = !DILocation(line: 557, column: 6, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 557, column: 6)
!2843 = !DILocation(line: 557, column: 12, scope: !2842)
!2844 = !DILocation(line: 557, column: 21, scope: !2842)
!2845 = !DILocation(line: 557, column: 6, scope: !1888)
!2846 = !DILocation(line: 558, column: 14, scope: !2842)
!2847 = !DILocation(line: 558, column: 20, scope: !2842)
!2848 = !DILocation(line: 558, column: 29, scope: !2842)
!2849 = !DILocation(line: 558, column: 34, scope: !2842)
!2850 = !DILocation(line: 558, column: 40, scope: !2842)
!2851 = !DILocation(line: 558, column: 48, scope: !2842)
!2852 = !DILocation(line: 558, column: 12, scope: !2842)
!2853 = !DILocation(line: 558, column: 5, scope: !2842)
!2854 = !DILocation(line: 560, column: 14, scope: !2842)
!2855 = !DILocation(line: 560, column: 12, scope: !2842)
!2856 = !DILocation(line: 562, column: 35, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 562, column: 6)
!2858 = !DILocation(line: 562, column: 32, scope: !2857)
!2859 = !DILocation(line: 562, column: 6, scope: !1888)
!2860 = !DILocalVariable(name: "rc", scope: !2861, file: !1, line: 565, type: !289)
!2861 = distinct !DILexicalBlock(scope: !2857, file: !1, line: 562, column: 43)
!2862 = !DILocation(line: 565, column: 14, scope: !2861)
!2863 = !DILocation(line: 565, column: 33, scope: !2861)
!2864 = !DILocation(line: 565, column: 19, scope: !2861)
!2865 = !DILocation(line: 566, column: 9, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 566, column: 8)
!2867 = !DILocation(line: 566, column: 16, scope: !2866)
!2868 = !DILocation(line: 566, column: 19, scope: !2869)
!2869 = !DILexicalBlockFile(scope: !2866, file: !1, discriminator: 1)
!2870 = !DILocation(line: 566, column: 8, scope: !2869)
!2871 = !DILocation(line: 567, column: 14, scope: !2866)
!2872 = !DILocation(line: 567, column: 7, scope: !2866)
!2873 = !DILocation(line: 568, column: 3, scope: !2861)
!2874 = !DILocation(line: 570, column: 6, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 570, column: 6)
!2876 = !DILocation(line: 570, column: 12, scope: !2875)
!2877 = !DILocation(line: 570, column: 22, scope: !2875)
!2878 = !DILocation(line: 570, column: 29, scope: !2875)
!2879 = !DILocation(line: 570, column: 35, scope: !2875)
!2880 = !DILocation(line: 570, column: 45, scope: !2875)
!2881 = !DILocation(line: 570, column: 27, scope: !2875)
!2882 = !DILocation(line: 570, column: 50, scope: !2875)
!2883 = !DILocation(line: 570, column: 55, scope: !2875)
!2884 = !DILocation(line: 571, column: 7, scope: !2875)
!2885 = !DILocation(line: 571, column: 13, scope: !2875)
!2886 = !DILocation(line: 571, column: 17, scope: !2875)
!2887 = !DILocation(line: 571, column: 30, scope: !2875)
!2888 = !DILocation(line: 572, column: 7, scope: !2875)
!2889 = !DILocation(line: 572, column: 13, scope: !2875)
!2890 = !DILocation(line: 572, column: 18, scope: !2875)
!2891 = !DILocation(line: 570, column: 6, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !1888, file: !1, discriminator: 1)
!2893 = !DILocation(line: 575, column: 5, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2875, file: !1, line: 572, column: 25)
!2895 = !DILocation(line: 575, column: 11, scope: !2894)
!2896 = !DILocation(line: 575, column: 21, scope: !2894)
!2897 = !DILocation(line: 576, column: 5, scope: !2894)
!2898 = !DILocation(line: 576, column: 5, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !1, discriminator: 1)
!2900 = distinct !DILexicalBlock(scope: !2894, file: !1, line: 576, column: 5)
!2901 = !DILocation(line: 577, column: 5, scope: !2894)
!2902 = !DILocation(line: 580, column: 3, scope: !1888)
!2903 = !DILocation(line: 580, column: 9, scope: !1888)
!2904 = !DILocation(line: 580, column: 15, scope: !1888)
!2905 = !DILocation(line: 580, column: 20, scope: !1888)
!2906 = !DILocation(line: 581, column: 3, scope: !1888)
!2907 = !DILocation(line: 581, column: 3, scope: !2908)
!2908 = !DILexicalBlockFile(scope: !2909, file: !1, discriminator: 1)
!2909 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 581, column: 3)
!2910 = !DILocation(line: 583, column: 6, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 583, column: 6)
!2912 = !DILocation(line: 583, column: 12, scope: !2911)
!2913 = !DILocation(line: 583, column: 6, scope: !1888)
!2914 = !DILocation(line: 584, column: 24, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !1, line: 583, column: 23)
!2916 = !DILocation(line: 584, column: 30, scope: !2915)
!2917 = !DILocation(line: 584, column: 36, scope: !2915)
!2918 = !DILocation(line: 584, column: 5, scope: !2915)
!2919 = !DILocation(line: 585, column: 5, scope: !2915)
!2920 = !DILocation(line: 585, column: 11, scope: !2915)
!2921 = !DILocation(line: 585, column: 21, scope: !2915)
!2922 = !DILocation(line: 586, column: 3, scope: !2915)
!2923 = !DILocation(line: 590, column: 8, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 590, column: 3)
!2925 = !DILocation(line: 590, column: 7, scope: !2924)
!2926 = !DILocation(line: 590, column: 12, scope: !2927)
!2927 = !DILexicalBlockFile(scope: !2928, file: !1, discriminator: 1)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !1, line: 590, column: 3)
!2929 = !DILocation(line: 590, column: 16, scope: !2927)
!2930 = !DILocation(line: 590, column: 22, scope: !2927)
!2931 = !DILocation(line: 590, column: 28, scope: !2927)
!2932 = !DILocation(line: 590, column: 14, scope: !2927)
!2933 = !DILocation(line: 590, column: 3, scope: !2927)
!2934 = !DILocation(line: 591, column: 5, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2928, file: !1, line: 590, column: 44)
!2936 = !DILocation(line: 592, column: 3, scope: !2935)
!2937 = !DILocation(line: 590, column: 40, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2928, file: !1, discriminator: 2)
!2939 = !DILocation(line: 590, column: 3, scope: !2938)
!2940 = !DILocation(line: 593, column: 3, scope: !1888)
!2941 = !DILocation(line: 593, column: 9, scope: !1888)
!2942 = !DILocation(line: 593, column: 15, scope: !1888)
!2943 = !DILocation(line: 593, column: 25, scope: !1888)
!2944 = !DILocation(line: 610, column: 7, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 610, column: 6)
!2946 = !DILocation(line: 610, column: 13, scope: !2945)
!2947 = !DILocation(line: 610, column: 17, scope: !2945)
!2948 = !DILocation(line: 615, column: 8, scope: !2945)
!2949 = !DILocation(line: 615, column: 11, scope: !2950)
!2950 = !DILexicalBlockFile(scope: !2945, file: !1, discriminator: 1)
!2951 = !DILocation(line: 615, column: 17, scope: !2950)
!2952 = !DILocation(line: 615, column: 22, scope: !2950)
!2953 = !DILocation(line: 615, column: 28, scope: !2950)
!2954 = !DILocation(line: 615, column: 31, scope: !2955)
!2955 = !DILexicalBlockFile(scope: !2945, file: !1, discriminator: 2)
!2956 = !DILocation(line: 610, column: 6, scope: !2892)
!2957 = !DILocalVariable(name: "res2", scope: !2958, file: !1, line: 616, type: !289)
!2958 = distinct !DILexicalBlock(scope: !2945, file: !1, line: 615, column: 42)
!2959 = !DILocation(line: 616, column: 14, scope: !2958)
!2960 = !DILocation(line: 616, column: 37, scope: !2958)
!2961 = !DILocation(line: 616, column: 43, scope: !2958)
!2962 = !DILocation(line: 616, column: 21, scope: !2958)
!2963 = !DILocation(line: 620, column: 9, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 620, column: 8)
!2965 = !DILocation(line: 620, column: 16, scope: !2964)
!2966 = !DILocation(line: 620, column: 19, scope: !2967)
!2967 = !DILexicalBlockFile(scope: !2964, file: !1, discriminator: 1)
!2968 = !DILocation(line: 620, column: 8, scope: !2967)
!2969 = !DILocation(line: 621, column: 16, scope: !2964)
!2970 = !DILocation(line: 621, column: 14, scope: !2964)
!2971 = !DILocation(line: 621, column: 7, scope: !2964)
!2972 = !DILocation(line: 622, column: 3, scope: !2958)
!2973 = !DILocation(line: 625, column: 23, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2975, file: !1, line: 625, column: 8)
!2975 = distinct !DILexicalBlock(scope: !2945, file: !1, line: 623, column: 8)
!2976 = !DILocation(line: 625, column: 29, scope: !2974)
!2977 = !DILocation(line: 625, column: 8, scope: !2974)
!2978 = !DILocation(line: 625, column: 8, scope: !2975)
!2979 = !DILocation(line: 627, column: 33, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2974, file: !1, line: 625, column: 36)
!2981 = !DILocation(line: 627, column: 7, scope: !2980)
!2982 = !DILocation(line: 627, column: 13, scope: !2980)
!2983 = !DILocation(line: 627, column: 19, scope: !2980)
!2984 = !DILocation(line: 627, column: 31, scope: !2980)
!2985 = !DILocation(line: 629, column: 13, scope: !2980)
!2986 = !DILocation(line: 630, column: 13, scope: !2980)
!2987 = !DILocation(line: 630, column: 19, scope: !2980)
!2988 = !DILocation(line: 631, column: 13, scope: !2980)
!2989 = !DILocation(line: 631, column: 19, scope: !2980)
!2990 = !DILocation(line: 631, column: 24, scope: !2980)
!2991 = !DILocation(line: 631, column: 37, scope: !2992)
!2992 = !DILexicalBlockFile(scope: !2980, file: !1, discriminator: 1)
!2993 = !DILocation(line: 631, column: 43, scope: !2992)
!2994 = !DILocation(line: 631, column: 55, scope: !2992)
!2995 = !DILocation(line: 631, column: 60, scope: !2992)
!2996 = !DILocation(line: 631, column: 13, scope: !2992)
!2997 = !DILocation(line: 632, column: 13, scope: !2980)
!2998 = !DILocation(line: 632, column: 19, scope: !2980)
!2999 = !DILocation(line: 632, column: 24, scope: !2980)
!3000 = !DILocation(line: 632, column: 36, scope: !2992)
!3001 = !DILocation(line: 632, column: 42, scope: !2992)
!3002 = !DILocation(line: 632, column: 53, scope: !2992)
!3003 = !DILocation(line: 632, column: 58, scope: !2992)
!3004 = !DILocation(line: 632, column: 13, scope: !2992)
!3005 = !DILocation(line: 633, column: 13, scope: !2980)
!3006 = !DILocation(line: 633, column: 19, scope: !2980)
!3007 = !DILocation(line: 633, column: 24, scope: !2980)
!3008 = !DILocation(line: 633, column: 39, scope: !2992)
!3009 = !DILocation(line: 633, column: 45, scope: !2992)
!3010 = !DILocation(line: 633, column: 58, scope: !2992)
!3011 = !DILocation(line: 633, column: 13, scope: !2992)
!3012 = !DILocation(line: 634, column: 13, scope: !2980)
!3013 = !DILocation(line: 634, column: 19, scope: !2980)
!3014 = !DILocation(line: 634, column: 24, scope: !2980)
!3015 = !DILocation(line: 633, column: 13, scope: !3016)
!3016 = !DILexicalBlockFile(scope: !2980, file: !1, discriminator: 2)
!3017 = !DILocation(line: 633, column: 13, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !2980, file: !1, discriminator: 3)
!3019 = !DILocation(line: 632, column: 13, scope: !3016)
!3020 = !DILocation(line: 632, column: 13, scope: !3018)
!3021 = !DILocation(line: 631, column: 13, scope: !3016)
!3022 = !DILocation(line: 631, column: 13, scope: !3018)
!3023 = !DILocation(line: 629, column: 7, scope: !2992)
!3024 = !DILocation(line: 635, column: 5, scope: !2980)
!3025 = !DILocation(line: 637, column: 7, scope: !2974)
!3026 = !DILocation(line: 637, column: 13, scope: !2974)
!3027 = !DILocation(line: 637, column: 19, scope: !2974)
!3028 = !DILocation(line: 637, column: 31, scope: !2974)
!3029 = !DILocation(line: 640, column: 4, scope: !1888)
!3030 = !DILocation(line: 640, column: 10, scope: !1888)
!3031 = !DILocation(line: 644, column: 27, scope: !1888)
!3032 = !DILocation(line: 644, column: 3, scope: !1888)
!3033 = !DILocation(line: 646, column: 10, scope: !1888)
!3034 = !DILocation(line: 646, column: 3, scope: !1888)
!3035 = !DILocation(line: 647, column: 1, scope: !1888)
!3036 = !DILocalVariable(name: "multi", arg: 1, scope: !1922, file: !1, line: 2318, type: !375)
!3037 = !DILocation(line: 2318, column: 45, scope: !1922)
!3038 = !DILocalVariable(name: "data", arg: 2, scope: !1922, file: !1, line: 2319, type: !256)
!3039 = !DILocation(line: 2319, column: 44, scope: !1922)
!3040 = !DILocalVariable(name: "socks", scope: !1922, file: !1, line: 2321, type: !314)
!3041 = !DILocation(line: 2321, column: 17, scope: !1922)
!3042 = !DILocalVariable(name: "i", scope: !1922, file: !1, line: 2322, type: !316)
!3043 = !DILocation(line: 2322, column: 7, scope: !1922)
!3044 = !DILocalVariable(name: "entry", scope: !1922, file: !1, line: 2323, type: !1772)
!3045 = !DILocation(line: 2323, column: 25, scope: !1922)
!3046 = !DILocalVariable(name: "s", scope: !1922, file: !1, line: 2324, type: !315)
!3047 = !DILocation(line: 2324, column: 17, scope: !1922)
!3048 = !DILocalVariable(name: "num", scope: !1922, file: !1, line: 2325, type: !316)
!3049 = !DILocation(line: 2325, column: 7, scope: !1922)
!3050 = !DILocalVariable(name: "curraction", scope: !1922, file: !1, line: 2326, type: !457)
!3051 = !DILocation(line: 2326, column: 16, scope: !1922)
!3052 = !DILocation(line: 2328, column: 8, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 2328, column: 3)
!3054 = !DILocation(line: 2328, column: 7, scope: !3053)
!3055 = !DILocation(line: 2328, column: 12, scope: !3056)
!3056 = !DILexicalBlockFile(scope: !3057, file: !1, discriminator: 1)
!3057 = distinct !DILexicalBlock(scope: !3053, file: !1, line: 2328, column: 3)
!3058 = !DILocation(line: 2328, column: 13, scope: !3056)
!3059 = !DILocation(line: 2328, column: 3, scope: !3056)
!3060 = !DILocation(line: 2329, column: 11, scope: !3057)
!3061 = !DILocation(line: 2329, column: 5, scope: !3057)
!3062 = !DILocation(line: 2329, column: 14, scope: !3057)
!3063 = !DILocation(line: 2328, column: 40, scope: !3064)
!3064 = !DILexicalBlockFile(scope: !3057, file: !1, discriminator: 2)
!3065 = !DILocation(line: 2328, column: 3, scope: !3064)
!3066 = !DILocation(line: 2333, column: 30, scope: !1922)
!3067 = !DILocation(line: 2333, column: 36, scope: !1922)
!3068 = !DILocation(line: 2333, column: 16, scope: !1922)
!3069 = !DILocation(line: 2333, column: 14, scope: !1922)
!3070 = !DILocation(line: 2340, column: 8, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 2340, column: 3)
!3072 = !DILocation(line: 2340, column: 7, scope: !3071)
!3073 = !DILocation(line: 2340, column: 13, scope: !3074)
!3074 = !DILexicalBlockFile(scope: !3075, file: !1, discriminator: 1)
!3075 = distinct !DILexicalBlock(scope: !3071, file: !1, line: 2340, column: 3)
!3076 = !DILocation(line: 2340, column: 14, scope: !3074)
!3077 = !DILocation(line: 2340, column: 40, scope: !3074)
!3078 = !DILocation(line: 2341, column: 10, scope: !3075)
!3079 = !DILocation(line: 2341, column: 24, scope: !3075)
!3080 = !DILocation(line: 2341, column: 46, scope: !3075)
!3081 = !DILocation(line: 2341, column: 44, scope: !3075)
!3082 = !DILocation(line: 2341, column: 21, scope: !3075)
!3083 = !DILocation(line: 2340, column: 40, scope: !3084)
!3084 = !DILexicalBlockFile(scope: !3075, file: !1, discriminator: 2)
!3085 = !DILocation(line: 2340, column: 3, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !3071, file: !1, discriminator: 3)
!3087 = !DILocalVariable(name: "action", scope: !3088, file: !1, line: 2343, type: !316)
!3088 = distinct !DILexicalBlock(scope: !3075, file: !1, line: 2342, column: 12)
!3089 = !DILocation(line: 2343, column: 9, scope: !3088)
!3090 = !DILocation(line: 2345, column: 15, scope: !3088)
!3091 = !DILocation(line: 2345, column: 9, scope: !3088)
!3092 = !DILocation(line: 2345, column: 7, scope: !3088)
!3093 = !DILocation(line: 2348, column: 26, scope: !3088)
!3094 = !DILocation(line: 2348, column: 33, scope: !3088)
!3095 = !DILocation(line: 2348, column: 43, scope: !3088)
!3096 = !DILocation(line: 2348, column: 13, scope: !3088)
!3097 = !DILocation(line: 2348, column: 11, scope: !3088)
!3098 = !DILocation(line: 2350, column: 8, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 2350, column: 8)
!3100 = !DILocation(line: 2350, column: 21, scope: !3099)
!3101 = !DILocation(line: 2350, column: 19, scope: !3099)
!3102 = !DILocation(line: 2350, column: 8, scope: !3088)
!3103 = !DILocation(line: 2351, column: 14, scope: !3099)
!3104 = !DILocation(line: 2351, column: 7, scope: !3099)
!3105 = !DILocation(line: 2352, column: 8, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 2352, column: 8)
!3107 = !DILocation(line: 2352, column: 21, scope: !3106)
!3108 = !DILocation(line: 2352, column: 19, scope: !3106)
!3109 = !DILocation(line: 2352, column: 8, scope: !3088)
!3110 = !DILocation(line: 2353, column: 14, scope: !3106)
!3111 = !DILocation(line: 2353, column: 7, scope: !3106)
!3112 = !DILocation(line: 2355, column: 8, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 2355, column: 8)
!3114 = !DILocation(line: 2355, column: 8, scope: !3088)
!3115 = !DILocation(line: 2357, column: 10, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 2357, column: 10)
!3117 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 2355, column: 15)
!3118 = !DILocation(line: 2357, column: 17, scope: !3116)
!3119 = !DILocation(line: 2357, column: 27, scope: !3116)
!3120 = !DILocation(line: 2357, column: 24, scope: !3116)
!3121 = !DILocation(line: 2357, column: 10, scope: !3117)
!3122 = !DILocation(line: 2359, column: 9, scope: !3116)
!3123 = !DILocation(line: 2360, column: 5, scope: !3117)
!3124 = !DILocation(line: 2363, column: 28, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 2361, column: 10)
!3126 = !DILocation(line: 2363, column: 35, scope: !3125)
!3127 = !DILocation(line: 2363, column: 45, scope: !3125)
!3128 = !DILocation(line: 2363, column: 48, scope: !3125)
!3129 = !DILocation(line: 2363, column: 15, scope: !3125)
!3130 = !DILocation(line: 2363, column: 13, scope: !3125)
!3131 = !DILocation(line: 2364, column: 11, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 2364, column: 10)
!3133 = !DILocation(line: 2364, column: 10, scope: !3125)
!3134 = !DILocation(line: 2366, column: 9, scope: !3132)
!3135 = !DILocation(line: 2370, column: 8, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 2370, column: 8)
!3137 = !DILocation(line: 2370, column: 15, scope: !3136)
!3138 = !DILocation(line: 2370, column: 8, scope: !3088)
!3139 = !DILocation(line: 2371, column: 7, scope: !3136)
!3140 = !DILocation(line: 2371, column: 14, scope: !3136)
!3141 = !DILocation(line: 2371, column: 24, scope: !3136)
!3142 = !DILocation(line: 2372, column: 24, scope: !3136)
!3143 = !DILocation(line: 2373, column: 24, scope: !3136)
!3144 = !DILocation(line: 2374, column: 24, scope: !3136)
!3145 = !DILocation(line: 2374, column: 31, scope: !3136)
!3146 = !DILocation(line: 2375, column: 24, scope: !3136)
!3147 = !DILocation(line: 2375, column: 31, scope: !3136)
!3148 = !DILocation(line: 2377, column: 21, scope: !3088)
!3149 = !DILocation(line: 2377, column: 5, scope: !3088)
!3150 = !DILocation(line: 2377, column: 12, scope: !3088)
!3151 = !DILocation(line: 2377, column: 19, scope: !3088)
!3152 = !DILocation(line: 2378, column: 3, scope: !3088)
!3153 = !DILocation(line: 2342, column: 8, scope: !3075)
!3154 = !DILocation(line: 2340, column: 3, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3075, file: !1, discriminator: 4)
!3156 = !DILocation(line: 2380, column: 9, scope: !1922)
!3157 = !DILocation(line: 2380, column: 7, scope: !1922)
!3158 = !DILocation(line: 2384, column: 8, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !1922, file: !1, line: 2384, column: 3)
!3160 = !DILocation(line: 2384, column: 7, scope: !3159)
!3161 = !DILocation(line: 2384, column: 12, scope: !3162)
!3162 = !DILexicalBlockFile(scope: !3163, file: !1, discriminator: 1)
!3163 = distinct !DILexicalBlock(scope: !3159, file: !1, line: 2384, column: 3)
!3164 = !DILocation(line: 2384, column: 15, scope: !3162)
!3165 = !DILocation(line: 2384, column: 21, scope: !3162)
!3166 = !DILocation(line: 2384, column: 13, scope: !3162)
!3167 = !DILocation(line: 2384, column: 3, scope: !3162)
!3168 = !DILocalVariable(name: "j", scope: !3169, file: !1, line: 2385, type: !316)
!3169 = distinct !DILexicalBlock(scope: !3163, file: !1, line: 2384, column: 36)
!3170 = !DILocation(line: 2385, column: 9, scope: !3169)
!3171 = !DILocation(line: 2386, column: 23, scope: !3169)
!3172 = !DILocation(line: 2386, column: 9, scope: !3169)
!3173 = !DILocation(line: 2386, column: 15, scope: !3169)
!3174 = !DILocation(line: 2386, column: 7, scope: !3169)
!3175 = !DILocation(line: 2387, column: 10, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3169, file: !1, line: 2387, column: 5)
!3177 = !DILocation(line: 2387, column: 9, scope: !3176)
!3178 = !DILocation(line: 2387, column: 14, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3180, file: !1, discriminator: 1)
!3180 = distinct !DILexicalBlock(scope: !3176, file: !1, line: 2387, column: 5)
!3181 = !DILocation(line: 2387, column: 16, scope: !3179)
!3182 = !DILocation(line: 2387, column: 15, scope: !3179)
!3183 = !DILocation(line: 2387, column: 5, scope: !3179)
!3184 = !DILocation(line: 2388, column: 10, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !1, line: 2388, column: 10)
!3186 = distinct !DILexicalBlock(scope: !3180, file: !1, line: 2387, column: 26)
!3187 = !DILocation(line: 2388, column: 21, scope: !3185)
!3188 = !DILocation(line: 2388, column: 15, scope: !3185)
!3189 = !DILocation(line: 2388, column: 12, scope: !3185)
!3190 = !DILocation(line: 2388, column: 10, scope: !3186)
!3191 = !DILocation(line: 2390, column: 11, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3185, file: !1, line: 2388, column: 25)
!3193 = !DILocation(line: 2391, column: 9, scope: !3192)
!3194 = !DILocation(line: 2393, column: 5, scope: !3186)
!3195 = !DILocation(line: 2387, column: 22, scope: !3196)
!3196 = !DILexicalBlockFile(scope: !3180, file: !1, discriminator: 2)
!3197 = !DILocation(line: 2387, column: 5, scope: !3196)
!3198 = !DILocation(line: 2395, column: 26, scope: !3169)
!3199 = !DILocation(line: 2395, column: 33, scope: !3169)
!3200 = !DILocation(line: 2395, column: 43, scope: !3169)
!3201 = !DILocation(line: 2395, column: 13, scope: !3169)
!3202 = !DILocation(line: 2395, column: 11, scope: !3169)
!3203 = !DILocation(line: 2396, column: 8, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3169, file: !1, line: 2396, column: 8)
!3205 = !DILocation(line: 2396, column: 8, scope: !3169)
!3206 = !DILocalVariable(name: "remove_sock_from_hash", scope: !3207, file: !1, line: 2398, type: !423)
!3207 = distinct !DILexicalBlock(scope: !3204, file: !1, line: 2396, column: 15)
!3208 = !DILocation(line: 2398, column: 12, scope: !3207)
!3209 = !DILocalVariable(name: "easy_conn", scope: !3207, file: !1, line: 2403, type: !262)
!3210 = !DILocation(line: 2403, column: 27, scope: !3207)
!3211 = !DILocation(line: 2403, column: 39, scope: !3207)
!3212 = !DILocation(line: 2403, column: 45, scope: !3207)
!3213 = !DILocation(line: 2404, column: 10, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3207, file: !1, line: 2404, column: 10)
!3215 = !DILocation(line: 2404, column: 10, scope: !3207)
!3216 = !DILocation(line: 2405, column: 12, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3218, file: !1, line: 2405, column: 12)
!3218 = distinct !DILexicalBlock(scope: !3214, file: !1, line: 2404, column: 21)
!3219 = !DILocation(line: 2405, column: 23, scope: !3217)
!3220 = !DILocation(line: 2405, column: 33, scope: !3217)
!3221 = !DILocation(line: 2405, column: 38, scope: !3217)
!3222 = !DILocation(line: 2405, column: 12, scope: !3218)
!3223 = !DILocation(line: 2407, column: 33, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3217, file: !1, line: 2405, column: 43)
!3225 = !DILocation(line: 2412, column: 14, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 2412, column: 14)
!3227 = !DILocation(line: 2412, column: 21, scope: !3226)
!3228 = !DILocation(line: 2412, column: 29, scope: !3226)
!3229 = !DILocation(line: 2412, column: 26, scope: !3226)
!3230 = !DILocation(line: 2412, column: 14, scope: !3224)
!3231 = !DILocation(line: 2413, column: 35, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !1, line: 2413, column: 16)
!3233 = distinct !DILexicalBlock(scope: !3226, file: !1, line: 2412, column: 35)
!3234 = !DILocation(line: 2413, column: 41, scope: !3232)
!3235 = !DILocation(line: 2413, column: 16, scope: !3232)
!3236 = !DILocation(line: 2413, column: 16, scope: !3233)
!3237 = !DILocation(line: 2414, column: 29, scope: !3232)
!3238 = !DILocation(line: 2414, column: 40, scope: !3232)
!3239 = !DILocation(line: 2414, column: 50, scope: !3232)
!3240 = !DILocation(line: 2414, column: 56, scope: !3232)
!3241 = !DILocation(line: 2414, column: 62, scope: !3232)
!3242 = !DILocation(line: 2414, column: 15, scope: !3232)
!3243 = !DILocation(line: 2414, column: 22, scope: !3232)
!3244 = !DILocation(line: 2414, column: 27, scope: !3232)
!3245 = !DILocation(line: 2416, column: 29, scope: !3232)
!3246 = !DILocation(line: 2416, column: 40, scope: !3232)
!3247 = !DILocation(line: 2416, column: 50, scope: !3232)
!3248 = !DILocation(line: 2416, column: 56, scope: !3232)
!3249 = !DILocation(line: 2416, column: 15, scope: !3232)
!3250 = !DILocation(line: 2416, column: 22, scope: !3232)
!3251 = !DILocation(line: 2416, column: 27, scope: !3232)
!3252 = !DILocation(line: 2417, column: 11, scope: !3233)
!3253 = !DILocation(line: 2418, column: 9, scope: !3224)
!3254 = !DILocation(line: 2419, column: 12, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3218, file: !1, line: 2419, column: 12)
!3256 = !DILocation(line: 2419, column: 23, scope: !3255)
!3257 = !DILocation(line: 2419, column: 33, scope: !3255)
!3258 = !DILocation(line: 2419, column: 38, scope: !3255)
!3259 = !DILocation(line: 2419, column: 12, scope: !3218)
!3260 = !DILocation(line: 2421, column: 33, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 2419, column: 43)
!3262 = !DILocation(line: 2426, column: 14, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3261, file: !1, line: 2426, column: 14)
!3264 = !DILocation(line: 2426, column: 21, scope: !3263)
!3265 = !DILocation(line: 2426, column: 29, scope: !3263)
!3266 = !DILocation(line: 2426, column: 26, scope: !3263)
!3267 = !DILocation(line: 2426, column: 14, scope: !3261)
!3268 = !DILocation(line: 2427, column: 35, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !1, line: 2427, column: 16)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !1, line: 2426, column: 35)
!3271 = !DILocation(line: 2427, column: 41, scope: !3269)
!3272 = !DILocation(line: 2427, column: 16, scope: !3269)
!3273 = !DILocation(line: 2427, column: 16, scope: !3270)
!3274 = !DILocation(line: 2428, column: 29, scope: !3269)
!3275 = !DILocation(line: 2428, column: 40, scope: !3269)
!3276 = !DILocation(line: 2428, column: 50, scope: !3269)
!3277 = !DILocation(line: 2428, column: 56, scope: !3269)
!3278 = !DILocation(line: 2428, column: 62, scope: !3269)
!3279 = !DILocation(line: 2428, column: 15, scope: !3269)
!3280 = !DILocation(line: 2428, column: 22, scope: !3269)
!3281 = !DILocation(line: 2428, column: 27, scope: !3269)
!3282 = !DILocation(line: 2430, column: 29, scope: !3269)
!3283 = !DILocation(line: 2430, column: 40, scope: !3269)
!3284 = !DILocation(line: 2430, column: 50, scope: !3269)
!3285 = !DILocation(line: 2430, column: 56, scope: !3269)
!3286 = !DILocation(line: 2430, column: 15, scope: !3269)
!3287 = !DILocation(line: 2430, column: 22, scope: !3269)
!3288 = !DILocation(line: 2430, column: 27, scope: !3269)
!3289 = !DILocation(line: 2431, column: 11, scope: !3270)
!3290 = !DILocation(line: 2432, column: 9, scope: !3261)
!3291 = !DILocation(line: 2437, column: 7, scope: !3218)
!3292 = !DILocation(line: 2439, column: 10, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3207, file: !1, line: 2439, column: 10)
!3294 = !DILocation(line: 2439, column: 10, scope: !3207)
!3295 = !DILocation(line: 2441, column: 12, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 2441, column: 12)
!3297 = distinct !DILexicalBlock(scope: !3293, file: !1, line: 2439, column: 33)
!3298 = !DILocation(line: 2441, column: 19, scope: !3296)
!3299 = !DILocation(line: 2441, column: 12, scope: !3297)
!3300 = !DILocation(line: 2442, column: 11, scope: !3296)
!3301 = !DILocation(line: 2442, column: 18, scope: !3296)
!3302 = !DILocation(line: 2442, column: 28, scope: !3296)
!3303 = !DILocation(line: 2443, column: 28, scope: !3296)
!3304 = !DILocation(line: 2445, column: 28, scope: !3296)
!3305 = !DILocation(line: 2445, column: 35, scope: !3296)
!3306 = !DILocation(line: 2446, column: 28, scope: !3296)
!3307 = !DILocation(line: 2446, column: 35, scope: !3296)
!3308 = !DILocation(line: 2447, column: 22, scope: !3297)
!3309 = !DILocation(line: 2447, column: 29, scope: !3297)
!3310 = !DILocation(line: 2447, column: 39, scope: !3297)
!3311 = !DILocation(line: 2447, column: 9, scope: !3297)
!3312 = !DILocation(line: 2448, column: 7, scope: !3297)
!3313 = !DILocation(line: 2449, column: 5, scope: !3207)
!3314 = !DILocation(line: 2450, column: 3, scope: !3169)
!3315 = !DILocation(line: 2384, column: 32, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3163, file: !1, discriminator: 2)
!3317 = !DILocation(line: 2384, column: 3, scope: !3316)
!3318 = !DILocation(line: 2452, column: 10, scope: !1922)
!3319 = !DILocation(line: 2452, column: 16, scope: !1922)
!3320 = !DILocation(line: 2452, column: 3, scope: !1922)
!3321 = !DILocation(line: 2452, column: 32, scope: !1922)
!3322 = !DILocation(line: 2452, column: 35, scope: !1922)
!3323 = !DILocation(line: 2453, column: 20, scope: !1922)
!3324 = !DILocation(line: 2453, column: 3, scope: !1922)
!3325 = !DILocation(line: 2453, column: 9, scope: !1922)
!3326 = !DILocation(line: 2453, column: 18, scope: !1922)
!3327 = !DILocation(line: 2454, column: 1, scope: !1922)
!3328 = !DILocation(line: 2454, column: 1, scope: !3329)
!3329 = !DILexicalBlockFile(scope: !1922, file: !1, discriminator: 1)
!3330 = !DILocalVariable(name: "multi", arg: 1, scope: !1793, file: !1, line: 785, type: !1796)
!3331 = !DILocation(line: 785, column: 52, scope: !1793)
!3332 = !DILocalVariable(name: "bits", arg: 2, scope: !1793, file: !1, line: 785, type: !316)
!3333 = !DILocation(line: 785, column: 63, scope: !1793)
!3334 = !DILocation(line: 787, column: 11, scope: !1793)
!3335 = !DILocation(line: 787, column: 17, scope: !1793)
!3336 = !DILocation(line: 787, column: 21, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !1793, file: !1, discriminator: 1)
!3338 = !DILocation(line: 787, column: 28, scope: !3337)
!3339 = !DILocation(line: 787, column: 41, scope: !3337)
!3340 = !DILocation(line: 787, column: 39, scope: !3337)
!3341 = !DILocation(line: 787, column: 17, scope: !3337)
!3342 = !DILocation(line: 787, column: 10, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !1793, file: !1, discriminator: 2)
!3344 = !DILocation(line: 787, column: 3, scope: !3343)
!3345 = !DILocalVariable(name: "data", arg: 1, scope: !1798, file: !1, line: 790, type: !256)
!3346 = !DILocation(line: 790, column: 51, scope: !1798)
!3347 = !DILocation(line: 792, column: 3, scope: !1798)
!3348 = !DILocation(line: 792, column: 9, scope: !1798)
!3349 = !DILocation(line: 792, column: 19, scope: !1798)
!3350 = !DILocation(line: 793, column: 1, scope: !1798)
!3351 = !DILocalVariable(name: "multi", arg: 1, scope: !1801, file: !1, line: 914, type: !375)
!3352 = !DILocation(line: 914, column: 47, scope: !1801)
!3353 = !DILocalVariable(name: "read_fd_set", arg: 2, scope: !1801, file: !1, line: 915, type: !1804)
!3354 = !DILocation(line: 915, column: 36, scope: !1801)
!3355 = !DILocalVariable(name: "write_fd_set", arg: 3, scope: !1801, file: !1, line: 915, type: !1804)
!3356 = !DILocation(line: 915, column: 57, scope: !1801)
!3357 = !DILocalVariable(name: "exc_fd_set", arg: 4, scope: !1801, file: !1, line: 916, type: !1804)
!3358 = !DILocation(line: 916, column: 36, scope: !1801)
!3359 = !DILocalVariable(name: "max_fd", arg: 5, scope: !1801, file: !1, line: 916, type: !1472)
!3360 = !DILocation(line: 916, column: 53, scope: !1801)
!3361 = !DILocalVariable(name: "data", scope: !1801, file: !1, line: 921, type: !256)
!3362 = !DILocation(line: 921, column: 21, scope: !1801)
!3363 = !DILocalVariable(name: "this_max_fd", scope: !1801, file: !1, line: 922, type: !316)
!3364 = !DILocation(line: 922, column: 7, scope: !1801)
!3365 = !DILocalVariable(name: "sockbunch", scope: !1801, file: !1, line: 923, type: !314)
!3366 = !DILocation(line: 923, column: 17, scope: !1801)
!3367 = !DILocalVariable(name: "bitmap", scope: !1801, file: !1, line: 924, type: !316)
!3368 = !DILocation(line: 924, column: 7, scope: !1801)
!3369 = !DILocalVariable(name: "i", scope: !1801, file: !1, line: 925, type: !316)
!3370 = !DILocation(line: 925, column: 7, scope: !1801)
!3371 = !DILocation(line: 926, column: 9, scope: !1801)
!3372 = !DILocation(line: 928, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !1801, file: !1, line: 928, column: 6)
!3374 = !DILocation(line: 928, column: 7, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3373, file: !1, discriminator: 1)
!3376 = !DILocation(line: 928, column: 6, scope: !3375)
!3377 = !DILocation(line: 929, column: 5, scope: !3373)
!3378 = !DILocation(line: 931, column: 8, scope: !1801)
!3379 = !DILocation(line: 931, column: 15, scope: !1801)
!3380 = !DILocation(line: 931, column: 7, scope: !1801)
!3381 = !DILocation(line: 932, column: 3, scope: !1801)
!3382 = !DILocation(line: 932, column: 9, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !1801, file: !1, discriminator: 1)
!3384 = !DILocation(line: 932, column: 3, scope: !3383)
!3385 = !DILocation(line: 933, column: 28, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !1801, file: !1, line: 932, column: 15)
!3387 = !DILocation(line: 933, column: 34, scope: !3386)
!3388 = !DILocation(line: 933, column: 14, scope: !3386)
!3389 = !DILocation(line: 933, column: 12, scope: !3386)
!3390 = !DILocation(line: 935, column: 10, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 935, column: 5)
!3392 = !DILocation(line: 935, column: 9, scope: !3391)
!3393 = !DILocation(line: 935, column: 14, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3395, file: !1, discriminator: 1)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !1, line: 935, column: 5)
!3396 = !DILocation(line: 935, column: 15, scope: !3394)
!3397 = !DILocation(line: 935, column: 5, scope: !3394)
!3398 = !DILocalVariable(name: "s", scope: !3399, file: !1, line: 936, type: !315)
!3399 = distinct !DILexicalBlock(scope: !3395, file: !1, line: 935, column: 46)
!3400 = !DILocation(line: 936, column: 21, scope: !3399)
!3401 = !DILocation(line: 938, column: 11, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 938, column: 10)
!3403 = !DILocation(line: 938, column: 20, scope: !3402)
!3404 = !DILocation(line: 938, column: 18, scope: !3402)
!3405 = !DILocation(line: 938, column: 41, scope: !3402)
!3406 = !DILocation(line: 938, column: 44, scope: !3407)
!3407 = !DILexicalBlockFile(scope: !3402, file: !1, discriminator: 1)
!3408 = !DILocation(line: 938, column: 44, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3402, file: !1, discriminator: 2)
!3410 = !DILocation(line: 938, column: 10, scope: !3409)
!3411 = !DILocation(line: 939, column: 9, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3402, file: !1, line: 938, column: 72)
!3413 = !DILocation(line: 940, column: 23, scope: !3412)
!3414 = !DILocation(line: 940, column: 13, scope: !3412)
!3415 = !DILocation(line: 940, column: 11, scope: !3412)
!3416 = !DILocation(line: 941, column: 7, scope: !3412)
!3417 = !DILocation(line: 942, column: 11, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 942, column: 10)
!3419 = !DILocation(line: 942, column: 20, scope: !3418)
!3420 = !DILocation(line: 942, column: 18, scope: !3418)
!3421 = !DILocation(line: 942, column: 42, scope: !3418)
!3422 = !DILocation(line: 942, column: 45, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3418, file: !1, discriminator: 1)
!3424 = !DILocation(line: 942, column: 45, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3418, file: !1, discriminator: 2)
!3426 = !DILocation(line: 942, column: 10, scope: !3425)
!3427 = !DILocation(line: 943, column: 9, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3418, file: !1, line: 942, column: 73)
!3429 = !DILocation(line: 944, column: 23, scope: !3428)
!3430 = !DILocation(line: 944, column: 13, scope: !3428)
!3431 = !DILocation(line: 944, column: 11, scope: !3428)
!3432 = !DILocation(line: 945, column: 7, scope: !3428)
!3433 = !DILocation(line: 946, column: 10, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 946, column: 10)
!3435 = !DILocation(line: 946, column: 12, scope: !3434)
!3436 = !DILocation(line: 946, column: 10, scope: !3399)
!3437 = !DILocation(line: 948, column: 9, scope: !3434)
!3438 = !DILocation(line: 949, column: 15, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 949, column: 10)
!3440 = !DILocation(line: 949, column: 19, scope: !3439)
!3441 = !DILocation(line: 949, column: 17, scope: !3439)
!3442 = !DILocation(line: 949, column: 10, scope: !3399)
!3443 = !DILocation(line: 950, column: 28, scope: !3439)
!3444 = !DILocation(line: 950, column: 21, scope: !3439)
!3445 = !DILocation(line: 950, column: 9, scope: !3439)
!3446 = !DILocation(line: 951, column: 5, scope: !3399)
!3447 = !DILocation(line: 935, column: 42, scope: !3448)
!3448 = !DILexicalBlockFile(scope: !3395, file: !1, discriminator: 2)
!3449 = !DILocation(line: 935, column: 5, scope: !3448)
!3450 = !DILocation(line: 953, column: 12, scope: !3386)
!3451 = !DILocation(line: 953, column: 18, scope: !3386)
!3452 = !DILocation(line: 953, column: 10, scope: !3386)
!3453 = !DILocation(line: 932, column: 3, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !1801, file: !1, discriminator: 2)
!3455 = !DILocation(line: 956, column: 13, scope: !1801)
!3456 = !DILocation(line: 956, column: 4, scope: !1801)
!3457 = !DILocation(line: 956, column: 11, scope: !1801)
!3458 = !DILocation(line: 958, column: 3, scope: !1801)
!3459 = !DILocation(line: 959, column: 1, scope: !1801)
!3460 = !DILocalVariable(name: "data", arg: 1, scope: !1895, file: !1, line: 848, type: !256)
!3461 = !DILocation(line: 848, column: 44, scope: !1895)
!3462 = !DILocalVariable(name: "socks", arg: 2, scope: !1895, file: !1, line: 849, type: !1480)
!3463 = !DILocation(line: 849, column: 41, scope: !1895)
!3464 = !DILocalVariable(name: "numsocks", arg: 3, scope: !1895, file: !1, line: 851, type: !316)
!3465 = !DILocation(line: 851, column: 30, scope: !1895)
!3466 = !DILocation(line: 858, column: 6, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !1895, file: !1, line: 858, column: 6)
!3468 = !DILocation(line: 858, column: 12, scope: !3467)
!3469 = !DILocation(line: 858, column: 18, scope: !3467)
!3470 = !DILocation(line: 858, column: 29, scope: !3467)
!3471 = !DILocation(line: 858, column: 33, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3467, file: !1, discriminator: 1)
!3473 = !DILocation(line: 858, column: 39, scope: !3472)
!3474 = !DILocation(line: 858, column: 6, scope: !3472)
!3475 = !DILocation(line: 859, column: 5, scope: !3467)
!3476 = !DILocation(line: 861, column: 6, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !1895, file: !1, line: 861, column: 6)
!3478 = !DILocation(line: 861, column: 12, scope: !3477)
!3479 = !DILocation(line: 861, column: 19, scope: !3477)
!3480 = !DILocation(line: 861, column: 41, scope: !3477)
!3481 = !DILocation(line: 862, column: 6, scope: !3477)
!3482 = !DILocation(line: 862, column: 12, scope: !3477)
!3483 = !DILocation(line: 862, column: 19, scope: !3477)
!3484 = !DILocation(line: 861, column: 6, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !1895, file: !1, discriminator: 1)
!3486 = !DILocation(line: 864, column: 29, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3477, file: !1, line: 862, column: 44)
!3488 = !DILocation(line: 864, column: 5, scope: !3487)
!3489 = !DILocation(line: 864, column: 11, scope: !3487)
!3490 = !DILocation(line: 864, column: 22, scope: !3487)
!3491 = !DILocation(line: 864, column: 27, scope: !3487)
!3492 = !DILocation(line: 865, column: 3, scope: !3487)
!3493 = !DILocation(line: 867, column: 10, scope: !1895)
!3494 = !DILocation(line: 867, column: 16, scope: !1895)
!3495 = !DILocation(line: 867, column: 3, scope: !1895)
!3496 = !DILocation(line: 882, column: 5, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !1895, file: !1, line: 867, column: 24)
!3498 = !DILocation(line: 885, column: 5, scope: !3497)
!3499 = !DILocation(line: 889, column: 34, scope: !3497)
!3500 = !DILocation(line: 889, column: 40, scope: !3497)
!3501 = !DILocation(line: 889, column: 51, scope: !3497)
!3502 = !DILocation(line: 889, column: 58, scope: !3497)
!3503 = !DILocation(line: 889, column: 12, scope: !3497)
!3504 = !DILocation(line: 889, column: 5, scope: !3497)
!3505 = !DILocation(line: 893, column: 31, scope: !3497)
!3506 = !DILocation(line: 893, column: 37, scope: !3497)
!3507 = !DILocation(line: 893, column: 48, scope: !3497)
!3508 = !DILocation(line: 893, column: 55, scope: !3497)
!3509 = !DILocation(line: 893, column: 12, scope: !3497)
!3510 = !DILocation(line: 893, column: 5, scope: !3497)
!3511 = !DILocation(line: 896, column: 37, scope: !3497)
!3512 = !DILocation(line: 896, column: 43, scope: !3497)
!3513 = !DILocation(line: 896, column: 54, scope: !3497)
!3514 = !DILocation(line: 896, column: 61, scope: !3497)
!3515 = !DILocation(line: 896, column: 12, scope: !3497)
!3516 = !DILocation(line: 896, column: 5, scope: !3497)
!3517 = !DILocation(line: 899, column: 32, scope: !3497)
!3518 = !DILocation(line: 899, column: 38, scope: !3497)
!3519 = !DILocation(line: 899, column: 49, scope: !3497)
!3520 = !DILocation(line: 899, column: 56, scope: !3497)
!3521 = !DILocation(line: 899, column: 12, scope: !3497)
!3522 = !DILocation(line: 899, column: 5, scope: !3497)
!3523 = !DILocation(line: 902, column: 27, scope: !3497)
!3524 = !DILocation(line: 902, column: 33, scope: !3497)
!3525 = !DILocation(line: 902, column: 44, scope: !3497)
!3526 = !DILocation(line: 902, column: 51, scope: !3497)
!3527 = !DILocation(line: 902, column: 12, scope: !3497)
!3528 = !DILocation(line: 902, column: 5, scope: !3497)
!3529 = !DILocation(line: 909, column: 32, scope: !3497)
!3530 = !DILocation(line: 909, column: 38, scope: !3497)
!3531 = !DILocation(line: 909, column: 49, scope: !3497)
!3532 = !DILocation(line: 909, column: 56, scope: !3497)
!3533 = !DILocation(line: 909, column: 12, scope: !3497)
!3534 = !DILocation(line: 909, column: 5, scope: !3497)
!3535 = !DILocation(line: 912, column: 1, scope: !1895)
!3536 = !DILocalVariable(name: "multi", arg: 1, scope: !1812, file: !1, line: 963, type: !375)
!3537 = !DILocation(line: 963, column: 46, scope: !1812)
!3538 = !DILocalVariable(name: "extra_fds", arg: 2, scope: !1812, file: !1, line: 964, type: !1815)
!3539 = !DILocation(line: 964, column: 46, scope: !1812)
!3540 = !DILocalVariable(name: "extra_nfds", arg: 3, scope: !1812, file: !1, line: 965, type: !457)
!3541 = !DILocation(line: 965, column: 40, scope: !1812)
!3542 = !DILocalVariable(name: "timeout_ms", arg: 4, scope: !1812, file: !1, line: 966, type: !316)
!3543 = !DILocation(line: 966, column: 31, scope: !1812)
!3544 = !DILocalVariable(name: "ret", arg: 5, scope: !1812, file: !1, line: 967, type: !1472)
!3545 = !DILocation(line: 967, column: 32, scope: !1812)
!3546 = !DILocalVariable(name: "data", scope: !1812, file: !1, line: 969, type: !256)
!3547 = !DILocation(line: 969, column: 21, scope: !1812)
!3548 = !DILocalVariable(name: "sockbunch", scope: !1812, file: !1, line: 970, type: !314)
!3549 = !DILocation(line: 970, column: 17, scope: !1812)
!3550 = !DILocalVariable(name: "bitmap", scope: !1812, file: !1, line: 971, type: !316)
!3551 = !DILocation(line: 971, column: 7, scope: !1812)
!3552 = !DILocalVariable(name: "i", scope: !1812, file: !1, line: 972, type: !457)
!3553 = !DILocation(line: 972, column: 16, scope: !1812)
!3554 = !DILocalVariable(name: "nfds", scope: !1812, file: !1, line: 973, type: !457)
!3555 = !DILocation(line: 973, column: 16, scope: !1812)
!3556 = !DILocalVariable(name: "curlfds", scope: !1812, file: !1, line: 974, type: !457)
!3557 = !DILocation(line: 974, column: 16, scope: !1812)
!3558 = !DILocalVariable(name: "ufds", scope: !1812, file: !1, line: 975, type: !3559)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64, align: 64)
!3560 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !3561, line: 39, size: 64, align: 32, elements: !3562)
!3561 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/poll.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!3562 = !{!3563, !3564, !3565}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3560, file: !3561, line: 41, baseType: !316, size: 32, align: 32)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3560, file: !3561, line: 42, baseType: !1820, size: 16, align: 16, offset: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !3560, file: !3561, line: 43, baseType: !1820, size: 16, align: 16, offset: 48)
!3566 = !DILocation(line: 975, column: 18, scope: !1812)
!3567 = !DILocalVariable(name: "ufds_malloc", scope: !1812, file: !1, line: 976, type: !423)
!3568 = !DILocation(line: 976, column: 8, scope: !1812)
!3569 = !DILocalVariable(name: "timeout_internal", scope: !1812, file: !1, line: 977, type: !379)
!3570 = !DILocation(line: 977, column: 8, scope: !1812)
!3571 = !DILocalVariable(name: "retcode", scope: !1812, file: !1, line: 978, type: !316)
!3572 = !DILocation(line: 978, column: 7, scope: !1812)
!3573 = !DILocalVariable(name: "a_few_on_stack", scope: !1812, file: !1, line: 979, type: !3574)
!3574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3560, size: 640, align: 32, elements: !3575)
!3575 = !{!3576}
!3576 = !DISubrange(count: 10)
!3577 = !DILocation(line: 979, column: 17, scope: !1812)
!3578 = !DILocation(line: 981, column: 7, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 981, column: 6)
!3580 = !DILocation(line: 981, column: 7, scope: !3581)
!3581 = !DILexicalBlockFile(scope: !3579, file: !1, discriminator: 1)
!3582 = !DILocation(line: 981, column: 6, scope: !3581)
!3583 = !DILocation(line: 982, column: 5, scope: !3579)
!3584 = !DILocation(line: 987, column: 23, scope: !1812)
!3585 = !DILocation(line: 987, column: 9, scope: !1812)
!3586 = !DILocation(line: 988, column: 7, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 988, column: 6)
!3588 = !DILocation(line: 988, column: 24, scope: !3587)
!3589 = !DILocation(line: 988, column: 30, scope: !3587)
!3590 = !DILocation(line: 988, column: 34, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3587, file: !1, discriminator: 1)
!3592 = !DILocation(line: 988, column: 59, scope: !3591)
!3593 = !DILocation(line: 988, column: 53, scope: !3591)
!3594 = !DILocation(line: 988, column: 51, scope: !3591)
!3595 = !DILocation(line: 988, column: 6, scope: !3591)
!3596 = !DILocation(line: 989, column: 23, scope: !3587)
!3597 = !DILocation(line: 989, column: 18, scope: !3587)
!3598 = !DILocation(line: 989, column: 16, scope: !3587)
!3599 = !DILocation(line: 989, column: 5, scope: !3587)
!3600 = !DILocation(line: 992, column: 8, scope: !1812)
!3601 = !DILocation(line: 992, column: 15, scope: !1812)
!3602 = !DILocation(line: 992, column: 7, scope: !1812)
!3603 = !DILocation(line: 993, column: 3, scope: !1812)
!3604 = !DILocation(line: 993, column: 9, scope: !3605)
!3605 = !DILexicalBlockFile(scope: !1812, file: !1, discriminator: 1)
!3606 = !DILocation(line: 993, column: 3, scope: !3605)
!3607 = !DILocation(line: 994, column: 28, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 993, column: 15)
!3609 = !DILocation(line: 994, column: 34, scope: !3608)
!3610 = !DILocation(line: 994, column: 14, scope: !3608)
!3611 = !DILocation(line: 994, column: 12, scope: !3608)
!3612 = !DILocation(line: 996, column: 10, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3608, file: !1, line: 996, column: 5)
!3614 = !DILocation(line: 996, column: 9, scope: !3613)
!3615 = !DILocation(line: 996, column: 14, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3617, file: !1, discriminator: 1)
!3617 = distinct !DILexicalBlock(scope: !3613, file: !1, line: 996, column: 5)
!3618 = !DILocation(line: 996, column: 15, scope: !3616)
!3619 = !DILocation(line: 996, column: 5, scope: !3616)
!3620 = !DILocalVariable(name: "s", scope: !3621, file: !1, line: 997, type: !315)
!3621 = distinct !DILexicalBlock(scope: !3617, file: !1, line: 996, column: 46)
!3622 = !DILocation(line: 997, column: 21, scope: !3621)
!3623 = !DILocation(line: 999, column: 10, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3621, file: !1, line: 999, column: 10)
!3625 = !DILocation(line: 999, column: 19, scope: !3624)
!3626 = !DILocation(line: 999, column: 17, scope: !3624)
!3627 = !DILocation(line: 999, column: 10, scope: !3621)
!3628 = !DILocation(line: 1000, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3624, file: !1, line: 999, column: 40)
!3630 = !DILocation(line: 1001, column: 23, scope: !3629)
!3631 = !DILocation(line: 1001, column: 13, scope: !3629)
!3632 = !DILocation(line: 1001, column: 11, scope: !3629)
!3633 = !DILocation(line: 1002, column: 7, scope: !3629)
!3634 = !DILocation(line: 1003, column: 10, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3621, file: !1, line: 1003, column: 10)
!3636 = !DILocation(line: 1003, column: 19, scope: !3635)
!3637 = !DILocation(line: 1003, column: 17, scope: !3635)
!3638 = !DILocation(line: 1003, column: 10, scope: !3621)
!3639 = !DILocation(line: 1004, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3635, file: !1, line: 1003, column: 41)
!3641 = !DILocation(line: 1005, column: 23, scope: !3640)
!3642 = !DILocation(line: 1005, column: 13, scope: !3640)
!3643 = !DILocation(line: 1005, column: 11, scope: !3640)
!3644 = !DILocation(line: 1006, column: 7, scope: !3640)
!3645 = !DILocation(line: 1007, column: 10, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3621, file: !1, line: 1007, column: 10)
!3647 = !DILocation(line: 1007, column: 12, scope: !3646)
!3648 = !DILocation(line: 1007, column: 10, scope: !3621)
!3649 = !DILocation(line: 1008, column: 9, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !1, line: 1007, column: 32)
!3651 = !DILocation(line: 1010, column: 5, scope: !3621)
!3652 = !DILocation(line: 996, column: 42, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3617, file: !1, discriminator: 2)
!3654 = !DILocation(line: 996, column: 5, scope: !3653)
!3655 = !DILocation(line: 1012, column: 12, scope: !3608)
!3656 = !DILocation(line: 1012, column: 18, scope: !3608)
!3657 = !DILocation(line: 1012, column: 10, scope: !3608)
!3658 = !DILocation(line: 993, column: 3, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !1812, file: !1, discriminator: 2)
!3660 = !DILocation(line: 1015, column: 13, scope: !1812)
!3661 = !DILocation(line: 1015, column: 11, scope: !1812)
!3662 = !DILocation(line: 1016, column: 11, scope: !1812)
!3663 = !DILocation(line: 1016, column: 8, scope: !1812)
!3664 = !DILocation(line: 1018, column: 6, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1018, column: 6)
!3666 = !DILocation(line: 1018, column: 11, scope: !3665)
!3667 = !DILocation(line: 1018, column: 14, scope: !3668)
!3668 = !DILexicalBlockFile(scope: !3665, file: !1, discriminator: 1)
!3669 = !DILocation(line: 1018, column: 6, scope: !3668)
!3670 = !DILocation(line: 1019, column: 8, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1019, column: 8)
!3672 = distinct !DILexicalBlock(scope: !3665, file: !1, line: 1018, column: 26)
!3673 = !DILocation(line: 1019, column: 13, scope: !3671)
!3674 = !DILocation(line: 1019, column: 8, scope: !3672)
!3675 = !DILocation(line: 1020, column: 14, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 1019, column: 35)
!3677 = !DILocation(line: 1020, column: 12, scope: !3676)
!3678 = !DILocation(line: 1021, column: 11, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !1, line: 1021, column: 10)
!3680 = !DILocation(line: 1021, column: 10, scope: !3676)
!3681 = !DILocation(line: 1022, column: 9, scope: !3679)
!3682 = !DILocation(line: 1023, column: 19, scope: !3676)
!3683 = !DILocation(line: 1024, column: 5, scope: !3676)
!3684 = !DILocation(line: 1026, column: 15, scope: !3671)
!3685 = !DILocation(line: 1026, column: 12, scope: !3671)
!3686 = !DILocation(line: 1027, column: 3, scope: !3672)
!3687 = !DILocation(line: 1028, column: 8, scope: !1812)
!3688 = !DILocation(line: 1033, column: 6, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1033, column: 6)
!3690 = !DILocation(line: 1033, column: 6, scope: !1812)
!3691 = !DILocation(line: 1035, column: 10, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3689, file: !1, line: 1033, column: 15)
!3693 = !DILocation(line: 1035, column: 17, scope: !3692)
!3694 = !DILocation(line: 1035, column: 9, scope: !3692)
!3695 = !DILocation(line: 1036, column: 5, scope: !3692)
!3696 = !DILocation(line: 1036, column: 11, scope: !3697)
!3697 = !DILexicalBlockFile(scope: !3692, file: !1, discriminator: 1)
!3698 = !DILocation(line: 1036, column: 5, scope: !3697)
!3699 = !DILocation(line: 1037, column: 30, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3692, file: !1, line: 1036, column: 17)
!3701 = !DILocation(line: 1037, column: 36, scope: !3700)
!3702 = !DILocation(line: 1037, column: 16, scope: !3700)
!3703 = !DILocation(line: 1037, column: 14, scope: !3700)
!3704 = !DILocation(line: 1039, column: 12, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3700, file: !1, line: 1039, column: 7)
!3706 = !DILocation(line: 1039, column: 11, scope: !3705)
!3707 = !DILocation(line: 1039, column: 16, scope: !3708)
!3708 = !DILexicalBlockFile(scope: !3709, file: !1, discriminator: 1)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !1, line: 1039, column: 7)
!3710 = !DILocation(line: 1039, column: 17, scope: !3708)
!3711 = !DILocation(line: 1039, column: 7, scope: !3708)
!3712 = !DILocalVariable(name: "s", scope: !3713, file: !1, line: 1040, type: !315)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !1, line: 1039, column: 48)
!3714 = !DILocation(line: 1040, column: 23, scope: !3713)
!3715 = !DILocation(line: 1042, column: 12, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !1, line: 1042, column: 12)
!3717 = !DILocation(line: 1042, column: 21, scope: !3716)
!3718 = !DILocation(line: 1042, column: 19, scope: !3716)
!3719 = !DILocation(line: 1042, column: 12, scope: !3713)
!3720 = !DILocation(line: 1043, column: 37, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3716, file: !1, line: 1042, column: 42)
!3722 = !DILocation(line: 1043, column: 27, scope: !3721)
!3723 = !DILocation(line: 1043, column: 16, scope: !3721)
!3724 = !DILocation(line: 1043, column: 11, scope: !3721)
!3725 = !DILocation(line: 1043, column: 22, scope: !3721)
!3726 = !DILocation(line: 1043, column: 25, scope: !3721)
!3727 = !DILocation(line: 1044, column: 16, scope: !3721)
!3728 = !DILocation(line: 1044, column: 11, scope: !3721)
!3729 = !DILocation(line: 1044, column: 22, scope: !3721)
!3730 = !DILocation(line: 1044, column: 29, scope: !3721)
!3731 = !DILocation(line: 1045, column: 11, scope: !3721)
!3732 = !DILocation(line: 1046, column: 25, scope: !3721)
!3733 = !DILocation(line: 1046, column: 15, scope: !3721)
!3734 = !DILocation(line: 1046, column: 13, scope: !3721)
!3735 = !DILocation(line: 1047, column: 9, scope: !3721)
!3736 = !DILocation(line: 1048, column: 12, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3713, file: !1, line: 1048, column: 12)
!3738 = !DILocation(line: 1048, column: 21, scope: !3737)
!3739 = !DILocation(line: 1048, column: 19, scope: !3737)
!3740 = !DILocation(line: 1048, column: 12, scope: !3713)
!3741 = !DILocation(line: 1049, column: 37, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1048, column: 43)
!3743 = !DILocation(line: 1049, column: 27, scope: !3742)
!3744 = !DILocation(line: 1049, column: 16, scope: !3742)
!3745 = !DILocation(line: 1049, column: 11, scope: !3742)
!3746 = !DILocation(line: 1049, column: 22, scope: !3742)
!3747 = !DILocation(line: 1049, column: 25, scope: !3742)
!3748 = !DILocation(line: 1050, column: 16, scope: !3742)
!3749 = !DILocation(line: 1050, column: 11, scope: !3742)
!3750 = !DILocation(line: 1050, column: 22, scope: !3742)
!3751 = !DILocation(line: 1050, column: 29, scope: !3742)
!3752 = !DILocation(line: 1051, column: 11, scope: !3742)
!3753 = !DILocation(line: 1052, column: 25, scope: !3742)
!3754 = !DILocation(line: 1052, column: 15, scope: !3742)
!3755 = !DILocation(line: 1052, column: 13, scope: !3742)
!3756 = !DILocation(line: 1053, column: 9, scope: !3742)
!3757 = !DILocation(line: 1054, column: 12, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3713, file: !1, line: 1054, column: 12)
!3759 = !DILocation(line: 1054, column: 14, scope: !3758)
!3760 = !DILocation(line: 1054, column: 12, scope: !3713)
!3761 = !DILocation(line: 1055, column: 11, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !1, line: 1054, column: 34)
!3763 = !DILocation(line: 1057, column: 7, scope: !3713)
!3764 = !DILocation(line: 1039, column: 44, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !3709, file: !1, discriminator: 2)
!3766 = !DILocation(line: 1039, column: 7, scope: !3765)
!3767 = !DILocation(line: 1059, column: 14, scope: !3700)
!3768 = !DILocation(line: 1059, column: 20, scope: !3700)
!3769 = !DILocation(line: 1059, column: 12, scope: !3700)
!3770 = !DILocation(line: 1036, column: 5, scope: !3771)
!3771 = !DILexicalBlockFile(scope: !3692, file: !1, discriminator: 2)
!3772 = !DILocation(line: 1061, column: 3, scope: !3692)
!3773 = !DILocation(line: 1064, column: 9, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1064, column: 3)
!3775 = !DILocation(line: 1064, column: 7, scope: !3774)
!3776 = !DILocation(line: 1064, column: 14, scope: !3777)
!3777 = !DILexicalBlockFile(scope: !3778, file: !1, discriminator: 1)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 1064, column: 3)
!3779 = !DILocation(line: 1064, column: 18, scope: !3777)
!3780 = !DILocation(line: 1064, column: 16, scope: !3777)
!3781 = !DILocation(line: 1064, column: 3, scope: !3777)
!3782 = !DILocation(line: 1065, column: 31, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !1, line: 1064, column: 35)
!3784 = !DILocation(line: 1065, column: 21, scope: !3783)
!3785 = !DILocation(line: 1065, column: 34, scope: !3783)
!3786 = !DILocation(line: 1065, column: 10, scope: !3783)
!3787 = !DILocation(line: 1065, column: 5, scope: !3783)
!3788 = !DILocation(line: 1065, column: 16, scope: !3783)
!3789 = !DILocation(line: 1065, column: 19, scope: !3783)
!3790 = !DILocation(line: 1066, column: 10, scope: !3783)
!3791 = !DILocation(line: 1066, column: 5, scope: !3783)
!3792 = !DILocation(line: 1066, column: 16, scope: !3783)
!3793 = !DILocation(line: 1066, column: 23, scope: !3783)
!3794 = !DILocation(line: 1067, column: 18, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3783, file: !1, line: 1067, column: 8)
!3796 = !DILocation(line: 1067, column: 8, scope: !3795)
!3797 = !DILocation(line: 1067, column: 21, scope: !3795)
!3798 = !DILocation(line: 1067, column: 28, scope: !3795)
!3799 = !DILocation(line: 1067, column: 8, scope: !3783)
!3800 = !DILocation(line: 1068, column: 12, scope: !3795)
!3801 = !DILocation(line: 1068, column: 7, scope: !3795)
!3802 = !DILocation(line: 1068, column: 18, scope: !3795)
!3803 = !DILocation(line: 1068, column: 25, scope: !3795)
!3804 = !DILocation(line: 1069, column: 18, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3783, file: !1, line: 1069, column: 8)
!3806 = !DILocation(line: 1069, column: 8, scope: !3805)
!3807 = !DILocation(line: 1069, column: 21, scope: !3805)
!3808 = !DILocation(line: 1069, column: 28, scope: !3805)
!3809 = !DILocation(line: 1069, column: 8, scope: !3783)
!3810 = !DILocation(line: 1070, column: 12, scope: !3805)
!3811 = !DILocation(line: 1070, column: 7, scope: !3805)
!3812 = !DILocation(line: 1070, column: 18, scope: !3805)
!3813 = !DILocation(line: 1070, column: 25, scope: !3805)
!3814 = !DILocation(line: 1071, column: 18, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3783, file: !1, line: 1071, column: 8)
!3816 = !DILocation(line: 1071, column: 8, scope: !3815)
!3817 = !DILocation(line: 1071, column: 21, scope: !3815)
!3818 = !DILocation(line: 1071, column: 28, scope: !3815)
!3819 = !DILocation(line: 1071, column: 8, scope: !3783)
!3820 = !DILocation(line: 1072, column: 12, scope: !3815)
!3821 = !DILocation(line: 1072, column: 7, scope: !3815)
!3822 = !DILocation(line: 1072, column: 18, scope: !3815)
!3823 = !DILocation(line: 1072, column: 25, scope: !3815)
!3824 = !DILocation(line: 1073, column: 5, scope: !3783)
!3825 = !DILocation(line: 1074, column: 3, scope: !3783)
!3826 = !DILocation(line: 1064, column: 31, scope: !3827)
!3827 = !DILexicalBlockFile(scope: !3778, file: !1, discriminator: 2)
!3828 = !DILocation(line: 1064, column: 3, scope: !3827)
!3829 = !DILocation(line: 1076, column: 6, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1076, column: 6)
!3831 = !DILocation(line: 1076, column: 6, scope: !1812)
!3832 = !DILocalVariable(name: "pollrc", scope: !3833, file: !1, line: 1077, type: !316)
!3833 = distinct !DILexicalBlock(scope: !3830, file: !1, line: 1076, column: 12)
!3834 = !DILocation(line: 1077, column: 9, scope: !3833)
!3835 = !DILocation(line: 1079, column: 24, scope: !3833)
!3836 = !DILocation(line: 1079, column: 30, scope: !3833)
!3837 = !DILocation(line: 1079, column: 36, scope: !3833)
!3838 = !DILocation(line: 1079, column: 14, scope: !3833)
!3839 = !DILocation(line: 1079, column: 12, scope: !3833)
!3840 = !DILocation(line: 1080, column: 5, scope: !3833)
!3841 = !DILocation(line: 1080, column: 5, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3843, file: !1, discriminator: 1)
!3843 = distinct !DILexicalBlock(scope: !3833, file: !1, line: 1080, column: 5)
!3844 = !DILocation(line: 1083, column: 8, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3833, file: !1, line: 1083, column: 8)
!3846 = !DILocation(line: 1083, column: 15, scope: !3845)
!3847 = !DILocation(line: 1083, column: 8, scope: !3833)
!3848 = !DILocation(line: 1084, column: 17, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3845, file: !1, line: 1083, column: 20)
!3850 = !DILocation(line: 1084, column: 15, scope: !3849)
!3851 = !DILocation(line: 1088, column: 13, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1088, column: 7)
!3853 = !DILocation(line: 1088, column: 11, scope: !3852)
!3854 = !DILocation(line: 1088, column: 18, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3856, file: !1, discriminator: 1)
!3856 = distinct !DILexicalBlock(scope: !3852, file: !1, line: 1088, column: 7)
!3857 = !DILocation(line: 1088, column: 22, scope: !3855)
!3858 = !DILocation(line: 1088, column: 20, scope: !3855)
!3859 = !DILocation(line: 1088, column: 7, scope: !3855)
!3860 = !DILocalVariable(name: "mask", scope: !3861, file: !1, line: 1089, type: !657)
!3861 = distinct !DILexicalBlock(scope: !3856, file: !1, line: 1088, column: 39)
!3862 = !DILocation(line: 1089, column: 24, scope: !3861)
!3863 = !DILocalVariable(name: "r", scope: !3861, file: !1, line: 1090, type: !457)
!3864 = !DILocation(line: 1090, column: 18, scope: !3861)
!3865 = !DILocation(line: 1090, column: 27, scope: !3861)
!3866 = !DILocation(line: 1090, column: 37, scope: !3861)
!3867 = !DILocation(line: 1090, column: 35, scope: !3861)
!3868 = !DILocation(line: 1090, column: 22, scope: !3861)
!3869 = !DILocation(line: 1090, column: 40, scope: !3861)
!3870 = !DILocation(line: 1092, column: 12, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1092, column: 12)
!3872 = !DILocation(line: 1092, column: 14, scope: !3871)
!3873 = !DILocation(line: 1092, column: 12, scope: !3861)
!3874 = !DILocation(line: 1093, column: 16, scope: !3871)
!3875 = !DILocation(line: 1093, column: 11, scope: !3871)
!3876 = !DILocation(line: 1094, column: 12, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1094, column: 12)
!3878 = !DILocation(line: 1094, column: 14, scope: !3877)
!3879 = !DILocation(line: 1094, column: 12, scope: !3861)
!3880 = !DILocation(line: 1095, column: 16, scope: !3877)
!3881 = !DILocation(line: 1095, column: 11, scope: !3877)
!3882 = !DILocation(line: 1096, column: 12, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1096, column: 12)
!3884 = !DILocation(line: 1096, column: 14, scope: !3883)
!3885 = !DILocation(line: 1096, column: 12, scope: !3861)
!3886 = !DILocation(line: 1097, column: 16, scope: !3883)
!3887 = !DILocation(line: 1097, column: 11, scope: !3883)
!3888 = !DILocation(line: 1099, column: 32, scope: !3861)
!3889 = !DILocation(line: 1099, column: 19, scope: !3861)
!3890 = !DILocation(line: 1099, column: 9, scope: !3861)
!3891 = !DILocation(line: 1099, column: 22, scope: !3861)
!3892 = !DILocation(line: 1099, column: 30, scope: !3861)
!3893 = !DILocation(line: 1100, column: 7, scope: !3861)
!3894 = !DILocation(line: 1088, column: 35, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3856, file: !1, discriminator: 2)
!3896 = !DILocation(line: 1088, column: 7, scope: !3895)
!3897 = !DILocation(line: 1101, column: 5, scope: !3849)
!3898 = !DILocation(line: 1102, column: 3, scope: !3833)
!3899 = !DILocation(line: 1104, column: 6, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1104, column: 6)
!3901 = !DILocation(line: 1104, column: 6, scope: !1812)
!3902 = !DILocation(line: 1105, column: 5, scope: !3900)
!3903 = !DILocation(line: 1106, column: 6, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 1106, column: 6)
!3905 = !DILocation(line: 1106, column: 6, scope: !1812)
!3906 = !DILocation(line: 1107, column: 12, scope: !3904)
!3907 = !DILocation(line: 1107, column: 6, scope: !3904)
!3908 = !DILocation(line: 1107, column: 10, scope: !3904)
!3909 = !DILocation(line: 1107, column: 5, scope: !3904)
!3910 = !DILocation(line: 1108, column: 3, scope: !1812)
!3911 = !DILocation(line: 1109, column: 1, scope: !1812)
!3912 = !DILocalVariable(name: "multi", arg: 1, scope: !1940, file: !1, line: 2775, type: !375)
!3913 = !DILocation(line: 2775, column: 51, scope: !1940)
!3914 = !DILocalVariable(name: "timeout_ms", arg: 2, scope: !1940, file: !1, line: 2776, type: !1856)
!3915 = !DILocation(line: 2776, column: 38, scope: !1940)
!3916 = !DILocation(line: 2780, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !1940, file: !1, line: 2780, column: 6)
!3918 = !DILocation(line: 2780, column: 13, scope: !3917)
!3919 = !DILocation(line: 2780, column: 6, scope: !1940)
!3920 = !DILocalVariable(name: "now", scope: !3921, file: !1, line: 2782, type: !411)
!3921 = distinct !DILexicalBlock(scope: !3917, file: !1, line: 2780, column: 23)
!3922 = !DILocation(line: 2782, column: 20, scope: !3921)
!3923 = !DILocation(line: 2782, column: 26, scope: !3921)
!3924 = !DILocation(line: 2785, column: 43, scope: !3921)
!3925 = !DILocation(line: 2785, column: 50, scope: !3921)
!3926 = !DILocation(line: 2785, column: 23, scope: !3921)
!3927 = !DILocation(line: 2785, column: 5, scope: !3921)
!3928 = !DILocation(line: 2785, column: 12, scope: !3921)
!3929 = !DILocation(line: 2785, column: 21, scope: !3921)
!3930 = !DILocation(line: 2787, column: 8, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3921, file: !1, line: 2787, column: 8)
!3932 = !DILocation(line: 2787, column: 8, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 1)
!3934 = !DILocation(line: 2787, column: 8, scope: !3935)
!3935 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 2)
!3936 = !DILocation(line: 2787, column: 8, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 3)
!3938 = !DILocation(line: 2787, column: 8, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 4)
!3940 = !DILocation(line: 2787, column: 8, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 5)
!3942 = !DILocation(line: 2787, column: 8, scope: !3943)
!3943 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 6)
!3944 = !DILocation(line: 2787, column: 8, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 7)
!3946 = !DILocation(line: 2787, column: 8, scope: !3947)
!3947 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 8)
!3948 = !DILocation(line: 2787, column: 8, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3931, file: !1, discriminator: 9)
!3950 = !DILocation(line: 2787, column: 57, scope: !3949)
!3951 = !DILocation(line: 2789, column: 40, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3931, file: !1, line: 2787, column: 62)
!3953 = !DILocation(line: 2789, column: 47, scope: !3952)
!3954 = !DILocation(line: 2789, column: 57, scope: !3952)
!3955 = !DILocation(line: 2789, column: 27, scope: !3952)
!3956 = !DILocation(line: 2789, column: 8, scope: !3952)
!3957 = !DILocation(line: 2789, column: 19, scope: !3952)
!3958 = !DILocation(line: 2790, column: 12, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3952, file: !1, line: 2790, column: 10)
!3960 = !DILocation(line: 2790, column: 11, scope: !3959)
!3961 = !DILocation(line: 2790, column: 10, scope: !3952)
!3962 = !DILocation(line: 2798, column: 10, scope: !3959)
!3963 = !DILocation(line: 2798, column: 20, scope: !3959)
!3964 = !DILocation(line: 2798, column: 9, scope: !3959)
!3965 = !DILocation(line: 2799, column: 5, scope: !3952)
!3966 = !DILocation(line: 2802, column: 8, scope: !3931)
!3967 = !DILocation(line: 2802, column: 19, scope: !3931)
!3968 = !DILocation(line: 2803, column: 3, scope: !3921)
!3969 = !DILocation(line: 2805, column: 6, scope: !3917)
!3970 = !DILocation(line: 2805, column: 17, scope: !3917)
!3971 = !DILocation(line: 2807, column: 3, scope: !1940)
!3972 = !DILocalVariable(name: "multi", arg: 1, scope: !1822, file: !1, line: 1118, type: !375)
!3973 = !DILocation(line: 1118, column: 48, scope: !1822)
!3974 = !DILocation(line: 1120, column: 3, scope: !1822)
!3975 = !DILocation(line: 1120, column: 10, scope: !1822)
!3976 = !DILocation(line: 1120, column: 23, scope: !1822)
!3977 = !DILocation(line: 1121, column: 1, scope: !1822)
!3978 = !DILocalVariable(name: "multi", arg: 1, scope: !1825, file: !1, line: 1139, type: !375)
!3979 = !DILocation(line: 1139, column: 53, scope: !1825)
!3980 = !DILocalVariable(name: "data", arg: 2, scope: !1825, file: !1, line: 1140, type: !256)
!3981 = !DILocation(line: 1140, column: 52, scope: !1825)
!3982 = !DILocalVariable(name: "conn", arg: 3, scope: !1825, file: !1, line: 1141, type: !262)
!3983 = !DILocation(line: 1141, column: 54, scope: !1825)
!3984 = !DILocalVariable(name: "rc", scope: !1825, file: !1, line: 1143, type: !1791)
!3985 = !DILocation(line: 1143, column: 13, scope: !1825)
!3986 = !DILocation(line: 1145, column: 30, scope: !1825)
!3987 = !DILocation(line: 1145, column: 37, scope: !1825)
!3988 = !DILocation(line: 1145, column: 8, scope: !1825)
!3989 = !DILocation(line: 1145, column: 6, scope: !1825)
!3990 = !DILocation(line: 1146, column: 7, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 1146, column: 6)
!3992 = !DILocation(line: 1146, column: 6, scope: !1825)
!3993 = !DILocalVariable(name: "k", scope: !3994, file: !1, line: 1147, type: !3995)
!3994 = distinct !DILexicalBlock(scope: !3991, file: !1, line: 1146, column: 11)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!3996 = !DILocation(line: 1147, column: 27, scope: !3994)
!3997 = !DILocation(line: 1147, column: 32, scope: !3994)
!3998 = !DILocation(line: 1147, column: 38, scope: !3994)
!3999 = !DILocation(line: 1151, column: 18, scope: !3994)
!4000 = !DILocation(line: 1151, column: 5, scope: !3994)
!4001 = !DILocation(line: 1154, column: 5, scope: !3994)
!4002 = !DILocation(line: 1155, column: 23, scope: !3994)
!4003 = !DILocation(line: 1155, column: 5, scope: !3994)
!4004 = !DILocation(line: 1155, column: 11, scope: !3994)
!4005 = !DILocation(line: 1155, column: 21, scope: !3994)
!4006 = !DILocation(line: 1156, column: 5, scope: !3994)
!4007 = !DILocation(line: 1156, column: 8, scope: !3994)
!4008 = !DILocation(line: 1156, column: 15, scope: !3994)
!4009 = !DILocation(line: 1157, column: 3, scope: !3994)
!4010 = !DILocation(line: 1158, column: 10, scope: !1825)
!4011 = !DILocation(line: 1158, column: 3, scope: !1825)
!4012 = !DILocalVariable(name: "multi", arg: 1, scope: !1828, file: !1, line: 2143, type: !375)
!4013 = !DILocation(line: 2143, column: 49, scope: !1828)
!4014 = !DILocalVariable(name: "running_handles", arg: 2, scope: !1828, file: !1, line: 2143, type: !1472)
!4015 = !DILocation(line: 2143, column: 61, scope: !1828)
!4016 = !DILocalVariable(name: "data", scope: !1828, file: !1, line: 2145, type: !256)
!4017 = !DILocation(line: 2145, column: 21, scope: !1828)
!4018 = !DILocalVariable(name: "returncode", scope: !1828, file: !1, line: 2146, type: !1791)
!4019 = !DILocation(line: 2146, column: 13, scope: !1828)
!4020 = !DILocalVariable(name: "t", scope: !1828, file: !1, line: 2147, type: !402)
!4021 = !DILocation(line: 2147, column: 21, scope: !1828)
!4022 = !DILocalVariable(name: "now", scope: !1828, file: !1, line: 2148, type: !411)
!4023 = !DILocation(line: 2148, column: 18, scope: !1828)
!4024 = !DILocation(line: 2148, column: 24, scope: !1828)
!4025 = !DILocation(line: 2150, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 2150, column: 6)
!4027 = !DILocation(line: 2150, column: 7, scope: !4028)
!4028 = !DILexicalBlockFile(scope: !4026, file: !1, discriminator: 1)
!4029 = !DILocation(line: 2150, column: 6, scope: !4028)
!4030 = !DILocation(line: 2151, column: 5, scope: !4026)
!4031 = !DILocation(line: 2153, column: 8, scope: !1828)
!4032 = !DILocation(line: 2153, column: 15, scope: !1828)
!4033 = !DILocation(line: 2153, column: 7, scope: !1828)
!4034 = !DILocation(line: 2154, column: 3, scope: !1828)
!4035 = !DILocation(line: 2154, column: 9, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !1828, file: !1, discriminator: 1)
!4037 = !DILocation(line: 2154, column: 3, scope: !4036)
!4038 = !DILocalVariable(name: "result", scope: !4039, file: !1, line: 2155, type: !1791)
!4039 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 2154, column: 15)
!4040 = !DILocation(line: 2155, column: 15, scope: !4039)
!4041 = !DILocation(line: 2158, column: 5, scope: !4039)
!4042 = !DILocation(line: 2158, column: 5, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !4044, file: !1, discriminator: 1)
!4044 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 2158, column: 5)
!4045 = !DILocation(line: 2159, column: 30, scope: !4039)
!4046 = !DILocation(line: 2159, column: 42, scope: !4039)
!4047 = !DILocation(line: 2159, column: 14, scope: !4039)
!4048 = !DILocation(line: 2159, column: 12, scope: !4039)
!4049 = !DILocation(line: 2160, column: 5, scope: !4039)
!4050 = !DILocation(line: 2160, column: 5, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4052, file: !1, discriminator: 1)
!4052 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 2160, column: 5)
!4053 = !DILocation(line: 2162, column: 8, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 2162, column: 8)
!4055 = !DILocation(line: 2162, column: 8, scope: !4039)
!4056 = !DILocation(line: 2163, column: 20, scope: !4054)
!4057 = !DILocation(line: 2163, column: 18, scope: !4054)
!4058 = !DILocation(line: 2163, column: 7, scope: !4054)
!4059 = !DILocation(line: 2165, column: 12, scope: !4039)
!4060 = !DILocation(line: 2165, column: 18, scope: !4039)
!4061 = !DILocation(line: 2165, column: 10, scope: !4039)
!4062 = !DILocation(line: 2154, column: 3, scope: !4063)
!4063 = !DILexicalBlockFile(scope: !1828, file: !1, discriminator: 2)
!4064 = !DILocation(line: 2178, column: 3, scope: !1828)
!4065 = !DILocation(line: 2179, column: 46, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 2178, column: 6)
!4067 = !DILocation(line: 2179, column: 53, scope: !4066)
!4068 = !DILocation(line: 2179, column: 23, scope: !4066)
!4069 = !DILocation(line: 2179, column: 5, scope: !4066)
!4070 = !DILocation(line: 2179, column: 12, scope: !4066)
!4071 = !DILocation(line: 2179, column: 21, scope: !4066)
!4072 = !DILocation(line: 2180, column: 8, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 2180, column: 8)
!4074 = !DILocation(line: 2180, column: 8, scope: !4066)
!4075 = !DILocation(line: 2182, column: 35, scope: !4073)
!4076 = !DILocation(line: 2182, column: 42, scope: !4073)
!4077 = !DILocation(line: 2182, column: 45, scope: !4073)
!4078 = !DILocation(line: 2182, column: 13, scope: !4073)
!4079 = !DILocation(line: 2182, column: 7, scope: !4073)
!4080 = !DILocation(line: 2184, column: 3, scope: !4066)
!4081 = !DILocation(line: 2184, column: 11, scope: !4036)
!4082 = !DILocation(line: 2184, column: 3, scope: !4036)
!4083 = !DILocation(line: 2186, column: 22, scope: !1828)
!4084 = !DILocation(line: 2186, column: 29, scope: !1828)
!4085 = !DILocation(line: 2186, column: 4, scope: !1828)
!4086 = !DILocation(line: 2186, column: 20, scope: !1828)
!4087 = !DILocation(line: 2188, column: 18, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 2188, column: 6)
!4089 = !DILocation(line: 2188, column: 15, scope: !4088)
!4090 = !DILocation(line: 2188, column: 6, scope: !1828)
!4091 = !DILocation(line: 2189, column: 18, scope: !4088)
!4092 = !DILocation(line: 2189, column: 5, scope: !4088)
!4093 = !DILocation(line: 2191, column: 10, scope: !1828)
!4094 = !DILocation(line: 2191, column: 3, scope: !1828)
!4095 = !DILocation(line: 2192, column: 1, scope: !1828)
!4096 = !DILocalVariable(name: "multi", arg: 1, scope: !1901, file: !1, line: 1294, type: !375)
!4097 = !DILocation(line: 1294, column: 53, scope: !1901)
!4098 = !DILocalVariable(name: "now", arg: 2, scope: !1901, file: !1, line: 1295, type: !411)
!4099 = !DILocation(line: 1295, column: 49, scope: !1901)
!4100 = !DILocalVariable(name: "data", arg: 3, scope: !1901, file: !1, line: 1296, type: !256)
!4101 = !DILocation(line: 1296, column: 52, scope: !1901)
!4102 = !DILocalVariable(name: "msg", scope: !1901, file: !1, line: 1298, type: !1920)
!4103 = !DILocation(line: 1298, column: 24, scope: !1901)
!4104 = !DILocalVariable(name: "connected", scope: !1901, file: !1, line: 1299, type: !423)
!4105 = !DILocation(line: 1299, column: 8, scope: !1901)
!4106 = !DILocalVariable(name: "async", scope: !1901, file: !1, line: 1300, type: !423)
!4107 = !DILocation(line: 1300, column: 8, scope: !1901)
!4108 = !DILocalVariable(name: "protocol_connect", scope: !1901, file: !1, line: 1301, type: !423)
!4109 = !DILocation(line: 1301, column: 8, scope: !1901)
!4110 = !DILocalVariable(name: "dophase_done", scope: !1901, file: !1, line: 1302, type: !423)
!4111 = !DILocation(line: 1302, column: 8, scope: !1901)
!4112 = !DILocalVariable(name: "done", scope: !1901, file: !1, line: 1303, type: !423)
!4113 = !DILocation(line: 1303, column: 8, scope: !1901)
!4114 = !DILocalVariable(name: "rc", scope: !1901, file: !1, line: 1304, type: !1791)
!4115 = !DILocation(line: 1304, column: 13, scope: !1901)
!4116 = !DILocalVariable(name: "result", scope: !1901, file: !1, line: 1305, type: !289)
!4117 = !DILocation(line: 1305, column: 12, scope: !1901)
!4118 = !DILocalVariable(name: "k", scope: !1901, file: !1, line: 1306, type: !3995)
!4119 = !DILocation(line: 1306, column: 25, scope: !1901)
!4120 = !DILocalVariable(name: "timeout_ms", scope: !1901, file: !1, line: 1307, type: !599)
!4121 = !DILocation(line: 1307, column: 10, scope: !1901)
!4122 = !DILocalVariable(name: "recv_timeout_ms", scope: !1901, file: !1, line: 1308, type: !599)
!4123 = !DILocation(line: 1308, column: 10, scope: !1901)
!4124 = !DILocalVariable(name: "send_timeout_ms", scope: !1901, file: !1, line: 1309, type: !599)
!4125 = !DILocation(line: 1309, column: 10, scope: !1901)
!4126 = !DILocalVariable(name: "control", scope: !1901, file: !1, line: 1310, type: !316)
!4127 = !DILocation(line: 1310, column: 7, scope: !1901)
!4128 = !DILocation(line: 1312, column: 7, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 1312, column: 6)
!4130 = !DILocation(line: 1312, column: 7, scope: !4131)
!4131 = !DILexicalBlockFile(scope: !4129, file: !1, discriminator: 1)
!4132 = !DILocation(line: 1312, column: 6, scope: !4131)
!4133 = !DILocation(line: 1313, column: 5, scope: !4129)
!4134 = !DILocation(line: 1315, column: 3, scope: !1901)
!4135 = !DILocalVariable(name: "stream_error", scope: !4136, file: !1, line: 1318, type: !423)
!4136 = distinct !DILexicalBlock(scope: !1901, file: !1, line: 1315, column: 6)
!4137 = !DILocation(line: 1318, column: 10, scope: !4136)
!4138 = !DILocation(line: 1319, column: 8, scope: !4136)
!4139 = !DILocation(line: 1323, column: 8, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1323, column: 8)
!4141 = !DILocation(line: 1323, column: 14, scope: !4140)
!4142 = !DILocation(line: 1323, column: 20, scope: !4140)
!4143 = !DILocation(line: 1323, column: 8, scope: !4136)
!4144 = !DILocation(line: 1324, column: 13, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4140, file: !1, line: 1323, column: 32)
!4146 = !DILocation(line: 1325, column: 21, scope: !4145)
!4147 = !DILocation(line: 1325, column: 13, scope: !4145)
!4148 = !DILocation(line: 1325, column: 27, scope: !4145)
!4149 = !DILocation(line: 1325, column: 33, scope: !4145)
!4150 = !DILocation(line: 1325, column: 39, scope: !4145)
!4151 = !DILocation(line: 1324, column: 7, scope: !4145)
!4152 = !DILocation(line: 1327, column: 10, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4145, file: !1, line: 1327, column: 10)
!4154 = !DILocation(line: 1327, column: 16, scope: !4153)
!4155 = !DILocation(line: 1327, column: 23, scope: !4153)
!4156 = !DILocation(line: 1327, column: 10, scope: !4145)
!4157 = !DILocation(line: 1329, column: 9, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4153, file: !1, line: 1327, column: 48)
!4159 = !DILocation(line: 1330, column: 12, scope: !4158)
!4160 = !DILocation(line: 1331, column: 16, scope: !4158)
!4161 = !DILocation(line: 1332, column: 7, scope: !4158)
!4162 = !DILocation(line: 1334, column: 7, scope: !4145)
!4163 = !DILocation(line: 1334, column: 13, scope: !4145)
!4164 = !DILocation(line: 1334, column: 19, scope: !4145)
!4165 = !DILocation(line: 1334, column: 30, scope: !4145)
!4166 = !DILocation(line: 1335, column: 7, scope: !4145)
!4167 = !DILocation(line: 1335, column: 13, scope: !4145)
!4168 = !DILocation(line: 1335, column: 23, scope: !4145)
!4169 = !DILocation(line: 1336, column: 7, scope: !4145)
!4170 = !DILocation(line: 1339, column: 9, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1339, column: 8)
!4172 = !DILocation(line: 1339, column: 15, scope: !4171)
!4173 = !DILocation(line: 1339, column: 25, scope: !4171)
!4174 = !DILocation(line: 1340, column: 8, scope: !4171)
!4175 = !DILocation(line: 1340, column: 14, scope: !4171)
!4176 = !DILocation(line: 1340, column: 21, scope: !4171)
!4177 = !DILocation(line: 1340, column: 43, scope: !4171)
!4178 = !DILocation(line: 1341, column: 8, scope: !4171)
!4179 = !DILocation(line: 1341, column: 14, scope: !4171)
!4180 = !DILocation(line: 1341, column: 21, scope: !4171)
!4181 = !DILocation(line: 1339, column: 8, scope: !4182)
!4182 = !DILexicalBlockFile(scope: !4136, file: !1, discriminator: 1)
!4183 = !DILocation(line: 1345, column: 13, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4171, file: !1, line: 1341, column: 41)
!4185 = !DILocation(line: 1345, column: 65, scope: !4184)
!4186 = !DILocation(line: 1345, column: 71, scope: !4184)
!4187 = !DILocation(line: 1345, column: 7, scope: !4184)
!4188 = !DILocation(line: 1346, column: 7, scope: !4184)
!4189 = !DILocation(line: 1349, column: 24, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1349, column: 8)
!4191 = !DILocation(line: 1349, column: 8, scope: !4190)
!4192 = !DILocation(line: 1349, column: 8, scope: !4136)
!4193 = !DILocation(line: 1350, column: 7, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4190, file: !1, line: 1349, column: 38)
!4195 = !DILocation(line: 1350, column: 7, scope: !4196)
!4196 = !DILexicalBlockFile(scope: !4197, file: !1, discriminator: 1)
!4197 = distinct !DILexicalBlock(scope: !4194, file: !1, line: 1350, column: 7)
!4198 = !DILocation(line: 1351, column: 42, scope: !4194)
!4199 = !DILocation(line: 1351, column: 7, scope: !4194)
!4200 = !DILocation(line: 1352, column: 5, scope: !4194)
!4201 = !DILocation(line: 1354, column: 8, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1354, column: 8)
!4203 = !DILocation(line: 1354, column: 14, scope: !4202)
!4204 = !DILocation(line: 1354, column: 24, scope: !4202)
!4205 = !DILocation(line: 1354, column: 27, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4202, file: !1, discriminator: 1)
!4207 = !DILocation(line: 1354, column: 33, scope: !4206)
!4208 = !DILocation(line: 1354, column: 40, scope: !4206)
!4209 = !DILocation(line: 1354, column: 62, scope: !4206)
!4210 = !DILocation(line: 1355, column: 8, scope: !4202)
!4211 = !DILocation(line: 1355, column: 14, scope: !4202)
!4212 = !DILocation(line: 1355, column: 21, scope: !4202)
!4213 = !DILocation(line: 1354, column: 8, scope: !4214)
!4214 = !DILexicalBlockFile(scope: !4136, file: !1, discriminator: 2)
!4215 = !DILocation(line: 1357, column: 31, scope: !4202)
!4216 = !DILocation(line: 1357, column: 7, scope: !4202)
!4217 = !DILocation(line: 1357, column: 13, scope: !4202)
!4218 = !DILocation(line: 1357, column: 24, scope: !4202)
!4219 = !DILocation(line: 1357, column: 29, scope: !4202)
!4220 = !DILocation(line: 1359, column: 8, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1359, column: 8)
!4222 = !DILocation(line: 1359, column: 14, scope: !4221)
!4223 = !DILocation(line: 1359, column: 24, scope: !4221)
!4224 = !DILocation(line: 1360, column: 9, scope: !4221)
!4225 = !DILocation(line: 1360, column: 15, scope: !4221)
!4226 = !DILocation(line: 1360, column: 22, scope: !4221)
!4227 = !DILocation(line: 1360, column: 46, scope: !4221)
!4228 = !DILocation(line: 1361, column: 9, scope: !4221)
!4229 = !DILocation(line: 1361, column: 15, scope: !4221)
!4230 = !DILocation(line: 1361, column: 22, scope: !4221)
!4231 = !DILocation(line: 1359, column: 8, scope: !4182)
!4232 = !DILocation(line: 1365, column: 34, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4221, file: !1, line: 1361, column: 48)
!4234 = !DILocation(line: 1366, column: 35, scope: !4233)
!4235 = !DILocation(line: 1366, column: 41, scope: !4233)
!4236 = !DILocation(line: 1366, column: 48, scope: !4233)
!4237 = !DILocation(line: 1366, column: 34, scope: !4233)
!4238 = !DILocation(line: 1365, column: 20, scope: !4233)
!4239 = !DILocation(line: 1365, column: 18, scope: !4233)
!4240 = !DILocation(line: 1369, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 1369, column: 10)
!4242 = !DILocation(line: 1369, column: 21, scope: !4241)
!4243 = !DILocation(line: 1369, column: 10, scope: !4233)
!4244 = !DILocation(line: 1371, column: 12, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 1371, column: 12)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !1, line: 1369, column: 26)
!4247 = !DILocation(line: 1371, column: 18, scope: !4245)
!4248 = !DILocation(line: 1371, column: 25, scope: !4245)
!4249 = !DILocation(line: 1371, column: 12, scope: !4246)
!4250 = !DILocation(line: 1372, column: 17, scope: !4245)
!4251 = !DILocation(line: 1373, column: 17, scope: !4245)
!4252 = !DILocation(line: 1372, column: 11, scope: !4245)
!4253 = !DILocation(line: 1374, column: 17, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4245, file: !1, line: 1374, column: 17)
!4255 = !DILocation(line: 1374, column: 23, scope: !4254)
!4256 = !DILocation(line: 1374, column: 30, scope: !4254)
!4257 = !DILocation(line: 1374, column: 17, scope: !4245)
!4258 = !DILocation(line: 1375, column: 17, scope: !4254)
!4259 = !DILocation(line: 1376, column: 17, scope: !4254)
!4260 = !DILocation(line: 1375, column: 11, scope: !4254)
!4261 = !DILocation(line: 1378, column: 16, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 1377, column: 14)
!4263 = !DILocation(line: 1378, column: 22, scope: !4262)
!4264 = !DILocation(line: 1378, column: 13, scope: !4262)
!4265 = !DILocation(line: 1379, column: 14, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 1379, column: 14)
!4267 = !DILocation(line: 1379, column: 17, scope: !4266)
!4268 = !DILocation(line: 1379, column: 22, scope: !4266)
!4269 = !DILocation(line: 1379, column: 14, scope: !4262)
!4270 = !DILocation(line: 1380, column: 19, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4266, file: !1, line: 1379, column: 29)
!4272 = !DILocation(line: 1383, column: 19, scope: !4271)
!4273 = !DILocation(line: 1384, column: 19, scope: !4271)
!4274 = !DILocation(line: 1384, column: 22, scope: !4271)
!4275 = !DILocation(line: 1384, column: 33, scope: !4271)
!4276 = !DILocation(line: 1384, column: 36, scope: !4271)
!4277 = !DILocation(line: 1380, column: 13, scope: !4271)
!4278 = !DILocation(line: 1385, column: 11, scope: !4271)
!4279 = !DILocation(line: 1387, column: 19, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4266, file: !1, line: 1386, column: 16)
!4281 = !DILocation(line: 1389, column: 19, scope: !4280)
!4282 = !DILocation(line: 1390, column: 19, scope: !4280)
!4283 = !DILocation(line: 1390, column: 22, scope: !4280)
!4284 = !DILocation(line: 1387, column: 13, scope: !4280)
!4285 = !DILocation(line: 1395, column: 12, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 1395, column: 12)
!4287 = !DILocation(line: 1395, column: 18, scope: !4286)
!4288 = !DILocation(line: 1395, column: 25, scope: !4286)
!4289 = !DILocation(line: 1395, column: 12, scope: !4246)
!4290 = !DILocation(line: 1396, column: 11, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 1395, column: 43)
!4292 = !DILocation(line: 1397, column: 24, scope: !4291)
!4293 = !DILocation(line: 1398, column: 9, scope: !4291)
!4294 = !DILocation(line: 1399, column: 16, scope: !4246)
!4295 = !DILocation(line: 1400, column: 27, scope: !4246)
!4296 = !DILocation(line: 1400, column: 33, scope: !4246)
!4297 = !DILocation(line: 1400, column: 44, scope: !4246)
!4298 = !DILocation(line: 1400, column: 15, scope: !4246)
!4299 = !DILocation(line: 1402, column: 9, scope: !4246)
!4300 = !DILocation(line: 1404, column: 5, scope: !4233)
!4301 = !DILocation(line: 1406, column: 12, scope: !4136)
!4302 = !DILocation(line: 1406, column: 18, scope: !4136)
!4303 = !DILocation(line: 1406, column: 5, scope: !4136)
!4304 = !DILocation(line: 1409, column: 31, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1406, column: 26)
!4306 = !DILocation(line: 1409, column: 14, scope: !4305)
!4307 = !DILocation(line: 1409, column: 13, scope: !4305)
!4308 = !DILocation(line: 1411, column: 11, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1411, column: 10)
!4310 = !DILocation(line: 1411, column: 10, scope: !4305)
!4311 = !DILocation(line: 1413, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4309, file: !1, line: 1411, column: 19)
!4313 = !DILocation(line: 1414, column: 23, scope: !4312)
!4314 = !DILocation(line: 1414, column: 9, scope: !4312)
!4315 = !DILocation(line: 1415, column: 12, scope: !4312)
!4316 = !DILocation(line: 1416, column: 7, scope: !4312)
!4317 = !DILocation(line: 1417, column: 7, scope: !4305)
!4318 = !DILocation(line: 1422, column: 7, scope: !4305)
!4319 = !DILocation(line: 1426, column: 21, scope: !4305)
!4320 = !DILocation(line: 1426, column: 7, scope: !4305)
!4321 = !DILocation(line: 1427, column: 29, scope: !4305)
!4322 = !DILocation(line: 1427, column: 36, scope: !4305)
!4323 = !DILocation(line: 1427, column: 42, scope: !4305)
!4324 = !DILocation(line: 1427, column: 16, scope: !4305)
!4325 = !DILocation(line: 1427, column: 14, scope: !4305)
!4326 = !DILocation(line: 1429, column: 43, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1429, column: 10)
!4328 = !DILocation(line: 1429, column: 40, scope: !4327)
!4329 = !DILocation(line: 1429, column: 10, scope: !4305)
!4330 = !DILocation(line: 1432, column: 9, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 1429, column: 51)
!4332 = !DILocation(line: 1435, column: 37, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4331, file: !1, line: 1435, column: 12)
!4334 = !DILocation(line: 1435, column: 44, scope: !4333)
!4335 = !DILocation(line: 1435, column: 53, scope: !4333)
!4336 = !DILocation(line: 1435, column: 60, scope: !4333)
!4337 = !DILocation(line: 1435, column: 68, scope: !4333)
!4338 = !DILocation(line: 1435, column: 74, scope: !4333)
!4339 = !DILocation(line: 1435, column: 13, scope: !4333)
!4340 = !DILocation(line: 1435, column: 12, scope: !4331)
!4341 = !DILocation(line: 1436, column: 18, scope: !4333)
!4342 = !DILocation(line: 1436, column: 11, scope: !4333)
!4343 = !DILocation(line: 1438, column: 18, scope: !4333)
!4344 = !DILocation(line: 1439, column: 9, scope: !4331)
!4345 = !DILocation(line: 1442, column: 11, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1442, column: 10)
!4347 = !DILocation(line: 1442, column: 10, scope: !4305)
!4348 = !DILocation(line: 1444, column: 46, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !1, line: 1442, column: 19)
!4350 = !DILocation(line: 1444, column: 52, scope: !4349)
!4351 = !DILocation(line: 1444, column: 58, scope: !4349)
!4352 = !DILocation(line: 1444, column: 18, scope: !4349)
!4353 = !DILocation(line: 1444, column: 16, scope: !4349)
!4354 = !DILocation(line: 1445, column: 12, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4349, file: !1, line: 1445, column: 12)
!4356 = !DILocation(line: 1445, column: 12, scope: !4349)
!4357 = !DILocation(line: 1446, column: 24, scope: !4355)
!4358 = !DILocation(line: 1446, column: 11, scope: !4355)
!4359 = !DILocation(line: 1448, column: 14, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !1, line: 1448, column: 14)
!4361 = distinct !DILexicalBlock(scope: !4355, file: !1, line: 1447, column: 14)
!4362 = !DILocation(line: 1448, column: 14, scope: !4361)
!4363 = !DILocation(line: 1450, column: 13, scope: !4360)
!4364 = !DILocation(line: 1455, column: 16, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4360, file: !1, line: 1451, column: 16)
!4366 = !DILocation(line: 1457, column: 16, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4365, file: !1, line: 1457, column: 16)
!4368 = !DILocation(line: 1457, column: 16, scope: !4365)
!4369 = !DILocation(line: 1458, column: 15, scope: !4367)
!4370 = !DILocation(line: 1458, column: 15, scope: !4371)
!4371 = !DILexicalBlockFile(scope: !4367, file: !1, discriminator: 1)
!4372 = !DILocation(line: 1462, column: 18, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 1462, column: 18)
!4374 = distinct !DILexicalBlock(scope: !4367, file: !1, line: 1460, column: 18)
!4375 = !DILocation(line: 1462, column: 24, scope: !4373)
!4376 = !DILocation(line: 1462, column: 35, scope: !4373)
!4377 = !DILocation(line: 1462, column: 61, scope: !4373)
!4378 = !DILocation(line: 1462, column: 18, scope: !4374)
!4379 = !DILocation(line: 1463, column: 17, scope: !4373)
!4380 = !DILocation(line: 1466, column: 17, scope: !4373)
!4381 = !DILocation(line: 1470, column: 7, scope: !4349)
!4382 = !DILocation(line: 1471, column: 7, scope: !4305)
!4383 = !DILocalVariable(name: "dns", scope: !4384, file: !1, line: 1476, type: !1310)
!4384 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1475, column: 5)
!4385 = !DILocation(line: 1476, column: 30, scope: !4384)
!4386 = !DILocalVariable(name: "conn", scope: !4384, file: !1, line: 1477, type: !262)
!4387 = !DILocation(line: 1477, column: 27, scope: !4384)
!4388 = !DILocation(line: 1477, column: 34, scope: !4384)
!4389 = !DILocation(line: 1477, column: 40, scope: !4384)
!4390 = !DILocalVariable(name: "hostname", scope: !4384, file: !1, line: 1478, type: !527)
!4391 = !DILocation(line: 1478, column: 19, scope: !4384)
!4392 = !DILocation(line: 1480, column: 10, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 1480, column: 10)
!4394 = !DILocation(line: 1480, column: 16, scope: !4393)
!4395 = !DILocation(line: 1480, column: 21, scope: !4393)
!4396 = !DILocation(line: 1480, column: 10, scope: !4384)
!4397 = !DILocation(line: 1481, column: 20, scope: !4393)
!4398 = !DILocation(line: 1481, column: 26, scope: !4393)
!4399 = !DILocation(line: 1481, column: 37, scope: !4393)
!4400 = !DILocation(line: 1481, column: 42, scope: !4393)
!4401 = !DILocation(line: 1481, column: 18, scope: !4393)
!4402 = !DILocation(line: 1481, column: 9, scope: !4393)
!4403 = !DILocation(line: 1482, column: 15, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4393, file: !1, line: 1482, column: 15)
!4405 = !DILocation(line: 1482, column: 21, scope: !4404)
!4406 = !DILocation(line: 1482, column: 26, scope: !4404)
!4407 = !DILocation(line: 1482, column: 15, scope: !4393)
!4408 = !DILocation(line: 1483, column: 20, scope: !4404)
!4409 = !DILocation(line: 1483, column: 26, scope: !4404)
!4410 = !DILocation(line: 1483, column: 39, scope: !4404)
!4411 = !DILocation(line: 1483, column: 18, scope: !4404)
!4412 = !DILocation(line: 1483, column: 9, scope: !4404)
!4413 = !DILocation(line: 1485, column: 20, scope: !4404)
!4414 = !DILocation(line: 1485, column: 26, scope: !4404)
!4415 = !DILocation(line: 1485, column: 31, scope: !4404)
!4416 = !DILocation(line: 1485, column: 18, scope: !4404)
!4417 = !DILocation(line: 1488, column: 29, scope: !4384)
!4418 = !DILocation(line: 1488, column: 35, scope: !4384)
!4419 = !DILocation(line: 1488, column: 50, scope: !4384)
!4420 = !DILocation(line: 1488, column: 56, scope: !4384)
!4421 = !DILocation(line: 1488, column: 45, scope: !4384)
!4422 = !DILocation(line: 1488, column: 13, scope: !4384)
!4423 = !DILocation(line: 1488, column: 11, scope: !4384)
!4424 = !DILocation(line: 1490, column: 10, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 1490, column: 10)
!4426 = !DILocation(line: 1490, column: 10, scope: !4384)
!4427 = !DILocation(line: 1495, column: 16, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4425, file: !1, line: 1490, column: 15)
!4429 = !DILocation(line: 1496, column: 15, scope: !4428)
!4430 = !DILocation(line: 1496, column: 63, scope: !4428)
!4431 = !DILocation(line: 1496, column: 9, scope: !4428)
!4432 = !DILocation(line: 1497, column: 7, scope: !4428)
!4433 = !DILocation(line: 1499, column: 11, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 1499, column: 10)
!4435 = !DILocation(line: 1499, column: 10, scope: !4384)
!4436 = !DILocation(line: 1500, column: 16, scope: !4434)
!4437 = !DILocation(line: 1500, column: 9, scope: !4434)
!4438 = !DILocation(line: 1508, column: 20, scope: !4384)
!4439 = !DILocation(line: 1508, column: 27, scope: !4384)
!4440 = !DILocation(line: 1508, column: 7, scope: !4384)
!4441 = !DILocation(line: 1510, column: 10, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 1510, column: 10)
!4443 = !DILocation(line: 1510, column: 10, scope: !4384)
!4444 = !DILocation(line: 1513, column: 16, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 1510, column: 15)
!4446 = !DILocation(line: 1515, column: 12, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 1515, column: 12)
!4448 = !DILocation(line: 1515, column: 12, scope: !4445)
!4449 = !DILocation(line: 1518, column: 11, scope: !4447)
!4450 = !DILocation(line: 1518, column: 17, scope: !4447)
!4451 = !DILocation(line: 1518, column: 27, scope: !4447)
!4452 = !DILocation(line: 1521, column: 14, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4447, file: !1, line: 1519, column: 14)
!4454 = !DILocation(line: 1522, column: 14, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4453, file: !1, line: 1522, column: 14)
!4456 = !DILocation(line: 1522, column: 14, scope: !4453)
!4457 = !DILocation(line: 1523, column: 13, scope: !4455)
!4458 = !DILocation(line: 1523, column: 13, scope: !4459)
!4459 = !DILexicalBlockFile(scope: !4455, file: !1, discriminator: 1)
!4460 = !DILocation(line: 1527, column: 16, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !1, line: 1527, column: 16)
!4462 = distinct !DILexicalBlock(scope: !4455, file: !1, line: 1525, column: 16)
!4463 = !DILocation(line: 1527, column: 22, scope: !4461)
!4464 = !DILocation(line: 1527, column: 33, scope: !4461)
!4465 = !DILocation(line: 1527, column: 59, scope: !4461)
!4466 = !DILocation(line: 1527, column: 16, scope: !4462)
!4467 = !DILocation(line: 1528, column: 15, scope: !4461)
!4468 = !DILocation(line: 1531, column: 15, scope: !4461)
!4469 = !DILocation(line: 1534, column: 7, scope: !4445)
!4470 = !DILocation(line: 1536, column: 10, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 1536, column: 10)
!4472 = !DILocation(line: 1536, column: 10, scope: !4384)
!4473 = !DILocation(line: 1538, column: 22, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4471, file: !1, line: 1536, column: 18)
!4475 = !DILocation(line: 1539, column: 9, scope: !4474)
!4476 = !DILocation(line: 1542, column: 5, scope: !4305)
!4477 = !DILocation(line: 1547, column: 34, scope: !4305)
!4478 = !DILocation(line: 1547, column: 40, scope: !4305)
!4479 = !DILocation(line: 1547, column: 16, scope: !4305)
!4480 = !DILocation(line: 1547, column: 14, scope: !4305)
!4481 = !DILocation(line: 1549, column: 10, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1549, column: 10)
!4483 = !DILocation(line: 1549, column: 16, scope: !4482)
!4484 = !DILocation(line: 1549, column: 27, scope: !4482)
!4485 = !DILocation(line: 1549, column: 32, scope: !4482)
!4486 = !DILocation(line: 1549, column: 10, scope: !4305)
!4487 = !DILocation(line: 1550, column: 12, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4482, file: !1, line: 1549, column: 54)
!4489 = !DILocation(line: 1552, column: 16, scope: !4488)
!4490 = !DILocation(line: 1553, column: 21, scope: !4488)
!4491 = !DILocation(line: 1553, column: 27, scope: !4488)
!4492 = !DILocation(line: 1553, column: 9, scope: !4488)
!4493 = !DILocation(line: 1554, column: 9, scope: !4488)
!4494 = !DILocation(line: 1555, column: 7, scope: !4488)
!4495 = !DILocation(line: 1556, column: 16, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4482, file: !1, line: 1556, column: 15)
!4497 = !DILocation(line: 1556, column: 15, scope: !4482)
!4498 = !DILocation(line: 1557, column: 13, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 1557, column: 12)
!4500 = distinct !DILexicalBlock(scope: !4496, file: !1, line: 1556, column: 24)
!4501 = !DILocation(line: 1557, column: 19, scope: !4499)
!4502 = !DILocation(line: 1557, column: 30, scope: !4499)
!4503 = !DILocation(line: 1557, column: 41, scope: !4499)
!4504 = !DILocation(line: 1557, column: 51, scope: !4499)
!4505 = !DILocation(line: 1557, column: 70, scope: !4499)
!4506 = !DILocation(line: 1558, column: 12, scope: !4499)
!4507 = !DILocation(line: 1558, column: 18, scope: !4499)
!4508 = !DILocation(line: 1558, column: 29, scope: !4499)
!4509 = !DILocation(line: 1558, column: 34, scope: !4499)
!4510 = !DILocation(line: 1558, column: 68, scope: !4499)
!4511 = !DILocation(line: 1559, column: 13, scope: !4499)
!4512 = !DILocation(line: 1559, column: 19, scope: !4499)
!4513 = !DILocation(line: 1559, column: 30, scope: !4499)
!4514 = !DILocation(line: 1559, column: 56, scope: !4499)
!4515 = !DILocation(line: 1557, column: 12, scope: !4516)
!4516 = !DILexicalBlockFile(scope: !4500, file: !1, discriminator: 1)
!4517 = !DILocation(line: 1560, column: 14, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4499, file: !1, line: 1559, column: 76)
!4519 = !DILocation(line: 1562, column: 11, scope: !4518)
!4520 = !DILocation(line: 1563, column: 9, scope: !4518)
!4521 = !DILocation(line: 1564, column: 7, scope: !4500)
!4522 = !DILocation(line: 1565, column: 7, scope: !4305)
!4523 = !DILocation(line: 1570, column: 34, scope: !4305)
!4524 = !DILocation(line: 1570, column: 40, scope: !4305)
!4525 = !DILocation(line: 1570, column: 16, scope: !4305)
!4526 = !DILocation(line: 1570, column: 14, scope: !4305)
!4527 = !DILocation(line: 1571, column: 10, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1571, column: 10)
!4529 = !DILocation(line: 1571, column: 20, scope: !4528)
!4530 = !DILocation(line: 1571, column: 24, scope: !4531)
!4531 = !DILexicalBlockFile(scope: !4528, file: !1, discriminator: 1)
!4532 = !DILocation(line: 1571, column: 10, scope: !4531)
!4533 = !DILocation(line: 1573, column: 13, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1573, column: 12)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !1, line: 1571, column: 32)
!4536 = !DILocation(line: 1573, column: 19, scope: !4534)
!4537 = !DILocation(line: 1573, column: 30, scope: !4534)
!4538 = !DILocation(line: 1573, column: 41, scope: !4534)
!4539 = !DILocation(line: 1573, column: 51, scope: !4534)
!4540 = !DILocation(line: 1573, column: 70, scope: !4534)
!4541 = !DILocation(line: 1574, column: 14, scope: !4534)
!4542 = !DILocation(line: 1574, column: 20, scope: !4534)
!4543 = !DILocation(line: 1574, column: 31, scope: !4534)
!4544 = !DILocation(line: 1574, column: 36, scope: !4534)
!4545 = !DILocation(line: 1574, column: 70, scope: !4534)
!4546 = !DILocation(line: 1575, column: 14, scope: !4534)
!4547 = !DILocation(line: 1575, column: 20, scope: !4534)
!4548 = !DILocation(line: 1575, column: 31, scope: !4534)
!4549 = !DILocation(line: 1575, column: 57, scope: !4534)
!4550 = !DILocation(line: 1573, column: 12, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !4535, file: !1, discriminator: 1)
!4552 = !DILocation(line: 1576, column: 11, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 1575, column: 77)
!4554 = !DILocation(line: 1577, column: 11, scope: !4553)
!4555 = !DILocation(line: 1580, column: 12, scope: !4535)
!4556 = !DILocation(line: 1581, column: 9, scope: !4535)
!4557 = !DILocation(line: 1584, column: 7, scope: !4535)
!4558 = !DILocation(line: 1585, column: 15, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4528, file: !1, line: 1585, column: 15)
!4560 = !DILocation(line: 1585, column: 15, scope: !4528)
!4561 = !DILocation(line: 1588, column: 22, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4559, file: !1, line: 1585, column: 23)
!4563 = !DILocation(line: 1589, column: 9, scope: !4562)
!4564 = !DILocation(line: 1591, column: 7, scope: !4305)
!4565 = !DILocation(line: 1594, column: 38, scope: !4305)
!4566 = !DILocation(line: 1594, column: 44, scope: !4305)
!4567 = !DILocation(line: 1594, column: 16, scope: !4305)
!4568 = !DILocation(line: 1594, column: 14, scope: !4305)
!4569 = !DILocation(line: 1595, column: 11, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1595, column: 10)
!4571 = !DILocation(line: 1595, column: 10, scope: !4305)
!4572 = !DILocation(line: 1597, column: 9, scope: !4570)
!4573 = !DILocation(line: 1598, column: 16, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1598, column: 15)
!4575 = !DILocation(line: 1598, column: 15, scope: !4570)
!4576 = !DILocation(line: 1600, column: 9, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 1598, column: 24)
!4578 = !DILocation(line: 1600, column: 9, scope: !4579)
!4579 = !DILexicalBlockFile(scope: !4577, file: !1, discriminator: 1)
!4580 = !DILocation(line: 1602, column: 12, scope: !4577)
!4581 = !DILocation(line: 1603, column: 7, scope: !4577)
!4582 = !DILocation(line: 1604, column: 15, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 1604, column: 15)
!4584 = !DILocation(line: 1604, column: 15, scope: !4574)
!4585 = !DILocation(line: 1606, column: 27, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4583, file: !1, line: 1604, column: 23)
!4587 = !DILocation(line: 1606, column: 9, scope: !4586)
!4588 = !DILocation(line: 1607, column: 21, scope: !4586)
!4589 = !DILocation(line: 1607, column: 27, scope: !4586)
!4590 = !DILocation(line: 1607, column: 38, scope: !4586)
!4591 = !DILocation(line: 1607, column: 9, scope: !4586)
!4592 = !DILocation(line: 1608, column: 22, scope: !4586)
!4593 = !DILocation(line: 1609, column: 7, scope: !4586)
!4594 = !DILocation(line: 1610, column: 7, scope: !4305)
!4595 = !DILocation(line: 1614, column: 41, scope: !4305)
!4596 = !DILocation(line: 1614, column: 47, scope: !4305)
!4597 = !DILocation(line: 1614, column: 16, scope: !4305)
!4598 = !DILocation(line: 1614, column: 14, scope: !4305)
!4599 = !DILocation(line: 1615, column: 11, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1615, column: 10)
!4601 = !DILocation(line: 1615, column: 18, scope: !4600)
!4602 = !DILocation(line: 1615, column: 21, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4600, file: !1, discriminator: 1)
!4604 = !DILocation(line: 1615, column: 10, scope: !4603)
!4605 = !DILocation(line: 1617, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4600, file: !1, line: 1615, column: 39)
!4607 = !DILocation(line: 1617, column: 9, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !4606, file: !1, discriminator: 1)
!4609 = !DILocation(line: 1619, column: 12, scope: !4606)
!4610 = !DILocation(line: 1620, column: 7, scope: !4606)
!4611 = !DILocation(line: 1621, column: 15, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4600, file: !1, line: 1621, column: 15)
!4613 = !DILocation(line: 1621, column: 15, scope: !4600)
!4614 = !DILocation(line: 1623, column: 27, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 1621, column: 23)
!4616 = !DILocation(line: 1623, column: 9, scope: !4615)
!4617 = !DILocation(line: 1624, column: 21, scope: !4615)
!4618 = !DILocation(line: 1624, column: 27, scope: !4615)
!4619 = !DILocation(line: 1624, column: 38, scope: !4615)
!4620 = !DILocation(line: 1624, column: 9, scope: !4615)
!4621 = !DILocation(line: 1625, column: 22, scope: !4615)
!4622 = !DILocation(line: 1626, column: 7, scope: !4615)
!4623 = !DILocation(line: 1627, column: 7, scope: !4305)
!4624 = !DILocation(line: 1631, column: 39, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1631, column: 10)
!4626 = !DILocation(line: 1631, column: 45, scope: !4625)
!4627 = !DILocation(line: 1631, column: 51, scope: !4625)
!4628 = !DILocation(line: 1631, column: 10, scope: !4625)
!4629 = !DILocation(line: 1631, column: 10, scope: !4305)
!4630 = !DILocation(line: 1633, column: 9, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4625, file: !1, line: 1631, column: 63)
!4632 = !DILocation(line: 1634, column: 12, scope: !4631)
!4633 = !DILocation(line: 1635, column: 7, scope: !4631)
!4634 = !DILocation(line: 1636, column: 7, scope: !4305)
!4635 = !DILocation(line: 1639, column: 10, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1639, column: 10)
!4637 = !DILocation(line: 1639, column: 16, scope: !4636)
!4638 = !DILocation(line: 1639, column: 20, scope: !4636)
!4639 = !DILocation(line: 1639, column: 10, scope: !4305)
!4640 = !DILocation(line: 1641, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4636, file: !1, line: 1639, column: 34)
!4642 = !DILocation(line: 1642, column: 9, scope: !4641)
!4643 = !DILocation(line: 1643, column: 16, scope: !4641)
!4644 = !DILocation(line: 1644, column: 12, scope: !4641)
!4645 = !DILocation(line: 1645, column: 7, scope: !4641)
!4646 = !DILocation(line: 1648, column: 28, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4636, file: !1, line: 1646, column: 12)
!4648 = !DILocation(line: 1648, column: 34, scope: !4647)
!4649 = !DILocation(line: 1648, column: 18, scope: !4647)
!4650 = !DILocation(line: 1648, column: 16, scope: !4647)
!4651 = !DILocation(line: 1652, column: 13, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !1, line: 1652, column: 12)
!4653 = !DILocation(line: 1652, column: 12, scope: !4647)
!4654 = !DILocation(line: 1653, column: 15, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !1, line: 1653, column: 14)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !1, line: 1652, column: 21)
!4657 = !DILocation(line: 1653, column: 14, scope: !4656)
!4658 = !DILocation(line: 1655, column: 16, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !1, line: 1655, column: 16)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 1653, column: 29)
!4661 = !DILocation(line: 1655, column: 22, scope: !4659)
!4662 = !DILocation(line: 1655, column: 26, scope: !4659)
!4663 = !DILocation(line: 1655, column: 16, scope: !4660)
!4664 = !DILocalVariable(name: "wc", scope: !4665, file: !1, line: 1656, type: !4666)
!4665 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 1655, column: 41)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!4667 = !DILocation(line: 1656, column: 36, scope: !4665)
!4668 = !DILocation(line: 1656, column: 42, scope: !4665)
!4669 = !DILocation(line: 1656, column: 48, scope: !4665)
!4670 = !DILocation(line: 1657, column: 18, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 1657, column: 18)
!4672 = !DILocation(line: 1657, column: 22, scope: !4671)
!4673 = !DILocation(line: 1657, column: 28, scope: !4671)
!4674 = !DILocation(line: 1657, column: 43, scope: !4671)
!4675 = !DILocation(line: 1657, column: 46, scope: !4676)
!4676 = !DILexicalBlockFile(scope: !4671, file: !1, discriminator: 1)
!4677 = !DILocation(line: 1657, column: 50, scope: !4676)
!4678 = !DILocation(line: 1657, column: 56, scope: !4676)
!4679 = !DILocation(line: 1657, column: 18, scope: !4676)
!4680 = !DILocation(line: 1659, column: 29, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 1657, column: 72)
!4682 = !DILocation(line: 1659, column: 35, scope: !4681)
!4683 = !DILocation(line: 1659, column: 17, scope: !4681)
!4684 = !DILocation(line: 1660, column: 17, scope: !4681)
!4685 = !DILocation(line: 1661, column: 20, scope: !4681)
!4686 = !DILocation(line: 1662, column: 17, scope: !4681)
!4687 = !DILocation(line: 1664, column: 13, scope: !4665)
!4688 = !DILocation(line: 1667, column: 13, scope: !4660)
!4689 = !DILocation(line: 1668, column: 16, scope: !4660)
!4690 = !DILocation(line: 1669, column: 11, scope: !4660)
!4691 = !DILocation(line: 1672, column: 19, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 1672, column: 19)
!4693 = !DILocation(line: 1672, column: 25, scope: !4692)
!4694 = !DILocation(line: 1672, column: 36, scope: !4692)
!4695 = !DILocation(line: 1672, column: 41, scope: !4692)
!4696 = !DILocation(line: 1672, column: 19, scope: !4655)
!4697 = !DILocation(line: 1675, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4692, file: !1, line: 1672, column: 50)
!4699 = !DILocation(line: 1676, column: 16, scope: !4698)
!4700 = !DILocation(line: 1677, column: 11, scope: !4698)
!4701 = !DILocation(line: 1680, column: 13, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4692, file: !1, line: 1678, column: 16)
!4703 = !DILocation(line: 1681, column: 16, scope: !4702)
!4704 = !DILocation(line: 1683, column: 9, scope: !4656)
!4705 = !DILocation(line: 1684, column: 38, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4652, file: !1, line: 1684, column: 17)
!4707 = !DILocation(line: 1684, column: 35, scope: !4706)
!4708 = !DILocation(line: 1684, column: 46, scope: !4706)
!4709 = !DILocation(line: 1685, column: 17, scope: !4706)
!4710 = !DILocation(line: 1685, column: 23, scope: !4706)
!4711 = !DILocation(line: 1685, column: 34, scope: !4706)
!4712 = !DILocation(line: 1685, column: 39, scope: !4706)
!4713 = !DILocation(line: 1684, column: 17, scope: !4714)
!4714 = !DILexicalBlockFile(scope: !4652, file: !1, discriminator: 1)
!4715 = !DILocalVariable(name: "newurl", scope: !4716, file: !1, line: 1691, type: !500)
!4716 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1685, column: 46)
!4717 = !DILocation(line: 1691, column: 17, scope: !4716)
!4718 = !DILocalVariable(name: "follow", scope: !4716, file: !1, line: 1692, type: !4719)
!4719 = !DIDerivedType(tag: DW_TAG_typedef, name: "followtype", file: !1762, line: 39, baseType: !1761)
!4720 = !DILocation(line: 1692, column: 22, scope: !4716)
!4721 = !DILocalVariable(name: "drc", scope: !4716, file: !1, line: 1693, type: !289)
!4722 = !DILocation(line: 1693, column: 20, scope: !4716)
!4723 = !DILocalVariable(name: "retry", scope: !4716, file: !1, line: 1694, type: !423)
!4724 = !DILocation(line: 1694, column: 16, scope: !4716)
!4725 = !DILocation(line: 1696, column: 36, scope: !4716)
!4726 = !DILocation(line: 1696, column: 42, scope: !4716)
!4727 = !DILocation(line: 1696, column: 17, scope: !4716)
!4728 = !DILocation(line: 1696, column: 15, scope: !4716)
!4729 = !DILocation(line: 1697, column: 14, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4716, file: !1, line: 1697, column: 14)
!4731 = !DILocation(line: 1697, column: 14, scope: !4716)
!4732 = !DILocation(line: 1699, column: 22, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1697, column: 19)
!4734 = !DILocation(line: 1699, column: 20, scope: !4733)
!4735 = !DILocation(line: 1700, column: 26, scope: !4733)
!4736 = !DILocation(line: 1701, column: 11, scope: !4733)
!4737 = !DILocation(line: 1703, column: 22, scope: !4730)
!4738 = !DILocation(line: 1703, column: 21, scope: !4730)
!4739 = !DILocation(line: 1703, column: 19, scope: !4730)
!4740 = !DILocation(line: 1705, column: 29, scope: !4716)
!4741 = !DILocation(line: 1705, column: 11, scope: !4716)
!4742 = !DILocation(line: 1706, column: 29, scope: !4716)
!4743 = !DILocation(line: 1706, column: 35, scope: !4716)
!4744 = !DILocation(line: 1706, column: 46, scope: !4716)
!4745 = !DILocation(line: 1706, column: 17, scope: !4716)
!4746 = !DILocation(line: 1706, column: 15, scope: !4716)
!4747 = !DILocation(line: 1710, column: 14, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4716, file: !1, line: 1710, column: 14)
!4749 = !DILocation(line: 1710, column: 14, scope: !4716)
!4750 = !DILocation(line: 1711, column: 17, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !1, line: 1711, column: 16)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !1, line: 1710, column: 21)
!4753 = !DILocation(line: 1711, column: 21, scope: !4751)
!4754 = !DILocation(line: 1711, column: 25, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4751, file: !1, discriminator: 1)
!4756 = !DILocation(line: 1711, column: 29, scope: !4755)
!4757 = !DILocation(line: 1711, column: 16, scope: !4755)
!4758 = !DILocation(line: 1712, column: 22, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4751, file: !1, line: 1711, column: 51)
!4760 = !DILocation(line: 1713, column: 33, scope: !4759)
!4761 = !DILocation(line: 1713, column: 39, scope: !4759)
!4762 = !DILocation(line: 1713, column: 47, scope: !4759)
!4763 = !DILocation(line: 1713, column: 21, scope: !4759)
!4764 = !DILocation(line: 1713, column: 19, scope: !4759)
!4765 = !DILocation(line: 1714, column: 19, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4759, file: !1, line: 1714, column: 18)
!4767 = !DILocation(line: 1714, column: 18, scope: !4759)
!4768 = !DILocation(line: 1715, column: 17, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1714, column: 24)
!4770 = !DILocation(line: 1716, column: 20, scope: !4769)
!4771 = !DILocation(line: 1717, column: 24, scope: !4769)
!4772 = !DILocation(line: 1718, column: 15, scope: !4769)
!4773 = !DILocation(line: 1721, column: 26, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1719, column: 20)
!4775 = !DILocation(line: 1721, column: 24, scope: !4774)
!4776 = !DILocation(line: 1722, column: 17, scope: !4774)
!4777 = !DILocation(line: 1724, column: 13, scope: !4759)
!4778 = !DILocation(line: 1727, column: 24, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4751, file: !1, line: 1725, column: 18)
!4780 = !DILocation(line: 1727, column: 22, scope: !4779)
!4781 = !DILocation(line: 1728, column: 15, scope: !4779)
!4782 = !DILocation(line: 1730, column: 11, scope: !4752)
!4783 = !DILocation(line: 1733, column: 26, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4748, file: !1, line: 1731, column: 16)
!4785 = !DILocation(line: 1734, column: 13, scope: !4784)
!4786 = !DILocation(line: 1736, column: 9, scope: !4716)
!4787 = !DILocation(line: 1739, column: 29, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1737, column: 14)
!4789 = !DILocation(line: 1739, column: 11, scope: !4788)
!4790 = !DILocation(line: 1740, column: 14, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4788, file: !1, line: 1740, column: 14)
!4792 = !DILocation(line: 1740, column: 20, scope: !4791)
!4793 = !DILocation(line: 1740, column: 14, scope: !4788)
!4794 = !DILocation(line: 1741, column: 25, scope: !4791)
!4795 = !DILocation(line: 1741, column: 31, scope: !4791)
!4796 = !DILocation(line: 1741, column: 42, scope: !4791)
!4797 = !DILocation(line: 1741, column: 13, scope: !4791)
!4798 = !DILocation(line: 1742, column: 24, scope: !4788)
!4799 = !DILocation(line: 1745, column: 7, scope: !4305)
!4800 = !DILocation(line: 1749, column: 36, scope: !4305)
!4801 = !DILocation(line: 1749, column: 42, scope: !4305)
!4802 = !DILocation(line: 1749, column: 16, scope: !4305)
!4803 = !DILocation(line: 1749, column: 14, scope: !4305)
!4804 = !DILocation(line: 1751, column: 11, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1751, column: 10)
!4806 = !DILocation(line: 1751, column: 10, scope: !4305)
!4807 = !DILocation(line: 1752, column: 12, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1752, column: 12)
!4809 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 1751, column: 19)
!4810 = !DILocation(line: 1752, column: 12, scope: !4809)
!4811 = !DILocation(line: 1754, column: 11, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 1752, column: 26)
!4813 = !DILocation(line: 1757, column: 14, scope: !4812)
!4814 = !DILocation(line: 1758, column: 9, scope: !4812)
!4815 = !DILocation(line: 1759, column: 7, scope: !4809)
!4816 = !DILocation(line: 1762, column: 27, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 1760, column: 12)
!4818 = !DILocation(line: 1762, column: 9, scope: !4817)
!4819 = !DILocation(line: 1763, column: 21, scope: !4817)
!4820 = !DILocation(line: 1763, column: 27, scope: !4817)
!4821 = !DILocation(line: 1763, column: 38, scope: !4817)
!4822 = !DILocation(line: 1763, column: 9, scope: !4817)
!4823 = !DILocation(line: 1764, column: 22, scope: !4817)
!4824 = !DILocation(line: 1766, column: 7, scope: !4305)
!4825 = !DILocation(line: 1772, column: 30, scope: !4305)
!4826 = !DILocation(line: 1772, column: 36, scope: !4305)
!4827 = !DILocation(line: 1772, column: 16, scope: !4305)
!4828 = !DILocation(line: 1772, column: 14, scope: !4305)
!4829 = !DILocation(line: 1776, column: 11, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1776, column: 10)
!4831 = !DILocation(line: 1776, column: 10, scope: !4305)
!4832 = !DILocation(line: 1777, column: 12, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !1, line: 1777, column: 12)
!4834 = distinct !DILexicalBlock(scope: !4830, file: !1, line: 1776, column: 19)
!4835 = !DILocation(line: 1777, column: 12, scope: !4834)
!4836 = !DILocation(line: 1780, column: 11, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4833, file: !1, line: 1777, column: 21)
!4838 = !DILocation(line: 1783, column: 14, scope: !4837)
!4839 = !DILocation(line: 1784, column: 9, scope: !4837)
!4840 = !DILocation(line: 1787, column: 14, scope: !4833)
!4841 = !DILocation(line: 1788, column: 7, scope: !4834)
!4842 = !DILocation(line: 1791, column: 27, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4830, file: !1, line: 1789, column: 12)
!4844 = !DILocation(line: 1791, column: 9, scope: !4843)
!4845 = !DILocation(line: 1792, column: 21, scope: !4843)
!4846 = !DILocation(line: 1792, column: 27, scope: !4843)
!4847 = !DILocation(line: 1792, column: 38, scope: !4843)
!4848 = !DILocation(line: 1792, column: 9, scope: !4843)
!4849 = !DILocation(line: 1793, column: 22, scope: !4843)
!4850 = !DILocation(line: 1795, column: 7, scope: !4305)
!4851 = !DILocation(line: 1799, column: 47, scope: !4305)
!4852 = !DILocation(line: 1799, column: 53, scope: !4305)
!4853 = !DILocation(line: 1799, column: 59, scope: !4305)
!4854 = !DILocation(line: 1799, column: 7, scope: !4305)
!4855 = !DILocation(line: 1801, column: 42, scope: !4305)
!4856 = !DILocation(line: 1801, column: 7, scope: !4305)
!4857 = !DILocation(line: 1805, column: 11, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1805, column: 10)
!4859 = !DILocation(line: 1805, column: 17, scope: !4858)
!4860 = !DILocation(line: 1805, column: 28, scope: !4858)
!4861 = !DILocation(line: 1805, column: 35, scope: !4858)
!4862 = !DILocation(line: 1805, column: 55, scope: !4858)
!4863 = !DILocation(line: 1806, column: 11, scope: !4858)
!4864 = !DILocation(line: 1806, column: 17, scope: !4858)
!4865 = !DILocation(line: 1806, column: 28, scope: !4858)
!4866 = !DILocation(line: 1806, column: 40, scope: !4858)
!4867 = !DILocation(line: 1805, column: 10, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !4305, file: !1, discriminator: 1)
!4869 = !DILocation(line: 1807, column: 9, scope: !4858)
!4870 = !DILocation(line: 1809, column: 9, scope: !4858)
!4871 = !DILocation(line: 1810, column: 10, scope: !4305)
!4872 = !DILocation(line: 1811, column: 7, scope: !4305)
!4873 = !DILocation(line: 1815, column: 38, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1815, column: 10)
!4875 = !DILocation(line: 1815, column: 44, scope: !4874)
!4876 = !DILocation(line: 1815, column: 50, scope: !4874)
!4877 = !DILocation(line: 1815, column: 10, scope: !4874)
!4878 = !DILocation(line: 1815, column: 10, scope: !4305)
!4879 = !DILocation(line: 1817, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !1, line: 1815, column: 62)
!4881 = !DILocation(line: 1818, column: 12, scope: !4880)
!4882 = !DILocation(line: 1819, column: 7, scope: !4880)
!4883 = !DILocation(line: 1820, column: 7, scope: !4305)
!4884 = !DILocation(line: 1824, column: 26, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1824, column: 10)
!4886 = !DILocation(line: 1824, column: 32, scope: !4885)
!4887 = !DILocation(line: 1824, column: 10, scope: !4885)
!4888 = !DILocation(line: 1824, column: 10, scope: !4305)
!4889 = !DILocation(line: 1825, column: 16, scope: !4885)
!4890 = !DILocation(line: 1825, column: 9, scope: !4885)
!4891 = !DILocation(line: 1827, column: 34, scope: !4885)
!4892 = !DILocation(line: 1827, column: 18, scope: !4885)
!4893 = !DILocation(line: 1827, column: 16, scope: !4885)
!4894 = !DILocation(line: 1829, column: 11, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1829, column: 10)
!4896 = !DILocation(line: 1829, column: 10, scope: !4305)
!4897 = !DILocation(line: 1830, column: 25, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4895, file: !1, line: 1829, column: 19)
!4899 = !DILocation(line: 1831, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4898, file: !1, line: 1831, column: 12)
!4901 = !DILocation(line: 1831, column: 18, scope: !4900)
!4902 = !DILocation(line: 1831, column: 22, scope: !4900)
!4903 = !DILocation(line: 1831, column: 37, scope: !4900)
!4904 = !DILocation(line: 1831, column: 12, scope: !4898)
!4905 = !DILocation(line: 1832, column: 52, scope: !4900)
!4906 = !DILocation(line: 1832, column: 58, scope: !4900)
!4907 = !DILocation(line: 1832, column: 67, scope: !4900)
!4908 = !DILocation(line: 1833, column: 33, scope: !4900)
!4909 = !DILocation(line: 1833, column: 39, scope: !4900)
!4910 = !DILocation(line: 1833, column: 48, scope: !4900)
!4911 = !DILocation(line: 1834, column: 33, scope: !4900)
!4912 = !DILocation(line: 1834, column: 39, scope: !4900)
!4913 = !DILocation(line: 1834, column: 43, scope: !4900)
!4914 = !DILocation(line: 1835, column: 33, scope: !4900)
!4915 = !DILocation(line: 1835, column: 39, scope: !4900)
!4916 = !DILocation(line: 1835, column: 48, scope: !4900)
!4917 = !DILocation(line: 1832, column: 29, scope: !4900)
!4918 = !DILocation(line: 1832, column: 27, scope: !4900)
!4919 = !DILocation(line: 1832, column: 11, scope: !4900)
!4920 = !DILocation(line: 1838, column: 25, scope: !4898)
!4921 = !DILocation(line: 1839, column: 12, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4898, file: !1, line: 1839, column: 12)
!4923 = !DILocation(line: 1839, column: 18, scope: !4922)
!4924 = !DILocation(line: 1839, column: 22, scope: !4922)
!4925 = !DILocation(line: 1839, column: 37, scope: !4922)
!4926 = !DILocation(line: 1839, column: 12, scope: !4898)
!4927 = !DILocation(line: 1840, column: 52, scope: !4922)
!4928 = !DILocation(line: 1840, column: 58, scope: !4922)
!4929 = !DILocation(line: 1840, column: 67, scope: !4922)
!4930 = !DILocation(line: 1841, column: 33, scope: !4922)
!4931 = !DILocation(line: 1841, column: 39, scope: !4922)
!4932 = !DILocation(line: 1841, column: 48, scope: !4922)
!4933 = !DILocation(line: 1842, column: 33, scope: !4922)
!4934 = !DILocation(line: 1842, column: 39, scope: !4922)
!4935 = !DILocation(line: 1842, column: 43, scope: !4922)
!4936 = !DILocation(line: 1843, column: 33, scope: !4922)
!4937 = !DILocation(line: 1843, column: 39, scope: !4922)
!4938 = !DILocation(line: 1843, column: 48, scope: !4922)
!4939 = !DILocation(line: 1840, column: 29, scope: !4922)
!4940 = !DILocation(line: 1840, column: 27, scope: !4922)
!4941 = !DILocation(line: 1840, column: 11, scope: !4922)
!4942 = !DILocation(line: 1846, column: 12, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4898, file: !1, line: 1846, column: 12)
!4944 = !DILocation(line: 1846, column: 28, scope: !4943)
!4945 = !DILocation(line: 1846, column: 33, scope: !4943)
!4946 = !DILocation(line: 1846, column: 36, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4943, file: !1, discriminator: 1)
!4948 = !DILocation(line: 1846, column: 52, scope: !4947)
!4949 = !DILocation(line: 1846, column: 12, scope: !4947)
!4950 = !DILocation(line: 1847, column: 11, scope: !4943)
!4951 = !DILocation(line: 1848, column: 17, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4943, file: !1, line: 1848, column: 17)
!4953 = !DILocation(line: 1848, column: 36, scope: !4952)
!4954 = !DILocation(line: 1848, column: 33, scope: !4952)
!4955 = !DILocation(line: 1848, column: 17, scope: !4943)
!4956 = !DILocation(line: 1849, column: 30, scope: !4952)
!4957 = !DILocation(line: 1849, column: 36, scope: !4952)
!4958 = !DILocation(line: 1849, column: 11, scope: !4952)
!4959 = !DILocation(line: 1851, column: 30, scope: !4952)
!4960 = !DILocation(line: 1851, column: 36, scope: !4952)
!4961 = !DILocation(line: 1851, column: 11, scope: !4952)
!4962 = !DILocation(line: 1852, column: 7, scope: !4898)
!4963 = !DILocation(line: 1853, column: 7, scope: !4305)
!4964 = !DILocalVariable(name: "newurl", scope: !4965, file: !1, line: 1857, type: !500)
!4965 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1856, column: 5)
!4966 = !DILocation(line: 1857, column: 13, scope: !4965)
!4967 = !DILocalVariable(name: "retry", scope: !4965, file: !1, line: 1858, type: !423)
!4968 = !DILocation(line: 1858, column: 12, scope: !4965)
!4969 = !DILocalVariable(name: "comeback", scope: !4965, file: !1, line: 1859, type: !423)
!4970 = !DILocation(line: 1859, column: 12, scope: !4965)
!4971 = !DILocation(line: 1862, column: 23, scope: !4965)
!4972 = !DILocation(line: 1863, column: 10, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1863, column: 10)
!4974 = !DILocation(line: 1863, column: 16, scope: !4973)
!4975 = !DILocation(line: 1863, column: 20, scope: !4973)
!4976 = !DILocation(line: 1863, column: 35, scope: !4973)
!4977 = !DILocation(line: 1863, column: 10, scope: !4965)
!4978 = !DILocation(line: 1864, column: 50, scope: !4973)
!4979 = !DILocation(line: 1864, column: 56, scope: !4973)
!4980 = !DILocation(line: 1864, column: 65, scope: !4973)
!4981 = !DILocation(line: 1865, column: 50, scope: !4973)
!4982 = !DILocation(line: 1865, column: 56, scope: !4973)
!4983 = !DILocation(line: 1865, column: 65, scope: !4973)
!4984 = !DILocation(line: 1866, column: 50, scope: !4973)
!4985 = !DILocation(line: 1866, column: 56, scope: !4973)
!4986 = !DILocation(line: 1866, column: 60, scope: !4973)
!4987 = !DILocation(line: 1867, column: 50, scope: !4973)
!4988 = !DILocation(line: 1867, column: 56, scope: !4973)
!4989 = !DILocation(line: 1867, column: 65, scope: !4973)
!4990 = !DILocation(line: 1864, column: 27, scope: !4973)
!4991 = !DILocation(line: 1864, column: 25, scope: !4973)
!4992 = !DILocation(line: 1864, column: 9, scope: !4973)
!4993 = !DILocation(line: 1871, column: 23, scope: !4965)
!4994 = !DILocation(line: 1872, column: 10, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1872, column: 10)
!4996 = !DILocation(line: 1872, column: 16, scope: !4995)
!4997 = !DILocation(line: 1872, column: 20, scope: !4995)
!4998 = !DILocation(line: 1872, column: 35, scope: !4995)
!4999 = !DILocation(line: 1872, column: 10, scope: !4965)
!5000 = !DILocation(line: 1873, column: 50, scope: !4995)
!5001 = !DILocation(line: 1873, column: 56, scope: !4995)
!5002 = !DILocation(line: 1873, column: 65, scope: !4995)
!5003 = !DILocation(line: 1874, column: 50, scope: !4995)
!5004 = !DILocation(line: 1874, column: 56, scope: !4995)
!5005 = !DILocation(line: 1874, column: 65, scope: !4995)
!5006 = !DILocation(line: 1875, column: 50, scope: !4995)
!5007 = !DILocation(line: 1875, column: 56, scope: !4995)
!5008 = !DILocation(line: 1875, column: 60, scope: !4995)
!5009 = !DILocation(line: 1876, column: 50, scope: !4995)
!5010 = !DILocation(line: 1876, column: 56, scope: !4995)
!5011 = !DILocation(line: 1876, column: 65, scope: !4995)
!5012 = !DILocation(line: 1873, column: 27, scope: !4995)
!5013 = !DILocation(line: 1873, column: 25, scope: !4995)
!5014 = !DILocation(line: 1873, column: 9, scope: !4995)
!5015 = !DILocation(line: 1879, column: 10, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1879, column: 10)
!5017 = !DILocation(line: 1879, column: 26, scope: !5016)
!5018 = !DILocation(line: 1879, column: 30, scope: !5016)
!5019 = !DILocation(line: 1879, column: 33, scope: !5020)
!5020 = !DILexicalBlockFile(scope: !5016, file: !1, discriminator: 1)
!5021 = !DILocation(line: 1879, column: 49, scope: !5020)
!5022 = !DILocation(line: 1879, column: 10, scope: !5020)
!5023 = !DILocation(line: 1880, column: 9, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5016, file: !1, line: 1879, column: 54)
!5025 = !DILocation(line: 1881, column: 12, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5024, file: !1, line: 1881, column: 12)
!5027 = !DILocation(line: 1881, column: 31, scope: !5026)
!5028 = !DILocation(line: 1881, column: 28, scope: !5026)
!5029 = !DILocation(line: 1881, column: 12, scope: !5024)
!5030 = !DILocation(line: 1882, column: 30, scope: !5026)
!5031 = !DILocation(line: 1882, column: 36, scope: !5026)
!5032 = !DILocation(line: 1882, column: 11, scope: !5026)
!5033 = !DILocation(line: 1884, column: 30, scope: !5026)
!5034 = !DILocation(line: 1884, column: 36, scope: !5026)
!5035 = !DILocation(line: 1884, column: 11, scope: !5026)
!5036 = !DILocation(line: 1885, column: 9, scope: !5024)
!5037 = !DILocation(line: 1889, column: 31, scope: !4965)
!5038 = !DILocation(line: 1889, column: 37, scope: !4965)
!5039 = !DILocation(line: 1889, column: 48, scope: !4965)
!5040 = !DILocation(line: 1889, column: 16, scope: !4965)
!5041 = !DILocation(line: 1889, column: 14, scope: !4965)
!5042 = !DILocation(line: 1891, column: 12, scope: !4965)
!5043 = !DILocation(line: 1891, column: 18, scope: !4965)
!5044 = !DILocation(line: 1891, column: 9, scope: !4965)
!5045 = !DILocation(line: 1893, column: 12, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1893, column: 10)
!5047 = !DILocation(line: 1893, column: 15, scope: !5046)
!5048 = !DILocation(line: 1893, column: 22, scope: !5046)
!5049 = !DILocation(line: 1893, column: 10, scope: !4965)
!5050 = !DILocation(line: 1895, column: 34, scope: !5046)
!5051 = !DILocation(line: 1895, column: 40, scope: !5046)
!5052 = !DILocation(line: 1895, column: 9, scope: !5046)
!5053 = !DILocation(line: 1897, column: 12, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1897, column: 10)
!5055 = !DILocation(line: 1897, column: 15, scope: !5054)
!5056 = !DILocation(line: 1897, column: 22, scope: !5054)
!5057 = !DILocation(line: 1897, column: 10, scope: !4965)
!5058 = !DILocation(line: 1899, column: 35, scope: !5054)
!5059 = !DILocation(line: 1899, column: 41, scope: !5054)
!5060 = !DILocation(line: 1899, column: 9, scope: !5054)
!5061 = !DILocation(line: 1901, column: 10, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1901, column: 10)
!5063 = !DILocation(line: 1901, column: 15, scope: !5062)
!5064 = !DILocation(line: 1901, column: 19, scope: !5065)
!5065 = !DILexicalBlockFile(scope: !5062, file: !1, discriminator: 1)
!5066 = !DILocation(line: 1901, column: 26, scope: !5065)
!5067 = !DILocation(line: 1901, column: 10, scope: !5065)
!5068 = !DILocalVariable(name: "ret", scope: !5069, file: !1, line: 1906, type: !289)
!5069 = distinct !DILexicalBlock(scope: !5062, file: !1, line: 1901, column: 48)
!5070 = !DILocation(line: 1906, column: 18, scope: !5069)
!5071 = !DILocation(line: 1906, column: 43, scope: !5069)
!5072 = !DILocation(line: 1906, column: 49, scope: !5069)
!5073 = !DILocation(line: 1906, column: 24, scope: !5069)
!5074 = !DILocation(line: 1907, column: 13, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5069, file: !1, line: 1907, column: 12)
!5076 = !DILocation(line: 1907, column: 12, scope: !5069)
!5077 = !DILocation(line: 1908, column: 20, scope: !5075)
!5078 = !DILocation(line: 1908, column: 19, scope: !5075)
!5079 = !DILocation(line: 1908, column: 17, scope: !5075)
!5080 = !DILocation(line: 1908, column: 11, scope: !5075)
!5081 = !DILocation(line: 1910, column: 12, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5069, file: !1, line: 1910, column: 12)
!5083 = !DILocation(line: 1910, column: 12, scope: !5069)
!5084 = !DILocation(line: 1913, column: 18, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5082, file: !1, line: 1910, column: 19)
!5086 = !DILocation(line: 1914, column: 16, scope: !5085)
!5087 = !DILocation(line: 1915, column: 9, scope: !5085)
!5088 = !DILocation(line: 1916, column: 7, scope: !5069)
!5089 = !DILocation(line: 1918, column: 10, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1918, column: 10)
!5091 = !DILocation(line: 1918, column: 10, scope: !4965)
!5092 = !DILocation(line: 1927, column: 14, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !1, line: 1927, column: 12)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !1, line: 1918, column: 18)
!5095 = !DILocation(line: 1927, column: 20, scope: !5093)
!5096 = !DILocation(line: 1927, column: 31, scope: !5093)
!5097 = !DILocation(line: 1927, column: 40, scope: !5093)
!5098 = !DILocation(line: 1927, column: 46, scope: !5093)
!5099 = !DILocation(line: 1927, column: 62, scope: !5093)
!5100 = !DILocation(line: 1928, column: 12, scope: !5093)
!5101 = !DILocation(line: 1928, column: 19, scope: !5093)
!5102 = !DILocation(line: 1927, column: 12, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5094, file: !1, discriminator: 1)
!5104 = !DILocation(line: 1929, column: 11, scope: !5093)
!5105 = !DILocation(line: 1931, column: 27, scope: !5094)
!5106 = !DILocation(line: 1931, column: 9, scope: !5094)
!5107 = !DILocation(line: 1932, column: 21, scope: !5094)
!5108 = !DILocation(line: 1932, column: 27, scope: !5094)
!5109 = !DILocation(line: 1932, column: 38, scope: !5094)
!5110 = !DILocation(line: 1932, column: 9, scope: !5094)
!5111 = !DILocation(line: 1933, column: 7, scope: !5094)
!5112 = !DILocation(line: 1934, column: 15, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5090, file: !1, line: 1934, column: 15)
!5114 = !DILocation(line: 1934, column: 15, scope: !5090)
!5115 = !DILocalVariable(name: "follow", scope: !5116, file: !1, line: 1935, type: !4719)
!5116 = distinct !DILexicalBlock(scope: !5113, file: !1, line: 1934, column: 21)
!5117 = !DILocation(line: 1935, column: 20, scope: !5116)
!5118 = !DILocation(line: 1938, column: 27, scope: !5116)
!5119 = !DILocation(line: 1938, column: 9, scope: !5116)
!5120 = !DILocation(line: 1941, column: 39, scope: !5116)
!5121 = !DILocation(line: 1941, column: 46, scope: !5116)
!5122 = !DILocation(line: 1941, column: 52, scope: !5116)
!5123 = !DILocation(line: 1941, column: 63, scope: !5116)
!5124 = !DILocation(line: 1941, column: 9, scope: !5116)
!5125 = !DILocation(line: 1944, column: 12, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5116, file: !1, line: 1944, column: 12)
!5127 = !DILocation(line: 1944, column: 18, scope: !5126)
!5128 = !DILocation(line: 1944, column: 29, scope: !5126)
!5129 = !DILocation(line: 1944, column: 39, scope: !5126)
!5130 = !DILocation(line: 1944, column: 12, scope: !5116)
!5131 = !DILocation(line: 1945, column: 30, scope: !5126)
!5132 = !DILocation(line: 1945, column: 36, scope: !5126)
!5133 = !DILocation(line: 1945, column: 47, scope: !5126)
!5134 = !DILocation(line: 1945, column: 57, scope: !5126)
!5135 = !DILocation(line: 1945, column: 63, scope: !5126)
!5136 = !DILocation(line: 1945, column: 11, scope: !5126)
!5137 = !DILocation(line: 1948, column: 44, scope: !5116)
!5138 = !DILocation(line: 1948, column: 9, scope: !5116)
!5139 = !DILocation(line: 1952, column: 12, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5116, file: !1, line: 1952, column: 12)
!5141 = !DILocation(line: 1952, column: 18, scope: !5140)
!5142 = !DILocation(line: 1952, column: 22, scope: !5140)
!5143 = !DILocation(line: 1952, column: 29, scope: !5140)
!5144 = !DILocation(line: 1952, column: 32, scope: !5145)
!5145 = !DILexicalBlockFile(scope: !5140, file: !1, discriminator: 1)
!5146 = !DILocation(line: 1952, column: 12, scope: !5145)
!5147 = !DILocation(line: 1953, column: 15, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !1, line: 1953, column: 14)
!5149 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1952, column: 39)
!5150 = !DILocation(line: 1953, column: 14, scope: !5149)
!5151 = !DILocation(line: 1956, column: 13, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5148, file: !1, line: 1953, column: 22)
!5153 = !DILocation(line: 1957, column: 22, scope: !5152)
!5154 = !DILocation(line: 1957, column: 28, scope: !5152)
!5155 = !DILocation(line: 1957, column: 32, scope: !5152)
!5156 = !DILocation(line: 1957, column: 20, scope: !5152)
!5157 = !DILocation(line: 1958, column: 13, scope: !5152)
!5158 = !DILocation(line: 1958, column: 19, scope: !5152)
!5159 = !DILocation(line: 1958, column: 23, scope: !5152)
!5160 = !DILocation(line: 1958, column: 30, scope: !5152)
!5161 = !DILocation(line: 1959, column: 20, scope: !5152)
!5162 = !DILocation(line: 1960, column: 11, scope: !5152)
!5163 = !DILocation(line: 1962, column: 20, scope: !5148)
!5164 = !DILocation(line: 1963, column: 32, scope: !5149)
!5165 = !DILocation(line: 1963, column: 38, scope: !5149)
!5166 = !DILocation(line: 1963, column: 20, scope: !5149)
!5167 = !DILocation(line: 1963, column: 18, scope: !5149)
!5168 = !DILocation(line: 1964, column: 15, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5149, file: !1, line: 1964, column: 14)
!5170 = !DILocation(line: 1964, column: 14, scope: !5149)
!5171 = !DILocation(line: 1965, column: 34, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 1964, column: 23)
!5173 = !DILocation(line: 1965, column: 40, scope: !5172)
!5174 = !DILocation(line: 1965, column: 48, scope: !5172)
!5175 = !DILocation(line: 1965, column: 22, scope: !5172)
!5176 = !DILocation(line: 1965, column: 20, scope: !5172)
!5177 = !DILocation(line: 1966, column: 17, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 1966, column: 16)
!5179 = !DILocation(line: 1966, column: 16, scope: !5172)
!5180 = !DILocation(line: 1967, column: 15, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5178, file: !1, line: 1966, column: 25)
!5182 = !DILocation(line: 1968, column: 18, scope: !5181)
!5183 = !DILocation(line: 1969, column: 22, scope: !5181)
!5184 = !DILocation(line: 1972, column: 13, scope: !5181)
!5185 = !DILocation(line: 1973, column: 11, scope: !5172)
!5186 = !DILocation(line: 1974, column: 9, scope: !5149)
!5187 = !DILocation(line: 1980, column: 14, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !1, line: 1980, column: 14)
!5189 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1975, column: 14)
!5190 = !DILocation(line: 1980, column: 20, scope: !5188)
!5191 = !DILocation(line: 1980, column: 24, scope: !5188)
!5192 = !DILocation(line: 1980, column: 14, scope: !5189)
!5193 = !DILocation(line: 1981, column: 13, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5188, file: !1, line: 1980, column: 34)
!5195 = !DILocation(line: 1982, column: 22, scope: !5194)
!5196 = !DILocation(line: 1982, column: 28, scope: !5194)
!5197 = !DILocation(line: 1982, column: 32, scope: !5194)
!5198 = !DILocation(line: 1982, column: 20, scope: !5194)
!5199 = !DILocation(line: 1983, column: 13, scope: !5194)
!5200 = !DILocation(line: 1983, column: 19, scope: !5194)
!5201 = !DILocation(line: 1983, column: 23, scope: !5194)
!5202 = !DILocation(line: 1983, column: 32, scope: !5194)
!5203 = !DILocation(line: 1984, column: 34, scope: !5194)
!5204 = !DILocation(line: 1984, column: 40, scope: !5194)
!5205 = !DILocation(line: 1984, column: 22, scope: !5194)
!5206 = !DILocation(line: 1984, column: 20, scope: !5194)
!5207 = !DILocation(line: 1985, column: 17, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5194, file: !1, line: 1985, column: 16)
!5209 = !DILocation(line: 1985, column: 16, scope: !5194)
!5210 = !DILocation(line: 1986, column: 22, scope: !5208)
!5211 = !DILocation(line: 1986, column: 15, scope: !5208)
!5212 = !DILocation(line: 1988, column: 28, scope: !5208)
!5213 = !DILocation(line: 1989, column: 11, scope: !5194)
!5214 = !DILocation(line: 1991, column: 11, scope: !5189)
!5215 = !DILocation(line: 1992, column: 14, scope: !5189)
!5216 = !DILocation(line: 1994, column: 7, scope: !5116)
!5217 = !DILocation(line: 1995, column: 15, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5113, file: !1, line: 1995, column: 15)
!5219 = !DILocation(line: 1995, column: 15, scope: !5113)
!5220 = !DILocation(line: 1996, column: 12, scope: !5218)
!5221 = !DILocation(line: 1996, column: 9, scope: !5218)
!5222 = !DILocation(line: 1998, column: 7, scope: !4965)
!5223 = !DILocation(line: 1999, column: 7, scope: !4965)
!5224 = !DILocation(line: 2004, column: 10, scope: !4305)
!5225 = !DILocation(line: 2006, column: 10, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 2006, column: 10)
!5227 = !DILocation(line: 2006, column: 16, scope: !5226)
!5228 = !DILocation(line: 2006, column: 10, scope: !4305)
!5229 = !DILocalVariable(name: "res", scope: !5230, file: !1, line: 2007, type: !289)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 2006, column: 27)
!5231 = !DILocation(line: 2007, column: 18, scope: !5230)
!5232 = !DILocation(line: 2010, column: 39, scope: !5230)
!5233 = !DILocation(line: 2010, column: 46, scope: !5230)
!5234 = !DILocation(line: 2010, column: 52, scope: !5230)
!5235 = !DILocation(line: 2010, column: 63, scope: !5230)
!5236 = !DILocation(line: 2010, column: 9, scope: !5230)
!5237 = !DILocation(line: 2012, column: 44, scope: !5230)
!5238 = !DILocation(line: 2012, column: 9, scope: !5230)
!5239 = !DILocation(line: 2015, column: 27, scope: !5230)
!5240 = !DILocation(line: 2015, column: 33, scope: !5230)
!5241 = !DILocation(line: 2015, column: 44, scope: !5230)
!5242 = !DILocation(line: 2015, column: 15, scope: !5230)
!5243 = !DILocation(line: 2015, column: 13, scope: !5230)
!5244 = !DILocation(line: 2018, column: 13, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 2018, column: 12)
!5246 = !DILocation(line: 2018, column: 12, scope: !5230)
!5247 = !DILocation(line: 2019, column: 20, scope: !5245)
!5248 = !DILocation(line: 2019, column: 18, scope: !5245)
!5249 = !DILocation(line: 2019, column: 11, scope: !5245)
!5250 = !DILocation(line: 2027, column: 12, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 2027, column: 12)
!5252 = !DILocation(line: 2027, column: 18, scope: !5251)
!5253 = !DILocation(line: 2027, column: 12, scope: !5230)
!5254 = !DILocation(line: 2028, column: 11, scope: !5251)
!5255 = !DILocation(line: 2028, column: 17, scope: !5251)
!5256 = !DILocation(line: 2028, column: 27, scope: !5251)
!5257 = !DILocation(line: 2029, column: 7, scope: !5230)
!5258 = !DILocation(line: 2031, column: 10, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 2031, column: 10)
!5260 = !DILocation(line: 2031, column: 16, scope: !5259)
!5261 = !DILocation(line: 2031, column: 20, scope: !5259)
!5262 = !DILocation(line: 2031, column: 10, scope: !4305)
!5263 = !DILocation(line: 2032, column: 12, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !1, line: 2032, column: 12)
!5265 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 2031, column: 35)
!5266 = !DILocation(line: 2032, column: 18, scope: !5264)
!5267 = !DILocation(line: 2032, column: 27, scope: !5264)
!5268 = !DILocation(line: 2032, column: 33, scope: !5264)
!5269 = !DILocation(line: 2032, column: 12, scope: !5265)
!5270 = !DILocation(line: 2035, column: 11, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5264, file: !1, line: 2032, column: 49)
!5272 = !DILocation(line: 2036, column: 11, scope: !5271)
!5273 = !DILocation(line: 2038, column: 7, scope: !5265)
!5274 = !DILocation(line: 2042, column: 7, scope: !4305)
!5275 = !DILocation(line: 2043, column: 7, scope: !4305)
!5276 = !DILocation(line: 2053, column: 7, scope: !4305)
!5277 = !DILocation(line: 2053, column: 13, scope: !4305)
!5278 = !DILocation(line: 2053, column: 23, scope: !4305)
!5279 = !DILocation(line: 2055, column: 25, scope: !4305)
!5280 = !DILocation(line: 2055, column: 7, scope: !4305)
!5281 = !DILocation(line: 2056, column: 7, scope: !4305)
!5282 = !DILocation(line: 2059, column: 22, scope: !4305)
!5283 = !DILocation(line: 2059, column: 7, scope: !4305)
!5284 = !DILocation(line: 2059, column: 13, scope: !4305)
!5285 = !DILocation(line: 2059, column: 20, scope: !4305)
!5286 = !DILocation(line: 2060, column: 7, scope: !4305)
!5287 = !DILocation(line: 2063, column: 7, scope: !4305)
!5288 = !DILocation(line: 2064, column: 5, scope: !4305)
!5289 = !DILocation(line: 2067, column: 8, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 2067, column: 8)
!5291 = !DILocation(line: 2067, column: 14, scope: !5290)
!5292 = !DILocation(line: 2067, column: 21, scope: !5290)
!5293 = !DILocation(line: 2067, column: 8, scope: !4136)
!5294 = !DILocation(line: 2068, column: 10, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !1, line: 2068, column: 10)
!5296 = distinct !DILexicalBlock(scope: !5290, file: !1, line: 2067, column: 46)
!5297 = !DILocation(line: 2068, column: 10, scope: !5296)
!5298 = !DILocation(line: 2077, column: 9, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !1, line: 2068, column: 18)
!5300 = !DILocation(line: 2077, column: 15, scope: !5299)
!5301 = !DILocation(line: 2077, column: 21, scope: !5299)
!5302 = !DILocation(line: 2077, column: 32, scope: !5299)
!5303 = !DILocation(line: 2080, column: 44, scope: !5299)
!5304 = !DILocation(line: 2080, column: 9, scope: !5299)
!5305 = !DILocation(line: 2082, column: 12, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2082, column: 12)
!5307 = !DILocation(line: 2082, column: 18, scope: !5306)
!5308 = !DILocation(line: 2082, column: 12, scope: !5299)
!5309 = !DILocation(line: 2084, column: 37, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 2082, column: 29)
!5311 = !DILocation(line: 2084, column: 43, scope: !5310)
!5312 = !DILocation(line: 2084, column: 11, scope: !5310)
!5313 = !DILocation(line: 2085, column: 36, scope: !5310)
!5314 = !DILocation(line: 2085, column: 42, scope: !5310)
!5315 = !DILocation(line: 2085, column: 11, scope: !5310)
!5316 = !DILocation(line: 2086, column: 41, scope: !5310)
!5317 = !DILocation(line: 2086, column: 48, scope: !5310)
!5318 = !DILocation(line: 2086, column: 54, scope: !5310)
!5319 = !DILocation(line: 2086, column: 65, scope: !5310)
!5320 = !DILocation(line: 2086, column: 11, scope: !5310)
!5321 = !DILocation(line: 2087, column: 41, scope: !5310)
!5322 = !DILocation(line: 2087, column: 48, scope: !5310)
!5323 = !DILocation(line: 2087, column: 54, scope: !5310)
!5324 = !DILocation(line: 2087, column: 65, scope: !5310)
!5325 = !DILocation(line: 2087, column: 11, scope: !5310)
!5326 = !DILocation(line: 2089, column: 14, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 2089, column: 14)
!5328 = !DILocation(line: 2089, column: 14, scope: !5310)
!5329 = !DILocalVariable(name: "dead_connection", scope: !5330, file: !1, line: 2091, type: !423)
!5330 = distinct !DILexicalBlock(scope: !5327, file: !1, line: 2089, column: 28)
!5331 = !DILocation(line: 2091, column: 18, scope: !5330)
!5332 = !DILocation(line: 2091, column: 36, scope: !5330)
!5333 = !DILocation(line: 2091, column: 43, scope: !5330)
!5334 = !DILocation(line: 2093, column: 29, scope: !5330)
!5335 = !DILocation(line: 2093, column: 35, scope: !5330)
!5336 = !DILocation(line: 2093, column: 46, scope: !5330)
!5337 = !DILocation(line: 2093, column: 13, scope: !5330)
!5338 = !DILocation(line: 2098, column: 13, scope: !5330)
!5339 = !DILocation(line: 2098, column: 19, scope: !5330)
!5340 = !DILocation(line: 2098, column: 29, scope: !5330)
!5341 = !DILocation(line: 2099, column: 11, scope: !5330)
!5342 = !DILocation(line: 2100, column: 9, scope: !5310)
!5343 = !DILocation(line: 2101, column: 17, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 2101, column: 17)
!5345 = !DILocation(line: 2101, column: 23, scope: !5344)
!5346 = !DILocation(line: 2101, column: 30, scope: !5344)
!5347 = !DILocation(line: 2101, column: 17, scope: !5306)
!5348 = !DILocation(line: 2103, column: 35, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5344, file: !1, line: 2101, column: 54)
!5350 = !DILocation(line: 2103, column: 17, scope: !5349)
!5351 = !DILocation(line: 2104, column: 9, scope: !5349)
!5352 = !DILocation(line: 2106, column: 9, scope: !5299)
!5353 = !DILocation(line: 2107, column: 7, scope: !5299)
!5354 = !DILocation(line: 2109, column: 15, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5295, file: !1, line: 2109, column: 15)
!5356 = !DILocation(line: 2109, column: 21, scope: !5355)
!5357 = !DILocation(line: 2109, column: 31, scope: !5355)
!5358 = !DILocation(line: 2109, column: 50, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5355, file: !1, discriminator: 1)
!5360 = !DILocation(line: 2109, column: 56, scope: !5359)
!5361 = !DILocation(line: 2109, column: 34, scope: !5359)
!5362 = !DILocation(line: 2109, column: 15, scope: !5359)
!5363 = !DILocation(line: 2112, column: 16, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5355, file: !1, line: 2109, column: 68)
!5365 = !DILocation(line: 2113, column: 9, scope: !5364)
!5366 = !DILocation(line: 2116, column: 9, scope: !5364)
!5367 = !DILocation(line: 2118, column: 12, scope: !5364)
!5368 = !DILocation(line: 2119, column: 7, scope: !5364)
!5369 = !DILocation(line: 2120, column: 5, scope: !5296)
!5370 = !DILocation(line: 2122, column: 33, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 2122, column: 8)
!5372 = !DILocation(line: 2122, column: 39, scope: !5371)
!5373 = !DILocation(line: 2122, column: 30, scope: !5371)
!5374 = !DILocation(line: 2122, column: 8, scope: !4136)
!5375 = !DILocation(line: 2124, column: 14, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !1, line: 2122, column: 47)
!5377 = !DILocation(line: 2124, column: 20, scope: !5376)
!5378 = !DILocation(line: 2124, column: 11, scope: !5376)
!5379 = !DILocation(line: 2126, column: 7, scope: !5376)
!5380 = !DILocation(line: 2126, column: 12, scope: !5376)
!5381 = !DILocation(line: 2126, column: 19, scope: !5376)
!5382 = !DILocation(line: 2126, column: 23, scope: !5376)
!5383 = !DILocation(line: 2127, column: 33, scope: !5376)
!5384 = !DILocation(line: 2127, column: 7, scope: !5376)
!5385 = !DILocation(line: 2127, column: 12, scope: !5376)
!5386 = !DILocation(line: 2127, column: 19, scope: !5376)
!5387 = !DILocation(line: 2127, column: 31, scope: !5376)
!5388 = !DILocation(line: 2128, column: 33, scope: !5376)
!5389 = !DILocation(line: 2128, column: 7, scope: !5376)
!5390 = !DILocation(line: 2128, column: 12, scope: !5376)
!5391 = !DILocation(line: 2128, column: 19, scope: !5376)
!5392 = !DILocation(line: 2128, column: 24, scope: !5376)
!5393 = !DILocation(line: 2128, column: 31, scope: !5376)
!5394 = !DILocation(line: 2130, column: 25, scope: !5376)
!5395 = !DILocation(line: 2130, column: 32, scope: !5376)
!5396 = !DILocation(line: 2130, column: 12, scope: !5376)
!5397 = !DILocation(line: 2130, column: 10, scope: !5376)
!5398 = !DILocation(line: 2132, column: 7, scope: !5376)
!5399 = !DILocation(line: 2133, column: 5, scope: !5376)
!5400 = !DILocation(line: 2134, column: 3, scope: !4136)
!5401 = !DILocation(line: 2134, column: 12, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !1901, file: !1, discriminator: 1)
!5403 = !DILocation(line: 2134, column: 15, scope: !5402)
!5404 = !DILocation(line: 2134, column: 44, scope: !5402)
!5405 = !DILocation(line: 2134, column: 63, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !1901, file: !1, discriminator: 2)
!5407 = !DILocation(line: 2134, column: 47, scope: !5406)
!5408 = !DILocation(line: 2134, column: 44, scope: !5406)
!5409 = !DILocation(line: 2134, column: 3, scope: !5410)
!5410 = !DILexicalBlockFile(scope: !4136, file: !1, discriminator: 3)
!5411 = !DILocation(line: 2136, column: 18, scope: !1901)
!5412 = !DILocation(line: 2136, column: 3, scope: !1901)
!5413 = !DILocation(line: 2136, column: 9, scope: !1901)
!5414 = !DILocation(line: 2136, column: 16, scope: !1901)
!5415 = !DILocation(line: 2139, column: 10, scope: !1901)
!5416 = !DILocation(line: 2139, column: 3, scope: !1901)
!5417 = !DILocation(line: 2140, column: 1, scope: !1901)
!5418 = !DILocalVariable(name: "now", arg: 1, scope: !1934, file: !1, line: 2500, type: !411)
!5419 = !DILocation(line: 2500, column: 50, scope: !1934)
!5420 = !DILocalVariable(name: "multi", arg: 2, scope: !1934, file: !1, line: 2501, type: !375)
!5421 = !DILocation(line: 2501, column: 54, scope: !1934)
!5422 = !DILocalVariable(name: "d", arg: 3, scope: !1934, file: !1, line: 2502, type: !256)
!5423 = !DILocation(line: 2502, column: 53, scope: !1934)
!5424 = !DILocalVariable(name: "tv", scope: !1934, file: !1, line: 2504, type: !1779)
!5425 = !DILocation(line: 2504, column: 19, scope: !1934)
!5426 = !DILocation(line: 2504, column: 25, scope: !1934)
!5427 = !DILocation(line: 2504, column: 28, scope: !1934)
!5428 = !DILocation(line: 2504, column: 34, scope: !1934)
!5429 = !DILocalVariable(name: "list", scope: !1934, file: !1, line: 2505, type: !329)
!5430 = !DILocation(line: 2505, column: 22, scope: !1934)
!5431 = !DILocation(line: 2505, column: 30, scope: !1934)
!5432 = !DILocation(line: 2505, column: 33, scope: !1934)
!5433 = !DILocation(line: 2505, column: 39, scope: !1934)
!5434 = !DILocalVariable(name: "e", scope: !1934, file: !1, line: 2506, type: !334)
!5435 = !DILocation(line: 2506, column: 30, scope: !1934)
!5436 = !DILocation(line: 2511, column: 11, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !1934, file: !1, line: 2511, column: 3)
!5438 = !DILocation(line: 2511, column: 17, scope: !5437)
!5439 = !DILocation(line: 2511, column: 9, scope: !5437)
!5440 = !DILocation(line: 2511, column: 7, scope: !5437)
!5441 = !DILocation(line: 2511, column: 23, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5443, file: !1, discriminator: 1)
!5443 = distinct !DILexicalBlock(scope: !5437, file: !1, line: 2511, column: 3)
!5444 = !DILocation(line: 2511, column: 3, scope: !5442)
!5445 = !DILocalVariable(name: "n", scope: !5446, file: !1, line: 2512, type: !334)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !1, line: 2511, column: 27)
!5447 = !DILocation(line: 2512, column: 32, scope: !5446)
!5448 = !DILocation(line: 2512, column: 36, scope: !5446)
!5449 = !DILocation(line: 2512, column: 39, scope: !5446)
!5450 = !DILocalVariable(name: "diff", scope: !5446, file: !1, line: 2513, type: !599)
!5451 = !DILocation(line: 2513, column: 12, scope: !5446)
!5452 = !DILocation(line: 2513, column: 51, scope: !5446)
!5453 = !DILocation(line: 2513, column: 54, scope: !5446)
!5454 = !DILocation(line: 2513, column: 33, scope: !5446)
!5455 = !DILocation(line: 2513, column: 19, scope: !5446)
!5456 = !DILocation(line: 2514, column: 8, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5446, file: !1, line: 2514, column: 8)
!5458 = !DILocation(line: 2514, column: 13, scope: !5457)
!5459 = !DILocation(line: 2514, column: 8, scope: !5446)
!5460 = !DILocation(line: 2516, column: 25, scope: !5457)
!5461 = !DILocation(line: 2516, column: 31, scope: !5457)
!5462 = !DILocation(line: 2516, column: 7, scope: !5457)
!5463 = !DILocation(line: 2519, column: 7, scope: !5457)
!5464 = !DILocation(line: 2520, column: 9, scope: !5446)
!5465 = !DILocation(line: 2520, column: 7, scope: !5446)
!5466 = !DILocation(line: 2511, column: 3, scope: !5467)
!5467 = !DILexicalBlockFile(scope: !5443, file: !1, discriminator: 2)
!5468 = !DILocation(line: 2522, column: 7, scope: !1934)
!5469 = !DILocation(line: 2522, column: 13, scope: !1934)
!5470 = !DILocation(line: 2522, column: 5, scope: !1934)
!5471 = !DILocation(line: 2523, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !1934, file: !1, line: 2523, column: 6)
!5473 = !DILocation(line: 2523, column: 6, scope: !1934)
!5474 = !DILocation(line: 2526, column: 5, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 2523, column: 10)
!5476 = !DILocation(line: 2526, column: 9, scope: !5475)
!5477 = !DILocation(line: 2526, column: 16, scope: !5475)
!5478 = !DILocation(line: 2527, column: 5, scope: !5475)
!5479 = !DILocation(line: 2527, column: 9, scope: !5475)
!5480 = !DILocation(line: 2527, column: 17, scope: !5475)
!5481 = !DILocation(line: 2528, column: 3, scope: !5475)
!5482 = !DILocation(line: 2531, column: 12, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 2529, column: 8)
!5484 = !DILocation(line: 2531, column: 5, scope: !5483)
!5485 = !DILocation(line: 2531, column: 16, scope: !5483)
!5486 = !DILocation(line: 2531, column: 19, scope: !5483)
!5487 = !DILocation(line: 2534, column: 23, scope: !5483)
!5488 = !DILocation(line: 2534, column: 29, scope: !5483)
!5489 = !DILocation(line: 2534, column: 5, scope: !5483)
!5490 = !DILocation(line: 2537, column: 41, scope: !5483)
!5491 = !DILocation(line: 2537, column: 45, scope: !5483)
!5492 = !DILocation(line: 2537, column: 52, scope: !5483)
!5493 = !DILocation(line: 2538, column: 41, scope: !5483)
!5494 = !DILocation(line: 2538, column: 44, scope: !5483)
!5495 = !DILocation(line: 2538, column: 50, scope: !5483)
!5496 = !DILocation(line: 2537, column: 23, scope: !5483)
!5497 = !DILocation(line: 2537, column: 5, scope: !5483)
!5498 = !DILocation(line: 2537, column: 12, scope: !5483)
!5499 = !DILocation(line: 2537, column: 21, scope: !5483)
!5500 = !DILocation(line: 2540, column: 3, scope: !1934)
!5501 = !DILocalVariable(name: "multi", arg: 1, scope: !1831, file: !1, line: 2215, type: !375)
!5502 = !DILocation(line: 2215, column: 49, scope: !1831)
!5503 = !DILocalVariable(name: "data", scope: !1831, file: !1, line: 2217, type: !256)
!5504 = !DILocation(line: 2217, column: 21, scope: !1831)
!5505 = !DILocalVariable(name: "nextdata", scope: !1831, file: !1, line: 2218, type: !256)
!5506 = !DILocation(line: 2218, column: 21, scope: !1831)
!5507 = !DILocation(line: 2220, column: 6, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !1831, file: !1, line: 2220, column: 6)
!5509 = !DILocation(line: 2220, column: 6, scope: !5510)
!5510 = !DILexicalBlockFile(scope: !5508, file: !1, discriminator: 1)
!5511 = !DILocalVariable(name: "restore_pipe", scope: !5512, file: !1, line: 2221, type: !423)
!5512 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 2220, column: 32)
!5513 = !DILocation(line: 2221, column: 10, scope: !5512)
!5514 = !DILocation(line: 2224, column: 5, scope: !5512)
!5515 = !DILocation(line: 2224, column: 12, scope: !5512)
!5516 = !DILocation(line: 2224, column: 17, scope: !5512)
!5517 = !DILocation(line: 2227, column: 27, scope: !5512)
!5518 = !DILocation(line: 2227, column: 5, scope: !5512)
!5519 = !DILocation(line: 2229, column: 8, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5512, file: !1, line: 2229, column: 8)
!5521 = !DILocation(line: 2229, column: 15, scope: !5520)
!5522 = !DILocation(line: 2229, column: 8, scope: !5512)
!5523 = !DILocation(line: 2230, column: 7, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !1, line: 2229, column: 31)
!5525 = !DILocation(line: 2230, column: 7, scope: !5526)
!5526 = !DILexicalBlockFile(scope: !5527, file: !1, discriminator: 1)
!5527 = distinct !DILexicalBlock(scope: !5524, file: !1, line: 2230, column: 7)
!5528 = !DILocation(line: 2231, column: 20, scope: !5524)
!5529 = !DILocation(line: 2233, column: 47, scope: !5524)
!5530 = !DILocation(line: 2233, column: 54, scope: !5524)
!5531 = !DILocation(line: 2233, column: 7, scope: !5524)
!5532 = !DILocation(line: 2233, column: 14, scope: !5524)
!5533 = !DILocation(line: 2233, column: 30, scope: !5524)
!5534 = !DILocation(line: 2233, column: 34, scope: !5524)
!5535 = !DILocation(line: 2233, column: 44, scope: !5524)
!5536 = !DILocation(line: 2234, column: 28, scope: !5524)
!5537 = !DILocation(line: 2234, column: 35, scope: !5524)
!5538 = !DILocation(line: 2235, column: 28, scope: !5524)
!5539 = !DILocation(line: 2235, column: 35, scope: !5524)
!5540 = !DILocation(line: 2235, column: 51, scope: !5524)
!5541 = !DILocation(line: 2235, column: 55, scope: !5524)
!5542 = !DILocation(line: 2234, column: 7, scope: !5524)
!5543 = !DILocation(line: 2237, column: 18, scope: !5524)
!5544 = !DILocation(line: 2237, column: 25, scope: !5524)
!5545 = !DILocation(line: 2237, column: 7, scope: !5524)
!5546 = !DILocation(line: 2238, column: 5, scope: !5524)
!5547 = !DILocation(line: 2240, column: 24, scope: !5512)
!5548 = !DILocation(line: 2240, column: 31, scope: !5512)
!5549 = !DILocation(line: 2240, column: 5, scope: !5512)
!5550 = !DILocation(line: 2241, column: 29, scope: !5512)
!5551 = !DILocation(line: 2241, column: 36, scope: !5512)
!5552 = !DILocation(line: 2241, column: 5, scope: !5512)
!5553 = !DILocation(line: 2242, column: 25, scope: !5512)
!5554 = !DILocation(line: 2242, column: 32, scope: !5512)
!5555 = !DILocation(line: 2242, column: 5, scope: !5512)
!5556 = !DILocation(line: 2243, column: 25, scope: !5512)
!5557 = !DILocation(line: 2243, column: 32, scope: !5512)
!5558 = !DILocation(line: 2243, column: 5, scope: !5512)
!5559 = !DILocation(line: 2246, column: 12, scope: !5512)
!5560 = !DILocation(line: 2246, column: 19, scope: !5512)
!5561 = !DILocation(line: 2246, column: 10, scope: !5512)
!5562 = !DILocation(line: 2247, column: 5, scope: !5512)
!5563 = !DILocation(line: 2247, column: 11, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5512, file: !1, discriminator: 1)
!5565 = !DILocation(line: 2247, column: 5, scope: !5564)
!5566 = !DILocation(line: 2248, column: 16, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5512, file: !1, line: 2247, column: 17)
!5568 = !DILocation(line: 2248, column: 22, scope: !5567)
!5569 = !DILocation(line: 2248, column: 15, scope: !5567)
!5570 = !DILocation(line: 2249, column: 10, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !1, line: 2249, column: 10)
!5572 = !DILocation(line: 2249, column: 16, scope: !5571)
!5573 = !DILocation(line: 2249, column: 20, scope: !5571)
!5574 = !DILocation(line: 2249, column: 34, scope: !5571)
!5575 = !DILocation(line: 2249, column: 10, scope: !5567)
!5576 = !DILocation(line: 2251, column: 30, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5571, file: !1, line: 2249, column: 51)
!5578 = !DILocation(line: 2251, column: 36, scope: !5577)
!5579 = !DILocation(line: 2251, column: 42, scope: !5577)
!5580 = !DILocation(line: 2251, column: 46, scope: !5577)
!5581 = !DILocation(line: 2251, column: 9, scope: !5577)
!5582 = !DILocation(line: 2252, column: 9, scope: !5577)
!5583 = !DILocation(line: 2252, column: 15, scope: !5577)
!5584 = !DILocation(line: 2252, column: 19, scope: !5577)
!5585 = !DILocation(line: 2252, column: 29, scope: !5577)
!5586 = !DILocation(line: 2253, column: 9, scope: !5577)
!5587 = !DILocation(line: 2253, column: 15, scope: !5577)
!5588 = !DILocation(line: 2253, column: 19, scope: !5577)
!5589 = !DILocation(line: 2253, column: 33, scope: !5577)
!5590 = !DILocation(line: 2254, column: 7, scope: !5577)
!5591 = !DILocation(line: 2257, column: 7, scope: !5567)
!5592 = !DILocation(line: 2257, column: 13, scope: !5567)
!5593 = !DILocation(line: 2257, column: 19, scope: !5567)
!5594 = !DILocation(line: 2257, column: 30, scope: !5567)
!5595 = !DILocation(line: 2258, column: 7, scope: !5567)
!5596 = !DILocation(line: 2258, column: 13, scope: !5567)
!5597 = !DILocation(line: 2258, column: 19, scope: !5567)
!5598 = !DILocation(line: 2260, column: 14, scope: !5567)
!5599 = !DILocation(line: 2260, column: 12, scope: !5567)
!5600 = !DILocation(line: 2247, column: 5, scope: !5601)
!5601 = !DILexicalBlockFile(scope: !5512, file: !1, discriminator: 2)
!5602 = !DILocation(line: 2263, column: 24, scope: !5512)
!5603 = !DILocation(line: 2263, column: 31, scope: !5512)
!5604 = !DILocation(line: 2263, column: 5, scope: !5512)
!5605 = !DILocation(line: 2266, column: 45, scope: !5512)
!5606 = !DILocation(line: 2266, column: 52, scope: !5512)
!5607 = !DILocation(line: 2266, column: 5, scope: !5512)
!5608 = !DILocation(line: 2267, column: 47, scope: !5512)
!5609 = !DILocation(line: 2267, column: 54, scope: !5512)
!5610 = !DILocation(line: 2267, column: 5, scope: !5512)
!5611 = !DILocation(line: 2269, column: 5, scope: !5512)
!5612 = !DILocation(line: 2270, column: 8, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5512, file: !1, line: 2270, column: 8)
!5614 = !DILocation(line: 2270, column: 8, scope: !5512)
!5615 = !DILocation(line: 2271, column: 7, scope: !5613)
!5616 = !DILocation(line: 2271, column: 7, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5618, file: !1, discriminator: 1)
!5618 = distinct !DILexicalBlock(scope: !5613, file: !1, line: 2271, column: 7)
!5619 = !DILocation(line: 2271, column: 7, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5618, file: !1, discriminator: 2)
!5621 = !DILocation(line: 2273, column: 5, scope: !5512)
!5622 = !DILocation(line: 2275, column: 3, scope: !1831)
!5623 = !DILocation(line: 2276, column: 1, scope: !1831)
!5624 = !DILocalVariable(name: "multi", arg: 1, scope: !1921, file: !1, line: 2194, type: !375)
!5625 = !DILocation(line: 2194, column: 54, scope: !1921)
!5626 = !DILocalVariable(name: "conn", scope: !1921, file: !1, line: 2196, type: !262)
!5627 = !DILocation(line: 2196, column: 23, scope: !1921)
!5628 = !DILocation(line: 2198, column: 48, scope: !1921)
!5629 = !DILocation(line: 2198, column: 55, scope: !1921)
!5630 = !DILocation(line: 2198, column: 10, scope: !1921)
!5631 = !DILocation(line: 2198, column: 8, scope: !1921)
!5632 = !DILocation(line: 2199, column: 3, scope: !1921)
!5633 = !DILocation(line: 2199, column: 9, scope: !5634)
!5634 = !DILexicalBlockFile(scope: !1921, file: !1, discriminator: 1)
!5635 = !DILocation(line: 2199, column: 3, scope: !5634)
!5636 = !DILocation(line: 2201, column: 18, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !1921, file: !1, line: 2199, column: 15)
!5638 = !DILocation(line: 2201, column: 25, scope: !5637)
!5639 = !DILocation(line: 2201, column: 5, scope: !5637)
!5640 = !DILocation(line: 2201, column: 11, scope: !5637)
!5641 = !DILocation(line: 2201, column: 16, scope: !5637)
!5642 = !DILocation(line: 2203, column: 5, scope: !5637)
!5643 = !DILocation(line: 2203, column: 5, scope: !5644)
!5644 = !DILexicalBlockFile(scope: !5645, file: !1, discriminator: 1)
!5645 = distinct !DILexicalBlock(scope: !5637, file: !1, line: 2203, column: 5)
!5646 = !DILocation(line: 2204, column: 5, scope: !5637)
!5647 = !DILocation(line: 2204, column: 11, scope: !5637)
!5648 = !DILocation(line: 2204, column: 17, scope: !5637)
!5649 = !DILocation(line: 2204, column: 27, scope: !5637)
!5650 = !DILocation(line: 2207, column: 5, scope: !5637)
!5651 = !DILocation(line: 2208, column: 27, scope: !5637)
!5652 = !DILocation(line: 2208, column: 11, scope: !5637)
!5653 = !DILocation(line: 2209, column: 5, scope: !5637)
!5654 = !DILocation(line: 2209, column: 5, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !5656, file: !1, discriminator: 1)
!5656 = distinct !DILexicalBlock(scope: !5637, file: !1, line: 2209, column: 5)
!5657 = !DILocation(line: 2211, column: 50, scope: !5637)
!5658 = !DILocation(line: 2211, column: 57, scope: !5637)
!5659 = !DILocation(line: 2211, column: 12, scope: !5637)
!5660 = !DILocation(line: 2211, column: 10, scope: !5637)
!5661 = !DILocation(line: 2199, column: 3, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !1921, file: !1, discriminator: 2)
!5663 = !DILocation(line: 2213, column: 1, scope: !1921)
!5664 = !DILocalVariable(name: "multi", arg: 1, scope: !1834, file: !1, line: 2288, type: !375)
!5665 = !DILocation(line: 2288, column: 50, scope: !1834)
!5666 = !DILocalVariable(name: "msgs_in_queue", arg: 2, scope: !1834, file: !1, line: 2288, type: !1472)
!5667 = !DILocation(line: 2288, column: 62, scope: !1834)
!5668 = !DILocalVariable(name: "msg", scope: !1834, file: !1, line: 2290, type: !1920)
!5669 = !DILocation(line: 2290, column: 24, scope: !1834)
!5670 = !DILocation(line: 2292, column: 4, scope: !1834)
!5671 = !DILocation(line: 2292, column: 18, scope: !1834)
!5672 = !DILocation(line: 2294, column: 6, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !1834, file: !1, line: 2294, column: 6)
!5674 = !DILocation(line: 2294, column: 6, scope: !5675)
!5675 = !DILexicalBlockFile(scope: !5673, file: !1, discriminator: 1)
!5676 = !DILocation(line: 2294, column: 31, scope: !5675)
!5677 = !DILocation(line: 2294, column: 52, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !5673, file: !1, discriminator: 2)
!5679 = !DILocation(line: 2294, column: 59, scope: !5678)
!5680 = !DILocation(line: 2294, column: 34, scope: !5678)
!5681 = !DILocation(line: 2294, column: 6, scope: !5678)
!5682 = !DILocalVariable(name: "e", scope: !5683, file: !1, line: 2296, type: !334)
!5683 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 2294, column: 69)
!5684 = !DILocation(line: 2296, column: 32, scope: !5683)
!5685 = !DILocation(line: 2299, column: 9, scope: !5683)
!5686 = !DILocation(line: 2299, column: 16, scope: !5683)
!5687 = !DILocation(line: 2299, column: 24, scope: !5683)
!5688 = !DILocation(line: 2299, column: 7, scope: !5683)
!5689 = !DILocation(line: 2301, column: 11, scope: !5683)
!5690 = !DILocation(line: 2301, column: 14, scope: !5683)
!5691 = !DILocation(line: 2301, column: 9, scope: !5683)
!5692 = !DILocation(line: 2304, column: 24, scope: !5683)
!5693 = !DILocation(line: 2304, column: 31, scope: !5683)
!5694 = !DILocation(line: 2304, column: 40, scope: !5683)
!5695 = !DILocation(line: 2304, column: 5, scope: !5683)
!5696 = !DILocation(line: 2306, column: 53, scope: !5683)
!5697 = !DILocation(line: 2306, column: 60, scope: !5683)
!5698 = !DILocation(line: 2306, column: 35, scope: !5683)
!5699 = !DILocation(line: 2306, column: 22, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !5683, file: !1, discriminator: 1)
!5701 = !DILocation(line: 2306, column: 6, scope: !5683)
!5702 = !DILocation(line: 2306, column: 20, scope: !5683)
!5703 = !DILocation(line: 2308, column: 13, scope: !5683)
!5704 = !DILocation(line: 2308, column: 18, scope: !5683)
!5705 = !DILocation(line: 2308, column: 5, scope: !5683)
!5706 = !DILocation(line: 2310, column: 3, scope: !1834)
!5707 = !DILocation(line: 2311, column: 1, scope: !1834)
!5708 = !DILocalVariable(name: "conn", arg: 1, scope: !1839, file: !1, line: 2466, type: !262)
!5709 = !DILocation(line: 2466, column: 44, scope: !1839)
!5710 = !DILocalVariable(name: "s", arg: 2, scope: !1839, file: !1, line: 2466, type: !315)
!5711 = !DILocation(line: 2466, column: 64, scope: !1839)
!5712 = !DILocalVariable(name: "multi", scope: !1839, file: !1, line: 2468, type: !375)
!5713 = !DILocation(line: 2468, column: 22, scope: !1839)
!5714 = !DILocation(line: 2468, column: 30, scope: !1839)
!5715 = !DILocation(line: 2468, column: 36, scope: !1839)
!5716 = !DILocation(line: 2468, column: 42, scope: !1839)
!5717 = !DILocation(line: 2469, column: 6, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !1839, file: !1, line: 2469, column: 6)
!5719 = !DILocation(line: 2469, column: 6, scope: !1839)
!5720 = !DILocalVariable(name: "entry", scope: !5721, file: !1, line: 2472, type: !1772)
!5721 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 2469, column: 13)
!5722 = !DILocation(line: 2472, column: 27, scope: !5721)
!5723 = !DILocation(line: 2472, column: 48, scope: !5721)
!5724 = !DILocation(line: 2472, column: 55, scope: !5721)
!5725 = !DILocation(line: 2472, column: 65, scope: !5721)
!5726 = !DILocation(line: 2472, column: 35, scope: !5721)
!5727 = !DILocation(line: 2474, column: 8, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5721, file: !1, line: 2474, column: 8)
!5729 = !DILocation(line: 2474, column: 8, scope: !5721)
!5730 = !DILocation(line: 2475, column: 10, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !1, line: 2475, column: 10)
!5732 = distinct !DILexicalBlock(scope: !5728, file: !1, line: 2474, column: 15)
!5733 = !DILocation(line: 2475, column: 17, scope: !5731)
!5734 = !DILocation(line: 2475, column: 10, scope: !5732)
!5735 = !DILocation(line: 2476, column: 9, scope: !5731)
!5736 = !DILocation(line: 2476, column: 16, scope: !5731)
!5737 = !DILocation(line: 2476, column: 26, scope: !5731)
!5738 = !DILocation(line: 2476, column: 32, scope: !5731)
!5739 = !DILocation(line: 2476, column: 38, scope: !5731)
!5740 = !DILocation(line: 2477, column: 26, scope: !5731)
!5741 = !DILocation(line: 2477, column: 33, scope: !5731)
!5742 = !DILocation(line: 2478, column: 26, scope: !5731)
!5743 = !DILocation(line: 2478, column: 33, scope: !5731)
!5744 = !DILocation(line: 2481, column: 20, scope: !5732)
!5745 = !DILocation(line: 2481, column: 27, scope: !5732)
!5746 = !DILocation(line: 2481, column: 37, scope: !5732)
!5747 = !DILocation(line: 2481, column: 7, scope: !5732)
!5748 = !DILocation(line: 2482, column: 5, scope: !5732)
!5749 = !DILocation(line: 2483, column: 3, scope: !5721)
!5750 = !DILocation(line: 2484, column: 1, scope: !1839)
!5751 = !DILocalVariable(name: "sh", arg: 1, scope: !1928, file: !1, line: 178, type: !324)
!5752 = !DILocation(line: 178, column: 60, scope: !1928)
!5753 = !DILocalVariable(name: "s", arg: 2, scope: !1928, file: !1, line: 179, type: !315)
!5754 = !DILocation(line: 179, column: 56, scope: !1928)
!5755 = !DILocation(line: 181, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !1928, file: !1, line: 181, column: 6)
!5757 = !DILocation(line: 181, column: 8, scope: !5756)
!5758 = !DILocation(line: 181, column: 6, scope: !1928)
!5759 = !DILocation(line: 183, column: 27, scope: !5756)
!5760 = !DILocation(line: 183, column: 31, scope: !5756)
!5761 = !DILocation(line: 183, column: 12, scope: !5756)
!5762 = !DILocation(line: 183, column: 5, scope: !5756)
!5763 = !DILocation(line: 184, column: 3, scope: !1928)
!5764 = !DILocation(line: 185, column: 1, scope: !1928)
!5765 = !DILocalVariable(name: "sh", arg: 1, scope: !1931, file: !1, line: 218, type: !324)
!5766 = !DILocation(line: 218, column: 43, scope: !1931)
!5767 = !DILocalVariable(name: "s", arg: 2, scope: !1931, file: !1, line: 218, type: !315)
!5768 = !DILocation(line: 218, column: 61, scope: !1931)
!5769 = !DILocation(line: 222, column: 20, scope: !1931)
!5770 = !DILocation(line: 222, column: 24, scope: !1931)
!5771 = !DILocation(line: 222, column: 3, scope: !1931)
!5772 = !DILocation(line: 223, column: 1, scope: !1931)
!5773 = !DILocalVariable(name: "multi", arg: 1, scope: !1842, file: !1, line: 2676, type: !375)
!5774 = !DILocation(line: 2676, column: 48, scope: !1842)
!5775 = !DILocalVariable(name: "option", arg: 2, scope: !1842, file: !1, line: 2677, type: !1845)
!5776 = !DILocation(line: 2677, column: 41, scope: !1842)
!5777 = !DILocalVariable(name: "res", scope: !1842, file: !1, line: 2679, type: !1791)
!5778 = !DILocation(line: 2679, column: 13, scope: !1842)
!5779 = !DILocalVariable(name: "param", scope: !1842, file: !1, line: 2680, type: !5780)
!5780 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !627, line: 79, baseType: !5781)
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5782, line: 50, baseType: !5783)
!5782 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stdarg.h", directory: "/data/download/cmake/cmake-master/Utilities/cmcurl/lib")
!5783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 2680, baseType: !5784)
!5784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5785, size: 192, align: 64, elements: !662)
!5785 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 2680, size: 192, align: 64, elements: !5786)
!5786 = !{!5787, !5788, !5789, !5790}
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5785, file: !1, line: 2680, baseType: !457, size: 32, align: 32)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5785, file: !1, line: 2680, baseType: !457, size: 32, align: 32, offset: 32)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5785, file: !1, line: 2680, baseType: !311, size: 64, align: 64, offset: 64)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5785, file: !1, line: 2680, baseType: !311, size: 64, align: 64, offset: 128)
!5791 = !DILocation(line: 2680, column: 11, scope: !1842)
!5792 = !DILocation(line: 2682, column: 7, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !1842, file: !1, line: 2682, column: 6)
!5794 = !DILocation(line: 2682, column: 7, scope: !5795)
!5795 = !DILexicalBlockFile(scope: !5793, file: !1, discriminator: 1)
!5796 = !DILocation(line: 2682, column: 6, scope: !5795)
!5797 = !DILocation(line: 2683, column: 5, scope: !5793)
!5798 = !DILocation(line: 2685, column: 3, scope: !1842)
!5799 = !DILocation(line: 2687, column: 10, scope: !1842)
!5800 = !DILocation(line: 2687, column: 3, scope: !1842)
!5801 = !DILocation(line: 2689, column: 24, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !1842, file: !1, line: 2687, column: 18)
!5803 = !DILocation(line: 2689, column: 24, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5802, file: !1, discriminator: 1)
!5805 = !DILocation(line: 2689, column: 24, scope: !5806)
!5806 = !DILexicalBlockFile(scope: !5802, file: !1, discriminator: 2)
!5807 = !DILocation(line: 2689, column: 24, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !5802, file: !1, discriminator: 3)
!5809 = !DILocation(line: 2689, column: 5, scope: !5808)
!5810 = !DILocation(line: 2689, column: 12, scope: !5808)
!5811 = !DILocation(line: 2689, column: 22, scope: !5808)
!5812 = !DILocation(line: 2690, column: 5, scope: !5802)
!5813 = !DILocation(line: 2692, column: 27, scope: !5802)
!5814 = !DILocation(line: 2692, column: 27, scope: !5804)
!5815 = !DILocation(line: 2692, column: 27, scope: !5806)
!5816 = !DILocation(line: 2692, column: 27, scope: !5808)
!5817 = !DILocation(line: 2692, column: 5, scope: !5808)
!5818 = !DILocation(line: 2692, column: 12, scope: !5808)
!5819 = !DILocation(line: 2692, column: 25, scope: !5808)
!5820 = !DILocation(line: 2693, column: 5, scope: !5802)
!5821 = !DILocation(line: 2695, column: 22, scope: !5802)
!5822 = !DILocation(line: 2695, column: 22, scope: !5804)
!5823 = !DILocation(line: 2695, column: 22, scope: !5806)
!5824 = !DILocation(line: 2695, column: 22, scope: !5808)
!5825 = !DILocation(line: 2695, column: 5, scope: !5808)
!5826 = !DILocation(line: 2695, column: 12, scope: !5808)
!5827 = !DILocation(line: 2695, column: 20, scope: !5808)
!5828 = !DILocation(line: 2696, column: 5, scope: !5802)
!5829 = !DILocation(line: 2698, column: 25, scope: !5802)
!5830 = !DILocation(line: 2698, column: 25, scope: !5804)
!5831 = !DILocation(line: 2698, column: 25, scope: !5806)
!5832 = !DILocation(line: 2698, column: 25, scope: !5808)
!5833 = !DILocation(line: 2698, column: 5, scope: !5808)
!5834 = !DILocation(line: 2698, column: 12, scope: !5808)
!5835 = !DILocation(line: 2698, column: 23, scope: !5808)
!5836 = !DILocation(line: 2699, column: 5, scope: !5802)
!5837 = !DILocation(line: 2701, column: 25, scope: !5802)
!5838 = !DILocation(line: 2701, column: 25, scope: !5804)
!5839 = !DILocation(line: 2701, column: 25, scope: !5806)
!5840 = !DILocation(line: 2701, column: 25, scope: !5808)
!5841 = !DILocation(line: 2701, column: 5, scope: !5808)
!5842 = !DILocation(line: 2701, column: 12, scope: !5808)
!5843 = !DILocation(line: 2701, column: 23, scope: !5808)
!5844 = !DILocation(line: 2702, column: 5, scope: !5802)
!5845 = !DILocation(line: 2704, column: 23, scope: !5802)
!5846 = !DILocation(line: 2704, column: 23, scope: !5804)
!5847 = !DILocation(line: 2704, column: 23, scope: !5806)
!5848 = !DILocation(line: 2704, column: 23, scope: !5808)
!5849 = !DILocation(line: 2704, column: 5, scope: !5808)
!5850 = !DILocation(line: 2704, column: 12, scope: !5808)
!5851 = !DILocation(line: 2704, column: 21, scope: !5808)
!5852 = !DILocation(line: 2705, column: 5, scope: !5802)
!5853 = !DILocation(line: 2707, column: 26, scope: !5802)
!5854 = !DILocation(line: 2707, column: 26, scope: !5804)
!5855 = !DILocation(line: 2707, column: 26, scope: !5806)
!5856 = !DILocation(line: 2707, column: 26, scope: !5808)
!5857 = !DILocation(line: 2707, column: 5, scope: !5808)
!5858 = !DILocation(line: 2707, column: 12, scope: !5808)
!5859 = !DILocation(line: 2707, column: 24, scope: !5808)
!5860 = !DILocation(line: 2708, column: 5, scope: !5802)
!5861 = !DILocation(line: 2710, column: 26, scope: !5802)
!5862 = !DILocation(line: 2710, column: 26, scope: !5804)
!5863 = !DILocation(line: 2710, column: 26, scope: !5806)
!5864 = !DILocation(line: 2710, column: 26, scope: !5808)
!5865 = !DILocation(line: 2710, column: 5, scope: !5808)
!5866 = !DILocation(line: 2710, column: 12, scope: !5808)
!5867 = !DILocation(line: 2710, column: 24, scope: !5808)
!5868 = !DILocation(line: 2711, column: 5, scope: !5802)
!5869 = !DILocation(line: 2713, column: 35, scope: !5802)
!5870 = !DILocation(line: 2713, column: 35, scope: !5804)
!5871 = !DILocation(line: 2713, column: 35, scope: !5806)
!5872 = !DILocation(line: 2713, column: 35, scope: !5808)
!5873 = !DILocation(line: 2713, column: 5, scope: !5808)
!5874 = !DILocation(line: 2713, column: 12, scope: !5808)
!5875 = !DILocation(line: 2713, column: 33, scope: !5808)
!5876 = !DILocation(line: 2714, column: 5, scope: !5802)
!5877 = !DILocation(line: 2716, column: 34, scope: !5802)
!5878 = !DILocation(line: 2716, column: 34, scope: !5804)
!5879 = !DILocation(line: 2716, column: 34, scope: !5806)
!5880 = !DILocation(line: 2716, column: 34, scope: !5808)
!5881 = !DILocation(line: 2716, column: 5, scope: !5808)
!5882 = !DILocation(line: 2716, column: 12, scope: !5808)
!5883 = !DILocation(line: 2716, column: 32, scope: !5808)
!5884 = !DILocation(line: 2717, column: 5, scope: !5802)
!5885 = !DILocation(line: 2719, column: 42, scope: !5802)
!5886 = !DILocation(line: 2719, column: 42, scope: !5804)
!5887 = !DILocation(line: 2719, column: 42, scope: !5806)
!5888 = !DILocation(line: 2719, column: 42, scope: !5808)
!5889 = !DILocation(line: 2719, column: 5, scope: !5808)
!5890 = !DILocation(line: 2719, column: 12, scope: !5808)
!5891 = !DILocation(line: 2719, column: 40, scope: !5808)
!5892 = !DILocation(line: 2720, column: 5, scope: !5802)
!5893 = !DILocation(line: 2722, column: 40, scope: !5802)
!5894 = !DILocation(line: 2722, column: 40, scope: !5804)
!5895 = !DILocation(line: 2722, column: 40, scope: !5806)
!5896 = !DILocation(line: 2722, column: 40, scope: !5808)
!5897 = !DILocation(line: 2722, column: 5, scope: !5808)
!5898 = !DILocation(line: 2722, column: 12, scope: !5808)
!5899 = !DILocation(line: 2722, column: 38, scope: !5808)
!5900 = !DILocation(line: 2723, column: 5, scope: !5802)
!5901 = !DILocation(line: 2725, column: 44, scope: !5802)
!5902 = !DILocation(line: 2725, column: 44, scope: !5804)
!5903 = !DILocation(line: 2725, column: 44, scope: !5806)
!5904 = !DILocation(line: 2725, column: 44, scope: !5808)
!5905 = !DILocation(line: 2726, column: 45, scope: !5802)
!5906 = !DILocation(line: 2726, column: 52, scope: !5802)
!5907 = !DILocation(line: 2725, column: 11, scope: !5808)
!5908 = !DILocation(line: 2725, column: 9, scope: !5808)
!5909 = !DILocation(line: 2727, column: 5, scope: !5802)
!5910 = !DILocation(line: 2729, column: 46, scope: !5802)
!5911 = !DILocation(line: 2729, column: 46, scope: !5804)
!5912 = !DILocation(line: 2729, column: 46, scope: !5806)
!5913 = !DILocation(line: 2729, column: 46, scope: !5808)
!5914 = !DILocation(line: 2730, column: 47, scope: !5802)
!5915 = !DILocation(line: 2730, column: 54, scope: !5802)
!5916 = !DILocation(line: 2729, column: 11, scope: !5808)
!5917 = !DILocation(line: 2729, column: 9, scope: !5808)
!5918 = !DILocation(line: 2731, column: 5, scope: !5802)
!5919 = !DILocation(line: 2733, column: 36, scope: !5802)
!5920 = !DILocation(line: 2733, column: 36, scope: !5804)
!5921 = !DILocation(line: 2733, column: 36, scope: !5806)
!5922 = !DILocation(line: 2733, column: 36, scope: !5808)
!5923 = !DILocation(line: 2733, column: 5, scope: !5808)
!5924 = !DILocation(line: 2733, column: 12, scope: !5808)
!5925 = !DILocation(line: 2733, column: 34, scope: !5808)
!5926 = !DILocation(line: 2734, column: 5, scope: !5802)
!5927 = !DILocation(line: 2736, column: 9, scope: !5802)
!5928 = !DILocation(line: 2737, column: 5, scope: !5802)
!5929 = !DILocation(line: 2739, column: 3, scope: !1842)
!5930 = !DILocation(line: 2740, column: 10, scope: !1842)
!5931 = !DILocation(line: 2740, column: 3, scope: !1842)
!5932 = !DILocation(line: 2741, column: 1, scope: !1842)
!5933 = !DILocalVariable(name: "multi", arg: 1, scope: !1846, file: !1, line: 2746, type: !375)
!5934 = !DILocation(line: 2746, column: 48, scope: !1846)
!5935 = !DILocalVariable(name: "s", arg: 2, scope: !1846, file: !1, line: 2746, type: !315)
!5936 = !DILocation(line: 2746, column: 69, scope: !1846)
!5937 = !DILocalVariable(name: "running_handles", arg: 3, scope: !1846, file: !1, line: 2747, type: !1472)
!5938 = !DILocation(line: 2747, column: 34, scope: !1846)
!5939 = !DILocalVariable(name: "result", scope: !1846, file: !1, line: 2749, type: !1791)
!5940 = !DILocation(line: 2749, column: 13, scope: !1846)
!5941 = !DILocation(line: 2749, column: 35, scope: !1846)
!5942 = !DILocation(line: 2749, column: 49, scope: !1846)
!5943 = !DILocation(line: 2749, column: 55, scope: !1846)
!5944 = !DILocation(line: 2749, column: 22, scope: !1846)
!5945 = !DILocation(line: 2750, column: 18, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 2750, column: 6)
!5947 = !DILocation(line: 2750, column: 15, scope: !5946)
!5948 = !DILocation(line: 2750, column: 6, scope: !1846)
!5949 = !DILocation(line: 2751, column: 18, scope: !5946)
!5950 = !DILocation(line: 2751, column: 5, scope: !5946)
!5951 = !DILocation(line: 2752, column: 10, scope: !1846)
!5952 = !DILocation(line: 2752, column: 3, scope: !1846)
!5953 = !DILocalVariable(name: "multi", arg: 1, scope: !1937, file: !1, line: 2543, type: !375)
!5954 = !DILocation(line: 2543, column: 50, scope: !1937)
!5955 = !DILocalVariable(name: "checkall", arg: 2, scope: !1937, file: !1, line: 2544, type: !423)
!5956 = !DILocation(line: 2544, column: 36, scope: !1937)
!5957 = !DILocalVariable(name: "s", arg: 3, scope: !1937, file: !1, line: 2545, type: !315)
!5958 = !DILocation(line: 2545, column: 45, scope: !1937)
!5959 = !DILocalVariable(name: "ev_bitmask", arg: 4, scope: !1937, file: !1, line: 2546, type: !316)
!5960 = !DILocation(line: 2546, column: 35, scope: !1937)
!5961 = !DILocalVariable(name: "running_handles", arg: 5, scope: !1937, file: !1, line: 2547, type: !1472)
!5962 = !DILocation(line: 2547, column: 36, scope: !1937)
!5963 = !DILocalVariable(name: "result", scope: !1937, file: !1, line: 2549, type: !1791)
!5964 = !DILocation(line: 2549, column: 13, scope: !1937)
!5965 = !DILocalVariable(name: "data", scope: !1937, file: !1, line: 2550, type: !256)
!5966 = !DILocation(line: 2550, column: 21, scope: !1937)
!5967 = !DILocalVariable(name: "t", scope: !1937, file: !1, line: 2551, type: !402)
!5968 = !DILocation(line: 2551, column: 21, scope: !1937)
!5969 = !DILocalVariable(name: "now", scope: !1937, file: !1, line: 2552, type: !411)
!5970 = !DILocation(line: 2552, column: 18, scope: !1937)
!5971 = !DILocation(line: 2552, column: 24, scope: !1937)
!5972 = !DILocation(line: 2554, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 2554, column: 6)
!5974 = !DILocation(line: 2554, column: 6, scope: !1937)
!5975 = !DILocation(line: 2556, column: 33, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 2554, column: 16)
!5977 = !DILocation(line: 2556, column: 40, scope: !5976)
!5978 = !DILocation(line: 2556, column: 14, scope: !5976)
!5979 = !DILocation(line: 2556, column: 12, scope: !5976)
!5980 = !DILocation(line: 2560, column: 8, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5976, file: !1, line: 2560, column: 8)
!5982 = !DILocation(line: 2560, column: 15, scope: !5981)
!5983 = !DILocation(line: 2560, column: 8, scope: !5976)
!5984 = !DILocation(line: 2561, column: 12, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5981, file: !1, line: 2560, column: 36)
!5986 = !DILocation(line: 2561, column: 19, scope: !5985)
!5987 = !DILocation(line: 2561, column: 11, scope: !5985)
!5988 = !DILocation(line: 2562, column: 7, scope: !5985)
!5989 = !DILocation(line: 2562, column: 13, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5985, file: !1, discriminator: 1)
!5991 = !DILocation(line: 2562, column: 7, scope: !5990)
!5992 = !DILocation(line: 2563, column: 22, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2562, column: 19)
!5994 = !DILocation(line: 2563, column: 29, scope: !5993)
!5995 = !DILocation(line: 2563, column: 9, scope: !5993)
!5996 = !DILocation(line: 2564, column: 16, scope: !5993)
!5997 = !DILocation(line: 2564, column: 22, scope: !5993)
!5998 = !DILocation(line: 2564, column: 14, scope: !5993)
!5999 = !DILocation(line: 2562, column: 7, scope: !6000)
!6000 = !DILexicalBlockFile(scope: !5985, file: !1, discriminator: 2)
!6001 = !DILocation(line: 2566, column: 5, scope: !5985)
!6002 = !DILocation(line: 2569, column: 12, scope: !5976)
!6003 = !DILocation(line: 2569, column: 5, scope: !5976)
!6004 = !DILocation(line: 2571, column: 6, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 2571, column: 6)
!6006 = !DILocation(line: 2571, column: 8, scope: !6005)
!6007 = !DILocation(line: 2571, column: 6, scope: !1937)
!6008 = !DILocalVariable(name: "entry", scope: !6009, file: !1, line: 2573, type: !1772)
!6009 = distinct !DILexicalBlock(scope: !6005, file: !1, line: 2571, column: 32)
!6010 = !DILocation(line: 2573, column: 27, scope: !6009)
!6011 = !DILocation(line: 2573, column: 48, scope: !6009)
!6012 = !DILocation(line: 2573, column: 55, scope: !6009)
!6013 = !DILocation(line: 2573, column: 65, scope: !6009)
!6014 = !DILocation(line: 2573, column: 35, scope: !6009)
!6015 = !DILocation(line: 2575, column: 9, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6009, file: !1, line: 2575, column: 8)
!6017 = !DILocation(line: 2575, column: 8, scope: !6009)
!6018 = !DILocation(line: 2575, column: 8, scope: !6019)
!6019 = !DILexicalBlockFile(scope: !6009, file: !1, discriminator: 1)
!6020 = !DILocation(line: 2585, column: 14, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6016, file: !1, line: 2582, column: 10)
!6022 = !DILocation(line: 2585, column: 21, scope: !6021)
!6023 = !DILocation(line: 2585, column: 12, scope: !6021)
!6024 = !DILocation(line: 2587, column: 10, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2587, column: 10)
!6026 = !DILocation(line: 2587, column: 16, scope: !6025)
!6027 = !DILocation(line: 2587, column: 22, scope: !6025)
!6028 = !DILocation(line: 2587, column: 10, scope: !6021)
!6029 = !DILocation(line: 2589, column: 9, scope: !6025)
!6030 = !DILocation(line: 2594, column: 10, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2594, column: 10)
!6032 = !DILocation(line: 2594, column: 16, scope: !6031)
!6033 = !DILocation(line: 2594, column: 10, scope: !6021)
!6034 = !DILocation(line: 2595, column: 13, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !1, line: 2595, column: 12)
!6036 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 2594, column: 27)
!6037 = !DILocation(line: 2595, column: 24, scope: !6035)
!6038 = !DILocation(line: 2595, column: 41, scope: !6035)
!6039 = !DILocation(line: 2596, column: 12, scope: !6035)
!6040 = !DILocation(line: 2596, column: 18, scope: !6035)
!6041 = !DILocation(line: 2596, column: 29, scope: !6035)
!6042 = !DILocation(line: 2596, column: 39, scope: !6035)
!6043 = !DILocation(line: 2595, column: 12, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6036, file: !1, discriminator: 1)
!6045 = !DILocation(line: 2597, column: 18, scope: !6035)
!6046 = !DILocation(line: 2597, column: 24, scope: !6035)
!6047 = !DILocation(line: 2597, column: 35, scope: !6035)
!6048 = !DILocation(line: 2597, column: 45, scope: !6035)
!6049 = !DILocation(line: 2597, column: 51, scope: !6035)
!6050 = !DILocation(line: 2597, column: 16, scope: !6035)
!6051 = !DILocation(line: 2597, column: 11, scope: !6035)
!6052 = !DILocation(line: 2598, column: 18, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 2598, column: 17)
!6054 = !DILocation(line: 2598, column: 29, scope: !6053)
!6055 = !DILocation(line: 2598, column: 45, scope: !6053)
!6056 = !DILocation(line: 2599, column: 17, scope: !6053)
!6057 = !DILocation(line: 2599, column: 23, scope: !6053)
!6058 = !DILocation(line: 2599, column: 34, scope: !6053)
!6059 = !DILocation(line: 2599, column: 44, scope: !6053)
!6060 = !DILocation(line: 2598, column: 17, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6035, file: !1, discriminator: 1)
!6062 = !DILocation(line: 2600, column: 18, scope: !6053)
!6063 = !DILocation(line: 2600, column: 24, scope: !6053)
!6064 = !DILocation(line: 2600, column: 35, scope: !6053)
!6065 = !DILocation(line: 2600, column: 45, scope: !6053)
!6066 = !DILocation(line: 2600, column: 51, scope: !6053)
!6067 = !DILocation(line: 2600, column: 16, scope: !6053)
!6068 = !DILocation(line: 2600, column: 11, scope: !6053)
!6069 = !DILocation(line: 2601, column: 7, scope: !6036)
!6070 = !DILocation(line: 2603, column: 10, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2603, column: 10)
!6072 = !DILocation(line: 2603, column: 16, scope: !6071)
!6073 = !DILocation(line: 2603, column: 26, scope: !6071)
!6074 = !DILocation(line: 2604, column: 12, scope: !6071)
!6075 = !DILocation(line: 2604, column: 18, scope: !6071)
!6076 = !DILocation(line: 2604, column: 29, scope: !6071)
!6077 = !DILocation(line: 2604, column: 38, scope: !6071)
!6078 = !DILocation(line: 2604, column: 44, scope: !6071)
!6079 = !DILocation(line: 2603, column: 10, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6021, file: !1, discriminator: 1)
!6081 = !DILocation(line: 2606, column: 41, scope: !6071)
!6082 = !DILocation(line: 2606, column: 9, scope: !6071)
!6083 = !DILocation(line: 2606, column: 15, scope: !6071)
!6084 = !DILocation(line: 2606, column: 26, scope: !6071)
!6085 = !DILocation(line: 2606, column: 39, scope: !6071)
!6086 = !DILocation(line: 2608, column: 7, scope: !6021)
!6087 = !DILocation(line: 2608, column: 7, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6089, file: !1, discriminator: 1)
!6089 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2608, column: 7)
!6090 = !DILocation(line: 2609, column: 32, scope: !6021)
!6091 = !DILocation(line: 2609, column: 44, scope: !6021)
!6092 = !DILocation(line: 2609, column: 16, scope: !6021)
!6093 = !DILocation(line: 2609, column: 14, scope: !6021)
!6094 = !DILocation(line: 2610, column: 7, scope: !6021)
!6095 = !DILocation(line: 2610, column: 7, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6097, file: !1, discriminator: 1)
!6097 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2610, column: 7)
!6098 = !DILocation(line: 2612, column: 10, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2612, column: 10)
!6100 = !DILocation(line: 2612, column: 16, scope: !6099)
!6101 = !DILocation(line: 2612, column: 26, scope: !6099)
!6102 = !DILocation(line: 2613, column: 12, scope: !6099)
!6103 = !DILocation(line: 2613, column: 18, scope: !6099)
!6104 = !DILocation(line: 2613, column: 29, scope: !6099)
!6105 = !DILocation(line: 2613, column: 38, scope: !6099)
!6106 = !DILocation(line: 2613, column: 44, scope: !6099)
!6107 = !DILocation(line: 2612, column: 10, scope: !6080)
!6108 = !DILocation(line: 2615, column: 9, scope: !6099)
!6109 = !DILocation(line: 2615, column: 15, scope: !6099)
!6110 = !DILocation(line: 2615, column: 26, scope: !6099)
!6111 = !DILocation(line: 2615, column: 39, scope: !6099)
!6112 = !DILocation(line: 2617, column: 22, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6021, file: !1, line: 2617, column: 10)
!6114 = !DILocation(line: 2617, column: 19, scope: !6113)
!6115 = !DILocation(line: 2617, column: 10, scope: !6021)
!6116 = !DILocation(line: 2620, column: 22, scope: !6113)
!6117 = !DILocation(line: 2620, column: 29, scope: !6113)
!6118 = !DILocation(line: 2620, column: 9, scope: !6113)
!6119 = !DILocation(line: 2626, column: 12, scope: !6021)
!6120 = !DILocation(line: 2628, column: 13, scope: !6021)
!6121 = !DILocation(line: 2628, column: 13, scope: !6080)
!6122 = !DILocation(line: 2631, column: 3, scope: !6009)
!6123 = !DILocation(line: 2637, column: 13, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6005, file: !1, line: 2632, column: 8)
!6125 = !DILocation(line: 2637, column: 20, scope: !6124)
!6126 = !DILocation(line: 2637, column: 5, scope: !6124)
!6127 = !DILocation(line: 2645, column: 3, scope: !1937)
!6128 = !DILocation(line: 2647, column: 8, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !1, line: 2647, column: 8)
!6130 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 2645, column: 6)
!6131 = !DILocation(line: 2647, column: 8, scope: !6130)
!6132 = !DILocation(line: 2650, column: 7, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !1, line: 2647, column: 14)
!6134 = !DILocation(line: 2650, column: 7, scope: !6135)
!6135 = !DILexicalBlockFile(scope: !6136, file: !1, discriminator: 1)
!6136 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 2650, column: 7)
!6137 = !DILocation(line: 2651, column: 32, scope: !6133)
!6138 = !DILocation(line: 2651, column: 44, scope: !6133)
!6139 = !DILocation(line: 2651, column: 16, scope: !6133)
!6140 = !DILocation(line: 2651, column: 14, scope: !6133)
!6141 = !DILocation(line: 2652, column: 7, scope: !6133)
!6142 = !DILocation(line: 2652, column: 7, scope: !6143)
!6143 = !DILexicalBlockFile(scope: !6144, file: !1, discriminator: 1)
!6144 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 2652, column: 7)
!6145 = !DILocation(line: 2654, column: 22, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 2654, column: 10)
!6147 = !DILocation(line: 2654, column: 19, scope: !6146)
!6148 = !DILocation(line: 2654, column: 10, scope: !6133)
!6149 = !DILocation(line: 2657, column: 22, scope: !6146)
!6150 = !DILocation(line: 2657, column: 29, scope: !6146)
!6151 = !DILocation(line: 2657, column: 9, scope: !6146)
!6152 = !DILocation(line: 2658, column: 5, scope: !6133)
!6153 = !DILocation(line: 2663, column: 46, scope: !6130)
!6154 = !DILocation(line: 2663, column: 53, scope: !6130)
!6155 = !DILocation(line: 2663, column: 23, scope: !6130)
!6156 = !DILocation(line: 2663, column: 5, scope: !6130)
!6157 = !DILocation(line: 2663, column: 12, scope: !6130)
!6158 = !DILocation(line: 2663, column: 21, scope: !6130)
!6159 = !DILocation(line: 2664, column: 8, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6130, file: !1, line: 2664, column: 8)
!6161 = !DILocation(line: 2664, column: 8, scope: !6130)
!6162 = !DILocation(line: 2665, column: 14, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6160, file: !1, line: 2664, column: 11)
!6164 = !DILocation(line: 2665, column: 17, scope: !6163)
!6165 = !DILocation(line: 2665, column: 12, scope: !6163)
!6166 = !DILocation(line: 2666, column: 35, scope: !6163)
!6167 = !DILocation(line: 2666, column: 42, scope: !6163)
!6168 = !DILocation(line: 2666, column: 45, scope: !6163)
!6169 = !DILocation(line: 2666, column: 13, scope: !6163)
!6170 = !DILocation(line: 2667, column: 5, scope: !6163)
!6171 = !DILocation(line: 2669, column: 3, scope: !6130)
!6172 = !DILocation(line: 2669, column: 11, scope: !6173)
!6173 = !DILexicalBlockFile(scope: !1937, file: !1, discriminator: 1)
!6174 = !DILocation(line: 2669, column: 3, scope: !6173)
!6175 = !DILocation(line: 2671, column: 22, scope: !1937)
!6176 = !DILocation(line: 2671, column: 29, scope: !1937)
!6177 = !DILocation(line: 2671, column: 4, scope: !1937)
!6178 = !DILocation(line: 2671, column: 20, scope: !1937)
!6179 = !DILocation(line: 2672, column: 10, scope: !1937)
!6180 = !DILocation(line: 2672, column: 3, scope: !1937)
!6181 = !DILocation(line: 2673, column: 1, scope: !1937)
!6182 = !DILocalVariable(name: "multi", arg: 1, scope: !1849, file: !1, line: 2755, type: !375)
!6183 = !DILocation(line: 2755, column: 55, scope: !1849)
!6184 = !DILocalVariable(name: "s", arg: 2, scope: !1849, file: !1, line: 2755, type: !315)
!6185 = !DILocation(line: 2755, column: 76, scope: !1849)
!6186 = !DILocalVariable(name: "ev_bitmask", arg: 3, scope: !1849, file: !1, line: 2756, type: !316)
!6187 = !DILocation(line: 2756, column: 40, scope: !1849)
!6188 = !DILocalVariable(name: "running_handles", arg: 4, scope: !1849, file: !1, line: 2756, type: !1472)
!6189 = !DILocation(line: 2756, column: 57, scope: !1849)
!6190 = !DILocalVariable(name: "result", scope: !1849, file: !1, line: 2758, type: !1791)
!6191 = !DILocation(line: 2758, column: 13, scope: !1849)
!6192 = !DILocation(line: 2758, column: 35, scope: !1849)
!6193 = !DILocation(line: 2758, column: 49, scope: !1849)
!6194 = !DILocation(line: 2759, column: 35, scope: !1849)
!6195 = !DILocation(line: 2759, column: 47, scope: !1849)
!6196 = !DILocation(line: 2758, column: 22, scope: !1849)
!6197 = !DILocation(line: 2760, column: 18, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !1849, file: !1, line: 2760, column: 6)
!6199 = !DILocation(line: 2760, column: 15, scope: !6198)
!6200 = !DILocation(line: 2760, column: 6, scope: !1849)
!6201 = !DILocation(line: 2761, column: 18, scope: !6198)
!6202 = !DILocation(line: 2761, column: 5, scope: !6198)
!6203 = !DILocation(line: 2762, column: 10, scope: !1849)
!6204 = !DILocation(line: 2762, column: 3, scope: !1849)
!6205 = !DILocalVariable(name: "multi", arg: 1, scope: !1852, file: !1, line: 2765, type: !375)
!6206 = !DILocation(line: 2765, column: 52, scope: !1852)
!6207 = !DILocalVariable(name: "running_handles", arg: 2, scope: !1852, file: !1, line: 2765, type: !1472)
!6208 = !DILocation(line: 2765, column: 64, scope: !1852)
!6209 = !DILocalVariable(name: "result", scope: !1852, file: !1, line: 2768, type: !1791)
!6210 = !DILocation(line: 2768, column: 13, scope: !1852)
!6211 = !DILocation(line: 2768, column: 35, scope: !1852)
!6212 = !DILocation(line: 2769, column: 35, scope: !1852)
!6213 = !DILocation(line: 2768, column: 22, scope: !1852)
!6214 = !DILocation(line: 2770, column: 18, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !1852, file: !1, line: 2770, column: 6)
!6216 = !DILocation(line: 2770, column: 15, scope: !6215)
!6217 = !DILocation(line: 2770, column: 6, scope: !1852)
!6218 = !DILocation(line: 2771, column: 18, scope: !6215)
!6219 = !DILocation(line: 2771, column: 5, scope: !6215)
!6220 = !DILocation(line: 2772, column: 10, scope: !1852)
!6221 = !DILocation(line: 2772, column: 3, scope: !1852)
!6222 = !DILocalVariable(name: "multi", arg: 1, scope: !1853, file: !1, line: 2810, type: !375)
!6223 = !DILocation(line: 2810, column: 49, scope: !1853)
!6224 = !DILocalVariable(name: "timeout_ms", arg: 2, scope: !1853, file: !1, line: 2811, type: !1856)
!6225 = !DILocation(line: 2811, column: 36, scope: !1853)
!6226 = !DILocation(line: 2814, column: 7, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !1853, file: !1, line: 2814, column: 6)
!6228 = !DILocation(line: 2814, column: 7, scope: !6229)
!6229 = !DILexicalBlockFile(scope: !6227, file: !1, discriminator: 1)
!6230 = !DILocation(line: 2814, column: 6, scope: !6229)
!6231 = !DILocation(line: 2815, column: 5, scope: !6227)
!6232 = !DILocation(line: 2817, column: 24, scope: !1853)
!6233 = !DILocation(line: 2817, column: 31, scope: !1853)
!6234 = !DILocation(line: 2817, column: 10, scope: !1853)
!6235 = !DILocation(line: 2817, column: 3, scope: !1853)
!6236 = !DILocation(line: 2818, column: 1, scope: !1853)
!6237 = !DILocalVariable(name: "timeoutlist", arg: 1, scope: !1945, file: !1, line: 2878, type: !329)
!6238 = !DILocation(line: 2878, column: 37, scope: !1945)
!6239 = !DILocalVariable(name: "stamp", arg: 2, scope: !1945, file: !1, line: 2879, type: !1779)
!6240 = !DILocation(line: 2879, column: 34, scope: !1945)
!6241 = !DILocalVariable(name: "e", scope: !1945, file: !1, line: 2881, type: !334)
!6242 = !DILocation(line: 2881, column: 30, scope: !1945)
!6243 = !DILocalVariable(name: "timedup", scope: !1945, file: !1, line: 2882, type: !1779)
!6244 = !DILocation(line: 2882, column: 19, scope: !1945)
!6245 = !DILocalVariable(name: "prev", scope: !1945, file: !1, line: 2883, type: !334)
!6246 = !DILocation(line: 2883, column: 30, scope: !1945)
!6247 = !DILocation(line: 2885, column: 13, scope: !1945)
!6248 = !DILocation(line: 2885, column: 11, scope: !1945)
!6249 = !DILocation(line: 2886, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 2886, column: 6)
!6251 = !DILocation(line: 2886, column: 6, scope: !1945)
!6252 = !DILocation(line: 2887, column: 5, scope: !6250)
!6253 = !DILocation(line: 2890, column: 10, scope: !1945)
!6254 = !DILocation(line: 2890, column: 3, scope: !1945)
!6255 = !DILocation(line: 2890, column: 19, scope: !1945)
!6256 = !DILocation(line: 2892, column: 23, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 2892, column: 6)
!6258 = !DILocation(line: 2892, column: 6, scope: !6257)
!6259 = !DILocation(line: 2892, column: 6, scope: !1945)
!6260 = !DILocation(line: 2894, column: 13, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !1, line: 2894, column: 5)
!6262 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2892, column: 37)
!6263 = !DILocation(line: 2894, column: 26, scope: !6261)
!6264 = !DILocation(line: 2894, column: 11, scope: !6261)
!6265 = !DILocation(line: 2894, column: 9, scope: !6261)
!6266 = !DILocation(line: 2894, column: 32, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !6268, file: !1, discriminator: 1)
!6268 = distinct !DILexicalBlock(scope: !6261, file: !1, line: 2894, column: 5)
!6269 = !DILocation(line: 2894, column: 5, scope: !6267)
!6270 = !DILocalVariable(name: "checktime", scope: !6271, file: !1, line: 2895, type: !1779)
!6271 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 2894, column: 48)
!6272 = !DILocation(line: 2895, column: 23, scope: !6271)
!6273 = !DILocation(line: 2895, column: 35, scope: !6271)
!6274 = !DILocation(line: 2895, column: 38, scope: !6271)
!6275 = !DILocalVariable(name: "diff", scope: !6271, file: !1, line: 2896, type: !599)
!6276 = !DILocation(line: 2896, column: 14, scope: !6271)
!6277 = !DILocation(line: 2896, column: 35, scope: !6271)
!6278 = !DILocation(line: 2896, column: 47, scope: !6271)
!6279 = !DILocation(line: 2896, column: 21, scope: !6271)
!6280 = !DILocation(line: 2897, column: 10, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 2897, column: 10)
!6282 = !DILocation(line: 2897, column: 15, scope: !6281)
!6283 = !DILocation(line: 2897, column: 10, scope: !6271)
!6284 = !DILocation(line: 2898, column: 9, scope: !6281)
!6285 = !DILocation(line: 2899, column: 14, scope: !6271)
!6286 = !DILocation(line: 2899, column: 12, scope: !6271)
!6287 = !DILocation(line: 2900, column: 5, scope: !6271)
!6288 = !DILocation(line: 2894, column: 39, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6268, file: !1, discriminator: 2)
!6290 = !DILocation(line: 2894, column: 42, scope: !6289)
!6291 = !DILocation(line: 2894, column: 37, scope: !6289)
!6292 = !DILocation(line: 2894, column: 5, scope: !6289)
!6293 = !DILocation(line: 2902, column: 3, scope: !6262)
!6294 = !DILocation(line: 2906, column: 30, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 2906, column: 6)
!6296 = !DILocation(line: 2906, column: 43, scope: !6295)
!6297 = !DILocation(line: 2906, column: 49, scope: !6295)
!6298 = !DILocation(line: 2906, column: 7, scope: !6295)
!6299 = !DILocation(line: 2906, column: 6, scope: !1945)
!6300 = !DILocation(line: 2907, column: 5, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !1, line: 2906, column: 59)
!6302 = !DILocation(line: 2908, column: 5, scope: !6301)
!6303 = !DILocation(line: 2911, column: 3, scope: !1945)
!6304 = !DILocation(line: 2912, column: 1, scope: !1945)
!6305 = !DILocalVariable(name: "data", arg: 1, scope: !1860, file: !1, line: 2986, type: !256)
!6306 = !DILocation(line: 2986, column: 43, scope: !1860)
!6307 = !DILocalVariable(name: "milli", arg: 2, scope: !1860, file: !1, line: 2986, type: !599)
!6308 = !DILocation(line: 2986, column: 56, scope: !1860)
!6309 = !DILocalVariable(name: "expire", scope: !1860, file: !1, line: 2988, type: !1779)
!6310 = !DILocation(line: 2988, column: 19, scope: !1860)
!6311 = !DILocation(line: 2988, column: 29, scope: !1860)
!6312 = !DILocation(line: 2988, column: 35, scope: !1860)
!6313 = !DILocation(line: 2988, column: 41, scope: !1860)
!6314 = !DILocalVariable(name: "set", scope: !1860, file: !1, line: 2990, type: !411)
!6315 = !DILocation(line: 2990, column: 18, scope: !1860)
!6316 = !DILocation(line: 2992, column: 9, scope: !1860)
!6317 = !DILocation(line: 2992, column: 9, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !1860, file: !1, discriminator: 1)
!6319 = !DILocation(line: 2993, column: 24, scope: !1860)
!6320 = !DILocation(line: 2993, column: 30, scope: !1860)
!6321 = !DILocation(line: 2993, column: 7, scope: !1860)
!6322 = !DILocation(line: 2993, column: 14, scope: !1860)
!6323 = !DILocation(line: 2994, column: 25, scope: !1860)
!6324 = !DILocation(line: 2994, column: 31, scope: !1860)
!6325 = !DILocation(line: 2994, column: 39, scope: !1860)
!6326 = !DILocation(line: 2994, column: 7, scope: !1860)
!6327 = !DILocation(line: 2994, column: 15, scope: !1860)
!6328 = !DILocation(line: 2996, column: 10, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 2996, column: 6)
!6330 = !DILocation(line: 2996, column: 18, scope: !6329)
!6331 = !DILocation(line: 2996, column: 6, scope: !1860)
!6332 = !DILocation(line: 2997, column: 9, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !1, line: 2996, column: 30)
!6334 = !DILocation(line: 2997, column: 15, scope: !6333)
!6335 = !DILocation(line: 2998, column: 9, scope: !6333)
!6336 = !DILocation(line: 2998, column: 17, scope: !6333)
!6337 = !DILocation(line: 2999, column: 3, scope: !6333)
!6338 = !DILocation(line: 3001, column: 6, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 3001, column: 6)
!6340 = !DILocation(line: 3001, column: 14, scope: !6339)
!6341 = !DILocation(line: 3001, column: 21, scope: !6339)
!6342 = !DILocation(line: 3001, column: 24, scope: !6343)
!6343 = !DILexicalBlockFile(scope: !6339, file: !1, discriminator: 1)
!6344 = !DILocation(line: 3001, column: 32, scope: !6343)
!6345 = !DILocation(line: 3001, column: 6, scope: !6343)
!6346 = !DILocalVariable(name: "diff", scope: !6347, file: !1, line: 3005, type: !599)
!6347 = distinct !DILexicalBlock(scope: !6339, file: !1, line: 3001, column: 41)
!6348 = !DILocation(line: 3005, column: 12, scope: !6347)
!6349 = !DILocation(line: 3005, column: 38, scope: !6347)
!6350 = !DILocation(line: 3005, column: 19, scope: !6347)
!6351 = !DILocation(line: 3006, column: 9, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6347, file: !1, line: 3006, column: 8)
!6353 = !DILocation(line: 3006, column: 14, scope: !6352)
!6354 = !DILocation(line: 3006, column: 19, scope: !6352)
!6355 = !DILocation(line: 3006, column: 23, scope: !6356)
!6356 = !DILexicalBlockFile(scope: !6352, file: !1, discriminator: 1)
!6357 = !DILocation(line: 3006, column: 30, scope: !6356)
!6358 = !DILocation(line: 3006, column: 28, scope: !6356)
!6359 = !DILocation(line: 3006, column: 8, scope: !6356)
!6360 = !DILocation(line: 3010, column: 7, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 3006, column: 38)
!6362 = !DILocation(line: 3012, column: 3, scope: !6347)
!6363 = !DILocation(line: 3015, column: 15, scope: !1860)
!6364 = !DILocation(line: 3015, column: 21, scope: !1860)
!6365 = !DILocation(line: 3015, column: 3, scope: !1860)
!6366 = !DILocation(line: 3016, column: 1, scope: !1860)
!6367 = !DILocation(line: 3016, column: 1, scope: !6318)
!6368 = !DILocalVariable(name: "multi", arg: 1, scope: !1862, file: !1, line: 3061, type: !375)
!6369 = !DILocation(line: 3061, column: 48, scope: !1862)
!6370 = !DILocalVariable(name: "s", arg: 2, scope: !1862, file: !1, line: 3061, type: !315)
!6371 = !DILocation(line: 3061, column: 69, scope: !1862)
!6372 = !DILocalVariable(name: "hashp", arg: 3, scope: !1862, file: !1, line: 3062, type: !311)
!6373 = !DILocation(line: 3062, column: 35, scope: !1862)
!6374 = !DILocalVariable(name: "there", scope: !1862, file: !1, line: 3064, type: !1772)
!6375 = !DILocation(line: 3064, column: 25, scope: !1862)
!6376 = !DILocation(line: 3066, column: 24, scope: !1862)
!6377 = !DILocation(line: 3066, column: 31, scope: !1862)
!6378 = !DILocation(line: 3066, column: 41, scope: !1862)
!6379 = !DILocation(line: 3066, column: 11, scope: !1862)
!6380 = !DILocation(line: 3066, column: 9, scope: !1862)
!6381 = !DILocation(line: 3068, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !1862, file: !1, line: 3068, column: 6)
!6383 = !DILocation(line: 3068, column: 6, scope: !1862)
!6384 = !DILocation(line: 3069, column: 5, scope: !6382)
!6385 = !DILocation(line: 3071, column: 20, scope: !1862)
!6386 = !DILocation(line: 3071, column: 3, scope: !1862)
!6387 = !DILocation(line: 3071, column: 10, scope: !1862)
!6388 = !DILocation(line: 3071, column: 18, scope: !1862)
!6389 = !DILocation(line: 3073, column: 3, scope: !1862)
!6390 = !DILocation(line: 3074, column: 1, scope: !1862)
!6391 = !DILocalVariable(name: "multi", arg: 1, scope: !1865, file: !1, line: 3076, type: !375)
!6392 = !DILocation(line: 3076, column: 59, scope: !1865)
!6393 = !DILocation(line: 3078, column: 10, scope: !1865)
!6394 = !DILocation(line: 3078, column: 18, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !1865, file: !1, discriminator: 1)
!6396 = !DILocation(line: 3078, column: 25, scope: !6395)
!6397 = !DILocation(line: 3078, column: 10, scope: !6395)
!6398 = !DILocation(line: 3078, column: 10, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !1865, file: !1, discriminator: 2)
!6400 = !DILocation(line: 3078, column: 10, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !1865, file: !1, discriminator: 3)
!6402 = !DILocation(line: 3078, column: 3, scope: !6401)
!6403 = !DILocalVariable(name: "multi", arg: 1, scope: !1868, file: !1, line: 3081, type: !375)
!6404 = !DILocation(line: 3081, column: 60, scope: !1868)
!6405 = !DILocation(line: 3083, column: 10, scope: !1868)
!6406 = !DILocation(line: 3083, column: 18, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !1868, file: !1, discriminator: 1)
!6408 = !DILocation(line: 3083, column: 25, scope: !6407)
!6409 = !DILocation(line: 3083, column: 10, scope: !6407)
!6410 = !DILocation(line: 3083, column: 10, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !1868, file: !1, discriminator: 2)
!6412 = !DILocation(line: 3083, column: 10, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !1868, file: !1, discriminator: 3)
!6414 = !DILocation(line: 3083, column: 3, scope: !6413)
!6415 = !DILocalVariable(name: "multi", arg: 1, scope: !1869, file: !1, line: 3086, type: !375)
!6416 = !DILocation(line: 3086, column: 70, scope: !1869)
!6417 = !DILocation(line: 3088, column: 10, scope: !1869)
!6418 = !DILocation(line: 3088, column: 18, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !1869, file: !1, discriminator: 1)
!6420 = !DILocation(line: 3088, column: 25, scope: !6419)
!6421 = !DILocation(line: 3088, column: 10, scope: !6419)
!6422 = !DILocation(line: 3088, column: 10, scope: !6423)
!6423 = !DILexicalBlockFile(scope: !1869, file: !1, discriminator: 2)
!6424 = !DILocation(line: 3088, column: 10, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !1869, file: !1, discriminator: 3)
!6426 = !DILocation(line: 3088, column: 3, scope: !6425)
!6427 = !DILocalVariable(name: "multi", arg: 1, scope: !1872, file: !1, line: 3091, type: !375)
!6428 = !DILocation(line: 3091, column: 68, scope: !1872)
!6429 = !DILocation(line: 3093, column: 10, scope: !1872)
!6430 = !DILocation(line: 3093, column: 18, scope: !6431)
!6431 = !DILexicalBlockFile(scope: !1872, file: !1, discriminator: 1)
!6432 = !DILocation(line: 3093, column: 25, scope: !6431)
!6433 = !DILocation(line: 3093, column: 10, scope: !6431)
!6434 = !DILocation(line: 3093, column: 10, scope: !6435)
!6435 = !DILexicalBlockFile(scope: !1872, file: !1, discriminator: 2)
!6436 = !DILocation(line: 3093, column: 10, scope: !6437)
!6437 = !DILexicalBlockFile(scope: !1872, file: !1, discriminator: 3)
!6438 = !DILocation(line: 3093, column: 3, scope: !6437)
!6439 = !DILocalVariable(name: "multi", arg: 1, scope: !1873, file: !1, line: 3096, type: !375)
!6440 = !DILocation(line: 3096, column: 69, scope: !1873)
!6441 = !DILocation(line: 3098, column: 11, scope: !1873)
!6442 = !DILocation(line: 3098, column: 18, scope: !1873)
!6443 = !DILocation(line: 3098, column: 3, scope: !1873)
!6444 = !DILocalVariable(name: "multi", arg: 1, scope: !1876, file: !1, line: 3101, type: !375)
!6445 = !DILocation(line: 3101, column: 71, scope: !1876)
!6446 = !DILocation(line: 3103, column: 11, scope: !1876)
!6447 = !DILocation(line: 3103, column: 18, scope: !1876)
!6448 = !DILocation(line: 3103, column: 3, scope: !1876)
!6449 = !DILocalVariable(name: "key", arg: 1, scope: !1881, file: !1, line: 242, type: !311)
!6450 = !DILocation(line: 242, column: 29, scope: !1881)
!6451 = !DILocalVariable(name: "key_length", arg: 2, scope: !1881, file: !1, line: 242, type: !347)
!6452 = !DILocation(line: 242, column: 41, scope: !1881)
!6453 = !DILocalVariable(name: "slots_num", arg: 3, scope: !1881, file: !1, line: 242, type: !347)
!6454 = !DILocation(line: 242, column: 60, scope: !1881)
!6455 = !DILocalVariable(name: "fd", scope: !1881, file: !1, line: 244, type: !315)
!6456 = !DILocation(line: 244, column: 17, scope: !1881)
!6457 = !DILocation(line: 244, column: 42, scope: !1881)
!6458 = !DILocation(line: 244, column: 24, scope: !1881)
!6459 = !DILocation(line: 244, column: 22, scope: !1881)
!6460 = !DILocation(line: 245, column: 10, scope: !1881)
!6461 = !DILocation(line: 247, column: 11, scope: !1881)
!6462 = !DILocation(line: 247, column: 16, scope: !1881)
!6463 = !DILocation(line: 247, column: 14, scope: !1881)
!6464 = !DILocation(line: 247, column: 3, scope: !1881)
!6465 = !DILocalVariable(name: "k1", arg: 1, scope: !1882, file: !1, line: 235, type: !311)
!6466 = !DILocation(line: 235, column: 36, scope: !1882)
!6467 = !DILocalVariable(name: "k1_len", arg: 2, scope: !1882, file: !1, line: 235, type: !347)
!6468 = !DILocation(line: 235, column: 47, scope: !1882)
!6469 = !DILocalVariable(name: "k2", arg: 3, scope: !1882, file: !1, line: 235, type: !311)
!6470 = !DILocation(line: 235, column: 61, scope: !1882)
!6471 = !DILocalVariable(name: "k2_len", arg: 4, scope: !1882, file: !1, line: 235, type: !347)
!6472 = !DILocation(line: 235, column: 72, scope: !1882)
!6473 = !DILocation(line: 237, column: 10, scope: !1882)
!6474 = !DILocation(line: 237, column: 25, scope: !1882)
!6475 = !DILocation(line: 239, column: 31, scope: !1882)
!6476 = !DILocation(line: 239, column: 13, scope: !1882)
!6477 = !DILocation(line: 239, column: 11, scope: !1882)
!6478 = !DILocation(line: 239, column: 60, scope: !1882)
!6479 = !DILocation(line: 239, column: 42, scope: !1882)
!6480 = !DILocation(line: 239, column: 40, scope: !1882)
!6481 = !DILocation(line: 239, column: 36, scope: !1882)
!6482 = !DILocation(line: 239, column: 10, scope: !1882)
!6483 = !DILocation(line: 239, column: 3, scope: !1882)
!6484 = !DILocalVariable(name: "freethis", arg: 1, scope: !1883, file: !1, line: 228, type: !311)
!6485 = !DILocation(line: 228, column: 32, scope: !1883)
!6486 = !DILocalVariable(name: "p", scope: !1883, file: !1, line: 230, type: !1772)
!6487 = !DILocation(line: 230, column: 25, scope: !1883)
!6488 = !DILocation(line: 230, column: 54, scope: !1883)
!6489 = !DILocation(line: 230, column: 29, scope: !1883)
!6490 = !DILocation(line: 232, column: 3, scope: !1883)
!6491 = !DILocation(line: 233, column: 1, scope: !1883)
!6492 = !DILocalVariable(name: "data", arg: 1, scope: !1892, file: !1, line: 485, type: !256)
!6493 = !DILocation(line: 485, column: 34, scope: !1892)
!6494 = !DILocalVariable(name: "conn", arg: 2, scope: !1892, file: !1, line: 485, type: !262)
!6495 = !DILocation(line: 485, column: 60, scope: !1892)
!6496 = !DILocalVariable(name: "maxconnects", scope: !1892, file: !1, line: 488, type: !347)
!6497 = !DILocation(line: 488, column: 10, scope: !1892)
!6498 = !DILocation(line: 489, column: 6, scope: !1892)
!6499 = !DILocation(line: 489, column: 12, scope: !1892)
!6500 = !DILocation(line: 489, column: 19, scope: !1892)
!6501 = !DILocation(line: 489, column: 31, scope: !1892)
!6502 = !DILocation(line: 489, column: 5, scope: !1892)
!6503 = !DILocation(line: 489, column: 38, scope: !6504)
!6504 = !DILexicalBlockFile(scope: !1892, file: !1, discriminator: 1)
!6505 = !DILocation(line: 489, column: 44, scope: !6504)
!6506 = !DILocation(line: 489, column: 51, scope: !6504)
!6507 = !DILocation(line: 489, column: 60, scope: !6504)
!6508 = !DILocation(line: 489, column: 5, scope: !6504)
!6509 = !DILocation(line: 490, column: 5, scope: !1892)
!6510 = !DILocation(line: 490, column: 11, scope: !1892)
!6511 = !DILocation(line: 490, column: 18, scope: !1892)
!6512 = !DILocation(line: 489, column: 5, scope: !6513)
!6513 = !DILexicalBlockFile(scope: !1892, file: !1, discriminator: 2)
!6514 = !DILocation(line: 489, column: 5, scope: !6515)
!6515 = !DILexicalBlockFile(scope: !1892, file: !1, discriminator: 3)
!6516 = !DILocalVariable(name: "conn_candidate", scope: !1892, file: !1, line: 491, type: !262)
!6517 = !DILocation(line: 491, column: 23, scope: !1892)
!6518 = !DILocation(line: 494, column: 3, scope: !1892)
!6519 = !DILocation(line: 494, column: 9, scope: !1892)
!6520 = !DILocation(line: 494, column: 15, scope: !1892)
!6521 = !DILocation(line: 496, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !1892, file: !1, line: 496, column: 6)
!6523 = !DILocation(line: 496, column: 18, scope: !6522)
!6524 = !DILocation(line: 496, column: 22, scope: !6522)
!6525 = !DILocation(line: 497, column: 6, scope: !6522)
!6526 = !DILocation(line: 497, column: 12, scope: !6522)
!6527 = !DILocation(line: 497, column: 18, scope: !6522)
!6528 = !DILocation(line: 497, column: 30, scope: !6522)
!6529 = !DILocation(line: 497, column: 48, scope: !6522)
!6530 = !DILocation(line: 497, column: 46, scope: !6522)
!6531 = !DILocation(line: 496, column: 6, scope: !6504)
!6532 = !DILocation(line: 498, column: 11, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6522, file: !1, line: 497, column: 61)
!6534 = !DILocation(line: 498, column: 5, scope: !6533)
!6535 = !DILocation(line: 500, column: 50, scope: !6533)
!6536 = !DILocation(line: 500, column: 22, scope: !6533)
!6537 = !DILocation(line: 500, column: 20, scope: !6533)
!6538 = !DILocation(line: 502, column: 8, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6533, file: !1, line: 502, column: 8)
!6540 = !DILocation(line: 502, column: 8, scope: !6533)
!6541 = !DILocation(line: 504, column: 30, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6539, file: !1, line: 502, column: 24)
!6543 = !DILocation(line: 504, column: 7, scope: !6542)
!6544 = !DILocation(line: 504, column: 23, scope: !6542)
!6545 = !DILocation(line: 504, column: 28, scope: !6542)
!6546 = !DILocation(line: 507, column: 29, scope: !6542)
!6547 = !DILocation(line: 507, column: 13, scope: !6542)
!6548 = !DILocation(line: 508, column: 5, scope: !6542)
!6549 = !DILocation(line: 509, column: 3, scope: !6533)
!6550 = !DILocation(line: 511, column: 11, scope: !1892)
!6551 = !DILocation(line: 511, column: 29, scope: !1892)
!6552 = !DILocation(line: 511, column: 26, scope: !1892)
!6553 = !DILocation(line: 511, column: 10, scope: !1892)
!6554 = !DILocation(line: 511, column: 3, scope: !1892)
!6555 = !DILocalVariable(name: "conn", arg: 1, scope: !1898, file: !1, line: 821, type: !262)
!6556 = !DILocation(line: 821, column: 57, scope: !1898)
!6557 = !DILocalVariable(name: "sock", arg: 2, scope: !1898, file: !1, line: 822, type: !1480)
!6558 = !DILocation(line: 822, column: 52, scope: !1898)
!6559 = !DILocalVariable(name: "numsocks", arg: 3, scope: !1898, file: !1, line: 823, type: !316)
!6560 = !DILocation(line: 823, column: 41, scope: !1898)
!6561 = !DILocation(line: 825, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 825, column: 6)
!6563 = !DILocation(line: 825, column: 6, scope: !1898)
!6564 = !DILocation(line: 826, column: 5, scope: !6562)
!6565 = !DILocation(line: 828, column: 13, scope: !1898)
!6566 = !DILocation(line: 828, column: 19, scope: !1898)
!6567 = !DILocation(line: 828, column: 3, scope: !1898)
!6568 = !DILocation(line: 828, column: 11, scope: !1898)
!6569 = !DILocation(line: 832, column: 6, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !1898, file: !1, line: 832, column: 6)
!6571 = !DILocation(line: 832, column: 12, scope: !6570)
!6572 = !DILocation(line: 832, column: 38, scope: !6570)
!6573 = !DILocation(line: 832, column: 6, scope: !1898)
!6574 = !DILocation(line: 833, column: 5, scope: !6570)
!6575 = !DILocation(line: 835, column: 3, scope: !1898)
!6576 = !DILocation(line: 836, column: 1, scope: !1898)
!6577 = !DILocalVariable(name: "conn", arg: 1, scope: !1899, file: !1, line: 795, type: !262)
!6578 = !DILocation(line: 795, column: 52, scope: !1899)
!6579 = !DILocalVariable(name: "sock", arg: 2, scope: !1899, file: !1, line: 796, type: !1480)
!6580 = !DILocation(line: 796, column: 47, scope: !1899)
!6581 = !DILocalVariable(name: "numsocks", arg: 3, scope: !1899, file: !1, line: 797, type: !316)
!6582 = !DILocation(line: 797, column: 36, scope: !1899)
!6583 = !DILocalVariable(name: "i", scope: !1899, file: !1, line: 799, type: !316)
!6584 = !DILocation(line: 799, column: 7, scope: !1899)
!6585 = !DILocalVariable(name: "s", scope: !1899, file: !1, line: 800, type: !316)
!6586 = !DILocation(line: 800, column: 7, scope: !1899)
!6587 = !DILocalVariable(name: "rc", scope: !1899, file: !1, line: 801, type: !316)
!6588 = !DILocation(line: 801, column: 7, scope: !1899)
!6589 = !DILocation(line: 803, column: 7, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 803, column: 6)
!6591 = !DILocation(line: 803, column: 6, scope: !1899)
!6592 = !DILocation(line: 804, column: 5, scope: !6590)
!6593 = !DILocation(line: 811, column: 8, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !1899, file: !1, line: 811, column: 3)
!6595 = !DILocation(line: 811, column: 7, scope: !6594)
!6596 = !DILocation(line: 811, column: 12, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6598, file: !1, discriminator: 1)
!6598 = distinct !DILexicalBlock(scope: !6594, file: !1, line: 811, column: 3)
!6599 = !DILocation(line: 811, column: 13, scope: !6597)
!6600 = !DILocation(line: 811, column: 3, scope: !6597)
!6601 = !DILocation(line: 812, column: 23, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !1, line: 812, column: 8)
!6603 = distinct !DILexicalBlock(scope: !6598, file: !1, line: 811, column: 22)
!6604 = !DILocation(line: 812, column: 8, scope: !6602)
!6605 = !DILocation(line: 812, column: 14, scope: !6602)
!6606 = !DILocation(line: 812, column: 26, scope: !6602)
!6607 = !DILocation(line: 812, column: 8, scope: !6603)
!6608 = !DILocation(line: 813, column: 32, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6602, file: !1, line: 812, column: 46)
!6610 = !DILocation(line: 813, column: 17, scope: !6609)
!6611 = !DILocation(line: 813, column: 23, scope: !6609)
!6612 = !DILocation(line: 813, column: 12, scope: !6609)
!6613 = !DILocation(line: 813, column: 7, scope: !6609)
!6614 = !DILocation(line: 813, column: 15, scope: !6609)
!6615 = !DILocation(line: 814, column: 13, scope: !6609)
!6616 = !DILocation(line: 814, column: 10, scope: !6609)
!6617 = !DILocation(line: 815, column: 5, scope: !6609)
!6618 = !DILocation(line: 816, column: 3, scope: !6603)
!6619 = !DILocation(line: 811, column: 18, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6598, file: !1, discriminator: 2)
!6621 = !DILocation(line: 811, column: 3, scope: !6620)
!6622 = !DILocation(line: 818, column: 10, scope: !1899)
!6623 = !DILocation(line: 818, column: 3, scope: !1899)
!6624 = !DILocation(line: 819, column: 1, scope: !1899)
!6625 = !DILocalVariable(name: "conn", arg: 1, scope: !1900, file: !1, line: 838, type: !262)
!6626 = !DILocation(line: 838, column: 47, scope: !1900)
!6627 = !DILocalVariable(name: "socks", arg: 2, scope: !1900, file: !1, line: 839, type: !1480)
!6628 = !DILocation(line: 839, column: 42, scope: !1900)
!6629 = !DILocalVariable(name: "numsocks", arg: 3, scope: !1900, file: !1, line: 840, type: !316)
!6630 = !DILocation(line: 840, column: 31, scope: !1900)
!6631 = !DILocation(line: 842, column: 6, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !1900, file: !1, line: 842, column: 6)
!6633 = !DILocation(line: 842, column: 11, scope: !6632)
!6634 = !DILocation(line: 842, column: 14, scope: !6635)
!6635 = !DILexicalBlockFile(scope: !6632, file: !1, discriminator: 1)
!6636 = !DILocation(line: 842, column: 20, scope: !6635)
!6637 = !DILocation(line: 842, column: 29, scope: !6635)
!6638 = !DILocation(line: 842, column: 6, scope: !6635)
!6639 = !DILocation(line: 843, column: 12, scope: !6632)
!6640 = !DILocation(line: 843, column: 18, scope: !6632)
!6641 = !DILocation(line: 843, column: 27, scope: !6632)
!6642 = !DILocation(line: 843, column: 42, scope: !6632)
!6643 = !DILocation(line: 843, column: 48, scope: !6632)
!6644 = !DILocation(line: 843, column: 55, scope: !6632)
!6645 = !DILocation(line: 843, column: 5, scope: !6632)
!6646 = !DILocation(line: 844, column: 3, scope: !1900)
!6647 = !DILocation(line: 845, column: 1, scope: !1900)
!6648 = !DILocalVariable(name: "multi", arg: 1, scope: !1904, file: !1, line: 1131, type: !375)
!6649 = !DILocation(line: 1131, column: 48, scope: !1904)
!6650 = !DILocalVariable(name: "clear", arg: 2, scope: !1904, file: !1, line: 1131, type: !423)
!6651 = !DILocation(line: 1131, column: 60, scope: !1904)
!6652 = !DILocalVariable(name: "retval", scope: !1904, file: !1, line: 1133, type: !423)
!6653 = !DILocation(line: 1133, column: 8, scope: !1904)
!6654 = !DILocation(line: 1133, column: 17, scope: !1904)
!6655 = !DILocation(line: 1133, column: 24, scope: !1904)
!6656 = !DILocation(line: 1134, column: 6, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !1904, file: !1, line: 1134, column: 6)
!6658 = !DILocation(line: 1134, column: 6, scope: !1904)
!6659 = !DILocation(line: 1135, column: 5, scope: !6657)
!6660 = !DILocation(line: 1135, column: 12, scope: !6657)
!6661 = !DILocation(line: 1135, column: 25, scope: !6657)
!6662 = !DILocation(line: 1136, column: 10, scope: !1904)
!6663 = !DILocation(line: 1136, column: 3, scope: !1904)
!6664 = !DILocalVariable(name: "connp", arg: 1, scope: !1907, file: !1, line: 1229, type: !1891)
!6665 = !DILocation(line: 1229, column: 47, scope: !1907)
!6666 = !DILocalVariable(name: "done", arg: 2, scope: !1907, file: !1, line: 1229, type: !1461)
!6667 = !DILocation(line: 1229, column: 60, scope: !1907)
!6668 = !DILocalVariable(name: "result", scope: !1907, file: !1, line: 1231, type: !289)
!6669 = !DILocation(line: 1231, column: 12, scope: !1907)
!6670 = !DILocalVariable(name: "conn", scope: !1907, file: !1, line: 1232, type: !262)
!6671 = !DILocation(line: 1232, column: 23, scope: !1907)
!6672 = !DILocation(line: 1232, column: 31, scope: !1907)
!6673 = !DILocation(line: 1232, column: 30, scope: !1907)
!6674 = !DILocalVariable(name: "data", scope: !1907, file: !1, line: 1233, type: !256)
!6675 = !DILocation(line: 1233, column: 21, scope: !1907)
!6676 = !DILocation(line: 1233, column: 28, scope: !1907)
!6677 = !DILocation(line: 1233, column: 34, scope: !1907)
!6678 = !DILocation(line: 1235, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !1907, file: !1, line: 1235, column: 6)
!6680 = !DILocation(line: 1235, column: 12, scope: !6679)
!6681 = !DILocation(line: 1235, column: 21, scope: !6679)
!6682 = !DILocation(line: 1235, column: 6, scope: !1907)
!6683 = !DILocation(line: 1237, column: 14, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6679, file: !1, line: 1235, column: 28)
!6685 = !DILocation(line: 1237, column: 20, scope: !6684)
!6686 = !DILocation(line: 1237, column: 29, scope: !6684)
!6687 = !DILocation(line: 1237, column: 35, scope: !6684)
!6688 = !DILocation(line: 1237, column: 41, scope: !6684)
!6689 = !DILocation(line: 1237, column: 12, scope: !6684)
!6690 = !DILocation(line: 1240, column: 29, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !1, line: 1240, column: 8)
!6692 = !DILocation(line: 1240, column: 26, scope: !6691)
!6693 = !DILocation(line: 1240, column: 37, scope: !6691)
!6694 = !DILocation(line: 1240, column: 40, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !6691, file: !1, discriminator: 1)
!6696 = !DILocation(line: 1240, column: 46, scope: !6695)
!6697 = !DILocation(line: 1240, column: 51, scope: !6695)
!6698 = !DILocation(line: 1240, column: 8, scope: !6695)
!6699 = !DILocation(line: 1246, column: 11, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 1246, column: 10)
!6701 = distinct !DILexicalBlock(scope: !6691, file: !1, line: 1240, column: 58)
!6702 = !DILocation(line: 1246, column: 17, scope: !6700)
!6703 = !DILocation(line: 1246, column: 10, scope: !6701)
!6704 = !DILocation(line: 1247, column: 42, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6700, file: !1, line: 1246, column: 24)
!6706 = !DILocation(line: 1247, column: 18, scope: !6705)
!6707 = !DILocation(line: 1247, column: 16, scope: !6705)
!6708 = !DILocation(line: 1249, column: 13, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !1, line: 1249, column: 12)
!6710 = !DILocation(line: 1249, column: 12, scope: !6705)
!6711 = !DILocation(line: 1251, column: 19, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6709, file: !1, line: 1249, column: 21)
!6713 = !DILocation(line: 1251, column: 18, scope: !6712)
!6714 = !DILocation(line: 1251, column: 16, scope: !6712)
!6715 = !DILocation(line: 1253, column: 20, scope: !6712)
!6716 = !DILocation(line: 1253, column: 26, scope: !6712)
!6717 = !DILocation(line: 1253, column: 35, scope: !6712)
!6718 = !DILocation(line: 1253, column: 41, scope: !6712)
!6719 = !DILocation(line: 1253, column: 47, scope: !6712)
!6720 = !DILocation(line: 1253, column: 18, scope: !6712)
!6721 = !DILocation(line: 1254, column: 9, scope: !6712)
!6722 = !DILocation(line: 1255, column: 7, scope: !6705)
!6723 = !DILocation(line: 1257, column: 16, scope: !6700)
!6724 = !DILocation(line: 1257, column: 9, scope: !6700)
!6725 = !DILocation(line: 1258, column: 5, scope: !6701)
!6726 = !DILocation(line: 1260, column: 9, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6684, file: !1, line: 1260, column: 8)
!6728 = !DILocation(line: 1260, column: 16, scope: !6727)
!6729 = !DILocation(line: 1260, column: 20, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !6727, file: !1, discriminator: 1)
!6731 = !DILocation(line: 1260, column: 19, scope: !6730)
!6732 = !DILocation(line: 1260, column: 8, scope: !6730)
!6733 = !DILocation(line: 1262, column: 19, scope: !6727)
!6734 = !DILocation(line: 1262, column: 7, scope: !6727)
!6735 = !DILocation(line: 1263, column: 3, scope: !6684)
!6736 = !DILocation(line: 1264, column: 10, scope: !1907)
!6737 = !DILocation(line: 1264, column: 3, scope: !1907)
!6738 = !DILocation(line: 1265, column: 1, scope: !1907)
!6739 = !DILocalVariable(name: "conn", arg: 1, scope: !1916, file: !1, line: 1278, type: !262)
!6740 = !DILocation(line: 1278, column: 51, scope: !1916)
!6741 = !DILocalVariable(name: "complete", arg: 2, scope: !1916, file: !1, line: 1278, type: !1472)
!6742 = !DILocation(line: 1278, column: 62, scope: !1916)
!6743 = !DILocalVariable(name: "result", scope: !1916, file: !1, line: 1280, type: !289)
!6744 = !DILocation(line: 1280, column: 12, scope: !1916)
!6745 = !DILocation(line: 1282, column: 4, scope: !1916)
!6746 = !DILocation(line: 1282, column: 13, scope: !1916)
!6747 = !DILocation(line: 1284, column: 6, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 1284, column: 6)
!6749 = !DILocation(line: 1284, column: 12, scope: !6748)
!6750 = !DILocation(line: 1284, column: 21, scope: !6748)
!6751 = !DILocation(line: 1284, column: 6, scope: !1916)
!6752 = !DILocation(line: 1285, column: 14, scope: !6748)
!6753 = !DILocation(line: 1285, column: 20, scope: !6748)
!6754 = !DILocation(line: 1285, column: 29, scope: !6748)
!6755 = !DILocation(line: 1285, column: 37, scope: !6748)
!6756 = !DILocation(line: 1285, column: 43, scope: !6748)
!6757 = !DILocation(line: 1285, column: 12, scope: !6748)
!6758 = !DILocation(line: 1285, column: 5, scope: !6748)
!6759 = !DILocation(line: 1287, column: 7, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 1287, column: 6)
!6761 = !DILocation(line: 1287, column: 14, scope: !6760)
!6762 = !DILocation(line: 1287, column: 19, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6760, file: !1, discriminator: 1)
!6764 = !DILocation(line: 1287, column: 18, scope: !6763)
!6765 = !DILocation(line: 1287, column: 28, scope: !6763)
!6766 = !DILocation(line: 1287, column: 6, scope: !6763)
!6767 = !DILocation(line: 1289, column: 17, scope: !6760)
!6768 = !DILocation(line: 1289, column: 5, scope: !6760)
!6769 = !DILocation(line: 1291, column: 10, scope: !1916)
!6770 = !DILocation(line: 1291, column: 3, scope: !1916)
!6771 = !DILocalVariable(name: "multi", arg: 1, scope: !1917, file: !1, line: 280, type: !375)
!6772 = !DILocation(line: 280, column: 50, scope: !1917)
!6773 = !DILocalVariable(name: "msg", arg: 2, scope: !1917, file: !1, line: 281, type: !1920)
!6774 = !DILocation(line: 281, column: 52, scope: !1917)
!6775 = !DILocation(line: 283, column: 31, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !1917, file: !1, line: 283, column: 6)
!6777 = !DILocation(line: 283, column: 38, scope: !6776)
!6778 = !DILocation(line: 283, column: 47, scope: !6776)
!6779 = !DILocation(line: 283, column: 54, scope: !6776)
!6780 = !DILocation(line: 283, column: 62, scope: !6776)
!6781 = !DILocation(line: 283, column: 68, scope: !6776)
!6782 = !DILocation(line: 283, column: 7, scope: !6776)
!6783 = !DILocation(line: 283, column: 6, scope: !1917)
!6784 = !DILocation(line: 284, column: 5, scope: !6776)
!6785 = !DILocation(line: 286, column: 3, scope: !1917)
!6786 = !DILocation(line: 287, column: 1, scope: !1917)
!6787 = !DILocalVariable(name: "connp", arg: 1, scope: !1910, file: !1, line: 1161, type: !1891)
!6788 = !DILocation(line: 1161, column: 62, scope: !1910)
!6789 = !DILocalVariable(name: "result", scope: !1910, file: !1, line: 1163, type: !289)
!6790 = !DILocation(line: 1163, column: 12, scope: !1910)
!6791 = !DILocalVariable(name: "conn", scope: !1910, file: !1, line: 1164, type: !262)
!6792 = !DILocation(line: 1164, column: 23, scope: !1910)
!6793 = !DILocation(line: 1164, column: 31, scope: !1910)
!6794 = !DILocation(line: 1164, column: 30, scope: !1910)
!6795 = !DILocalVariable(name: "data", scope: !1910, file: !1, line: 1165, type: !256)
!6796 = !DILocation(line: 1165, column: 21, scope: !1910)
!6797 = !DILocation(line: 1165, column: 28, scope: !1910)
!6798 = !DILocation(line: 1165, column: 34, scope: !1910)
!6799 = !DILocation(line: 1173, column: 9, scope: !1910)
!6800 = !DILocation(line: 1173, column: 3, scope: !1910)
!6801 = !DILocation(line: 1175, column: 3, scope: !1910)
!6802 = !DILocation(line: 1176, column: 30, scope: !1910)
!6803 = !DILocation(line: 1176, column: 12, scope: !1910)
!6804 = !DILocation(line: 1176, column: 10, scope: !1910)
!6805 = !DILocation(line: 1180, column: 4, scope: !1910)
!6806 = !DILocation(line: 1180, column: 10, scope: !1910)
!6807 = !DILocation(line: 1187, column: 7, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !1910, file: !1, line: 1187, column: 6)
!6809 = !DILocation(line: 1187, column: 14, scope: !6808)
!6810 = !DILocation(line: 1187, column: 38, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6808, file: !1, discriminator: 1)
!6812 = !DILocation(line: 1187, column: 35, scope: !6811)
!6813 = !DILocation(line: 1187, column: 6, scope: !6811)
!6814 = !DILocalVariable(name: "async", scope: !6815, file: !1, line: 1188, type: !423)
!6815 = distinct !DILexicalBlock(scope: !6808, file: !1, line: 1187, column: 47)
!6816 = !DILocation(line: 1188, column: 10, scope: !6815)
!6817 = !DILocalVariable(name: "protocol_done", scope: !6815, file: !1, line: 1189, type: !423)
!6818 = !DILocation(line: 1189, column: 10, scope: !6815)
!6819 = !DILocation(line: 1192, column: 27, scope: !6815)
!6820 = !DILocation(line: 1192, column: 33, scope: !6815)
!6821 = !DILocation(line: 1192, column: 14, scope: !6815)
!6822 = !DILocation(line: 1192, column: 12, scope: !6815)
!6823 = !DILocation(line: 1193, column: 9, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6815, file: !1, line: 1193, column: 8)
!6825 = !DILocation(line: 1193, column: 8, scope: !6815)
!6826 = !DILocation(line: 1196, column: 15, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 1193, column: 17)
!6828 = !DILocation(line: 1196, column: 14, scope: !6827)
!6829 = !DILocation(line: 1196, column: 12, scope: !6827)
!6830 = !DILocation(line: 1197, column: 10, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 1197, column: 10)
!6832 = !DILocation(line: 1197, column: 10, scope: !6827)
!6833 = !DILocation(line: 1200, column: 16, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6831, file: !1, line: 1197, column: 17)
!6835 = !DILocation(line: 1201, column: 12, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 1201, column: 12)
!6837 = !DILocation(line: 1201, column: 12, scope: !6834)
!6838 = !DILocation(line: 1202, column: 18, scope: !6836)
!6839 = !DILocation(line: 1202, column: 11, scope: !6836)
!6840 = !DILocation(line: 1205, column: 16, scope: !6834)
!6841 = !DILocation(line: 1206, column: 12, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 1206, column: 12)
!6843 = !DILocation(line: 1206, column: 12, scope: !6834)
!6844 = !DILocation(line: 1207, column: 18, scope: !6842)
!6845 = !DILocation(line: 1207, column: 11, scope: !6842)
!6846 = !DILocation(line: 1208, column: 7, scope: !6834)
!6847 = !DILocation(line: 1209, column: 5, scope: !6827)
!6848 = !DILocation(line: 1210, column: 3, scope: !6815)
!6849 = !DILocation(line: 1212, column: 10, scope: !1910)
!6850 = !DILocation(line: 1212, column: 3, scope: !1910)
!6851 = !DILocation(line: 1213, column: 1, scope: !1910)
!6852 = !DILocalVariable(name: "conn", arg: 1, scope: !1913, file: !1, line: 1221, type: !262)
!6853 = !DILocation(line: 1221, column: 45, scope: !1913)
!6854 = !DILocation(line: 1223, column: 3, scope: !1913)
!6855 = !DILocation(line: 1223, column: 9, scope: !1913)
!6856 = !DILocation(line: 1223, column: 15, scope: !1913)
!6857 = !DILocation(line: 1223, column: 19, scope: !1913)
!6858 = !DILocation(line: 1223, column: 24, scope: !1913)
!6859 = !DILocation(line: 1224, column: 28, scope: !1913)
!6860 = !DILocation(line: 1224, column: 34, scope: !1913)
!6861 = !DILocation(line: 1224, column: 41, scope: !1913)
!6862 = !DILocation(line: 1224, column: 47, scope: !1913)
!6863 = !DILocation(line: 1224, column: 40, scope: !1913)
!6864 = !DILocation(line: 1225, column: 28, scope: !1913)
!6865 = !DILocation(line: 1225, column: 34, scope: !1913)
!6866 = !DILocation(line: 1224, column: 28, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 1)
!6868 = !DILocation(line: 1225, column: 41, scope: !6867)
!6869 = !DILocation(line: 1225, column: 47, scope: !6867)
!6870 = !DILocation(line: 1224, column: 28, scope: !6871)
!6871 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 2)
!6872 = !DILocation(line: 1224, column: 28, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !1913, file: !1, discriminator: 3)
!6874 = !DILocation(line: 1225, column: 59, scope: !6871)
!6875 = !DILocation(line: 1224, column: 3, scope: !6873)
!6876 = !DILocation(line: 1224, column: 9, scope: !6873)
!6877 = !DILocation(line: 1224, column: 15, scope: !6873)
!6878 = !DILocation(line: 1224, column: 19, scope: !6873)
!6879 = !DILocation(line: 1224, column: 25, scope: !6873)
!6880 = !DILocation(line: 1226, column: 17, scope: !1913)
!6881 = !DILocation(line: 1226, column: 23, scope: !1913)
!6882 = !DILocation(line: 1226, column: 3, scope: !1913)
!6883 = !DILocation(line: 1227, column: 1, scope: !1913)
!6884 = !DILocalVariable(name: "sh", arg: 1, scope: !1925, file: !1, line: 188, type: !324)
!6885 = !DILocation(line: 188, column: 60, scope: !1925)
!6886 = !DILocalVariable(name: "s", arg: 2, scope: !1925, file: !1, line: 189, type: !315)
!6887 = !DILocation(line: 189, column: 56, scope: !1925)
!6888 = !DILocalVariable(name: "data", arg: 3, scope: !1925, file: !1, line: 190, type: !256)
!6889 = !DILocation(line: 190, column: 60, scope: !1925)
!6890 = !DILocalVariable(name: "there", scope: !1925, file: !1, line: 192, type: !1772)
!6891 = !DILocation(line: 192, column: 25, scope: !1925)
!6892 = !DILocation(line: 192, column: 45, scope: !1925)
!6893 = !DILocation(line: 192, column: 49, scope: !1925)
!6894 = !DILocation(line: 192, column: 33, scope: !1925)
!6895 = !DILocalVariable(name: "check", scope: !1925, file: !1, line: 193, type: !1772)
!6896 = !DILocation(line: 193, column: 25, scope: !1925)
!6897 = !DILocation(line: 195, column: 6, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 195, column: 6)
!6899 = !DILocation(line: 195, column: 6, scope: !1925)
!6900 = !DILocation(line: 197, column: 12, scope: !6898)
!6901 = !DILocation(line: 197, column: 5, scope: !6898)
!6902 = !DILocation(line: 200, column: 11, scope: !1925)
!6903 = !DILocation(line: 200, column: 9, scope: !1925)
!6904 = !DILocation(line: 201, column: 7, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 201, column: 6)
!6906 = !DILocation(line: 201, column: 6, scope: !1925)
!6907 = !DILocation(line: 202, column: 5, scope: !6905)
!6908 = !DILocation(line: 204, column: 17, scope: !1925)
!6909 = !DILocation(line: 204, column: 3, scope: !1925)
!6910 = !DILocation(line: 204, column: 10, scope: !1925)
!6911 = !DILocation(line: 204, column: 15, scope: !1925)
!6912 = !DILocation(line: 205, column: 19, scope: !1925)
!6913 = !DILocation(line: 205, column: 3, scope: !1925)
!6914 = !DILocation(line: 205, column: 10, scope: !1925)
!6915 = !DILocation(line: 205, column: 17, scope: !1925)
!6916 = !DILocation(line: 208, column: 21, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !1925, file: !1, line: 208, column: 6)
!6918 = !DILocation(line: 208, column: 25, scope: !6917)
!6919 = !DILocation(line: 208, column: 60, scope: !6917)
!6920 = !DILocation(line: 208, column: 7, scope: !6917)
!6921 = !DILocation(line: 208, column: 6, scope: !1925)
!6922 = !DILocation(line: 209, column: 5, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 208, column: 68)
!6924 = !DILocation(line: 210, column: 5, scope: !6923)
!6925 = !DILocation(line: 213, column: 10, scope: !1925)
!6926 = !DILocation(line: 213, column: 3, scope: !1925)
!6927 = !DILocation(line: 214, column: 1, scope: !1925)

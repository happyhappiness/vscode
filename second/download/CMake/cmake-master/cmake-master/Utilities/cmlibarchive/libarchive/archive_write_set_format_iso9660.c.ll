; ModuleID = '/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.archive_rb_tree_ops = type { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)*, i32 (%struct.archive_rb_node*, i8*)* }
%struct.archive_rb_node = type { [2 x %struct.archive_rb_node*], i64 }
%struct.archive = type { i32, i32, %struct.archive_vtable*, i32, i8*, i32, i8*, i32, i32, i8*, %struct.archive_string, i8*, i32, i32, %struct.archive_string_conv*, i8*, i64, i64, i64, i8, i64 }
%struct.archive_vtable = type { {}*, {}*, i32 (%struct.archive*, %struct.archive_entry*)*, {}*, i64 (%struct.archive*, i8*, i64)*, i64 (%struct.archive*, i8*, i64, i64)*, i32 (%struct.archive*, %struct.archive_entry**)*, i32 (%struct.archive*, %struct.archive_entry*)*, i32 (%struct.archive*, i8**, i64*, i64*)*, {}*, i64 (%struct.archive*, i32)*, i32 (%struct.archive*, i32)*, i8* (%struct.archive*, i32)* }
%struct.archive_entry = type opaque
%struct.archive_string = type { i8*, i64, i64 }
%struct.archive_string_conv = type opaque
%struct.archive_write = type { %struct.archive, i32, i64, i64, i8*, i64, i32 (%struct.archive*, i8*)*, i64 (%struct.archive*, i8*, i8*, i64)*, i32 (%struct.archive*, i8*)*, i8*, i32, i32, %struct.archive_write_filter*, %struct.archive_write_filter*, i8*, i8*, i32 (%struct.archive_write*)*, i32 (%struct.archive_write*, i8*, i8*)*, i32 (%struct.archive_write*)*, i32 (%struct.archive_write*, %struct.archive_entry*)*, i64 (%struct.archive_write*, i8*, i64)*, i32 (%struct.archive_write*)*, i32 (%struct.archive_write*)*, i8*, i8* (%struct.archive*, i8*)*, i8* }
%struct.archive_write_filter = type { i64, %struct.archive*, %struct.archive_write_filter*, i32 (%struct.archive_write_filter*, i8*, i8*)*, i32 (%struct.archive_write_filter*)*, i32 (%struct.archive_write_filter*, i8*, i64)*, i32 (%struct.archive_write_filter*)*, i32 (%struct.archive_write_filter*)*, i8*, i8*, i32, i32, i32 }
%struct.iso9660 = type { i64, i32, %struct.isofile*, %struct.isoent*, %struct.archive_string, i64, i32, %struct.archive_string, %struct.archive_string, %struct.archive_string_conv*, %struct.archive_string_conv*, %struct.anon.4, %struct.anon.5, %struct.archive_rb_tree, %struct.vdd, %struct.vdd, i32, i32, i32, %struct.archive_string, %struct.archive_string, %struct.archive_string, %struct.archive_string, %struct.archive_string, %struct.archive_string, %struct.archive_string, i32, %struct.anon.6, %struct.isoent*, i32, [65536 x i8], i64, i32, i64, i64, i64, %struct.anon.7, %struct.iso_option }
%struct.isofile = type { %struct.isofile*, %struct.isofile*, %struct.isofile*, %struct.isofile*, %struct.archive_entry*, %struct.archive_string, %struct.archive_string, %struct.archive_string, %struct.archive_string, i32, %struct.content, %struct.content*, i32, i32, %struct.anon }
%struct.content = type { i64, i64, i32, i32, %struct.content* }
%struct.anon = type { i8, i8, i32 }
%struct.anon.4 = type { %struct.isofile*, %struct.isofile** }
%struct.anon.5 = type { %struct.isofile*, %struct.isofile** }
%struct.archive_rb_tree = type { %struct.archive_rb_node*, %struct.archive_rb_tree_ops* }
%struct.vdd = type { %struct.isoent*, i32, %struct.path_table*, i32, i32, i32, i32, i32, i32 }
%struct.path_table = type { %struct.isoent*, %struct.isoent**, %struct.isoent**, i32 }
%struct.anon.6 = type { i8, [64 x i8], i32, i32*, i64, i32, i32, i64, i64, %struct.z_stream_s, i32, i64, i32 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.isoent = type { %struct.archive_rb_node, %struct.isofile*, %struct.isoent*, %struct.anon.0, %struct.archive_rb_tree, %struct.anon.1, %struct.isoent**, %struct.isoent*, %struct.isoent*, %struct.isoent*, i32, %struct.anon.2, i32, i32, i8*, i32, i32, i32, i32, %struct.isoent*, %struct.isoent*, %struct.anon.3, i8 }
%struct.anon.0 = type { %struct.isoent*, %struct.isoent**, i32 }
%struct.anon.1 = type { %struct.isoent*, %struct.isoent**, i32 }
%struct.anon.2 = type { i32, i32, i32, i32 }
%struct.anon.3 = type { %struct.extr_rec*, %struct.extr_rec**, %struct.extr_rec* }
%struct.extr_rec = type { i32, i32, [2048 x i8], %struct.extr_rec* }
%struct.anon.7 = type { %struct.archive_string, %struct.isoent*, %struct.archive_string, %struct.isoent*, i8, %struct.archive_string, i8, i8, i16, i16 }
%struct.iso_option = type { i32 }
%struct.hardlink = type { %struct.archive_rb_node, i32, %struct.anon.8 }
%struct.anon.8 = type { %struct.isofile*, %struct.isofile** }
%struct.zisofs_extract = type { i32, i64, i64, i8, i32, i8*, i64, i64, i64, i32, %struct.z_stream_s, i32 }
%struct.idr = type { %struct.idrent*, %struct.archive_rb_tree, %struct.anon.9, i32, i32, i32, i32, [128 x i8] }
%struct.idrent = type { %struct.archive_rb_node, %struct.idrent*, %struct.idrent*, %struct.isoent*, i32, i32, i32 }
%struct.anon.9 = type { %struct.idrent*, %struct.idrent** }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.ctl_extr_rec = type { i32, i8*, %struct.isoent*, i8*, i32, i32, i32, i32, i32 }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [33 x i8] c"archive_write_set_format_iso9660\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Can't allocate iso9660 data\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"CDROM\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"boot.catalog\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Can't allocate memory\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"iso9660\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"ISO9660\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"abstract-file\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"application-id\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"allow-vernum\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"biblio-file\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"boot\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"boot-catalog\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"boot-info-table\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"boot-load-seg\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"Invalid value(over 0xffff) for option ``%s''\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"boot-load-size\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"boot-type\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"no-emulation\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"hard-disk\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"compression-level\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"copyright-file\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"iso-level\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"joliet\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"limit-depth\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"limit-dirs\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"pad\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"publisher\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"rockridge\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"Rockridge\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"useful\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"volume-id\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"zisofs\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"Invalid value for option ``%s''\00", align 1
@.str.39 = private unnamed_addr constant [54 x i8] c"Value is longer than %zu characters for option ``%s''\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"Invalid value(empty) for option ``%s''\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c"Invalid value(over %d) for option ``%s''\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"Invalid value(under %d) for option ``%s''\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Ignore symlink file.\00", align 1
@.str.44 = private unnamed_addr constant [50 x i8] c"Ignore over %lld bytes file. This file too large.\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"Can't allocate data\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"Couldn't create temporary file\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"UTF-16BE\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"Can't allocate memory for UTF-16BE\00", align 1
@.str.49 = private unnamed_addr constant [86 x i8] c"A filename cannot be converted to UTF-16BE;You should disable making Joliet extension\00", align 1
@isoent_new.rb_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @isoent_cmp_node, i32 (%struct.archive_rb_node*, i8*)* @isoent_cmp_key }, align 8
@.str.50 = private unnamed_addr constant [27 x i8] c"A name buffer is too small\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"`%s' is not directory, we cannot insert `%s' \00", align 1
@.str.52 = private unnamed_addr constant [60 x i8] c"Found duplicate entries `%s' and its file type is different\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"1.2.3\00", align 1
@.str.54 = private unnamed_addr constant [73 x i8] c"Internal error initializing compression library: invalid setup parameter\00", align 1
@.str.55 = private unnamed_addr constant [48 x i8] c"Internal error initializing compression library\00", align 1
@.str.56 = private unnamed_addr constant [73 x i8] c"Internal error initializing compression library: invalid library version\00", align 1
@.str.57 = private unnamed_addr constant [78 x i8] c"Internal Programing error: iso9660:wb_consume() size=%jd, wbuff_remaining=%jd\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"Can't write to temporary file\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"Can't allocate content data\00", align 1
@zisofs_magic = internal constant [8 x i8] c"7\E4S\96\C9\DB\D6\07", align 1
@.str.60 = private unnamed_addr constant [54 x i8] c"Compression failed: deflate() call returned status %d\00", align 1
@.str.61 = private unnamed_addr constant [51 x i8] c"Internal Programing error: iso9660:wb_set_offset()\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"%s: Directories too deep.\00", align 1
@.str.63 = private unnamed_addr constant [38 x i8] c"Can't find the boot image file ``%s''\00", align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"Can't read temporary file(%jd)\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"Failed to clean up compressor\00", align 1
@.str.66 = private unnamed_addr constant [30 x i8] c"Illegal zisofs block pointers\00", align 1
@.str.67 = private unnamed_addr constant [43 x i8] c"Illegal zisofs block pointers(cannot seek)\00", align 1
@.str.68 = private unnamed_addr constant [39 x i8] c"Can't initialize zisofs decompression.\00", align 1
@.str.69 = private unnamed_addr constant [33 x i8] c"zisofs decompression failed (%d)\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"No memory for zisofs decompression\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"Illegal zisofs file body\00", align 1
@.str.72 = private unnamed_addr constant [53 x i8] c"Boot image file(``%s'') size is too big for fd type.\00", align 1
@.str.73 = private unnamed_addr constant [37 x i8] c"Too many directories(%d) over 65535.\00", align 1
@.str.74 = private unnamed_addr constant [9 x i8] c"rr_moved\00", align 1
@d_characters_map = internal constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@d1_characters_map = internal constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00", align 16
@isoent_gen_joliet_identifier.rb_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @isoent_cmp_node_joliet, i32 (%struct.archive_rb_node*, i8*)* @isoent_cmp_key_joliet }, align 8
@.str.75 = private unnamed_addr constant [10 x i8] c"No memory\00", align 1
@.str.76 = private unnamed_addr constant [112 x i8] c"The regulation of Joliet extensions; A length of a full-pathname of `%s' is longer than 240 bytes, (p=%d, b=%d)\00", align 1
@idr_set_num_beutf16.xdig = internal constant [36 x i16] [i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90], align 16
@isoent_gen_iso9660_identifier.rb_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @isoent_cmp_node_iso9660, i32 (%struct.archive_rb_node*, i8*)* @isoent_cmp_key_iso9660 }, align 8
@idr_set_num.xdig = internal constant [36 x i8] c"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@.str.77 = private unnamed_addr constant [28 x i8] c"Boot file(%jd) is too small\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"Publisher File\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"Data Preparer File\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"Application File\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"Copyright File\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"Abstract File\00", align 1
@.str.83 = private unnamed_addr constant [20 x i8] c"Bibliongraphic File\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"CD001\00", align 1
@a_characters_map = internal constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@a1_characters_map = internal constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00", align 16
@.str.85 = private unnamed_addr constant [19 x i8] c"Not Found %s `%s'.\00", align 1
@.str.86 = private unnamed_addr constant [24 x i8] c"EL TORITO SPECIFICATION\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"INFO %s%s\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"%c%s%s\00", align 1
@.str.89 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"%c%s=%s\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"%c%s=%d\00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"%c%s=%x\00", align 1
@rrip_identifier = internal constant [11 x i8] c"RRIP_1991A\00", align 1
@rrip_descriptor = internal constant [85 x i8] c"THE ROCK RIDGE INTERCHANGE PROTOCOL PROVIDES SUPPORT FOR POSIX FILE SYSTEM SEMANTICS\00", align 16
@rrip_source = internal constant [136 x i8] c"PLEASE CONTACT DISC PUBLISHER FOR SPECIFICATION SOURCE.  SEE PUBLISHER IDENTIFIER IN PRIMARY VOLUME DESCRIPTOR FOR CONTACT INFORMATION.\00", align 16
@isofile_init_hardlinks.rb_ops = internal constant %struct.archive_rb_tree_ops { i32 (%struct.archive_rb_node*, %struct.archive_rb_node*)* @isofile_hd_cmp_node, i32 (%struct.archive_rb_node*, i8*)* @isofile_hd_cmp_key }, align 8

; Function Attrs: nounwind uwtable
define i32 @archive_write_set_format_iso9660(%struct.archive* %_a) #0 !dbg !569 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca %struct.archive*, align 8
  %a = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %magic_test = alloca i32, align 4
  store %struct.archive* %_a, %struct.archive** %_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive** %_a.addr, metadata !985, metadata !986), !dbg !987
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a, metadata !988, metadata !986), !dbg !989
  %0 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !990
  %1 = bitcast %struct.archive* %0 to %struct.archive_write*, !dbg !991
  store %struct.archive_write* %1, %struct.archive_write** %a, align 8, !dbg !989
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !992, metadata !986), !dbg !993
  br label %do.body, !dbg !994

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %magic_test, metadata !995, metadata !986), !dbg !997
  %2 = load %struct.archive*, %struct.archive** %_a.addr, align 8, !dbg !998
  %call = call i32 @__archive_check_magic(%struct.archive* %2, i32 -1329217314, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i32 0, i32 0)), !dbg !998
  store i32 %call, i32* %magic_test, align 4, !dbg !998
  %3 = load i32, i32* %magic_test, align 4, !dbg !998
  %cmp = icmp eq i32 %3, -30, !dbg !998
  br i1 %cmp, label %if.then, label %if.end, !dbg !998

if.then:                                          ; preds = %do.body
  store i32 -30, i32* %retval, align 4, !dbg !1000
  br label %return, !dbg !1000

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !1003

do.end:                                           ; preds = %if.end
  %4 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1005
  %format_free = getelementptr inbounds %struct.archive_write, %struct.archive_write* %4, i32 0, i32 22, !dbg !1007
  %5 = load i32 (%struct.archive_write*)*, i32 (%struct.archive_write*)** %format_free, align 8, !dbg !1007
  %cmp1 = icmp ne i32 (%struct.archive_write*)* %5, null, !dbg !1008
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !1009

if.then2:                                         ; preds = %do.end
  %6 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1010
  %format_free3 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %6, i32 0, i32 22, !dbg !1011
  %7 = load i32 (%struct.archive_write*)*, i32 (%struct.archive_write*)** %format_free3, align 8, !dbg !1011
  %8 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1012
  %call4 = call i32 %7(%struct.archive_write* %8), !dbg !1013
  br label %if.end5, !dbg !1013

if.end5:                                          ; preds = %if.then2, %do.end
  %call6 = call noalias i8* @calloc(i64 1, i64 66424) #8, !dbg !1014
  %9 = bitcast i8* %call6 to %struct.iso9660*, !dbg !1014
  store %struct.iso9660* %9, %struct.iso9660** %iso9660, align 8, !dbg !1015
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1016
  %cmp7 = icmp eq %struct.iso9660* %10, null, !dbg !1018
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !1019

if.then8:                                         ; preds = %if.end5
  %11 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1020
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %11, i32 0, i32 0, !dbg !1022
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)), !dbg !1023
  store i32 -30, i32* %retval, align 4, !dbg !1024
  br label %return, !dbg !1024

if.end9:                                          ; preds = %if.end5
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1025
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 0, !dbg !1026
  store i64 0, i64* %birth_time, align 8, !dbg !1027
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1028
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 1, !dbg !1029
  store i32 -1, i32* %temp_fd, align 8, !dbg !1030
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1031
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 2, !dbg !1032
  store %struct.isofile* null, %struct.isofile** %cur_file, align 8, !dbg !1033
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1034
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 14, !dbg !1035
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 3, !dbg !1036
  store i32 0, i32* %max_depth, align 8, !dbg !1037
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1038
  %primary10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 14, !dbg !1039
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %primary10, i32 0, i32 1, !dbg !1040
  store i32 0, i32* %vdd_type, align 8, !dbg !1041
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1042
  %primary11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 14, !dbg !1043
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %primary11, i32 0, i32 2, !dbg !1044
  store %struct.path_table* null, %struct.path_table** %pathtbl, align 8, !dbg !1045
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1046
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 15, !dbg !1047
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet, i32 0, i32 0, !dbg !1048
  store %struct.isoent* null, %struct.isoent** %rootent, align 8, !dbg !1049
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1050
  %joliet12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 15, !dbg !1051
  %max_depth13 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet12, i32 0, i32 3, !dbg !1052
  store i32 0, i32* %max_depth13, align 8, !dbg !1053
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1054
  %joliet14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 15, !dbg !1055
  %vdd_type15 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet14, i32 0, i32 1, !dbg !1056
  store i32 1, i32* %vdd_type15, align 8, !dbg !1057
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1058
  %joliet16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 15, !dbg !1059
  %pathtbl17 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet16, i32 0, i32 2, !dbg !1060
  store %struct.path_table* null, %struct.path_table** %pathtbl17, align 8, !dbg !1061
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1062
  call void @isofile_init_entry_list(%struct.iso9660* %22), !dbg !1063
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1064
  call void @isofile_init_entry_data_file_list(%struct.iso9660* %23), !dbg !1065
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1066
  call void @isofile_init_hardlinks(%struct.iso9660* %24), !dbg !1067
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1068
  %directories_too_deep = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 28, !dbg !1069
  store %struct.isoent* null, %struct.isoent** %directories_too_deep, align 8, !dbg !1070
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1071
  %dircnt_max = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 29, !dbg !1072
  store i32 1, i32* %dircnt_max, align 8, !dbg !1073
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1074
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 31, !dbg !1075
  store i64 65536, i64* %wbuff_remaining, align 8, !dbg !1076
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1077
  %wbuff_type = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 32, !dbg !1078
  store i32 1, i32* %wbuff_type, align 8, !dbg !1079
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1080
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 33, !dbg !1081
  store i64 0, i64* %wbuff_offset, align 8, !dbg !1082
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1083
  %wbuff_written = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 34, !dbg !1084
  store i64 0, i64* %wbuff_written, align 8, !dbg !1085
  %31 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1086
  %wbuff_tail = getelementptr inbounds %struct.iso9660, %struct.iso9660* %31, i32 0, i32 35, !dbg !1087
  store i64 0, i64* %wbuff_tail, align 8, !dbg !1088
  br label %do.body18, !dbg !1089

do.body18:                                        ; preds = %if.end9
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1090
  %utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 7, !dbg !1090
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %utf16be, i32 0, i32 0, !dbg !1090
  store i8* null, i8** %s, align 8, !dbg !1090
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1090
  %utf16be19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 7, !dbg !1090
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %utf16be19, i32 0, i32 1, !dbg !1090
  store i64 0, i64* %length, align 8, !dbg !1090
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1090
  %utf16be20 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 7, !dbg !1090
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %utf16be20, i32 0, i32 2, !dbg !1090
  store i64 0, i64* %buffer_length, align 8, !dbg !1090
  br label %do.end21, !dbg !1090

do.end21:                                         ; preds = %do.body18
  br label %do.body22, !dbg !1093

do.body22:                                        ; preds = %do.end21
  %35 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1094
  %mbs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %35, i32 0, i32 8, !dbg !1094
  %s23 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %mbs, i32 0, i32 0, !dbg !1094
  store i8* null, i8** %s23, align 8, !dbg !1094
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1094
  %mbs24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 8, !dbg !1094
  %length25 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %mbs24, i32 0, i32 1, !dbg !1094
  store i64 0, i64* %length25, align 8, !dbg !1094
  %37 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1094
  %mbs26 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %37, i32 0, i32 8, !dbg !1094
  %buffer_length27 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %mbs26, i32 0, i32 2, !dbg !1094
  store i64 0, i64* %buffer_length27, align 8, !dbg !1094
  br label %do.end28, !dbg !1094

do.end28:                                         ; preds = %do.body22
  br label %do.body29, !dbg !1097

do.body29:                                        ; preds = %do.end28
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1098
  %volume_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 19, !dbg !1098
  %s30 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier, i32 0, i32 0, !dbg !1098
  store i8* null, i8** %s30, align 8, !dbg !1098
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1098
  %volume_identifier31 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %39, i32 0, i32 19, !dbg !1098
  %length32 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier31, i32 0, i32 1, !dbg !1098
  store i64 0, i64* %length32, align 8, !dbg !1098
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1098
  %volume_identifier33 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 19, !dbg !1098
  %buffer_length34 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier33, i32 0, i32 2, !dbg !1098
  store i64 0, i64* %buffer_length34, align 8, !dbg !1098
  br label %do.end35, !dbg !1098

do.end35:                                         ; preds = %do.body29
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1101
  %volume_identifier36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 19, !dbg !1101
  %length37 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier36, i32 0, i32 1, !dbg !1101
  store i64 0, i64* %length37, align 8, !dbg !1101
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1101
  %volume_identifier38 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 19, !dbg !1101
  %call39 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %volume_identifier38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i64 5), !dbg !1101
  br label %do.body40, !dbg !1102

do.body40:                                        ; preds = %do.end35
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1103
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 20, !dbg !1103
  %s41 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %publisher_identifier, i32 0, i32 0, !dbg !1103
  store i8* null, i8** %s41, align 8, !dbg !1103
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1103
  %publisher_identifier42 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 20, !dbg !1103
  %length43 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %publisher_identifier42, i32 0, i32 1, !dbg !1103
  store i64 0, i64* %length43, align 8, !dbg !1103
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1103
  %publisher_identifier44 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 20, !dbg !1103
  %buffer_length45 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %publisher_identifier44, i32 0, i32 2, !dbg !1103
  store i64 0, i64* %buffer_length45, align 8, !dbg !1103
  br label %do.end46, !dbg !1103

do.end46:                                         ; preds = %do.body40
  br label %do.body47, !dbg !1106

do.body47:                                        ; preds = %do.end46
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1107
  %data_preparer_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 21, !dbg !1107
  %s48 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %data_preparer_identifier, i32 0, i32 0, !dbg !1107
  store i8* null, i8** %s48, align 8, !dbg !1107
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1107
  %data_preparer_identifier49 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 21, !dbg !1107
  %length50 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %data_preparer_identifier49, i32 0, i32 1, !dbg !1107
  store i64 0, i64* %length50, align 8, !dbg !1107
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1107
  %data_preparer_identifier51 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 21, !dbg !1107
  %buffer_length52 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %data_preparer_identifier51, i32 0, i32 2, !dbg !1107
  store i64 0, i64* %buffer_length52, align 8, !dbg !1107
  br label %do.end53, !dbg !1107

do.end53:                                         ; preds = %do.body47
  br label %do.body54, !dbg !1110

do.body54:                                        ; preds = %do.end53
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1111
  %application_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 22, !dbg !1111
  %s55 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %application_identifier, i32 0, i32 0, !dbg !1111
  store i8* null, i8** %s55, align 8, !dbg !1111
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1111
  %application_identifier56 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 22, !dbg !1111
  %length57 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %application_identifier56, i32 0, i32 1, !dbg !1111
  store i64 0, i64* %length57, align 8, !dbg !1111
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1111
  %application_identifier58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 22, !dbg !1111
  %buffer_length59 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %application_identifier58, i32 0, i32 2, !dbg !1111
  store i64 0, i64* %buffer_length59, align 8, !dbg !1111
  br label %do.end60, !dbg !1111

do.end60:                                         ; preds = %do.body54
  %52 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1114
  %application_identifier61 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %52, i32 0, i32 22, !dbg !1114
  %length62 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %application_identifier61, i32 0, i32 1, !dbg !1114
  store i64 0, i64* %length62, align 8, !dbg !1114
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1114
  %application_identifier63 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %53, i32 0, i32 22, !dbg !1114
  %call64 = call i8* @archive_version_string(), !dbg !1114
  %call65 = call i8* @archive_version_string(), !dbg !1115
  %cmp66 = icmp eq i8* %call65, null, !dbg !1114
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !1114

cond.true:                                        ; preds = %do.end60
  br label %cond.end, !dbg !1117

cond.false:                                       ; preds = %do.end60
  %call67 = call i8* @archive_version_string(), !dbg !1119
  %call68 = call i64 @strlen(i8* %call67) #9, !dbg !1121
  br label %cond.end, !dbg !1119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call68, %cond.false ], !dbg !1123
  %call69 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %application_identifier63, i8* %call64, i64 %cond), !dbg !1123
  br label %do.body70, !dbg !1125

do.body70:                                        ; preds = %cond.end
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1126
  %copyright_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 23, !dbg !1126
  %s71 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %copyright_file_identifier, i32 0, i32 0, !dbg !1126
  store i8* null, i8** %s71, align 8, !dbg !1126
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1126
  %copyright_file_identifier72 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %55, i32 0, i32 23, !dbg !1126
  %length73 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %copyright_file_identifier72, i32 0, i32 1, !dbg !1126
  store i64 0, i64* %length73, align 8, !dbg !1126
  %56 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1126
  %copyright_file_identifier74 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %56, i32 0, i32 23, !dbg !1126
  %buffer_length75 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %copyright_file_identifier74, i32 0, i32 2, !dbg !1126
  store i64 0, i64* %buffer_length75, align 8, !dbg !1126
  br label %do.end76, !dbg !1126

do.end76:                                         ; preds = %do.body70
  br label %do.body77, !dbg !1129

do.body77:                                        ; preds = %do.end76
  %57 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1130
  %abstract_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %57, i32 0, i32 24, !dbg !1130
  %s78 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %abstract_file_identifier, i32 0, i32 0, !dbg !1130
  store i8* null, i8** %s78, align 8, !dbg !1130
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1130
  %abstract_file_identifier79 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 24, !dbg !1130
  %length80 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %abstract_file_identifier79, i32 0, i32 1, !dbg !1130
  store i64 0, i64* %length80, align 8, !dbg !1130
  %59 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1130
  %abstract_file_identifier81 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %59, i32 0, i32 24, !dbg !1130
  %buffer_length82 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %abstract_file_identifier81, i32 0, i32 2, !dbg !1130
  store i64 0, i64* %buffer_length82, align 8, !dbg !1130
  br label %do.end83, !dbg !1130

do.end83:                                         ; preds = %do.body77
  br label %do.body84, !dbg !1133

do.body84:                                        ; preds = %do.end83
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1134
  %bibliographic_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 25, !dbg !1134
  %s85 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %bibliographic_file_identifier, i32 0, i32 0, !dbg !1134
  store i8* null, i8** %s85, align 8, !dbg !1134
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1134
  %bibliographic_file_identifier86 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 25, !dbg !1134
  %length87 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %bibliographic_file_identifier86, i32 0, i32 1, !dbg !1134
  store i64 0, i64* %length87, align 8, !dbg !1134
  %62 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1134
  %bibliographic_file_identifier88 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %62, i32 0, i32 25, !dbg !1134
  %buffer_length89 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %bibliographic_file_identifier88, i32 0, i32 2, !dbg !1134
  store i64 0, i64* %buffer_length89, align 8, !dbg !1134
  br label %do.end90, !dbg !1134

do.end90:                                         ; preds = %do.body84
  br label %do.body91, !dbg !1137

do.body91:                                        ; preds = %do.end90
  %63 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1138
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %63, i32 0, i32 36, !dbg !1138
  %catalog_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 0, !dbg !1138
  %s92 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename, i32 0, i32 0, !dbg !1138
  store i8* null, i8** %s92, align 8, !dbg !1138
  %64 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1138
  %el_torito93 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 36, !dbg !1138
  %catalog_filename94 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito93, i32 0, i32 0, !dbg !1138
  %length95 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename94, i32 0, i32 1, !dbg !1138
  store i64 0, i64* %length95, align 8, !dbg !1138
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1138
  %el_torito96 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 36, !dbg !1138
  %catalog_filename97 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito96, i32 0, i32 0, !dbg !1138
  %buffer_length98 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename97, i32 0, i32 2, !dbg !1138
  store i64 0, i64* %buffer_length98, align 8, !dbg !1138
  br label %do.end99, !dbg !1138

do.end99:                                         ; preds = %do.body91
  %66 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1141
  %el_torito100 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %66, i32 0, i32 36, !dbg !1142
  %catalog = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito100, i32 0, i32 1, !dbg !1143
  store %struct.isoent* null, %struct.isoent** %catalog, align 8, !dbg !1144
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1145
  %el_torito101 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 36, !dbg !1145
  %catalog_filename102 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito101, i32 0, i32 0, !dbg !1145
  %length103 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename102, i32 0, i32 1, !dbg !1145
  store i64 0, i64* %length103, align 8, !dbg !1145
  %68 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1145
  %el_torito104 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %68, i32 0, i32 36, !dbg !1145
  %catalog_filename105 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito104, i32 0, i32 0, !dbg !1145
  %call106 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %catalog_filename105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i64 12), !dbg !1145
  br label %do.body107, !dbg !1146

do.body107:                                       ; preds = %do.end99
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1147
  %el_torito108 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 36, !dbg !1147
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito108, i32 0, i32 2, !dbg !1147
  %s109 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename, i32 0, i32 0, !dbg !1147
  store i8* null, i8** %s109, align 8, !dbg !1147
  %70 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1147
  %el_torito110 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %70, i32 0, i32 36, !dbg !1147
  %boot_filename111 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito110, i32 0, i32 2, !dbg !1147
  %length112 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename111, i32 0, i32 1, !dbg !1147
  store i64 0, i64* %length112, align 8, !dbg !1147
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1147
  %el_torito113 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 36, !dbg !1147
  %boot_filename114 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito113, i32 0, i32 2, !dbg !1147
  %buffer_length115 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename114, i32 0, i32 2, !dbg !1147
  store i64 0, i64* %buffer_length115, align 8, !dbg !1147
  br label %do.end116, !dbg !1147

do.end116:                                        ; preds = %do.body107
  %72 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1150
  %el_torito117 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %72, i32 0, i32 36, !dbg !1151
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito117, i32 0, i32 3, !dbg !1152
  store %struct.isoent* null, %struct.isoent** %boot, align 8, !dbg !1153
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1154
  %el_torito118 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 36, !dbg !1155
  %platform_id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito118, i32 0, i32 4, !dbg !1156
  store i8 0, i8* %platform_id, align 8, !dbg !1157
  br label %do.body119, !dbg !1158

do.body119:                                       ; preds = %do.end116
  %74 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1159
  %el_torito120 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %74, i32 0, i32 36, !dbg !1159
  %id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito120, i32 0, i32 5, !dbg !1159
  %s121 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id, i32 0, i32 0, !dbg !1159
  store i8* null, i8** %s121, align 8, !dbg !1159
  %75 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1159
  %el_torito122 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %75, i32 0, i32 36, !dbg !1159
  %id123 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito122, i32 0, i32 5, !dbg !1159
  %length124 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id123, i32 0, i32 1, !dbg !1159
  store i64 0, i64* %length124, align 8, !dbg !1159
  %76 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1159
  %el_torito125 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %76, i32 0, i32 36, !dbg !1159
  %id126 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito125, i32 0, i32 5, !dbg !1159
  %buffer_length127 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id126, i32 0, i32 2, !dbg !1159
  store i64 0, i64* %buffer_length127, align 8, !dbg !1159
  br label %do.end128, !dbg !1159

do.end128:                                        ; preds = %do.body119
  %77 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1162
  %el_torito129 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %77, i32 0, i32 36, !dbg !1163
  %boot_load_seg = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito129, i32 0, i32 8, !dbg !1164
  store i16 0, i16* %boot_load_seg, align 2, !dbg !1165
  %78 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1166
  %el_torito130 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %78, i32 0, i32 36, !dbg !1167
  %boot_load_size = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito130, i32 0, i32 9, !dbg !1168
  store i16 4, i16* %boot_load_size, align 4, !dbg !1169
  %79 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1170
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 27, !dbg !1171
  %block_pointers = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 3, !dbg !1172
  store i32* null, i32** %block_pointers, align 8, !dbg !1173
  %80 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1174
  %zisofs131 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %80, i32 0, i32 27, !dbg !1175
  %block_pointers_allocated = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs131, i32 0, i32 4, !dbg !1176
  store i64 0, i64* %block_pointers_allocated, align 8, !dbg !1177
  %81 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1178
  %zisofs132 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %81, i32 0, i32 27, !dbg !1179
  %stream_valid = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs132, i32 0, i32 10, !dbg !1180
  store i32 0, i32* %stream_valid, align 8, !dbg !1181
  %82 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1182
  %zisofs133 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %82, i32 0, i32 27, !dbg !1183
  %compression_level = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs133, i32 0, i32 12, !dbg !1184
  store i32 9, i32* %compression_level, align 8, !dbg !1185
  %83 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1186
  %zisofs134 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %83, i32 0, i32 27, !dbg !1187
  %stream = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs134, i32 0, i32 9, !dbg !1188
  %84 = bitcast %struct.z_stream_s* %stream to i8*, !dbg !1189
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 112, i32 8, i1 false), !dbg !1189
  %85 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1190
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %85, i32 0, i32 37, !dbg !1191
  %86 = bitcast %struct.iso_option* %opt to i32*, !dbg !1192
  %bf.load = load i32, i32* %86, align 8, !dbg !1193
  %bf.clear = and i32 %bf.load, -2, !dbg !1193
  store i32 %bf.clear, i32* %86, align 8, !dbg !1193
  %87 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1194
  %opt135 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %87, i32 0, i32 37, !dbg !1195
  %88 = bitcast %struct.iso_option* %opt135 to i32*, !dbg !1196
  %bf.load136 = load i32, i32* %88, align 8, !dbg !1197
  %bf.clear137 = and i32 %bf.load136, -3, !dbg !1197
  store i32 %bf.clear137, i32* %88, align 8, !dbg !1197
  %89 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1198
  %opt138 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %89, i32 0, i32 37, !dbg !1199
  %90 = bitcast %struct.iso_option* %opt138 to i32*, !dbg !1200
  %bf.load139 = load i32, i32* %90, align 8, !dbg !1201
  %bf.clear140 = and i32 %bf.load139, -5, !dbg !1201
  %bf.set = or i32 %bf.clear140, 4, !dbg !1201
  store i32 %bf.set, i32* %90, align 8, !dbg !1201
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1202
  %opt141 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 37, !dbg !1203
  %92 = bitcast %struct.iso_option* %opt141 to i32*, !dbg !1204
  %bf.load142 = load i32, i32* %92, align 8, !dbg !1205
  %bf.clear143 = and i32 %bf.load142, -9, !dbg !1205
  store i32 %bf.clear143, i32* %92, align 8, !dbg !1205
  %93 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1206
  %opt144 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %93, i32 0, i32 37, !dbg !1207
  %94 = bitcast %struct.iso_option* %opt144 to i32*, !dbg !1208
  %bf.load145 = load i32, i32* %94, align 8, !dbg !1209
  %bf.clear146 = and i32 %bf.load145, -17, !dbg !1209
  store i32 %bf.clear146, i32* %94, align 8, !dbg !1209
  %95 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1210
  %opt147 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %95, i32 0, i32 37, !dbg !1211
  %96 = bitcast %struct.iso_option* %opt147 to i32*, !dbg !1212
  %bf.load148 = load i32, i32* %96, align 8, !dbg !1213
  %bf.clear149 = and i32 %bf.load148, -33, !dbg !1213
  store i32 %bf.clear149, i32* %96, align 8, !dbg !1213
  %97 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1214
  %opt150 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %97, i32 0, i32 37, !dbg !1215
  %98 = bitcast %struct.iso_option* %opt150 to i32*, !dbg !1216
  %bf.load151 = load i32, i32* %98, align 8, !dbg !1217
  %bf.clear152 = and i32 %bf.load151, -65, !dbg !1217
  store i32 %bf.clear152, i32* %98, align 8, !dbg !1217
  %99 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1218
  %opt153 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %99, i32 0, i32 37, !dbg !1219
  %100 = bitcast %struct.iso_option* %opt153 to i32*, !dbg !1220
  %bf.load154 = load i32, i32* %100, align 8, !dbg !1221
  %bf.clear155 = and i32 %bf.load154, -129, !dbg !1221
  store i32 %bf.clear155, i32* %100, align 8, !dbg !1221
  %101 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1222
  %opt156 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %101, i32 0, i32 37, !dbg !1223
  %102 = bitcast %struct.iso_option* %opt156 to i32*, !dbg !1224
  %bf.load157 = load i32, i32* %102, align 8, !dbg !1225
  %bf.clear158 = and i32 %bf.load157, -257, !dbg !1225
  store i32 %bf.clear158, i32* %102, align 8, !dbg !1225
  %103 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1226
  %opt159 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %103, i32 0, i32 37, !dbg !1227
  %104 = bitcast %struct.iso_option* %opt159 to i32*, !dbg !1228
  %bf.load160 = load i32, i32* %104, align 8, !dbg !1229
  %bf.clear161 = and i32 %bf.load160, -1537, !dbg !1229
  store i32 %bf.clear161, i32* %104, align 8, !dbg !1229
  %105 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1230
  %opt162 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %105, i32 0, i32 37, !dbg !1231
  %106 = bitcast %struct.iso_option* %opt162 to i32*, !dbg !1232
  %bf.load163 = load i32, i32* %106, align 8, !dbg !1233
  %bf.clear164 = and i32 %bf.load163, -2049, !dbg !1233
  store i32 %bf.clear164, i32* %106, align 8, !dbg !1233
  %107 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1234
  %opt165 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %107, i32 0, i32 37, !dbg !1235
  %108 = bitcast %struct.iso_option* %opt165 to i32*, !dbg !1236
  %bf.load166 = load i32, i32* %108, align 8, !dbg !1237
  %bf.clear167 = and i32 %bf.load166, -4097, !dbg !1237
  store i32 %bf.clear167, i32* %108, align 8, !dbg !1237
  %109 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1238
  %opt168 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %109, i32 0, i32 37, !dbg !1239
  %110 = bitcast %struct.iso_option* %opt168 to i32*, !dbg !1240
  %bf.load169 = load i32, i32* %110, align 8, !dbg !1241
  %bf.clear170 = and i32 %bf.load169, -114689, !dbg !1241
  %bf.set171 = or i32 %bf.clear170, 16384, !dbg !1241
  store i32 %bf.set171, i32* %110, align 8, !dbg !1241
  %111 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1242
  %opt172 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %111, i32 0, i32 37, !dbg !1243
  %112 = bitcast %struct.iso_option* %opt172 to i32*, !dbg !1244
  %bf.load173 = load i32, i32* %112, align 8, !dbg !1245
  %bf.clear174 = and i32 %bf.load173, -393217, !dbg !1245
  %bf.set175 = or i32 %bf.clear174, 131072, !dbg !1245
  store i32 %bf.set175, i32* %112, align 8, !dbg !1245
  %113 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1246
  %opt176 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %113, i32 0, i32 37, !dbg !1247
  %114 = bitcast %struct.iso_option* %opt176 to i32*, !dbg !1248
  %bf.load177 = load i32, i32* %114, align 8, !dbg !1249
  %bf.clear178 = and i32 %bf.load177, -524289, !dbg !1249
  %bf.set179 = or i32 %bf.clear178, 524288, !dbg !1249
  store i32 %bf.set179, i32* %114, align 8, !dbg !1249
  %115 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1250
  %opt180 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %115, i32 0, i32 37, !dbg !1251
  %116 = bitcast %struct.iso_option* %opt180 to i32*, !dbg !1252
  %bf.load181 = load i32, i32* %116, align 8, !dbg !1253
  %bf.clear182 = and i32 %bf.load181, -1048577, !dbg !1253
  %bf.set183 = or i32 %bf.clear182, 1048576, !dbg !1253
  store i32 %bf.set183, i32* %116, align 8, !dbg !1253
  %117 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1254
  %opt184 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %117, i32 0, i32 37, !dbg !1255
  %118 = bitcast %struct.iso_option* %opt184 to i32*, !dbg !1256
  %bf.load185 = load i32, i32* %118, align 8, !dbg !1257
  %bf.clear186 = and i32 %bf.load185, -2097153, !dbg !1257
  %bf.set187 = or i32 %bf.clear186, 2097152, !dbg !1257
  store i32 %bf.set187, i32* %118, align 8, !dbg !1257
  %119 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1258
  %opt188 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %119, i32 0, i32 37, !dbg !1259
  %120 = bitcast %struct.iso_option* %opt188 to i32*, !dbg !1260
  %bf.load189 = load i32, i32* %120, align 8, !dbg !1261
  %bf.clear190 = and i32 %bf.load189, -4194305, !dbg !1261
  store i32 %bf.clear190, i32* %120, align 8, !dbg !1261
  %121 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1262
  %opt191 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %121, i32 0, i32 37, !dbg !1263
  %122 = bitcast %struct.iso_option* %opt191 to i32*, !dbg !1264
  %bf.load192 = load i32, i32* %122, align 8, !dbg !1265
  %bf.clear193 = and i32 %bf.load192, -25165825, !dbg !1265
  %bf.set194 = or i32 %bf.clear193, 16777216, !dbg !1265
  store i32 %bf.set194, i32* %122, align 8, !dbg !1265
  %123 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1266
  %opt195 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %123, i32 0, i32 37, !dbg !1267
  %124 = bitcast %struct.iso_option* %opt195 to i32*, !dbg !1268
  %bf.load196 = load i32, i32* %124, align 8, !dbg !1269
  %bf.clear197 = and i32 %bf.load196, -33554433, !dbg !1269
  store i32 %bf.clear197, i32* %124, align 8, !dbg !1269
  %125 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1270
  %opt198 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %125, i32 0, i32 37, !dbg !1271
  %126 = bitcast %struct.iso_option* %opt198 to i32*, !dbg !1272
  %bf.load199 = load i32, i32* %126, align 8, !dbg !1273
  %bf.clear200 = and i32 %bf.load199, -67108865, !dbg !1273
  store i32 %bf.clear200, i32* %126, align 8, !dbg !1273
  %127 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1274
  %128 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1275
  %call201 = call %struct.isoent* @isoent_create_virtual_dir(%struct.archive_write* %127, %struct.iso9660* %128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0)), !dbg !1276
  %129 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1277
  %primary202 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %129, i32 0, i32 14, !dbg !1278
  %rootent203 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary202, i32 0, i32 0, !dbg !1279
  store %struct.isoent* %call201, %struct.isoent** %rootent203, align 8, !dbg !1280
  %130 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1281
  %primary204 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %130, i32 0, i32 14, !dbg !1283
  %rootent205 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary204, i32 0, i32 0, !dbg !1284
  %131 = load %struct.isoent*, %struct.isoent** %rootent205, align 8, !dbg !1284
  %cmp206 = icmp eq %struct.isoent* %131, null, !dbg !1285
  br i1 %cmp206, label %if.then207, label %if.end209, !dbg !1286

if.then207:                                       ; preds = %do.end128
  %132 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1287
  %133 = bitcast %struct.iso9660* %132 to i8*, !dbg !1287
  call void @free(i8* %133) #8, !dbg !1289
  %134 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1290
  %archive208 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %134, i32 0, i32 0, !dbg !1291
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive208, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !1292
  store i32 -30, i32* %retval, align 4, !dbg !1293
  br label %return, !dbg !1293

if.end209:                                        ; preds = %do.end128
  %135 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1294
  %primary210 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %135, i32 0, i32 14, !dbg !1295
  %rootent211 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary210, i32 0, i32 0, !dbg !1296
  %136 = load %struct.isoent*, %struct.isoent** %rootent211, align 8, !dbg !1296
  %137 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1297
  %primary212 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %137, i32 0, i32 14, !dbg !1298
  %rootent213 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary212, i32 0, i32 0, !dbg !1299
  %138 = load %struct.isoent*, %struct.isoent** %rootent213, align 8, !dbg !1299
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %138, i32 0, i32 2, !dbg !1300
  store %struct.isoent* %136, %struct.isoent** %parent, align 8, !dbg !1301
  %139 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1302
  %primary214 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %139, i32 0, i32 14, !dbg !1303
  %rootent215 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary214, i32 0, i32 0, !dbg !1304
  %140 = load %struct.isoent*, %struct.isoent** %rootent215, align 8, !dbg !1304
  %141 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1305
  %cur_dirent = getelementptr inbounds %struct.iso9660, %struct.iso9660* %141, i32 0, i32 3, !dbg !1306
  store %struct.isoent* %140, %struct.isoent** %cur_dirent, align 8, !dbg !1307
  br label %do.body216, !dbg !1308

do.body216:                                       ; preds = %if.end209
  %142 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1309
  %cur_dirstr = getelementptr inbounds %struct.iso9660, %struct.iso9660* %142, i32 0, i32 4, !dbg !1309
  %s217 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr, i32 0, i32 0, !dbg !1309
  store i8* null, i8** %s217, align 8, !dbg !1309
  %143 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1309
  %cur_dirstr218 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %143, i32 0, i32 4, !dbg !1309
  %length219 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr218, i32 0, i32 1, !dbg !1309
  store i64 0, i64* %length219, align 8, !dbg !1309
  %144 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1309
  %cur_dirstr220 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %144, i32 0, i32 4, !dbg !1309
  %buffer_length221 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr220, i32 0, i32 2, !dbg !1309
  store i64 0, i64* %buffer_length221, align 8, !dbg !1309
  br label %do.end222, !dbg !1309

do.end222:                                        ; preds = %do.body216
  %145 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1312
  %cur_dirstr223 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %145, i32 0, i32 4, !dbg !1313
  %call224 = call %struct.archive_string* @archive_string_ensure(%struct.archive_string* %cur_dirstr223, i64 1), !dbg !1314
  %146 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1315
  %cur_dirstr225 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %146, i32 0, i32 4, !dbg !1316
  %s226 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr225, i32 0, i32 0, !dbg !1317
  %147 = load i8*, i8** %s226, align 8, !dbg !1317
  %arrayidx = getelementptr inbounds i8, i8* %147, i64 0, !dbg !1315
  store i8 0, i8* %arrayidx, align 1, !dbg !1318
  %148 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1319
  %sconv_to_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %148, i32 0, i32 9, !dbg !1320
  store %struct.archive_string_conv* null, %struct.archive_string_conv** %sconv_to_utf16be, align 8, !dbg !1321
  %149 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1322
  %sconv_from_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %149, i32 0, i32 10, !dbg !1323
  store %struct.archive_string_conv* null, %struct.archive_string_conv** %sconv_from_utf16be, align 8, !dbg !1324
  %150 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1325
  %151 = bitcast %struct.iso9660* %150 to i8*, !dbg !1325
  %152 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1326
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %152, i32 0, i32 14, !dbg !1327
  store i8* %151, i8** %format_data, align 8, !dbg !1328
  %153 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1329
  %format_name = getelementptr inbounds %struct.archive_write, %struct.archive_write* %153, i32 0, i32 15, !dbg !1330
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8** %format_name, align 8, !dbg !1331
  %154 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1332
  %format_options = getelementptr inbounds %struct.archive_write, %struct.archive_write* %154, i32 0, i32 17, !dbg !1333
  store i32 (%struct.archive_write*, i8*, i8*)* @iso9660_options, i32 (%struct.archive_write*, i8*, i8*)** %format_options, align 8, !dbg !1334
  %155 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1335
  %format_write_header = getelementptr inbounds %struct.archive_write, %struct.archive_write* %155, i32 0, i32 19, !dbg !1336
  store i32 (%struct.archive_write*, %struct.archive_entry*)* @iso9660_write_header, i32 (%struct.archive_write*, %struct.archive_entry*)** %format_write_header, align 8, !dbg !1337
  %156 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1338
  %format_write_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %156, i32 0, i32 20, !dbg !1339
  store i64 (%struct.archive_write*, i8*, i64)* @iso9660_write_data, i64 (%struct.archive_write*, i8*, i64)** %format_write_data, align 8, !dbg !1340
  %157 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1341
  %format_finish_entry = getelementptr inbounds %struct.archive_write, %struct.archive_write* %157, i32 0, i32 18, !dbg !1342
  store i32 (%struct.archive_write*)* @iso9660_finish_entry, i32 (%struct.archive_write*)** %format_finish_entry, align 8, !dbg !1343
  %158 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1344
  %format_close = getelementptr inbounds %struct.archive_write, %struct.archive_write* %158, i32 0, i32 21, !dbg !1345
  store i32 (%struct.archive_write*)* @iso9660_close, i32 (%struct.archive_write*)** %format_close, align 8, !dbg !1346
  %159 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1347
  %format_free227 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %159, i32 0, i32 22, !dbg !1348
  store i32 (%struct.archive_write*)* @iso9660_free, i32 (%struct.archive_write*)** %format_free227, align 8, !dbg !1349
  %160 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1350
  %archive228 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %160, i32 0, i32 0, !dbg !1351
  %archive_format = getelementptr inbounds %struct.archive, %struct.archive* %archive228, i32 0, i32 3, !dbg !1352
  store i32 262144, i32* %archive_format, align 8, !dbg !1353
  %161 = load %struct.archive_write*, %struct.archive_write** %a, align 8, !dbg !1354
  %archive229 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %161, i32 0, i32 0, !dbg !1355
  %archive_format_name = getelementptr inbounds %struct.archive, %struct.archive* %archive229, i32 0, i32 4, !dbg !1356
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8** %archive_format_name, align 8, !dbg !1357
  store i32 0, i32* %retval, align 4, !dbg !1358
  br label %return, !dbg !1358

return:                                           ; preds = %do.end222, %if.then207, %if.then8, %if.then
  %162 = load i32, i32* %retval, align 4, !dbg !1359
  ret i32 %162, !dbg !1359
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @__archive_check_magic(%struct.archive*, i32, i32, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare void @archive_set_error(%struct.archive*, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @isofile_init_entry_list(%struct.iso9660* %iso9660) #0 !dbg !942 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1360, metadata !986), !dbg !1361
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1362
  %all_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 11, !dbg !1363
  %first = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list, i32 0, i32 0, !dbg !1364
  store %struct.isofile* null, %struct.isofile** %first, align 8, !dbg !1365
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1366
  %all_file_list1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 11, !dbg !1367
  %first2 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list1, i32 0, i32 0, !dbg !1368
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1369
  %all_file_list3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 11, !dbg !1370
  %last = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list3, i32 0, i32 1, !dbg !1371
  store %struct.isofile** %first2, %struct.isofile*** %last, align 8, !dbg !1372
  ret void, !dbg !1373
}

; Function Attrs: nounwind uwtable
define internal void @isofile_init_entry_data_file_list(%struct.iso9660* %iso9660) #0 !dbg !943 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1374, metadata !986), !dbg !1375
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1376
  %data_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 12, !dbg !1377
  %first = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list, i32 0, i32 0, !dbg !1378
  store %struct.isofile* null, %struct.isofile** %first, align 8, !dbg !1379
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1380
  %data_file_list1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 12, !dbg !1381
  %first2 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list1, i32 0, i32 0, !dbg !1382
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1383
  %data_file_list3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 12, !dbg !1384
  %last = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list3, i32 0, i32 1, !dbg !1385
  store %struct.isofile** %first2, %struct.isofile*** %last, align 8, !dbg !1386
  ret void, !dbg !1387
}

; Function Attrs: nounwind uwtable
define internal void @isofile_init_hardlinks(%struct.iso9660* %iso9660) #0 !dbg !944 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1388, metadata !986), !dbg !1389
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1390
  %hardlink_rbtree = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 13, !dbg !1391
  call void @__archive_rb_tree_init(%struct.archive_rb_tree* %hardlink_rbtree, %struct.archive_rb_tree_ops* @isofile_init_hardlinks.rb_ops), !dbg !1392
  ret void, !dbg !1393
}

declare %struct.archive_string* @archive_strncat(%struct.archive_string*, i8*, i64) #2

declare i8* @archive_version_string() #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal %struct.isoent* @isoent_create_virtual_dir(%struct.archive_write* %a, %struct.iso9660* %iso9660, i8* %pathname) #0 !dbg !947 {
entry:
  %retval = alloca %struct.isoent*, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %pathname.addr = alloca i8*, align 8
  %file = alloca %struct.isofile*, align 8
  %isoent = alloca %struct.isoent*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !1394, metadata !986), !dbg !1395
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !1396, metadata !986), !dbg !1397
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1398, metadata !986), !dbg !1399
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !1400, metadata !986), !dbg !1401
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !1402, metadata !986), !dbg !1403
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1404
  %call = call %struct.isofile* @isofile_new(%struct.archive_write* %0, %struct.archive_entry* null), !dbg !1405
  store %struct.isofile* %call, %struct.isofile** %file, align 8, !dbg !1406
  %1 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1407
  %cmp = icmp eq %struct.isofile* %1, null, !dbg !1409
  br i1 %cmp, label %if.then, label %if.end, !dbg !1410

if.then:                                          ; preds = %entry
  store %struct.isoent* null, %struct.isoent** %retval, align 8, !dbg !1411
  br label %return, !dbg !1411

if.end:                                           ; preds = %entry
  %2 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1412
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %2, i32 0, i32 4, !dbg !1413
  %3 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !1413
  %4 = load i8*, i8** %pathname.addr, align 8, !dbg !1414
  call void @archive_entry_set_pathname(%struct.archive_entry* %3, i8* %4), !dbg !1415
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1416
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 4, !dbg !1417
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !1417
  call void @archive_entry_unset_mtime(%struct.archive_entry* %6), !dbg !1418
  %7 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1419
  %entry3 = getelementptr inbounds %struct.isofile, %struct.isofile* %7, i32 0, i32 4, !dbg !1420
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry3, align 8, !dbg !1420
  call void @archive_entry_unset_atime(%struct.archive_entry* %8), !dbg !1421
  %9 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1422
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %9, i32 0, i32 4, !dbg !1423
  %10 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !1423
  call void @archive_entry_unset_ctime(%struct.archive_entry* %10), !dbg !1424
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1425
  %entry5 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 4, !dbg !1426
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry5, align 8, !dbg !1426
  %call6 = call i32 @getuid() #8, !dbg !1427
  %conv = zext i32 %call6 to i64, !dbg !1427
  call void @archive_entry_set_uid(%struct.archive_entry* %12, i64 %conv), !dbg !1428
  %13 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1430
  %entry7 = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 4, !dbg !1431
  %14 = load %struct.archive_entry*, %struct.archive_entry** %entry7, align 8, !dbg !1431
  %call8 = call i32 @getgid() #8, !dbg !1432
  %conv9 = zext i32 %call8 to i64, !dbg !1432
  call void @archive_entry_set_gid(%struct.archive_entry* %14, i64 %conv9), !dbg !1433
  %15 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1434
  %entry10 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 4, !dbg !1435
  %16 = load %struct.archive_entry*, %struct.archive_entry** %entry10, align 8, !dbg !1435
  call void @archive_entry_set_mode(%struct.archive_entry* %16, i32 16749), !dbg !1436
  %17 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1437
  %entry11 = getelementptr inbounds %struct.isofile, %struct.isofile* %17, i32 0, i32 4, !dbg !1438
  %18 = load %struct.archive_entry*, %struct.archive_entry** %entry11, align 8, !dbg !1438
  call void @archive_entry_set_nlink(%struct.archive_entry* %18, i32 2), !dbg !1439
  %19 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1440
  %20 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1442
  %call12 = call i32 @isofile_gen_utility_names(%struct.archive_write* %19, %struct.isofile* %20), !dbg !1443
  %cmp13 = icmp slt i32 %call12, -20, !dbg !1444
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !1445

if.then15:                                        ; preds = %if.end
  %21 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1446
  call void @isofile_free(%struct.isofile* %21), !dbg !1448
  store %struct.isoent* null, %struct.isoent** %retval, align 8, !dbg !1449
  br label %return, !dbg !1449

if.end16:                                         ; preds = %if.end
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !1450
  %23 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1451
  call void @isofile_add_entry(%struct.iso9660* %22, %struct.isofile* %23), !dbg !1452
  %24 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !1453
  %call17 = call %struct.isoent* @isoent_new(%struct.isofile* %24), !dbg !1454
  store %struct.isoent* %call17, %struct.isoent** %isoent, align 8, !dbg !1455
  %25 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !1456
  %cmp18 = icmp eq %struct.isoent* %25, null, !dbg !1458
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !1459

if.then20:                                        ; preds = %if.end16
  store %struct.isoent* null, %struct.isoent** %retval, align 8, !dbg !1460
  br label %return, !dbg !1460

if.end21:                                         ; preds = %if.end16
  %26 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !1461
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 22, !dbg !1462
  %bf.load = load i8, i8* %dir, align 8, !dbg !1463
  %bf.clear = and i8 %bf.load, -3, !dbg !1463
  %bf.set = or i8 %bf.clear, 2, !dbg !1463
  store i8 %bf.set, i8* %dir, align 8, !dbg !1463
  %27 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !1464
  %virtual = getelementptr inbounds %struct.isoent, %struct.isoent* %27, i32 0, i32 22, !dbg !1465
  %bf.load22 = load i8, i8* %virtual, align 8, !dbg !1466
  %bf.clear23 = and i8 %bf.load22, -2, !dbg !1466
  %bf.set24 = or i8 %bf.clear23, 1, !dbg !1466
  store i8 %bf.set24, i8* %virtual, align 8, !dbg !1466
  %28 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !1467
  store %struct.isoent* %28, %struct.isoent** %retval, align 8, !dbg !1468
  br label %return, !dbg !1468

return:                                           ; preds = %if.end21, %if.then20, %if.then15, %if.then
  %29 = load %struct.isoent*, %struct.isoent** %retval, align 8, !dbg !1469
  ret %struct.isoent* %29, !dbg !1469
}

; Function Attrs: nounwind
declare void @free(i8*) #3

declare %struct.archive_string* @archive_string_ensure(%struct.archive_string*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @iso9660_options(%struct.archive_write* %a, i8* %key, i8* %value) #0 !dbg !571 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %p = alloca i8*, align 8
  %r = alloca i32, align 4
  %seg = alloca i32, align 4
  %num = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !1470, metadata !986), !dbg !1471
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1472, metadata !986), !dbg !1473
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !1474, metadata !986), !dbg !1475
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !1476, metadata !986), !dbg !1477
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1478
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !1479
  %1 = load i8*, i8** %format_data, align 8, !dbg !1479
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !1478
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !1477
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1480, metadata !986), !dbg !1481
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1482, metadata !986), !dbg !1483
  %3 = load i8*, i8** %key.addr, align 8, !dbg !1484
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !1484
  %4 = load i8, i8* %arrayidx, align 1, !dbg !1484
  %conv = sext i8 %4 to i32, !dbg !1484
  switch i32 %conv, label %sw.epilog [
    i32 97, label %sw.bb
    i32 98, label %sw.bb31
    i32 99, label %sw.bb233
    i32 105, label %sw.bb279
    i32 106, label %sw.bb313
    i32 108, label %sw.bb347
    i32 112, label %sw.bb374
    i32 114, label %sw.bb402
    i32 118, label %sw.bb450
    i32 122, label %sw.bb465
  ], !dbg !1485

sw.bb:                                            ; preds = %entry
  %5 = load i8*, i8** %key.addr, align 8, !dbg !1486
  %call = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0)) #9, !dbg !1489
  %cmp = icmp eq i32 %call, 0, !dbg !1490
  br i1 %cmp, label %if.then, label %if.end, !dbg !1491

if.then:                                          ; preds = %sw.bb
  %6 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1492
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1494
  %abstract_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 24, !dbg !1495
  %8 = load i8*, i8** %key.addr, align 8, !dbg !1496
  %9 = load i8*, i8** %value.addr, align 8, !dbg !1497
  %call2 = call i32 @get_str_opt(%struct.archive_write* %6, %struct.archive_string* %abstract_file_identifier, i64 37, i8* %8, i8* %9), !dbg !1498
  store i32 %call2, i32* %r, align 4, !dbg !1499
  %10 = load i32, i32* %r, align 4, !dbg !1500
  %cmp3 = icmp eq i32 %10, 0, !dbg !1501
  %conv4 = zext i1 %cmp3 to i32, !dbg !1501
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1502
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 37, !dbg !1503
  %12 = bitcast %struct.iso_option* %opt to i32*, !dbg !1504
  %bf.load = load i32, i32* %12, align 8, !dbg !1505
  %bf.value = and i32 %conv4, 1, !dbg !1505
  %bf.clear = and i32 %bf.load, -2, !dbg !1505
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !1505
  store i32 %bf.set, i32* %12, align 8, !dbg !1505
  %13 = load i32, i32* %r, align 4, !dbg !1506
  store i32 %13, i32* %retval, align 4, !dbg !1507
  br label %return, !dbg !1507

if.end:                                           ; preds = %sw.bb
  %14 = load i8*, i8** %key.addr, align 8, !dbg !1508
  %call5 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0)) #9, !dbg !1510
  %cmp6 = icmp eq i32 %call5, 0, !dbg !1511
  br i1 %cmp6, label %if.then8, label %if.end17, !dbg !1512

if.then8:                                         ; preds = %if.end
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1513
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1515
  %application_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 22, !dbg !1516
  %17 = load i8*, i8** %key.addr, align 8, !dbg !1517
  %18 = load i8*, i8** %value.addr, align 8, !dbg !1518
  %call9 = call i32 @get_str_opt(%struct.archive_write* %15, %struct.archive_string* %application_identifier, i64 128, i8* %17, i8* %18), !dbg !1519
  store i32 %call9, i32* %r, align 4, !dbg !1520
  %19 = load i32, i32* %r, align 4, !dbg !1521
  %cmp10 = icmp eq i32 %19, 0, !dbg !1522
  %conv11 = zext i1 %cmp10 to i32, !dbg !1522
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1523
  %opt12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 37, !dbg !1524
  %21 = bitcast %struct.iso_option* %opt12 to i32*, !dbg !1525
  %bf.load13 = load i32, i32* %21, align 8, !dbg !1526
  %bf.value14 = and i32 %conv11, 1, !dbg !1526
  %bf.shl = shl i32 %bf.value14, 1, !dbg !1526
  %bf.clear15 = and i32 %bf.load13, -3, !dbg !1526
  %bf.set16 = or i32 %bf.clear15, %bf.shl, !dbg !1526
  store i32 %bf.set16, i32* %21, align 8, !dbg !1526
  %22 = load i32, i32* %r, align 4, !dbg !1527
  store i32 %22, i32* %retval, align 4, !dbg !1528
  br label %return, !dbg !1528

if.end17:                                         ; preds = %if.end
  %23 = load i8*, i8** %key.addr, align 8, !dbg !1529
  %call18 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0)) #9, !dbg !1531
  %cmp19 = icmp eq i32 %call18, 0, !dbg !1532
  br i1 %cmp19, label %if.then21, label %if.end30, !dbg !1533

if.then21:                                        ; preds = %if.end17
  %24 = load i8*, i8** %value.addr, align 8, !dbg !1534
  %cmp22 = icmp ne i8* %24, null, !dbg !1536
  %conv23 = zext i1 %cmp22 to i32, !dbg !1536
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1537
  %opt24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 37, !dbg !1538
  %26 = bitcast %struct.iso_option* %opt24 to i32*, !dbg !1539
  %bf.load25 = load i32, i32* %26, align 8, !dbg !1540
  %bf.value26 = and i32 %conv23, 1, !dbg !1540
  %bf.shl27 = shl i32 %bf.value26, 2, !dbg !1540
  %bf.clear28 = and i32 %bf.load25, -5, !dbg !1540
  %bf.set29 = or i32 %bf.clear28, %bf.shl27, !dbg !1540
  store i32 %bf.set29, i32* %26, align 8, !dbg !1540
  store i32 0, i32* %retval, align 4, !dbg !1541
  br label %return, !dbg !1541

if.end30:                                         ; preds = %if.end17
  br label %sw.epilog, !dbg !1542

sw.bb31:                                          ; preds = %entry
  %27 = load i8*, i8** %key.addr, align 8, !dbg !1543
  %call32 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0)) #9, !dbg !1545
  %cmp33 = icmp eq i32 %call32, 0, !dbg !1546
  br i1 %cmp33, label %if.then35, label %if.end45, !dbg !1547

if.then35:                                        ; preds = %sw.bb31
  %28 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1548
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1550
  %bibliographic_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 25, !dbg !1551
  %30 = load i8*, i8** %key.addr, align 8, !dbg !1552
  %31 = load i8*, i8** %value.addr, align 8, !dbg !1553
  %call36 = call i32 @get_str_opt(%struct.archive_write* %28, %struct.archive_string* %bibliographic_file_identifier, i64 37, i8* %30, i8* %31), !dbg !1554
  store i32 %call36, i32* %r, align 4, !dbg !1555
  %32 = load i32, i32* %r, align 4, !dbg !1556
  %cmp37 = icmp eq i32 %32, 0, !dbg !1557
  %conv38 = zext i1 %cmp37 to i32, !dbg !1557
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1558
  %opt39 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 37, !dbg !1559
  %34 = bitcast %struct.iso_option* %opt39 to i32*, !dbg !1560
  %bf.load40 = load i32, i32* %34, align 8, !dbg !1561
  %bf.value41 = and i32 %conv38, 1, !dbg !1561
  %bf.shl42 = shl i32 %bf.value41, 3, !dbg !1561
  %bf.clear43 = and i32 %bf.load40, -9, !dbg !1561
  %bf.set44 = or i32 %bf.clear43, %bf.shl42, !dbg !1561
  store i32 %bf.set44, i32* %34, align 8, !dbg !1561
  %35 = load i32, i32* %r, align 4, !dbg !1562
  store i32 %35, i32* %retval, align 4, !dbg !1563
  br label %return, !dbg !1563

if.end45:                                         ; preds = %sw.bb31
  %36 = load i8*, i8** %key.addr, align 8, !dbg !1564
  %call46 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0)) #9, !dbg !1566
  %cmp47 = icmp eq i32 %call46, 0, !dbg !1567
  br i1 %cmp47, label %if.then49, label %if.end67, !dbg !1568

if.then49:                                        ; preds = %if.end45
  %37 = load i8*, i8** %value.addr, align 8, !dbg !1569
  %cmp50 = icmp eq i8* %37, null, !dbg !1572
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !1573

if.then52:                                        ; preds = %if.then49
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1574
  %opt53 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 37, !dbg !1575
  %39 = bitcast %struct.iso_option* %opt53 to i32*, !dbg !1576
  %bf.load54 = load i32, i32* %39, align 8, !dbg !1577
  %bf.clear55 = and i32 %bf.load54, -17, !dbg !1577
  store i32 %bf.clear55, i32* %39, align 8, !dbg !1577
  br label %if.end66, !dbg !1574

if.else:                                          ; preds = %if.then49
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1578
  %opt56 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 37, !dbg !1580
  %41 = bitcast %struct.iso_option* %opt56 to i32*, !dbg !1581
  %bf.load57 = load i32, i32* %41, align 8, !dbg !1582
  %bf.clear58 = and i32 %bf.load57, -17, !dbg !1582
  %bf.set59 = or i32 %bf.clear58, 16, !dbg !1582
  store i32 %bf.set59, i32* %41, align 8, !dbg !1582
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1583
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 36, !dbg !1583
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 2, !dbg !1583
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename, i32 0, i32 1, !dbg !1583
  store i64 0, i64* %length, align 8, !dbg !1583
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1583
  %el_torito60 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 36, !dbg !1583
  %boot_filename61 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito60, i32 0, i32 2, !dbg !1583
  %44 = load i8*, i8** %value.addr, align 8, !dbg !1583
  %45 = load i8*, i8** %value.addr, align 8, !dbg !1583
  %cmp62 = icmp eq i8* %45, null, !dbg !1583
  br i1 %cmp62, label %cond.true, label %cond.false, !dbg !1583

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !1584

cond.false:                                       ; preds = %if.else
  %46 = load i8*, i8** %value.addr, align 8, !dbg !1586
  %call64 = call i64 @strlen(i8* %46) #9, !dbg !1586
  br label %cond.end, !dbg !1586

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call64, %cond.false ], !dbg !1588
  %call65 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %boot_filename61, i8* %44, i64 %cond), !dbg !1588
  br label %if.end66

if.end66:                                         ; preds = %cond.end, %if.then52
  store i32 0, i32* %retval, align 4, !dbg !1590
  br label %return, !dbg !1590

if.end67:                                         ; preds = %if.end45
  %47 = load i8*, i8** %key.addr, align 8, !dbg !1591
  %call68 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0)) #9, !dbg !1593
  %cmp69 = icmp eq i32 %call68, 0, !dbg !1594
  br i1 %cmp69, label %if.then71, label %if.end82, !dbg !1595

if.then71:                                        ; preds = %if.end67
  %48 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1596
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1598
  %el_torito72 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 36, !dbg !1599
  %catalog_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito72, i32 0, i32 0, !dbg !1600
  %50 = load i8*, i8** %key.addr, align 8, !dbg !1601
  %51 = load i8*, i8** %value.addr, align 8, !dbg !1602
  %call73 = call i32 @get_str_opt(%struct.archive_write* %48, %struct.archive_string* %catalog_filename, i64 1024, i8* %50, i8* %51), !dbg !1603
  store i32 %call73, i32* %r, align 4, !dbg !1604
  %52 = load i32, i32* %r, align 4, !dbg !1605
  %cmp74 = icmp eq i32 %52, 0, !dbg !1606
  %conv75 = zext i1 %cmp74 to i32, !dbg !1606
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1607
  %opt76 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %53, i32 0, i32 37, !dbg !1608
  %54 = bitcast %struct.iso_option* %opt76 to i32*, !dbg !1609
  %bf.load77 = load i32, i32* %54, align 8, !dbg !1610
  %bf.value78 = and i32 %conv75, 1, !dbg !1610
  %bf.shl79 = shl i32 %bf.value78, 5, !dbg !1610
  %bf.clear80 = and i32 %bf.load77, -33, !dbg !1610
  %bf.set81 = or i32 %bf.clear80, %bf.shl79, !dbg !1610
  store i32 %bf.set81, i32* %54, align 8, !dbg !1610
  %55 = load i32, i32* %r, align 4, !dbg !1611
  store i32 %55, i32* %retval, align 4, !dbg !1612
  br label %return, !dbg !1612

if.end82:                                         ; preds = %if.end67
  %56 = load i8*, i8** %key.addr, align 8, !dbg !1613
  %call83 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0)) #9, !dbg !1615
  %cmp84 = icmp eq i32 %call83, 0, !dbg !1616
  br i1 %cmp84, label %if.then86, label %if.end95, !dbg !1617

if.then86:                                        ; preds = %if.end82
  %57 = load i8*, i8** %value.addr, align 8, !dbg !1618
  %cmp87 = icmp ne i8* %57, null, !dbg !1620
  %conv88 = zext i1 %cmp87 to i32, !dbg !1620
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1621
  %opt89 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 37, !dbg !1622
  %59 = bitcast %struct.iso_option* %opt89 to i32*, !dbg !1623
  %bf.load90 = load i32, i32* %59, align 8, !dbg !1624
  %bf.value91 = and i32 %conv88, 1, !dbg !1624
  %bf.shl92 = shl i32 %bf.value91, 6, !dbg !1624
  %bf.clear93 = and i32 %bf.load90, -65, !dbg !1624
  %bf.set94 = or i32 %bf.clear93, %bf.shl92, !dbg !1624
  store i32 %bf.set94, i32* %59, align 8, !dbg !1624
  store i32 0, i32* %retval, align 4, !dbg !1625
  br label %return, !dbg !1625

if.end95:                                         ; preds = %if.end82
  %60 = load i8*, i8** %key.addr, align 8, !dbg !1626
  %call96 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0)) #9, !dbg !1628
  %cmp97 = icmp eq i32 %call96, 0, !dbg !1629
  br i1 %cmp97, label %if.then99, label %if.end173, !dbg !1630

if.then99:                                        ; preds = %if.end95
  call void @llvm.dbg.declare(metadata i32* %seg, metadata !1631, metadata !986), !dbg !1633
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1634
  %opt100 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 37, !dbg !1635
  %62 = bitcast %struct.iso_option* %opt100 to i32*, !dbg !1636
  %bf.load101 = load i32, i32* %62, align 8, !dbg !1637
  %bf.clear102 = and i32 %bf.load101, -129, !dbg !1637
  store i32 %bf.clear102, i32* %62, align 8, !dbg !1637
  %63 = load i8*, i8** %value.addr, align 8, !dbg !1638
  %cmp103 = icmp eq i8* %63, null, !dbg !1640
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !1641

if.then105:                                       ; preds = %if.then99
  br label %invalid_value, !dbg !1642

if.end106:                                        ; preds = %if.then99
  store i32 0, i32* %seg, align 4, !dbg !1643
  %64 = load i8*, i8** %value.addr, align 8, !dbg !1644
  store i8* %64, i8** %p, align 8, !dbg !1645
  %65 = load i8*, i8** %p, align 8, !dbg !1646
  %arrayidx107 = getelementptr inbounds i8, i8* %65, i64 0, !dbg !1646
  %66 = load i8, i8* %arrayidx107, align 1, !dbg !1646
  %conv108 = sext i8 %66 to i32, !dbg !1646
  %cmp109 = icmp eq i32 %conv108, 48, !dbg !1648
  br i1 %cmp109, label %land.lhs.true, label %if.end120, !dbg !1649

land.lhs.true:                                    ; preds = %if.end106
  %67 = load i8*, i8** %p, align 8, !dbg !1650
  %arrayidx111 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !1650
  %68 = load i8, i8* %arrayidx111, align 1, !dbg !1650
  %conv112 = sext i8 %68 to i32, !dbg !1650
  %cmp113 = icmp eq i32 %conv112, 120, !dbg !1652
  br i1 %cmp113, label %if.then119, label %lor.lhs.false, !dbg !1653

lor.lhs.false:                                    ; preds = %land.lhs.true
  %69 = load i8*, i8** %p, align 8, !dbg !1654
  %arrayidx115 = getelementptr inbounds i8, i8* %69, i64 1, !dbg !1654
  %70 = load i8, i8* %arrayidx115, align 1, !dbg !1654
  %conv116 = sext i8 %70 to i32, !dbg !1654
  %cmp117 = icmp eq i32 %conv116, 88, !dbg !1656
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !1657

if.then119:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %71 = load i8*, i8** %p, align 8, !dbg !1658
  %add.ptr = getelementptr inbounds i8, i8* %71, i64 2, !dbg !1658
  store i8* %add.ptr, i8** %p, align 8, !dbg !1658
  br label %if.end120, !dbg !1659

if.end120:                                        ; preds = %if.then119, %lor.lhs.false, %if.end106
  br label %while.cond, !dbg !1660

while.cond:                                       ; preds = %if.end166, %if.end120
  %72 = load i8*, i8** %p, align 8, !dbg !1661
  %73 = load i8, i8* %72, align 1, !dbg !1663
  %tobool = icmp ne i8 %73, 0, !dbg !1664
  br i1 %tobool, label %while.body, label %while.end, !dbg !1664

while.body:                                       ; preds = %while.cond
  %74 = load i32, i32* %seg, align 4, !dbg !1665
  %tobool121 = icmp ne i32 %74, 0, !dbg !1665
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !1668

if.then122:                                       ; preds = %while.body
  %75 = load i32, i32* %seg, align 4, !dbg !1669
  %shl = shl i32 %75, 4, !dbg !1669
  store i32 %shl, i32* %seg, align 4, !dbg !1669
  br label %if.end123, !dbg !1670

if.end123:                                        ; preds = %if.then122, %while.body
  %76 = load i8*, i8** %p, align 8, !dbg !1671
  %77 = load i8, i8* %76, align 1, !dbg !1673
  %conv124 = sext i8 %77 to i32, !dbg !1673
  %cmp125 = icmp sge i32 %conv124, 65, !dbg !1674
  br i1 %cmp125, label %land.lhs.true127, label %if.else134, !dbg !1675

land.lhs.true127:                                 ; preds = %if.end123
  %78 = load i8*, i8** %p, align 8, !dbg !1676
  %79 = load i8, i8* %78, align 1, !dbg !1678
  %conv128 = sext i8 %79 to i32, !dbg !1678
  %cmp129 = icmp sle i32 %conv128, 70, !dbg !1679
  br i1 %cmp129, label %if.then131, label %if.else134, !dbg !1680

if.then131:                                       ; preds = %land.lhs.true127
  %80 = load i8*, i8** %p, align 8, !dbg !1681
  %81 = load i8, i8* %80, align 1, !dbg !1682
  %conv132 = sext i8 %81 to i32, !dbg !1682
  %sub = sub nsw i32 %conv132, 65, !dbg !1683
  %add = add nsw i32 %sub, 10, !dbg !1684
  %82 = load i32, i32* %seg, align 4, !dbg !1685
  %add133 = add i32 %82, %add, !dbg !1685
  store i32 %add133, i32* %seg, align 4, !dbg !1685
  br label %if.end162, !dbg !1686

if.else134:                                       ; preds = %land.lhs.true127, %if.end123
  %83 = load i8*, i8** %p, align 8, !dbg !1687
  %84 = load i8, i8* %83, align 1, !dbg !1689
  %conv135 = sext i8 %84 to i32, !dbg !1689
  %cmp136 = icmp sge i32 %conv135, 97, !dbg !1690
  br i1 %cmp136, label %land.lhs.true138, label %if.else147, !dbg !1691

land.lhs.true138:                                 ; preds = %if.else134
  %85 = load i8*, i8** %p, align 8, !dbg !1692
  %86 = load i8, i8* %85, align 1, !dbg !1694
  %conv139 = sext i8 %86 to i32, !dbg !1694
  %cmp140 = icmp sle i32 %conv139, 102, !dbg !1695
  br i1 %cmp140, label %if.then142, label %if.else147, !dbg !1696

if.then142:                                       ; preds = %land.lhs.true138
  %87 = load i8*, i8** %p, align 8, !dbg !1697
  %88 = load i8, i8* %87, align 1, !dbg !1698
  %conv143 = sext i8 %88 to i32, !dbg !1698
  %sub144 = sub nsw i32 %conv143, 97, !dbg !1699
  %add145 = add nsw i32 %sub144, 10, !dbg !1700
  %89 = load i32, i32* %seg, align 4, !dbg !1701
  %add146 = add i32 %89, %add145, !dbg !1701
  store i32 %add146, i32* %seg, align 4, !dbg !1701
  br label %if.end161, !dbg !1702

if.else147:                                       ; preds = %land.lhs.true138, %if.else134
  %90 = load i8*, i8** %p, align 8, !dbg !1703
  %91 = load i8, i8* %90, align 1, !dbg !1705
  %conv148 = sext i8 %91 to i32, !dbg !1705
  %cmp149 = icmp sge i32 %conv148, 48, !dbg !1706
  br i1 %cmp149, label %land.lhs.true151, label %if.else159, !dbg !1707

land.lhs.true151:                                 ; preds = %if.else147
  %92 = load i8*, i8** %p, align 8, !dbg !1708
  %93 = load i8, i8* %92, align 1, !dbg !1710
  %conv152 = sext i8 %93 to i32, !dbg !1710
  %cmp153 = icmp sle i32 %conv152, 57, !dbg !1711
  br i1 %cmp153, label %if.then155, label %if.else159, !dbg !1712

if.then155:                                       ; preds = %land.lhs.true151
  %94 = load i8*, i8** %p, align 8, !dbg !1713
  %95 = load i8, i8* %94, align 1, !dbg !1714
  %conv156 = sext i8 %95 to i32, !dbg !1714
  %sub157 = sub nsw i32 %conv156, 48, !dbg !1715
  %96 = load i32, i32* %seg, align 4, !dbg !1716
  %add158 = add i32 %96, %sub157, !dbg !1716
  store i32 %add158, i32* %seg, align 4, !dbg !1716
  br label %if.end160, !dbg !1717

if.else159:                                       ; preds = %land.lhs.true151, %if.else147
  br label %invalid_value, !dbg !1718

if.end160:                                        ; preds = %if.then155
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then142
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then131
  %97 = load i32, i32* %seg, align 4, !dbg !1719
  %cmp163 = icmp ugt i32 %97, 65535, !dbg !1721
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !1722

if.then165:                                       ; preds = %if.end162
  %98 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1723
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %98, i32 0, i32 0, !dbg !1725
  %99 = load i8*, i8** %key.addr, align 8, !dbg !1726
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i32 0, i32 0), i8* %99), !dbg !1727
  store i32 -30, i32* %retval, align 4, !dbg !1728
  br label %return, !dbg !1728

if.end166:                                        ; preds = %if.end162
  %100 = load i8*, i8** %p, align 8, !dbg !1729
  %incdec.ptr = getelementptr inbounds i8, i8* %100, i32 1, !dbg !1729
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1729
  br label %while.cond, !dbg !1730

while.end:                                        ; preds = %while.cond
  %101 = load i32, i32* %seg, align 4, !dbg !1732
  %conv167 = trunc i32 %101 to i16, !dbg !1733
  %102 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1734
  %el_torito168 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %102, i32 0, i32 36, !dbg !1735
  %boot_load_seg = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito168, i32 0, i32 8, !dbg !1736
  store i16 %conv167, i16* %boot_load_seg, align 2, !dbg !1737
  %103 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1738
  %opt169 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %103, i32 0, i32 37, !dbg !1739
  %104 = bitcast %struct.iso_option* %opt169 to i32*, !dbg !1740
  %bf.load170 = load i32, i32* %104, align 8, !dbg !1741
  %bf.clear171 = and i32 %bf.load170, -129, !dbg !1741
  %bf.set172 = or i32 %bf.clear171, 128, !dbg !1741
  store i32 %bf.set172, i32* %104, align 8, !dbg !1741
  store i32 0, i32* %retval, align 4, !dbg !1742
  br label %return, !dbg !1742

if.end173:                                        ; preds = %if.end95
  %105 = load i8*, i8** %key.addr, align 8, !dbg !1743
  %call174 = call i32 @strcmp(i8* %105, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0)) #9, !dbg !1745
  %cmp175 = icmp eq i32 %call174, 0, !dbg !1746
  br i1 %cmp175, label %if.then177, label %if.end193, !dbg !1747

if.then177:                                       ; preds = %if.end173
  call void @llvm.dbg.declare(metadata i32* %num, metadata !1748, metadata !986), !dbg !1750
  store i32 0, i32* %num, align 4, !dbg !1750
  %106 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1751
  %107 = load i8*, i8** %key.addr, align 8, !dbg !1752
  %108 = load i8*, i8** %value.addr, align 8, !dbg !1753
  %call178 = call i32 @get_num_opt(%struct.archive_write* %106, i32* %num, i32 65535, i32 1, i8* %107, i8* %108), !dbg !1754
  store i32 %call178, i32* %r, align 4, !dbg !1755
  %109 = load i32, i32* %r, align 4, !dbg !1756
  %cmp179 = icmp eq i32 %109, 0, !dbg !1757
  %conv180 = zext i1 %cmp179 to i32, !dbg !1757
  %110 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1758
  %opt181 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %110, i32 0, i32 37, !dbg !1759
  %111 = bitcast %struct.iso_option* %opt181 to i32*, !dbg !1760
  %bf.load182 = load i32, i32* %111, align 8, !dbg !1761
  %bf.value183 = and i32 %conv180, 1, !dbg !1761
  %bf.shl184 = shl i32 %bf.value183, 8, !dbg !1761
  %bf.clear185 = and i32 %bf.load182, -257, !dbg !1761
  %bf.set186 = or i32 %bf.clear185, %bf.shl184, !dbg !1761
  store i32 %bf.set186, i32* %111, align 8, !dbg !1761
  %112 = load i32, i32* %r, align 4, !dbg !1762
  %cmp187 = icmp ne i32 %112, 0, !dbg !1764
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !1765

if.then189:                                       ; preds = %if.then177
  store i32 -30, i32* %retval, align 4, !dbg !1766
  br label %return, !dbg !1766

if.end190:                                        ; preds = %if.then177
  %113 = load i32, i32* %num, align 4, !dbg !1767
  %conv191 = trunc i32 %113 to i16, !dbg !1768
  %114 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1769
  %el_torito192 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %114, i32 0, i32 36, !dbg !1770
  %boot_load_size = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito192, i32 0, i32 9, !dbg !1771
  store i16 %conv191, i16* %boot_load_size, align 4, !dbg !1772
  store i32 0, i32* %retval, align 4, !dbg !1773
  br label %return, !dbg !1773

if.end193:                                        ; preds = %if.end173
  %115 = load i8*, i8** %key.addr, align 8, !dbg !1774
  %call194 = call i32 @strcmp(i8* %115, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0)) #9, !dbg !1776
  %cmp195 = icmp eq i32 %call194, 0, !dbg !1777
  br i1 %cmp195, label %if.then197, label %if.end232, !dbg !1778

if.then197:                                       ; preds = %if.end193
  %116 = load i8*, i8** %value.addr, align 8, !dbg !1779
  %cmp198 = icmp eq i8* %116, null, !dbg !1782
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !1783

if.then200:                                       ; preds = %if.then197
  br label %invalid_value, !dbg !1784

if.end201:                                        ; preds = %if.then197
  %117 = load i8*, i8** %value.addr, align 8, !dbg !1785
  %call202 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0)) #9, !dbg !1787
  %cmp203 = icmp eq i32 %call202, 0, !dbg !1788
  br i1 %cmp203, label %if.then205, label %if.else210, !dbg !1789

if.then205:                                       ; preds = %if.end201
  %118 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1790
  %opt206 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %118, i32 0, i32 37, !dbg !1791
  %119 = bitcast %struct.iso_option* %opt206 to i32*, !dbg !1792
  %bf.load207 = load i32, i32* %119, align 8, !dbg !1793
  %bf.clear208 = and i32 %bf.load207, -1537, !dbg !1793
  %bf.set209 = or i32 %bf.clear208, 512, !dbg !1793
  store i32 %bf.set209, i32* %119, align 8, !dbg !1793
  br label %if.end231, !dbg !1790

if.else210:                                       ; preds = %if.end201
  %120 = load i8*, i8** %value.addr, align 8, !dbg !1794
  %call211 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #9, !dbg !1796
  %cmp212 = icmp eq i32 %call211, 0, !dbg !1797
  br i1 %cmp212, label %if.then214, label %if.else219, !dbg !1798

if.then214:                                       ; preds = %if.else210
  %121 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1799
  %opt215 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %121, i32 0, i32 37, !dbg !1800
  %122 = bitcast %struct.iso_option* %opt215 to i32*, !dbg !1801
  %bf.load216 = load i32, i32* %122, align 8, !dbg !1802
  %bf.clear217 = and i32 %bf.load216, -1537, !dbg !1802
  %bf.set218 = or i32 %bf.clear217, 1024, !dbg !1802
  store i32 %bf.set218, i32* %122, align 8, !dbg !1802
  br label %if.end230, !dbg !1799

if.else219:                                       ; preds = %if.else210
  %123 = load i8*, i8** %value.addr, align 8, !dbg !1803
  %call220 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0)) #9, !dbg !1805
  %cmp221 = icmp eq i32 %call220, 0, !dbg !1806
  br i1 %cmp221, label %if.then223, label %if.else228, !dbg !1807

if.then223:                                       ; preds = %if.else219
  %124 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1808
  %opt224 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %124, i32 0, i32 37, !dbg !1809
  %125 = bitcast %struct.iso_option* %opt224 to i32*, !dbg !1810
  %bf.load225 = load i32, i32* %125, align 8, !dbg !1811
  %bf.clear226 = and i32 %bf.load225, -1537, !dbg !1811
  %bf.set227 = or i32 %bf.clear226, 1536, !dbg !1811
  store i32 %bf.set227, i32* %125, align 8, !dbg !1811
  br label %if.end229, !dbg !1808

if.else228:                                       ; preds = %if.else219
  br label %invalid_value, !dbg !1812

if.end229:                                        ; preds = %if.then223
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.then214
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.then205
  store i32 0, i32* %retval, align 4, !dbg !1813
  br label %return, !dbg !1813

if.end232:                                        ; preds = %if.end193
  br label %sw.epilog, !dbg !1814

sw.bb233:                                         ; preds = %entry
  %126 = load i8*, i8** %key.addr, align 8, !dbg !1815
  %call234 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i32 0, i32 0)) #9, !dbg !1817
  %cmp235 = icmp eq i32 %call234, 0, !dbg !1818
  br i1 %cmp235, label %if.then237, label %if.end264, !dbg !1819

if.then237:                                       ; preds = %sw.bb233
  %127 = load i8*, i8** %value.addr, align 8, !dbg !1820
  %cmp238 = icmp eq i8* %127, null, !dbg !1823
  br i1 %cmp238, label %if.then255, label %lor.lhs.false240, !dbg !1824

lor.lhs.false240:                                 ; preds = %if.then237
  %128 = load i8*, i8** %value.addr, align 8, !dbg !1825
  %arrayidx241 = getelementptr inbounds i8, i8* %128, i64 0, !dbg !1825
  %129 = load i8, i8* %arrayidx241, align 1, !dbg !1825
  %conv242 = sext i8 %129 to i32, !dbg !1825
  %cmp243 = icmp sge i32 %conv242, 48, !dbg !1826
  br i1 %cmp243, label %land.lhs.true245, label %if.then255, !dbg !1827

land.lhs.true245:                                 ; preds = %lor.lhs.false240
  %130 = load i8*, i8** %value.addr, align 8, !dbg !1828
  %arrayidx246 = getelementptr inbounds i8, i8* %130, i64 0, !dbg !1828
  %131 = load i8, i8* %arrayidx246, align 1, !dbg !1828
  %conv247 = sext i8 %131 to i32, !dbg !1828
  %cmp248 = icmp sle i32 %conv247, 57, !dbg !1830
  br i1 %cmp248, label %lor.lhs.false250, label %if.then255, !dbg !1831

lor.lhs.false250:                                 ; preds = %land.lhs.true245
  %132 = load i8*, i8** %value.addr, align 8, !dbg !1832
  %arrayidx251 = getelementptr inbounds i8, i8* %132, i64 1, !dbg !1832
  %133 = load i8, i8* %arrayidx251, align 1, !dbg !1832
  %conv252 = sext i8 %133 to i32, !dbg !1832
  %cmp253 = icmp ne i32 %conv252, 0, !dbg !1833
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !1834

if.then255:                                       ; preds = %lor.lhs.false250, %land.lhs.true245, %lor.lhs.false240, %if.then237
  br label %invalid_value, !dbg !1836

if.end256:                                        ; preds = %lor.lhs.false250
  %134 = load i8*, i8** %value.addr, align 8, !dbg !1837
  %arrayidx257 = getelementptr inbounds i8, i8* %134, i64 0, !dbg !1837
  %135 = load i8, i8* %arrayidx257, align 1, !dbg !1837
  %conv258 = sext i8 %135 to i32, !dbg !1837
  %sub259 = sub nsw i32 %conv258, 48, !dbg !1838
  %136 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1839
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %136, i32 0, i32 27, !dbg !1840
  %compression_level = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 12, !dbg !1841
  store i32 %sub259, i32* %compression_level, align 8, !dbg !1842
  %137 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1843
  %opt260 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %137, i32 0, i32 37, !dbg !1844
  %138 = bitcast %struct.iso_option* %opt260 to i32*, !dbg !1845
  %bf.load261 = load i32, i32* %138, align 8, !dbg !1846
  %bf.clear262 = and i32 %bf.load261, -2049, !dbg !1846
  %bf.set263 = or i32 %bf.clear262, 2048, !dbg !1846
  store i32 %bf.set263, i32* %138, align 8, !dbg !1846
  store i32 0, i32* %retval, align 4, !dbg !1847
  br label %return, !dbg !1847

if.end264:                                        ; preds = %sw.bb233
  %139 = load i8*, i8** %key.addr, align 8, !dbg !1848
  %call265 = call i32 @strcmp(i8* %139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i32 0, i32 0)) #9, !dbg !1850
  %cmp266 = icmp eq i32 %call265, 0, !dbg !1851
  br i1 %cmp266, label %if.then268, label %if.end278, !dbg !1852

if.then268:                                       ; preds = %if.end264
  %140 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1853
  %141 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1855
  %copyright_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %141, i32 0, i32 23, !dbg !1856
  %142 = load i8*, i8** %key.addr, align 8, !dbg !1857
  %143 = load i8*, i8** %value.addr, align 8, !dbg !1858
  %call269 = call i32 @get_str_opt(%struct.archive_write* %140, %struct.archive_string* %copyright_file_identifier, i64 37, i8* %142, i8* %143), !dbg !1859
  store i32 %call269, i32* %r, align 4, !dbg !1860
  %144 = load i32, i32* %r, align 4, !dbg !1861
  %cmp270 = icmp eq i32 %144, 0, !dbg !1862
  %conv271 = zext i1 %cmp270 to i32, !dbg !1862
  %145 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1863
  %opt272 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %145, i32 0, i32 37, !dbg !1864
  %146 = bitcast %struct.iso_option* %opt272 to i32*, !dbg !1865
  %bf.load273 = load i32, i32* %146, align 8, !dbg !1866
  %bf.value274 = and i32 %conv271, 1, !dbg !1866
  %bf.shl275 = shl i32 %bf.value274, 12, !dbg !1866
  %bf.clear276 = and i32 %bf.load273, -4097, !dbg !1866
  %bf.set277 = or i32 %bf.clear276, %bf.shl275, !dbg !1866
  store i32 %bf.set277, i32* %146, align 8, !dbg !1866
  %147 = load i32, i32* %r, align 4, !dbg !1867
  store i32 %147, i32* %retval, align 4, !dbg !1868
  br label %return, !dbg !1868

if.end278:                                        ; preds = %if.end264
  br label %sw.epilog, !dbg !1869

sw.bb279:                                         ; preds = %entry
  %148 = load i8*, i8** %key.addr, align 8, !dbg !1870
  %call280 = call i32 @strcmp(i8* %148, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0)) #9, !dbg !1872
  %cmp281 = icmp eq i32 %call280, 0, !dbg !1873
  br i1 %cmp281, label %if.then283, label %if.end312, !dbg !1874

if.then283:                                       ; preds = %sw.bb279
  %149 = load i8*, i8** %value.addr, align 8, !dbg !1875
  %cmp284 = icmp ne i8* %149, null, !dbg !1878
  br i1 %cmp284, label %land.lhs.true286, label %if.end311, !dbg !1879

land.lhs.true286:                                 ; preds = %if.then283
  %150 = load i8*, i8** %value.addr, align 8, !dbg !1880
  %arrayidx287 = getelementptr inbounds i8, i8* %150, i64 1, !dbg !1880
  %151 = load i8, i8* %arrayidx287, align 1, !dbg !1880
  %conv288 = sext i8 %151 to i32, !dbg !1880
  %cmp289 = icmp eq i32 %conv288, 0, !dbg !1882
  br i1 %cmp289, label %land.lhs.true291, label %if.end311, !dbg !1883

land.lhs.true291:                                 ; preds = %land.lhs.true286
  %152 = load i8*, i8** %value.addr, align 8, !dbg !1884
  %arrayidx292 = getelementptr inbounds i8, i8* %152, i64 0, !dbg !1884
  %153 = load i8, i8* %arrayidx292, align 1, !dbg !1884
  %conv293 = sext i8 %153 to i32, !dbg !1884
  %cmp294 = icmp sge i32 %conv293, 49, !dbg !1885
  br i1 %cmp294, label %land.lhs.true296, label %if.end311, !dbg !1886

land.lhs.true296:                                 ; preds = %land.lhs.true291
  %154 = load i8*, i8** %value.addr, align 8, !dbg !1887
  %arrayidx297 = getelementptr inbounds i8, i8* %154, i64 0, !dbg !1887
  %155 = load i8, i8* %arrayidx297, align 1, !dbg !1887
  %conv298 = sext i8 %155 to i32, !dbg !1887
  %cmp299 = icmp sle i32 %conv298, 52, !dbg !1888
  br i1 %cmp299, label %if.then301, label %if.end311, !dbg !1889

if.then301:                                       ; preds = %land.lhs.true296
  %156 = load i8*, i8** %value.addr, align 8, !dbg !1891
  %arrayidx302 = getelementptr inbounds i8, i8* %156, i64 0, !dbg !1891
  %157 = load i8, i8* %arrayidx302, align 1, !dbg !1891
  %conv303 = sext i8 %157 to i32, !dbg !1891
  %sub304 = sub nsw i32 %conv303, 48, !dbg !1893
  %158 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1894
  %opt305 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %158, i32 0, i32 37, !dbg !1895
  %159 = bitcast %struct.iso_option* %opt305 to i32*, !dbg !1896
  %bf.load306 = load i32, i32* %159, align 8, !dbg !1897
  %bf.value307 = and i32 %sub304, 7, !dbg !1897
  %bf.shl308 = shl i32 %bf.value307, 14, !dbg !1897
  %bf.clear309 = and i32 %bf.load306, -114689, !dbg !1897
  %bf.set310 = or i32 %bf.clear309, %bf.shl308, !dbg !1897
  store i32 %bf.set310, i32* %159, align 8, !dbg !1897
  store i32 0, i32* %retval, align 4, !dbg !1898
  br label %return, !dbg !1898

if.end311:                                        ; preds = %land.lhs.true296, %land.lhs.true291, %land.lhs.true286, %if.then283
  br label %invalid_value, !dbg !1899

if.end312:                                        ; preds = %sw.bb279
  br label %sw.epilog, !dbg !1900

sw.bb313:                                         ; preds = %entry
  %160 = load i8*, i8** %key.addr, align 8, !dbg !1901
  %call314 = call i32 @strcmp(i8* %160, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0)) #9, !dbg !1903
  %cmp315 = icmp eq i32 %call314, 0, !dbg !1904
  br i1 %cmp315, label %if.then317, label %if.end346, !dbg !1905

if.then317:                                       ; preds = %sw.bb313
  %161 = load i8*, i8** %value.addr, align 8, !dbg !1906
  %cmp318 = icmp eq i8* %161, null, !dbg !1909
  br i1 %cmp318, label %if.then320, label %if.else324, !dbg !1910

if.then320:                                       ; preds = %if.then317
  %162 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1911
  %opt321 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %162, i32 0, i32 37, !dbg !1912
  %163 = bitcast %struct.iso_option* %opt321 to i32*, !dbg !1913
  %bf.load322 = load i32, i32* %163, align 8, !dbg !1914
  %bf.clear323 = and i32 %bf.load322, -393217, !dbg !1914
  store i32 %bf.clear323, i32* %163, align 8, !dbg !1914
  br label %if.end345, !dbg !1911

if.else324:                                       ; preds = %if.then317
  %164 = load i8*, i8** %value.addr, align 8, !dbg !1915
  %call325 = call i32 @strcmp(i8* %164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i32 0, i32 0)) #9, !dbg !1917
  %cmp326 = icmp eq i32 %call325, 0, !dbg !1918
  br i1 %cmp326, label %if.then328, label %if.else333, !dbg !1919

if.then328:                                       ; preds = %if.else324
  %165 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1920
  %opt329 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %165, i32 0, i32 37, !dbg !1921
  %166 = bitcast %struct.iso_option* %opt329 to i32*, !dbg !1922
  %bf.load330 = load i32, i32* %166, align 8, !dbg !1923
  %bf.clear331 = and i32 %bf.load330, -393217, !dbg !1923
  %bf.set332 = or i32 %bf.clear331, 131072, !dbg !1923
  store i32 %bf.set332, i32* %166, align 8, !dbg !1923
  br label %if.end344, !dbg !1920

if.else333:                                       ; preds = %if.else324
  %167 = load i8*, i8** %value.addr, align 8, !dbg !1924
  %call334 = call i32 @strcmp(i8* %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)) #9, !dbg !1926
  %cmp335 = icmp eq i32 %call334, 0, !dbg !1927
  br i1 %cmp335, label %if.then337, label %if.else342, !dbg !1928

if.then337:                                       ; preds = %if.else333
  %168 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1929
  %opt338 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %168, i32 0, i32 37, !dbg !1930
  %169 = bitcast %struct.iso_option* %opt338 to i32*, !dbg !1931
  %bf.load339 = load i32, i32* %169, align 8, !dbg !1932
  %bf.clear340 = and i32 %bf.load339, -393217, !dbg !1932
  %bf.set341 = or i32 %bf.clear340, 262144, !dbg !1932
  store i32 %bf.set341, i32* %169, align 8, !dbg !1932
  br label %if.end343, !dbg !1929

if.else342:                                       ; preds = %if.else333
  br label %invalid_value, !dbg !1933

if.end343:                                        ; preds = %if.then337
  br label %if.end344

if.end344:                                        ; preds = %if.end343, %if.then328
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.then320
  store i32 0, i32* %retval, align 4, !dbg !1934
  br label %return, !dbg !1934

if.end346:                                        ; preds = %sw.bb313
  br label %sw.epilog, !dbg !1935

sw.bb347:                                         ; preds = %entry
  %170 = load i8*, i8** %key.addr, align 8, !dbg !1936
  %call348 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0)) #9, !dbg !1938
  %cmp349 = icmp eq i32 %call348, 0, !dbg !1939
  br i1 %cmp349, label %if.then351, label %if.end360, !dbg !1940

if.then351:                                       ; preds = %sw.bb347
  %171 = load i8*, i8** %value.addr, align 8, !dbg !1941
  %cmp352 = icmp ne i8* %171, null, !dbg !1943
  %conv353 = zext i1 %cmp352 to i32, !dbg !1943
  %172 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1944
  %opt354 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %172, i32 0, i32 37, !dbg !1945
  %173 = bitcast %struct.iso_option* %opt354 to i32*, !dbg !1946
  %bf.load355 = load i32, i32* %173, align 8, !dbg !1947
  %bf.value356 = and i32 %conv353, 1, !dbg !1947
  %bf.shl357 = shl i32 %bf.value356, 19, !dbg !1947
  %bf.clear358 = and i32 %bf.load355, -524289, !dbg !1947
  %bf.set359 = or i32 %bf.clear358, %bf.shl357, !dbg !1947
  store i32 %bf.set359, i32* %173, align 8, !dbg !1947
  store i32 0, i32* %retval, align 4, !dbg !1948
  br label %return, !dbg !1948

if.end360:                                        ; preds = %sw.bb347
  %174 = load i8*, i8** %key.addr, align 8, !dbg !1949
  %call361 = call i32 @strcmp(i8* %174, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0)) #9, !dbg !1951
  %cmp362 = icmp eq i32 %call361, 0, !dbg !1952
  br i1 %cmp362, label %if.then364, label %if.end373, !dbg !1953

if.then364:                                       ; preds = %if.end360
  %175 = load i8*, i8** %value.addr, align 8, !dbg !1954
  %cmp365 = icmp ne i8* %175, null, !dbg !1956
  %conv366 = zext i1 %cmp365 to i32, !dbg !1956
  %176 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1957
  %opt367 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %176, i32 0, i32 37, !dbg !1958
  %177 = bitcast %struct.iso_option* %opt367 to i32*, !dbg !1959
  %bf.load368 = load i32, i32* %177, align 8, !dbg !1960
  %bf.value369 = and i32 %conv366, 1, !dbg !1960
  %bf.shl370 = shl i32 %bf.value369, 20, !dbg !1960
  %bf.clear371 = and i32 %bf.load368, -1048577, !dbg !1960
  %bf.set372 = or i32 %bf.clear371, %bf.shl370, !dbg !1960
  store i32 %bf.set372, i32* %177, align 8, !dbg !1960
  store i32 0, i32* %retval, align 4, !dbg !1961
  br label %return, !dbg !1961

if.end373:                                        ; preds = %if.end360
  br label %sw.epilog, !dbg !1962

sw.bb374:                                         ; preds = %entry
  %178 = load i8*, i8** %key.addr, align 8, !dbg !1963
  %call375 = call i32 @strcmp(i8* %178, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0)) #9, !dbg !1965
  %cmp376 = icmp eq i32 %call375, 0, !dbg !1966
  br i1 %cmp376, label %if.then378, label %if.end387, !dbg !1967

if.then378:                                       ; preds = %sw.bb374
  %179 = load i8*, i8** %value.addr, align 8, !dbg !1968
  %cmp379 = icmp ne i8* %179, null, !dbg !1970
  %conv380 = zext i1 %cmp379 to i32, !dbg !1970
  %180 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1971
  %opt381 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %180, i32 0, i32 37, !dbg !1972
  %181 = bitcast %struct.iso_option* %opt381 to i32*, !dbg !1973
  %bf.load382 = load i32, i32* %181, align 8, !dbg !1974
  %bf.value383 = and i32 %conv380, 1, !dbg !1974
  %bf.shl384 = shl i32 %bf.value383, 21, !dbg !1974
  %bf.clear385 = and i32 %bf.load382, -2097153, !dbg !1974
  %bf.set386 = or i32 %bf.clear385, %bf.shl384, !dbg !1974
  store i32 %bf.set386, i32* %181, align 8, !dbg !1974
  store i32 0, i32* %retval, align 4, !dbg !1975
  br label %return, !dbg !1975

if.end387:                                        ; preds = %sw.bb374
  %182 = load i8*, i8** %key.addr, align 8, !dbg !1976
  %call388 = call i32 @strcmp(i8* %182, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0)) #9, !dbg !1978
  %cmp389 = icmp eq i32 %call388, 0, !dbg !1979
  br i1 %cmp389, label %if.then391, label %if.end401, !dbg !1980

if.then391:                                       ; preds = %if.end387
  %183 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !1981
  %184 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1983
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %184, i32 0, i32 20, !dbg !1984
  %185 = load i8*, i8** %key.addr, align 8, !dbg !1985
  %186 = load i8*, i8** %value.addr, align 8, !dbg !1986
  %call392 = call i32 @get_str_opt(%struct.archive_write* %183, %struct.archive_string* %publisher_identifier, i64 128, i8* %185, i8* %186), !dbg !1987
  store i32 %call392, i32* %r, align 4, !dbg !1988
  %187 = load i32, i32* %r, align 4, !dbg !1989
  %cmp393 = icmp eq i32 %187, 0, !dbg !1990
  %conv394 = zext i1 %cmp393 to i32, !dbg !1990
  %188 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !1991
  %opt395 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %188, i32 0, i32 37, !dbg !1992
  %189 = bitcast %struct.iso_option* %opt395 to i32*, !dbg !1993
  %bf.load396 = load i32, i32* %189, align 8, !dbg !1994
  %bf.value397 = and i32 %conv394, 1, !dbg !1994
  %bf.shl398 = shl i32 %bf.value397, 22, !dbg !1994
  %bf.clear399 = and i32 %bf.load396, -4194305, !dbg !1994
  %bf.set400 = or i32 %bf.clear399, %bf.shl398, !dbg !1994
  store i32 %bf.set400, i32* %189, align 8, !dbg !1994
  %190 = load i32, i32* %r, align 4, !dbg !1995
  store i32 %190, i32* %retval, align 4, !dbg !1996
  br label %return, !dbg !1996

if.end401:                                        ; preds = %if.end387
  br label %sw.epilog, !dbg !1997

sw.bb402:                                         ; preds = %entry
  %191 = load i8*, i8** %key.addr, align 8, !dbg !1998
  %call403 = call i32 @strcmp(i8* %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0)) #9, !dbg !2000
  %cmp404 = icmp eq i32 %call403, 0, !dbg !2001
  br i1 %cmp404, label %if.then410, label %lor.lhs.false406, !dbg !2002

lor.lhs.false406:                                 ; preds = %sw.bb402
  %192 = load i8*, i8** %key.addr, align 8, !dbg !2003
  %call407 = call i32 @strcmp(i8* %192, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0)) #9, !dbg !2004
  %cmp408 = icmp eq i32 %call407, 0, !dbg !2005
  br i1 %cmp408, label %if.then410, label %if.end449, !dbg !2006

if.then410:                                       ; preds = %lor.lhs.false406, %sw.bb402
  %193 = load i8*, i8** %value.addr, align 8, !dbg !2008
  %cmp411 = icmp eq i8* %193, null, !dbg !2011
  br i1 %cmp411, label %if.then413, label %if.else417, !dbg !2012

if.then413:                                       ; preds = %if.then410
  %194 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2013
  %opt414 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %194, i32 0, i32 37, !dbg !2014
  %195 = bitcast %struct.iso_option* %opt414 to i32*, !dbg !2015
  %bf.load415 = load i32, i32* %195, align 8, !dbg !2016
  %bf.clear416 = and i32 %bf.load415, -25165825, !dbg !2016
  store i32 %bf.clear416, i32* %195, align 8, !dbg !2016
  br label %if.end448, !dbg !2013

if.else417:                                       ; preds = %if.then410
  %196 = load i8*, i8** %value.addr, align 8, !dbg !2017
  %call418 = call i32 @strcmp(i8* %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i32 0, i32 0)) #9, !dbg !2019
  %cmp419 = icmp eq i32 %call418, 0, !dbg !2020
  br i1 %cmp419, label %if.then421, label %if.else426, !dbg !2021

if.then421:                                       ; preds = %if.else417
  %197 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2022
  %opt422 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %197, i32 0, i32 37, !dbg !2023
  %198 = bitcast %struct.iso_option* %opt422 to i32*, !dbg !2024
  %bf.load423 = load i32, i32* %198, align 8, !dbg !2025
  %bf.clear424 = and i32 %bf.load423, -25165825, !dbg !2025
  %bf.set425 = or i32 %bf.clear424, 16777216, !dbg !2025
  store i32 %bf.set425, i32* %198, align 8, !dbg !2025
  br label %if.end447, !dbg !2022

if.else426:                                       ; preds = %if.else417
  %199 = load i8*, i8** %value.addr, align 8, !dbg !2026
  %call427 = call i32 @strcmp(i8* %199, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0)) #9, !dbg !2028
  %cmp428 = icmp eq i32 %call427, 0, !dbg !2029
  br i1 %cmp428, label %if.then430, label %if.else435, !dbg !2030

if.then430:                                       ; preds = %if.else426
  %200 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2031
  %opt431 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %200, i32 0, i32 37, !dbg !2032
  %201 = bitcast %struct.iso_option* %opt431 to i32*, !dbg !2033
  %bf.load432 = load i32, i32* %201, align 8, !dbg !2034
  %bf.clear433 = and i32 %bf.load432, -25165825, !dbg !2034
  %bf.set434 = or i32 %bf.clear433, 8388608, !dbg !2034
  store i32 %bf.set434, i32* %201, align 8, !dbg !2034
  br label %if.end446, !dbg !2031

if.else435:                                       ; preds = %if.else426
  %202 = load i8*, i8** %value.addr, align 8, !dbg !2035
  %call436 = call i32 @strcmp(i8* %202, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0)) #9, !dbg !2037
  %cmp437 = icmp eq i32 %call436, 0, !dbg !2038
  br i1 %cmp437, label %if.then439, label %if.else444, !dbg !2039

if.then439:                                       ; preds = %if.else435
  %203 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2040
  %opt440 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %203, i32 0, i32 37, !dbg !2041
  %204 = bitcast %struct.iso_option* %opt440 to i32*, !dbg !2042
  %bf.load441 = load i32, i32* %204, align 8, !dbg !2043
  %bf.clear442 = and i32 %bf.load441, -25165825, !dbg !2043
  %bf.set443 = or i32 %bf.clear442, 16777216, !dbg !2043
  store i32 %bf.set443, i32* %204, align 8, !dbg !2043
  br label %if.end445, !dbg !2040

if.else444:                                       ; preds = %if.else435
  br label %invalid_value, !dbg !2044

if.end445:                                        ; preds = %if.then439
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then430
  br label %if.end447

if.end447:                                        ; preds = %if.end446, %if.then421
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %if.then413
  store i32 0, i32* %retval, align 4, !dbg !2045
  br label %return, !dbg !2045

if.end449:                                        ; preds = %lor.lhs.false406
  br label %sw.epilog, !dbg !2046

sw.bb450:                                         ; preds = %entry
  %205 = load i8*, i8** %key.addr, align 8, !dbg !2047
  %call451 = call i32 @strcmp(i8* %205, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #9, !dbg !2049
  %cmp452 = icmp eq i32 %call451, 0, !dbg !2050
  br i1 %cmp452, label %if.then454, label %if.end464, !dbg !2051

if.then454:                                       ; preds = %sw.bb450
  %206 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2052
  %207 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2054
  %volume_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %207, i32 0, i32 19, !dbg !2055
  %208 = load i8*, i8** %key.addr, align 8, !dbg !2056
  %209 = load i8*, i8** %value.addr, align 8, !dbg !2057
  %call455 = call i32 @get_str_opt(%struct.archive_write* %206, %struct.archive_string* %volume_identifier, i64 32, i8* %208, i8* %209), !dbg !2058
  store i32 %call455, i32* %r, align 4, !dbg !2059
  %210 = load i32, i32* %r, align 4, !dbg !2060
  %cmp456 = icmp eq i32 %210, 0, !dbg !2061
  %conv457 = zext i1 %cmp456 to i32, !dbg !2061
  %211 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2062
  %opt458 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %211, i32 0, i32 37, !dbg !2063
  %212 = bitcast %struct.iso_option* %opt458 to i32*, !dbg !2064
  %bf.load459 = load i32, i32* %212, align 8, !dbg !2065
  %bf.value460 = and i32 %conv457, 1, !dbg !2065
  %bf.shl461 = shl i32 %bf.value460, 25, !dbg !2065
  %bf.clear462 = and i32 %bf.load459, -33554433, !dbg !2065
  %bf.set463 = or i32 %bf.clear462, %bf.shl461, !dbg !2065
  store i32 %bf.set463, i32* %212, align 8, !dbg !2065
  %213 = load i32, i32* %r, align 4, !dbg !2066
  store i32 %213, i32* %retval, align 4, !dbg !2067
  br label %return, !dbg !2067

if.end464:                                        ; preds = %sw.bb450
  br label %sw.epilog, !dbg !2068

sw.bb465:                                         ; preds = %entry
  %214 = load i8*, i8** %key.addr, align 8, !dbg !2069
  %call466 = call i32 @strcmp(i8* %214, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0)) #9, !dbg !2071
  %cmp467 = icmp eq i32 %call466, 0, !dbg !2072
  br i1 %cmp467, label %if.then469, label %if.end482, !dbg !2073

if.then469:                                       ; preds = %sw.bb465
  %215 = load i8*, i8** %value.addr, align 8, !dbg !2074
  %cmp470 = icmp eq i8* %215, null, !dbg !2077
  br i1 %cmp470, label %if.then472, label %if.else476, !dbg !2078

if.then472:                                       ; preds = %if.then469
  %216 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2079
  %opt473 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %216, i32 0, i32 37, !dbg !2080
  %217 = bitcast %struct.iso_option* %opt473 to i32*, !dbg !2081
  %bf.load474 = load i32, i32* %217, align 8, !dbg !2082
  %bf.clear475 = and i32 %bf.load474, -67108865, !dbg !2082
  store i32 %bf.clear475, i32* %217, align 8, !dbg !2082
  br label %if.end481, !dbg !2079

if.else476:                                       ; preds = %if.then469
  %218 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2083
  %opt477 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %218, i32 0, i32 37, !dbg !2085
  %219 = bitcast %struct.iso_option* %opt477 to i32*, !dbg !2086
  %bf.load478 = load i32, i32* %219, align 8, !dbg !2087
  %bf.clear479 = and i32 %bf.load478, -67108865, !dbg !2087
  %bf.set480 = or i32 %bf.clear479, 67108864, !dbg !2087
  store i32 %bf.set480, i32* %219, align 8, !dbg !2087
  br label %if.end481

if.end481:                                        ; preds = %if.else476, %if.then472
  store i32 0, i32* %retval, align 4, !dbg !2088
  br label %return, !dbg !2088

if.end482:                                        ; preds = %sw.bb465
  br label %sw.epilog, !dbg !2089

sw.epilog:                                        ; preds = %entry, %if.end482, %if.end464, %if.end449, %if.end401, %if.end373, %if.end346, %if.end312, %if.end278, %if.end232, %if.end30
  store i32 -20, i32* %retval, align 4, !dbg !2090
  br label %return, !dbg !2090

invalid_value:                                    ; preds = %if.else444, %if.else342, %if.end311, %if.then255, %if.else228, %if.then200, %if.else159, %if.then105
  %220 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2091
  %archive483 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %220, i32 0, i32 0, !dbg !2092
  %221 = load i8*, i8** %key.addr, align 8, !dbg !2093
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive483, i32 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i32 0, i32 0), i8* %221), !dbg !2094
  store i32 -25, i32* %retval, align 4, !dbg !2095
  br label %return, !dbg !2095

return:                                           ; preds = %invalid_value, %sw.epilog, %if.end481, %if.then454, %if.end448, %if.then391, %if.then378, %if.then364, %if.then351, %if.end345, %if.then301, %if.then268, %if.end256, %if.end231, %if.end190, %if.then189, %while.end, %if.then165, %if.then86, %if.then71, %if.end66, %if.then35, %if.then21, %if.then8, %if.then
  %222 = load i32, i32* %retval, align 4, !dbg !2096
  ret i32 %222, !dbg !2096
}

; Function Attrs: nounwind uwtable
define internal i32 @iso9660_write_header(%struct.archive_write* %a, %struct.archive_entry* %entry1) #0 !dbg !580 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %isoent = alloca %struct.isoent*, align 8
  %r = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !2097, metadata !986), !dbg !2098
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !2099, metadata !986), !dbg !2100
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !2101, metadata !986), !dbg !2102
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !2103, metadata !986), !dbg !2104
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !2105, metadata !986), !dbg !2106
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2107, metadata !986), !dbg !2108
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2109, metadata !986), !dbg !2110
  store i32 0, i32* %ret, align 4, !dbg !2110
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2111
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !2112
  %1 = load i8*, i8** %format_data, align 8, !dbg !2112
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !2111
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !2113
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2114
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !2115
  store %struct.isofile* null, %struct.isofile** %cur_file, align 8, !dbg !2116
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2117
  %bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 5, !dbg !2118
  store i64 0, i64* %bytes_remaining, align 8, !dbg !2119
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2120
  %need_multi_extent = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 6, !dbg !2121
  store i32 0, i32* %need_multi_extent, align 8, !dbg !2122
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2123
  %call = call i32 @archive_entry_filetype(%struct.archive_entry* %6), !dbg !2125
  %cmp = icmp eq i32 %call, 40960, !dbg !2126
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2127

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2128
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 37, !dbg !2130
  %8 = bitcast %struct.iso_option* %opt to i32*, !dbg !2131
  %bf.load = load i32, i32* %8, align 8, !dbg !2131
  %bf.lshr = lshr i32 %bf.load, 23, !dbg !2131
  %bf.clear = and i32 %bf.lshr, 3, !dbg !2131
  %cmp2 = icmp eq i32 %bf.clear, 0, !dbg !2132
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2133

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2135
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %9, i32 0, i32 0, !dbg !2137
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0)), !dbg !2138
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2139
  %cur_file3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 2, !dbg !2140
  store %struct.isofile* null, %struct.isofile** %cur_file3, align 8, !dbg !2141
  store i32 -20, i32* %retval, align 4, !dbg !2142
  br label %return, !dbg !2142

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2143
  %call4 = call i32 @archive_entry_filetype(%struct.archive_entry* %11), !dbg !2145
  %cmp5 = icmp eq i32 %call4, 32768, !dbg !2146
  br i1 %cmp5, label %land.lhs.true6, label %if.end20, !dbg !2147

land.lhs.true6:                                   ; preds = %if.end
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2148
  %call7 = call i64 @archive_entry_size(%struct.archive_entry* %12), !dbg !2149
  %cmp8 = icmp sge i64 %call7, 4294967296, !dbg !2150
  br i1 %cmp8, label %if.then9, label %if.end20, !dbg !2151

if.then9:                                         ; preds = %land.lhs.true6
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2152
  %opt10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 37, !dbg !2155
  %14 = bitcast %struct.iso_option* %opt10 to i32*, !dbg !2156
  %bf.load11 = load i32, i32* %14, align 8, !dbg !2156
  %bf.lshr12 = lshr i32 %bf.load11, 14, !dbg !2156
  %bf.clear13 = and i32 %bf.lshr12, 7, !dbg !2156
  %cmp14 = icmp slt i32 %bf.clear13, 3, !dbg !2157
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !2158

if.then15:                                        ; preds = %if.then9
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2159
  %archive16 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %15, i32 0, i32 0, !dbg !2161
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive16, i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.44, i32 0, i32 0), i64 4294967296), !dbg !2162
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2163
  %cur_file17 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 2, !dbg !2164
  store %struct.isofile* null, %struct.isofile** %cur_file17, align 8, !dbg !2165
  store i32 -20, i32* %retval, align 4, !dbg !2166
  br label %return, !dbg !2166

if.end18:                                         ; preds = %if.then9
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2167
  %need_multi_extent19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 6, !dbg !2168
  store i32 1, i32* %need_multi_extent19, align 8, !dbg !2169
  br label %if.end20, !dbg !2170

if.end20:                                         ; preds = %if.end18, %land.lhs.true6, %if.end
  %18 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2171
  %19 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !2172
  %call21 = call %struct.isofile* @isofile_new(%struct.archive_write* %18, %struct.archive_entry* %19), !dbg !2173
  store %struct.isofile* %call21, %struct.isofile** %file, align 8, !dbg !2174
  %20 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2175
  %cmp22 = icmp eq %struct.isofile* %20, null, !dbg !2177
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !2178

if.then23:                                        ; preds = %if.end20
  %21 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2179
  %archive24 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %21, i32 0, i32 0, !dbg !2181
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive24, i32 12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0)), !dbg !2182
  store i32 -30, i32* %retval, align 4, !dbg !2183
  br label %return, !dbg !2183

if.end25:                                         ; preds = %if.end20
  %22 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2184
  %23 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2185
  %call26 = call i32 @isofile_gen_utility_names(%struct.archive_write* %22, %struct.isofile* %23), !dbg !2186
  store i32 %call26, i32* %r, align 4, !dbg !2187
  %24 = load i32, i32* %r, align 4, !dbg !2188
  %cmp27 = icmp slt i32 %24, -20, !dbg !2190
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !2191

if.then28:                                        ; preds = %if.end25
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2192
  call void @isofile_free(%struct.isofile* %25), !dbg !2194
  %26 = load i32, i32* %r, align 4, !dbg !2195
  store i32 %26, i32* %retval, align 4, !dbg !2196
  br label %return, !dbg !2196

if.else:                                          ; preds = %if.end25
  %27 = load i32, i32* %r, align 4, !dbg !2197
  %28 = load i32, i32* %ret, align 4, !dbg !2199
  %cmp29 = icmp slt i32 %27, %28, !dbg !2200
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2201

if.then30:                                        ; preds = %if.else
  %29 = load i32, i32* %r, align 4, !dbg !2202
  store i32 %29, i32* %ret, align 4, !dbg !2203
  br label %if.end31, !dbg !2204

if.end31:                                         ; preds = %if.then30, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31
  %30 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2205
  %parentdir = getelementptr inbounds %struct.isofile, %struct.isofile* %30, i32 0, i32 5, !dbg !2205
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir, i32 0, i32 1, !dbg !2205
  %31 = load i64, i64* %length, align 8, !dbg !2205
  %cmp33 = icmp eq i64 %31, 0, !dbg !2207
  br i1 %cmp33, label %land.lhs.true34, label %if.end38, !dbg !2208

land.lhs.true34:                                  ; preds = %if.end32
  %32 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2209
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %32, i32 0, i32 6, !dbg !2209
  %length35 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 1, !dbg !2209
  %33 = load i64, i64* %length35, align 8, !dbg !2209
  %cmp36 = icmp eq i64 %33, 0, !dbg !2210
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !2211

if.then37:                                        ; preds = %land.lhs.true34
  %34 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2212
  call void @isofile_free(%struct.isofile* %34), !dbg !2214
  %35 = load i32, i32* %r, align 4, !dbg !2215
  store i32 %35, i32* %retval, align 4, !dbg !2216
  br label %return, !dbg !2216

if.end38:                                         ; preds = %land.lhs.true34, %if.end32
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2217
  %37 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2218
  call void @isofile_add_entry(%struct.iso9660* %36, %struct.isofile* %37), !dbg !2219
  %38 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2220
  %call39 = call %struct.isoent* @isoent_new(%struct.isofile* %38), !dbg !2221
  store %struct.isoent* %call39, %struct.isoent** %isoent, align 8, !dbg !2222
  %39 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !2223
  %cmp40 = icmp eq %struct.isoent* %39, null, !dbg !2225
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !2226

if.then41:                                        ; preds = %if.end38
  %40 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2227
  %archive42 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %40, i32 0, i32 0, !dbg !2229
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive42, i32 12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0)), !dbg !2230
  store i32 -30, i32* %retval, align 4, !dbg !2231
  br label %return, !dbg !2231

if.end43:                                         ; preds = %if.end38
  %41 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !2232
  %file44 = getelementptr inbounds %struct.isoent, %struct.isoent* %41, i32 0, i32 1, !dbg !2234
  %42 = load %struct.isofile*, %struct.isofile** %file44, align 8, !dbg !2234
  %dircnt = getelementptr inbounds %struct.isofile, %struct.isofile* %42, i32 0, i32 9, !dbg !2235
  %43 = load i32, i32* %dircnt, align 8, !dbg !2235
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2236
  %dircnt_max = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 29, !dbg !2237
  %45 = load i32, i32* %dircnt_max, align 8, !dbg !2237
  %cmp45 = icmp sgt i32 %43, %45, !dbg !2238
  br i1 %cmp45, label %if.then46, label %if.end50, !dbg !2239

if.then46:                                        ; preds = %if.end43
  %46 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !2240
  %file47 = getelementptr inbounds %struct.isoent, %struct.isoent* %46, i32 0, i32 1, !dbg !2241
  %47 = load %struct.isofile*, %struct.isofile** %file47, align 8, !dbg !2241
  %dircnt48 = getelementptr inbounds %struct.isofile, %struct.isofile* %47, i32 0, i32 9, !dbg !2242
  %48 = load i32, i32* %dircnt48, align 8, !dbg !2242
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2243
  %dircnt_max49 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 29, !dbg !2244
  store i32 %48, i32* %dircnt_max49, align 8, !dbg !2245
  br label %if.end50, !dbg !2243

if.end50:                                         ; preds = %if.then46, %if.end43
  %50 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2246
  %call51 = call i32 @isoent_tree(%struct.archive_write* %50, %struct.isoent** %isoent), !dbg !2247
  store i32 %call51, i32* %r, align 4, !dbg !2248
  %51 = load i32, i32* %r, align 4, !dbg !2249
  %cmp52 = icmp ne i32 %51, 0, !dbg !2251
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !2252

if.then53:                                        ; preds = %if.end50
  %52 = load i32, i32* %r, align 4, !dbg !2253
  store i32 %52, i32* %retval, align 4, !dbg !2254
  br label %return, !dbg !2254

if.end54:                                         ; preds = %if.end50
  %53 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !2255
  %file55 = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 1, !dbg !2257
  %54 = load %struct.isofile*, %struct.isofile** %file55, align 8, !dbg !2257
  %55 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2258
  %cmp56 = icmp ne %struct.isofile* %54, %55, !dbg !2259
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !2260

if.then57:                                        ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !2261
  br label %return, !dbg !2261

if.end58:                                         ; preds = %if.end54
  %56 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2262
  %entry59 = getelementptr inbounds %struct.isofile, %struct.isofile* %56, i32 0, i32 4, !dbg !2264
  %57 = load %struct.archive_entry*, %struct.archive_entry** %entry59, align 8, !dbg !2264
  %call60 = call i32 @archive_entry_filetype(%struct.archive_entry* %57), !dbg !2265
  %cmp61 = icmp ne i32 %call60, 32768, !dbg !2266
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !2267

if.then62:                                        ; preds = %if.end58
  %58 = load i32, i32* %ret, align 4, !dbg !2268
  store i32 %58, i32* %retval, align 4, !dbg !2269
  br label %return, !dbg !2269

if.end63:                                         ; preds = %if.end58
  %59 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2270
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2271
  %cur_file64 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 2, !dbg !2272
  store %struct.isofile* %59, %struct.isofile** %cur_file64, align 8, !dbg !2273
  %61 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2274
  %entry65 = getelementptr inbounds %struct.isofile, %struct.isofile* %61, i32 0, i32 4, !dbg !2276
  %62 = load %struct.archive_entry*, %struct.archive_entry** %entry65, align 8, !dbg !2276
  %call66 = call i32 @archive_entry_nlink(%struct.archive_entry* %62), !dbg !2277
  %cmp67 = icmp ugt i32 %call66, 1, !dbg !2278
  br i1 %cmp67, label %if.then68, label %if.end73, !dbg !2279

if.then68:                                        ; preds = %if.end63
  %63 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2280
  %64 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2282
  %call69 = call i32 @isofile_register_hardlink(%struct.archive_write* %63, %struct.isofile* %64), !dbg !2283
  store i32 %call69, i32* %r, align 4, !dbg !2284
  %65 = load i32, i32* %r, align 4, !dbg !2285
  %cmp70 = icmp ne i32 %65, 0, !dbg !2287
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !2288

if.then71:                                        ; preds = %if.then68
  store i32 -30, i32* %retval, align 4, !dbg !2289
  br label %return, !dbg !2289

if.end72:                                         ; preds = %if.then68
  br label %if.end73, !dbg !2290

if.end73:                                         ; preds = %if.end72, %if.end63
  %66 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2291
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %66, i32 0, i32 1, !dbg !2293
  %67 = load i32, i32* %temp_fd, align 8, !dbg !2293
  %cmp74 = icmp slt i32 %67, 0, !dbg !2294
  br i1 %cmp74, label %if.then75, label %if.end84, !dbg !2295

if.then75:                                        ; preds = %if.end73
  %call76 = call i32 @__archive_mktemp(i8* null), !dbg !2296
  %68 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2298
  %temp_fd77 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %68, i32 0, i32 1, !dbg !2299
  store i32 %call76, i32* %temp_fd77, align 8, !dbg !2300
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2301
  %temp_fd78 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 1, !dbg !2303
  %70 = load i32, i32* %temp_fd78, align 8, !dbg !2303
  %cmp79 = icmp slt i32 %70, 0, !dbg !2304
  br i1 %cmp79, label %if.then80, label %if.end83, !dbg !2305

if.then80:                                        ; preds = %if.then75
  %71 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2306
  %archive81 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %71, i32 0, i32 0, !dbg !2308
  %call82 = call i32* @__errno_location() #1, !dbg !2309
  %72 = load i32, i32* %call82, align 4, !dbg !2309
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive81, i32 %72, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0)), !dbg !2310
  store i32 -30, i32* %retval, align 4, !dbg !2312
  br label %return, !dbg !2312

if.end83:                                         ; preds = %if.then75
  br label %if.end84, !dbg !2313

if.end84:                                         ; preds = %if.end83, %if.end73
  %73 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2314
  %format_data85 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %73, i32 0, i32 14, !dbg !2314
  %74 = load i8*, i8** %format_data85, align 8, !dbg !2314
  %75 = bitcast i8* %74 to %struct.iso9660*, !dbg !2314
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %75, i32 0, i32 33, !dbg !2314
  %76 = load i64, i64* %wbuff_offset, align 8, !dbg !2314
  %add = add nsw i64 %76, 65536, !dbg !2314
  %77 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2314
  %format_data86 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %77, i32 0, i32 14, !dbg !2314
  %78 = load i8*, i8** %format_data86, align 8, !dbg !2314
  %79 = bitcast i8* %78 to %struct.iso9660*, !dbg !2314
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 31, !dbg !2314
  %80 = load i64, i64* %wbuff_remaining, align 8, !dbg !2314
  %sub = sub i64 %add, %80, !dbg !2314
  %81 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2315
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %81, i32 0, i32 10, !dbg !2316
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 0, !dbg !2317
  store i64 %sub, i64* %offset_of_temp, align 8, !dbg !2318
  %82 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2319
  %content87 = getelementptr inbounds %struct.isofile, %struct.isofile* %82, i32 0, i32 10, !dbg !2320
  %83 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2321
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %83, i32 0, i32 11, !dbg !2322
  store %struct.content* %content87, %struct.content** %cur_content, align 8, !dbg !2323
  %84 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2324
  %85 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2325
  %call88 = call i32 @zisofs_init(%struct.archive_write* %84, %struct.isofile* %85), !dbg !2326
  store i32 %call88, i32* %r, align 4, !dbg !2327
  %86 = load i32, i32* %r, align 4, !dbg !2328
  %87 = load i32, i32* %ret, align 4, !dbg !2330
  %cmp89 = icmp slt i32 %86, %87, !dbg !2331
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !2332

if.then90:                                        ; preds = %if.end84
  %88 = load i32, i32* %r, align 4, !dbg !2333
  store i32 %88, i32* %ret, align 4, !dbg !2334
  br label %if.end91, !dbg !2335

if.end91:                                         ; preds = %if.then90, %if.end84
  %89 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !2336
  %entry92 = getelementptr inbounds %struct.isofile, %struct.isofile* %89, i32 0, i32 4, !dbg !2337
  %90 = load %struct.archive_entry*, %struct.archive_entry** %entry92, align 8, !dbg !2337
  %call93 = call i64 @archive_entry_size(%struct.archive_entry* %90), !dbg !2338
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2339
  %bytes_remaining94 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 5, !dbg !2340
  store i64 %call93, i64* %bytes_remaining94, align 8, !dbg !2341
  %92 = load i32, i32* %ret, align 4, !dbg !2342
  store i32 %92, i32* %retval, align 4, !dbg !2343
  br label %return, !dbg !2343

return:                                           ; preds = %if.end91, %if.then80, %if.then71, %if.then62, %if.then57, %if.then53, %if.then41, %if.then37, %if.then28, %if.then23, %if.then15, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !2344
  ret i32 %93, !dbg !2344
}

; Function Attrs: nounwind uwtable
define internal i64 @iso9660_write_data(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !631 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %r = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !2345, metadata !986), !dbg !2346
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !2347, metadata !986), !dbg !2348
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !2349, metadata !986), !dbg !2350
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !2351, metadata !986), !dbg !2352
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2353
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !2354
  %1 = load i8*, i8** %format_data, align 8, !dbg !2354
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !2353
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !2352
  call void @llvm.dbg.declare(metadata i64* %r, metadata !2355, metadata !986), !dbg !2356
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2357
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !2359
  %4 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !2359
  %cmp = icmp eq %struct.isofile* %4, null, !dbg !2360
  br i1 %cmp, label %if.then, label %if.end, !dbg !2361

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !2362
  br label %return, !dbg !2362

if.end:                                           ; preds = %entry
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2363
  %cur_file1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 2, !dbg !2365
  %6 = load %struct.isofile*, %struct.isofile** %cur_file1, align 8, !dbg !2365
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 4, !dbg !2366
  %7 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !2366
  %call = call i32 @archive_entry_filetype(%struct.archive_entry* %7), !dbg !2367
  %cmp3 = icmp ne i32 %call, 32768, !dbg !2368
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2369

if.then4:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !2370
  br label %return, !dbg !2370

if.end5:                                          ; preds = %if.end
  %8 = load i64, i64* %s.addr, align 8, !dbg !2371
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2373
  %bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 5, !dbg !2374
  %10 = load i64, i64* %bytes_remaining, align 8, !dbg !2374
  %cmp6 = icmp ugt i64 %8, %10, !dbg !2375
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !2376

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2377
  %bytes_remaining8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 5, !dbg !2378
  %12 = load i64, i64* %bytes_remaining8, align 8, !dbg !2378
  store i64 %12, i64* %s.addr, align 8, !dbg !2379
  br label %if.end9, !dbg !2380

if.end9:                                          ; preds = %if.then7, %if.end5
  %13 = load i64, i64* %s.addr, align 8, !dbg !2381
  %cmp10 = icmp eq i64 %13, 0, !dbg !2383
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2384

if.then11:                                        ; preds = %if.end9
  store i64 0, i64* %retval, align 8, !dbg !2385
  br label %return, !dbg !2385

if.end12:                                         ; preds = %if.end9
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2386
  %15 = load i8*, i8** %buff.addr, align 8, !dbg !2387
  %16 = load i64, i64* %s.addr, align 8, !dbg !2388
  %call13 = call i64 @write_iso9660_data(%struct.archive_write* %14, i8* %15, i64 %16), !dbg !2389
  store i64 %call13, i64* %r, align 8, !dbg !2390
  %17 = load i64, i64* %r, align 8, !dbg !2391
  %cmp14 = icmp sgt i64 %17, 0, !dbg !2393
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !2394

if.then15:                                        ; preds = %if.end12
  %18 = load i64, i64* %r, align 8, !dbg !2395
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2396
  %bytes_remaining16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 5, !dbg !2397
  %20 = load i64, i64* %bytes_remaining16, align 8, !dbg !2398
  %sub = sub i64 %20, %18, !dbg !2398
  store i64 %sub, i64* %bytes_remaining16, align 8, !dbg !2398
  br label %if.end17, !dbg !2396

if.end17:                                         ; preds = %if.then15, %if.end12
  %21 = load i64, i64* %r, align 8, !dbg !2399
  store i64 %21, i64* %retval, align 8, !dbg !2400
  br label %return, !dbg !2400

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %22 = load i64, i64* %retval, align 8, !dbg !2401
  ret i64 %22, !dbg !2401
}

; Function Attrs: nounwind uwtable
define internal i32 @iso9660_finish_entry(%struct.archive_write* %a) #0 !dbg !645 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %s = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !2402, metadata !986), !dbg !2403
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !2404, metadata !986), !dbg !2405
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2406
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !2407
  %1 = load i8*, i8** %format_data, align 8, !dbg !2407
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !2406
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !2405
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2408
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !2410
  %4 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !2410
  %cmp = icmp eq %struct.isofile* %4, null, !dbg !2411
  br i1 %cmp, label %if.then, label %if.end, !dbg !2412

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2413
  br label %return, !dbg !2413

if.end:                                           ; preds = %entry
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2414
  %cur_file1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 2, !dbg !2416
  %6 = load %struct.isofile*, %struct.isofile** %cur_file1, align 8, !dbg !2416
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 4, !dbg !2417
  %7 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !2417
  %call = call i32 @archive_entry_filetype(%struct.archive_entry* %7), !dbg !2418
  %cmp3 = icmp ne i32 %call, 32768, !dbg !2419
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2420

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2421
  br label %return, !dbg !2421

if.end5:                                          ; preds = %if.end
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2422
  %cur_file6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 2, !dbg !2424
  %9 = load %struct.isofile*, %struct.isofile** %cur_file6, align 8, !dbg !2424
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %9, i32 0, i32 10, !dbg !2425
  %size = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 1, !dbg !2426
  %10 = load i64, i64* %size, align 8, !dbg !2426
  %cmp7 = icmp eq i64 %10, 0, !dbg !2427
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2428

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !2429
  br label %return, !dbg !2429

if.end9:                                          ; preds = %if.end5
  br label %while.cond, !dbg !2430

while.cond:                                       ; preds = %if.end18, %if.end9
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2431
  %bytes_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 5, !dbg !2433
  %12 = load i64, i64* %bytes_remaining, align 8, !dbg !2433
  %cmp10 = icmp ugt i64 %12, 0, !dbg !2434
  br i1 %cmp10, label %while.body, label %while.end, !dbg !2435

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %s, metadata !2436, metadata !986), !dbg !2438
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2439
  %bytes_remaining11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 5, !dbg !2440
  %14 = load i64, i64* %bytes_remaining11, align 8, !dbg !2440
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2441
  %null_length = getelementptr inbounds %struct.archive_write, %struct.archive_write* %15, i32 0, i32 5, !dbg !2442
  %16 = load i64, i64* %null_length, align 8, !dbg !2442
  %cmp12 = icmp ugt i64 %14, %16, !dbg !2443
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !2444

cond.true:                                        ; preds = %while.body
  %17 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2445
  %null_length13 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %17, i32 0, i32 5, !dbg !2446
  %18 = load i64, i64* %null_length13, align 8, !dbg !2446
  br label %cond.end, !dbg !2447

cond.false:                                       ; preds = %while.body
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2449
  %bytes_remaining14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 5, !dbg !2450
  %20 = load i64, i64* %bytes_remaining14, align 8, !dbg !2450
  br label %cond.end, !dbg !2451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !2453
  store i64 %cond, i64* %s, align 8, !dbg !2455
  %21 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2456
  %22 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2458
  %nulls = getelementptr inbounds %struct.archive_write, %struct.archive_write* %22, i32 0, i32 4, !dbg !2459
  %23 = load i8*, i8** %nulls, align 8, !dbg !2459
  %24 = load i64, i64* %s, align 8, !dbg !2460
  %call15 = call i64 @write_iso9660_data(%struct.archive_write* %21, i8* %23, i64 %24), !dbg !2461
  %cmp16 = icmp slt i64 %call15, 0, !dbg !2462
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2463

if.then17:                                        ; preds = %cond.end
  store i32 -30, i32* %retval, align 4, !dbg !2464
  br label %return, !dbg !2464

if.end18:                                         ; preds = %cond.end
  %25 = load i64, i64* %s, align 8, !dbg !2465
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2466
  %bytes_remaining19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 5, !dbg !2467
  %27 = load i64, i64* %bytes_remaining19, align 8, !dbg !2468
  %sub = sub i64 %27, %25, !dbg !2468
  store i64 %sub, i64* %bytes_remaining19, align 8, !dbg !2468
  br label %while.cond, !dbg !2469

while.end:                                        ; preds = %while.cond
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2471
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 27, !dbg !2473
  %29 = bitcast %struct.anon.6* %zisofs to i8*, !dbg !2474
  %bf.load = load i8, i8* %29, align 8, !dbg !2474
  %bf.shl = shl i8 %bf.load, 6, !dbg !2474
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !2474
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !2474
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !2471
  br i1 %tobool, label %land.lhs.true, label %if.end23, !dbg !2475

land.lhs.true:                                    ; preds = %while.end
  %30 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2476
  %call20 = call i32 @zisofs_finish_entry(%struct.archive_write* %30), !dbg !2478
  %cmp21 = icmp ne i32 %call20, 0, !dbg !2479
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !2480

if.then22:                                        ; preds = %land.lhs.true
  store i32 -30, i32* %retval, align 4, !dbg !2481
  br label %return, !dbg !2481

if.end23:                                         ; preds = %land.lhs.true, %while.end
  %31 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2482
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2484
  %cur_file24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 2, !dbg !2485
  %33 = load %struct.isofile*, %struct.isofile** %cur_file24, align 8, !dbg !2485
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %33, i32 0, i32 11, !dbg !2486
  %34 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !2486
  %size25 = getelementptr inbounds %struct.content, %struct.content* %34, i32 0, i32 1, !dbg !2487
  %35 = load i64, i64* %size25, align 8, !dbg !2487
  %call26 = call i32 @wb_write_padding_to_temp(%struct.archive_write* %31, i64 %35), !dbg !2488
  %cmp27 = icmp ne i32 %call26, 0, !dbg !2489
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !2490

if.then28:                                        ; preds = %if.end23
  store i32 -30, i32* %retval, align 4, !dbg !2491
  br label %return, !dbg !2491

if.end29:                                         ; preds = %if.end23
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2492
  %cur_file30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 2, !dbg !2493
  %37 = load %struct.isofile*, %struct.isofile** %cur_file30, align 8, !dbg !2493
  %cur_content31 = getelementptr inbounds %struct.isofile, %struct.isofile* %37, i32 0, i32 11, !dbg !2494
  %38 = load %struct.content*, %struct.content** %cur_content31, align 8, !dbg !2494
  %size32 = getelementptr inbounds %struct.content, %struct.content* %38, i32 0, i32 1, !dbg !2495
  %39 = load i64, i64* %size32, align 8, !dbg !2495
  %add = add nsw i64 %39, 2048, !dbg !2496
  %sub33 = sub nsw i64 %add, 1, !dbg !2497
  %shr = ashr i64 %sub33, 11, !dbg !2498
  %conv = trunc i64 %shr to i32, !dbg !2499
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2500
  %cur_file34 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 2, !dbg !2501
  %41 = load %struct.isofile*, %struct.isofile** %cur_file34, align 8, !dbg !2501
  %cur_content35 = getelementptr inbounds %struct.isofile, %struct.isofile* %41, i32 0, i32 11, !dbg !2502
  %42 = load %struct.content*, %struct.content** %cur_content35, align 8, !dbg !2502
  %blocks = getelementptr inbounds %struct.content, %struct.content* %42, i32 0, i32 2, !dbg !2503
  store i32 %conv, i32* %blocks, align 8, !dbg !2504
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2505
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2506
  %cur_file36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 2, !dbg !2507
  %45 = load %struct.isofile*, %struct.isofile** %cur_file36, align 8, !dbg !2507
  call void @isofile_add_data_file(%struct.iso9660* %43, %struct.isofile* %45), !dbg !2508
  store i32 0, i32* %retval, align 4, !dbg !2509
  br label %return, !dbg !2509

return:                                           ; preds = %if.end29, %if.then28, %if.then22, %if.then17, %if.then8, %if.then4, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !2510
  ret i32 %46, !dbg !2510
}

; Function Attrs: nounwind uwtable
define internal i32 @iso9660_close(%struct.archive_write* %a) #0 !dbg !651 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %ret = alloca i32, align 4
  %blocks = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !2511, metadata !986), !dbg !2512
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !2513, metadata !986), !dbg !2514
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2515, metadata !986), !dbg !2516
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !2517, metadata !986), !dbg !2518
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2519
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !2520
  %1 = load i8*, i8** %format_data, align 8, !dbg !2520
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !2519
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !2521
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2522
  %format_data1 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %3, i32 0, i32 14, !dbg !2522
  %4 = load i8*, i8** %format_data1, align 8, !dbg !2522
  %5 = bitcast i8* %4 to %struct.iso9660*, !dbg !2522
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 31, !dbg !2522
  %6 = load i64, i64* %wbuff_remaining, align 8, !dbg !2522
  %cmp = icmp ugt i64 %6, 0, !dbg !2524
  br i1 %cmp, label %if.then, label %if.end4, !dbg !2525

if.then:                                          ; preds = %entry
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2526
  %call = call i32 @wb_write_out(%struct.archive_write* %7), !dbg !2528
  store i32 %call, i32* %ret, align 4, !dbg !2529
  %8 = load i32, i32* %ret, align 4, !dbg !2530
  %cmp2 = icmp slt i32 %8, 0, !dbg !2532
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !2533

if.then3:                                         ; preds = %if.then
  %9 = load i32, i32* %ret, align 4, !dbg !2534
  store i32 %9, i32* %retval, align 4, !dbg !2535
  br label %return, !dbg !2535

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !2536

if.end4:                                          ; preds = %if.end, %entry
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2537
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 0, !dbg !2538
  %call5 = call i64 @time(i64* %birth_time) #8, !dbg !2539
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2540
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 37, !dbg !2542
  %12 = bitcast %struct.iso_option* %opt to i32*, !dbg !2543
  %bf.load = load i32, i32* %12, align 8, !dbg !2543
  %bf.lshr = lshr i32 %bf.load, 4, !dbg !2543
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2543
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !2540
  br i1 %tobool, label %if.then6, label %if.end30, !dbg !2544

if.then6:                                         ; preds = %if.end4
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2545
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2547
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 14, !dbg !2548
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 0, !dbg !2549
  %15 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !2549
  %call7 = call i32 @isoent_find_out_boot_file(%struct.archive_write* %13, %struct.isoent* %15), !dbg !2550
  store i32 %call7, i32* %ret, align 4, !dbg !2551
  %16 = load i32, i32* %ret, align 4, !dbg !2552
  %cmp8 = icmp slt i32 %16, 0, !dbg !2554
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2555

if.then9:                                         ; preds = %if.then6
  %17 = load i32, i32* %ret, align 4, !dbg !2556
  store i32 %17, i32* %retval, align 4, !dbg !2557
  br label %return, !dbg !2557

if.end10:                                         ; preds = %if.then6
  %18 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2558
  %call11 = call i32 @zisofs_rewind_boot_file(%struct.archive_write* %18), !dbg !2559
  store i32 %call11, i32* %ret, align 4, !dbg !2560
  %19 = load i32, i32* %ret, align 4, !dbg !2561
  %cmp12 = icmp slt i32 %19, 0, !dbg !2563
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2564

if.then13:                                        ; preds = %if.end10
  %20 = load i32, i32* %ret, align 4, !dbg !2565
  store i32 %20, i32* %retval, align 4, !dbg !2566
  br label %return, !dbg !2566

if.end14:                                         ; preds = %if.end10
  %21 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2567
  %format_data15 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %21, i32 0, i32 14, !dbg !2567
  %22 = load i8*, i8** %format_data15, align 8, !dbg !2567
  %23 = bitcast i8* %22 to %struct.iso9660*, !dbg !2567
  %wbuff_remaining16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 31, !dbg !2567
  %24 = load i64, i64* %wbuff_remaining16, align 8, !dbg !2567
  %cmp17 = icmp ugt i64 %24, 0, !dbg !2569
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !2570

if.then18:                                        ; preds = %if.end14
  %25 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2571
  %call19 = call i32 @wb_write_out(%struct.archive_write* %25), !dbg !2573
  store i32 %call19, i32* %ret, align 4, !dbg !2574
  %26 = load i32, i32* %ret, align 4, !dbg !2575
  %cmp20 = icmp slt i32 %26, 0, !dbg !2577
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2578

if.then21:                                        ; preds = %if.then18
  %27 = load i32, i32* %ret, align 4, !dbg !2579
  store i32 %27, i32* %retval, align 4, !dbg !2580
  br label %return, !dbg !2580

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !2581

if.end23:                                         ; preds = %if.end22, %if.end14
  %28 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2582
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2583
  %primary24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 14, !dbg !2584
  %rootent25 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary24, i32 0, i32 0, !dbg !2585
  %30 = load %struct.isoent*, %struct.isoent** %rootent25, align 8, !dbg !2585
  %call26 = call i32 @isoent_create_boot_catalog(%struct.archive_write* %28, %struct.isoent* %30), !dbg !2586
  store i32 %call26, i32* %ret, align 4, !dbg !2587
  %31 = load i32, i32* %ret, align 4, !dbg !2588
  %cmp27 = icmp slt i32 %31, 0, !dbg !2590
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !2591

if.then28:                                        ; preds = %if.end23
  %32 = load i32, i32* %ret, align 4, !dbg !2592
  store i32 %32, i32* %retval, align 4, !dbg !2593
  br label %return, !dbg !2593

if.end29:                                         ; preds = %if.end23
  br label %if.end30, !dbg !2594

if.end30:                                         ; preds = %if.end29, %if.end4
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2595
  %opt31 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 37, !dbg !2597
  %34 = bitcast %struct.iso_option* %opt31 to i32*, !dbg !2598
  %bf.load32 = load i32, i32* %34, align 8, !dbg !2598
  %bf.lshr33 = lshr i32 %bf.load32, 17, !dbg !2598
  %bf.clear34 = and i32 %bf.lshr33, 3, !dbg !2598
  %tobool35 = icmp ne i32 %bf.clear34, 0, !dbg !2595
  br i1 %tobool35, label %if.then36, label %if.end59, !dbg !2599

if.then36:                                        ; preds = %if.end30
  %35 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2600
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2602
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 15, !dbg !2603
  %rootent37 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet, i32 0, i32 0, !dbg !2604
  %37 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2605
  %primary38 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %37, i32 0, i32 14, !dbg !2606
  %rootent39 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary38, i32 0, i32 0, !dbg !2607
  %38 = load %struct.isoent*, %struct.isoent** %rootent39, align 8, !dbg !2607
  %call40 = call i32 @isoent_clone_tree(%struct.archive_write* %35, %struct.isoent** %rootent37, %struct.isoent* %38), !dbg !2608
  store i32 %call40, i32* %ret, align 4, !dbg !2609
  %39 = load i32, i32* %ret, align 4, !dbg !2610
  %cmp41 = icmp slt i32 %39, 0, !dbg !2612
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !2613

if.then42:                                        ; preds = %if.then36
  %40 = load i32, i32* %ret, align 4, !dbg !2614
  store i32 %40, i32* %retval, align 4, !dbg !2615
  br label %return, !dbg !2615

if.end43:                                         ; preds = %if.then36
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2616
  %sconv_to_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 9, !dbg !2618
  %42 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be, align 8, !dbg !2618
  %cmp44 = icmp eq %struct.archive_string_conv* %42, null, !dbg !2619
  br i1 %cmp44, label %if.then45, label %if.end58, !dbg !2620

if.then45:                                        ; preds = %if.end43
  %43 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2621
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %43, i32 0, i32 0, !dbg !2623
  %call46 = call %struct.archive_string_conv* @archive_string_conversion_to_charset(%struct.archive* %archive, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 1), !dbg !2624
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2625
  %sconv_to_utf16be47 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 9, !dbg !2626
  store %struct.archive_string_conv* %call46, %struct.archive_string_conv** %sconv_to_utf16be47, align 8, !dbg !2627
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2628
  %sconv_to_utf16be48 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 9, !dbg !2630
  %46 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be48, align 8, !dbg !2630
  %cmp49 = icmp eq %struct.archive_string_conv* %46, null, !dbg !2631
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !2632

if.then50:                                        ; preds = %if.then45
  store i32 -30, i32* %retval, align 4, !dbg !2633
  br label %return, !dbg !2633

if.end51:                                         ; preds = %if.then45
  %47 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2634
  %archive52 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %47, i32 0, i32 0, !dbg !2635
  %call53 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 1), !dbg !2636
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2637
  %sconv_from_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 10, !dbg !2638
  store %struct.archive_string_conv* %call53, %struct.archive_string_conv** %sconv_from_utf16be, align 8, !dbg !2639
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2640
  %sconv_from_utf16be54 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 10, !dbg !2642
  %50 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_from_utf16be54, align 8, !dbg !2642
  %cmp55 = icmp eq %struct.archive_string_conv* %50, null, !dbg !2643
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !2644

if.then56:                                        ; preds = %if.end51
  store i32 -30, i32* %retval, align 4, !dbg !2645
  br label %return, !dbg !2645

if.end57:                                         ; preds = %if.end51
  br label %if.end58, !dbg !2646

if.end58:                                         ; preds = %if.end57, %if.end43
  br label %if.end59, !dbg !2647

if.end59:                                         ; preds = %if.end58, %if.end30
  %51 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2648
  %call60 = call i32 @isoent_make_path_table(%struct.archive_write* %51), !dbg !2649
  store i32 %call60, i32* %ret, align 4, !dbg !2650
  %52 = load i32, i32* %ret, align 4, !dbg !2651
  %cmp61 = icmp slt i32 %52, 0, !dbg !2653
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !2654

if.then62:                                        ; preds = %if.end59
  %53 = load i32, i32* %ret, align 4, !dbg !2655
  store i32 %53, i32* %retval, align 4, !dbg !2656
  br label %return, !dbg !2656

if.end63:                                         ; preds = %if.end59
  store i32 19, i32* %blocks, align 4, !dbg !2657
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2658
  %opt64 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 37, !dbg !2660
  %55 = bitcast %struct.iso_option* %opt64 to i32*, !dbg !2661
  %bf.load65 = load i32, i32* %55, align 8, !dbg !2661
  %bf.lshr66 = lshr i32 %bf.load65, 4, !dbg !2661
  %bf.clear67 = and i32 %bf.lshr66, 1, !dbg !2661
  %tobool68 = icmp ne i32 %bf.clear67, 0, !dbg !2658
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !2662

if.then69:                                        ; preds = %if.end63
  %56 = load i32, i32* %blocks, align 4, !dbg !2663
  %add = add nsw i32 %56, 1, !dbg !2663
  store i32 %add, i32* %blocks, align 4, !dbg !2663
  br label %if.end70, !dbg !2664

if.end70:                                         ; preds = %if.then69, %if.end63
  %57 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2665
  %opt71 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %57, i32 0, i32 37, !dbg !2667
  %58 = bitcast %struct.iso_option* %opt71 to i32*, !dbg !2668
  %bf.load72 = load i32, i32* %58, align 8, !dbg !2668
  %bf.lshr73 = lshr i32 %bf.load72, 17, !dbg !2668
  %bf.clear74 = and i32 %bf.lshr73, 3, !dbg !2668
  %tobool75 = icmp ne i32 %bf.clear74, 0, !dbg !2665
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !2669

if.then76:                                        ; preds = %if.end70
  %59 = load i32, i32* %blocks, align 4, !dbg !2670
  %add77 = add nsw i32 %59, 1, !dbg !2670
  store i32 %add77, i32* %blocks, align 4, !dbg !2670
  br label %if.end78, !dbg !2671

if.end78:                                         ; preds = %if.then76, %if.end70
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2672
  %opt79 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 37, !dbg !2674
  %61 = bitcast %struct.iso_option* %opt79 to i32*, !dbg !2675
  %bf.load80 = load i32, i32* %61, align 8, !dbg !2675
  %bf.lshr81 = lshr i32 %bf.load80, 14, !dbg !2675
  %bf.clear82 = and i32 %bf.lshr81, 7, !dbg !2675
  %cmp83 = icmp eq i32 %bf.clear82, 4, !dbg !2676
  br i1 %cmp83, label %if.then84, label %if.end86, !dbg !2677

if.then84:                                        ; preds = %if.end78
  %62 = load i32, i32* %blocks, align 4, !dbg !2678
  %add85 = add nsw i32 %62, 1, !dbg !2678
  store i32 %add85, i32* %blocks, align 4, !dbg !2678
  br label %if.end86, !dbg !2679

if.end86:                                         ; preds = %if.then84, %if.end78
  %63 = load i32, i32* %blocks, align 4, !dbg !2680
  %64 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2681
  %primary87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 14, !dbg !2682
  %location_type_L_path_table = getelementptr inbounds %struct.vdd, %struct.vdd* %primary87, i32 0, i32 6, !dbg !2683
  store i32 %63, i32* %location_type_L_path_table, align 4, !dbg !2684
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2685
  %primary88 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 14, !dbg !2686
  %path_table_block = getelementptr inbounds %struct.vdd, %struct.vdd* %primary88, i32 0, i32 4, !dbg !2687
  %66 = load i32, i32* %path_table_block, align 4, !dbg !2687
  %67 = load i32, i32* %blocks, align 4, !dbg !2688
  %add89 = add nsw i32 %67, %66, !dbg !2688
  store i32 %add89, i32* %blocks, align 4, !dbg !2688
  %68 = load i32, i32* %blocks, align 4, !dbg !2689
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2690
  %primary90 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 14, !dbg !2691
  %location_type_M_path_table = getelementptr inbounds %struct.vdd, %struct.vdd* %primary90, i32 0, i32 7, !dbg !2692
  store i32 %68, i32* %location_type_M_path_table, align 8, !dbg !2693
  %70 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2694
  %primary91 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %70, i32 0, i32 14, !dbg !2695
  %path_table_block92 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary91, i32 0, i32 4, !dbg !2696
  %71 = load i32, i32* %path_table_block92, align 4, !dbg !2696
  %72 = load i32, i32* %blocks, align 4, !dbg !2697
  %add93 = add nsw i32 %72, %71, !dbg !2697
  store i32 %add93, i32* %blocks, align 4, !dbg !2697
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2698
  %opt94 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 37, !dbg !2700
  %74 = bitcast %struct.iso_option* %opt94 to i32*, !dbg !2701
  %bf.load95 = load i32, i32* %74, align 8, !dbg !2701
  %bf.lshr96 = lshr i32 %bf.load95, 17, !dbg !2701
  %bf.clear97 = and i32 %bf.lshr96, 3, !dbg !2701
  %tobool98 = icmp ne i32 %bf.clear97, 0, !dbg !2698
  br i1 %tobool98, label %if.then99, label %if.end110, !dbg !2702

if.then99:                                        ; preds = %if.end86
  %75 = load i32, i32* %blocks, align 4, !dbg !2703
  %76 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2705
  %joliet100 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %76, i32 0, i32 15, !dbg !2706
  %location_type_L_path_table101 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet100, i32 0, i32 6, !dbg !2707
  store i32 %75, i32* %location_type_L_path_table101, align 4, !dbg !2708
  %77 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2709
  %joliet102 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %77, i32 0, i32 15, !dbg !2710
  %path_table_block103 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet102, i32 0, i32 4, !dbg !2711
  %78 = load i32, i32* %path_table_block103, align 4, !dbg !2711
  %79 = load i32, i32* %blocks, align 4, !dbg !2712
  %add104 = add nsw i32 %79, %78, !dbg !2712
  store i32 %add104, i32* %blocks, align 4, !dbg !2712
  %80 = load i32, i32* %blocks, align 4, !dbg !2713
  %81 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2714
  %joliet105 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %81, i32 0, i32 15, !dbg !2715
  %location_type_M_path_table106 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet105, i32 0, i32 7, !dbg !2716
  store i32 %80, i32* %location_type_M_path_table106, align 8, !dbg !2717
  %82 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2718
  %joliet107 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %82, i32 0, i32 15, !dbg !2719
  %path_table_block108 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet107, i32 0, i32 4, !dbg !2720
  %83 = load i32, i32* %path_table_block108, align 4, !dbg !2720
  %84 = load i32, i32* %blocks, align 4, !dbg !2721
  %add109 = add nsw i32 %84, %83, !dbg !2721
  store i32 %add109, i32* %blocks, align 4, !dbg !2721
  br label %if.end110, !dbg !2722

if.end110:                                        ; preds = %if.then99, %if.end86
  %85 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2723
  %86 = load i32, i32* %blocks, align 4, !dbg !2724
  %87 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2725
  %primary111 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %87, i32 0, i32 14, !dbg !2726
  call void @isoent_setup_directory_location(%struct.iso9660* %85, i32 %86, %struct.vdd* %primary111), !dbg !2727
  %88 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2728
  %primary112 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %88, i32 0, i32 14, !dbg !2729
  %total_dir_block = getelementptr inbounds %struct.vdd, %struct.vdd* %primary112, i32 0, i32 8, !dbg !2730
  %89 = load i32, i32* %total_dir_block, align 4, !dbg !2730
  %90 = load i32, i32* %blocks, align 4, !dbg !2731
  %add113 = add nsw i32 %90, %89, !dbg !2731
  store i32 %add113, i32* %blocks, align 4, !dbg !2731
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2732
  %opt114 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 37, !dbg !2734
  %92 = bitcast %struct.iso_option* %opt114 to i32*, !dbg !2735
  %bf.load115 = load i32, i32* %92, align 8, !dbg !2735
  %bf.lshr116 = lshr i32 %bf.load115, 17, !dbg !2735
  %bf.clear117 = and i32 %bf.lshr116, 3, !dbg !2735
  %tobool118 = icmp ne i32 %bf.clear117, 0, !dbg !2732
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !2736

if.then119:                                       ; preds = %if.end110
  %93 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2737
  %94 = load i32, i32* %blocks, align 4, !dbg !2739
  %95 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2740
  %joliet120 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %95, i32 0, i32 15, !dbg !2741
  call void @isoent_setup_directory_location(%struct.iso9660* %93, i32 %94, %struct.vdd* %joliet120), !dbg !2742
  %96 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2743
  %joliet121 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %96, i32 0, i32 15, !dbg !2744
  %total_dir_block122 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet121, i32 0, i32 8, !dbg !2745
  %97 = load i32, i32* %total_dir_block122, align 4, !dbg !2745
  %98 = load i32, i32* %blocks, align 4, !dbg !2746
  %add123 = add nsw i32 %98, %97, !dbg !2746
  store i32 %add123, i32* %blocks, align 4, !dbg !2746
  br label %if.end124, !dbg !2747

if.end124:                                        ; preds = %if.then119, %if.end110
  %99 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2748
  %opt125 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %99, i32 0, i32 37, !dbg !2750
  %100 = bitcast %struct.iso_option* %opt125 to i32*, !dbg !2751
  %bf.load126 = load i32, i32* %100, align 8, !dbg !2751
  %bf.lshr127 = lshr i32 %bf.load126, 23, !dbg !2751
  %bf.clear128 = and i32 %bf.lshr127, 3, !dbg !2751
  %tobool129 = icmp ne i32 %bf.clear128, 0, !dbg !2748
  br i1 %tobool129, label %if.then130, label %if.end132, !dbg !2752

if.then130:                                       ; preds = %if.end124
  %101 = load i32, i32* %blocks, align 4, !dbg !2753
  %102 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2755
  %location_rrip_er = getelementptr inbounds %struct.iso9660, %struct.iso9660* %102, i32 0, i32 26, !dbg !2756
  store i32 %101, i32* %location_rrip_er, align 8, !dbg !2757
  %103 = load i32, i32* %blocks, align 4, !dbg !2758
  %add131 = add nsw i32 %103, 1, !dbg !2758
  store i32 %add131, i32* %blocks, align 4, !dbg !2758
  br label %if.end132, !dbg !2759

if.end132:                                        ; preds = %if.then130, %if.end124
  %104 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2760
  %105 = load i32, i32* %blocks, align 4, !dbg !2761
  call void @isoent_setup_file_location(%struct.iso9660* %104, i32 %105), !dbg !2762
  %106 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2763
  %total_file_block = getelementptr inbounds %struct.iso9660, %struct.iso9660* %106, i32 0, i32 18, !dbg !2764
  %107 = load i32, i32* %total_file_block, align 8, !dbg !2764
  %108 = load i32, i32* %blocks, align 4, !dbg !2765
  %add133 = add nsw i32 %108, %107, !dbg !2765
  store i32 %add133, i32* %blocks, align 4, !dbg !2765
  %109 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2766
  %opt134 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %109, i32 0, i32 37, !dbg !2768
  %110 = bitcast %struct.iso_option* %opt134 to i32*, !dbg !2769
  %bf.load135 = load i32, i32* %110, align 8, !dbg !2769
  %bf.lshr136 = lshr i32 %bf.load135, 4, !dbg !2769
  %bf.clear137 = and i32 %bf.lshr136, 1, !dbg !2769
  %tobool138 = icmp ne i32 %bf.clear137, 0, !dbg !2766
  br i1 %tobool138, label %land.lhs.true, label %if.end149, !dbg !2770

land.lhs.true:                                    ; preds = %if.end132
  %111 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2771
  %opt139 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %111, i32 0, i32 37, !dbg !2773
  %112 = bitcast %struct.iso_option* %opt139 to i32*, !dbg !2774
  %bf.load140 = load i32, i32* %112, align 8, !dbg !2774
  %bf.lshr141 = lshr i32 %bf.load140, 6, !dbg !2774
  %bf.clear142 = and i32 %bf.lshr141, 1, !dbg !2774
  %tobool143 = icmp ne i32 %bf.clear142, 0, !dbg !2771
  br i1 %tobool143, label %if.then144, label %if.end149, !dbg !2775

if.then144:                                       ; preds = %land.lhs.true
  %113 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2776
  %call145 = call i32 @setup_boot_information(%struct.archive_write* %113), !dbg !2778
  store i32 %call145, i32* %ret, align 4, !dbg !2779
  %114 = load i32, i32* %ret, align 4, !dbg !2780
  %cmp146 = icmp slt i32 %114, 0, !dbg !2782
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !2783

if.then147:                                       ; preds = %if.then144
  %115 = load i32, i32* %ret, align 4, !dbg !2784
  store i32 %115, i32* %retval, align 4, !dbg !2785
  br label %return, !dbg !2785

if.end148:                                        ; preds = %if.then144
  br label %if.end149, !dbg !2786

if.end149:                                        ; preds = %if.end148, %land.lhs.true, %if.end132
  %116 = load i32, i32* %blocks, align 4, !dbg !2787
  %117 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2788
  %volume_space_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %117, i32 0, i32 16, !dbg !2789
  store i32 %116, i32* %volume_space_size, align 8, !dbg !2790
  %118 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2791
  %opt150 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %118, i32 0, i32 37, !dbg !2793
  %119 = bitcast %struct.iso_option* %opt150 to i32*, !dbg !2794
  %bf.load151 = load i32, i32* %119, align 8, !dbg !2794
  %bf.lshr152 = lshr i32 %bf.load151, 21, !dbg !2794
  %bf.clear153 = and i32 %bf.lshr152, 1, !dbg !2794
  %tobool154 = icmp ne i32 %bf.clear153, 0, !dbg !2791
  br i1 %tobool154, label %if.then155, label %if.end158, !dbg !2795

if.then155:                                       ; preds = %if.end149
  %120 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2796
  %volume_space_size156 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %120, i32 0, i32 16, !dbg !2797
  %121 = load i32, i32* %volume_space_size156, align 8, !dbg !2798
  %add157 = add nsw i32 %121, 150, !dbg !2798
  store i32 %add157, i32* %volume_space_size156, align 8, !dbg !2798
  br label %if.end158, !dbg !2796

if.end158:                                        ; preds = %if.then155, %if.end149
  %122 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2799
  %volume_sequence_number = getelementptr inbounds %struct.iso9660, %struct.iso9660* %122, i32 0, i32 17, !dbg !2800
  store i32 1, i32* %volume_sequence_number, align 4, !dbg !2801
  %123 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2802
  %wbuff_remaining159 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %123, i32 0, i32 31, !dbg !2803
  store i64 65536, i64* %wbuff_remaining159, align 8, !dbg !2804
  %124 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2805
  %wbuff_type = getelementptr inbounds %struct.iso9660, %struct.iso9660* %124, i32 0, i32 32, !dbg !2806
  store i32 0, i32* %wbuff_type, align 8, !dbg !2807
  %125 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2808
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %125, i32 0, i32 33, !dbg !2809
  store i64 0, i64* %wbuff_offset, align 8, !dbg !2810
  %126 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2811
  %wbuff_written = getelementptr inbounds %struct.iso9660, %struct.iso9660* %126, i32 0, i32 34, !dbg !2812
  store i64 0, i64* %wbuff_written, align 8, !dbg !2813
  %127 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2814
  %wbuff_tail = getelementptr inbounds %struct.iso9660, %struct.iso9660* %127, i32 0, i32 35, !dbg !2815
  store i64 0, i64* %wbuff_tail, align 8, !dbg !2816
  %128 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2817
  %call160 = call i32 @write_null(%struct.archive_write* %128, i64 32768), !dbg !2818
  store i32 %call160, i32* %ret, align 4, !dbg !2819
  %129 = load i32, i32* %ret, align 4, !dbg !2820
  %cmp161 = icmp ne i32 %129, 0, !dbg !2822
  br i1 %cmp161, label %if.then162, label %if.end163, !dbg !2823

if.then162:                                       ; preds = %if.end158
  store i32 -30, i32* %retval, align 4, !dbg !2824
  br label %return, !dbg !2824

if.end163:                                        ; preds = %if.end158
  %130 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2825
  %131 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2826
  %primary164 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %131, i32 0, i32 14, !dbg !2827
  %call165 = call i32 @write_VD(%struct.archive_write* %130, %struct.vdd* %primary164), !dbg !2828
  store i32 %call165, i32* %ret, align 4, !dbg !2829
  %132 = load i32, i32* %ret, align 4, !dbg !2830
  %cmp166 = icmp ne i32 %132, 0, !dbg !2832
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !2833

if.then167:                                       ; preds = %if.end163
  store i32 -30, i32* %retval, align 4, !dbg !2834
  br label %return, !dbg !2834

if.end168:                                        ; preds = %if.end163
  %133 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2835
  %opt169 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %133, i32 0, i32 37, !dbg !2837
  %134 = bitcast %struct.iso_option* %opt169 to i32*, !dbg !2838
  %bf.load170 = load i32, i32* %134, align 8, !dbg !2838
  %bf.lshr171 = lshr i32 %bf.load170, 4, !dbg !2838
  %bf.clear172 = and i32 %bf.lshr171, 1, !dbg !2838
  %tobool173 = icmp ne i32 %bf.clear172, 0, !dbg !2835
  br i1 %tobool173, label %if.then174, label %if.end179, !dbg !2839

if.then174:                                       ; preds = %if.end168
  %135 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2840
  %call175 = call i32 @write_VD_boot_record(%struct.archive_write* %135), !dbg !2842
  store i32 %call175, i32* %ret, align 4, !dbg !2843
  %136 = load i32, i32* %ret, align 4, !dbg !2844
  %cmp176 = icmp ne i32 %136, 0, !dbg !2846
  br i1 %cmp176, label %if.then177, label %if.end178, !dbg !2847

if.then177:                                       ; preds = %if.then174
  store i32 -30, i32* %retval, align 4, !dbg !2848
  br label %return, !dbg !2848

if.end178:                                        ; preds = %if.then174
  br label %if.end179, !dbg !2849

if.end179:                                        ; preds = %if.end178, %if.end168
  %137 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2850
  %opt180 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %137, i32 0, i32 37, !dbg !2852
  %138 = bitcast %struct.iso_option* %opt180 to i32*, !dbg !2853
  %bf.load181 = load i32, i32* %138, align 8, !dbg !2853
  %bf.lshr182 = lshr i32 %bf.load181, 14, !dbg !2853
  %bf.clear183 = and i32 %bf.lshr182, 7, !dbg !2853
  %cmp184 = icmp eq i32 %bf.clear183, 4, !dbg !2854
  br i1 %cmp184, label %if.then185, label %if.end194, !dbg !2855

if.then185:                                       ; preds = %if.end179
  %139 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2856
  %primary186 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %139, i32 0, i32 14, !dbg !2858
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %primary186, i32 0, i32 1, !dbg !2859
  store i32 2, i32* %vdd_type, align 8, !dbg !2860
  %140 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2861
  %141 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2862
  %primary187 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %141, i32 0, i32 14, !dbg !2863
  %call188 = call i32 @write_VD(%struct.archive_write* %140, %struct.vdd* %primary187), !dbg !2864
  store i32 %call188, i32* %ret, align 4, !dbg !2865
  %142 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2866
  %primary189 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %142, i32 0, i32 14, !dbg !2867
  %vdd_type190 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary189, i32 0, i32 1, !dbg !2868
  store i32 0, i32* %vdd_type190, align 8, !dbg !2869
  %143 = load i32, i32* %ret, align 4, !dbg !2870
  %cmp191 = icmp ne i32 %143, 0, !dbg !2872
  br i1 %cmp191, label %if.then192, label %if.end193, !dbg !2873

if.then192:                                       ; preds = %if.then185
  store i32 -30, i32* %retval, align 4, !dbg !2874
  br label %return, !dbg !2874

if.end193:                                        ; preds = %if.then185
  br label %if.end194, !dbg !2875

if.end194:                                        ; preds = %if.end193, %if.end179
  %144 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2876
  %opt195 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %144, i32 0, i32 37, !dbg !2878
  %145 = bitcast %struct.iso_option* %opt195 to i32*, !dbg !2879
  %bf.load196 = load i32, i32* %145, align 8, !dbg !2879
  %bf.lshr197 = lshr i32 %bf.load196, 17, !dbg !2879
  %bf.clear198 = and i32 %bf.lshr197, 3, !dbg !2879
  %tobool199 = icmp ne i32 %bf.clear198, 0, !dbg !2876
  br i1 %tobool199, label %if.then200, label %if.end206, !dbg !2880

if.then200:                                       ; preds = %if.end194
  %146 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2881
  %147 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2883
  %joliet201 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %147, i32 0, i32 15, !dbg !2884
  %call202 = call i32 @write_VD(%struct.archive_write* %146, %struct.vdd* %joliet201), !dbg !2885
  store i32 %call202, i32* %ret, align 4, !dbg !2886
  %148 = load i32, i32* %ret, align 4, !dbg !2887
  %cmp203 = icmp ne i32 %148, 0, !dbg !2889
  br i1 %cmp203, label %if.then204, label %if.end205, !dbg !2890

if.then204:                                       ; preds = %if.then200
  store i32 -30, i32* %retval, align 4, !dbg !2891
  br label %return, !dbg !2891

if.end205:                                        ; preds = %if.then200
  br label %if.end206, !dbg !2892

if.end206:                                        ; preds = %if.end205, %if.end194
  %149 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2893
  %call207 = call i32 @write_VD_terminator(%struct.archive_write* %149), !dbg !2894
  store i32 %call207, i32* %ret, align 4, !dbg !2895
  %150 = load i32, i32* %ret, align 4, !dbg !2896
  %cmp208 = icmp ne i32 %150, 0, !dbg !2898
  br i1 %cmp208, label %if.then209, label %if.end210, !dbg !2899

if.then209:                                       ; preds = %if.end206
  store i32 -30, i32* %retval, align 4, !dbg !2900
  br label %return, !dbg !2900

if.end210:                                        ; preds = %if.end206
  %151 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2901
  %call211 = call i32 @write_information_block(%struct.archive_write* %151), !dbg !2902
  store i32 %call211, i32* %ret, align 4, !dbg !2903
  %152 = load i32, i32* %ret, align 4, !dbg !2904
  %cmp212 = icmp ne i32 %152, 0, !dbg !2906
  br i1 %cmp212, label %if.then213, label %if.end214, !dbg !2907

if.then213:                                       ; preds = %if.end210
  store i32 -30, i32* %retval, align 4, !dbg !2908
  br label %return, !dbg !2908

if.end214:                                        ; preds = %if.end210
  %153 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2909
  %154 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2910
  %primary215 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %154, i32 0, i32 14, !dbg !2911
  %call216 = call i32 @write_path_table(%struct.archive_write* %153, i32 0, %struct.vdd* %primary215), !dbg !2912
  store i32 %call216, i32* %ret, align 4, !dbg !2913
  %155 = load i32, i32* %ret, align 4, !dbg !2914
  %cmp217 = icmp ne i32 %155, 0, !dbg !2916
  br i1 %cmp217, label %if.then218, label %if.end219, !dbg !2917

if.then218:                                       ; preds = %if.end214
  store i32 -30, i32* %retval, align 4, !dbg !2918
  br label %return, !dbg !2918

if.end219:                                        ; preds = %if.end214
  %156 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2919
  %157 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2920
  %primary220 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %157, i32 0, i32 14, !dbg !2921
  %call221 = call i32 @write_path_table(%struct.archive_write* %156, i32 1, %struct.vdd* %primary220), !dbg !2922
  store i32 %call221, i32* %ret, align 4, !dbg !2923
  %158 = load i32, i32* %ret, align 4, !dbg !2924
  %cmp222 = icmp ne i32 %158, 0, !dbg !2926
  br i1 %cmp222, label %if.then223, label %if.end224, !dbg !2927

if.then223:                                       ; preds = %if.end219
  store i32 -30, i32* %retval, align 4, !dbg !2928
  br label %return, !dbg !2928

if.end224:                                        ; preds = %if.end219
  %159 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2929
  %opt225 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %159, i32 0, i32 37, !dbg !2931
  %160 = bitcast %struct.iso_option* %opt225 to i32*, !dbg !2932
  %bf.load226 = load i32, i32* %160, align 8, !dbg !2932
  %bf.lshr227 = lshr i32 %bf.load226, 17, !dbg !2932
  %bf.clear228 = and i32 %bf.lshr227, 3, !dbg !2932
  %tobool229 = icmp ne i32 %bf.clear228, 0, !dbg !2929
  br i1 %tobool229, label %if.then230, label %if.end241, !dbg !2933

if.then230:                                       ; preds = %if.end224
  %161 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2934
  %162 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2936
  %joliet231 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %162, i32 0, i32 15, !dbg !2937
  %call232 = call i32 @write_path_table(%struct.archive_write* %161, i32 0, %struct.vdd* %joliet231), !dbg !2938
  store i32 %call232, i32* %ret, align 4, !dbg !2939
  %163 = load i32, i32* %ret, align 4, !dbg !2940
  %cmp233 = icmp ne i32 %163, 0, !dbg !2942
  br i1 %cmp233, label %if.then234, label %if.end235, !dbg !2943

if.then234:                                       ; preds = %if.then230
  store i32 -30, i32* %retval, align 4, !dbg !2944
  br label %return, !dbg !2944

if.end235:                                        ; preds = %if.then230
  %164 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2945
  %165 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2946
  %joliet236 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %165, i32 0, i32 15, !dbg !2947
  %call237 = call i32 @write_path_table(%struct.archive_write* %164, i32 1, %struct.vdd* %joliet236), !dbg !2948
  store i32 %call237, i32* %ret, align 4, !dbg !2949
  %166 = load i32, i32* %ret, align 4, !dbg !2950
  %cmp238 = icmp ne i32 %166, 0, !dbg !2952
  br i1 %cmp238, label %if.then239, label %if.end240, !dbg !2953

if.then239:                                       ; preds = %if.end235
  store i32 -30, i32* %retval, align 4, !dbg !2954
  br label %return, !dbg !2954

if.end240:                                        ; preds = %if.end235
  br label %if.end241, !dbg !2955

if.end241:                                        ; preds = %if.end240, %if.end224
  %167 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2956
  %168 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2957
  %primary242 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %168, i32 0, i32 14, !dbg !2958
  %call243 = call i32 @write_directory_descriptors(%struct.archive_write* %167, %struct.vdd* %primary242), !dbg !2959
  store i32 %call243, i32* %ret, align 4, !dbg !2960
  %169 = load i32, i32* %ret, align 4, !dbg !2961
  %cmp244 = icmp ne i32 %169, 0, !dbg !2963
  br i1 %cmp244, label %if.then245, label %if.end246, !dbg !2964

if.then245:                                       ; preds = %if.end241
  store i32 -30, i32* %retval, align 4, !dbg !2965
  br label %return, !dbg !2965

if.end246:                                        ; preds = %if.end241
  %170 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2966
  %opt247 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %170, i32 0, i32 37, !dbg !2968
  %171 = bitcast %struct.iso_option* %opt247 to i32*, !dbg !2969
  %bf.load248 = load i32, i32* %171, align 8, !dbg !2969
  %bf.lshr249 = lshr i32 %bf.load248, 17, !dbg !2969
  %bf.clear250 = and i32 %bf.lshr249, 3, !dbg !2969
  %tobool251 = icmp ne i32 %bf.clear250, 0, !dbg !2966
  br i1 %tobool251, label %if.then252, label %if.end258, !dbg !2970

if.then252:                                       ; preds = %if.end246
  %172 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2971
  %173 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2973
  %joliet253 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %173, i32 0, i32 15, !dbg !2974
  %call254 = call i32 @write_directory_descriptors(%struct.archive_write* %172, %struct.vdd* %joliet253), !dbg !2975
  store i32 %call254, i32* %ret, align 4, !dbg !2976
  %174 = load i32, i32* %ret, align 4, !dbg !2977
  %cmp255 = icmp ne i32 %174, 0, !dbg !2979
  br i1 %cmp255, label %if.then256, label %if.end257, !dbg !2980

if.then256:                                       ; preds = %if.then252
  store i32 -30, i32* %retval, align 4, !dbg !2981
  br label %return, !dbg !2981

if.end257:                                        ; preds = %if.then252
  br label %if.end258, !dbg !2982

if.end258:                                        ; preds = %if.end257, %if.end246
  %175 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !2983
  %opt259 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %175, i32 0, i32 37, !dbg !2985
  %176 = bitcast %struct.iso_option* %opt259 to i32*, !dbg !2986
  %bf.load260 = load i32, i32* %176, align 8, !dbg !2986
  %bf.lshr261 = lshr i32 %bf.load260, 23, !dbg !2986
  %bf.clear262 = and i32 %bf.lshr261, 3, !dbg !2986
  %tobool263 = icmp ne i32 %bf.clear262, 0, !dbg !2983
  br i1 %tobool263, label %if.then264, label %if.end269, !dbg !2987

if.then264:                                       ; preds = %if.end258
  %177 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2988
  %call265 = call i32 @write_rr_ER(%struct.archive_write* %177), !dbg !2990
  store i32 %call265, i32* %ret, align 4, !dbg !2991
  %178 = load i32, i32* %ret, align 4, !dbg !2992
  %cmp266 = icmp ne i32 %178, 0, !dbg !2994
  br i1 %cmp266, label %if.then267, label %if.end268, !dbg !2995

if.then267:                                       ; preds = %if.then264
  store i32 -30, i32* %retval, align 4, !dbg !2996
  br label %return, !dbg !2996

if.end268:                                        ; preds = %if.then264
  br label %if.end269, !dbg !2997

if.end269:                                        ; preds = %if.end268, %if.end258
  %179 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !2998
  %call270 = call i32 @write_file_descriptors(%struct.archive_write* %179), !dbg !2999
  store i32 %call270, i32* %ret, align 4, !dbg !3000
  %180 = load i32, i32* %ret, align 4, !dbg !3001
  %cmp271 = icmp ne i32 %180, 0, !dbg !3003
  br i1 %cmp271, label %if.then272, label %if.end273, !dbg !3004

if.then272:                                       ; preds = %if.end269
  store i32 -30, i32* %retval, align 4, !dbg !3005
  br label %return, !dbg !3005

if.end273:                                        ; preds = %if.end269
  %181 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3006
  %opt274 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %181, i32 0, i32 37, !dbg !3008
  %182 = bitcast %struct.iso_option* %opt274 to i32*, !dbg !3009
  %bf.load275 = load i32, i32* %182, align 8, !dbg !3009
  %bf.lshr276 = lshr i32 %bf.load275, 21, !dbg !3009
  %bf.clear277 = and i32 %bf.lshr276, 1, !dbg !3009
  %tobool278 = icmp ne i32 %bf.clear277, 0, !dbg !3006
  br i1 %tobool278, label %if.then279, label %if.end284, !dbg !3010

if.then279:                                       ; preds = %if.end273
  %183 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3011
  %call280 = call i32 @write_null(%struct.archive_write* %183, i64 307200), !dbg !3013
  store i32 %call280, i32* %ret, align 4, !dbg !3014
  %184 = load i32, i32* %ret, align 4, !dbg !3015
  %cmp281 = icmp ne i32 %184, 0, !dbg !3017
  br i1 %cmp281, label %if.then282, label %if.end283, !dbg !3018

if.then282:                                       ; preds = %if.then279
  store i32 -30, i32* %retval, align 4, !dbg !3019
  br label %return, !dbg !3019

if.end283:                                        ; preds = %if.then279
  br label %if.end284, !dbg !3020

if.end284:                                        ; preds = %if.end283, %if.end273
  %185 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3021
  %directories_too_deep = getelementptr inbounds %struct.iso9660, %struct.iso9660* %185, i32 0, i32 28, !dbg !3023
  %186 = load %struct.isoent*, %struct.isoent** %directories_too_deep, align 8, !dbg !3023
  %cmp285 = icmp ne %struct.isoent* %186, null, !dbg !3024
  br i1 %cmp285, label %if.then286, label %if.end291, !dbg !3025

if.then286:                                       ; preds = %if.end284
  %187 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3026
  %archive287 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %187, i32 0, i32 0, !dbg !3028
  %188 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3029
  %directories_too_deep288 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %188, i32 0, i32 28, !dbg !3030
  %189 = load %struct.isoent*, %struct.isoent** %directories_too_deep288, align 8, !dbg !3030
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %189, i32 0, i32 1, !dbg !3031
  %190 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3031
  %entry289 = getelementptr inbounds %struct.isofile, %struct.isofile* %190, i32 0, i32 4, !dbg !3032
  %191 = load %struct.archive_entry*, %struct.archive_entry** %entry289, align 8, !dbg !3032
  %call290 = call i8* @archive_entry_pathname(%struct.archive_entry* %191), !dbg !3033
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive287, i32 -1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i32 0, i32 0), i8* %call290), !dbg !3034
  store i32 -20, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

if.end291:                                        ; preds = %if.end284
  %192 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3036
  %call292 = call i32 @wb_write_out(%struct.archive_write* %192), !dbg !3037
  store i32 %call292, i32* %ret, align 4, !dbg !3038
  %193 = load i32, i32* %ret, align 4, !dbg !3039
  store i32 %193, i32* %retval, align 4, !dbg !3040
  br label %return, !dbg !3040

return:                                           ; preds = %if.end291, %if.then286, %if.then282, %if.then272, %if.then267, %if.then256, %if.then245, %if.then239, %if.then234, %if.then223, %if.then218, %if.then213, %if.then209, %if.then204, %if.then192, %if.then177, %if.then167, %if.then162, %if.then147, %if.then62, %if.then56, %if.then50, %if.then42, %if.then28, %if.then21, %if.then13, %if.then9, %if.then3
  %194 = load i32, i32* %retval, align 4, !dbg !3041
  ret i32 %194, !dbg !3041
}

; Function Attrs: nounwind uwtable
define internal i32 @iso9660_free(%struct.archive_write* %a) #0 !dbg !937 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !3042, metadata !986), !dbg !3043
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !3044, metadata !986), !dbg !3045
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3046, metadata !986), !dbg !3047
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3048, metadata !986), !dbg !3049
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3050
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !3051
  %1 = load i8*, i8** %format_data, align 8, !dbg !3051
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !3050
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !3052
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3053
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 1, !dbg !3055
  %4 = load i32, i32* %temp_fd, align 8, !dbg !3055
  %cmp = icmp sge i32 %4, 0, !dbg !3056
  br i1 %cmp, label %if.then, label %if.end, !dbg !3057

if.then:                                          ; preds = %entry
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3058
  %temp_fd1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 1, !dbg !3059
  %6 = load i32, i32* %temp_fd1, align 8, !dbg !3059
  %call = call i32 @close(i32 %6), !dbg !3060
  br label %if.end, !dbg !3060

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3061
  %call2 = call i32 @zisofs_free(%struct.archive_write* %7), !dbg !3062
  store i32 %call2, i32* %ret, align 4, !dbg !3063
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3064
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 14, !dbg !3065
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 0, !dbg !3066
  %9 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !3066
  call void @isoent_free_all(%struct.isoent* %9), !dbg !3067
  store i32 0, i32* %i, align 4, !dbg !3068
  br label %for.cond, !dbg !3070

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !3071
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3074
  %primary3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 14, !dbg !3075
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %primary3, i32 0, i32 3, !dbg !3076
  %12 = load i32, i32* %max_depth, align 8, !dbg !3076
  %cmp4 = icmp slt i32 %10, %12, !dbg !3077
  br i1 %cmp4, label %for.body, label %for.end, !dbg !3078

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !3079
  %idxprom = sext i32 %13 to i64, !dbg !3080
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3080
  %primary5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 14, !dbg !3081
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %primary5, i32 0, i32 2, !dbg !3082
  %15 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !3082
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %15, i64 %idxprom, !dbg !3080
  %sorted = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx, i32 0, i32 2, !dbg !3083
  %16 = load %struct.isoent**, %struct.isoent*** %sorted, align 8, !dbg !3083
  %17 = bitcast %struct.isoent** %16 to i8*, !dbg !3080
  call void @free(i8* %17) #8, !dbg !3084
  br label %for.inc, !dbg !3084

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !3085
  %inc = add nsw i32 %18, 1, !dbg !3085
  store i32 %inc, i32* %i, align 4, !dbg !3085
  br label %for.cond, !dbg !3087

for.end:                                          ; preds = %for.cond
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3088
  %primary6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 14, !dbg !3089
  %pathtbl7 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary6, i32 0, i32 2, !dbg !3090
  %20 = load %struct.path_table*, %struct.path_table** %pathtbl7, align 8, !dbg !3090
  %21 = bitcast %struct.path_table* %20 to i8*, !dbg !3088
  call void @free(i8* %21) #8, !dbg !3091
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3092
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 37, !dbg !3094
  %23 = bitcast %struct.iso_option* %opt to i32*, !dbg !3095
  %bf.load = load i32, i32* %23, align 8, !dbg !3095
  %bf.lshr = lshr i32 %bf.load, 17, !dbg !3095
  %bf.clear = and i32 %bf.lshr, 3, !dbg !3095
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !3092
  br i1 %tobool, label %if.then8, label %if.end25, !dbg !3096

if.then8:                                         ; preds = %for.end
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3097
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 15, !dbg !3099
  %rootent9 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet, i32 0, i32 0, !dbg !3100
  %25 = load %struct.isoent*, %struct.isoent** %rootent9, align 8, !dbg !3100
  call void @isoent_free_all(%struct.isoent* %25), !dbg !3101
  store i32 0, i32* %i, align 4, !dbg !3102
  br label %for.cond10, !dbg !3104

for.cond10:                                       ; preds = %for.inc20, %if.then8
  %26 = load i32, i32* %i, align 4, !dbg !3105
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3108
  %joliet11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 15, !dbg !3109
  %max_depth12 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet11, i32 0, i32 3, !dbg !3110
  %28 = load i32, i32* %max_depth12, align 8, !dbg !3110
  %cmp13 = icmp slt i32 %26, %28, !dbg !3111
  br i1 %cmp13, label %for.body14, label %for.end22, !dbg !3112

for.body14:                                       ; preds = %for.cond10
  %29 = load i32, i32* %i, align 4, !dbg !3113
  %idxprom15 = sext i32 %29 to i64, !dbg !3114
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3114
  %joliet16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 15, !dbg !3115
  %pathtbl17 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet16, i32 0, i32 2, !dbg !3116
  %31 = load %struct.path_table*, %struct.path_table** %pathtbl17, align 8, !dbg !3116
  %arrayidx18 = getelementptr inbounds %struct.path_table, %struct.path_table* %31, i64 %idxprom15, !dbg !3114
  %sorted19 = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx18, i32 0, i32 2, !dbg !3117
  %32 = load %struct.isoent**, %struct.isoent*** %sorted19, align 8, !dbg !3117
  %33 = bitcast %struct.isoent** %32 to i8*, !dbg !3114
  call void @free(i8* %33) #8, !dbg !3118
  br label %for.inc20, !dbg !3118

for.inc20:                                        ; preds = %for.body14
  %34 = load i32, i32* %i, align 4, !dbg !3119
  %inc21 = add nsw i32 %34, 1, !dbg !3119
  store i32 %inc21, i32* %i, align 4, !dbg !3119
  br label %for.cond10, !dbg !3121

for.end22:                                        ; preds = %for.cond10
  %35 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3122
  %joliet23 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %35, i32 0, i32 15, !dbg !3123
  %pathtbl24 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet23, i32 0, i32 2, !dbg !3124
  %36 = load %struct.path_table*, %struct.path_table** %pathtbl24, align 8, !dbg !3124
  %37 = bitcast %struct.path_table* %36 to i8*, !dbg !3122
  call void @free(i8* %37) #8, !dbg !3125
  br label %if.end25, !dbg !3126

if.end25:                                         ; preds = %for.end22, %for.end
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3127
  call void @isofile_free_all_entries(%struct.iso9660* %38), !dbg !3128
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3129
  call void @isofile_free_hardlinks(%struct.iso9660* %39), !dbg !3130
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3131
  %cur_dirstr = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 4, !dbg !3132
  call void @archive_string_free(%struct.archive_string* %cur_dirstr), !dbg !3133
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3134
  %volume_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 19, !dbg !3135
  call void @archive_string_free(%struct.archive_string* %volume_identifier), !dbg !3136
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3137
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 20, !dbg !3138
  call void @archive_string_free(%struct.archive_string* %publisher_identifier), !dbg !3139
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3140
  %data_preparer_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 21, !dbg !3141
  call void @archive_string_free(%struct.archive_string* %data_preparer_identifier), !dbg !3142
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3143
  %application_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 22, !dbg !3144
  call void @archive_string_free(%struct.archive_string* %application_identifier), !dbg !3145
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3146
  %copyright_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 23, !dbg !3147
  call void @archive_string_free(%struct.archive_string* %copyright_file_identifier), !dbg !3148
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3149
  %abstract_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 24, !dbg !3150
  call void @archive_string_free(%struct.archive_string* %abstract_file_identifier), !dbg !3151
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3152
  %bibliographic_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 25, !dbg !3153
  call void @archive_string_free(%struct.archive_string* %bibliographic_file_identifier), !dbg !3154
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3155
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 36, !dbg !3156
  %catalog_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 0, !dbg !3157
  call void @archive_string_free(%struct.archive_string* %catalog_filename), !dbg !3158
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3159
  %el_torito26 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 36, !dbg !3160
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito26, i32 0, i32 2, !dbg !3161
  call void @archive_string_free(%struct.archive_string* %boot_filename), !dbg !3162
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3163
  %el_torito27 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 36, !dbg !3164
  %id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito27, i32 0, i32 5, !dbg !3165
  call void @archive_string_free(%struct.archive_string* %id), !dbg !3166
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3167
  %utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 7, !dbg !3168
  call void @archive_string_free(%struct.archive_string* %utf16be), !dbg !3169
  %52 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3170
  %mbs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %52, i32 0, i32 8, !dbg !3171
  call void @archive_string_free(%struct.archive_string* %mbs), !dbg !3172
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3173
  %54 = bitcast %struct.iso9660* %53 to i8*, !dbg !3173
  call void @free(i8* %54) #8, !dbg !3174
  %55 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3175
  %format_data28 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %55, i32 0, i32 14, !dbg !3176
  store i8* null, i8** %format_data28, align 8, !dbg !3177
  %56 = load i32, i32* %ret, align 4, !dbg !3178
  ret i32 %56, !dbg !3179
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @get_str_opt(%struct.archive_write* %a, %struct.archive_string* %s, i64 %maxsize, i8* %key, i8* %value) #0 !dbg !572 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %s.addr = alloca %struct.archive_string*, align 8
  %maxsize.addr = alloca i64, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !3180, metadata !986), !dbg !3181
  store %struct.archive_string* %s, %struct.archive_string** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string** %s.addr, metadata !3182, metadata !986), !dbg !3183
  store i64 %maxsize, i64* %maxsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !3184, metadata !986), !dbg !3185
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3186, metadata !986), !dbg !3187
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !3188, metadata !986), !dbg !3189
  %0 = load i8*, i8** %value.addr, align 8, !dbg !3190
  %call = call i64 @strlen(i8* %0) #9, !dbg !3192
  %1 = load i64, i64* %maxsize.addr, align 8, !dbg !3193
  %cmp = icmp ugt i64 %call, %1, !dbg !3194
  br i1 %cmp, label %if.then, label %if.end, !dbg !3195

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3196
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %2, i32 0, i32 0, !dbg !3198
  %3 = load i64, i64* %maxsize.addr, align 8, !dbg !3199
  %4 = load i8*, i8** %key.addr, align 8, !dbg !3200
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39, i32 0, i32 0), i64 %3, i8* %4), !dbg !3201
  store i32 -30, i32* %retval, align 4, !dbg !3202
  br label %return, !dbg !3202

if.end:                                           ; preds = %entry
  %5 = load %struct.archive_string*, %struct.archive_string** %s.addr, align 8, !dbg !3203
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %5, i32 0, i32 1, !dbg !3203
  store i64 0, i64* %length, align 8, !dbg !3203
  %6 = load %struct.archive_string*, %struct.archive_string** %s.addr, align 8, !dbg !3203
  %7 = load i8*, i8** %value.addr, align 8, !dbg !3203
  %8 = load i8*, i8** %value.addr, align 8, !dbg !3203
  %cmp1 = icmp eq i8* %8, null, !dbg !3203
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !3203

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !3204

cond.false:                                       ; preds = %if.end
  %9 = load i8*, i8** %value.addr, align 8, !dbg !3206
  %call2 = call i64 @strlen(i8* %9) #9, !dbg !3206
  br label %cond.end, !dbg !3206

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call2, %cond.false ], !dbg !3208
  %call3 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %6, i8* %7, i64 %cond), !dbg !3208
  store i32 0, i32* %retval, align 4, !dbg !3210
  br label %return, !dbg !3210

return:                                           ; preds = %cond.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3211
  ret i32 %10, !dbg !3211
}

; Function Attrs: nounwind uwtable
define internal i32 @get_num_opt(%struct.archive_write* %a, i32* %num, i32 %high, i32 %low, i8* %key, i8* %value) #0 !dbg !576 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %num.addr = alloca i32*, align 8
  %high.addr = alloca i32, align 4
  %low.addr = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %data = alloca i32, align 4
  %neg = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !3212, metadata !986), !dbg !3213
  store i32* %num, i32** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num.addr, metadata !3214, metadata !986), !dbg !3215
  store i32 %high, i32* %high.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %high.addr, metadata !3216, metadata !986), !dbg !3217
  store i32 %low, i32* %low.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %low.addr, metadata !3218, metadata !986), !dbg !3219
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3220, metadata !986), !dbg !3221
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !3222, metadata !986), !dbg !3223
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3224, metadata !986), !dbg !3225
  %0 = load i8*, i8** %value.addr, align 8, !dbg !3226
  store i8* %0, i8** %p, align 8, !dbg !3225
  call void @llvm.dbg.declare(metadata i32* %data, metadata !3227, metadata !986), !dbg !3228
  store i32 0, i32* %data, align 4, !dbg !3228
  call void @llvm.dbg.declare(metadata i32* %neg, metadata !3229, metadata !986), !dbg !3230
  store i32 0, i32* %neg, align 4, !dbg !3230
  %1 = load i8*, i8** %p, align 8, !dbg !3231
  %cmp = icmp eq i8* %1, null, !dbg !3233
  br i1 %cmp, label %if.then, label %if.end, !dbg !3234

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3235
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %2, i32 0, i32 0, !dbg !3237
  %3 = load i8*, i8** %key.addr, align 8, !dbg !3238
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i32 0, i32 0), i8* %3), !dbg !3239
  store i32 -30, i32* %retval, align 4, !dbg !3240
  br label %return, !dbg !3240

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !3241
  %5 = load i8, i8* %4, align 1, !dbg !3243
  %conv = sext i8 %5 to i32, !dbg !3243
  %cmp1 = icmp eq i32 %conv, 45, !dbg !3244
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !3245

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %neg, align 4, !dbg !3246
  %6 = load i8*, i8** %p, align 8, !dbg !3248
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !3248
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3248
  br label %if.end4, !dbg !3249

if.end4:                                          ; preds = %if.then3, %if.end
  br label %while.cond, !dbg !3250

while.cond:                                       ; preds = %if.end24, %if.end4
  %7 = load i8*, i8** %p, align 8, !dbg !3251
  %8 = load i8, i8* %7, align 1, !dbg !3253
  %tobool = icmp ne i8 %8, 0, !dbg !3254
  br i1 %tobool, label %while.body, label %while.end, !dbg !3254

while.body:                                       ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3255
  %10 = load i8, i8* %9, align 1, !dbg !3258
  %conv5 = sext i8 %10 to i32, !dbg !3258
  %cmp6 = icmp sge i32 %conv5, 48, !dbg !3259
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !3260

land.lhs.true:                                    ; preds = %while.body
  %11 = load i8*, i8** %p, align 8, !dbg !3261
  %12 = load i8, i8* %11, align 1, !dbg !3263
  %conv8 = sext i8 %12 to i32, !dbg !3263
  %cmp9 = icmp sle i32 %conv8, 57, !dbg !3264
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3265

if.then11:                                        ; preds = %land.lhs.true
  %13 = load i32, i32* %data, align 4, !dbg !3266
  %mul = mul nsw i32 %13, 10, !dbg !3267
  %14 = load i8*, i8** %p, align 8, !dbg !3268
  %15 = load i8, i8* %14, align 1, !dbg !3269
  %conv12 = sext i8 %15 to i32, !dbg !3269
  %add = add nsw i32 %mul, %conv12, !dbg !3270
  %sub = sub nsw i32 %add, 48, !dbg !3271
  store i32 %sub, i32* %data, align 4, !dbg !3272
  br label %if.end14, !dbg !3273

if.else:                                          ; preds = %land.lhs.true, %while.body
  %16 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3274
  %archive13 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %16, i32 0, i32 0, !dbg !3276
  %17 = load i8*, i8** %key.addr, align 8, !dbg !3277
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive13, i32 -1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i32 0, i32 0), i8* %17), !dbg !3278
  store i32 -30, i32* %retval, align 4, !dbg !3279
  br label %return, !dbg !3279

if.end14:                                         ; preds = %if.then11
  %18 = load i32, i32* %data, align 4, !dbg !3280
  %19 = load i32, i32* %high.addr, align 4, !dbg !3282
  %cmp15 = icmp sgt i32 %18, %19, !dbg !3283
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !3284

if.then17:                                        ; preds = %if.end14
  %20 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3285
  %archive18 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %20, i32 0, i32 0, !dbg !3287
  %21 = load i32, i32* %high.addr, align 4, !dbg !3288
  %22 = load i8*, i8** %key.addr, align 8, !dbg !3289
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive18, i32 -1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.41, i32 0, i32 0), i32 %21, i8* %22), !dbg !3290
  store i32 -30, i32* %retval, align 4, !dbg !3291
  br label %return, !dbg !3291

if.end19:                                         ; preds = %if.end14
  %23 = load i32, i32* %data, align 4, !dbg !3292
  %24 = load i32, i32* %low.addr, align 4, !dbg !3294
  %cmp20 = icmp slt i32 %23, %24, !dbg !3295
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !3296

if.then22:                                        ; preds = %if.end19
  %25 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3297
  %archive23 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %25, i32 0, i32 0, !dbg !3299
  %26 = load i32, i32* %low.addr, align 4, !dbg !3300
  %27 = load i8*, i8** %key.addr, align 8, !dbg !3301
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive23, i32 -1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i32 0, i32 0), i32 %26, i8* %27), !dbg !3302
  store i32 -30, i32* %retval, align 4, !dbg !3303
  br label %return, !dbg !3303

if.end24:                                         ; preds = %if.end19
  %28 = load i8*, i8** %p, align 8, !dbg !3304
  %incdec.ptr25 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !3304
  store i8* %incdec.ptr25, i8** %p, align 8, !dbg !3304
  br label %while.cond, !dbg !3305

while.end:                                        ; preds = %while.cond
  %29 = load i32, i32* %neg, align 4, !dbg !3307
  %tobool26 = icmp ne i32 %29, 0, !dbg !3307
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !3309

if.then27:                                        ; preds = %while.end
  %30 = load i32, i32* %data, align 4, !dbg !3310
  %mul28 = mul nsw i32 %30, -1, !dbg !3310
  store i32 %mul28, i32* %data, align 4, !dbg !3310
  br label %if.end29, !dbg !3311

if.end29:                                         ; preds = %if.then27, %while.end
  %31 = load i32, i32* %data, align 4, !dbg !3312
  %32 = load i32*, i32** %num.addr, align 8, !dbg !3313
  store i32 %31, i32* %32, align 4, !dbg !3314
  store i32 0, i32* %retval, align 4, !dbg !3315
  br label %return, !dbg !3315

return:                                           ; preds = %if.end29, %if.then22, %if.then17, %if.else, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !3316
  ret i32 %33, !dbg !3316
}

declare i32 @archive_entry_filetype(%struct.archive_entry*) #2

declare i64 @archive_entry_size(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal %struct.isofile* @isofile_new(%struct.archive_write* %a, %struct.archive_entry* %entry1) #0 !dbg !581 {
entry:
  %retval = alloca %struct.isofile*, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %entry.addr = alloca %struct.archive_entry*, align 8
  %file = alloca %struct.isofile*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !3317, metadata !986), !dbg !3318
  store %struct.archive_entry* %entry1, %struct.archive_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry.addr, metadata !3319, metadata !986), !dbg !3320
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !3321, metadata !986), !dbg !3322
  %call = call noalias i8* @calloc(i64 1, i64 200) #8, !dbg !3323
  %0 = bitcast i8* %call to %struct.isofile*, !dbg !3323
  store %struct.isofile* %0, %struct.isofile** %file, align 8, !dbg !3324
  %1 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3325
  %cmp = icmp eq %struct.isofile* %1, null, !dbg !3327
  br i1 %cmp, label %if.then, label %if.end, !dbg !3328

if.then:                                          ; preds = %entry
  store %struct.isofile* null, %struct.isofile** %retval, align 8, !dbg !3329
  br label %return, !dbg !3329

if.end:                                           ; preds = %entry
  %2 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3330
  %cmp2 = icmp ne %struct.archive_entry* %2, null, !dbg !3332
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3333

if.then3:                                         ; preds = %if.end
  %3 = load %struct.archive_entry*, %struct.archive_entry** %entry.addr, align 8, !dbg !3334
  %call4 = call %struct.archive_entry* @archive_entry_clone(%struct.archive_entry* %3), !dbg !3335
  %4 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3336
  %entry5 = getelementptr inbounds %struct.isofile, %struct.isofile* %4, i32 0, i32 4, !dbg !3337
  store %struct.archive_entry* %call4, %struct.archive_entry** %entry5, align 8, !dbg !3338
  br label %if.end8, !dbg !3336

if.else:                                          ; preds = %if.end
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3339
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %5, i32 0, i32 0, !dbg !3340
  %call6 = call %struct.archive_entry* @archive_entry_new2(%struct.archive* %archive), !dbg !3341
  %6 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3342
  %entry7 = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 4, !dbg !3343
  store %struct.archive_entry* %call6, %struct.archive_entry** %entry7, align 8, !dbg !3344
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  %7 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3345
  %entry9 = getelementptr inbounds %struct.isofile, %struct.isofile* %7, i32 0, i32 4, !dbg !3347
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry9, align 8, !dbg !3347
  %cmp10 = icmp eq %struct.archive_entry* %8, null, !dbg !3348
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3349

if.then11:                                        ; preds = %if.end8
  %9 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3350
  %10 = bitcast %struct.isofile* %9 to i8*, !dbg !3350
  call void @free(i8* %10) #8, !dbg !3352
  store %struct.isofile* null, %struct.isofile** %retval, align 8, !dbg !3353
  br label %return, !dbg !3353

if.end12:                                         ; preds = %if.end8
  br label %do.body, !dbg !3354

do.body:                                          ; preds = %if.end12
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3355
  %parentdir = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 5, !dbg !3355
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir, i32 0, i32 0, !dbg !3355
  store i8* null, i8** %s, align 8, !dbg !3355
  %12 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3355
  %parentdir13 = getelementptr inbounds %struct.isofile, %struct.isofile* %12, i32 0, i32 5, !dbg !3355
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir13, i32 0, i32 1, !dbg !3355
  store i64 0, i64* %length, align 8, !dbg !3355
  %13 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3355
  %parentdir14 = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 5, !dbg !3355
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir14, i32 0, i32 2, !dbg !3355
  store i64 0, i64* %buffer_length, align 8, !dbg !3355
  br label %do.end, !dbg !3355

do.end:                                           ; preds = %do.body
  br label %do.body15, !dbg !3358

do.body15:                                        ; preds = %do.end
  %14 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3359
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %14, i32 0, i32 6, !dbg !3359
  %s16 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 0, !dbg !3359
  store i8* null, i8** %s16, align 8, !dbg !3359
  %15 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3359
  %basename17 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 6, !dbg !3359
  %length18 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename17, i32 0, i32 1, !dbg !3359
  store i64 0, i64* %length18, align 8, !dbg !3359
  %16 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3359
  %basename19 = getelementptr inbounds %struct.isofile, %struct.isofile* %16, i32 0, i32 6, !dbg !3359
  %buffer_length20 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename19, i32 0, i32 2, !dbg !3359
  store i64 0, i64* %buffer_length20, align 8, !dbg !3359
  br label %do.end21, !dbg !3359

do.end21:                                         ; preds = %do.body15
  br label %do.body22, !dbg !3362

do.body22:                                        ; preds = %do.end21
  %17 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3363
  %basename_utf16 = getelementptr inbounds %struct.isofile, %struct.isofile* %17, i32 0, i32 7, !dbg !3363
  %s23 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf16, i32 0, i32 0, !dbg !3363
  store i8* null, i8** %s23, align 8, !dbg !3363
  %18 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3363
  %basename_utf1624 = getelementptr inbounds %struct.isofile, %struct.isofile* %18, i32 0, i32 7, !dbg !3363
  %length25 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1624, i32 0, i32 1, !dbg !3363
  store i64 0, i64* %length25, align 8, !dbg !3363
  %19 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3363
  %basename_utf1626 = getelementptr inbounds %struct.isofile, %struct.isofile* %19, i32 0, i32 7, !dbg !3363
  %buffer_length27 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1626, i32 0, i32 2, !dbg !3363
  store i64 0, i64* %buffer_length27, align 8, !dbg !3363
  br label %do.end28, !dbg !3363

do.end28:                                         ; preds = %do.body22
  br label %do.body29, !dbg !3366

do.body29:                                        ; preds = %do.end28
  %20 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3367
  %symlink = getelementptr inbounds %struct.isofile, %struct.isofile* %20, i32 0, i32 8, !dbg !3367
  %s30 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink, i32 0, i32 0, !dbg !3367
  store i8* null, i8** %s30, align 8, !dbg !3367
  %21 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3367
  %symlink31 = getelementptr inbounds %struct.isofile, %struct.isofile* %21, i32 0, i32 8, !dbg !3367
  %length32 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink31, i32 0, i32 1, !dbg !3367
  store i64 0, i64* %length32, align 8, !dbg !3367
  %22 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3367
  %symlink33 = getelementptr inbounds %struct.isofile, %struct.isofile* %22, i32 0, i32 8, !dbg !3367
  %buffer_length34 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink33, i32 0, i32 2, !dbg !3367
  store i64 0, i64* %buffer_length34, align 8, !dbg !3367
  br label %do.end35, !dbg !3367

do.end35:                                         ; preds = %do.body29
  %23 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3370
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %23, i32 0, i32 10, !dbg !3371
  %24 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3372
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 11, !dbg !3373
  store %struct.content* %content, %struct.content** %cur_content, align 8, !dbg !3374
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !3375
  store %struct.isofile* %25, %struct.isofile** %retval, align 8, !dbg !3376
  br label %return, !dbg !3376

return:                                           ; preds = %do.end35, %if.then11, %if.then
  %26 = load %struct.isofile*, %struct.isofile** %retval, align 8, !dbg !3377
  ret %struct.isofile* %26, !dbg !3377
}

; Function Attrs: nounwind uwtable
define internal i32 @isofile_gen_utility_names(%struct.archive_write* %a, %struct.isofile* %file) #0 !dbg !584 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %pathname = alloca i8*, align 8
  %p = alloca i8*, align 8
  %dirname = alloca i8*, align 8
  %slash = alloca i8*, align 8
  %len = alloca i64, align 8
  %ret = alloca i32, align 4
  %u16 = alloca i8*, align 8
  %ulast = alloca i8*, align 8
  %u16len = alloca i64, align 8
  %ulen_last = alloca i64, align 8
  %ll = alloca i64, align 8
  %rp = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !3378, metadata !986), !dbg !3379
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !3380, metadata !986), !dbg !3381
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !3382, metadata !986), !dbg !3383
  call void @llvm.dbg.declare(metadata i8** %pathname, metadata !3384, metadata !986), !dbg !3385
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3386, metadata !986), !dbg !3387
  call void @llvm.dbg.declare(metadata i8** %dirname, metadata !3388, metadata !986), !dbg !3389
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !3390, metadata !986), !dbg !3391
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3392, metadata !986), !dbg !3393
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3394, metadata !986), !dbg !3395
  store i32 0, i32* %ret, align 4, !dbg !3395
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3396
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !3397
  %1 = load i8*, i8** %format_data, align 8, !dbg !3397
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !3396
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !3398
  %3 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3399
  %parentdir = getelementptr inbounds %struct.isofile, %struct.isofile* %3, i32 0, i32 5, !dbg !3399
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir, i32 0, i32 1, !dbg !3399
  store i64 0, i64* %length, align 8, !dbg !3399
  %4 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3400
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %4, i32 0, i32 6, !dbg !3400
  %length1 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 1, !dbg !3400
  store i64 0, i64* %length1, align 8, !dbg !3400
  %5 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3401
  %basename_utf16 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 7, !dbg !3401
  %length2 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf16, i32 0, i32 1, !dbg !3401
  store i64 0, i64* %length2, align 8, !dbg !3401
  %6 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3402
  %symlink = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 8, !dbg !3402
  %length3 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink, i32 0, i32 1, !dbg !3402
  store i64 0, i64* %length3, align 8, !dbg !3402
  %7 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3403
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %7, i32 0, i32 4, !dbg !3404
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !3404
  %call = call i8* @archive_entry_pathname(%struct.archive_entry* %8), !dbg !3405
  store i8* %call, i8** %pathname, align 8, !dbg !3406
  %9 = load i8*, i8** %pathname, align 8, !dbg !3407
  %cmp = icmp eq i8* %9, null, !dbg !3409
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3410

lor.lhs.false:                                    ; preds = %entry
  %10 = load i8*, i8** %pathname, align 8, !dbg !3411
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !3411
  %11 = load i8, i8* %arrayidx, align 1, !dbg !3411
  %conv = sext i8 %11 to i32, !dbg !3411
  %cmp5 = icmp eq i32 %conv, 0, !dbg !3413
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3414

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3415
  %dircnt = getelementptr inbounds %struct.isofile, %struct.isofile* %12, i32 0, i32 9, !dbg !3417
  store i32 0, i32* %dircnt, align 8, !dbg !3418
  %13 = load i32, i32* %ret, align 4, !dbg !3419
  store i32 %13, i32* %retval, align 4, !dbg !3420
  br label %return, !dbg !3420

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3421
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 37, !dbg !3423
  %15 = bitcast %struct.iso_option* %opt to i32*, !dbg !3424
  %bf.load = load i32, i32* %15, align 8, !dbg !3424
  %bf.lshr = lshr i32 %bf.load, 17, !dbg !3424
  %bf.clear = and i32 %bf.lshr, 3, !dbg !3424
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !3421
  br i1 %tobool, label %if.then7, label %if.end82, !dbg !3425

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %u16, metadata !3426, metadata !986), !dbg !3428
  call void @llvm.dbg.declare(metadata i8** %ulast, metadata !3429, metadata !986), !dbg !3430
  call void @llvm.dbg.declare(metadata i64* %u16len, metadata !3431, metadata !986), !dbg !3432
  call void @llvm.dbg.declare(metadata i64* %ulen_last, metadata !3433, metadata !986), !dbg !3434
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3435
  %sconv_to_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 9, !dbg !3437
  %17 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be, align 8, !dbg !3437
  %cmp8 = icmp eq %struct.archive_string_conv* %17, null, !dbg !3438
  br i1 %cmp8, label %if.then10, label %if.end25, !dbg !3439

if.then10:                                        ; preds = %if.then7
  %18 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3440
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %18, i32 0, i32 0, !dbg !3442
  %call11 = call %struct.archive_string_conv* @archive_string_conversion_to_charset(%struct.archive* %archive, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 1), !dbg !3443
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3444
  %sconv_to_utf16be12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 9, !dbg !3445
  store %struct.archive_string_conv* %call11, %struct.archive_string_conv** %sconv_to_utf16be12, align 8, !dbg !3446
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3447
  %sconv_to_utf16be13 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 9, !dbg !3449
  %21 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be13, align 8, !dbg !3449
  %cmp14 = icmp eq %struct.archive_string_conv* %21, null, !dbg !3450
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !3451

if.then16:                                        ; preds = %if.then10
  store i32 -30, i32* %retval, align 4, !dbg !3452
  br label %return, !dbg !3452

if.end17:                                         ; preds = %if.then10
  %22 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3453
  %archive18 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %22, i32 0, i32 0, !dbg !3454
  %call19 = call %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive* %archive18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 1), !dbg !3455
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3456
  %sconv_from_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 10, !dbg !3457
  store %struct.archive_string_conv* %call19, %struct.archive_string_conv** %sconv_from_utf16be, align 8, !dbg !3458
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3459
  %sconv_from_utf16be20 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 10, !dbg !3461
  %25 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_from_utf16be20, align 8, !dbg !3461
  %cmp21 = icmp eq %struct.archive_string_conv* %25, null, !dbg !3462
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3463

if.then23:                                        ; preds = %if.end17
  store i32 -30, i32* %retval, align 4, !dbg !3464
  br label %return, !dbg !3464

if.end24:                                         ; preds = %if.end17
  br label %if.end25, !dbg !3465

if.end25:                                         ; preds = %if.end24, %if.then7
  %26 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3466
  %entry26 = getelementptr inbounds %struct.isofile, %struct.isofile* %26, i32 0, i32 4, !dbg !3468
  %27 = load %struct.archive_entry*, %struct.archive_entry** %entry26, align 8, !dbg !3468
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !3469
  %sconv_to_utf16be27 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 9, !dbg !3470
  %29 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be27, align 8, !dbg !3470
  %call28 = call i32 @_archive_entry_pathname_l(%struct.archive_entry* %27, i8** %u16, i64* %u16len, %struct.archive_string_conv* %29), !dbg !3471
  %cmp29 = icmp sgt i32 0, %call28, !dbg !3472
  br i1 %cmp29, label %if.then31, label %if.end39, !dbg !3473

if.then31:                                        ; preds = %if.end25
  %call32 = call i32* @__errno_location() #1, !dbg !3474
  %30 = load i32, i32* %call32, align 4, !dbg !3474
  %cmp33 = icmp eq i32 %30, 12, !dbg !3477
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !3478

if.then35:                                        ; preds = %if.then31
  %31 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3479
  %archive36 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %31, i32 0, i32 0, !dbg !3481
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive36, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0)), !dbg !3482
  store i32 -30, i32* %retval, align 4, !dbg !3483
  br label %return, !dbg !3483

if.end37:                                         ; preds = %if.then31
  %32 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3484
  %archive38 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %32, i32 0, i32 0, !dbg !3485
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive38, i32 -1, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.49, i32 0, i32 0)), !dbg !3486
  store i32 -20, i32* %ret, align 4, !dbg !3487
  br label %if.end39, !dbg !3488

if.end39:                                         ; preds = %if.end37, %if.end25
  br label %while.cond, !dbg !3489

while.cond:                                       ; preds = %if.end53, %if.end39
  %33 = load i64, i64* %u16len, align 8, !dbg !3490
  %cmp40 = icmp uge i64 %33, 2, !dbg !3492
  br i1 %cmp40, label %while.body, label %while.end, !dbg !3493

while.body:                                       ; preds = %while.cond
  %34 = load i64, i64* %u16len, align 8, !dbg !3494
  %sub = sub i64 %34, 2, !dbg !3497
  %35 = load i8*, i8** %u16, align 8, !dbg !3498
  %arrayidx42 = getelementptr inbounds i8, i8* %35, i64 %sub, !dbg !3498
  %36 = load i8, i8* %arrayidx42, align 1, !dbg !3498
  %conv43 = sext i8 %36 to i32, !dbg !3498
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !3499
  br i1 %cmp44, label %land.lhs.true, label %if.else, !dbg !3500

land.lhs.true:                                    ; preds = %while.body
  %37 = load i64, i64* %u16len, align 8, !dbg !3501
  %sub46 = sub i64 %37, 1, !dbg !3503
  %38 = load i8*, i8** %u16, align 8, !dbg !3504
  %arrayidx47 = getelementptr inbounds i8, i8* %38, i64 %sub46, !dbg !3504
  %39 = load i8, i8* %arrayidx47, align 1, !dbg !3504
  %conv48 = sext i8 %39 to i32, !dbg !3504
  %cmp49 = icmp eq i32 %conv48, 47, !dbg !3505
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !3506

if.then51:                                        ; preds = %land.lhs.true
  %40 = load i64, i64* %u16len, align 8, !dbg !3507
  %sub52 = sub i64 %40, 2, !dbg !3507
  store i64 %sub52, i64* %u16len, align 8, !dbg !3507
  br label %if.end53, !dbg !3509

if.else:                                          ; preds = %land.lhs.true, %while.body
  br label %while.end, !dbg !3510

if.end53:                                         ; preds = %if.then51
  br label %while.cond, !dbg !3511

while.end:                                        ; preds = %if.else, %while.cond
  %41 = load i8*, i8** %u16, align 8, !dbg !3513
  store i8* %41, i8** %ulast, align 8, !dbg !3514
  %42 = load i64, i64* %u16len, align 8, !dbg !3515
  %shr = lshr i64 %42, 1, !dbg !3515
  store i64 %shr, i64* %u16len, align 8, !dbg !3515
  %43 = load i64, i64* %u16len, align 8, !dbg !3516
  store i64 %43, i64* %ulen_last, align 8, !dbg !3517
  br label %while.cond54, !dbg !3518

while.cond54:                                     ; preds = %if.end69, %while.end
  %44 = load i64, i64* %u16len, align 8, !dbg !3519
  %cmp55 = icmp ugt i64 %44, 0, !dbg !3520
  br i1 %cmp55, label %while.body57, label %while.end71, !dbg !3521

while.body57:                                     ; preds = %while.cond54
  %45 = load i8*, i8** %u16, align 8, !dbg !3522
  %arrayidx58 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !3522
  %46 = load i8, i8* %arrayidx58, align 1, !dbg !3522
  %conv59 = sext i8 %46 to i32, !dbg !3522
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !3525
  br i1 %cmp60, label %land.lhs.true62, label %if.end69, !dbg !3526

land.lhs.true62:                                  ; preds = %while.body57
  %47 = load i8*, i8** %u16, align 8, !dbg !3527
  %arrayidx63 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !3527
  %48 = load i8, i8* %arrayidx63, align 1, !dbg !3527
  %conv64 = sext i8 %48 to i32, !dbg !3527
  %cmp65 = icmp eq i32 %conv64, 47, !dbg !3529
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !3530

if.then67:                                        ; preds = %land.lhs.true62
  %49 = load i8*, i8** %u16, align 8, !dbg !3531
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 2, !dbg !3533
  store i8* %add.ptr, i8** %ulast, align 8, !dbg !3534
  %50 = load i64, i64* %u16len, align 8, !dbg !3535
  %sub68 = sub i64 %50, 1, !dbg !3536
  store i64 %sub68, i64* %ulen_last, align 8, !dbg !3537
  br label %if.end69, !dbg !3538

if.end69:                                         ; preds = %if.then67, %land.lhs.true62, %while.body57
  %51 = load i8*, i8** %u16, align 8, !dbg !3539
  %add.ptr70 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !3539
  store i8* %add.ptr70, i8** %u16, align 8, !dbg !3539
  %52 = load i64, i64* %u16len, align 8, !dbg !3540
  %dec = add i64 %52, -1, !dbg !3540
  store i64 %dec, i64* %u16len, align 8, !dbg !3540
  br label %while.cond54, !dbg !3541

while.end71:                                      ; preds = %while.cond54
  %53 = load i64, i64* %ulen_last, align 8, !dbg !3542
  %shl = shl i64 %53, 1, !dbg !3542
  store i64 %shl, i64* %ulen_last, align 8, !dbg !3542
  %54 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3543
  %basename_utf1672 = getelementptr inbounds %struct.isofile, %struct.isofile* %54, i32 0, i32 7, !dbg !3545
  %55 = load i64, i64* %ulen_last, align 8, !dbg !3546
  %call73 = call %struct.archive_string* @archive_string_ensure(%struct.archive_string* %basename_utf1672, i64 %55), !dbg !3547
  %cmp74 = icmp eq %struct.archive_string* %call73, null, !dbg !3548
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !3549

if.then76:                                        ; preds = %while.end71
  %56 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !3550
  %archive77 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %56, i32 0, i32 0, !dbg !3552
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive77, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0)), !dbg !3553
  store i32 -30, i32* %retval, align 4, !dbg !3554
  br label %return, !dbg !3554

if.end78:                                         ; preds = %while.end71
  %57 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3555
  %basename_utf1679 = getelementptr inbounds %struct.isofile, %struct.isofile* %57, i32 0, i32 7, !dbg !3556
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1679, i32 0, i32 0, !dbg !3557
  %58 = load i8*, i8** %s, align 8, !dbg !3557
  %59 = load i8*, i8** %ulast, align 8, !dbg !3558
  %60 = load i64, i64* %ulen_last, align 8, !dbg !3559
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 %60, i32 1, i1 false), !dbg !3560
  %61 = load i64, i64* %ulen_last, align 8, !dbg !3561
  %62 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3562
  %basename_utf1680 = getelementptr inbounds %struct.isofile, %struct.isofile* %62, i32 0, i32 7, !dbg !3563
  %length81 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1680, i32 0, i32 1, !dbg !3564
  store i64 %61, i64* %length81, align 8, !dbg !3565
  br label %if.end82, !dbg !3566

if.end82:                                         ; preds = %if.end78, %if.end
  %63 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3567
  %parentdir83 = getelementptr inbounds %struct.isofile, %struct.isofile* %63, i32 0, i32 5, !dbg !3567
  %length84 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir83, i32 0, i32 1, !dbg !3567
  store i64 0, i64* %length84, align 8, !dbg !3567
  %64 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3567
  %parentdir85 = getelementptr inbounds %struct.isofile, %struct.isofile* %64, i32 0, i32 5, !dbg !3567
  %65 = load i8*, i8** %pathname, align 8, !dbg !3567
  %66 = load i8*, i8** %pathname, align 8, !dbg !3567
  %cmp86 = icmp eq i8* %66, null, !dbg !3567
  br i1 %cmp86, label %cond.true, label %cond.false, !dbg !3567

cond.true:                                        ; preds = %if.end82
  br label %cond.end, !dbg !3568

cond.false:                                       ; preds = %if.end82
  %67 = load i8*, i8** %pathname, align 8, !dbg !3570
  %call88 = call i64 @strlen(i8* %67) #9, !dbg !3570
  br label %cond.end, !dbg !3570

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %call88, %cond.false ], !dbg !3572
  %call89 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %parentdir85, i8* %65, i64 %cond), !dbg !3572
  %68 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3574
  %parentdir90 = getelementptr inbounds %struct.isofile, %struct.isofile* %68, i32 0, i32 5, !dbg !3575
  %length91 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir90, i32 0, i32 1, !dbg !3576
  %69 = load i64, i64* %length91, align 8, !dbg !3576
  store i64 %69, i64* %len, align 8, !dbg !3577
  %70 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3578
  %parentdir92 = getelementptr inbounds %struct.isofile, %struct.isofile* %70, i32 0, i32 5, !dbg !3579
  %s93 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir92, i32 0, i32 0, !dbg !3580
  %71 = load i8*, i8** %s93, align 8, !dbg !3580
  store i8* %71, i8** %dirname, align 8, !dbg !3581
  store i8* %71, i8** %p, align 8, !dbg !3582
  br label %while.cond94, !dbg !3583

while.cond94:                                     ; preds = %if.end153, %cond.end
  %72 = load i8*, i8** %p, align 8, !dbg !3584
  %73 = load i8, i8* %72, align 1, !dbg !3585
  %tobool95 = icmp ne i8 %73, 0, !dbg !3586
  br i1 %tobool95, label %while.body96, label %while.end154, !dbg !3586

while.body96:                                     ; preds = %while.cond94
  %74 = load i8*, i8** %p, align 8, !dbg !3587
  %arrayidx97 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !3587
  %75 = load i8, i8* %arrayidx97, align 1, !dbg !3587
  %conv98 = sext i8 %75 to i32, !dbg !3587
  %cmp99 = icmp eq i32 %conv98, 47, !dbg !3590
  br i1 %cmp99, label %if.then101, label %if.else103, !dbg !3591

if.then101:                                       ; preds = %while.body96
  %76 = load i8*, i8** %p, align 8, !dbg !3592
  %incdec.ptr = getelementptr inbounds i8, i8* %76, i32 1, !dbg !3592
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3592
  %77 = load i64, i64* %len, align 8, !dbg !3594
  %dec102 = add i64 %77, -1, !dbg !3594
  store i64 %dec102, i64* %len, align 8, !dbg !3594
  br label %if.end153, !dbg !3595

if.else103:                                       ; preds = %while.body96
  %78 = load i8*, i8** %p, align 8, !dbg !3596
  %arrayidx104 = getelementptr inbounds i8, i8* %78, i64 0, !dbg !3596
  %79 = load i8, i8* %arrayidx104, align 1, !dbg !3596
  %conv105 = sext i8 %79 to i32, !dbg !3596
  %cmp106 = icmp ne i32 %conv105, 46, !dbg !3599
  br i1 %cmp106, label %if.then108, label %if.else109, !dbg !3596

if.then108:                                       ; preds = %if.else103
  br label %while.end154, !dbg !3600

if.else109:                                       ; preds = %if.else103
  %80 = load i8*, i8** %p, align 8, !dbg !3601
  %arrayidx110 = getelementptr inbounds i8, i8* %80, i64 1, !dbg !3601
  %81 = load i8, i8* %arrayidx110, align 1, !dbg !3601
  %conv111 = sext i8 %81 to i32, !dbg !3601
  %cmp112 = icmp eq i32 %conv111, 46, !dbg !3603
  br i1 %cmp112, label %land.lhs.true114, label %if.else122, !dbg !3604

land.lhs.true114:                                 ; preds = %if.else109
  %82 = load i8*, i8** %p, align 8, !dbg !3605
  %arrayidx115 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !3605
  %83 = load i8, i8* %arrayidx115, align 1, !dbg !3605
  %conv116 = sext i8 %83 to i32, !dbg !3605
  %cmp117 = icmp eq i32 %conv116, 47, !dbg !3607
  br i1 %cmp117, label %if.then119, label %if.else122, !dbg !3608

if.then119:                                       ; preds = %land.lhs.true114
  %84 = load i8*, i8** %p, align 8, !dbg !3609
  %add.ptr120 = getelementptr inbounds i8, i8* %84, i64 3, !dbg !3609
  store i8* %add.ptr120, i8** %p, align 8, !dbg !3609
  %85 = load i64, i64* %len, align 8, !dbg !3611
  %sub121 = sub i64 %85, 3, !dbg !3611
  store i64 %sub121, i64* %len, align 8, !dbg !3611
  br label %if.end151, !dbg !3612

if.else122:                                       ; preds = %land.lhs.true114, %if.else109
  %86 = load i8*, i8** %p, align 8, !dbg !3613
  %arrayidx123 = getelementptr inbounds i8, i8* %86, i64 1, !dbg !3613
  %87 = load i8, i8* %arrayidx123, align 1, !dbg !3613
  %conv124 = sext i8 %87 to i32, !dbg !3613
  %cmp125 = icmp eq i32 %conv124, 47, !dbg !3616
  br i1 %cmp125, label %if.then137, label %lor.lhs.false127, !dbg !3617

lor.lhs.false127:                                 ; preds = %if.else122
  %88 = load i8*, i8** %p, align 8, !dbg !3618
  %arrayidx128 = getelementptr inbounds i8, i8* %88, i64 1, !dbg !3618
  %89 = load i8, i8* %arrayidx128, align 1, !dbg !3618
  %conv129 = sext i8 %89 to i32, !dbg !3618
  %cmp130 = icmp eq i32 %conv129, 46, !dbg !3620
  br i1 %cmp130, label %land.lhs.true132, label %if.else140, !dbg !3621

land.lhs.true132:                                 ; preds = %lor.lhs.false127
  %90 = load i8*, i8** %p, align 8, !dbg !3622
  %arrayidx133 = getelementptr inbounds i8, i8* %90, i64 2, !dbg !3622
  %91 = load i8, i8* %arrayidx133, align 1, !dbg !3622
  %conv134 = sext i8 %91 to i32, !dbg !3622
  %cmp135 = icmp eq i32 %conv134, 0, !dbg !3624
  br i1 %cmp135, label %if.then137, label %if.else140, !dbg !3625

if.then137:                                       ; preds = %land.lhs.true132, %if.else122
  %92 = load i8*, i8** %p, align 8, !dbg !3626
  %add.ptr138 = getelementptr inbounds i8, i8* %92, i64 2, !dbg !3626
  store i8* %add.ptr138, i8** %p, align 8, !dbg !3626
  %93 = load i64, i64* %len, align 8, !dbg !3628
  %sub139 = sub i64 %93, 2, !dbg !3628
  store i64 %sub139, i64* %len, align 8, !dbg !3628
  br label %if.end150, !dbg !3629

if.else140:                                       ; preds = %land.lhs.true132, %lor.lhs.false127
  %94 = load i8*, i8** %p, align 8, !dbg !3630
  %arrayidx141 = getelementptr inbounds i8, i8* %94, i64 1, !dbg !3630
  %95 = load i8, i8* %arrayidx141, align 1, !dbg !3630
  %conv142 = sext i8 %95 to i32, !dbg !3630
  %cmp143 = icmp eq i32 %conv142, 0, !dbg !3633
  br i1 %cmp143, label %if.then145, label %if.else148, !dbg !3630

if.then145:                                       ; preds = %if.else140
  %96 = load i8*, i8** %p, align 8, !dbg !3634
  %incdec.ptr146 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3634
  store i8* %incdec.ptr146, i8** %p, align 8, !dbg !3634
  %97 = load i64, i64* %len, align 8, !dbg !3636
  %dec147 = add i64 %97, -1, !dbg !3636
  store i64 %dec147, i64* %len, align 8, !dbg !3636
  br label %if.end149, !dbg !3637

if.else148:                                       ; preds = %if.else140
  br label %while.end154, !dbg !3638

if.end149:                                        ; preds = %if.then145
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then137
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then119
  br label %if.end152

if.end152:                                        ; preds = %if.end151
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then101
  br label %while.cond94, !dbg !3639

while.end154:                                     ; preds = %if.else148, %if.then108, %while.cond94
  %98 = load i8*, i8** %p, align 8, !dbg !3640
  %99 = load i8*, i8** %dirname, align 8, !dbg !3642
  %cmp155 = icmp ne i8* %98, %99, !dbg !3643
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !3644

if.then157:                                       ; preds = %while.end154
  %100 = load i8*, i8** %dirname, align 8, !dbg !3645
  %101 = load i8*, i8** %p, align 8, !dbg !3647
  %102 = load i64, i64* %len, align 8, !dbg !3648
  %add = add i64 %102, 1, !dbg !3649
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %100, i8* %101, i64 %add, i32 1, i1 false), !dbg !3650
  %103 = load i8*, i8** %dirname, align 8, !dbg !3651
  store i8* %103, i8** %p, align 8, !dbg !3652
  br label %if.end158, !dbg !3653

if.end158:                                        ; preds = %if.then157, %while.end154
  br label %while.cond159, !dbg !3654

while.cond159:                                    ; preds = %if.end223, %if.end158
  %104 = load i64, i64* %len, align 8, !dbg !3655
  %cmp160 = icmp ugt i64 %104, 0, !dbg !3656
  br i1 %cmp160, label %while.body162, label %while.end224, !dbg !3657

while.body162:                                    ; preds = %while.cond159
  call void @llvm.dbg.declare(metadata i64* %ll, metadata !3658, metadata !986), !dbg !3660
  %105 = load i64, i64* %len, align 8, !dbg !3661
  store i64 %105, i64* %ll, align 8, !dbg !3660
  %106 = load i64, i64* %len, align 8, !dbg !3662
  %cmp163 = icmp ugt i64 %106, 0, !dbg !3664
  br i1 %cmp163, label %land.lhs.true165, label %if.end175, !dbg !3665

land.lhs.true165:                                 ; preds = %while.body162
  %107 = load i64, i64* %len, align 8, !dbg !3666
  %sub166 = sub i64 %107, 1, !dbg !3668
  %108 = load i8*, i8** %p, align 8, !dbg !3669
  %arrayidx167 = getelementptr inbounds i8, i8* %108, i64 %sub166, !dbg !3669
  %109 = load i8, i8* %arrayidx167, align 1, !dbg !3669
  %conv168 = sext i8 %109 to i32, !dbg !3669
  %cmp169 = icmp eq i32 %conv168, 47, !dbg !3670
  br i1 %cmp169, label %if.then171, label %if.end175, !dbg !3671

if.then171:                                       ; preds = %land.lhs.true165
  %110 = load i64, i64* %len, align 8, !dbg !3672
  %sub172 = sub i64 %110, 1, !dbg !3674
  %111 = load i8*, i8** %p, align 8, !dbg !3675
  %arrayidx173 = getelementptr inbounds i8, i8* %111, i64 %sub172, !dbg !3675
  store i8 0, i8* %arrayidx173, align 1, !dbg !3676
  %112 = load i64, i64* %len, align 8, !dbg !3677
  %dec174 = add i64 %112, -1, !dbg !3677
  store i64 %dec174, i64* %len, align 8, !dbg !3677
  br label %if.end175, !dbg !3678

if.end175:                                        ; preds = %if.then171, %land.lhs.true165, %while.body162
  %113 = load i64, i64* %len, align 8, !dbg !3679
  %cmp176 = icmp ugt i64 %113, 1, !dbg !3681
  br i1 %cmp176, label %land.lhs.true178, label %if.end194, !dbg !3682

land.lhs.true178:                                 ; preds = %if.end175
  %114 = load i64, i64* %len, align 8, !dbg !3683
  %sub179 = sub i64 %114, 2, !dbg !3685
  %115 = load i8*, i8** %p, align 8, !dbg !3686
  %arrayidx180 = getelementptr inbounds i8, i8* %115, i64 %sub179, !dbg !3686
  %116 = load i8, i8* %arrayidx180, align 1, !dbg !3686
  %conv181 = sext i8 %116 to i32, !dbg !3686
  %cmp182 = icmp eq i32 %conv181, 47, !dbg !3687
  br i1 %cmp182, label %land.lhs.true184, label %if.end194, !dbg !3688

land.lhs.true184:                                 ; preds = %land.lhs.true178
  %117 = load i64, i64* %len, align 8, !dbg !3689
  %sub185 = sub i64 %117, 1, !dbg !3691
  %118 = load i8*, i8** %p, align 8, !dbg !3692
  %arrayidx186 = getelementptr inbounds i8, i8* %118, i64 %sub185, !dbg !3692
  %119 = load i8, i8* %arrayidx186, align 1, !dbg !3692
  %conv187 = sext i8 %119 to i32, !dbg !3692
  %cmp188 = icmp eq i32 %conv187, 46, !dbg !3693
  br i1 %cmp188, label %if.then190, label %if.end194, !dbg !3694

if.then190:                                       ; preds = %land.lhs.true184
  %120 = load i64, i64* %len, align 8, !dbg !3695
  %sub191 = sub i64 %120, 2, !dbg !3697
  %121 = load i8*, i8** %p, align 8, !dbg !3698
  %arrayidx192 = getelementptr inbounds i8, i8* %121, i64 %sub191, !dbg !3698
  store i8 0, i8* %arrayidx192, align 1, !dbg !3699
  %122 = load i64, i64* %len, align 8, !dbg !3700
  %sub193 = sub i64 %122, 2, !dbg !3700
  store i64 %sub193, i64* %len, align 8, !dbg !3700
  br label %if.end194, !dbg !3701

if.end194:                                        ; preds = %if.then190, %land.lhs.true184, %land.lhs.true178, %if.end175
  %123 = load i64, i64* %len, align 8, !dbg !3702
  %cmp195 = icmp ugt i64 %123, 2, !dbg !3704
  br i1 %cmp195, label %land.lhs.true197, label %if.end219, !dbg !3705

land.lhs.true197:                                 ; preds = %if.end194
  %124 = load i64, i64* %len, align 8, !dbg !3706
  %sub198 = sub i64 %124, 3, !dbg !3708
  %125 = load i8*, i8** %p, align 8, !dbg !3709
  %arrayidx199 = getelementptr inbounds i8, i8* %125, i64 %sub198, !dbg !3709
  %126 = load i8, i8* %arrayidx199, align 1, !dbg !3709
  %conv200 = sext i8 %126 to i32, !dbg !3709
  %cmp201 = icmp eq i32 %conv200, 47, !dbg !3710
  br i1 %cmp201, label %land.lhs.true203, label %if.end219, !dbg !3711

land.lhs.true203:                                 ; preds = %land.lhs.true197
  %127 = load i64, i64* %len, align 8, !dbg !3712
  %sub204 = sub i64 %127, 2, !dbg !3714
  %128 = load i8*, i8** %p, align 8, !dbg !3715
  %arrayidx205 = getelementptr inbounds i8, i8* %128, i64 %sub204, !dbg !3715
  %129 = load i8, i8* %arrayidx205, align 1, !dbg !3715
  %conv206 = sext i8 %129 to i32, !dbg !3715
  %cmp207 = icmp eq i32 %conv206, 46, !dbg !3716
  br i1 %cmp207, label %land.lhs.true209, label %if.end219, !dbg !3717

land.lhs.true209:                                 ; preds = %land.lhs.true203
  %130 = load i64, i64* %len, align 8, !dbg !3718
  %sub210 = sub i64 %130, 1, !dbg !3719
  %131 = load i8*, i8** %p, align 8, !dbg !3720
  %arrayidx211 = getelementptr inbounds i8, i8* %131, i64 %sub210, !dbg !3720
  %132 = load i8, i8* %arrayidx211, align 1, !dbg !3720
  %conv212 = sext i8 %132 to i32, !dbg !3720
  %cmp213 = icmp eq i32 %conv212, 46, !dbg !3721
  br i1 %cmp213, label %if.then215, label %if.end219, !dbg !3722

if.then215:                                       ; preds = %land.lhs.true209
  %133 = load i64, i64* %len, align 8, !dbg !3724
  %sub216 = sub i64 %133, 3, !dbg !3726
  %134 = load i8*, i8** %p, align 8, !dbg !3727
  %arrayidx217 = getelementptr inbounds i8, i8* %134, i64 %sub216, !dbg !3727
  store i8 0, i8* %arrayidx217, align 1, !dbg !3728
  %135 = load i64, i64* %len, align 8, !dbg !3729
  %sub218 = sub i64 %135, 3, !dbg !3729
  store i64 %sub218, i64* %len, align 8, !dbg !3729
  br label %if.end219, !dbg !3730

if.end219:                                        ; preds = %if.then215, %land.lhs.true209, %land.lhs.true203, %land.lhs.true197, %if.end194
  %136 = load i64, i64* %ll, align 8, !dbg !3731
  %137 = load i64, i64* %len, align 8, !dbg !3733
  %cmp220 = icmp eq i64 %136, %137, !dbg !3734
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !3735

if.then222:                                       ; preds = %if.end219
  br label %while.end224, !dbg !3736

if.end223:                                        ; preds = %if.end219
  br label %while.cond159, !dbg !3737

while.end224:                                     ; preds = %if.then222, %while.cond159
  br label %while.cond225, !dbg !3738

while.cond225:                                    ; preds = %if.end297, %while.end224
  %138 = load i8*, i8** %p, align 8, !dbg !3739
  %139 = load i8, i8* %138, align 1, !dbg !3740
  %tobool226 = icmp ne i8 %139, 0, !dbg !3741
  br i1 %tobool226, label %while.body227, label %while.end298, !dbg !3741

while.body227:                                    ; preds = %while.cond225
  %140 = load i8*, i8** %p, align 8, !dbg !3742
  %arrayidx228 = getelementptr inbounds i8, i8* %140, i64 0, !dbg !3742
  %141 = load i8, i8* %arrayidx228, align 1, !dbg !3742
  %conv229 = sext i8 %141 to i32, !dbg !3742
  %cmp230 = icmp eq i32 %conv229, 47, !dbg !3745
  br i1 %cmp230, label %if.then232, label %if.else295, !dbg !3746

if.then232:                                       ; preds = %while.body227
  %142 = load i8*, i8** %p, align 8, !dbg !3747
  %arrayidx233 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !3747
  %143 = load i8, i8* %arrayidx233, align 1, !dbg !3747
  %conv234 = sext i8 %143 to i32, !dbg !3747
  %cmp235 = icmp eq i32 %conv234, 47, !dbg !3750
  br i1 %cmp235, label %if.then237, label %if.else240, !dbg !3751

if.then237:                                       ; preds = %if.then232
  %144 = load i8*, i8** %p, align 8, !dbg !3752
  %145 = load i8*, i8** %p, align 8, !dbg !3753
  %add.ptr238 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !3754
  %call239 = call i8* @strcpy(i8* %144, i8* %add.ptr238) #8, !dbg !3755
  br label %if.end294, !dbg !3755

if.else240:                                       ; preds = %if.then232
  %146 = load i8*, i8** %p, align 8, !dbg !3756
  %arrayidx241 = getelementptr inbounds i8, i8* %146, i64 1, !dbg !3756
  %147 = load i8, i8* %arrayidx241, align 1, !dbg !3756
  %conv242 = sext i8 %147 to i32, !dbg !3756
  %cmp243 = icmp eq i32 %conv242, 46, !dbg !3758
  br i1 %cmp243, label %land.lhs.true245, label %if.else253, !dbg !3759

land.lhs.true245:                                 ; preds = %if.else240
  %148 = load i8*, i8** %p, align 8, !dbg !3760
  %arrayidx246 = getelementptr inbounds i8, i8* %148, i64 2, !dbg !3760
  %149 = load i8, i8* %arrayidx246, align 1, !dbg !3760
  %conv247 = sext i8 %149 to i32, !dbg !3760
  %cmp248 = icmp eq i32 %conv247, 47, !dbg !3762
  br i1 %cmp248, label %if.then250, label %if.else253, !dbg !3763

if.then250:                                       ; preds = %land.lhs.true245
  %150 = load i8*, i8** %p, align 8, !dbg !3764
  %151 = load i8*, i8** %p, align 8, !dbg !3765
  %add.ptr251 = getelementptr inbounds i8, i8* %151, i64 2, !dbg !3766
  %call252 = call i8* @strcpy(i8* %150, i8* %add.ptr251) #8, !dbg !3767
  br label %if.end293, !dbg !3767

if.else253:                                       ; preds = %land.lhs.true245, %if.else240
  %152 = load i8*, i8** %p, align 8, !dbg !3768
  %arrayidx254 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !3768
  %153 = load i8, i8* %arrayidx254, align 1, !dbg !3768
  %conv255 = sext i8 %153 to i32, !dbg !3768
  %cmp256 = icmp eq i32 %conv255, 46, !dbg !3770
  br i1 %cmp256, label %land.lhs.true258, label %if.else290, !dbg !3771

land.lhs.true258:                                 ; preds = %if.else253
  %154 = load i8*, i8** %p, align 8, !dbg !3772
  %arrayidx259 = getelementptr inbounds i8, i8* %154, i64 2, !dbg !3772
  %155 = load i8, i8* %arrayidx259, align 1, !dbg !3772
  %conv260 = sext i8 %155 to i32, !dbg !3772
  %cmp261 = icmp eq i32 %conv260, 46, !dbg !3774
  br i1 %cmp261, label %land.lhs.true263, label %if.else290, !dbg !3775

land.lhs.true263:                                 ; preds = %land.lhs.true258
  %156 = load i8*, i8** %p, align 8, !dbg !3776
  %arrayidx264 = getelementptr inbounds i8, i8* %156, i64 3, !dbg !3776
  %157 = load i8, i8* %arrayidx264, align 1, !dbg !3776
  %conv265 = sext i8 %157 to i32, !dbg !3776
  %cmp266 = icmp eq i32 %conv265, 47, !dbg !3778
  br i1 %cmp266, label %if.then268, label %if.else290, !dbg !3779

if.then268:                                       ; preds = %land.lhs.true263
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !3780, metadata !986), !dbg !3782
  %158 = load i8*, i8** %p, align 8, !dbg !3783
  %add.ptr269 = getelementptr inbounds i8, i8* %158, i64 -1, !dbg !3784
  store i8* %add.ptr269, i8** %rp, align 8, !dbg !3782
  br label %while.cond270, !dbg !3785

while.cond270:                                    ; preds = %if.end278, %if.then268
  %159 = load i8*, i8** %rp, align 8, !dbg !3786
  %160 = load i8*, i8** %dirname, align 8, !dbg !3788
  %cmp271 = icmp uge i8* %159, %160, !dbg !3789
  br i1 %cmp271, label %while.body273, label %while.end280, !dbg !3790

while.body273:                                    ; preds = %while.cond270
  %161 = load i8*, i8** %rp, align 8, !dbg !3791
  %162 = load i8, i8* %161, align 1, !dbg !3794
  %conv274 = sext i8 %162 to i32, !dbg !3794
  %cmp275 = icmp eq i32 %conv274, 47, !dbg !3795
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !3796

if.then277:                                       ; preds = %while.body273
  br label %while.end280, !dbg !3797

if.end278:                                        ; preds = %while.body273
  %163 = load i8*, i8** %rp, align 8, !dbg !3798
  %incdec.ptr279 = getelementptr inbounds i8, i8* %163, i32 -1, !dbg !3798
  store i8* %incdec.ptr279, i8** %rp, align 8, !dbg !3798
  br label %while.cond270, !dbg !3799

while.end280:                                     ; preds = %if.then277, %while.cond270
  %164 = load i8*, i8** %rp, align 8, !dbg !3801
  %165 = load i8*, i8** %dirname, align 8, !dbg !3803
  %cmp281 = icmp ugt i8* %164, %165, !dbg !3804
  br i1 %cmp281, label %if.then283, label %if.else286, !dbg !3805

if.then283:                                       ; preds = %while.end280
  %166 = load i8*, i8** %rp, align 8, !dbg !3806
  %167 = load i8*, i8** %p, align 8, !dbg !3808
  %add.ptr284 = getelementptr inbounds i8, i8* %167, i64 3, !dbg !3809
  %call285 = call i8* @strcpy(i8* %166, i8* %add.ptr284) #8, !dbg !3810
  %168 = load i8*, i8** %rp, align 8, !dbg !3811
  store i8* %168, i8** %p, align 8, !dbg !3812
  br label %if.end289, !dbg !3813

if.else286:                                       ; preds = %while.end280
  %169 = load i8*, i8** %dirname, align 8, !dbg !3814
  %170 = load i8*, i8** %p, align 8, !dbg !3816
  %add.ptr287 = getelementptr inbounds i8, i8* %170, i64 4, !dbg !3817
  %call288 = call i8* @strcpy(i8* %169, i8* %add.ptr287) #8, !dbg !3818
  %171 = load i8*, i8** %dirname, align 8, !dbg !3819
  store i8* %171, i8** %p, align 8, !dbg !3820
  br label %if.end289

if.end289:                                        ; preds = %if.else286, %if.then283
  br label %if.end292, !dbg !3821

if.else290:                                       ; preds = %land.lhs.true263, %land.lhs.true258, %if.else253
  %172 = load i8*, i8** %p, align 8, !dbg !3822
  %incdec.ptr291 = getelementptr inbounds i8, i8* %172, i32 1, !dbg !3822
  store i8* %incdec.ptr291, i8** %p, align 8, !dbg !3822
  br label %if.end292

if.end292:                                        ; preds = %if.else290, %if.end289
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then250
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %if.then237
  br label %if.end297, !dbg !3823

if.else295:                                       ; preds = %while.body227
  %173 = load i8*, i8** %p, align 8, !dbg !3824
  %incdec.ptr296 = getelementptr inbounds i8, i8* %173, i32 1, !dbg !3824
  store i8* %incdec.ptr296, i8** %p, align 8, !dbg !3824
  br label %if.end297

if.end297:                                        ; preds = %if.else295, %if.end294
  br label %while.cond225, !dbg !3825

while.end298:                                     ; preds = %while.cond225
  %174 = load i8*, i8** %dirname, align 8, !dbg !3826
  store i8* %174, i8** %p, align 8, !dbg !3827
  %175 = load i8*, i8** %p, align 8, !dbg !3828
  %call299 = call i64 @strlen(i8* %175) #9, !dbg !3829
  store i64 %call299, i64* %len, align 8, !dbg !3830
  %176 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3831
  %entry300 = getelementptr inbounds %struct.isofile, %struct.isofile* %176, i32 0, i32 4, !dbg !3833
  %177 = load %struct.archive_entry*, %struct.archive_entry** %entry300, align 8, !dbg !3833
  %call301 = call i32 @archive_entry_filetype(%struct.archive_entry* %177), !dbg !3834
  %cmp302 = icmp eq i32 %call301, 40960, !dbg !3835
  br i1 %cmp302, label %if.then304, label %if.end318, !dbg !3836

if.then304:                                       ; preds = %while.end298
  %178 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3837
  %entry305 = getelementptr inbounds %struct.isofile, %struct.isofile* %178, i32 0, i32 4, !dbg !3839
  %179 = load %struct.archive_entry*, %struct.archive_entry** %entry305, align 8, !dbg !3839
  %call306 = call i8* @archive_entry_symlink(%struct.archive_entry* %179), !dbg !3840
  store i8* %call306, i8** %pathname, align 8, !dbg !3841
  %180 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3842
  %symlink307 = getelementptr inbounds %struct.isofile, %struct.isofile* %180, i32 0, i32 8, !dbg !3842
  %length308 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink307, i32 0, i32 1, !dbg !3842
  store i64 0, i64* %length308, align 8, !dbg !3842
  %181 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3842
  %symlink309 = getelementptr inbounds %struct.isofile, %struct.isofile* %181, i32 0, i32 8, !dbg !3842
  %182 = load i8*, i8** %pathname, align 8, !dbg !3842
  %183 = load i8*, i8** %pathname, align 8, !dbg !3842
  %cmp310 = icmp eq i8* %183, null, !dbg !3842
  br i1 %cmp310, label %cond.true312, label %cond.false313, !dbg !3842

cond.true312:                                     ; preds = %if.then304
  br label %cond.end315, !dbg !3843

cond.false313:                                    ; preds = %if.then304
  %184 = load i8*, i8** %pathname, align 8, !dbg !3845
  %call314 = call i64 @strlen(i8* %184) #9, !dbg !3845
  br label %cond.end315, !dbg !3845

cond.end315:                                      ; preds = %cond.false313, %cond.true312
  %cond316 = phi i64 [ 0, %cond.true312 ], [ %call314, %cond.false313 ], !dbg !3847
  %call317 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %symlink309, i8* %182, i64 %cond316), !dbg !3847
  br label %if.end318, !dbg !3849

if.end318:                                        ; preds = %cond.end315, %while.end298
  store i8* null, i8** %slash, align 8, !dbg !3850
  %185 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3851
  %dircnt319 = getelementptr inbounds %struct.isofile, %struct.isofile* %185, i32 0, i32 9, !dbg !3852
  store i32 0, i32* %dircnt319, align 8, !dbg !3853
  br label %for.cond, !dbg !3854

for.cond:                                         ; preds = %for.inc, %if.end318
  %186 = load i8*, i8** %p, align 8, !dbg !3855
  %187 = load i8, i8* %186, align 1, !dbg !3859
  %conv320 = sext i8 %187 to i32, !dbg !3859
  %cmp321 = icmp ne i32 %conv320, 0, !dbg !3860
  br i1 %cmp321, label %for.body, label %for.end, !dbg !3861

for.body:                                         ; preds = %for.cond
  %188 = load i8*, i8** %p, align 8, !dbg !3862
  %189 = load i8, i8* %188, align 1, !dbg !3864
  %conv323 = sext i8 %189 to i32, !dbg !3864
  %cmp324 = icmp eq i32 %conv323, 47, !dbg !3865
  br i1 %cmp324, label %if.then326, label %if.end328, !dbg !3866

if.then326:                                       ; preds = %for.body
  %190 = load i8*, i8** %p, align 8, !dbg !3867
  store i8* %190, i8** %slash, align 8, !dbg !3869
  %191 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3870
  %dircnt327 = getelementptr inbounds %struct.isofile, %struct.isofile* %191, i32 0, i32 9, !dbg !3871
  %192 = load i32, i32* %dircnt327, align 8, !dbg !3872
  %inc = add nsw i32 %192, 1, !dbg !3872
  store i32 %inc, i32* %dircnt327, align 8, !dbg !3872
  br label %if.end328, !dbg !3873

if.end328:                                        ; preds = %if.then326, %for.body
  br label %for.inc, !dbg !3874

for.inc:                                          ; preds = %if.end328
  %193 = load i8*, i8** %p, align 8, !dbg !3876
  %incdec.ptr329 = getelementptr inbounds i8, i8* %193, i32 1, !dbg !3876
  store i8* %incdec.ptr329, i8** %p, align 8, !dbg !3876
  br label %for.cond, !dbg !3878

for.end:                                          ; preds = %for.cond
  %194 = load i8*, i8** %slash, align 8, !dbg !3879
  %cmp330 = icmp eq i8* %194, null, !dbg !3881
  br i1 %cmp330, label %if.then332, label %if.end343, !dbg !3882

if.then332:                                       ; preds = %for.end
  %195 = load i64, i64* %len, align 8, !dbg !3883
  %196 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3885
  %parentdir333 = getelementptr inbounds %struct.isofile, %struct.isofile* %196, i32 0, i32 5, !dbg !3886
  %length334 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir333, i32 0, i32 1, !dbg !3887
  store i64 %195, i64* %length334, align 8, !dbg !3888
  %197 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3889
  %basename335 = getelementptr inbounds %struct.isofile, %struct.isofile* %197, i32 0, i32 6, !dbg !3889
  %length336 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename335, i32 0, i32 1, !dbg !3889
  store i64 0, i64* %length336, align 8, !dbg !3889
  %198 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3889
  %basename337 = getelementptr inbounds %struct.isofile, %struct.isofile* %198, i32 0, i32 6, !dbg !3889
  %199 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3889
  %parentdir338 = getelementptr inbounds %struct.isofile, %struct.isofile* %199, i32 0, i32 5, !dbg !3889
  call void @archive_string_concat(%struct.archive_string* %basename337, %struct.archive_string* %parentdir338), !dbg !3889
  %200 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3890
  %parentdir339 = getelementptr inbounds %struct.isofile, %struct.isofile* %200, i32 0, i32 5, !dbg !3890
  %length340 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir339, i32 0, i32 1, !dbg !3890
  store i64 0, i64* %length340, align 8, !dbg !3890
  %201 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3891
  %parentdir341 = getelementptr inbounds %struct.isofile, %struct.isofile* %201, i32 0, i32 5, !dbg !3892
  %s342 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir341, i32 0, i32 0, !dbg !3893
  %202 = load i8*, i8** %s342, align 8, !dbg !3893
  store i8 0, i8* %202, align 1, !dbg !3894
  %203 = load i32, i32* %ret, align 4, !dbg !3895
  store i32 %203, i32* %retval, align 4, !dbg !3896
  br label %return, !dbg !3896

if.end343:                                        ; preds = %for.end
  %204 = load i8*, i8** %slash, align 8, !dbg !3897
  store i8 0, i8* %204, align 1, !dbg !3898
  %205 = load i8*, i8** %slash, align 8, !dbg !3899
  %206 = load i8*, i8** %dirname, align 8, !dbg !3900
  %sub.ptr.lhs.cast = ptrtoint i8* %205 to i64, !dbg !3901
  %sub.ptr.rhs.cast = ptrtoint i8* %206 to i64, !dbg !3901
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3901
  %207 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3902
  %parentdir344 = getelementptr inbounds %struct.isofile, %struct.isofile* %207, i32 0, i32 5, !dbg !3903
  %length345 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir344, i32 0, i32 1, !dbg !3904
  store i64 %sub.ptr.sub, i64* %length345, align 8, !dbg !3905
  %208 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3906
  %basename346 = getelementptr inbounds %struct.isofile, %struct.isofile* %208, i32 0, i32 6, !dbg !3906
  %length347 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename346, i32 0, i32 1, !dbg !3906
  store i64 0, i64* %length347, align 8, !dbg !3906
  %209 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3906
  %basename348 = getelementptr inbounds %struct.isofile, %struct.isofile* %209, i32 0, i32 6, !dbg !3906
  %210 = load i8*, i8** %slash, align 8, !dbg !3906
  %add.ptr349 = getelementptr inbounds i8, i8* %210, i64 1, !dbg !3906
  %211 = load i8*, i8** %slash, align 8, !dbg !3906
  %add.ptr350 = getelementptr inbounds i8, i8* %211, i64 1, !dbg !3906
  %cmp351 = icmp eq i8* %add.ptr350, null, !dbg !3906
  br i1 %cmp351, label %cond.true353, label %cond.false354, !dbg !3906

cond.true353:                                     ; preds = %if.end343
  br label %cond.end357, !dbg !3907

cond.false354:                                    ; preds = %if.end343
  %212 = load i8*, i8** %slash, align 8, !dbg !3908
  %add.ptr355 = getelementptr inbounds i8, i8* %212, i64 1, !dbg !3908
  %call356 = call i64 @strlen(i8* %add.ptr355) #9, !dbg !3908
  br label %cond.end357, !dbg !3908

cond.end357:                                      ; preds = %cond.false354, %cond.true353
  %cond358 = phi i64 [ 0, %cond.true353 ], [ %call356, %cond.false354 ], !dbg !3909
  %call359 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %basename348, i8* %add.ptr349, i64 %cond358), !dbg !3909
  %213 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3910
  %entry360 = getelementptr inbounds %struct.isofile, %struct.isofile* %213, i32 0, i32 4, !dbg !3912
  %214 = load %struct.archive_entry*, %struct.archive_entry** %entry360, align 8, !dbg !3912
  %call361 = call i32 @archive_entry_filetype(%struct.archive_entry* %214), !dbg !3913
  %cmp362 = icmp eq i32 %call361, 16384, !dbg !3914
  br i1 %cmp362, label %if.then364, label %if.end367, !dbg !3915

if.then364:                                       ; preds = %cond.end357
  %215 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3916
  %dircnt365 = getelementptr inbounds %struct.isofile, %struct.isofile* %215, i32 0, i32 9, !dbg !3917
  %216 = load i32, i32* %dircnt365, align 8, !dbg !3918
  %inc366 = add nsw i32 %216, 1, !dbg !3918
  store i32 %inc366, i32* %dircnt365, align 8, !dbg !3918
  br label %if.end367, !dbg !3916

if.end367:                                        ; preds = %if.then364, %cond.end357
  %217 = load i32, i32* %ret, align 4, !dbg !3919
  store i32 %217, i32* %retval, align 4, !dbg !3920
  br label %return, !dbg !3920

return:                                           ; preds = %if.end367, %if.then332, %if.then76, %if.then35, %if.then23, %if.then16, %if.then
  %218 = load i32, i32* %retval, align 4, !dbg !3921
  ret i32 %218, !dbg !3921
}

; Function Attrs: nounwind uwtable
define internal void @isofile_free(%struct.isofile* %file) #0 !dbg !587 {
entry:
  %file.addr = alloca %struct.isofile*, align 8
  %con = alloca %struct.content*, align 8
  %tmp = alloca %struct.content*, align 8
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !3922, metadata !986), !dbg !3923
  call void @llvm.dbg.declare(metadata %struct.content** %con, metadata !3924, metadata !986), !dbg !3925
  call void @llvm.dbg.declare(metadata %struct.content** %tmp, metadata !3926, metadata !986), !dbg !3927
  %0 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3928
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %0, i32 0, i32 10, !dbg !3929
  %next = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 4, !dbg !3930
  %1 = load %struct.content*, %struct.content** %next, align 8, !dbg !3930
  store %struct.content* %1, %struct.content** %con, align 8, !dbg !3931
  br label %while.cond, !dbg !3932

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.content*, %struct.content** %con, align 8, !dbg !3933
  %cmp = icmp ne %struct.content* %2, null, !dbg !3935
  br i1 %cmp, label %while.body, label %while.end, !dbg !3936

while.body:                                       ; preds = %while.cond
  %3 = load %struct.content*, %struct.content** %con, align 8, !dbg !3937
  store %struct.content* %3, %struct.content** %tmp, align 8, !dbg !3939
  %4 = load %struct.content*, %struct.content** %con, align 8, !dbg !3940
  %next1 = getelementptr inbounds %struct.content, %struct.content* %4, i32 0, i32 4, !dbg !3941
  %5 = load %struct.content*, %struct.content** %next1, align 8, !dbg !3941
  store %struct.content* %5, %struct.content** %con, align 8, !dbg !3942
  %6 = load %struct.content*, %struct.content** %tmp, align 8, !dbg !3943
  %7 = bitcast %struct.content* %6 to i8*, !dbg !3943
  call void @free(i8* %7) #8, !dbg !3944
  br label %while.cond, !dbg !3945

while.end:                                        ; preds = %while.cond
  %8 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3947
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %8, i32 0, i32 4, !dbg !3948
  %9 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !3948
  call void @archive_entry_free(%struct.archive_entry* %9), !dbg !3949
  %10 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3950
  %parentdir = getelementptr inbounds %struct.isofile, %struct.isofile* %10, i32 0, i32 5, !dbg !3951
  call void @archive_string_free(%struct.archive_string* %parentdir), !dbg !3952
  %11 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3953
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 6, !dbg !3954
  call void @archive_string_free(%struct.archive_string* %basename), !dbg !3955
  %12 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3956
  %basename_utf16 = getelementptr inbounds %struct.isofile, %struct.isofile* %12, i32 0, i32 7, !dbg !3957
  call void @archive_string_free(%struct.archive_string* %basename_utf16), !dbg !3958
  %13 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3959
  %symlink = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 8, !dbg !3960
  call void @archive_string_free(%struct.archive_string* %symlink), !dbg !3961
  %14 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3962
  %15 = bitcast %struct.isofile* %14 to i8*, !dbg !3962
  call void @free(i8* %15) #8, !dbg !3963
  ret void, !dbg !3964
}

; Function Attrs: nounwind uwtable
define internal void @isofile_add_entry(%struct.iso9660* %iso9660, %struct.isofile* %file) #0 !dbg !590 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !3965, metadata !986), !dbg !3966
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !3967, metadata !986), !dbg !3968
  %0 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3969
  %allnext = getelementptr inbounds %struct.isofile, %struct.isofile* %0, i32 0, i32 0, !dbg !3970
  store %struct.isofile* null, %struct.isofile** %allnext, align 8, !dbg !3971
  %1 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3972
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !3973
  %all_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 11, !dbg !3974
  %last = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list, i32 0, i32 1, !dbg !3975
  %3 = load %struct.isofile**, %struct.isofile*** %last, align 8, !dbg !3975
  store %struct.isofile* %1, %struct.isofile** %3, align 8, !dbg !3976
  %4 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3977
  %allnext1 = getelementptr inbounds %struct.isofile, %struct.isofile* %4, i32 0, i32 0, !dbg !3978
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !3979
  %all_file_list2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 11, !dbg !3980
  %last3 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list2, i32 0, i32 1, !dbg !3981
  store %struct.isofile** %allnext1, %struct.isofile*** %last3, align 8, !dbg !3982
  ret void, !dbg !3983
}

; Function Attrs: nounwind uwtable
define internal %struct.isoent* @isoent_new(%struct.isofile* %file) #0 !dbg !593 {
entry:
  %retval = alloca %struct.isoent*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  %isoent = alloca %struct.isoent*, align 8
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !3984, metadata !986), !dbg !3985
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !3986, metadata !986), !dbg !3987
  %call = call noalias i8* @calloc(i64 1, i64 240) #8, !dbg !3988
  %0 = bitcast i8* %call to %struct.isoent*, !dbg !3988
  store %struct.isoent* %0, %struct.isoent** %isoent, align 8, !dbg !3989
  %1 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !3990
  %cmp = icmp eq %struct.isoent* %1, null, !dbg !3992
  br i1 %cmp, label %if.then, label %if.end, !dbg !3993

if.then:                                          ; preds = %entry
  store %struct.isoent* null, %struct.isoent** %retval, align 8, !dbg !3994
  br label %return, !dbg !3994

if.end:                                           ; preds = %entry
  %2 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !3995
  %3 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !3996
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 1, !dbg !3997
  store %struct.isofile* %2, %struct.isofile** %file1, align 8, !dbg !3998
  %4 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !3999
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 3, !dbg !4000
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !4001
  store %struct.isoent* null, %struct.isoent** %first, align 8, !dbg !4002
  %5 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4003
  %children2 = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 3, !dbg !4004
  %first3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children2, i32 0, i32 0, !dbg !4005
  %6 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4006
  %children4 = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 3, !dbg !4007
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children4, i32 0, i32 1, !dbg !4008
  store %struct.isoent** %first3, %struct.isoent*** %last, align 8, !dbg !4009
  %7 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4010
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 4, !dbg !4011
  call void @__archive_rb_tree_init(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_tree_ops* @isoent_new.rb_ops), !dbg !4012
  %8 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4013
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 5, !dbg !4014
  %first5 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !4015
  store %struct.isoent* null, %struct.isoent** %first5, align 8, !dbg !4016
  %9 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4017
  %subdirs6 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 5, !dbg !4018
  %first7 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs6, i32 0, i32 0, !dbg !4019
  %10 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4020
  %subdirs8 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 5, !dbg !4021
  %last9 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs8, i32 0, i32 1, !dbg !4022
  store %struct.isoent** %first7, %struct.isoent*** %last9, align 8, !dbg !4023
  %11 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4024
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 21, !dbg !4025
  %first10 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 0, !dbg !4026
  store %struct.extr_rec* null, %struct.extr_rec** %first10, align 8, !dbg !4027
  %12 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4028
  %extr_rec_list11 = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 21, !dbg !4029
  %first12 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list11, i32 0, i32 0, !dbg !4030
  %13 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4031
  %extr_rec_list13 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 21, !dbg !4032
  %last14 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list13, i32 0, i32 1, !dbg !4033
  store %struct.extr_rec** %first12, %struct.extr_rec*** %last14, align 8, !dbg !4034
  %14 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4035
  %extr_rec_list15 = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 21, !dbg !4036
  %current = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list15, i32 0, i32 2, !dbg !4037
  store %struct.extr_rec* null, %struct.extr_rec** %current, align 8, !dbg !4038
  %15 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4039
  %entry16 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 4, !dbg !4041
  %16 = load %struct.archive_entry*, %struct.archive_entry** %entry16, align 8, !dbg !4041
  %call17 = call i32 @archive_entry_filetype(%struct.archive_entry* %16), !dbg !4042
  %cmp18 = icmp eq i32 %call17, 16384, !dbg !4043
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !4044

if.then19:                                        ; preds = %if.end
  %17 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4045
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %17, i32 0, i32 22, !dbg !4046
  %bf.load = load i8, i8* %dir, align 8, !dbg !4047
  %bf.clear = and i8 %bf.load, -3, !dbg !4047
  %bf.set = or i8 %bf.clear, 2, !dbg !4047
  store i8 %bf.set, i8* %dir, align 8, !dbg !4047
  br label %if.end20, !dbg !4045

if.end20:                                         ; preds = %if.then19, %if.end
  %18 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4048
  store %struct.isoent* %18, %struct.isoent** %retval, align 8, !dbg !4049
  br label %return, !dbg !4049

return:                                           ; preds = %if.end20, %if.then
  %19 = load %struct.isoent*, %struct.isoent** %retval, align 8, !dbg !4050
  ret %struct.isoent* %19, !dbg !4050
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_tree(%struct.archive_write* %a, %struct.isoent** %isoentpp) #0 !dbg !598 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %isoentpp.addr = alloca %struct.isoent**, align 8
  %name = alloca [256 x i8], align 16
  %iso9660 = alloca %struct.iso9660*, align 8
  %dent = alloca %struct.isoent*, align 8
  %isoent = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %f1 = alloca %struct.isofile*, align 8
  %f2 = alloca %struct.isofile*, align 8
  %fn = alloca i8*, align 8
  %p = alloca i8*, align 8
  %l = alloca i32, align 4
  %vp = alloca %struct.isoent*, align 8
  %as = alloca %struct.archive_string, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !4051, metadata !986), !dbg !4052
  store %struct.isoent** %isoentpp, %struct.isoent*** %isoentpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent*** %isoentpp.addr, metadata !4053, metadata !986), !dbg !4054
  call void @llvm.dbg.declare(metadata [256 x i8]* %name, metadata !4055, metadata !986), !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !4060, metadata !986), !dbg !4061
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4062
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !4063
  %1 = load i8*, i8** %format_data, align 8, !dbg !4063
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !4062
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.isoent** %dent, metadata !4064, metadata !986), !dbg !4065
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !4066, metadata !986), !dbg !4067
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !4068, metadata !986), !dbg !4069
  call void @llvm.dbg.declare(metadata %struct.isofile** %f1, metadata !4070, metadata !986), !dbg !4071
  call void @llvm.dbg.declare(metadata %struct.isofile** %f2, metadata !4072, metadata !986), !dbg !4073
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !4074, metadata !986), !dbg !4075
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4076, metadata !986), !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4078, metadata !986), !dbg !4079
  %3 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4080
  %4 = load %struct.isoent*, %struct.isoent** %3, align 8, !dbg !4081
  store %struct.isoent* %4, %struct.isoent** %isoent, align 8, !dbg !4082
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4083
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 14, !dbg !4084
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 0, !dbg !4085
  %6 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !4085
  store %struct.isoent* %6, %struct.isoent** %dent, align 8, !dbg !4086
  %7 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4087
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 1, !dbg !4089
  %8 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !4089
  %parentdir = getelementptr inbounds %struct.isofile, %struct.isofile* %8, i32 0, i32 5, !dbg !4090
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir, i32 0, i32 1, !dbg !4091
  %9 = load i64, i64* %length, align 8, !dbg !4091
  %cmp = icmp ugt i64 %9, 0, !dbg !4092
  br i1 %cmp, label %if.then, label %if.else, !dbg !4093

if.then:                                          ; preds = %entry
  %10 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4094
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 1, !dbg !4095
  %11 = load %struct.isofile*, %struct.isofile** %file1, align 8, !dbg !4095
  %parentdir2 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 5, !dbg !4096
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir2, i32 0, i32 0, !dbg !4097
  %12 = load i8*, i8** %s, align 8, !dbg !4097
  store i8* %12, i8** %p, align 8, !dbg !4098
  store i8* %12, i8** %fn, align 8, !dbg !4099
  br label %if.end, !dbg !4100

if.else:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8** %p, align 8, !dbg !4101
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8** %fn, align 8, !dbg !4102
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4103
  %cur_dirstr = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 4, !dbg !4103
  %length3 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr, i32 0, i32 1, !dbg !4103
  %14 = load i64, i64* %length3, align 8, !dbg !4103
  %15 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4105
  %file4 = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 1, !dbg !4105
  %16 = load %struct.isofile*, %struct.isofile** %file4, align 8, !dbg !4105
  %parentdir5 = getelementptr inbounds %struct.isofile, %struct.isofile* %16, i32 0, i32 5, !dbg !4105
  %length6 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir5, i32 0, i32 1, !dbg !4105
  %17 = load i64, i64* %length6, align 8, !dbg !4105
  %cmp7 = icmp eq i64 %14, %17, !dbg !4106
  br i1 %cmp7, label %land.lhs.true, label %if.end19, !dbg !4107

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4108
  %cur_dirstr8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 4, !dbg !4109
  %s9 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr8, i32 0, i32 0, !dbg !4110
  %19 = load i8*, i8** %s9, align 8, !dbg !4110
  %20 = load i8*, i8** %fn, align 8, !dbg !4111
  %call = call i32 @strcmp(i8* %19, i8* %20) #9, !dbg !4112
  %cmp10 = icmp eq i32 %call, 0, !dbg !4113
  br i1 %cmp10, label %if.then11, label %if.end19, !dbg !4114

if.then11:                                        ; preds = %land.lhs.true
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4116
  %cur_dirent = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 3, !dbg !4119
  %22 = load %struct.isoent*, %struct.isoent** %cur_dirent, align 8, !dbg !4119
  %23 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4120
  %call12 = call i32 @isoent_add_child_tail(%struct.isoent* %22, %struct.isoent* %23), !dbg !4121
  %tobool = icmp ne i32 %call12, 0, !dbg !4121
  br i1 %tobool, label %if.end18, label %if.then13, !dbg !4122

if.then13:                                        ; preds = %if.then11
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4123
  %cur_dirent14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 3, !dbg !4125
  %25 = load %struct.isoent*, %struct.isoent** %cur_dirent14, align 8, !dbg !4125
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %25, i32 0, i32 4, !dbg !4126
  %26 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4127
  %file15 = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 1, !dbg !4128
  %27 = load %struct.isofile*, %struct.isofile** %file15, align 8, !dbg !4128
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %27, i32 0, i32 6, !dbg !4129
  %s16 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 0, !dbg !4130
  %28 = load i8*, i8** %s16, align 8, !dbg !4130
  %call17 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %rbtree, i8* %28), !dbg !4131
  %29 = bitcast %struct.archive_rb_node* %call17 to %struct.isoent*, !dbg !4132
  store %struct.isoent* %29, %struct.isoent** %np, align 8, !dbg !4133
  br label %same_entry, !dbg !4134

if.end18:                                         ; preds = %if.then11
  store i32 0, i32* %retval, align 4, !dbg !4135
  br label %return, !dbg !4135

if.end19:                                         ; preds = %land.lhs.true, %if.end
  br label %for.cond, !dbg !4136

for.cond:                                         ; preds = %if.end49, %if.end19
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !4137
  %30 = load i8*, i8** %fn, align 8, !dbg !4141
  %call20 = call i32 @get_path_component(i8* %arraydecay, i64 256, i8* %30), !dbg !4142
  store i32 %call20, i32* %l, align 4, !dbg !4143
  %31 = load i32, i32* %l, align 4, !dbg !4144
  %cmp21 = icmp eq i32 %31, 0, !dbg !4146
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4147

if.then22:                                        ; preds = %for.cond
  store %struct.isoent* null, %struct.isoent** %np, align 8, !dbg !4148
  br label %for.end, !dbg !4150

if.end23:                                         ; preds = %for.cond
  %32 = load i32, i32* %l, align 4, !dbg !4151
  %cmp24 = icmp slt i32 %32, 0, !dbg !4153
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !4154

if.then25:                                        ; preds = %if.end23
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4155
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %33, i32 0, i32 0, !dbg !4157
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i32 0, i32 0)), !dbg !4158
  %34 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4159
  call void @_isoent_free(%struct.isoent* %34), !dbg !4160
  store i32 -30, i32* %retval, align 4, !dbg !4161
  br label %return, !dbg !4161

if.end26:                                         ; preds = %if.end23
  %35 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4162
  %arraydecay27 = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !4163
  %call28 = call %struct.isoent* @isoent_find_child(%struct.isoent* %35, i8* %arraydecay27), !dbg !4164
  store %struct.isoent* %call28, %struct.isoent** %np, align 8, !dbg !4165
  %36 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4166
  %cmp29 = icmp eq %struct.isoent* %36, null, !dbg !4168
  br i1 %cmp29, label %if.then32, label %lor.lhs.false, !dbg !4169

lor.lhs.false:                                    ; preds = %if.end26
  %37 = load i8*, i8** %fn, align 8, !dbg !4170
  %arrayidx = getelementptr inbounds i8, i8* %37, i64 0, !dbg !4170
  %38 = load i8, i8* %arrayidx, align 1, !dbg !4170
  %conv = sext i8 %38 to i32, !dbg !4170
  %cmp30 = icmp eq i32 %conv, 0, !dbg !4172
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4173

if.then32:                                        ; preds = %lor.lhs.false, %if.end26
  br label %for.end, !dbg !4174

if.end33:                                         ; preds = %lor.lhs.false
  %39 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4175
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %39, i32 0, i32 22, !dbg !4177
  %bf.load = load i8, i8* %dir, align 8, !dbg !4177
  %bf.shl = shl i8 %bf.load, 6, !dbg !4177
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !4177
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !4177
  %tobool34 = icmp ne i32 %bf.cast, 0, !dbg !4175
  br i1 %tobool34, label %if.end43, label %if.then35, !dbg !4178

if.then35:                                        ; preds = %if.end33
  %40 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4179
  %archive36 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %40, i32 0, i32 0, !dbg !4181
  %41 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4182
  %file37 = getelementptr inbounds %struct.isoent, %struct.isoent* %41, i32 0, i32 1, !dbg !4183
  %42 = load %struct.isofile*, %struct.isofile** %file37, align 8, !dbg !4183
  %entry38 = getelementptr inbounds %struct.isofile, %struct.isofile* %42, i32 0, i32 4, !dbg !4184
  %43 = load %struct.archive_entry*, %struct.archive_entry** %entry38, align 8, !dbg !4184
  %call39 = call i8* @archive_entry_pathname(%struct.archive_entry* %43), !dbg !4185
  %44 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4186
  %file40 = getelementptr inbounds %struct.isoent, %struct.isoent* %44, i32 0, i32 1, !dbg !4187
  %45 = load %struct.isofile*, %struct.isofile** %file40, align 8, !dbg !4187
  %entry41 = getelementptr inbounds %struct.isofile, %struct.isofile* %45, i32 0, i32 4, !dbg !4188
  %46 = load %struct.archive_entry*, %struct.archive_entry** %entry41, align 8, !dbg !4188
  %call42 = call i8* @archive_entry_pathname(%struct.archive_entry* %46), !dbg !4189
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive36, i32 -1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i32 0, i32 0), i8* %call39, i8* %call42), !dbg !4190
  %47 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4191
  call void @_isoent_free(%struct.isoent* %47), !dbg !4192
  %48 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4193
  store %struct.isoent* null, %struct.isoent** %48, align 8, !dbg !4194
  store i32 -25, i32* %retval, align 4, !dbg !4195
  br label %return, !dbg !4195

if.end43:                                         ; preds = %if.end33
  %49 = load i32, i32* %l, align 4, !dbg !4196
  %50 = load i8*, i8** %fn, align 8, !dbg !4197
  %idx.ext = sext i32 %49 to i64, !dbg !4197
  %add.ptr = getelementptr inbounds i8, i8* %50, i64 %idx.ext, !dbg !4197
  store i8* %add.ptr, i8** %fn, align 8, !dbg !4197
  %51 = load i8*, i8** %fn, align 8, !dbg !4198
  %arrayidx44 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !4198
  %52 = load i8, i8* %arrayidx44, align 1, !dbg !4198
  %conv45 = sext i8 %52 to i32, !dbg !4198
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !4200
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !4201

if.then48:                                        ; preds = %if.end43
  %53 = load i8*, i8** %fn, align 8, !dbg !4202
  %incdec.ptr = getelementptr inbounds i8, i8* %53, i32 1, !dbg !4202
  store i8* %incdec.ptr, i8** %fn, align 8, !dbg !4202
  br label %if.end49, !dbg !4203

if.end49:                                         ; preds = %if.then48, %if.end43
  %54 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4204
  store %struct.isoent* %54, %struct.isoent** %dent, align 8, !dbg !4205
  br label %for.cond, !dbg !4206

for.end:                                          ; preds = %if.then32, %if.then22
  %55 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4208
  %cmp50 = icmp eq %struct.isoent* %55, null, !dbg !4210
  br i1 %cmp50, label %if.then52, label %if.end160, !dbg !4211

if.then52:                                        ; preds = %for.end
  br label %while.cond, !dbg !4212

while.cond:                                       ; preds = %if.end105, %if.then52
  %56 = load i8*, i8** %fn, align 8, !dbg !4214
  %arrayidx53 = getelementptr inbounds i8, i8* %56, i64 0, !dbg !4214
  %57 = load i8, i8* %arrayidx53, align 1, !dbg !4214
  %conv54 = sext i8 %57 to i32, !dbg !4214
  %cmp55 = icmp ne i32 %conv54, 0, !dbg !4216
  br i1 %cmp55, label %while.body, label %while.end, !dbg !4217

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %vp, metadata !4218, metadata !986), !dbg !4220
  call void @llvm.dbg.declare(metadata %struct.archive_string* %as, metadata !4221, metadata !986), !dbg !4222
  br label %do.body, !dbg !4223

do.body:                                          ; preds = %while.body
  %s57 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 0, !dbg !4224
  store i8* null, i8** %s57, align 8, !dbg !4224
  %length58 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 1, !dbg !4224
  store i64 0, i64* %length58, align 8, !dbg !4224
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 2, !dbg !4224
  store i64 0, i64* %buffer_length, align 8, !dbg !4224
  br label %do.end, !dbg !4224

do.end:                                           ; preds = %do.body
  %58 = load i8*, i8** %p, align 8, !dbg !4227
  %59 = load i8*, i8** %fn, align 8, !dbg !4228
  %60 = load i8*, i8** %p, align 8, !dbg !4229
  %sub.ptr.lhs.cast = ptrtoint i8* %59 to i64, !dbg !4230
  %sub.ptr.rhs.cast = ptrtoint i8* %60 to i64, !dbg !4230
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4230
  %61 = load i32, i32* %l, align 4, !dbg !4231
  %conv59 = sext i32 %61 to i64, !dbg !4231
  %add = add nsw i64 %sub.ptr.sub, %conv59, !dbg !4232
  %call60 = call %struct.archive_string* @archive_strncat(%struct.archive_string* %as, i8* %58, i64 %add), !dbg !4233
  %length61 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 1, !dbg !4234
  %62 = load i64, i64* %length61, align 8, !dbg !4234
  %sub = sub i64 %62, 1, !dbg !4236
  %s62 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 0, !dbg !4237
  %63 = load i8*, i8** %s62, align 8, !dbg !4237
  %arrayidx63 = getelementptr inbounds i8, i8* %63, i64 %sub, !dbg !4238
  %64 = load i8, i8* %arrayidx63, align 1, !dbg !4238
  %conv64 = sext i8 %64 to i32, !dbg !4238
  %cmp65 = icmp eq i32 %conv64, 47, !dbg !4239
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !4240

if.then67:                                        ; preds = %do.end
  %length68 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 1, !dbg !4241
  %65 = load i64, i64* %length68, align 8, !dbg !4241
  %sub69 = sub i64 %65, 1, !dbg !4243
  %s70 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 0, !dbg !4244
  %66 = load i8*, i8** %s70, align 8, !dbg !4244
  %arrayidx71 = getelementptr inbounds i8, i8* %66, i64 %sub69, !dbg !4245
  store i8 0, i8* %arrayidx71, align 1, !dbg !4246
  %length72 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 1, !dbg !4247
  %67 = load i64, i64* %length72, align 8, !dbg !4248
  %dec = add i64 %67, -1, !dbg !4248
  store i64 %dec, i64* %length72, align 8, !dbg !4248
  br label %if.end73, !dbg !4249

if.end73:                                         ; preds = %if.then67, %do.end
  %68 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4250
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4251
  %s74 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %as, i32 0, i32 0, !dbg !4252
  %70 = load i8*, i8** %s74, align 8, !dbg !4252
  %call75 = call %struct.isoent* @isoent_create_virtual_dir(%struct.archive_write* %68, %struct.iso9660* %69, i8* %70), !dbg !4253
  store %struct.isoent* %call75, %struct.isoent** %vp, align 8, !dbg !4254
  %71 = load %struct.isoent*, %struct.isoent** %vp, align 8, !dbg !4255
  %cmp76 = icmp eq %struct.isoent* %71, null, !dbg !4257
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !4258

if.then78:                                        ; preds = %if.end73
  call void @archive_string_free(%struct.archive_string* %as), !dbg !4259
  %72 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4261
  %archive79 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %72, i32 0, i32 0, !dbg !4262
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive79, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !4263
  %73 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4264
  call void @_isoent_free(%struct.isoent* %73), !dbg !4265
  %74 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4266
  store %struct.isoent* null, %struct.isoent** %74, align 8, !dbg !4267
  store i32 -30, i32* %retval, align 4, !dbg !4268
  br label %return, !dbg !4268

if.end80:                                         ; preds = %if.end73
  call void @archive_string_free(%struct.archive_string* %as), !dbg !4269
  %75 = load %struct.isoent*, %struct.isoent** %vp, align 8, !dbg !4270
  %file81 = getelementptr inbounds %struct.isoent, %struct.isoent* %75, i32 0, i32 1, !dbg !4272
  %76 = load %struct.isofile*, %struct.isofile** %file81, align 8, !dbg !4272
  %dircnt = getelementptr inbounds %struct.isofile, %struct.isofile* %76, i32 0, i32 9, !dbg !4273
  %77 = load i32, i32* %dircnt, align 8, !dbg !4273
  %78 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4274
  %dircnt_max = getelementptr inbounds %struct.iso9660, %struct.iso9660* %78, i32 0, i32 29, !dbg !4275
  %79 = load i32, i32* %dircnt_max, align 8, !dbg !4275
  %cmp82 = icmp sgt i32 %77, %79, !dbg !4276
  br i1 %cmp82, label %if.then84, label %if.end88, !dbg !4277

if.then84:                                        ; preds = %if.end80
  %80 = load %struct.isoent*, %struct.isoent** %vp, align 8, !dbg !4278
  %file85 = getelementptr inbounds %struct.isoent, %struct.isoent* %80, i32 0, i32 1, !dbg !4279
  %81 = load %struct.isofile*, %struct.isofile** %file85, align 8, !dbg !4279
  %dircnt86 = getelementptr inbounds %struct.isofile, %struct.isofile* %81, i32 0, i32 9, !dbg !4280
  %82 = load i32, i32* %dircnt86, align 8, !dbg !4280
  %83 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4281
  %dircnt_max87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %83, i32 0, i32 29, !dbg !4282
  store i32 %82, i32* %dircnt_max87, align 8, !dbg !4283
  br label %if.end88, !dbg !4281

if.end88:                                         ; preds = %if.then84, %if.end80
  %84 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4284
  %85 = load %struct.isoent*, %struct.isoent** %vp, align 8, !dbg !4285
  %call89 = call i32 @isoent_add_child_tail(%struct.isoent* %84, %struct.isoent* %85), !dbg !4286
  %86 = load %struct.isoent*, %struct.isoent** %vp, align 8, !dbg !4287
  store %struct.isoent* %86, %struct.isoent** %np, align 8, !dbg !4288
  %87 = load i32, i32* %l, align 4, !dbg !4289
  %88 = load i8*, i8** %fn, align 8, !dbg !4290
  %idx.ext90 = sext i32 %87 to i64, !dbg !4290
  %add.ptr91 = getelementptr inbounds i8, i8* %88, i64 %idx.ext90, !dbg !4290
  store i8* %add.ptr91, i8** %fn, align 8, !dbg !4290
  %89 = load i8*, i8** %fn, align 8, !dbg !4291
  %arrayidx92 = getelementptr inbounds i8, i8* %89, i64 0, !dbg !4291
  %90 = load i8, i8* %arrayidx92, align 1, !dbg !4291
  %conv93 = sext i8 %90 to i32, !dbg !4291
  %cmp94 = icmp eq i32 %conv93, 47, !dbg !4293
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !4294

if.then96:                                        ; preds = %if.end88
  %91 = load i8*, i8** %fn, align 8, !dbg !4295
  %incdec.ptr97 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !4295
  store i8* %incdec.ptr97, i8** %fn, align 8, !dbg !4295
  br label %if.end98, !dbg !4296

if.end98:                                         ; preds = %if.then96, %if.end88
  %arraydecay99 = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !4297
  %92 = load i8*, i8** %fn, align 8, !dbg !4298
  %call100 = call i32 @get_path_component(i8* %arraydecay99, i64 256, i8* %92), !dbg !4299
  store i32 %call100, i32* %l, align 4, !dbg !4300
  %93 = load i32, i32* %l, align 4, !dbg !4301
  %cmp101 = icmp slt i32 %93, 0, !dbg !4303
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !4304

if.then103:                                       ; preds = %if.end98
  call void @archive_string_free(%struct.archive_string* %as), !dbg !4305
  %94 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4307
  %archive104 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %94, i32 0, i32 0, !dbg !4308
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive104, i32 -1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i32 0, i32 0)), !dbg !4309
  %95 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4310
  call void @_isoent_free(%struct.isoent* %95), !dbg !4311
  %96 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4312
  store %struct.isoent* null, %struct.isoent** %96, align 8, !dbg !4313
  store i32 -30, i32* %retval, align 4, !dbg !4314
  br label %return, !dbg !4314

if.end105:                                        ; preds = %if.end98
  %97 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4315
  store %struct.isoent* %97, %struct.isoent** %dent, align 8, !dbg !4316
  br label %while.cond, !dbg !4317

while.end:                                        ; preds = %while.cond
  %98 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4319
  %99 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4320
  %cur_dirent106 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %99, i32 0, i32 3, !dbg !4321
  store %struct.isoent* %98, %struct.isoent** %cur_dirent106, align 8, !dbg !4322
  %100 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4323
  %cur_dirstr107 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %100, i32 0, i32 4, !dbg !4323
  %length108 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr107, i32 0, i32 1, !dbg !4323
  store i64 0, i64* %length108, align 8, !dbg !4323
  %101 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4324
  %cur_dirstr109 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %101, i32 0, i32 4, !dbg !4325
  %102 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4326
  %file110 = getelementptr inbounds %struct.isoent, %struct.isoent* %102, i32 0, i32 1, !dbg !4326
  %103 = load %struct.isofile*, %struct.isofile** %file110, align 8, !dbg !4326
  %parentdir111 = getelementptr inbounds %struct.isofile, %struct.isofile* %103, i32 0, i32 5, !dbg !4326
  %length112 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir111, i32 0, i32 1, !dbg !4326
  %104 = load i64, i64* %length112, align 8, !dbg !4326
  %105 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4327
  %file113 = getelementptr inbounds %struct.isoent, %struct.isoent* %105, i32 0, i32 1, !dbg !4327
  %106 = load %struct.isofile*, %struct.isofile** %file113, align 8, !dbg !4327
  %basename114 = getelementptr inbounds %struct.isofile, %struct.isofile* %106, i32 0, i32 6, !dbg !4327
  %length115 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename114, i32 0, i32 1, !dbg !4327
  %107 = load i64, i64* %length115, align 8, !dbg !4327
  %add116 = add i64 %104, %107, !dbg !4328
  %add117 = add i64 %add116, 2, !dbg !4329
  %call118 = call %struct.archive_string* @archive_string_ensure(%struct.archive_string* %cur_dirstr109, i64 %add117), !dbg !4330
  %108 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4331
  %file119 = getelementptr inbounds %struct.isoent, %struct.isoent* %108, i32 0, i32 1, !dbg !4331
  %109 = load %struct.isofile*, %struct.isofile** %file119, align 8, !dbg !4331
  %parentdir120 = getelementptr inbounds %struct.isofile, %struct.isofile* %109, i32 0, i32 5, !dbg !4331
  %length121 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir120, i32 0, i32 1, !dbg !4331
  %110 = load i64, i64* %length121, align 8, !dbg !4331
  %111 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4333
  %file122 = getelementptr inbounds %struct.isoent, %struct.isoent* %111, i32 0, i32 1, !dbg !4333
  %112 = load %struct.isofile*, %struct.isofile** %file122, align 8, !dbg !4333
  %basename123 = getelementptr inbounds %struct.isofile, %struct.isofile* %112, i32 0, i32 6, !dbg !4333
  %length124 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename123, i32 0, i32 1, !dbg !4333
  %113 = load i64, i64* %length124, align 8, !dbg !4333
  %add125 = add i64 %110, %113, !dbg !4334
  %cmp126 = icmp eq i64 %add125, 0, !dbg !4335
  br i1 %cmp126, label %if.then128, label %if.else132, !dbg !4336

if.then128:                                       ; preds = %while.end
  %114 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4337
  %cur_dirstr129 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %114, i32 0, i32 4, !dbg !4338
  %s130 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr129, i32 0, i32 0, !dbg !4339
  %115 = load i8*, i8** %s130, align 8, !dbg !4339
  %arrayidx131 = getelementptr inbounds i8, i8* %115, i64 0, !dbg !4337
  store i8 0, i8* %arrayidx131, align 1, !dbg !4340
  br label %if.end150, !dbg !4337

if.else132:                                       ; preds = %while.end
  %116 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4341
  %file133 = getelementptr inbounds %struct.isoent, %struct.isoent* %116, i32 0, i32 1, !dbg !4341
  %117 = load %struct.isofile*, %struct.isofile** %file133, align 8, !dbg !4341
  %parentdir134 = getelementptr inbounds %struct.isofile, %struct.isofile* %117, i32 0, i32 5, !dbg !4341
  %length135 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %parentdir134, i32 0, i32 1, !dbg !4341
  %118 = load i64, i64* %length135, align 8, !dbg !4341
  %cmp136 = icmp ugt i64 %118, 0, !dbg !4344
  br i1 %cmp136, label %if.then138, label %if.end146, !dbg !4345

if.then138:                                       ; preds = %if.else132
  %119 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4346
  %cur_dirstr139 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %119, i32 0, i32 4, !dbg !4346
  %length140 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %cur_dirstr139, i32 0, i32 1, !dbg !4346
  store i64 0, i64* %length140, align 8, !dbg !4346
  %120 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4346
  %cur_dirstr141 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %120, i32 0, i32 4, !dbg !4346
  %121 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4346
  %file142 = getelementptr inbounds %struct.isoent, %struct.isoent* %121, i32 0, i32 1, !dbg !4346
  %122 = load %struct.isofile*, %struct.isofile** %file142, align 8, !dbg !4346
  %parentdir143 = getelementptr inbounds %struct.isofile, %struct.isofile* %122, i32 0, i32 5, !dbg !4346
  call void @archive_string_concat(%struct.archive_string* %cur_dirstr141, %struct.archive_string* %parentdir143), !dbg !4346
  %123 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4348
  %cur_dirstr144 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %123, i32 0, i32 4, !dbg !4349
  %call145 = call %struct.archive_string* @archive_strappend_char(%struct.archive_string* %cur_dirstr144, i8 signext 47), !dbg !4350
  br label %if.end146, !dbg !4351

if.end146:                                        ; preds = %if.then138, %if.else132
  %124 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4352
  %cur_dirstr147 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %124, i32 0, i32 4, !dbg !4353
  %125 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4354
  %file148 = getelementptr inbounds %struct.isoent, %struct.isoent* %125, i32 0, i32 1, !dbg !4355
  %126 = load %struct.isofile*, %struct.isofile** %file148, align 8, !dbg !4355
  %basename149 = getelementptr inbounds %struct.isofile, %struct.isofile* %126, i32 0, i32 6, !dbg !4356
  call void @archive_string_concat(%struct.archive_string* %cur_dirstr147, %struct.archive_string* %basename149), !dbg !4357
  br label %if.end150

if.end150:                                        ; preds = %if.end146, %if.then128
  %127 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4358
  %128 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4360
  %call151 = call i32 @isoent_add_child_tail(%struct.isoent* %127, %struct.isoent* %128), !dbg !4361
  %tobool152 = icmp ne i32 %call151, 0, !dbg !4361
  br i1 %tobool152, label %if.end159, label %if.then153, !dbg !4362

if.then153:                                       ; preds = %if.end150
  %129 = load %struct.isoent*, %struct.isoent** %dent, align 8, !dbg !4363
  %rbtree154 = getelementptr inbounds %struct.isoent, %struct.isoent* %129, i32 0, i32 4, !dbg !4365
  %130 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4366
  %file155 = getelementptr inbounds %struct.isoent, %struct.isoent* %130, i32 0, i32 1, !dbg !4367
  %131 = load %struct.isofile*, %struct.isofile** %file155, align 8, !dbg !4367
  %basename156 = getelementptr inbounds %struct.isofile, %struct.isofile* %131, i32 0, i32 6, !dbg !4368
  %s157 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename156, i32 0, i32 0, !dbg !4369
  %132 = load i8*, i8** %s157, align 8, !dbg !4369
  %call158 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %rbtree154, i8* %132), !dbg !4370
  %133 = bitcast %struct.archive_rb_node* %call158 to %struct.isoent*, !dbg !4371
  store %struct.isoent* %133, %struct.isoent** %np, align 8, !dbg !4372
  br label %same_entry, !dbg !4373

if.end159:                                        ; preds = %if.end150
  store i32 0, i32* %retval, align 4, !dbg !4374
  br label %return, !dbg !4374

if.end160:                                        ; preds = %for.end
  br label %same_entry, !dbg !4375

same_entry:                                       ; preds = %if.end160, %if.then153, %if.then13
  %134 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4377
  %file161 = getelementptr inbounds %struct.isoent, %struct.isoent* %134, i32 0, i32 1, !dbg !4378
  %135 = load %struct.isofile*, %struct.isofile** %file161, align 8, !dbg !4378
  store %struct.isofile* %135, %struct.isofile** %f1, align 8, !dbg !4379
  %136 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4380
  %file162 = getelementptr inbounds %struct.isoent, %struct.isoent* %136, i32 0, i32 1, !dbg !4381
  %137 = load %struct.isofile*, %struct.isofile** %file162, align 8, !dbg !4381
  store %struct.isofile* %137, %struct.isofile** %f2, align 8, !dbg !4382
  %138 = load %struct.isofile*, %struct.isofile** %f1, align 8, !dbg !4383
  %entry163 = getelementptr inbounds %struct.isofile, %struct.isofile* %138, i32 0, i32 4, !dbg !4385
  %139 = load %struct.archive_entry*, %struct.archive_entry** %entry163, align 8, !dbg !4385
  %call164 = call i32 @archive_entry_filetype(%struct.archive_entry* %139), !dbg !4386
  %140 = load %struct.isofile*, %struct.isofile** %f2, align 8, !dbg !4387
  %entry165 = getelementptr inbounds %struct.isofile, %struct.isofile* %140, i32 0, i32 4, !dbg !4388
  %141 = load %struct.archive_entry*, %struct.archive_entry** %entry165, align 8, !dbg !4388
  %call166 = call i32 @archive_entry_filetype(%struct.archive_entry* %141), !dbg !4389
  %cmp167 = icmp ne i32 %call164, %call166, !dbg !4390
  br i1 %cmp167, label %if.then169, label %if.end173, !dbg !4391

if.then169:                                       ; preds = %same_entry
  %142 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4392
  %archive170 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %142, i32 0, i32 0, !dbg !4394
  %143 = load %struct.isofile*, %struct.isofile** %f1, align 8, !dbg !4395
  %entry171 = getelementptr inbounds %struct.isofile, %struct.isofile* %143, i32 0, i32 4, !dbg !4396
  %144 = load %struct.archive_entry*, %struct.archive_entry** %entry171, align 8, !dbg !4396
  %call172 = call i8* @archive_entry_pathname(%struct.archive_entry* %144), !dbg !4397
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive170, i32 -1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.52, i32 0, i32 0), i8* %call172), !dbg !4398
  %145 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4399
  call void @_isoent_free(%struct.isoent* %145), !dbg !4400
  %146 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4401
  store %struct.isoent* null, %struct.isoent** %146, align 8, !dbg !4402
  store i32 -25, i32* %retval, align 4, !dbg !4403
  br label %return, !dbg !4403

if.end173:                                        ; preds = %same_entry
  %147 = load %struct.isofile*, %struct.isofile** %f2, align 8, !dbg !4404
  %148 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4405
  %file174 = getelementptr inbounds %struct.isoent, %struct.isoent* %148, i32 0, i32 1, !dbg !4406
  store %struct.isofile* %147, %struct.isofile** %file174, align 8, !dbg !4407
  %149 = load %struct.isofile*, %struct.isofile** %f1, align 8, !dbg !4408
  %150 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4409
  %file175 = getelementptr inbounds %struct.isoent, %struct.isoent* %150, i32 0, i32 1, !dbg !4410
  store %struct.isofile* %149, %struct.isofile** %file175, align 8, !dbg !4411
  %151 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4412
  %virtual = getelementptr inbounds %struct.isoent, %struct.isoent* %151, i32 0, i32 22, !dbg !4413
  %bf.load176 = load i8, i8* %virtual, align 8, !dbg !4414
  %bf.clear = and i8 %bf.load176, -2, !dbg !4414
  store i8 %bf.clear, i8* %virtual, align 8, !dbg !4414
  %152 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !4415
  call void @_isoent_free(%struct.isoent* %152), !dbg !4416
  %153 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4417
  %154 = load %struct.isoent**, %struct.isoent*** %isoentpp.addr, align 8, !dbg !4418
  store %struct.isoent* %153, %struct.isoent** %154, align 8, !dbg !4419
  store i32 0, i32* %retval, align 4, !dbg !4420
  br label %return, !dbg !4420

return:                                           ; preds = %if.end173, %if.then169, %if.end159, %if.then103, %if.then78, %if.then35, %if.then25, %if.end18
  %155 = load i32, i32* %retval, align 4, !dbg !4421
  ret i32 %155, !dbg !4421
}

declare i32 @archive_entry_nlink(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal i32 @isofile_register_hardlink(%struct.archive_write* %a, %struct.isofile* %file) #0 !dbg !613 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %hl = alloca %struct.hardlink*, align 8
  %pathname = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !4422, metadata !986), !dbg !4423
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !4424, metadata !986), !dbg !4425
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !4426, metadata !986), !dbg !4427
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4428
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !4429
  %1 = load i8*, i8** %format_data, align 8, !dbg !4429
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !4428
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.hardlink** %hl, metadata !4430, metadata !986), !dbg !4431
  call void @llvm.dbg.declare(metadata i8** %pathname, metadata !4432, metadata !986), !dbg !4433
  %3 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4434
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %3, i32 0, i32 4, !dbg !4435
  %4 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !4435
  call void @archive_entry_set_nlink(%struct.archive_entry* %4, i32 1), !dbg !4436
  %5 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4437
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 4, !dbg !4438
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !4438
  %call = call i8* @archive_entry_hardlink(%struct.archive_entry* %6), !dbg !4439
  store i8* %call, i8** %pathname, align 8, !dbg !4440
  %7 = load i8*, i8** %pathname, align 8, !dbg !4441
  %cmp = icmp eq i8* %7, null, !dbg !4443
  br i1 %cmp, label %if.then, label %if.else, !dbg !4444

if.then:                                          ; preds = %entry
  %call3 = call noalias i8* @malloc(i64 48) #8, !dbg !4445
  %8 = bitcast i8* %call3 to %struct.hardlink*, !dbg !4445
  store %struct.hardlink* %8, %struct.hardlink** %hl, align 8, !dbg !4447
  %9 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4448
  %cmp4 = icmp eq %struct.hardlink* %9, null, !dbg !4450
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4451

if.then5:                                         ; preds = %if.then
  %10 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4452
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %10, i32 0, i32 0, !dbg !4454
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !4455
  store i32 -30, i32* %retval, align 4, !dbg !4456
  br label %return, !dbg !4456

if.end:                                           ; preds = %if.then
  %11 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4457
  %nlink = getelementptr inbounds %struct.hardlink, %struct.hardlink* %11, i32 0, i32 1, !dbg !4458
  store i32 1, i32* %nlink, align 8, !dbg !4459
  %12 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4460
  %hlnext = getelementptr inbounds %struct.isofile, %struct.isofile* %12, i32 0, i32 2, !dbg !4461
  store %struct.isofile* null, %struct.isofile** %hlnext, align 8, !dbg !4462
  %13 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4463
  %14 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4464
  %file_list = getelementptr inbounds %struct.hardlink, %struct.hardlink* %14, i32 0, i32 2, !dbg !4465
  %first = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list, i32 0, i32 0, !dbg !4466
  store %struct.isofile* %13, %struct.isofile** %first, align 8, !dbg !4467
  %15 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4468
  %hlnext6 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 2, !dbg !4469
  %16 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4470
  %file_list7 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %16, i32 0, i32 2, !dbg !4471
  %last = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list7, i32 0, i32 1, !dbg !4472
  store %struct.isofile** %hlnext6, %struct.isofile*** %last, align 8, !dbg !4473
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4474
  %hardlink_rbtree = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 13, !dbg !4475
  %18 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4476
  %19 = bitcast %struct.hardlink* %18 to %struct.archive_rb_node*, !dbg !4477
  %call8 = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %hardlink_rbtree, %struct.archive_rb_node* %19), !dbg !4478
  br label %if.end22, !dbg !4479

if.else:                                          ; preds = %entry
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4480
  %hardlink_rbtree9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 13, !dbg !4482
  %21 = load i8*, i8** %pathname, align 8, !dbg !4483
  %call10 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %hardlink_rbtree9, i8* %21), !dbg !4484
  %22 = bitcast %struct.archive_rb_node* %call10 to %struct.hardlink*, !dbg !4485
  store %struct.hardlink* %22, %struct.hardlink** %hl, align 8, !dbg !4486
  %23 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4487
  %cmp11 = icmp ne %struct.hardlink* %23, null, !dbg !4489
  br i1 %cmp11, label %if.then12, label %if.end20, !dbg !4490

if.then12:                                        ; preds = %if.else
  %24 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4491
  %hlnext13 = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 2, !dbg !4493
  store %struct.isofile* null, %struct.isofile** %hlnext13, align 8, !dbg !4494
  %25 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4495
  %26 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4496
  %file_list14 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %26, i32 0, i32 2, !dbg !4497
  %last15 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list14, i32 0, i32 1, !dbg !4498
  %27 = load %struct.isofile**, %struct.isofile*** %last15, align 8, !dbg !4498
  store %struct.isofile* %25, %struct.isofile** %27, align 8, !dbg !4499
  %28 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4500
  %hlnext16 = getelementptr inbounds %struct.isofile, %struct.isofile* %28, i32 0, i32 2, !dbg !4501
  %29 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4502
  %file_list17 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %29, i32 0, i32 2, !dbg !4503
  %last18 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list17, i32 0, i32 1, !dbg !4504
  store %struct.isofile** %hlnext16, %struct.isofile*** %last18, align 8, !dbg !4505
  %30 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !4506
  %nlink19 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %30, i32 0, i32 1, !dbg !4507
  %31 = load i32, i32* %nlink19, align 8, !dbg !4508
  %inc = add nsw i32 %31, 1, !dbg !4508
  store i32 %inc, i32* %nlink19, align 8, !dbg !4508
  br label %if.end20, !dbg !4509

if.end20:                                         ; preds = %if.then12, %if.else
  %32 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4510
  %entry21 = getelementptr inbounds %struct.isofile, %struct.isofile* %32, i32 0, i32 4, !dbg !4511
  %33 = load %struct.archive_entry*, %struct.archive_entry** %entry21, align 8, !dbg !4511
  call void @archive_entry_unset_size(%struct.archive_entry* %33), !dbg !4512
  br label %if.end22

if.end22:                                         ; preds = %if.end20, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4513
  br label %return, !dbg !4513

return:                                           ; preds = %if.end22, %if.then5
  %34 = load i32, i32* %retval, align 4, !dbg !4514
  ret i32 %34, !dbg !4514
}

declare i32 @__archive_mktemp(i8*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_init(%struct.archive_write* %a, %struct.isofile* %file) #0 !dbg !614 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %tsize = alloca i64, align 8
  %_ceil = alloca i64, align 8
  %bpsize = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !4515, metadata !986), !dbg !4516
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !4517, metadata !986), !dbg !4518
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !4519, metadata !986), !dbg !4520
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4521
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !4522
  %1 = load i8*, i8** %format_data, align 8, !dbg !4522
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !4521
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !4520
  call void @llvm.dbg.declare(metadata i64* %tsize, metadata !4523, metadata !986), !dbg !4524
  call void @llvm.dbg.declare(metadata i64* %_ceil, metadata !4525, metadata !986), !dbg !4526
  call void @llvm.dbg.declare(metadata i64* %bpsize, metadata !4527, metadata !986), !dbg !4528
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4529, metadata !986), !dbg !4530
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4531
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 27, !dbg !4532
  %4 = bitcast %struct.anon.6* %zisofs to i8*, !dbg !4533
  %bf.load = load i8, i8* %4, align 8, !dbg !4534
  %bf.clear = and i8 %bf.load, -2, !dbg !4534
  store i8 %bf.clear, i8* %4, align 8, !dbg !4534
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4535
  %zisofs1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 27, !dbg !4536
  %6 = bitcast %struct.anon.6* %zisofs1 to i8*, !dbg !4537
  %bf.load2 = load i8, i8* %6, align 8, !dbg !4538
  %bf.clear3 = and i8 %bf.load2, -3, !dbg !4538
  store i8 %bf.clear3, i8* %6, align 8, !dbg !4538
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4539
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 37, !dbg !4541
  %8 = bitcast %struct.iso_option* %opt to i32*, !dbg !4542
  %bf.load4 = load i32, i32* %8, align 8, !dbg !4542
  %bf.lshr = lshr i32 %bf.load4, 23, !dbg !4542
  %bf.clear5 = and i32 %bf.lshr, 3, !dbg !4542
  %tobool = icmp ne i32 %bf.clear5, 0, !dbg !4539
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4543

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4544
  %opt6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 37, !dbg !4546
  %10 = bitcast %struct.iso_option* %opt6 to i32*, !dbg !4547
  %bf.load7 = load i32, i32* %10, align 8, !dbg !4547
  %bf.lshr8 = lshr i32 %bf.load7, 26, !dbg !4547
  %bf.clear9 = and i32 %bf.lshr8, 1, !dbg !4547
  %tobool10 = icmp ne i32 %bf.clear9, 0, !dbg !4544
  br i1 %tobool10, label %if.end, label %if.then, !dbg !4548

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4549
  br label %return, !dbg !4549

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4550
  %entry11 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 4, !dbg !4552
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry11, align 8, !dbg !4552
  %call = call i64 @archive_entry_size(%struct.archive_entry* %12), !dbg !4553
  %cmp = icmp sge i64 %call, 24, !dbg !4554
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !4555

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4556
  %entry12 = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 4, !dbg !4557
  %14 = load %struct.archive_entry*, %struct.archive_entry** %entry12, align 8, !dbg !4557
  %call13 = call i64 @archive_entry_size(%struct.archive_entry* %14), !dbg !4558
  %cmp14 = icmp slt i64 %call13, 4294967296, !dbg !4559
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !4560

if.then15:                                        ; preds = %land.lhs.true
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4562
  %zisofs16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 27, !dbg !4564
  %16 = bitcast %struct.anon.6* %zisofs16 to i8*, !dbg !4565
  %bf.load17 = load i8, i8* %16, align 8, !dbg !4566
  %bf.clear18 = and i8 %bf.load17, -2, !dbg !4566
  %bf.set = or i8 %bf.clear18, 1, !dbg !4566
  store i8 %bf.set, i8* %16, align 8, !dbg !4566
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4567
  %zisofs19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 27, !dbg !4568
  %magic_cnt = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs19, i32 0, i32 2, !dbg !4569
  store i32 0, i32* %magic_cnt, align 4, !dbg !4570
  br label %if.end20, !dbg !4571

if.end20:                                         ; preds = %if.then15, %land.lhs.true, %if.end
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4572
  %zisofs21 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 27, !dbg !4574
  %19 = bitcast %struct.anon.6* %zisofs21 to i8*, !dbg !4575
  %bf.load22 = load i8, i8* %19, align 8, !dbg !4575
  %bf.shl = shl i8 %bf.load22, 7, !dbg !4575
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !4575
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !4575
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !4572
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !4576

if.then24:                                        ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !4577
  br label %return, !dbg !4577

if.end25:                                         ; preds = %if.end20
  %20 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4578
  %entry26 = getelementptr inbounds %struct.isofile, %struct.isofile* %20, i32 0, i32 4, !dbg !4580
  %21 = load %struct.archive_entry*, %struct.archive_entry** %entry26, align 8, !dbg !4580
  %call27 = call i64 @archive_entry_size(%struct.archive_entry* %21), !dbg !4581
  %cmp28 = icmp sle i64 %call27, 2048, !dbg !4582
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !4583

if.then29:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !4584
  br label %return, !dbg !4584

if.end30:                                         ; preds = %if.end25
  %22 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4585
  %call31 = call i32 @zisofs_init_zstream(%struct.archive_write* %22), !dbg !4586
  store i32 %call31, i32* %r, align 4, !dbg !4587
  %23 = load i32, i32* %r, align 4, !dbg !4588
  %cmp32 = icmp ne i32 %23, 0, !dbg !4590
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !4591

if.then33:                                        ; preds = %if.end30
  store i32 -30, i32* %retval, align 4, !dbg !4592
  br label %return, !dbg !4592

if.end34:                                         ; preds = %if.end30
  %24 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4593
  %zisofs35 = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 14, !dbg !4594
  %header_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs35, i32 0, i32 0, !dbg !4595
  store i8 4, i8* %header_size, align 8, !dbg !4596
  %25 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4597
  %zisofs36 = getelementptr inbounds %struct.isofile, %struct.isofile* %25, i32 0, i32 14, !dbg !4598
  %log2_bs = getelementptr inbounds %struct.anon, %struct.anon* %zisofs36, i32 0, i32 1, !dbg !4599
  store i8 15, i8* %log2_bs, align 1, !dbg !4600
  %26 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4601
  %entry37 = getelementptr inbounds %struct.isofile, %struct.isofile* %26, i32 0, i32 4, !dbg !4602
  %27 = load %struct.archive_entry*, %struct.archive_entry** %entry37, align 8, !dbg !4602
  %call38 = call i64 @archive_entry_size(%struct.archive_entry* %27), !dbg !4603
  %conv = trunc i64 %call38 to i32, !dbg !4604
  %28 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4605
  %zisofs39 = getelementptr inbounds %struct.isofile, %struct.isofile* %28, i32 0, i32 14, !dbg !4606
  %uncompressed_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs39, i32 0, i32 2, !dbg !4607
  store i32 %conv, i32* %uncompressed_size, align 4, !dbg !4608
  %29 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4609
  %zisofs40 = getelementptr inbounds %struct.isofile, %struct.isofile* %29, i32 0, i32 14, !dbg !4610
  %uncompressed_size41 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs40, i32 0, i32 2, !dbg !4611
  %30 = load i32, i32* %uncompressed_size41, align 4, !dbg !4611
  %conv42 = zext i32 %30 to i64, !dbg !4609
  %add = add i64 %conv42, 32768, !dbg !4612
  %sub = sub i64 %add, 1, !dbg !4613
  %31 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4614
  %zisofs43 = getelementptr inbounds %struct.isofile, %struct.isofile* %31, i32 0, i32 14, !dbg !4615
  %log2_bs44 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs43, i32 0, i32 1, !dbg !4616
  %32 = load i8, i8* %log2_bs44, align 1, !dbg !4616
  %conv45 = zext i8 %32 to i32, !dbg !4614
  %sh_prom = zext i32 %conv45 to i64, !dbg !4617
  %shr = lshr i64 %sub, %sh_prom, !dbg !4617
  store i64 %shr, i64* %_ceil, align 8, !dbg !4618
  %33 = load i64, i64* %_ceil, align 8, !dbg !4619
  %conv46 = trunc i64 %33 to i32, !dbg !4620
  %add47 = add nsw i32 %conv46, 1, !dbg !4621
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4622
  %zisofs48 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 27, !dbg !4623
  %block_pointers_cnt = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs48, i32 0, i32 5, !dbg !4624
  store i32 %add47, i32* %block_pointers_cnt, align 8, !dbg !4625
  %35 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4626
  %zisofs49 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %35, i32 0, i32 27, !dbg !4627
  %block_pointers_idx = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs49, i32 0, i32 6, !dbg !4628
  store i32 0, i32* %block_pointers_idx, align 4, !dbg !4629
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4630
  %zisofs50 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 27, !dbg !4631
  %block_pointers_cnt51 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs50, i32 0, i32 5, !dbg !4632
  %37 = load i32, i32* %block_pointers_cnt51, align 8, !dbg !4632
  %conv52 = sext i32 %37 to i64, !dbg !4630
  %mul = mul i64 %conv52, 4, !dbg !4633
  store i64 %mul, i64* %bpsize, align 8, !dbg !4634
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4635
  %zisofs53 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 27, !dbg !4637
  %block_pointers_allocated = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs53, i32 0, i32 4, !dbg !4638
  %39 = load i64, i64* %block_pointers_allocated, align 8, !dbg !4638
  %40 = load i64, i64* %bpsize, align 8, !dbg !4639
  %cmp54 = icmp ult i64 %39, %40, !dbg !4640
  br i1 %cmp54, label %if.then56, label %if.end69, !dbg !4641

if.then56:                                        ; preds = %if.end34
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4642
  %zisofs57 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 27, !dbg !4644
  %block_pointers = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs57, i32 0, i32 3, !dbg !4645
  %42 = load i32*, i32** %block_pointers, align 8, !dbg !4645
  %43 = bitcast i32* %42 to i8*, !dbg !4642
  call void @free(i8* %43) #8, !dbg !4646
  %44 = load i64, i64* %bpsize, align 8, !dbg !4647
  %call58 = call noalias i8* @malloc(i64 %44) #8, !dbg !4648
  %45 = bitcast i8* %call58 to i32*, !dbg !4648
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4649
  %zisofs59 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 27, !dbg !4650
  %block_pointers60 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs59, i32 0, i32 3, !dbg !4651
  store i32* %45, i32** %block_pointers60, align 8, !dbg !4652
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4653
  %zisofs61 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 27, !dbg !4655
  %block_pointers62 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs61, i32 0, i32 3, !dbg !4656
  %48 = load i32*, i32** %block_pointers62, align 8, !dbg !4656
  %cmp63 = icmp eq i32* %48, null, !dbg !4657
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !4658

if.then65:                                        ; preds = %if.then56
  %49 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4659
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %49, i32 0, i32 0, !dbg !4661
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0)), !dbg !4662
  store i32 -30, i32* %retval, align 4, !dbg !4663
  br label %return, !dbg !4663

if.end66:                                         ; preds = %if.then56
  %50 = load i64, i64* %bpsize, align 8, !dbg !4664
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4665
  %zisofs67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 27, !dbg !4666
  %block_pointers_allocated68 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs67, i32 0, i32 4, !dbg !4667
  store i64 %50, i64* %block_pointers_allocated68, align 8, !dbg !4668
  br label %if.end69, !dbg !4669

if.end69:                                         ; preds = %if.end66, %if.end34
  %52 = load i64, i64* %bpsize, align 8, !dbg !4670
  %add70 = add i64 16, %52, !dbg !4671
  store i64 %add70, i64* %tsize, align 8, !dbg !4672
  %53 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4673
  %54 = load i64, i64* %tsize, align 8, !dbg !4675
  %call71 = call i32 @write_null(%struct.archive_write* %53, i64 %54), !dbg !4676
  %cmp72 = icmp ne i32 %call71, 0, !dbg !4677
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !4678

if.then74:                                        ; preds = %if.end69
  store i32 -30, i32* %retval, align 4, !dbg !4679
  br label %return, !dbg !4679

if.end75:                                         ; preds = %if.end69
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4680
  %zisofs76 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %55, i32 0, i32 27, !dbg !4681
  %block_pointers77 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs76, i32 0, i32 3, !dbg !4682
  %56 = load i32*, i32** %block_pointers77, align 8, !dbg !4682
  %arrayidx = getelementptr inbounds i32, i32* %56, i64 0, !dbg !4680
  %57 = bitcast i32* %arrayidx to i8*, !dbg !4683
  %58 = load i64, i64* %tsize, align 8, !dbg !4684
  %conv78 = trunc i64 %58 to i32, !dbg !4685
  call void @archive_le32enc(i8* %57, i32 %conv78), !dbg !4686
  %59 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !4687
  %zisofs79 = getelementptr inbounds %struct.isofile, %struct.isofile* %59, i32 0, i32 14, !dbg !4688
  %uncompressed_size80 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs79, i32 0, i32 2, !dbg !4689
  %60 = load i32, i32* %uncompressed_size80, align 4, !dbg !4689
  %conv81 = zext i32 %60 to i64, !dbg !4687
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4690
  %zisofs82 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 27, !dbg !4691
  %remaining = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs82, i32 0, i32 11, !dbg !4692
  store i64 %conv81, i64* %remaining, align 8, !dbg !4693
  %62 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4694
  %zisofs83 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %62, i32 0, i32 27, !dbg !4695
  %63 = bitcast %struct.anon.6* %zisofs83 to i8*, !dbg !4696
  %bf.load84 = load i8, i8* %63, align 8, !dbg !4697
  %bf.clear85 = and i8 %bf.load84, -3, !dbg !4697
  %bf.set86 = or i8 %bf.clear85, 2, !dbg !4697
  store i8 %bf.set86, i8* %63, align 8, !dbg !4697
  %64 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4698
  %zisofs87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 27, !dbg !4699
  %65 = bitcast %struct.anon.6* %zisofs87 to i8*, !dbg !4700
  %bf.load88 = load i8, i8* %65, align 8, !dbg !4701
  %bf.clear89 = and i8 %bf.load88, -5, !dbg !4701
  %bf.set90 = or i8 %bf.clear89, 4, !dbg !4701
  store i8 %bf.set90, i8* %65, align 8, !dbg !4701
  %66 = load i64, i64* %tsize, align 8, !dbg !4702
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4703
  %zisofs91 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 27, !dbg !4704
  %block_offset = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs91, i32 0, i32 8, !dbg !4705
  store i64 %66, i64* %block_offset, align 8, !dbg !4706
  %68 = load i64, i64* %tsize, align 8, !dbg !4707
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4708
  %zisofs92 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 27, !dbg !4709
  %total_size = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs92, i32 0, i32 7, !dbg !4710
  store i64 %68, i64* %total_size, align 8, !dbg !4711
  %70 = load i64, i64* %tsize, align 8, !dbg !4712
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4713
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 2, !dbg !4714
  %72 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !4714
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %72, i32 0, i32 11, !dbg !4715
  %73 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !4715
  %size = getelementptr inbounds %struct.content, %struct.content* %73, i32 0, i32 1, !dbg !4716
  store i64 %70, i64* %size, align 8, !dbg !4717
  store i32 0, i32* %retval, align 4, !dbg !4718
  br label %return, !dbg !4718

return:                                           ; preds = %if.end75, %if.then74, %if.then65, %if.then33, %if.then29, %if.then24, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !4719
  ret i32 %74, !dbg !4719
}

declare %struct.archive_entry* @archive_entry_clone(%struct.archive_entry*) #2

declare %struct.archive_entry* @archive_entry_new2(%struct.archive*) #2

declare i8* @archive_entry_pathname(%struct.archive_entry*) #2

declare %struct.archive_string_conv* @archive_string_conversion_to_charset(%struct.archive*, i8*, i32) #2

declare %struct.archive_string_conv* @archive_string_conversion_from_charset(%struct.archive*, i8*, i32) #2

declare i32 @_archive_entry_pathname_l(%struct.archive_entry*, i8**, i64*, %struct.archive_string_conv*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

declare i8* @archive_entry_symlink(%struct.archive_entry*) #2

declare void @archive_string_concat(%struct.archive_string*, %struct.archive_string*) #2

declare void @archive_entry_free(%struct.archive_entry*) #2

declare void @archive_string_free(%struct.archive_string*) #2

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_node(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !596 {
entry:
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %e1 = alloca %struct.isoent*, align 8
  %e2 = alloca %struct.isoent*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !4720, metadata !986), !dbg !4721
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !4722, metadata !986), !dbg !4723
  call void @llvm.dbg.declare(metadata %struct.isoent** %e1, metadata !4724, metadata !986), !dbg !4725
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !4726
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.isoent*, !dbg !4727
  store %struct.isoent* %1, %struct.isoent** %e1, align 8, !dbg !4725
  call void @llvm.dbg.declare(metadata %struct.isoent** %e2, metadata !4728, metadata !986), !dbg !4729
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !4730
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.isoent*, !dbg !4731
  store %struct.isoent* %3, %struct.isoent** %e2, align 8, !dbg !4729
  %4 = load %struct.isoent*, %struct.isoent** %e1, align 8, !dbg !4732
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 1, !dbg !4733
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !4733
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 6, !dbg !4734
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 0, !dbg !4735
  %6 = load i8*, i8** %s, align 8, !dbg !4735
  %7 = load %struct.isoent*, %struct.isoent** %e2, align 8, !dbg !4736
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 1, !dbg !4737
  %8 = load %struct.isofile*, %struct.isofile** %file1, align 8, !dbg !4737
  %basename2 = getelementptr inbounds %struct.isofile, %struct.isofile* %8, i32 0, i32 6, !dbg !4738
  %s3 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename2, i32 0, i32 0, !dbg !4739
  %9 = load i8*, i8** %s3, align 8, !dbg !4739
  %call = call i32 @strcmp(i8* %6, i8* %9) #9, !dbg !4740
  ret i32 %call, !dbg !4741
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_key(%struct.archive_rb_node* %n, i8* %key) #0 !dbg !597 {
entry:
  %n.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  %e = alloca %struct.isoent*, align 8
  store %struct.archive_rb_node* %n, %struct.archive_rb_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n.addr, metadata !4742, metadata !986), !dbg !4743
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4744, metadata !986), !dbg !4745
  call void @llvm.dbg.declare(metadata %struct.isoent** %e, metadata !4746, metadata !986), !dbg !4747
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n.addr, align 8, !dbg !4748
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.isoent*, !dbg !4749
  store %struct.isoent* %1, %struct.isoent** %e, align 8, !dbg !4747
  %2 = load %struct.isoent*, %struct.isoent** %e, align 8, !dbg !4750
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 1, !dbg !4751
  %3 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !4751
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %3, i32 0, i32 6, !dbg !4752
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 0, !dbg !4753
  %4 = load i8*, i8** %s, align 8, !dbg !4753
  %5 = load i8*, i8** %key.addr, align 8, !dbg !4754
  %call = call i32 @strcmp(i8* %4, i8* %5) #9, !dbg !4755
  ret i32 %call, !dbg !4756
}

declare void @__archive_rb_tree_init(%struct.archive_rb_tree*, %struct.archive_rb_tree_ops*) #2

; Function Attrs: nounwind uwtable
define internal i32 @isoent_add_child_tail(%struct.isoent* %parent, %struct.isoent* %child) #0 !dbg !601 {
entry:
  %retval = alloca i32, align 4
  %parent.addr = alloca %struct.isoent*, align 8
  %child.addr = alloca %struct.isoent*, align 8
  store %struct.isoent* %parent, %struct.isoent** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %parent.addr, metadata !4757, metadata !986), !dbg !4758
  store %struct.isoent* %child, %struct.isoent** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %child.addr, metadata !4759, metadata !986), !dbg !4760
  %0 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4761
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 4, !dbg !4763
  %1 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4764
  %2 = bitcast %struct.isoent* %1 to %struct.archive_rb_node*, !dbg !4765
  %call = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* %2), !dbg !4766
  %tobool = icmp ne i32 %call, 0, !dbg !4766
  br i1 %tobool, label %if.end, label %if.then, !dbg !4767

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4768
  br label %return, !dbg !4768

if.end:                                           ; preds = %entry
  %3 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4769
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 7, !dbg !4770
  store %struct.isoent* null, %struct.isoent** %chnext, align 8, !dbg !4771
  %4 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4772
  %5 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4773
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 3, !dbg !4774
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 1, !dbg !4775
  %6 = load %struct.isoent**, %struct.isoent*** %last, align 8, !dbg !4775
  store %struct.isoent* %4, %struct.isoent** %6, align 8, !dbg !4776
  %7 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4777
  %chnext1 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 7, !dbg !4778
  %8 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4779
  %children2 = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 3, !dbg !4780
  %last3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children2, i32 0, i32 1, !dbg !4781
  store %struct.isoent** %chnext1, %struct.isoent*** %last3, align 8, !dbg !4782
  %9 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4783
  %children4 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 3, !dbg !4784
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children4, i32 0, i32 2, !dbg !4785
  %10 = load i32, i32* %cnt, align 8, !dbg !4786
  %inc = add nsw i32 %10, 1, !dbg !4786
  store i32 %inc, i32* %cnt, align 8, !dbg !4786
  %11 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4787
  %12 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4788
  %parent5 = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 2, !dbg !4789
  store %struct.isoent* %11, %struct.isoent** %parent5, align 8, !dbg !4790
  %13 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4791
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 8, !dbg !4792
  store %struct.isoent* null, %struct.isoent** %drnext, align 8, !dbg !4793
  %14 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4794
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 22, !dbg !4796
  %bf.load = load i8, i8* %dir, align 8, !dbg !4796
  %bf.shl = shl i8 %bf.load, 6, !dbg !4796
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !4796
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !4796
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !4794
  br i1 %tobool6, label %if.then7, label %if.end16, !dbg !4797

if.then7:                                         ; preds = %if.end
  %15 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4798
  %16 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4800
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 5, !dbg !4801
  %last8 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 1, !dbg !4802
  %17 = load %struct.isoent**, %struct.isoent*** %last8, align 8, !dbg !4802
  store %struct.isoent* %15, %struct.isoent** %17, align 8, !dbg !4803
  %18 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4804
  %drnext9 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 8, !dbg !4805
  %19 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4806
  %subdirs10 = getelementptr inbounds %struct.isoent, %struct.isoent* %19, i32 0, i32 5, !dbg !4807
  %last11 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs10, i32 0, i32 1, !dbg !4808
  store %struct.isoent** %drnext9, %struct.isoent*** %last11, align 8, !dbg !4809
  %20 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4810
  %subdirs12 = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 5, !dbg !4811
  %cnt13 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs12, i32 0, i32 2, !dbg !4812
  %21 = load i32, i32* %cnt13, align 8, !dbg !4813
  %inc14 = add nsw i32 %21, 1, !dbg !4813
  store i32 %inc14, i32* %cnt13, align 8, !dbg !4813
  %22 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !4814
  %23 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !4815
  %parent15 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 2, !dbg !4816
  store %struct.isoent* %22, %struct.isoent** %parent15, align 8, !dbg !4817
  br label %if.end16, !dbg !4818

if.end16:                                         ; preds = %if.then7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !4819
  br label %return, !dbg !4819

return:                                           ; preds = %if.end16, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !4820
  ret i32 %24, !dbg !4820
}

declare %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @get_path_component(i8* %name, i64 %n, i8* %fn) #0 !dbg !604 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %fn.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %l = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4821, metadata !986), !dbg !4822
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !4823, metadata !986), !dbg !4824
  store i8* %fn, i8** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn.addr, metadata !4825, metadata !986), !dbg !4826
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4827, metadata !986), !dbg !4828
  call void @llvm.dbg.declare(metadata i64* %l, metadata !4829, metadata !986), !dbg !4830
  %0 = load i8*, i8** %fn.addr, align 8, !dbg !4831
  %call = call i8* @strchr(i8* %0, i32 47) #9, !dbg !4832
  store i8* %call, i8** %p, align 8, !dbg !4833
  %1 = load i8*, i8** %p, align 8, !dbg !4834
  %cmp = icmp eq i8* %1, null, !dbg !4836
  br i1 %cmp, label %if.then, label %if.else, !dbg !4837

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %fn.addr, align 8, !dbg !4838
  %call1 = call i64 @strlen(i8* %2) #9, !dbg !4841
  store i64 %call1, i64* %l, align 8, !dbg !4842
  %cmp2 = icmp eq i64 %call1, 0, !dbg !4843
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4844

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !4846

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %p, align 8, !dbg !4847
  %4 = load i8*, i8** %fn.addr, align 8, !dbg !4848
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !4849
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4849
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4849
  store i64 %sub.ptr.sub, i64* %l, align 8, !dbg !4850
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %5 = load i64, i64* %l, align 8, !dbg !4851
  %6 = load i64, i64* %n.addr, align 8, !dbg !4853
  %sub = sub i64 %6, 1, !dbg !4854
  %cmp5 = icmp ugt i64 %5, %sub, !dbg !4855
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4856

if.then6:                                         ; preds = %if.end4
  store i32 -1, i32* %retval, align 4, !dbg !4857
  br label %return, !dbg !4857

if.end7:                                          ; preds = %if.end4
  %7 = load i8*, i8** %name.addr, align 8, !dbg !4858
  %8 = load i8*, i8** %fn.addr, align 8, !dbg !4859
  %9 = load i64, i64* %l, align 8, !dbg !4860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 %9, i32 1, i1 false), !dbg !4861
  %10 = load i64, i64* %l, align 8, !dbg !4862
  %11 = load i8*, i8** %name.addr, align 8, !dbg !4863
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !4863
  store i8 0, i8* %arrayidx, align 1, !dbg !4864
  %12 = load i64, i64* %l, align 8, !dbg !4865
  %conv = trunc i64 %12 to i32, !dbg !4866
  store i32 %conv, i32* %retval, align 4, !dbg !4867
  br label %return, !dbg !4867

return:                                           ; preds = %if.end7, %if.then6, %if.then3
  %13 = load i32, i32* %retval, align 4, !dbg !4868
  ret i32 %13, !dbg !4868
}

; Function Attrs: nounwind uwtable
define internal void @_isoent_free(%struct.isoent* %isoent) #0 !dbg !607 {
entry:
  %isoent.addr = alloca %struct.isoent*, align 8
  %er = alloca %struct.extr_rec*, align 8
  %er_next = alloca %struct.extr_rec*, align 8
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !4869, metadata !986), !dbg !4870
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %er, metadata !4871, metadata !986), !dbg !4872
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %er_next, metadata !4873, metadata !986), !dbg !4874
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !4875
  %children_sorted = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 6, !dbg !4876
  %1 = load %struct.isoent**, %struct.isoent*** %children_sorted, align 8, !dbg !4876
  %2 = bitcast %struct.isoent** %1 to i8*, !dbg !4875
  call void @free(i8* %2) #8, !dbg !4877
  %3 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !4878
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 14, !dbg !4879
  %4 = load i8*, i8** %identifier, align 8, !dbg !4879
  call void @free(i8* %4) #8, !dbg !4880
  %5 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !4881
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 21, !dbg !4882
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 0, !dbg !4883
  %6 = load %struct.extr_rec*, %struct.extr_rec** %first, align 8, !dbg !4883
  store %struct.extr_rec* %6, %struct.extr_rec** %er, align 8, !dbg !4884
  br label %while.cond, !dbg !4885

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.extr_rec*, %struct.extr_rec** %er, align 8, !dbg !4886
  %cmp = icmp ne %struct.extr_rec* %7, null, !dbg !4888
  br i1 %cmp, label %while.body, label %while.end, !dbg !4889

while.body:                                       ; preds = %while.cond
  %8 = load %struct.extr_rec*, %struct.extr_rec** %er, align 8, !dbg !4890
  %next = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %8, i32 0, i32 3, !dbg !4892
  %9 = load %struct.extr_rec*, %struct.extr_rec** %next, align 8, !dbg !4892
  store %struct.extr_rec* %9, %struct.extr_rec** %er_next, align 8, !dbg !4893
  %10 = load %struct.extr_rec*, %struct.extr_rec** %er, align 8, !dbg !4894
  %11 = bitcast %struct.extr_rec* %10 to i8*, !dbg !4894
  call void @free(i8* %11) #8, !dbg !4895
  %12 = load %struct.extr_rec*, %struct.extr_rec** %er_next, align 8, !dbg !4896
  store %struct.extr_rec* %12, %struct.extr_rec** %er, align 8, !dbg !4897
  br label %while.cond, !dbg !4898

while.end:                                        ; preds = %while.cond
  %13 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !4900
  %14 = bitcast %struct.isoent* %13 to i8*, !dbg !4900
  call void @free(i8* %14) #8, !dbg !4901
  ret void, !dbg !4902
}

; Function Attrs: nounwind uwtable
define internal %struct.isoent* @isoent_find_child(%struct.isoent* %isoent, i8* %child_name) #0 !dbg !610 {
entry:
  %isoent.addr = alloca %struct.isoent*, align 8
  %child_name.addr = alloca i8*, align 8
  %np = alloca %struct.isoent*, align 8
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !4903, metadata !986), !dbg !4904
  store i8* %child_name, i8** %child_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %child_name.addr, metadata !4905, metadata !986), !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !4907, metadata !986), !dbg !4908
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !4909
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 4, !dbg !4910
  %1 = load i8*, i8** %child_name.addr, align 8, !dbg !4911
  %call = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %rbtree, i8* %1), !dbg !4912
  %2 = bitcast %struct.archive_rb_node* %call to %struct.isoent*, !dbg !4913
  store %struct.isoent* %2, %struct.isoent** %np, align 8, !dbg !4914
  %3 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !4915
  ret %struct.isoent* %3, !dbg !4916
}

declare %struct.archive_string* @archive_strappend_char(%struct.archive_string*, i8 signext) #2

declare i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree*, %struct.archive_rb_node*) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

declare void @archive_entry_set_nlink(%struct.archive_entry*, i32) #2

declare i8* @archive_entry_hardlink(%struct.archive_entry*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare void @archive_entry_unset_size(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_init_zstream(%struct.archive_write* %a) #0 !dbg !615 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !4917, metadata !986), !dbg !4918
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !4919, metadata !986), !dbg !4920
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4921
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !4922
  %1 = load i8*, i8** %format_data, align 8, !dbg !4922
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !4921
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4923, metadata !986), !dbg !4924
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4925
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 27, !dbg !4926
  %stream = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 9, !dbg !4927
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream, i32 0, i32 0, !dbg !4928
  store i8* null, i8** %next_in, align 8, !dbg !4929
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4930
  %zisofs1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 27, !dbg !4931
  %stream2 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs1, i32 0, i32 9, !dbg !4932
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream2, i32 0, i32 1, !dbg !4933
  store i32 0, i32* %avail_in, align 8, !dbg !4934
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4935
  %zisofs3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 27, !dbg !4936
  %stream4 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs3, i32 0, i32 9, !dbg !4937
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream4, i32 0, i32 2, !dbg !4938
  store i64 0, i64* %total_in, align 8, !dbg !4939
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4940
  %zisofs5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 27, !dbg !4941
  %stream6 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs5, i32 0, i32 9, !dbg !4942
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream6, i32 0, i32 5, !dbg !4943
  store i64 0, i64* %total_out, align 8, !dbg !4944
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4945
  %zisofs7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 27, !dbg !4947
  %stream_valid = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs7, i32 0, i32 10, !dbg !4948
  %8 = load i32, i32* %stream_valid, align 8, !dbg !4948
  %tobool = icmp ne i32 %8, 0, !dbg !4945
  br i1 %tobool, label %if.then, label %if.else, !dbg !4949

if.then:                                          ; preds = %entry
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4950
  %zisofs8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 27, !dbg !4951
  %stream9 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs8, i32 0, i32 9, !dbg !4952
  %call = call i32 @cm_zlib_deflateReset(%struct.z_stream_s* %stream9), !dbg !4953
  store i32 %call, i32* %r, align 4, !dbg !4954
  br label %if.end, !dbg !4955

if.else:                                          ; preds = %entry
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4956
  %zisofs10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 27, !dbg !4956
  %stream11 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs10, i32 0, i32 9, !dbg !4956
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4956
  %zisofs12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 27, !dbg !4956
  %compression_level = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs12, i32 0, i32 12, !dbg !4956
  %12 = load i32, i32* %compression_level, align 8, !dbg !4956
  %call13 = call i32 @cm_zlib_deflateInit_(%struct.z_stream_s* %stream11, i32 %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 112), !dbg !4956
  store i32 %call13, i32* %r, align 4, !dbg !4958
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !4959
  %zisofs14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 27, !dbg !4960
  %stream_valid15 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs14, i32 0, i32 10, !dbg !4961
  store i32 1, i32* %stream_valid15, align 8, !dbg !4962
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %r, align 4, !dbg !4963
  switch i32 %14, label %sw.default [
    i32 0, label %sw.bb
    i32 -2, label %sw.bb16
    i32 -4, label %sw.bb17
    i32 -6, label %sw.bb19
  ], !dbg !4964

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !4965

sw.default:                                       ; preds = %if.end
  br label %sw.bb16, !dbg !4967

sw.bb16:                                          ; preds = %if.end, %sw.default
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4969
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %15, i32 0, i32 0, !dbg !4970
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.54, i32 0, i32 0)), !dbg !4971
  store i32 -30, i32* %retval, align 4, !dbg !4972
  br label %return, !dbg !4972

sw.bb17:                                          ; preds = %if.end
  %16 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4973
  %archive18 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %16, i32 0, i32 0, !dbg !4974
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive18, i32 12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.55, i32 0, i32 0)), !dbg !4975
  store i32 -30, i32* %retval, align 4, !dbg !4976
  br label %return, !dbg !4976

sw.bb19:                                          ; preds = %if.end
  %17 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4977
  %archive20 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %17, i32 0, i32 0, !dbg !4978
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive20, i32 -1, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.56, i32 0, i32 0)), !dbg !4979
  store i32 -30, i32* %retval, align 4, !dbg !4980
  br label %return, !dbg !4980

sw.epilog:                                        ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !4981
  br label %return, !dbg !4981

return:                                           ; preds = %sw.epilog, %sw.bb19, %sw.bb17, %sw.bb16
  %18 = load i32, i32* %retval, align 4, !dbg !4982
  ret i32 %18, !dbg !4982
}

; Function Attrs: nounwind uwtable
define internal i32 @write_null(%struct.archive_write* %a, i64 %size) #0 !dbg !616 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %size.addr = alloca i64, align 8
  %remaining = alloca i64, align 8
  %p = alloca i8*, align 8
  %old = alloca i8*, align 8
  %r = alloca i32, align 4
  %wsize = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !4983, metadata !986), !dbg !4984
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4985, metadata !986), !dbg !4986
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !4987, metadata !986), !dbg !4988
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4989, metadata !986), !dbg !4990
  call void @llvm.dbg.declare(metadata i8** %old, metadata !4991, metadata !986), !dbg !4992
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4993, metadata !986), !dbg !4994
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4995
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !4995
  %1 = load i8*, i8** %format_data, align 8, !dbg !4995
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !4995
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 31, !dbg !4995
  %3 = load i64, i64* %wbuff_remaining, align 8, !dbg !4995
  store i64 %3, i64* %remaining, align 8, !dbg !4996
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !4997
  %call = call i8* @wb_buffptr(%struct.archive_write* %4), !dbg !4998
  store i8* %call, i8** %p, align 8, !dbg !4999
  %5 = load i64, i64* %size.addr, align 8, !dbg !5000
  %6 = load i64, i64* %remaining, align 8, !dbg !5002
  %cmp = icmp ule i64 %5, %6, !dbg !5003
  br i1 %cmp, label %if.then, label %if.end, !dbg !5004

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %p, align 8, !dbg !5005
  %8 = load i64, i64* %size.addr, align 8, !dbg !5007
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 %8, i32 1, i1 false), !dbg !5008
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5009
  %10 = load i64, i64* %size.addr, align 8, !dbg !5010
  %call1 = call i32 @wb_consume(%struct.archive_write* %9, i64 %10), !dbg !5011
  store i32 %call1, i32* %retval, align 4, !dbg !5012
  br label %return, !dbg !5012

if.end:                                           ; preds = %entry
  %11 = load i8*, i8** %p, align 8, !dbg !5013
  %12 = load i64, i64* %remaining, align 8, !dbg !5014
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %12, i32 1, i1 false), !dbg !5015
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5016
  %14 = load i64, i64* %remaining, align 8, !dbg !5017
  %call2 = call i32 @wb_consume(%struct.archive_write* %13, i64 %14), !dbg !5018
  store i32 %call2, i32* %r, align 4, !dbg !5019
  %15 = load i32, i32* %r, align 4, !dbg !5020
  %cmp3 = icmp ne i32 %15, 0, !dbg !5022
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5023

if.then4:                                         ; preds = %if.end
  %16 = load i32, i32* %r, align 4, !dbg !5024
  store i32 %16, i32* %retval, align 4, !dbg !5025
  br label %return, !dbg !5025

if.end5:                                          ; preds = %if.end
  %17 = load i64, i64* %remaining, align 8, !dbg !5026
  %18 = load i64, i64* %size.addr, align 8, !dbg !5027
  %sub = sub i64 %18, %17, !dbg !5027
  store i64 %sub, i64* %size.addr, align 8, !dbg !5027
  %19 = load i8*, i8** %p, align 8, !dbg !5028
  store i8* %19, i8** %old, align 8, !dbg !5029
  %20 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5030
  %call6 = call i8* @wb_buffptr(%struct.archive_write* %20), !dbg !5031
  store i8* %call6, i8** %p, align 8, !dbg !5032
  %21 = load i8*, i8** %p, align 8, !dbg !5033
  %22 = load i8*, i8** %old, align 8, !dbg !5034
  %23 = load i8*, i8** %p, align 8, !dbg !5035
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64, !dbg !5036
  %sub.ptr.rhs.cast = ptrtoint i8* %23 to i64, !dbg !5036
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5036
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 %sub.ptr.sub, i32 1, i1 false), !dbg !5037
  %24 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5038
  %format_data7 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %24, i32 0, i32 14, !dbg !5038
  %25 = load i8*, i8** %format_data7, align 8, !dbg !5038
  %26 = bitcast i8* %25 to %struct.iso9660*, !dbg !5038
  %wbuff_remaining8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 31, !dbg !5038
  %27 = load i64, i64* %wbuff_remaining8, align 8, !dbg !5038
  store i64 %27, i64* %remaining, align 8, !dbg !5039
  br label %while.cond, !dbg !5040

while.cond:                                       ; preds = %if.end15, %if.end5
  %28 = load i64, i64* %size.addr, align 8, !dbg !5041
  %tobool = icmp ne i64 %28, 0, !dbg !5043
  br i1 %tobool, label %while.body, label %while.end, !dbg !5043

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %wsize, metadata !5044, metadata !986), !dbg !5046
  %29 = load i64, i64* %size.addr, align 8, !dbg !5047
  store i64 %29, i64* %wsize, align 8, !dbg !5046
  %30 = load i64, i64* %wsize, align 8, !dbg !5048
  %31 = load i64, i64* %remaining, align 8, !dbg !5050
  %cmp9 = icmp ugt i64 %30, %31, !dbg !5051
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5052

if.then10:                                        ; preds = %while.body
  %32 = load i64, i64* %remaining, align 8, !dbg !5053
  store i64 %32, i64* %wsize, align 8, !dbg !5054
  br label %if.end11, !dbg !5055

if.end11:                                         ; preds = %if.then10, %while.body
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5056
  %34 = load i64, i64* %wsize, align 8, !dbg !5057
  %call12 = call i32 @wb_consume(%struct.archive_write* %33, i64 %34), !dbg !5058
  store i32 %call12, i32* %r, align 4, !dbg !5059
  %35 = load i32, i32* %r, align 4, !dbg !5060
  %cmp13 = icmp ne i32 %35, 0, !dbg !5062
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5063

if.then14:                                        ; preds = %if.end11
  %36 = load i32, i32* %r, align 4, !dbg !5064
  store i32 %36, i32* %retval, align 4, !dbg !5065
  br label %return, !dbg !5065

if.end15:                                         ; preds = %if.end11
  %37 = load i64, i64* %wsize, align 8, !dbg !5066
  %38 = load i64, i64* %size.addr, align 8, !dbg !5067
  %sub16 = sub i64 %38, %37, !dbg !5067
  store i64 %sub16, i64* %size.addr, align 8, !dbg !5067
  br label %while.cond, !dbg !5068

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5070
  br label %return, !dbg !5070

return:                                           ; preds = %while.end, %if.then14, %if.then4, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !5071
  ret i32 %39, !dbg !5071
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_le32enc(i8* %pp, i32 %u) #7 !dbg !627 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !5072, metadata !986), !dbg !5073
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !5074, metadata !986), !dbg !5075
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5076, metadata !986), !dbg !5077
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !5078
  store i8* %0, i8** %p, align 8, !dbg !5077
  %1 = load i32, i32* %u.addr, align 4, !dbg !5079
  %and = and i32 %1, 255, !dbg !5080
  %conv = trunc i32 %and to i8, !dbg !5079
  %2 = load i8*, i8** %p, align 8, !dbg !5081
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !5081
  store i8 %conv, i8* %arrayidx, align 1, !dbg !5082
  %3 = load i32, i32* %u.addr, align 4, !dbg !5083
  %shr = lshr i32 %3, 8, !dbg !5084
  %and1 = and i32 %shr, 255, !dbg !5085
  %conv2 = trunc i32 %and1 to i8, !dbg !5086
  %4 = load i8*, i8** %p, align 8, !dbg !5087
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5087
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !5088
  %5 = load i32, i32* %u.addr, align 4, !dbg !5089
  %shr4 = lshr i32 %5, 16, !dbg !5090
  %and5 = and i32 %shr4, 255, !dbg !5091
  %conv6 = trunc i32 %and5 to i8, !dbg !5092
  %6 = load i8*, i8** %p, align 8, !dbg !5093
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5093
  store i8 %conv6, i8* %arrayidx7, align 1, !dbg !5094
  %7 = load i32, i32* %u.addr, align 4, !dbg !5095
  %shr8 = lshr i32 %7, 24, !dbg !5096
  %and9 = and i32 %shr8, 255, !dbg !5097
  %conv10 = trunc i32 %and9 to i8, !dbg !5098
  %8 = load i8*, i8** %p, align 8, !dbg !5099
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !5099
  store i8 %conv10, i8* %arrayidx11, align 1, !dbg !5100
  ret void, !dbg !5101
}

declare i32 @cm_zlib_deflateReset(%struct.z_stream_s*) #2

declare i32 @cm_zlib_deflateInit_(%struct.z_stream_s*, i32, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @wb_buffptr(%struct.archive_write* %a) #7 !dbg !619 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5102, metadata !986), !dbg !5103
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5104, metadata !986), !dbg !5105
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5106
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5107
  %1 = load i8*, i8** %format_data, align 8, !dbg !5107
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5108
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5105
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5109
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 31, !dbg !5110
  %4 = load i64, i64* %wbuff_remaining, align 8, !dbg !5110
  %sub = sub i64 65536, %4, !dbg !5111
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5112
  %wbuff = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 30, !dbg !5113
  %arrayidx = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff, i64 0, i64 %sub, !dbg !5112
  ret i8* %arrayidx, !dbg !5114
}

; Function Attrs: nounwind uwtable
define internal i32 @wb_consume(%struct.archive_write* %a, i64 %size) #0 !dbg !622 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %size.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5115, metadata !986), !dbg !5116
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5117, metadata !986), !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5119, metadata !986), !dbg !5120
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5121
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5122
  %1 = load i8*, i8** %format_data, align 8, !dbg !5122
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5123
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5120
  %3 = load i64, i64* %size.addr, align 8, !dbg !5124
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5126
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 31, !dbg !5127
  %5 = load i64, i64* %wbuff_remaining, align 8, !dbg !5127
  %cmp = icmp ugt i64 %3, %5, !dbg !5128
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5129

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5130
  %wbuff_remaining1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 31, !dbg !5131
  %7 = load i64, i64* %wbuff_remaining1, align 8, !dbg !5131
  %cmp2 = icmp eq i64 %7, 0, !dbg !5132
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5133

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5135
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %8, i32 0, i32 0, !dbg !5137
  %9 = load i64, i64* %size.addr, align 8, !dbg !5138
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5139
  %wbuff_remaining3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 31, !dbg !5140
  %11 = load i64, i64* %wbuff_remaining3, align 8, !dbg !5140
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.57, i32 0, i32 0), i64 %9, i64 %11), !dbg !5141
  store i32 -30, i32* %retval, align 4, !dbg !5142
  br label %return, !dbg !5142

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i64, i64* %size.addr, align 8, !dbg !5143
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5144
  %wbuff_remaining4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 31, !dbg !5145
  %14 = load i64, i64* %wbuff_remaining4, align 8, !dbg !5146
  %sub = sub i64 %14, %12, !dbg !5146
  store i64 %sub, i64* %wbuff_remaining4, align 8, !dbg !5146
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5147
  %wbuff_remaining5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 31, !dbg !5149
  %16 = load i64, i64* %wbuff_remaining5, align 8, !dbg !5149
  %cmp6 = icmp ult i64 %16, 2048, !dbg !5150
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5151

if.then7:                                         ; preds = %if.end
  %17 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5152
  %call = call i32 @wb_write_out(%struct.archive_write* %17), !dbg !5153
  store i32 %call, i32* %retval, align 4, !dbg !5154
  br label %return, !dbg !5154

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5155
  br label %return, !dbg !5155

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !5156
  ret i32 %18, !dbg !5156
}

; Function Attrs: nounwind uwtable
define internal i32 @wb_write_out(%struct.archive_write* %a) #0 !dbg !623 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %wsize = alloca i64, align 8
  %nw = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5157, metadata !986), !dbg !5158
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5159, metadata !986), !dbg !5160
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5161
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5162
  %1 = load i8*, i8** %format_data, align 8, !dbg !5162
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5163
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5160
  call void @llvm.dbg.declare(metadata i64* %wsize, metadata !5164, metadata !986), !dbg !5165
  call void @llvm.dbg.declare(metadata i64* %nw, metadata !5166, metadata !986), !dbg !5167
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5168, metadata !986), !dbg !5169
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5170
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 31, !dbg !5171
  %4 = load i64, i64* %wbuff_remaining, align 8, !dbg !5171
  %sub = sub i64 65536, %4, !dbg !5172
  store i64 %sub, i64* %wsize, align 8, !dbg !5173
  %5 = load i64, i64* %wsize, align 8, !dbg !5174
  %rem = urem i64 %5, 2048, !dbg !5175
  store i64 %rem, i64* %nw, align 8, !dbg !5176
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5177
  %wbuff_type = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 32, !dbg !5179
  %7 = load i32, i32* %wbuff_type, align 8, !dbg !5179
  %cmp = icmp eq i32 %7, 0, !dbg !5180
  br i1 %cmp, label %if.then, label %if.else, !dbg !5181

if.then:                                          ; preds = %entry
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5182
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5183
  %wbuff = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 30, !dbg !5184
  %arraydecay = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff, i32 0, i32 0, !dbg !5183
  %10 = load i64, i64* %wsize, align 8, !dbg !5185
  %11 = load i64, i64* %nw, align 8, !dbg !5186
  %sub1 = sub i64 %10, %11, !dbg !5187
  %call = call i32 @__archive_write_output(%struct.archive_write* %8, i8* %arraydecay, i64 %sub1), !dbg !5188
  store i32 %call, i32* %r, align 4, !dbg !5189
  br label %if.end, !dbg !5190

if.else:                                          ; preds = %entry
  %12 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5191
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5192
  %wbuff2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 30, !dbg !5193
  %arraydecay3 = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff2, i32 0, i32 0, !dbg !5192
  %14 = load i64, i64* %wsize, align 8, !dbg !5194
  %15 = load i64, i64* %nw, align 8, !dbg !5195
  %sub4 = sub i64 %14, %15, !dbg !5196
  %call5 = call i32 @write_to_temp(%struct.archive_write* %12, i8* %arraydecay3, i64 %sub4), !dbg !5197
  store i32 %call5, i32* %r, align 4, !dbg !5198
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i64, i64* %wsize, align 8, !dbg !5199
  %17 = load i64, i64* %nw, align 8, !dbg !5200
  %sub6 = sub i64 %16, %17, !dbg !5201
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5202
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 33, !dbg !5203
  %19 = load i64, i64* %wbuff_offset, align 8, !dbg !5204
  %add = add i64 %19, %sub6, !dbg !5204
  store i64 %add, i64* %wbuff_offset, align 8, !dbg !5204
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5205
  %wbuff_offset7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 33, !dbg !5207
  %21 = load i64, i64* %wbuff_offset7, align 8, !dbg !5207
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5208
  %wbuff_written = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 34, !dbg !5209
  %23 = load i64, i64* %wbuff_written, align 8, !dbg !5209
  %cmp8 = icmp sgt i64 %21, %23, !dbg !5210
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !5211

if.then9:                                         ; preds = %if.end
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5212
  %wbuff_offset10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 33, !dbg !5213
  %25 = load i64, i64* %wbuff_offset10, align 8, !dbg !5213
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5214
  %wbuff_written11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 34, !dbg !5215
  store i64 %25, i64* %wbuff_written11, align 8, !dbg !5216
  br label %if.end12, !dbg !5214

if.end12:                                         ; preds = %if.then9, %if.end
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5217
  %wbuff_remaining13 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 31, !dbg !5218
  store i64 65536, i64* %wbuff_remaining13, align 8, !dbg !5219
  %28 = load i64, i64* %nw, align 8, !dbg !5220
  %tobool = icmp ne i64 %28, 0, !dbg !5220
  br i1 %tobool, label %if.then14, label %if.end22, !dbg !5222

if.then14:                                        ; preds = %if.end12
  %29 = load i64, i64* %nw, align 8, !dbg !5223
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5225
  %wbuff_remaining15 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 31, !dbg !5226
  %31 = load i64, i64* %wbuff_remaining15, align 8, !dbg !5227
  %sub16 = sub i64 %31, %29, !dbg !5227
  store i64 %sub16, i64* %wbuff_remaining15, align 8, !dbg !5227
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5228
  %wbuff17 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 30, !dbg !5229
  %arraydecay18 = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff17, i32 0, i32 0, !dbg !5230
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5231
  %wbuff19 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 30, !dbg !5232
  %arraydecay20 = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff19, i32 0, i32 0, !dbg !5231
  %34 = load i64, i64* %wsize, align 8, !dbg !5233
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay20, i64 %34, !dbg !5234
  %35 = load i64, i64* %nw, align 8, !dbg !5235
  %idx.neg = sub i64 0, %35, !dbg !5236
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !5236
  %36 = load i64, i64* %nw, align 8, !dbg !5237
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %arraydecay18, i8* %add.ptr21, i64 %36, i32 1, i1 false), !dbg !5230
  br label %if.end22, !dbg !5238

if.end22:                                         ; preds = %if.then14, %if.end12
  %37 = load i32, i32* %r, align 4, !dbg !5239
  ret i32 %37, !dbg !5240
}

declare i32 @__archive_write_output(%struct.archive_write*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @write_to_temp(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !624 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %written = alloca i64, align 8
  %b = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5241, metadata !986), !dbg !5242
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !5243, metadata !986), !dbg !5244
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5245, metadata !986), !dbg !5246
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5247, metadata !986), !dbg !5248
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5249
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5250
  %1 = load i8*, i8** %format_data, align 8, !dbg !5250
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5249
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5248
  call void @llvm.dbg.declare(metadata i64* %written, metadata !5251, metadata !986), !dbg !5252
  call void @llvm.dbg.declare(metadata i8** %b, metadata !5253, metadata !986), !dbg !5254
  %3 = load i8*, i8** %buff.addr, align 8, !dbg !5255
  store i8* %3, i8** %b, align 8, !dbg !5256
  br label %while.cond, !dbg !5257

while.cond:                                       ; preds = %if.end, %entry
  %4 = load i64, i64* %s.addr, align 8, !dbg !5258
  %tobool = icmp ne i64 %4, 0, !dbg !5260
  br i1 %tobool, label %while.body, label %while.end, !dbg !5260

while.body:                                       ; preds = %while.cond
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5261
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 1, !dbg !5263
  %6 = load i32, i32* %temp_fd, align 8, !dbg !5263
  %7 = load i8*, i8** %b, align 8, !dbg !5264
  %8 = load i64, i64* %s.addr, align 8, !dbg !5265
  %call = call i64 @write(i32 %6, i8* %7, i64 %8), !dbg !5266
  store i64 %call, i64* %written, align 8, !dbg !5267
  %9 = load i64, i64* %written, align 8, !dbg !5268
  %cmp = icmp slt i64 %9, 0, !dbg !5270
  br i1 %cmp, label %if.then, label %if.end, !dbg !5271

if.then:                                          ; preds = %while.body
  %10 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5272
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %10, i32 0, i32 0, !dbg !5274
  %call1 = call i32* @__errno_location() #1, !dbg !5275
  %11 = load i32, i32* %call1, align 4, !dbg !5275
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 %11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i32 0, i32 0)), !dbg !5276
  store i32 -30, i32* %retval, align 4, !dbg !5278
  br label %return, !dbg !5278

if.end:                                           ; preds = %while.body
  %12 = load i64, i64* %written, align 8, !dbg !5279
  %13 = load i64, i64* %s.addr, align 8, !dbg !5280
  %sub = sub i64 %13, %12, !dbg !5280
  store i64 %sub, i64* %s.addr, align 8, !dbg !5280
  %14 = load i64, i64* %written, align 8, !dbg !5281
  %15 = load i8*, i8** %b, align 8, !dbg !5282
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %14, !dbg !5282
  store i8* %add.ptr, i8** %b, align 8, !dbg !5282
  br label %while.cond, !dbg !5283

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5285
  br label %return, !dbg !5285

return:                                           ; preds = %while.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5286
  ret i32 %16, !dbg !5286
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i64 @write_iso9660_data(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !632 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %ws = alloca i64, align 8
  %con = alloca %struct.content*, align 8
  %ts = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5287, metadata !986), !dbg !5288
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !5289, metadata !986), !dbg !5290
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5291, metadata !986), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5293, metadata !986), !dbg !5294
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5295
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5296
  %1 = load i8*, i8** %format_data, align 8, !dbg !5296
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5295
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5294
  call void @llvm.dbg.declare(metadata i64* %ws, metadata !5297, metadata !986), !dbg !5298
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5299
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 1, !dbg !5301
  %4 = load i32, i32* %temp_fd, align 8, !dbg !5301
  %cmp = icmp slt i32 %4, 0, !dbg !5302
  br i1 %cmp, label %if.then, label %if.end, !dbg !5303

if.then:                                          ; preds = %entry
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5304
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %5, i32 0, i32 0, !dbg !5306
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0)), !dbg !5307
  store i64 -30, i64* %retval, align 8, !dbg !5308
  br label %return, !dbg !5308

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %s.addr, align 8, !dbg !5309
  store i64 %6, i64* %ws, align 8, !dbg !5310
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5311
  %need_multi_extent = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 6, !dbg !5313
  %8 = load i32, i32* %need_multi_extent, align 8, !dbg !5313
  %tobool = icmp ne i32 %8, 0, !dbg !5311
  br i1 %tobool, label %land.lhs.true, label %if.end58, !dbg !5314

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5315
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 2, !dbg !5316
  %10 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !5316
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %10, i32 0, i32 11, !dbg !5317
  %11 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !5317
  %size = getelementptr inbounds %struct.content, %struct.content* %11, i32 0, i32 1, !dbg !5318
  %12 = load i64, i64* %size, align 8, !dbg !5318
  %13 = load i64, i64* %ws, align 8, !dbg !5319
  %add = add i64 %12, %13, !dbg !5320
  %cmp1 = icmp uge i64 %add, 4294965248, !dbg !5321
  br i1 %cmp1, label %if.then2, label %if.end58, !dbg !5322

if.then2:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.content** %con, metadata !5324, metadata !986), !dbg !5326
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !5327, metadata !986), !dbg !5328
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5329
  %cur_file3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 2, !dbg !5330
  %15 = load %struct.isofile*, %struct.isofile** %cur_file3, align 8, !dbg !5330
  %cur_content4 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 11, !dbg !5331
  %16 = load %struct.content*, %struct.content** %cur_content4, align 8, !dbg !5331
  %size5 = getelementptr inbounds %struct.content, %struct.content* %16, i32 0, i32 1, !dbg !5332
  %17 = load i64, i64* %size5, align 8, !dbg !5332
  %sub = sub nsw i64 4294965248, %17, !dbg !5333
  store i64 %sub, i64* %ts, align 8, !dbg !5334
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5335
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 27, !dbg !5337
  %19 = bitcast %struct.anon.6* %zisofs to i8*, !dbg !5338
  %bf.load = load i8, i8* %19, align 8, !dbg !5338
  %bf.shl = shl i8 %bf.load, 7, !dbg !5338
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !5338
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !5338
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !5335
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5339

if.then7:                                         ; preds = %if.then2
  %20 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5340
  %21 = load i8*, i8** %buff.addr, align 8, !dbg !5341
  %22 = load i64, i64* %ts, align 8, !dbg !5342
  call void @zisofs_detect_magic(%struct.archive_write* %20, i8* %21, i64 %22), !dbg !5343
  br label %if.end8, !dbg !5343

if.end8:                                          ; preds = %if.then7, %if.then2
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5344
  %zisofs9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 27, !dbg !5346
  %24 = bitcast %struct.anon.6* %zisofs9 to i8*, !dbg !5347
  %bf.load10 = load i8, i8* %24, align 8, !dbg !5347
  %bf.shl11 = shl i8 %bf.load10, 6, !dbg !5347
  %bf.ashr12 = ashr i8 %bf.shl11, 7, !dbg !5347
  %bf.cast13 = sext i8 %bf.ashr12 to i32, !dbg !5347
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !5344
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !5348

if.then15:                                        ; preds = %if.end8
  %25 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5349
  %26 = load i8*, i8** %buff.addr, align 8, !dbg !5352
  %27 = load i64, i64* %ts, align 8, !dbg !5353
  %call = call i32 @zisofs_write_to_temp(%struct.archive_write* %25, i8* %26, i64 %27), !dbg !5354
  %cmp16 = icmp ne i32 %call, 0, !dbg !5355
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !5356

if.then17:                                        ; preds = %if.then15
  store i64 -30, i64* %retval, align 8, !dbg !5357
  br label %return, !dbg !5357

if.end18:                                         ; preds = %if.then15
  br label %if.end27, !dbg !5358

if.else:                                          ; preds = %if.end8
  %28 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5359
  %29 = load i8*, i8** %buff.addr, align 8, !dbg !5362
  %30 = load i64, i64* %ts, align 8, !dbg !5363
  %call19 = call i32 @wb_write_to_temp(%struct.archive_write* %28, i8* %29, i64 %30), !dbg !5364
  %cmp20 = icmp ne i32 %call19, 0, !dbg !5365
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !5366

if.then21:                                        ; preds = %if.else
  store i64 -30, i64* %retval, align 8, !dbg !5367
  br label %return, !dbg !5367

if.end22:                                         ; preds = %if.else
  %31 = load i64, i64* %ts, align 8, !dbg !5368
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5369
  %cur_file23 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 2, !dbg !5370
  %33 = load %struct.isofile*, %struct.isofile** %cur_file23, align 8, !dbg !5370
  %cur_content24 = getelementptr inbounds %struct.isofile, %struct.isofile* %33, i32 0, i32 11, !dbg !5371
  %34 = load %struct.content*, %struct.content** %cur_content24, align 8, !dbg !5371
  %size25 = getelementptr inbounds %struct.content, %struct.content* %34, i32 0, i32 1, !dbg !5372
  %35 = load i64, i64* %size25, align 8, !dbg !5373
  %add26 = add i64 %35, %31, !dbg !5373
  store i64 %add26, i64* %size25, align 8, !dbg !5373
  br label %if.end27

if.end27:                                         ; preds = %if.end22, %if.end18
  %36 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5374
  %37 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5376
  %cur_file28 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %37, i32 0, i32 2, !dbg !5377
  %38 = load %struct.isofile*, %struct.isofile** %cur_file28, align 8, !dbg !5377
  %cur_content29 = getelementptr inbounds %struct.isofile, %struct.isofile* %38, i32 0, i32 11, !dbg !5378
  %39 = load %struct.content*, %struct.content** %cur_content29, align 8, !dbg !5378
  %size30 = getelementptr inbounds %struct.content, %struct.content* %39, i32 0, i32 1, !dbg !5379
  %40 = load i64, i64* %size30, align 8, !dbg !5379
  %call31 = call i32 @wb_write_padding_to_temp(%struct.archive_write* %36, i64 %40), !dbg !5380
  %cmp32 = icmp ne i32 %call31, 0, !dbg !5381
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !5382

if.then33:                                        ; preds = %if.end27
  store i64 -30, i64* %retval, align 8, !dbg !5383
  br label %return, !dbg !5383

if.end34:                                         ; preds = %if.end27
  %41 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5384
  %cur_file35 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %41, i32 0, i32 2, !dbg !5385
  %42 = load %struct.isofile*, %struct.isofile** %cur_file35, align 8, !dbg !5385
  %cur_content36 = getelementptr inbounds %struct.isofile, %struct.isofile* %42, i32 0, i32 11, !dbg !5386
  %43 = load %struct.content*, %struct.content** %cur_content36, align 8, !dbg !5386
  %size37 = getelementptr inbounds %struct.content, %struct.content* %43, i32 0, i32 1, !dbg !5387
  %44 = load i64, i64* %size37, align 8, !dbg !5387
  %add38 = add nsw i64 %44, 2048, !dbg !5388
  %sub39 = sub nsw i64 %add38, 1, !dbg !5389
  %shr = ashr i64 %sub39, 11, !dbg !5390
  %conv = trunc i64 %shr to i32, !dbg !5391
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5392
  %cur_file40 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 2, !dbg !5393
  %46 = load %struct.isofile*, %struct.isofile** %cur_file40, align 8, !dbg !5393
  %cur_content41 = getelementptr inbounds %struct.isofile, %struct.isofile* %46, i32 0, i32 11, !dbg !5394
  %47 = load %struct.content*, %struct.content** %cur_content41, align 8, !dbg !5394
  %blocks = getelementptr inbounds %struct.content, %struct.content* %47, i32 0, i32 2, !dbg !5395
  store i32 %conv, i32* %blocks, align 8, !dbg !5396
  %48 = load i64, i64* %ts, align 8, !dbg !5397
  %49 = load i64, i64* %ws, align 8, !dbg !5398
  %sub42 = sub i64 %49, %48, !dbg !5398
  store i64 %sub42, i64* %ws, align 8, !dbg !5398
  %50 = load i8*, i8** %buff.addr, align 8, !dbg !5399
  %51 = load i64, i64* %ts, align 8, !dbg !5400
  %add.ptr = getelementptr inbounds i8, i8* %50, i64 %51, !dbg !5401
  store i8* %add.ptr, i8** %buff.addr, align 8, !dbg !5402
  %call43 = call noalias i8* @calloc(i64 1, i64 32) #8, !dbg !5403
  %52 = bitcast i8* %call43 to %struct.content*, !dbg !5403
  store %struct.content* %52, %struct.content** %con, align 8, !dbg !5404
  %53 = load %struct.content*, %struct.content** %con, align 8, !dbg !5405
  %cmp44 = icmp eq %struct.content* %53, null, !dbg !5407
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !5408

if.then46:                                        ; preds = %if.end34
  %54 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5409
  %archive47 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %54, i32 0, i32 0, !dbg !5411
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive47, i32 12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i32 0, i32 0)), !dbg !5412
  store i64 -30, i64* %retval, align 8, !dbg !5413
  br label %return, !dbg !5413

if.end48:                                         ; preds = %if.end34
  %55 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5414
  %format_data49 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %55, i32 0, i32 14, !dbg !5414
  %56 = load i8*, i8** %format_data49, align 8, !dbg !5414
  %57 = bitcast i8* %56 to %struct.iso9660*, !dbg !5414
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %57, i32 0, i32 33, !dbg !5414
  %58 = load i64, i64* %wbuff_offset, align 8, !dbg !5414
  %add50 = add nsw i64 %58, 65536, !dbg !5414
  %59 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5414
  %format_data51 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %59, i32 0, i32 14, !dbg !5414
  %60 = load i8*, i8** %format_data51, align 8, !dbg !5414
  %61 = bitcast i8* %60 to %struct.iso9660*, !dbg !5414
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 31, !dbg !5414
  %62 = load i64, i64* %wbuff_remaining, align 8, !dbg !5414
  %sub52 = sub i64 %add50, %62, !dbg !5414
  %63 = load %struct.content*, %struct.content** %con, align 8, !dbg !5415
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %63, i32 0, i32 0, !dbg !5416
  store i64 %sub52, i64* %offset_of_temp, align 8, !dbg !5417
  %64 = load %struct.content*, %struct.content** %con, align 8, !dbg !5418
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5419
  %cur_file53 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 2, !dbg !5420
  %66 = load %struct.isofile*, %struct.isofile** %cur_file53, align 8, !dbg !5420
  %cur_content54 = getelementptr inbounds %struct.isofile, %struct.isofile* %66, i32 0, i32 11, !dbg !5421
  %67 = load %struct.content*, %struct.content** %cur_content54, align 8, !dbg !5421
  %next = getelementptr inbounds %struct.content, %struct.content* %67, i32 0, i32 4, !dbg !5422
  store %struct.content* %64, %struct.content** %next, align 8, !dbg !5423
  %68 = load %struct.content*, %struct.content** %con, align 8, !dbg !5424
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5425
  %cur_file55 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 2, !dbg !5426
  %70 = load %struct.isofile*, %struct.isofile** %cur_file55, align 8, !dbg !5426
  %cur_content56 = getelementptr inbounds %struct.isofile, %struct.isofile* %70, i32 0, i32 11, !dbg !5427
  store %struct.content* %68, %struct.content** %cur_content56, align 8, !dbg !5428
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5429
  %zisofs57 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 27, !dbg !5430
  %block_offset = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs57, i32 0, i32 8, !dbg !5431
  store i64 0, i64* %block_offset, align 8, !dbg !5432
  br label %if.end58, !dbg !5433

if.end58:                                         ; preds = %if.end48, %land.lhs.true, %if.end
  %72 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5434
  %zisofs59 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %72, i32 0, i32 27, !dbg !5436
  %73 = bitcast %struct.anon.6* %zisofs59 to i8*, !dbg !5437
  %bf.load60 = load i8, i8* %73, align 8, !dbg !5437
  %bf.shl61 = shl i8 %bf.load60, 7, !dbg !5437
  %bf.ashr62 = ashr i8 %bf.shl61, 7, !dbg !5437
  %bf.cast63 = sext i8 %bf.ashr62 to i32, !dbg !5437
  %tobool64 = icmp ne i32 %bf.cast63, 0, !dbg !5434
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !5438

if.then65:                                        ; preds = %if.end58
  %74 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5439
  %75 = load i8*, i8** %buff.addr, align 8, !dbg !5440
  %76 = load i64, i64* %ws, align 8, !dbg !5441
  call void @zisofs_detect_magic(%struct.archive_write* %74, i8* %75, i64 %76), !dbg !5442
  br label %if.end66, !dbg !5442

if.end66:                                         ; preds = %if.then65, %if.end58
  %77 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5443
  %zisofs67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %77, i32 0, i32 27, !dbg !5445
  %78 = bitcast %struct.anon.6* %zisofs67 to i8*, !dbg !5446
  %bf.load68 = load i8, i8* %78, align 8, !dbg !5446
  %bf.shl69 = shl i8 %bf.load68, 6, !dbg !5446
  %bf.ashr70 = ashr i8 %bf.shl69, 7, !dbg !5446
  %bf.cast71 = sext i8 %bf.ashr70 to i32, !dbg !5446
  %tobool72 = icmp ne i32 %bf.cast71, 0, !dbg !5443
  br i1 %tobool72, label %if.then73, label %if.else79, !dbg !5447

if.then73:                                        ; preds = %if.end66
  %79 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5448
  %80 = load i8*, i8** %buff.addr, align 8, !dbg !5451
  %81 = load i64, i64* %ws, align 8, !dbg !5452
  %call74 = call i32 @zisofs_write_to_temp(%struct.archive_write* %79, i8* %80, i64 %81), !dbg !5453
  %cmp75 = icmp ne i32 %call74, 0, !dbg !5454
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !5455

if.then77:                                        ; preds = %if.then73
  store i64 -30, i64* %retval, align 8, !dbg !5456
  br label %return, !dbg !5456

if.end78:                                         ; preds = %if.then73
  br label %if.end89, !dbg !5457

if.else79:                                        ; preds = %if.end66
  %82 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5458
  %83 = load i8*, i8** %buff.addr, align 8, !dbg !5461
  %84 = load i64, i64* %ws, align 8, !dbg !5462
  %call80 = call i32 @wb_write_to_temp(%struct.archive_write* %82, i8* %83, i64 %84), !dbg !5463
  %cmp81 = icmp ne i32 %call80, 0, !dbg !5464
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !5465

if.then83:                                        ; preds = %if.else79
  store i64 -30, i64* %retval, align 8, !dbg !5466
  br label %return, !dbg !5466

if.end84:                                         ; preds = %if.else79
  %85 = load i64, i64* %ws, align 8, !dbg !5467
  %86 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5468
  %cur_file85 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %86, i32 0, i32 2, !dbg !5469
  %87 = load %struct.isofile*, %struct.isofile** %cur_file85, align 8, !dbg !5469
  %cur_content86 = getelementptr inbounds %struct.isofile, %struct.isofile* %87, i32 0, i32 11, !dbg !5470
  %88 = load %struct.content*, %struct.content** %cur_content86, align 8, !dbg !5470
  %size87 = getelementptr inbounds %struct.content, %struct.content* %88, i32 0, i32 1, !dbg !5471
  %89 = load i64, i64* %size87, align 8, !dbg !5472
  %add88 = add i64 %89, %85, !dbg !5472
  store i64 %add88, i64* %size87, align 8, !dbg !5472
  br label %if.end89

if.end89:                                         ; preds = %if.end84, %if.end78
  %90 = load i64, i64* %s.addr, align 8, !dbg !5473
  store i64 %90, i64* %retval, align 8, !dbg !5474
  br label %return, !dbg !5474

return:                                           ; preds = %if.end89, %if.then83, %if.then77, %if.then46, %if.then33, %if.then21, %if.then17, %if.then
  %91 = load i64, i64* %retval, align 8, !dbg !5475
  ret i64 %91, !dbg !5475
}

; Function Attrs: nounwind uwtable
define internal void @zisofs_detect_magic(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !633 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %p = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %magic_buff = alloca i8*, align 8
  %uncompressed_size = alloca i32, align 4
  %header_size = alloca i8, align 1
  %log2_bs = alloca i8, align 1
  %_ceil = alloca i64, align 8
  %doff = alloca i64, align 8
  %bst = alloca i32, align 4
  %bed = alloca i32, align 4
  %magic_max = alloca i32, align 4
  %entry_size = alloca i64, align 8
  %l = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5476, metadata !986), !dbg !5477
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !5478, metadata !986), !dbg !5479
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5480, metadata !986), !dbg !5481
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5482, metadata !986), !dbg !5483
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5484
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5485
  %1 = load i8*, i8** %format_data, align 8, !dbg !5485
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5484
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !5486, metadata !986), !dbg !5487
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5488
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !5489
  %4 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !5489
  store %struct.isofile* %4, %struct.isofile** %file, align 8, !dbg !5487
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5490, metadata !986), !dbg !5491
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !5492, metadata !986), !dbg !5493
  call void @llvm.dbg.declare(metadata i8** %magic_buff, metadata !5494, metadata !986), !dbg !5495
  call void @llvm.dbg.declare(metadata i32* %uncompressed_size, metadata !5496, metadata !986), !dbg !5497
  call void @llvm.dbg.declare(metadata i8* %header_size, metadata !5498, metadata !986), !dbg !5499
  call void @llvm.dbg.declare(metadata i8* %log2_bs, metadata !5500, metadata !986), !dbg !5501
  call void @llvm.dbg.declare(metadata i64* %_ceil, metadata !5502, metadata !986), !dbg !5503
  call void @llvm.dbg.declare(metadata i64* %doff, metadata !5504, metadata !986), !dbg !5505
  call void @llvm.dbg.declare(metadata i32* %bst, metadata !5506, metadata !986), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %bed, metadata !5508, metadata !986), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %magic_max, metadata !5510, metadata !986), !dbg !5511
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !5512, metadata !986), !dbg !5513
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5514
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 4, !dbg !5515
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !5515
  %call = call i64 @archive_entry_size(%struct.archive_entry* %6), !dbg !5516
  store i64 %call, i64* %entry_size, align 8, !dbg !5517
  %7 = load i64, i64* %entry_size, align 8, !dbg !5518
  %cmp = icmp sgt i64 64, %7, !dbg !5520
  br i1 %cmp, label %if.then, label %if.else, !dbg !5521

if.then:                                          ; preds = %entry
  %8 = load i64, i64* %entry_size, align 8, !dbg !5522
  %conv = trunc i64 %8 to i32, !dbg !5523
  store i32 %conv, i32* %magic_max, align 4, !dbg !5524
  br label %if.end, !dbg !5525

if.else:                                          ; preds = %entry
  store i32 64, i32* %magic_max, align 4, !dbg !5526
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5527
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 27, !dbg !5529
  %magic_cnt = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 2, !dbg !5530
  %10 = load i32, i32* %magic_cnt, align 4, !dbg !5530
  %cmp2 = icmp eq i32 %10, 0, !dbg !5531
  br i1 %cmp2, label %land.lhs.true, label %if.else8, !dbg !5532

land.lhs.true:                                    ; preds = %if.end
  %11 = load i64, i64* %s.addr, align 8, !dbg !5533
  %12 = load i32, i32* %magic_max, align 4, !dbg !5535
  %conv4 = sext i32 %12 to i64, !dbg !5536
  %cmp5 = icmp uge i64 %11, %conv4, !dbg !5537
  br i1 %cmp5, label %if.then7, label %if.else8, !dbg !5538

if.then7:                                         ; preds = %land.lhs.true
  %13 = load i8*, i8** %buff.addr, align 8, !dbg !5539
  store i8* %13, i8** %magic_buff, align 8, !dbg !5540
  br label %if.end37, !dbg !5541

if.else8:                                         ; preds = %land.lhs.true, %if.end
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5542
  %zisofs9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 27, !dbg !5545
  %magic_cnt10 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs9, i32 0, i32 2, !dbg !5546
  %15 = load i32, i32* %magic_cnt10, align 4, !dbg !5546
  %16 = load i32, i32* %magic_max, align 4, !dbg !5547
  %cmp11 = icmp slt i32 %15, %16, !dbg !5548
  br i1 %cmp11, label %if.then13, label %if.end33, !dbg !5549

if.then13:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata i64* %l, metadata !5550, metadata !986), !dbg !5552
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5553
  %zisofs14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 27, !dbg !5554
  %magic_cnt15 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs14, i32 0, i32 2, !dbg !5555
  %18 = load i32, i32* %magic_cnt15, align 4, !dbg !5555
  %conv16 = sext i32 %18 to i64, !dbg !5553
  %sub = sub i64 64, %conv16, !dbg !5556
  store i64 %sub, i64* %l, align 8, !dbg !5557
  %19 = load i64, i64* %l, align 8, !dbg !5558
  %20 = load i64, i64* %s.addr, align 8, !dbg !5560
  %cmp17 = icmp ugt i64 %19, %20, !dbg !5561
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5562

if.then19:                                        ; preds = %if.then13
  %21 = load i64, i64* %s.addr, align 8, !dbg !5563
  store i64 %21, i64* %l, align 8, !dbg !5564
  br label %if.end20, !dbg !5565

if.end20:                                         ; preds = %if.then19, %if.then13
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5566
  %zisofs21 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 27, !dbg !5567
  %magic_buffer = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs21, i32 0, i32 1, !dbg !5568
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %magic_buffer, i32 0, i32 0, !dbg !5566
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5569
  %zisofs22 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 27, !dbg !5570
  %magic_cnt23 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs22, i32 0, i32 2, !dbg !5571
  %24 = load i32, i32* %magic_cnt23, align 4, !dbg !5571
  %idx.ext = sext i32 %24 to i64, !dbg !5572
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext, !dbg !5572
  %25 = load i8*, i8** %buff.addr, align 8, !dbg !5573
  %26 = load i64, i64* %l, align 8, !dbg !5574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %25, i64 %26, i32 1, i1 false), !dbg !5575
  %27 = load i64, i64* %l, align 8, !dbg !5576
  %conv24 = trunc i64 %27 to i32, !dbg !5577
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5578
  %zisofs25 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 27, !dbg !5579
  %magic_cnt26 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs25, i32 0, i32 2, !dbg !5580
  %29 = load i32, i32* %magic_cnt26, align 4, !dbg !5581
  %add = add nsw i32 %29, %conv24, !dbg !5581
  store i32 %add, i32* %magic_cnt26, align 4, !dbg !5581
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5582
  %zisofs27 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 27, !dbg !5584
  %magic_cnt28 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs27, i32 0, i32 2, !dbg !5585
  %31 = load i32, i32* %magic_cnt28, align 4, !dbg !5585
  %32 = load i32, i32* %magic_max, align 4, !dbg !5586
  %cmp29 = icmp slt i32 %31, %32, !dbg !5587
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5588

if.then31:                                        ; preds = %if.end20
  br label %return, !dbg !5589

if.end32:                                         ; preds = %if.end20
  br label %if.end33, !dbg !5590

if.end33:                                         ; preds = %if.end32, %if.else8
  %33 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5591
  %zisofs34 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %33, i32 0, i32 27, !dbg !5592
  %magic_buffer35 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs34, i32 0, i32 1, !dbg !5593
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %magic_buffer35, i32 0, i32 0, !dbg !5591
  store i8* %arraydecay36, i8** %magic_buff, align 8, !dbg !5594
  br label %if.end37

if.end37:                                         ; preds = %if.end33, %if.then7
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5595
  %zisofs38 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 27, !dbg !5596
  %35 = bitcast %struct.anon.6* %zisofs38 to i8*, !dbg !5597
  %bf.load = load i8, i8* %35, align 8, !dbg !5598
  %bf.clear = and i8 %bf.load, -2, !dbg !5598
  store i8 %bf.clear, i8* %35, align 8, !dbg !5598
  %36 = load i8*, i8** %magic_buff, align 8, !dbg !5599
  store i8* %36, i8** %p, align 8, !dbg !5600
  %37 = load i8*, i8** %p, align 8, !dbg !5601
  %call39 = call i32 @memcmp(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @zisofs_magic, i32 0, i32 0), i64 8) #9, !dbg !5603
  %cmp40 = icmp ne i32 %call39, 0, !dbg !5604
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !5605

if.then42:                                        ; preds = %if.end37
  br label %return, !dbg !5606

if.end43:                                         ; preds = %if.end37
  %38 = load i8*, i8** %p, align 8, !dbg !5607
  %add.ptr44 = getelementptr inbounds i8, i8* %38, i64 8, !dbg !5607
  store i8* %add.ptr44, i8** %p, align 8, !dbg !5607
  %39 = load i8*, i8** %p, align 8, !dbg !5608
  %call45 = call i32 @archive_le32dec(i8* %39), !dbg !5609
  store i32 %call45, i32* %uncompressed_size, align 4, !dbg !5610
  %40 = load i8*, i8** %p, align 8, !dbg !5611
  %arrayidx = getelementptr inbounds i8, i8* %40, i64 4, !dbg !5611
  %41 = load i8, i8* %arrayidx, align 1, !dbg !5611
  store i8 %41, i8* %header_size, align 1, !dbg !5612
  %42 = load i8*, i8** %p, align 8, !dbg !5613
  %arrayidx46 = getelementptr inbounds i8, i8* %42, i64 5, !dbg !5613
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !5613
  store i8 %43, i8* %log2_bs, align 1, !dbg !5614
  %44 = load i32, i32* %uncompressed_size, align 4, !dbg !5615
  %cmp47 = icmp ult i32 %44, 24, !dbg !5617
  br i1 %cmp47, label %if.then60, label %lor.lhs.false, !dbg !5618

lor.lhs.false:                                    ; preds = %if.end43
  %45 = load i8, i8* %header_size, align 1, !dbg !5619
  %conv49 = zext i8 %45 to i32, !dbg !5619
  %cmp50 = icmp ne i32 %conv49, 4, !dbg !5621
  br i1 %cmp50, label %if.then60, label %lor.lhs.false52, !dbg !5622

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %46 = load i8, i8* %log2_bs, align 1, !dbg !5623
  %conv53 = zext i8 %46 to i32, !dbg !5623
  %cmp54 = icmp sgt i32 %conv53, 30, !dbg !5624
  br i1 %cmp54, label %if.then60, label %lor.lhs.false56, !dbg !5625

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %47 = load i8, i8* %log2_bs, align 1, !dbg !5626
  %conv57 = zext i8 %47 to i32, !dbg !5626
  %cmp58 = icmp slt i32 %conv57, 7, !dbg !5627
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5628

if.then60:                                        ; preds = %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false, %if.end43
  br label %return, !dbg !5630

if.end61:                                         ; preds = %lor.lhs.false56
  %48 = load i32, i32* %uncompressed_size, align 4, !dbg !5631
  %conv62 = zext i32 %48 to i64, !dbg !5631
  %49 = load i8, i8* %log2_bs, align 1, !dbg !5632
  %conv63 = zext i8 %49 to i32, !dbg !5632
  %sh_prom = zext i32 %conv63 to i64, !dbg !5633
  %shl = shl i64 1, %sh_prom, !dbg !5633
  %add64 = add nsw i64 %conv62, %shl, !dbg !5634
  %sub65 = sub nsw i64 %add64, 1, !dbg !5635
  %50 = load i8, i8* %log2_bs, align 1, !dbg !5636
  %conv66 = zext i8 %50 to i32, !dbg !5636
  %sh_prom67 = zext i32 %conv66 to i64, !dbg !5637
  %shr = ashr i64 %sub65, %sh_prom67, !dbg !5637
  store i64 %shr, i64* %_ceil, align 8, !dbg !5638
  %51 = load i64, i64* %_ceil, align 8, !dbg !5639
  %add68 = add i64 %51, 1, !dbg !5640
  %mul = mul i64 %add68, 4, !dbg !5641
  %add69 = add i64 %mul, 16, !dbg !5642
  store i64 %add69, i64* %doff, align 8, !dbg !5643
  %52 = load i64, i64* %entry_size, align 8, !dbg !5644
  %53 = load i64, i64* %doff, align 8, !dbg !5646
  %cmp70 = icmp slt i64 %52, %53, !dbg !5647
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !5648

if.then72:                                        ; preds = %if.end61
  br label %return, !dbg !5649

if.end73:                                         ; preds = %if.end61
  %54 = load i8*, i8** %magic_buff, align 8, !dbg !5650
  %add.ptr74 = getelementptr inbounds i8, i8* %54, i64 16, !dbg !5651
  store i8* %add.ptr74, i8** %p, align 8, !dbg !5652
  %55 = load i8*, i8** %magic_buff, align 8, !dbg !5653
  %56 = load i32, i32* %magic_max, align 4, !dbg !5654
  %idx.ext75 = sext i32 %56 to i64, !dbg !5655
  %add.ptr76 = getelementptr inbounds i8, i8* %55, i64 %idx.ext75, !dbg !5655
  store i8* %add.ptr76, i8** %endp, align 8, !dbg !5656
  br label %while.cond, !dbg !5657

while.cond:                                       ; preds = %if.end95, %if.end73
  %57 = load i64, i64* %_ceil, align 8, !dbg !5658
  %tobool = icmp ne i64 %57, 0, !dbg !5658
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5660

land.rhs:                                         ; preds = %while.cond
  %58 = load i8*, i8** %p, align 8, !dbg !5661
  %add.ptr77 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !5662
  %59 = load i8*, i8** %endp, align 8, !dbg !5663
  %cmp78 = icmp ule i8* %add.ptr77, %59, !dbg !5664
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %60 = phi i1 [ false, %while.cond ], [ %cmp78, %land.rhs ]
  br i1 %60, label %while.body, label %while.end, !dbg !5665

while.body:                                       ; preds = %land.end
  %61 = load i8*, i8** %p, align 8, !dbg !5667
  %call80 = call i32 @archive_le32dec(i8* %61), !dbg !5669
  store i32 %call80, i32* %bst, align 4, !dbg !5670
  %62 = load i32, i32* %bst, align 4, !dbg !5671
  %conv81 = zext i32 %62 to i64, !dbg !5671
  %63 = load i64, i64* %doff, align 8, !dbg !5673
  %cmp82 = icmp ne i64 %conv81, %63, !dbg !5674
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !5675

if.then84:                                        ; preds = %while.body
  br label %return, !dbg !5676

if.end85:                                         ; preds = %while.body
  %64 = load i8*, i8** %p, align 8, !dbg !5677
  %add.ptr86 = getelementptr inbounds i8, i8* %64, i64 4, !dbg !5677
  store i8* %add.ptr86, i8** %p, align 8, !dbg !5677
  %65 = load i8*, i8** %p, align 8, !dbg !5678
  %call87 = call i32 @archive_le32dec(i8* %65), !dbg !5679
  store i32 %call87, i32* %bed, align 4, !dbg !5680
  %66 = load i32, i32* %bed, align 4, !dbg !5681
  %67 = load i32, i32* %bst, align 4, !dbg !5683
  %cmp88 = icmp ult i32 %66, %67, !dbg !5684
  br i1 %cmp88, label %if.then94, label %lor.lhs.false90, !dbg !5685

lor.lhs.false90:                                  ; preds = %if.end85
  %68 = load i32, i32* %bed, align 4, !dbg !5686
  %conv91 = zext i32 %68 to i64, !dbg !5686
  %69 = load i64, i64* %entry_size, align 8, !dbg !5688
  %cmp92 = icmp sgt i64 %conv91, %69, !dbg !5689
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !5690

if.then94:                                        ; preds = %lor.lhs.false90, %if.end85
  br label %return, !dbg !5691

if.end95:                                         ; preds = %lor.lhs.false90
  %70 = load i32, i32* %bed, align 4, !dbg !5692
  %71 = load i32, i32* %bst, align 4, !dbg !5693
  %sub96 = sub i32 %70, %71, !dbg !5694
  %conv97 = zext i32 %sub96 to i64, !dbg !5692
  %72 = load i64, i64* %doff, align 8, !dbg !5695
  %add98 = add i64 %72, %conv97, !dbg !5695
  store i64 %add98, i64* %doff, align 8, !dbg !5695
  %73 = load i64, i64* %_ceil, align 8, !dbg !5696
  %dec = add i64 %73, -1, !dbg !5696
  store i64 %dec, i64* %_ceil, align 8, !dbg !5696
  br label %while.cond, !dbg !5697

while.end:                                        ; preds = %land.end
  %74 = load i32, i32* %uncompressed_size, align 4, !dbg !5699
  %75 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5700
  %zisofs99 = getelementptr inbounds %struct.isofile, %struct.isofile* %75, i32 0, i32 14, !dbg !5701
  %uncompressed_size100 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs99, i32 0, i32 2, !dbg !5702
  store i32 %74, i32* %uncompressed_size100, align 4, !dbg !5703
  %76 = load i8, i8* %header_size, align 1, !dbg !5704
  %77 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5705
  %zisofs101 = getelementptr inbounds %struct.isofile, %struct.isofile* %77, i32 0, i32 14, !dbg !5706
  %header_size102 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs101, i32 0, i32 0, !dbg !5707
  store i8 %76, i8* %header_size102, align 8, !dbg !5708
  %78 = load i8, i8* %log2_bs, align 1, !dbg !5709
  %79 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5710
  %zisofs103 = getelementptr inbounds %struct.isofile, %struct.isofile* %79, i32 0, i32 14, !dbg !5711
  %log2_bs104 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs103, i32 0, i32 1, !dbg !5712
  store i8 %78, i8* %log2_bs104, align 1, !dbg !5713
  %80 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5714
  %zisofs105 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %80, i32 0, i32 27, !dbg !5715
  %81 = bitcast %struct.anon.6* %zisofs105 to i8*, !dbg !5716
  %bf.load106 = load i8, i8* %81, align 8, !dbg !5717
  %bf.clear107 = and i8 %bf.load106, -3, !dbg !5717
  store i8 %bf.clear107, i8* %81, align 8, !dbg !5717
  br label %return, !dbg !5718

return:                                           ; preds = %while.end, %if.then94, %if.then84, %if.then72, %if.then60, %if.then42, %if.then31
  ret void, !dbg !5719
}

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_write_to_temp(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !639 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %b = alloca i8*, align 8
  %zstrm = alloca %struct.z_stream_s*, align 8
  %avail = alloca i64, align 8
  %csize = alloca i64, align 8
  %flush = alloca i32, align 4
  %r = alloca i32, align 4
  %nonzero = alloca i8*, align 8
  %nonzeroend = alloca i8*, align 8
  %diff = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !5720, metadata !986), !dbg !5721
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !5722, metadata !986), !dbg !5723
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !5724, metadata !986), !dbg !5725
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !5726, metadata !986), !dbg !5727
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5728
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !5729
  %1 = load i8*, i8** %format_data, align 8, !dbg !5729
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !5728
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !5727
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !5730, metadata !986), !dbg !5731
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5732
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !5733
  %4 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !5733
  store %struct.isofile* %4, %struct.isofile** %file, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata i8** %b, metadata !5734, metadata !986), !dbg !5735
  call void @llvm.dbg.declare(metadata %struct.z_stream_s** %zstrm, metadata !5736, metadata !986), !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !5739, metadata !986), !dbg !5740
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !5741, metadata !986), !dbg !5742
  call void @llvm.dbg.declare(metadata i32* %flush, metadata !5743, metadata !986), !dbg !5744
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5745, metadata !986), !dbg !5746
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5747
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 27, !dbg !5748
  %stream = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 9, !dbg !5749
  store %struct.z_stream_s* %stream, %struct.z_stream_s** %zstrm, align 8, !dbg !5750
  %6 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5751
  %call = call i8* @wb_buffptr(%struct.archive_write* %6), !dbg !5752
  %7 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5753
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %7, i32 0, i32 3, !dbg !5754
  store i8* %call, i8** %next_out, align 8, !dbg !5755
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5756
  %format_data1 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %8, i32 0, i32 14, !dbg !5756
  %9 = load i8*, i8** %format_data1, align 8, !dbg !5756
  %10 = bitcast i8* %9 to %struct.iso9660*, !dbg !5756
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 31, !dbg !5756
  %11 = load i64, i64* %wbuff_remaining, align 8, !dbg !5756
  %conv = trunc i64 %11 to i32, !dbg !5757
  %12 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5758
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %12, i32 0, i32 4, !dbg !5759
  store i32 %conv, i32* %avail_out, align 8, !dbg !5760
  %13 = load i8*, i8** %buff.addr, align 8, !dbg !5761
  store i8* %13, i8** %b, align 8, !dbg !5762
  br label %do.body, !dbg !5763

do.body:                                          ; preds = %do.cond, %entry
  %14 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5764
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %14, i32 0, i32 2, !dbg !5766
  %15 = load i64, i64* %total_in, align 8, !dbg !5766
  %sub = sub i64 32768, %15, !dbg !5767
  store i64 %sub, i64* %avail, align 8, !dbg !5768
  %16 = load i64, i64* %s.addr, align 8, !dbg !5769
  %17 = load i64, i64* %avail, align 8, !dbg !5771
  %cmp = icmp ult i64 %16, %17, !dbg !5772
  br i1 %cmp, label %if.then, label %if.else, !dbg !5773

if.then:                                          ; preds = %do.body
  %18 = load i64, i64* %s.addr, align 8, !dbg !5774
  store i64 %18, i64* %avail, align 8, !dbg !5776
  store i32 0, i32* %flush, align 4, !dbg !5777
  br label %if.end, !dbg !5778

if.else:                                          ; preds = %do.body
  store i32 4, i32* %flush, align 4, !dbg !5779
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i64, i64* %avail, align 8, !dbg !5780
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5781
  %zisofs3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 27, !dbg !5782
  %remaining = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs3, i32 0, i32 11, !dbg !5783
  %21 = load i64, i64* %remaining, align 8, !dbg !5784
  %sub4 = sub i64 %21, %19, !dbg !5784
  store i64 %sub4, i64* %remaining, align 8, !dbg !5784
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5785
  %zisofs5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 27, !dbg !5787
  %remaining6 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs5, i32 0, i32 11, !dbg !5788
  %23 = load i64, i64* %remaining6, align 8, !dbg !5788
  %cmp7 = icmp sle i64 %23, 0, !dbg !5789
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !5790

if.then9:                                         ; preds = %if.end
  store i32 4, i32* %flush, align 4, !dbg !5791
  br label %if.end10, !dbg !5792

if.end10:                                         ; preds = %if.then9, %if.end
  %24 = load i8*, i8** %b, align 8, !dbg !5793
  %25 = ptrtoint i8* %24 to i64, !dbg !5794
  %26 = inttoptr i64 %25 to i8*, !dbg !5795
  %27 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5796
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %27, i32 0, i32 0, !dbg !5797
  store i8* %26, i8** %next_in, align 8, !dbg !5798
  %28 = load i64, i64* %avail, align 8, !dbg !5799
  %conv11 = trunc i64 %28 to i32, !dbg !5800
  %29 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5801
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %29, i32 0, i32 1, !dbg !5802
  store i32 %conv11, i32* %avail_in, align 8, !dbg !5803
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5804
  %zisofs12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 27, !dbg !5806
  %31 = bitcast %struct.anon.6* %zisofs12 to i8*, !dbg !5807
  %bf.load = load i8, i8* %31, align 8, !dbg !5807
  %bf.shl = shl i8 %bf.load, 5, !dbg !5807
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !5807
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !5807
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5804
  br i1 %tobool, label %if.then13, label %if.end21, !dbg !5808

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %nonzero, metadata !5809, metadata !986), !dbg !5811
  %32 = load i8*, i8** %b, align 8, !dbg !5812
  store i8* %32, i8** %nonzero, align 8, !dbg !5811
  call void @llvm.dbg.declare(metadata i8** %nonzeroend, metadata !5813, metadata !986), !dbg !5814
  %33 = load i8*, i8** %b, align 8, !dbg !5815
  %34 = load i64, i64* %avail, align 8, !dbg !5816
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !5817
  store i8* %add.ptr, i8** %nonzeroend, align 8, !dbg !5814
  br label %while.cond, !dbg !5818

while.cond:                                       ; preds = %if.end20, %if.then13
  %35 = load i8*, i8** %nonzero, align 8, !dbg !5819
  %36 = load i8*, i8** %nonzeroend, align 8, !dbg !5821
  %cmp14 = icmp ult i8* %35, %36, !dbg !5822
  br i1 %cmp14, label %while.body, label %while.end, !dbg !5823

while.body:                                       ; preds = %while.cond
  %37 = load i8*, i8** %nonzero, align 8, !dbg !5824
  %incdec.ptr = getelementptr inbounds i8, i8* %37, i32 1, !dbg !5824
  store i8* %incdec.ptr, i8** %nonzero, align 8, !dbg !5824
  %38 = load i8, i8* %37, align 1, !dbg !5826
  %tobool16 = icmp ne i8 %38, 0, !dbg !5826
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !5827

if.then17:                                        ; preds = %while.body
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5828
  %zisofs18 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %39, i32 0, i32 27, !dbg !5830
  %40 = bitcast %struct.anon.6* %zisofs18 to i8*, !dbg !5831
  %bf.load19 = load i8, i8* %40, align 8, !dbg !5832
  %bf.clear = and i8 %bf.load19, -5, !dbg !5832
  store i8 %bf.clear, i8* %40, align 8, !dbg !5832
  br label %while.end, !dbg !5833

if.end20:                                         ; preds = %while.body
  br label %while.cond, !dbg !5834

while.end:                                        ; preds = %if.then17, %while.cond
  br label %if.end21, !dbg !5836

if.end21:                                         ; preds = %while.end, %if.end10
  %41 = load i64, i64* %avail, align 8, !dbg !5837
  %42 = load i8*, i8** %b, align 8, !dbg !5838
  %add.ptr22 = getelementptr inbounds i8, i8* %42, i64 %41, !dbg !5838
  store i8* %add.ptr22, i8** %b, align 8, !dbg !5838
  %43 = load i64, i64* %avail, align 8, !dbg !5839
  %44 = load i64, i64* %s.addr, align 8, !dbg !5840
  %sub23 = sub i64 %44, %43, !dbg !5840
  store i64 %sub23, i64* %s.addr, align 8, !dbg !5840
  %45 = load i32, i32* %flush, align 4, !dbg !5841
  %cmp24 = icmp eq i32 %45, 4, !dbg !5843
  br i1 %cmp24, label %land.lhs.true, label %if.end62, !dbg !5844

land.lhs.true:                                    ; preds = %if.end21
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5845
  %zisofs26 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 27, !dbg !5847
  %47 = bitcast %struct.anon.6* %zisofs26 to i8*, !dbg !5848
  %bf.load27 = load i8, i8* %47, align 8, !dbg !5848
  %bf.shl28 = shl i8 %bf.load27, 5, !dbg !5848
  %bf.ashr29 = ashr i8 %bf.shl28, 7, !dbg !5848
  %bf.cast30 = sext i8 %bf.ashr29 to i32, !dbg !5848
  %tobool31 = icmp ne i32 %bf.cast30, 0, !dbg !5845
  br i1 %tobool31, label %land.lhs.true32, label %if.end62, !dbg !5849

land.lhs.true32:                                  ; preds = %land.lhs.true
  %48 = load i64, i64* %avail, align 8, !dbg !5850
  %49 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5851
  %total_in33 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %49, i32 0, i32 2, !dbg !5852
  %50 = load i64, i64* %total_in33, align 8, !dbg !5852
  %add = add i64 %48, %50, !dbg !5853
  %cmp34 = icmp eq i64 %add, 32768, !dbg !5854
  br i1 %cmp34, label %if.then36, label %if.end62, !dbg !5855

if.then36:                                        ; preds = %land.lhs.true32
  %51 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5857
  %zisofs37 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %51, i32 0, i32 27, !dbg !5860
  %block_offset = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs37, i32 0, i32 8, !dbg !5861
  %52 = load i64, i64* %block_offset, align 8, !dbg !5861
  %53 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5862
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %53, i32 0, i32 11, !dbg !5863
  %54 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !5863
  %size = getelementptr inbounds %struct.content, %struct.content* %54, i32 0, i32 1, !dbg !5864
  %55 = load i64, i64* %size, align 8, !dbg !5864
  %cmp38 = icmp ne i64 %52, %55, !dbg !5865
  br i1 %cmp38, label %if.then40, label %if.end60, !dbg !5866

if.then40:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !5867, metadata !986), !dbg !5869
  %56 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5870
  %57 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5871
  %cur_content41 = getelementptr inbounds %struct.isofile, %struct.isofile* %57, i32 0, i32 11, !dbg !5872
  %58 = load %struct.content*, %struct.content** %cur_content41, align 8, !dbg !5872
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %58, i32 0, i32 0, !dbg !5873
  %59 = load i64, i64* %offset_of_temp, align 8, !dbg !5873
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5874
  %zisofs42 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 27, !dbg !5875
  %block_offset43 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs42, i32 0, i32 8, !dbg !5876
  %61 = load i64, i64* %block_offset43, align 8, !dbg !5876
  %add44 = add nsw i64 %59, %61, !dbg !5877
  %call45 = call i32 @wb_set_offset(%struct.archive_write* %56, i64 %add44), !dbg !5878
  store i32 %call45, i32* %r, align 4, !dbg !5879
  %62 = load i32, i32* %r, align 4, !dbg !5880
  %cmp46 = icmp ne i32 %62, 0, !dbg !5882
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !5883

if.then48:                                        ; preds = %if.then40
  %63 = load i32, i32* %r, align 4, !dbg !5884
  store i32 %63, i32* %retval, align 4, !dbg !5885
  br label %return, !dbg !5885

if.end49:                                         ; preds = %if.then40
  %64 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5886
  %cur_content50 = getelementptr inbounds %struct.isofile, %struct.isofile* %64, i32 0, i32 11, !dbg !5887
  %65 = load %struct.content*, %struct.content** %cur_content50, align 8, !dbg !5887
  %size51 = getelementptr inbounds %struct.content, %struct.content* %65, i32 0, i32 1, !dbg !5888
  %66 = load i64, i64* %size51, align 8, !dbg !5888
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5889
  %zisofs52 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 27, !dbg !5890
  %block_offset53 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs52, i32 0, i32 8, !dbg !5891
  %68 = load i64, i64* %block_offset53, align 8, !dbg !5891
  %sub54 = sub nsw i64 %66, %68, !dbg !5892
  store i64 %sub54, i64* %diff, align 8, !dbg !5893
  %69 = load i64, i64* %diff, align 8, !dbg !5894
  %70 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5895
  %cur_content55 = getelementptr inbounds %struct.isofile, %struct.isofile* %70, i32 0, i32 11, !dbg !5896
  %71 = load %struct.content*, %struct.content** %cur_content55, align 8, !dbg !5896
  %size56 = getelementptr inbounds %struct.content, %struct.content* %71, i32 0, i32 1, !dbg !5897
  %72 = load i64, i64* %size56, align 8, !dbg !5898
  %sub57 = sub nsw i64 %72, %69, !dbg !5898
  store i64 %sub57, i64* %size56, align 8, !dbg !5898
  %73 = load i64, i64* %diff, align 8, !dbg !5899
  %74 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5900
  %zisofs58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %74, i32 0, i32 27, !dbg !5901
  %total_size = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs58, i32 0, i32 7, !dbg !5902
  %75 = load i64, i64* %total_size, align 8, !dbg !5903
  %sub59 = sub nsw i64 %75, %73, !dbg !5903
  store i64 %sub59, i64* %total_size, align 8, !dbg !5903
  br label %if.end60, !dbg !5904

if.end60:                                         ; preds = %if.end49, %if.then36
  %76 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5905
  %avail_in61 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %76, i32 0, i32 1, !dbg !5906
  store i32 0, i32* %avail_in61, align 8, !dbg !5907
  br label %if.end62, !dbg !5908

if.end62:                                         ; preds = %if.end60, %land.lhs.true32, %land.lhs.true, %if.end21
  br label %while.cond63, !dbg !5909

while.cond63:                                     ; preds = %sw.epilog, %if.end62
  %77 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5910
  %avail_in64 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %77, i32 0, i32 1, !dbg !5912
  %78 = load i32, i32* %avail_in64, align 8, !dbg !5912
  %cmp65 = icmp ugt i32 %78, 0, !dbg !5913
  br i1 %cmp65, label %while.body67, label %while.end89, !dbg !5914

while.body67:                                     ; preds = %while.cond63
  %79 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5915
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %79, i32 0, i32 5, !dbg !5917
  %80 = load i64, i64* %total_out, align 8, !dbg !5917
  store i64 %80, i64* %csize, align 8, !dbg !5918
  %81 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5919
  %82 = load i32, i32* %flush, align 4, !dbg !5920
  %call68 = call i32 @cm_zlib_deflate(%struct.z_stream_s* %81, i32 %82), !dbg !5921
  store i32 %call68, i32* %r, align 4, !dbg !5922
  %83 = load i32, i32* %r, align 4, !dbg !5923
  switch i32 %83, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !5924

sw.bb:                                            ; preds = %while.body67, %while.body67
  %84 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5925
  %total_out69 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i32 0, i32 5, !dbg !5927
  %85 = load i64, i64* %total_out69, align 8, !dbg !5927
  %86 = load i64, i64* %csize, align 8, !dbg !5928
  %sub70 = sub i64 %85, %86, !dbg !5929
  store i64 %sub70, i64* %csize, align 8, !dbg !5930
  %87 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5931
  %88 = load i64, i64* %csize, align 8, !dbg !5933
  %call71 = call i32 @wb_consume(%struct.archive_write* %87, i64 %88), !dbg !5934
  %cmp72 = icmp ne i32 %call71, 0, !dbg !5935
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !5936

if.then74:                                        ; preds = %sw.bb
  store i32 -30, i32* %retval, align 4, !dbg !5937
  br label %return, !dbg !5937

if.end75:                                         ; preds = %sw.bb
  %89 = load i64, i64* %csize, align 8, !dbg !5938
  %90 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5939
  %zisofs76 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %90, i32 0, i32 27, !dbg !5940
  %total_size77 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs76, i32 0, i32 7, !dbg !5941
  %91 = load i64, i64* %total_size77, align 8, !dbg !5942
  %add78 = add i64 %91, %89, !dbg !5942
  store i64 %add78, i64* %total_size77, align 8, !dbg !5942
  %92 = load i64, i64* %csize, align 8, !dbg !5943
  %93 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5944
  %cur_file79 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %93, i32 0, i32 2, !dbg !5945
  %94 = load %struct.isofile*, %struct.isofile** %cur_file79, align 8, !dbg !5945
  %cur_content80 = getelementptr inbounds %struct.isofile, %struct.isofile* %94, i32 0, i32 11, !dbg !5946
  %95 = load %struct.content*, %struct.content** %cur_content80, align 8, !dbg !5946
  %size81 = getelementptr inbounds %struct.content, %struct.content* %95, i32 0, i32 1, !dbg !5947
  %96 = load i64, i64* %size81, align 8, !dbg !5948
  %add82 = add i64 %96, %92, !dbg !5948
  store i64 %add82, i64* %size81, align 8, !dbg !5948
  %97 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5949
  %call83 = call i8* @wb_buffptr(%struct.archive_write* %97), !dbg !5950
  %98 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5951
  %next_out84 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %98, i32 0, i32 3, !dbg !5952
  store i8* %call83, i8** %next_out84, align 8, !dbg !5953
  %99 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5954
  %format_data85 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %99, i32 0, i32 14, !dbg !5954
  %100 = load i8*, i8** %format_data85, align 8, !dbg !5954
  %101 = bitcast i8* %100 to %struct.iso9660*, !dbg !5954
  %wbuff_remaining86 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %101, i32 0, i32 31, !dbg !5954
  %102 = load i64, i64* %wbuff_remaining86, align 8, !dbg !5954
  %conv87 = trunc i64 %102 to i32, !dbg !5955
  %103 = load %struct.z_stream_s*, %struct.z_stream_s** %zstrm, align 8, !dbg !5956
  %avail_out88 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %103, i32 0, i32 4, !dbg !5957
  store i32 %conv87, i32* %avail_out88, align 8, !dbg !5958
  br label %sw.epilog, !dbg !5959

sw.default:                                       ; preds = %while.body67
  %104 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5960
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %104, i32 0, i32 0, !dbg !5961
  %105 = load i32, i32* %r, align 4, !dbg !5962
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.60, i32 0, i32 0), i32 %105), !dbg !5963
  store i32 -30, i32* %retval, align 4, !dbg !5964
  br label %return, !dbg !5964

sw.epilog:                                        ; preds = %if.end75
  br label %while.cond63, !dbg !5965

while.end89:                                      ; preds = %while.cond63
  %106 = load i32, i32* %flush, align 4, !dbg !5966
  %cmp90 = icmp eq i32 %106, 4, !dbg !5968
  br i1 %cmp90, label %if.then92, label %if.end112, !dbg !5969

if.then92:                                        ; preds = %while.end89
  %107 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5970
  %zisofs93 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %107, i32 0, i32 27, !dbg !5972
  %block_pointers_idx = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs93, i32 0, i32 6, !dbg !5973
  %108 = load i32, i32* %block_pointers_idx, align 4, !dbg !5974
  %inc = add nsw i32 %108, 1, !dbg !5974
  store i32 %inc, i32* %block_pointers_idx, align 4, !dbg !5974
  %109 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5975
  %zisofs94 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %109, i32 0, i32 27, !dbg !5976
  %block_pointers_idx95 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs94, i32 0, i32 6, !dbg !5977
  %110 = load i32, i32* %block_pointers_idx95, align 4, !dbg !5977
  %idxprom = sext i32 %110 to i64, !dbg !5978
  %111 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5978
  %zisofs96 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %111, i32 0, i32 27, !dbg !5979
  %block_pointers = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs96, i32 0, i32 3, !dbg !5980
  %112 = load i32*, i32** %block_pointers, align 8, !dbg !5980
  %arrayidx = getelementptr inbounds i32, i32* %112, i64 %idxprom, !dbg !5978
  %113 = bitcast i32* %arrayidx to i8*, !dbg !5981
  %114 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5982
  %zisofs97 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %114, i32 0, i32 27, !dbg !5983
  %total_size98 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs97, i32 0, i32 7, !dbg !5984
  %115 = load i64, i64* %total_size98, align 8, !dbg !5984
  %conv99 = trunc i64 %115 to i32, !dbg !5985
  call void @archive_le32enc(i8* %113, i32 %conv99), !dbg !5986
  %116 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !5987
  %call100 = call i32 @zisofs_init_zstream(%struct.archive_write* %116), !dbg !5988
  store i32 %call100, i32* %r, align 4, !dbg !5989
  %117 = load i32, i32* %r, align 4, !dbg !5990
  %cmp101 = icmp ne i32 %117, 0, !dbg !5992
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !5993

if.then103:                                       ; preds = %if.then92
  store i32 -30, i32* %retval, align 4, !dbg !5994
  br label %return, !dbg !5994

if.end104:                                        ; preds = %if.then92
  %118 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !5995
  %zisofs105 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %118, i32 0, i32 27, !dbg !5996
  %119 = bitcast %struct.anon.6* %zisofs105 to i8*, !dbg !5997
  %bf.load106 = load i8, i8* %119, align 8, !dbg !5998
  %bf.clear107 = and i8 %bf.load106, -5, !dbg !5998
  %bf.set = or i8 %bf.clear107, 4, !dbg !5998
  store i8 %bf.set, i8* %119, align 8, !dbg !5998
  %120 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !5999
  %cur_content108 = getelementptr inbounds %struct.isofile, %struct.isofile* %120, i32 0, i32 11, !dbg !6000
  %121 = load %struct.content*, %struct.content** %cur_content108, align 8, !dbg !6000
  %size109 = getelementptr inbounds %struct.content, %struct.content* %121, i32 0, i32 1, !dbg !6001
  %122 = load i64, i64* %size109, align 8, !dbg !6001
  %123 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6002
  %zisofs110 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %123, i32 0, i32 27, !dbg !6003
  %block_offset111 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs110, i32 0, i32 8, !dbg !6004
  store i64 %122, i64* %block_offset111, align 8, !dbg !6005
  br label %if.end112, !dbg !6006

if.end112:                                        ; preds = %if.end104, %while.end89
  br label %do.cond, !dbg !6007

do.cond:                                          ; preds = %if.end112
  %124 = load i64, i64* %s.addr, align 8, !dbg !6008
  %tobool113 = icmp ne i64 %124, 0, !dbg !6010
  br i1 %tobool113, label %do.body, label %do.end, !dbg !6010

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !6011
  br label %return, !dbg !6011

return:                                           ; preds = %do.end, %if.then103, %sw.default, %if.then74, %if.then48
  %125 = load i32, i32* %retval, align 4, !dbg !6012
  ret i32 %125, !dbg !6012
}

; Function Attrs: nounwind uwtable
define internal i32 @wb_write_to_temp(%struct.archive_write* %a, i8* %buff, i64 %s) #0 !dbg !643 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %buff.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %xp = alloca i8*, align 8
  %xs = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %size = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6013, metadata !986), !dbg !6014
  store i8* %buff, i8** %buff.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buff.addr, metadata !6015, metadata !986), !dbg !6016
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !6017, metadata !986), !dbg !6018
  call void @llvm.dbg.declare(metadata i8** %xp, metadata !6019, metadata !986), !dbg !6020
  %0 = load i8*, i8** %buff.addr, align 8, !dbg !6021
  store i8* %0, i8** %xp, align 8, !dbg !6020
  call void @llvm.dbg.declare(metadata i64* %xs, metadata !6022, metadata !986), !dbg !6023
  %1 = load i64, i64* %s.addr, align 8, !dbg !6024
  store i64 %1, i64* %xs, align 8, !dbg !6023
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6025
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %2, i32 0, i32 14, !dbg !6025
  %3 = load i8*, i8** %format_data, align 8, !dbg !6025
  %4 = bitcast i8* %3 to %struct.iso9660*, !dbg !6025
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 31, !dbg !6025
  %5 = load i64, i64* %wbuff_remaining, align 8, !dbg !6025
  %cmp = icmp eq i64 %5, 65536, !dbg !6027
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !6028

land.lhs.true:                                    ; preds = %entry
  %6 = load i64, i64* %s.addr, align 8, !dbg !6029
  %cmp1 = icmp ugt i64 %6, 16384, !dbg !6031
  br i1 %cmp1, label %if.then, label %if.end10, !dbg !6032

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6033, metadata !986), !dbg !6035
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6036
  %format_data2 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %7, i32 0, i32 14, !dbg !6037
  %8 = load i8*, i8** %format_data2, align 8, !dbg !6037
  %9 = bitcast i8* %8 to %struct.iso9660*, !dbg !6038
  store %struct.iso9660* %9, %struct.iso9660** %iso9660, align 8, !dbg !6035
  %10 = load i64, i64* %s.addr, align 8, !dbg !6039
  %rem = urem i64 %10, 2048, !dbg !6040
  store i64 %rem, i64* %xs, align 8, !dbg !6041
  %11 = load i64, i64* %s.addr, align 8, !dbg !6042
  %12 = load i64, i64* %xs, align 8, !dbg !6043
  %sub = sub i64 %11, %12, !dbg !6044
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6045
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 33, !dbg !6046
  %14 = load i64, i64* %wbuff_offset, align 8, !dbg !6047
  %add = add i64 %14, %sub, !dbg !6047
  store i64 %add, i64* %wbuff_offset, align 8, !dbg !6047
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6048
  %16 = load i8*, i8** %buff.addr, align 8, !dbg !6050
  %17 = load i64, i64* %s.addr, align 8, !dbg !6051
  %18 = load i64, i64* %xs, align 8, !dbg !6052
  %sub3 = sub i64 %17, %18, !dbg !6053
  %call = call i32 @write_to_temp(%struct.archive_write* %15, i8* %16, i64 %sub3), !dbg !6054
  %cmp4 = icmp ne i32 %call, 0, !dbg !6055
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6056

if.then5:                                         ; preds = %if.then
  store i32 -30, i32* %retval, align 4, !dbg !6057
  br label %return, !dbg !6057

if.end:                                           ; preds = %if.then
  %19 = load i64, i64* %xs, align 8, !dbg !6058
  %cmp6 = icmp eq i64 %19, 0, !dbg !6060
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6061

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6062
  br label %return, !dbg !6062

if.end8:                                          ; preds = %if.end
  %20 = load i64, i64* %s.addr, align 8, !dbg !6063
  %21 = load i64, i64* %xs, align 8, !dbg !6064
  %sub9 = sub i64 %20, %21, !dbg !6065
  %22 = load i8*, i8** %xp, align 8, !dbg !6066
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %sub9, !dbg !6066
  store i8* %add.ptr, i8** %xp, align 8, !dbg !6066
  br label %if.end10, !dbg !6067

if.end10:                                         ; preds = %if.end8, %land.lhs.true, %entry
  br label %while.cond, !dbg !6068

while.cond:                                       ; preds = %if.end22, %if.end10
  %23 = load i64, i64* %xs, align 8, !dbg !6069
  %tobool = icmp ne i64 %23, 0, !dbg !6071
  br i1 %tobool, label %while.body, label %while.end, !dbg !6071

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6072, metadata !986), !dbg !6074
  %24 = load i64, i64* %xs, align 8, !dbg !6075
  store i64 %24, i64* %size, align 8, !dbg !6074
  %25 = load i64, i64* %size, align 8, !dbg !6076
  %26 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6078
  %format_data11 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %26, i32 0, i32 14, !dbg !6078
  %27 = load i8*, i8** %format_data11, align 8, !dbg !6078
  %28 = bitcast i8* %27 to %struct.iso9660*, !dbg !6078
  %wbuff_remaining12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 31, !dbg !6078
  %29 = load i64, i64* %wbuff_remaining12, align 8, !dbg !6078
  %cmp13 = icmp ugt i64 %25, %29, !dbg !6079
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !6080

if.then14:                                        ; preds = %while.body
  %30 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6081
  %format_data15 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %30, i32 0, i32 14, !dbg !6081
  %31 = load i8*, i8** %format_data15, align 8, !dbg !6081
  %32 = bitcast i8* %31 to %struct.iso9660*, !dbg !6081
  %wbuff_remaining16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 31, !dbg !6081
  %33 = load i64, i64* %wbuff_remaining16, align 8, !dbg !6081
  store i64 %33, i64* %size, align 8, !dbg !6082
  br label %if.end17, !dbg !6083

if.end17:                                         ; preds = %if.then14, %while.body
  %34 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6084
  %call18 = call i8* @wb_buffptr(%struct.archive_write* %34), !dbg !6085
  %35 = load i8*, i8** %xp, align 8, !dbg !6086
  %36 = load i64, i64* %size, align 8, !dbg !6087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call18, i8* %35, i64 %36, i32 1, i1 false), !dbg !6088
  %37 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6090
  %38 = load i64, i64* %size, align 8, !dbg !6092
  %call19 = call i32 @wb_consume(%struct.archive_write* %37, i64 %38), !dbg !6093
  %cmp20 = icmp ne i32 %call19, 0, !dbg !6094
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6095

if.then21:                                        ; preds = %if.end17
  store i32 -30, i32* %retval, align 4, !dbg !6096
  br label %return, !dbg !6096

if.end22:                                         ; preds = %if.end17
  %39 = load i64, i64* %size, align 8, !dbg !6097
  %40 = load i64, i64* %xs, align 8, !dbg !6098
  %sub23 = sub i64 %40, %39, !dbg !6098
  store i64 %sub23, i64* %xs, align 8, !dbg !6098
  %41 = load i64, i64* %size, align 8, !dbg !6099
  %42 = load i8*, i8** %xp, align 8, !dbg !6100
  %add.ptr24 = getelementptr inbounds i8, i8* %42, i64 %41, !dbg !6100
  store i8* %add.ptr24, i8** %xp, align 8, !dbg !6100
  br label %while.cond, !dbg !6101

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !6103
  br label %return, !dbg !6103

return:                                           ; preds = %while.end, %if.then21, %if.then7, %if.then5
  %43 = load i32, i32* %retval, align 4, !dbg !6104
  ret i32 %43, !dbg !6104
}

; Function Attrs: nounwind uwtable
define internal i32 @wb_write_padding_to_temp(%struct.archive_write* %a, i64 %csize) #0 !dbg !644 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %csize.addr = alloca i64, align 8
  %ns = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6105, metadata !986), !dbg !6106
  store i64 %csize, i64* %csize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %csize.addr, metadata !6107, metadata !986), !dbg !6108
  call void @llvm.dbg.declare(metadata i64* %ns, metadata !6109, metadata !986), !dbg !6110
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6111, metadata !986), !dbg !6112
  %0 = load i64, i64* %csize.addr, align 8, !dbg !6113
  %rem = srem i64 %0, 2048, !dbg !6114
  store i64 %rem, i64* %ns, align 8, !dbg !6115
  %1 = load i64, i64* %ns, align 8, !dbg !6116
  %cmp = icmp ne i64 %1, 0, !dbg !6118
  br i1 %cmp, label %if.then, label %if.else, !dbg !6119

if.then:                                          ; preds = %entry
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6120
  %3 = load i64, i64* %ns, align 8, !dbg !6121
  %sub = sub i64 2048, %3, !dbg !6122
  %call = call i32 @write_null(%struct.archive_write* %2, i64 %sub), !dbg !6123
  store i32 %call, i32* %ret, align 4, !dbg !6124
  br label %if.end, !dbg !6125

if.else:                                          ; preds = %entry
  store i32 0, i32* %ret, align 4, !dbg !6126
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %ret, align 4, !dbg !6127
  ret i32 %4, !dbg !6128
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @archive_le32dec(i8* %pp) #7 !dbg !636 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p3 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !6129, metadata !986), !dbg !6130
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6131, metadata !986), !dbg !6132
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !6133
  store i8* %0, i8** %p, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !6134, metadata !986), !dbg !6135
  %1 = load i8*, i8** %p, align 8, !dbg !6136
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 3, !dbg !6136
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6136
  %conv = zext i8 %2 to i32, !dbg !6136
  store i32 %conv, i32* %p3, align 4, !dbg !6135
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !6137, metadata !986), !dbg !6138
  %3 = load i8*, i8** %p, align 8, !dbg !6139
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 2, !dbg !6139
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !6139
  %conv2 = zext i8 %4 to i32, !dbg !6139
  store i32 %conv2, i32* %p2, align 4, !dbg !6138
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !6140, metadata !986), !dbg !6141
  %5 = load i8*, i8** %p, align 8, !dbg !6142
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6142
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !6142
  %conv4 = zext i8 %6 to i32, !dbg !6142
  store i32 %conv4, i32* %p1, align 4, !dbg !6141
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !6143, metadata !986), !dbg !6144
  %7 = load i8*, i8** %p, align 8, !dbg !6145
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !6145
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !6145
  %conv6 = zext i8 %8 to i32, !dbg !6145
  store i32 %conv6, i32* %p0, align 4, !dbg !6144
  %9 = load i32, i32* %p3, align 4, !dbg !6146
  %shl = shl i32 %9, 24, !dbg !6147
  %10 = load i32, i32* %p2, align 4, !dbg !6148
  %shl7 = shl i32 %10, 16, !dbg !6149
  %or = or i32 %shl, %shl7, !dbg !6150
  %11 = load i32, i32* %p1, align 4, !dbg !6151
  %shl8 = shl i32 %11, 8, !dbg !6152
  %or9 = or i32 %or, %shl8, !dbg !6153
  %12 = load i32, i32* %p0, align 4, !dbg !6154
  %or10 = or i32 %or9, %12, !dbg !6155
  ret i32 %or10, !dbg !6156
}

; Function Attrs: nounwind uwtable
define internal i32 @wb_set_offset(%struct.archive_write* %a, i64 %off) #0 !dbg !640 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %off.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %used = alloca i64, align 8
  %ext_bytes = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6157, metadata !986), !dbg !6158
  store i64 %off, i64* %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %off.addr, metadata !6159, metadata !986), !dbg !6160
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6161, metadata !986), !dbg !6162
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6163
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !6164
  %1 = load i8*, i8** %format_data, align 8, !dbg !6164
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !6165
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !6162
  call void @llvm.dbg.declare(metadata i64* %used, metadata !6166, metadata !986), !dbg !6167
  call void @llvm.dbg.declare(metadata i64* %ext_bytes, metadata !6168, metadata !986), !dbg !6169
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6170
  %wbuff_type = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 32, !dbg !6172
  %4 = load i32, i32* %wbuff_type, align 8, !dbg !6172
  %cmp = icmp ne i32 %4, 1, !dbg !6173
  br i1 %cmp, label %if.then, label %if.end, !dbg !6174

if.then:                                          ; preds = %entry
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6175
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %5, i32 0, i32 0, !dbg !6177
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.61, i32 0, i32 0)), !dbg !6178
  store i32 -30, i32* %retval, align 4, !dbg !6179
  br label %return, !dbg !6179

if.end:                                           ; preds = %entry
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6180
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 31, !dbg !6181
  %7 = load i64, i64* %wbuff_remaining, align 8, !dbg !6181
  %sub = sub i64 65536, %7, !dbg !6182
  store i64 %sub, i64* %used, align 8, !dbg !6183
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6184
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 33, !dbg !6186
  %9 = load i64, i64* %wbuff_offset, align 8, !dbg !6186
  %10 = load i64, i64* %used, align 8, !dbg !6187
  %add = add nsw i64 %9, %10, !dbg !6188
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6189
  %wbuff_tail = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 35, !dbg !6190
  %12 = load i64, i64* %wbuff_tail, align 8, !dbg !6190
  %cmp1 = icmp sgt i64 %add, %12, !dbg !6191
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6192

if.then2:                                         ; preds = %if.end
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6193
  %wbuff_offset3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 33, !dbg !6194
  %14 = load i64, i64* %wbuff_offset3, align 8, !dbg !6194
  %15 = load i64, i64* %used, align 8, !dbg !6195
  %add4 = add nsw i64 %14, %15, !dbg !6196
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6197
  %wbuff_tail5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 35, !dbg !6198
  store i64 %add4, i64* %wbuff_tail5, align 8, !dbg !6199
  br label %if.end6, !dbg !6197

if.end6:                                          ; preds = %if.then2, %if.end
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6200
  %wbuff_offset7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 33, !dbg !6202
  %18 = load i64, i64* %wbuff_offset7, align 8, !dbg !6202
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6203
  %wbuff_written = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 34, !dbg !6204
  %20 = load i64, i64* %wbuff_written, align 8, !dbg !6204
  %cmp8 = icmp slt i64 %18, %20, !dbg !6205
  br i1 %cmp8, label %if.then9, label %if.end19, !dbg !6206

if.then9:                                         ; preds = %if.end6
  %21 = load i64, i64* %used, align 8, !dbg !6207
  %cmp10 = icmp sgt i64 %21, 0, !dbg !6210
  br i1 %cmp10, label %land.lhs.true, label %if.end13, !dbg !6211

land.lhs.true:                                    ; preds = %if.then9
  %22 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6212
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6213
  %wbuff = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 30, !dbg !6214
  %arraydecay = getelementptr inbounds [65536 x i8], [65536 x i8]* %wbuff, i32 0, i32 0, !dbg !6213
  %24 = load i64, i64* %used, align 8, !dbg !6215
  %call = call i32 @write_to_temp(%struct.archive_write* %22, i8* %arraydecay, i64 %24), !dbg !6216
  %cmp11 = icmp ne i32 %call, 0, !dbg !6217
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6218

if.then12:                                        ; preds = %land.lhs.true
  store i32 -30, i32* %retval, align 4, !dbg !6220
  br label %return, !dbg !6220

if.end13:                                         ; preds = %land.lhs.true, %if.then9
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6221
  %wbuff_written14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 34, !dbg !6222
  %26 = load i64, i64* %wbuff_written14, align 8, !dbg !6222
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6223
  %wbuff_offset15 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 33, !dbg !6224
  store i64 %26, i64* %wbuff_offset15, align 8, !dbg !6225
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6226
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 1, !dbg !6227
  %29 = load i32, i32* %temp_fd, align 8, !dbg !6227
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6228
  %wbuff_offset16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 33, !dbg !6229
  %31 = load i64, i64* %wbuff_offset16, align 8, !dbg !6229
  %call17 = call i64 @lseek(i32 %29, i64 %31, i32 0) #8, !dbg !6230
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6231
  %wbuff_remaining18 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 31, !dbg !6232
  store i64 65536, i64* %wbuff_remaining18, align 8, !dbg !6233
  store i64 0, i64* %used, align 8, !dbg !6234
  br label %if.end19, !dbg !6235

if.end19:                                         ; preds = %if.end13, %if.end6
  %33 = load i64, i64* %off.addr, align 8, !dbg !6236
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6238
  %wbuff_offset20 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 33, !dbg !6239
  %35 = load i64, i64* %wbuff_offset20, align 8, !dbg !6239
  %cmp21 = icmp slt i64 %33, %35, !dbg !6240
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !6241

if.then22:                                        ; preds = %if.end19
  %36 = load i64, i64* %used, align 8, !dbg !6242
  %cmp23 = icmp sgt i64 %36, 0, !dbg !6245
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !6246

if.then24:                                        ; preds = %if.then22
  %37 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6247
  %call25 = call i32 @wb_write_out(%struct.archive_write* %37), !dbg !6250
  %cmp26 = icmp ne i32 %call25, 0, !dbg !6251
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6252

if.then27:                                        ; preds = %if.then24
  store i32 -30, i32* %retval, align 4, !dbg !6253
  br label %return, !dbg !6253

if.end28:                                         ; preds = %if.then24
  br label %if.end29, !dbg !6254

if.end29:                                         ; preds = %if.end28, %if.then22
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6255
  %temp_fd30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 1, !dbg !6256
  %39 = load i32, i32* %temp_fd30, align 8, !dbg !6256
  %40 = load i64, i64* %off.addr, align 8, !dbg !6257
  %call31 = call i64 @lseek(i32 %39, i64 %40, i32 0) #8, !dbg !6258
  %41 = load i64, i64* %off.addr, align 8, !dbg !6259
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6260
  %wbuff_offset32 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 33, !dbg !6261
  store i64 %41, i64* %wbuff_offset32, align 8, !dbg !6262
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6263
  %wbuff_remaining33 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 31, !dbg !6264
  store i64 65536, i64* %wbuff_remaining33, align 8, !dbg !6265
  br label %if.end66, !dbg !6266

if.else:                                          ; preds = %if.end19
  %44 = load i64, i64* %off.addr, align 8, !dbg !6267
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6270
  %wbuff_tail34 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 35, !dbg !6271
  %46 = load i64, i64* %wbuff_tail34, align 8, !dbg !6271
  %cmp35 = icmp sle i64 %44, %46, !dbg !6272
  br i1 %cmp35, label %if.then36, label %if.else41, !dbg !6267

if.then36:                                        ; preds = %if.else
  %47 = load i64, i64* %off.addr, align 8, !dbg !6273
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6275
  %wbuff_offset37 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 33, !dbg !6276
  %49 = load i64, i64* %wbuff_offset37, align 8, !dbg !6276
  %sub38 = sub nsw i64 %47, %49, !dbg !6277
  %sub39 = sub i64 65536, %sub38, !dbg !6278
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6279
  %wbuff_remaining40 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 31, !dbg !6280
  store i64 %sub39, i64* %wbuff_remaining40, align 8, !dbg !6281
  br label %if.end65, !dbg !6282

if.else41:                                        ; preds = %if.else
  %51 = load i64, i64* %off.addr, align 8, !dbg !6283
  %52 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6285
  %wbuff_tail42 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %52, i32 0, i32 35, !dbg !6286
  %53 = load i64, i64* %wbuff_tail42, align 8, !dbg !6286
  %sub43 = sub nsw i64 %51, %53, !dbg !6287
  store i64 %sub43, i64* %ext_bytes, align 8, !dbg !6288
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6289
  %wbuff_tail44 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 35, !dbg !6290
  %55 = load i64, i64* %wbuff_tail44, align 8, !dbg !6290
  %56 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6291
  %wbuff_offset45 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %56, i32 0, i32 33, !dbg !6292
  %57 = load i64, i64* %wbuff_offset45, align 8, !dbg !6292
  %sub46 = sub nsw i64 %55, %57, !dbg !6293
  %sub47 = sub i64 65536, %sub46, !dbg !6294
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6295
  %wbuff_remaining48 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 31, !dbg !6296
  store i64 %sub47, i64* %wbuff_remaining48, align 8, !dbg !6297
  br label %while.cond, !dbg !6298

while.cond:                                       ; preds = %if.end55, %if.else41
  %59 = load i64, i64* %ext_bytes, align 8, !dbg !6299
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6301
  %wbuff_remaining49 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 31, !dbg !6302
  %61 = load i64, i64* %wbuff_remaining49, align 8, !dbg !6302
  %cmp50 = icmp sge i64 %59, %61, !dbg !6303
  br i1 %cmp50, label %while.body, label %while.end, !dbg !6304

while.body:                                       ; preds = %while.cond
  %62 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6305
  %63 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6308
  %wbuff_remaining51 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %63, i32 0, i32 31, !dbg !6309
  %64 = load i64, i64* %wbuff_remaining51, align 8, !dbg !6309
  %call52 = call i32 @write_null(%struct.archive_write* %62, i64 %64), !dbg !6310
  %cmp53 = icmp ne i32 %call52, 0, !dbg !6311
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !6312

if.then54:                                        ; preds = %while.body
  store i32 -30, i32* %retval, align 4, !dbg !6313
  br label %return, !dbg !6313

if.end55:                                         ; preds = %while.body
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6314
  %wbuff_remaining56 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 31, !dbg !6315
  %66 = load i64, i64* %wbuff_remaining56, align 8, !dbg !6315
  %67 = load i64, i64* %ext_bytes, align 8, !dbg !6316
  %sub57 = sub i64 %67, %66, !dbg !6316
  store i64 %sub57, i64* %ext_bytes, align 8, !dbg !6316
  br label %while.cond, !dbg !6317

while.end:                                        ; preds = %while.cond
  %68 = load i64, i64* %ext_bytes, align 8, !dbg !6319
  %cmp58 = icmp sgt i64 %68, 0, !dbg !6321
  br i1 %cmp58, label %if.then59, label %if.end64, !dbg !6322

if.then59:                                        ; preds = %while.end
  %69 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6323
  %70 = load i64, i64* %ext_bytes, align 8, !dbg !6326
  %call60 = call i32 @write_null(%struct.archive_write* %69, i64 %70), !dbg !6327
  %cmp61 = icmp ne i32 %call60, 0, !dbg !6328
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !6329

if.then62:                                        ; preds = %if.then59
  store i32 -30, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

if.end63:                                         ; preds = %if.then59
  br label %if.end64, !dbg !6331

if.end64:                                         ; preds = %if.end63, %while.end
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then36
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end29
  store i32 0, i32* %retval, align 4, !dbg !6332
  br label %return, !dbg !6332

return:                                           ; preds = %if.end66, %if.then62, %if.then54, %if.then27, %if.then12, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !6333
  ret i32 %71, !dbg !6333
}

declare i32 @cm_zlib_deflate(%struct.z_stream_s*, i32) #2

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_finish_entry(%struct.archive_write* %a) #0 !dbg !646 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %buff = alloca [16 x i8], align 16
  %s = alloca i64, align 8
  %tail = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6334, metadata !986), !dbg !6335
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6336, metadata !986), !dbg !6337
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6338
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !6339
  %1 = load i8*, i8** %format_data, align 8, !dbg !6339
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !6338
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !6337
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !6340, metadata !986), !dbg !6341
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6342
  %cur_file = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 2, !dbg !6343
  %4 = load %struct.isofile*, %struct.isofile** %cur_file, align 8, !dbg !6343
  store %struct.isofile* %4, %struct.isofile** %file, align 8, !dbg !6341
  call void @llvm.dbg.declare(metadata [16 x i8]* %buff, metadata !6344, metadata !986), !dbg !6348
  call void @llvm.dbg.declare(metadata i64* %s, metadata !6349, metadata !986), !dbg !6350
  call void @llvm.dbg.declare(metadata i64* %tail, metadata !6351, metadata !986), !dbg !6352
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6353
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 4, !dbg !6354
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6354
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6355
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 27, !dbg !6356
  %total_size = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 7, !dbg !6357
  %8 = load i64, i64* %total_size, align 8, !dbg !6357
  call void @archive_entry_set_size(%struct.archive_entry* %6, i64 %8), !dbg !6358
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6359
  %format_data2 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %9, i32 0, i32 14, !dbg !6359
  %10 = load i8*, i8** %format_data2, align 8, !dbg !6359
  %11 = bitcast i8* %10 to %struct.iso9660*, !dbg !6359
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 33, !dbg !6359
  %12 = load i64, i64* %wbuff_offset, align 8, !dbg !6359
  %add = add nsw i64 %12, 65536, !dbg !6359
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6359
  %format_data3 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %13, i32 0, i32 14, !dbg !6359
  %14 = load i8*, i8** %format_data3, align 8, !dbg !6359
  %15 = bitcast i8* %14 to %struct.iso9660*, !dbg !6359
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 31, !dbg !6359
  %16 = load i64, i64* %wbuff_remaining, align 8, !dbg !6359
  %sub = sub i64 %add, %16, !dbg !6359
  store i64 %sub, i64* %tail, align 8, !dbg !6360
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i32 0, i32 0, !dbg !6361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @zisofs_magic, i32 0, i32 0), i64 8, i32 1, i1 false), !dbg !6361
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i32 0, i32 0, !dbg !6362
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay4, i64 8, !dbg !6363
  %17 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6364
  %zisofs5 = getelementptr inbounds %struct.isofile, %struct.isofile* %17, i32 0, i32 14, !dbg !6365
  %uncompressed_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs5, i32 0, i32 2, !dbg !6366
  %18 = load i32, i32* %uncompressed_size, align 4, !dbg !6366
  call void @set_num_731(i8* %add.ptr, i32 %18), !dbg !6367
  %19 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6368
  %zisofs6 = getelementptr inbounds %struct.isofile, %struct.isofile* %19, i32 0, i32 14, !dbg !6369
  %header_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs6, i32 0, i32 0, !dbg !6370
  %20 = load i8, i8* %header_size, align 8, !dbg !6370
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i64 0, i64 12, !dbg !6371
  store i8 %20, i8* %arrayidx, align 4, !dbg !6372
  %21 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6373
  %zisofs7 = getelementptr inbounds %struct.isofile, %struct.isofile* %21, i32 0, i32 14, !dbg !6374
  %log2_bs = getelementptr inbounds %struct.anon, %struct.anon* %zisofs7, i32 0, i32 1, !dbg !6375
  %22 = load i8, i8* %log2_bs, align 1, !dbg !6375
  %arrayidx8 = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i64 0, i64 13, !dbg !6376
  store i8 %22, i8* %arrayidx8, align 1, !dbg !6377
  %arrayidx9 = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i64 0, i64 15, !dbg !6378
  store i8 0, i8* %arrayidx9, align 1, !dbg !6379
  %arrayidx10 = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i64 0, i64 14, !dbg !6380
  store i8 0, i8* %arrayidx10, align 2, !dbg !6381
  %23 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6382
  %24 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6383
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 10, !dbg !6384
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 0, !dbg !6385
  %25 = load i64, i64* %offset_of_temp, align 8, !dbg !6385
  %call = call i32 @wb_set_offset(%struct.archive_write* %23, i64 %25), !dbg !6386
  %26 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6387
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %buff, i32 0, i32 0, !dbg !6389
  %call12 = call i32 @wb_write_to_temp(%struct.archive_write* %26, i8* %arraydecay11, i64 16), !dbg !6390
  %cmp = icmp ne i32 %call12, 0, !dbg !6391
  br i1 %cmp, label %if.then, label %if.end, !dbg !6392

if.then:                                          ; preds = %entry
  store i32 -30, i32* %retval, align 4, !dbg !6393
  br label %return, !dbg !6393

if.end:                                           ; preds = %entry
  %27 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6394
  %zisofs13 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %27, i32 0, i32 27, !dbg !6395
  %block_pointers_cnt = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs13, i32 0, i32 5, !dbg !6396
  %28 = load i32, i32* %block_pointers_cnt, align 8, !dbg !6396
  %conv = sext i32 %28 to i64, !dbg !6394
  %mul = mul i64 %conv, 4, !dbg !6397
  store i64 %mul, i64* %s, align 8, !dbg !6398
  %29 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6399
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6401
  %zisofs14 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 27, !dbg !6402
  %block_pointers = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs14, i32 0, i32 3, !dbg !6403
  %31 = load i32*, i32** %block_pointers, align 8, !dbg !6403
  %32 = bitcast i32* %31 to i8*, !dbg !6401
  %33 = load i64, i64* %s, align 8, !dbg !6404
  %call15 = call i32 @wb_write_to_temp(%struct.archive_write* %29, i8* %32, i64 %33), !dbg !6405
  %cmp16 = icmp ne i32 %call15, 0, !dbg !6406
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6407

if.then18:                                        ; preds = %if.end
  store i32 -30, i32* %retval, align 4, !dbg !6408
  br label %return, !dbg !6408

if.end19:                                         ; preds = %if.end
  %34 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6409
  %35 = load i64, i64* %tail, align 8, !dbg !6410
  %call20 = call i32 @wb_set_offset(%struct.archive_write* %34, i64 %35), !dbg !6411
  store i32 0, i32* %retval, align 4, !dbg !6412
  br label %return, !dbg !6412

return:                                           ; preds = %if.end19, %if.then18, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6413
  ret i32 %36, !dbg !6413
}

; Function Attrs: nounwind uwtable
define internal void @isofile_add_data_file(%struct.iso9660* %iso9660, %struct.isofile* %file) #0 !dbg !650 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file.addr = alloca %struct.isofile*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !6414, metadata !986), !dbg !6415
  store %struct.isofile* %file, %struct.isofile** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isofile** %file.addr, metadata !6416, metadata !986), !dbg !6417
  %0 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !6418
  %datanext = getelementptr inbounds %struct.isofile, %struct.isofile* %0, i32 0, i32 1, !dbg !6419
  store %struct.isofile* null, %struct.isofile** %datanext, align 8, !dbg !6420
  %1 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !6421
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !6422
  %data_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 12, !dbg !6423
  %last = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list, i32 0, i32 1, !dbg !6424
  %3 = load %struct.isofile**, %struct.isofile*** %last, align 8, !dbg !6424
  store %struct.isofile* %1, %struct.isofile** %3, align 8, !dbg !6425
  %4 = load %struct.isofile*, %struct.isofile** %file.addr, align 8, !dbg !6426
  %datanext1 = getelementptr inbounds %struct.isofile, %struct.isofile* %4, i32 0, i32 1, !dbg !6427
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !6428
  %data_file_list2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 12, !dbg !6429
  %last3 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list2, i32 0, i32 1, !dbg !6430
  store %struct.isofile** %datanext1, %struct.isofile*** %last3, align 8, !dbg !6431
  ret void, !dbg !6432
}

declare void @archive_entry_set_size(%struct.archive_entry*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_731(i8* %p, i32 %value) #7 !dbg !647 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6433, metadata !986), !dbg !6434
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6435, metadata !986), !dbg !6436
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6437
  %1 = load i32, i32* %value.addr, align 4, !dbg !6438
  call void @archive_le32enc(i8* %0, i32 %1), !dbg !6439
  ret void, !dbg !6440
}

; Function Attrs: nounwind
declare i64 @time(i64*) #3

; Function Attrs: nounwind uwtable
define internal i32 @isoent_find_out_boot_file(%struct.archive_write* %a, %struct.isoent* %rootent) #0 !dbg !652 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %rootent.addr = alloca %struct.isoent*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6441, metadata !986), !dbg !6442
  store %struct.isoent* %rootent, %struct.isoent** %rootent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent.addr, metadata !6443, metadata !986), !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6445, metadata !986), !dbg !6446
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6447
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !6448
  %1 = load i8*, i8** %format_data, align 8, !dbg !6448
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !6447
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !6446
  %3 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !6449
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6450
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 36, !dbg !6451
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 2, !dbg !6452
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename, i32 0, i32 0, !dbg !6453
  %5 = load i8*, i8** %s, align 8, !dbg !6453
  %call = call %struct.isoent* @isoent_find_entry(%struct.isoent* %3, i8* %5), !dbg !6454
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6455
  %el_torito1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 36, !dbg !6456
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito1, i32 0, i32 3, !dbg !6457
  store %struct.isoent* %call, %struct.isoent** %boot, align 8, !dbg !6458
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6459
  %el_torito2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 36, !dbg !6461
  %boot3 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito2, i32 0, i32 3, !dbg !6462
  %8 = load %struct.isoent*, %struct.isoent** %boot3, align 8, !dbg !6462
  %cmp = icmp eq %struct.isoent* %8, null, !dbg !6463
  br i1 %cmp, label %if.then, label %if.end, !dbg !6464

if.then:                                          ; preds = %entry
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6465
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %9, i32 0, i32 0, !dbg !6467
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6468
  %el_torito4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 36, !dbg !6469
  %boot_filename5 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito4, i32 0, i32 2, !dbg !6470
  %s6 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename5, i32 0, i32 0, !dbg !6471
  %11 = load i8*, i8** %s6, align 8, !dbg !6471
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i32 0, i32 0), i8* %11), !dbg !6472
  store i32 -30, i32* %retval, align 4, !dbg !6473
  br label %return, !dbg !6473

if.end:                                           ; preds = %entry
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6474
  %el_torito7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 36, !dbg !6475
  %boot8 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito7, i32 0, i32 3, !dbg !6476
  %13 = load %struct.isoent*, %struct.isoent** %boot8, align 8, !dbg !6476
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 1, !dbg !6477
  %14 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6477
  %boot9 = getelementptr inbounds %struct.isofile, %struct.isofile* %14, i32 0, i32 13, !dbg !6478
  store i32 2, i32* %boot9, align 4, !dbg !6479
  store i32 0, i32* %retval, align 4, !dbg !6480
  br label %return, !dbg !6480

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6481
  ret i32 %15, !dbg !6481
}

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_rewind_boot_file(%struct.archive_write* %a) #0 !dbg !656 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %rbuff = alloca i8*, align 8
  %r = alloca i64, align 8
  %remaining = alloca i64, align 8
  %rbuff_size = alloca i64, align 8
  %zext = alloca %struct.zisofs_extract, align 8
  %read_offset = alloca i64, align 8
  %write_offset = alloca i64, align 8
  %new_offset = alloca i64, align 8
  %fd = alloca i32, align 4
  %ret = alloca i32, align 4
  %rsize = alloca i64, align 8
  %rs = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6482, metadata !986), !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6484, metadata !986), !dbg !6485
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6486
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !6487
  %1 = load i8*, i8** %format_data, align 8, !dbg !6487
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !6486
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !6485
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !6488, metadata !986), !dbg !6489
  call void @llvm.dbg.declare(metadata i8** %rbuff, metadata !6490, metadata !986), !dbg !6491
  call void @llvm.dbg.declare(metadata i64* %r, metadata !6492, metadata !986), !dbg !6493
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !6494, metadata !986), !dbg !6495
  call void @llvm.dbg.declare(metadata i64* %rbuff_size, metadata !6496, metadata !986), !dbg !6497
  call void @llvm.dbg.declare(metadata %struct.zisofs_extract* %zext, metadata !6498, metadata !986), !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %read_offset, metadata !6500, metadata !986), !dbg !6501
  call void @llvm.dbg.declare(metadata i64* %write_offset, metadata !6502, metadata !986), !dbg !6503
  call void @llvm.dbg.declare(metadata i64* %new_offset, metadata !6504, metadata !986), !dbg !6505
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6506, metadata !986), !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6508, metadata !986), !dbg !6509
  store i32 0, i32* %ret, align 4, !dbg !6509
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6510
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 36, !dbg !6511
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 3, !dbg !6512
  %4 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !6512
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 1, !dbg !6513
  %5 = load %struct.isofile*, %struct.isofile** %file1, align 8, !dbg !6513
  store %struct.isofile* %5, %struct.isofile** %file, align 8, !dbg !6514
  %6 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6515
  %zisofs = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 14, !dbg !6517
  %header_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs, i32 0, i32 0, !dbg !6518
  %7 = load i8, i8* %header_size, align 8, !dbg !6518
  %conv = zext i8 %7 to i32, !dbg !6515
  %cmp = icmp eq i32 %conv, 0, !dbg !6519
  br i1 %cmp, label %if.then, label %if.end, !dbg !6520

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6521
  br label %return, !dbg !6521

if.end:                                           ; preds = %entry
  %8 = bitcast %struct.zisofs_extract* %zext to i8*, !dbg !6522
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 192, i32 8, i1 false), !dbg !6522
  %9 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6523
  %zisofs3 = getelementptr inbounds %struct.isofile, %struct.isofile* %9, i32 0, i32 14, !dbg !6524
  %uncompressed_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs3, i32 0, i32 2, !dbg !6525
  %10 = load i32, i32* %uncompressed_size, align 4, !dbg !6525
  %conv4 = zext i32 %10 to i64, !dbg !6523
  %pz_uncompressed_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %zext, i32 0, i32 1, !dbg !6526
  store i64 %conv4, i64* %pz_uncompressed_size, align 8, !dbg !6527
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6528
  %zisofs5 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 14, !dbg !6529
  %log2_bs = getelementptr inbounds %struct.anon, %struct.anon* %zisofs5, i32 0, i32 1, !dbg !6530
  %12 = load i8, i8* %log2_bs, align 1, !dbg !6530
  %conv6 = zext i8 %12 to i32, !dbg !6528
  %pz_log2_bs = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %zext, i32 0, i32 0, !dbg !6531
  store i32 %conv6, i32* %pz_log2_bs, align 8, !dbg !6532
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6533
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 1, !dbg !6534
  %14 = load i32, i32* %temp_fd, align 8, !dbg !6534
  store i32 %14, i32* %fd, align 4, !dbg !6535
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6536
  %format_data7 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %15, i32 0, i32 14, !dbg !6536
  %16 = load i8*, i8** %format_data7, align 8, !dbg !6536
  %17 = bitcast i8* %16 to %struct.iso9660*, !dbg !6536
  %wbuff_offset = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 33, !dbg !6536
  %18 = load i64, i64* %wbuff_offset, align 8, !dbg !6536
  %add = add nsw i64 %18, 65536, !dbg !6536
  %19 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6536
  %format_data8 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %19, i32 0, i32 14, !dbg !6536
  %20 = load i8*, i8** %format_data8, align 8, !dbg !6536
  %21 = bitcast i8* %20 to %struct.iso9660*, !dbg !6536
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 31, !dbg !6536
  %22 = load i64, i64* %wbuff_remaining, align 8, !dbg !6536
  %sub = sub i64 %add, %22, !dbg !6536
  store i64 %sub, i64* %new_offset, align 8, !dbg !6537
  %23 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6538
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %23, i32 0, i32 10, !dbg !6539
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 0, !dbg !6540
  %24 = load i64, i64* %offset_of_temp, align 8, !dbg !6540
  store i64 %24, i64* %read_offset, align 8, !dbg !6541
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6542
  %content9 = getelementptr inbounds %struct.isofile, %struct.isofile* %25, i32 0, i32 10, !dbg !6543
  %size = getelementptr inbounds %struct.content, %struct.content* %content9, i32 0, i32 1, !dbg !6544
  %26 = load i64, i64* %size, align 8, !dbg !6544
  store i64 %26, i64* %remaining, align 8, !dbg !6545
  %27 = load i64, i64* %remaining, align 8, !dbg !6546
  %cmp10 = icmp ugt i64 %27, 32768, !dbg !6548
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6549

if.then12:                                        ; preds = %if.end
  store i64 32768, i64* %rbuff_size, align 8, !dbg !6550
  br label %if.end13, !dbg !6551

if.else:                                          ; preds = %if.end
  %28 = load i64, i64* %remaining, align 8, !dbg !6552
  store i64 %28, i64* %rbuff_size, align 8, !dbg !6553
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %29 = load i64, i64* %rbuff_size, align 8, !dbg !6554
  %call = call noalias i8* @malloc(i64 %29) #8, !dbg !6555
  store i8* %call, i8** %rbuff, align 8, !dbg !6556
  %30 = load i8*, i8** %rbuff, align 8, !dbg !6557
  %cmp14 = icmp eq i8* %30, null, !dbg !6559
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6560

if.then16:                                        ; preds = %if.end13
  %31 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6561
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %31, i32 0, i32 0, !dbg !6563
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !6564
  store i32 -30, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

if.end17:                                         ; preds = %if.end13
  br label %while.cond, !dbg !6566

while.cond:                                       ; preds = %if.end40, %if.end17
  %32 = load i64, i64* %remaining, align 8, !dbg !6567
  %tobool = icmp ne i64 %32, 0, !dbg !6569
  br i1 %tobool, label %while.body, label %while.end, !dbg !6569

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !6570, metadata !986), !dbg !6572
  call void @llvm.dbg.declare(metadata i64* %rs, metadata !6573, metadata !986), !dbg !6574
  %33 = load i32, i32* %fd, align 4, !dbg !6575
  %call18 = call i64 @lseek(i32 %33, i64 0, i32 1) #8, !dbg !6576
  store i64 %call18, i64* %write_offset, align 8, !dbg !6577
  %34 = load i32, i32* %fd, align 4, !dbg !6578
  %35 = load i64, i64* %read_offset, align 8, !dbg !6579
  %call19 = call i64 @lseek(i32 %34, i64 %35, i32 0) #8, !dbg !6580
  %36 = load i64, i64* %rbuff_size, align 8, !dbg !6581
  store i64 %36, i64* %rsize, align 8, !dbg !6582
  %37 = load i64, i64* %rsize, align 8, !dbg !6583
  %38 = load i64, i64* %remaining, align 8, !dbg !6585
  %cmp20 = icmp ugt i64 %37, %38, !dbg !6586
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6587

if.then22:                                        ; preds = %while.body
  %39 = load i64, i64* %remaining, align 8, !dbg !6588
  store i64 %39, i64* %rsize, align 8, !dbg !6589
  br label %if.end23, !dbg !6590

if.end23:                                         ; preds = %if.then22, %while.body
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6591
  %temp_fd24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 1, !dbg !6592
  %41 = load i32, i32* %temp_fd24, align 8, !dbg !6592
  %42 = load i8*, i8** %rbuff, align 8, !dbg !6593
  %43 = load i64, i64* %rsize, align 8, !dbg !6594
  %call25 = call i64 @read(i32 %41, i8* %42, i64 %43), !dbg !6595
  store i64 %call25, i64* %rs, align 8, !dbg !6596
  %44 = load i64, i64* %rs, align 8, !dbg !6597
  %cmp26 = icmp sle i64 %44, 0, !dbg !6599
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !6600

if.then28:                                        ; preds = %if.end23
  %45 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6601
  %archive29 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %45, i32 0, i32 0, !dbg !6603
  %call30 = call i32* @__errno_location() #1, !dbg !6604
  %46 = load i32, i32* %call30, align 4, !dbg !6604
  %47 = load i64, i64* %rs, align 8, !dbg !6605
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive29, i32 %46, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i32 0, i32 0), i64 %47), !dbg !6606
  store i32 -30, i32* %ret, align 4, !dbg !6608
  br label %while.end, !dbg !6609

if.end31:                                         ; preds = %if.end23
  %48 = load i64, i64* %rs, align 8, !dbg !6610
  %49 = load i64, i64* %remaining, align 8, !dbg !6611
  %sub32 = sub i64 %49, %48, !dbg !6611
  store i64 %sub32, i64* %remaining, align 8, !dbg !6611
  %50 = load i64, i64* %rs, align 8, !dbg !6612
  %51 = load i64, i64* %read_offset, align 8, !dbg !6613
  %add33 = add nsw i64 %51, %50, !dbg !6613
  store i64 %add33, i64* %read_offset, align 8, !dbg !6613
  %52 = load i32, i32* %fd, align 4, !dbg !6614
  %53 = load i64, i64* %write_offset, align 8, !dbg !6615
  %call34 = call i64 @lseek(i32 %52, i64 %53, i32 0) #8, !dbg !6616
  %54 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6617
  %55 = load i8*, i8** %rbuff, align 8, !dbg !6618
  %56 = load i64, i64* %rs, align 8, !dbg !6619
  %call35 = call i64 @zisofs_extract(%struct.archive_write* %54, %struct.zisofs_extract* %zext, i8* %55, i64 %56), !dbg !6620
  store i64 %call35, i64* %r, align 8, !dbg !6621
  %57 = load i64, i64* %r, align 8, !dbg !6622
  %cmp36 = icmp slt i64 %57, 0, !dbg !6624
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !6625

if.then38:                                        ; preds = %if.end31
  %58 = load i64, i64* %r, align 8, !dbg !6626
  %conv39 = trunc i64 %58 to i32, !dbg !6628
  store i32 %conv39, i32* %ret, align 4, !dbg !6629
  br label %while.end, !dbg !6630

if.end40:                                         ; preds = %if.end31
  br label %while.cond, !dbg !6631

while.end:                                        ; preds = %if.then38, %if.then28, %while.cond
  %59 = load i32, i32* %ret, align 4, !dbg !6633
  %cmp41 = icmp eq i32 %59, 0, !dbg !6635
  br i1 %cmp41, label %if.then43, label %if.end68, !dbg !6636

if.then43:                                        ; preds = %while.end
  %60 = load i64, i64* %new_offset, align 8, !dbg !6637
  %61 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6639
  %content44 = getelementptr inbounds %struct.isofile, %struct.isofile* %61, i32 0, i32 10, !dbg !6640
  %offset_of_temp45 = getelementptr inbounds %struct.content, %struct.content* %content44, i32 0, i32 0, !dbg !6641
  store i64 %60, i64* %offset_of_temp45, align 8, !dbg !6642
  %62 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6643
  %zisofs46 = getelementptr inbounds %struct.isofile, %struct.isofile* %62, i32 0, i32 14, !dbg !6644
  %uncompressed_size47 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs46, i32 0, i32 2, !dbg !6645
  %63 = load i32, i32* %uncompressed_size47, align 4, !dbg !6645
  %conv48 = zext i32 %63 to i64, !dbg !6643
  %64 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6646
  %content49 = getelementptr inbounds %struct.isofile, %struct.isofile* %64, i32 0, i32 10, !dbg !6647
  %size50 = getelementptr inbounds %struct.content, %struct.content* %content49, i32 0, i32 1, !dbg !6648
  store i64 %conv48, i64* %size50, align 8, !dbg !6649
  %65 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6650
  %entry51 = getelementptr inbounds %struct.isofile, %struct.isofile* %65, i32 0, i32 4, !dbg !6651
  %66 = load %struct.archive_entry*, %struct.archive_entry** %entry51, align 8, !dbg !6651
  %67 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6652
  %content52 = getelementptr inbounds %struct.isofile, %struct.isofile* %67, i32 0, i32 10, !dbg !6653
  %size53 = getelementptr inbounds %struct.content, %struct.content* %content52, i32 0, i32 1, !dbg !6654
  %68 = load i64, i64* %size53, align 8, !dbg !6654
  call void @archive_entry_set_size(%struct.archive_entry* %66, i64 %68), !dbg !6655
  %69 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6656
  %zisofs54 = getelementptr inbounds %struct.isofile, %struct.isofile* %69, i32 0, i32 14, !dbg !6657
  %header_size55 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs54, i32 0, i32 0, !dbg !6658
  store i8 0, i8* %header_size55, align 8, !dbg !6659
  %70 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6660
  %zisofs56 = getelementptr inbounds %struct.isofile, %struct.isofile* %70, i32 0, i32 14, !dbg !6661
  %log2_bs57 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs56, i32 0, i32 1, !dbg !6662
  store i8 0, i8* %log2_bs57, align 1, !dbg !6663
  %71 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6664
  %zisofs58 = getelementptr inbounds %struct.isofile, %struct.isofile* %71, i32 0, i32 14, !dbg !6665
  %uncompressed_size59 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs58, i32 0, i32 2, !dbg !6666
  store i32 0, i32* %uncompressed_size59, align 4, !dbg !6667
  %72 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6668
  %73 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6669
  %content60 = getelementptr inbounds %struct.isofile, %struct.isofile* %73, i32 0, i32 10, !dbg !6670
  %size61 = getelementptr inbounds %struct.content, %struct.content* %content60, i32 0, i32 1, !dbg !6671
  %74 = load i64, i64* %size61, align 8, !dbg !6671
  %call62 = call i32 @wb_write_padding_to_temp(%struct.archive_write* %72, i64 %74), !dbg !6672
  %conv63 = sext i32 %call62 to i64, !dbg !6672
  store i64 %conv63, i64* %r, align 8, !dbg !6673
  %75 = load i64, i64* %r, align 8, !dbg !6674
  %cmp64 = icmp slt i64 %75, 0, !dbg !6676
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !6677

if.then66:                                        ; preds = %if.then43
  store i32 -30, i32* %ret, align 4, !dbg !6678
  br label %if.end67, !dbg !6679

if.end67:                                         ; preds = %if.then66, %if.then43
  br label %if.end68, !dbg !6680

if.end68:                                         ; preds = %if.end67, %while.end
  %76 = load i8*, i8** %rbuff, align 8, !dbg !6681
  call void @free(i8* %76) #8, !dbg !6682
  %block_pointers = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %zext, i32 0, i32 5, !dbg !6683
  %77 = load i8*, i8** %block_pointers, align 8, !dbg !6683
  call void @free(i8* %77) #8, !dbg !6684
  %stream_valid = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %zext, i32 0, i32 11, !dbg !6685
  %78 = load i32, i32* %stream_valid, align 8, !dbg !6685
  %tobool69 = icmp ne i32 %78, 0, !dbg !6687
  br i1 %tobool69, label %land.lhs.true, label %if.end75, !dbg !6688

land.lhs.true:                                    ; preds = %if.end68
  %stream = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %zext, i32 0, i32 10, !dbg !6689
  %call70 = call i32 @cm_zlib_inflateEnd(%struct.z_stream_s* %stream), !dbg !6691
  %cmp71 = icmp ne i32 %call70, 0, !dbg !6692
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !6693

if.then73:                                        ; preds = %land.lhs.true
  %79 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6694
  %archive74 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %79, i32 0, i32 0, !dbg !6696
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive74, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i32 0, i32 0)), !dbg !6697
  store i32 -30, i32* %ret, align 4, !dbg !6698
  br label %if.end75, !dbg !6699

if.end75:                                         ; preds = %if.then73, %land.lhs.true, %if.end68
  %80 = load i32, i32* %ret, align 4, !dbg !6700
  store i32 %80, i32* %retval, align 4, !dbg !6701
  br label %return, !dbg !6701

return:                                           ; preds = %if.end75, %if.then16, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !6702
  ret i32 %81, !dbg !6702
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_create_boot_catalog(%struct.archive_write* %a, %struct.isoent* %rootent) #0 !dbg !677 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %rootent.addr = alloca %struct.isoent*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %isoent = alloca %struct.isoent*, align 8
  %entry1 = alloca %struct.archive_entry*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6703, metadata !986), !dbg !6704
  store %struct.isoent* %rootent, %struct.isoent** %rootent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent.addr, metadata !6705, metadata !986), !dbg !6706
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !6707, metadata !986), !dbg !6708
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6709
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !6710
  %1 = load i8*, i8** %format_data, align 8, !dbg !6710
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !6709
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !6708
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !6711, metadata !986), !dbg !6712
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !6713, metadata !986), !dbg !6714
  call void @llvm.dbg.declare(metadata %struct.archive_entry** %entry1, metadata !6715, metadata !986), !dbg !6716
  %3 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !6717
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6718
  %call = call %struct.isofile* @isofile_new(%struct.archive_write* %4, %struct.archive_entry* null), !dbg !6719
  store %struct.isofile* %call, %struct.isofile** %file, align 8, !dbg !6720
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6721
  %cmp = icmp eq %struct.isofile* %5, null, !dbg !6723
  br i1 %cmp, label %if.then, label %if.end, !dbg !6724

if.then:                                          ; preds = %entry
  %6 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6725
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %6, i32 0, i32 0, !dbg !6727
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !6728
  store i32 -30, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

if.end:                                           ; preds = %entry
  %7 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6730
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %7, i32 0, i32 4, !dbg !6731
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !6731
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6732
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 36, !dbg !6733
  %catalog_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 0, !dbg !6734
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename, i32 0, i32 0, !dbg !6735
  %10 = load i8*, i8** %s, align 8, !dbg !6735
  call void @archive_entry_set_pathname(%struct.archive_entry* %8, i8* %10), !dbg !6736
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6737
  %entry3 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 4, !dbg !6738
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry3, align 8, !dbg !6738
  call void @archive_entry_set_size(%struct.archive_entry* %12, i64 2048), !dbg !6739
  %13 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6740
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 4, !dbg !6741
  %14 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !6741
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6742
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 0, !dbg !6743
  %16 = load i64, i64* %birth_time, align 8, !dbg !6743
  call void @archive_entry_set_mtime(%struct.archive_entry* %14, i64 %16, i64 0), !dbg !6744
  %17 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6745
  %entry5 = getelementptr inbounds %struct.isofile, %struct.isofile* %17, i32 0, i32 4, !dbg !6746
  %18 = load %struct.archive_entry*, %struct.archive_entry** %entry5, align 8, !dbg !6746
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6747
  %birth_time6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 0, !dbg !6748
  %20 = load i64, i64* %birth_time6, align 8, !dbg !6748
  call void @archive_entry_set_atime(%struct.archive_entry* %18, i64 %20, i64 0), !dbg !6749
  %21 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6750
  %entry7 = getelementptr inbounds %struct.isofile, %struct.isofile* %21, i32 0, i32 4, !dbg !6751
  %22 = load %struct.archive_entry*, %struct.archive_entry** %entry7, align 8, !dbg !6751
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6752
  %birth_time8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 0, !dbg !6753
  %24 = load i64, i64* %birth_time8, align 8, !dbg !6753
  call void @archive_entry_set_ctime(%struct.archive_entry* %22, i64 %24, i64 0), !dbg !6754
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6755
  %entry9 = getelementptr inbounds %struct.isofile, %struct.isofile* %25, i32 0, i32 4, !dbg !6756
  %26 = load %struct.archive_entry*, %struct.archive_entry** %entry9, align 8, !dbg !6756
  %call10 = call i32 @getuid() #8, !dbg !6757
  %conv = zext i32 %call10 to i64, !dbg !6757
  call void @archive_entry_set_uid(%struct.archive_entry* %26, i64 %conv), !dbg !6758
  %27 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6760
  %entry11 = getelementptr inbounds %struct.isofile, %struct.isofile* %27, i32 0, i32 4, !dbg !6761
  %28 = load %struct.archive_entry*, %struct.archive_entry** %entry11, align 8, !dbg !6761
  %call12 = call i32 @getgid() #8, !dbg !6762
  %conv13 = zext i32 %call12 to i64, !dbg !6762
  call void @archive_entry_set_gid(%struct.archive_entry* %28, i64 %conv13), !dbg !6763
  %29 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6764
  %entry14 = getelementptr inbounds %struct.isofile, %struct.isofile* %29, i32 0, i32 4, !dbg !6765
  %30 = load %struct.archive_entry*, %struct.archive_entry** %entry14, align 8, !dbg !6765
  call void @archive_entry_set_mode(%struct.archive_entry* %30, i32 33060), !dbg !6766
  %31 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6767
  %entry15 = getelementptr inbounds %struct.isofile, %struct.isofile* %31, i32 0, i32 4, !dbg !6768
  %32 = load %struct.archive_entry*, %struct.archive_entry** %entry15, align 8, !dbg !6768
  call void @archive_entry_set_nlink(%struct.archive_entry* %32, i32 1), !dbg !6769
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6770
  %34 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6772
  %call16 = call i32 @isofile_gen_utility_names(%struct.archive_write* %33, %struct.isofile* %34), !dbg !6773
  %cmp17 = icmp slt i32 %call16, -20, !dbg !6774
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6775

if.then19:                                        ; preds = %if.end
  %35 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6776
  call void @isofile_free(%struct.isofile* %35), !dbg !6778
  store i32 -30, i32* %retval, align 4, !dbg !6779
  br label %return, !dbg !6779

if.end20:                                         ; preds = %if.end
  %36 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6780
  %boot = getelementptr inbounds %struct.isofile, %struct.isofile* %36, i32 0, i32 13, !dbg !6781
  store i32 1, i32* %boot, align 4, !dbg !6782
  %37 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6783
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %37, i32 0, i32 10, !dbg !6784
  %size = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 1, !dbg !6785
  store i64 2048, i64* %size, align 8, !dbg !6786
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6787
  %39 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6788
  call void @isofile_add_entry(%struct.iso9660* %38, %struct.isofile* %39), !dbg !6789
  %40 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !6790
  %call21 = call %struct.isoent* @isoent_new(%struct.isofile* %40), !dbg !6791
  store %struct.isoent* %call21, %struct.isoent** %isoent, align 8, !dbg !6792
  %41 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !6793
  %cmp22 = icmp eq %struct.isoent* %41, null, !dbg !6795
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !6796

if.then24:                                        ; preds = %if.end20
  %42 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6797
  %archive25 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %42, i32 0, i32 0, !dbg !6799
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive25, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !6800
  store i32 -30, i32* %retval, align 4, !dbg !6801
  br label %return, !dbg !6801

if.end26:                                         ; preds = %if.end20
  %43 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !6802
  %virtual = getelementptr inbounds %struct.isoent, %struct.isoent* %43, i32 0, i32 22, !dbg !6803
  %bf.load = load i8, i8* %virtual, align 8, !dbg !6804
  %bf.clear = and i8 %bf.load, -2, !dbg !6804
  %bf.set = or i8 %bf.clear, 1, !dbg !6804
  store i8 %bf.set, i8* %virtual, align 8, !dbg !6804
  %44 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6805
  %call27 = call i32 @isoent_tree(%struct.archive_write* %44, %struct.isoent** %isoent), !dbg !6807
  %cmp28 = icmp ne i32 %call27, 0, !dbg !6808
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6809

if.then30:                                        ; preds = %if.end26
  store i32 -30, i32* %retval, align 4, !dbg !6810
  br label %return, !dbg !6810

if.end31:                                         ; preds = %if.end26
  %45 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !6811
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6812
  %el_torito32 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 36, !dbg !6813
  %catalog = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito32, i32 0, i32 1, !dbg !6814
  store %struct.isoent* %45, %struct.isoent** %catalog, align 8, !dbg !6815
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6816
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 37, !dbg !6817
  %48 = bitcast %struct.iso_option* %opt to i32*, !dbg !6818
  %bf.load33 = load i32, i32* %48, align 8, !dbg !6818
  %bf.lshr = lshr i32 %bf.load33, 9, !dbg !6818
  %bf.clear34 = and i32 %bf.lshr, 3, !dbg !6818
  switch i32 %bf.clear34, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb63
    i32 3, label %sw.bb66
    i32 2, label %sw.bb69
  ], !dbg !6819

sw.default:                                       ; preds = %if.end31
  br label %sw.bb, !dbg !6820

sw.bb:                                            ; preds = %if.end31, %sw.default
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6821
  %el_torito35 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 36, !dbg !6823
  %boot36 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito35, i32 0, i32 3, !dbg !6824
  %50 = load %struct.isoent*, %struct.isoent** %boot36, align 8, !dbg !6824
  %file37 = getelementptr inbounds %struct.isoent, %struct.isoent* %50, i32 0, i32 1, !dbg !6825
  %51 = load %struct.isofile*, %struct.isofile** %file37, align 8, !dbg !6825
  %entry38 = getelementptr inbounds %struct.isofile, %struct.isofile* %51, i32 0, i32 4, !dbg !6826
  %52 = load %struct.archive_entry*, %struct.archive_entry** %entry38, align 8, !dbg !6826
  store %struct.archive_entry* %52, %struct.archive_entry** %entry1, align 8, !dbg !6827
  %53 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6828
  %call39 = call i64 @archive_entry_size(%struct.archive_entry* %53), !dbg !6830
  %cmp40 = icmp eq i64 %call39, 1228800, !dbg !6831
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !6832

if.then42:                                        ; preds = %sw.bb
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6833
  %el_torito43 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 36, !dbg !6834
  %media_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito43, i32 0, i32 6, !dbg !6835
  store i8 1, i8* %media_type, align 8, !dbg !6836
  br label %if.end62, !dbg !6833

if.else:                                          ; preds = %sw.bb
  %55 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6837
  %call44 = call i64 @archive_entry_size(%struct.archive_entry* %55), !dbg !6839
  %cmp45 = icmp eq i64 %call44, 1474560, !dbg !6840
  br i1 %cmp45, label %if.then47, label %if.else50, !dbg !6841

if.then47:                                        ; preds = %if.else
  %56 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6842
  %el_torito48 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %56, i32 0, i32 36, !dbg !6843
  %media_type49 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito48, i32 0, i32 6, !dbg !6844
  store i8 2, i8* %media_type49, align 8, !dbg !6845
  br label %if.end61, !dbg !6842

if.else50:                                        ; preds = %if.else
  %57 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6846
  %call51 = call i64 @archive_entry_size(%struct.archive_entry* %57), !dbg !6848
  %cmp52 = icmp eq i64 %call51, 2949120, !dbg !6849
  br i1 %cmp52, label %if.then54, label %if.else57, !dbg !6850

if.then54:                                        ; preds = %if.else50
  %58 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6851
  %el_torito55 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %58, i32 0, i32 36, !dbg !6852
  %media_type56 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito55, i32 0, i32 6, !dbg !6853
  store i8 3, i8* %media_type56, align 8, !dbg !6854
  br label %if.end60, !dbg !6851

if.else57:                                        ; preds = %if.else50
  %59 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6855
  %el_torito58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %59, i32 0, i32 36, !dbg !6856
  %media_type59 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito58, i32 0, i32 6, !dbg !6857
  store i8 0, i8* %media_type59, align 8, !dbg !6858
  br label %if.end60

if.end60:                                         ; preds = %if.else57, %if.then54
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then47
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then42
  br label %sw.epilog, !dbg !6859

sw.bb63:                                          ; preds = %if.end31
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6860
  %el_torito64 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 36, !dbg !6861
  %media_type65 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito64, i32 0, i32 6, !dbg !6862
  store i8 0, i8* %media_type65, align 8, !dbg !6863
  br label %sw.epilog, !dbg !6864

sw.bb66:                                          ; preds = %if.end31
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6865
  %el_torito67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 36, !dbg !6866
  %media_type68 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito67, i32 0, i32 6, !dbg !6867
  store i8 4, i8* %media_type68, align 8, !dbg !6868
  br label %sw.epilog, !dbg !6869

sw.bb69:                                          ; preds = %if.end31
  %62 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6870
  %el_torito70 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %62, i32 0, i32 36, !dbg !6871
  %boot71 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito70, i32 0, i32 3, !dbg !6872
  %63 = load %struct.isoent*, %struct.isoent** %boot71, align 8, !dbg !6872
  %file72 = getelementptr inbounds %struct.isoent, %struct.isoent* %63, i32 0, i32 1, !dbg !6873
  %64 = load %struct.isofile*, %struct.isofile** %file72, align 8, !dbg !6873
  %entry73 = getelementptr inbounds %struct.isofile, %struct.isofile* %64, i32 0, i32 4, !dbg !6874
  %65 = load %struct.archive_entry*, %struct.archive_entry** %entry73, align 8, !dbg !6874
  store %struct.archive_entry* %65, %struct.archive_entry** %entry1, align 8, !dbg !6875
  %66 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6876
  %call74 = call i64 @archive_entry_size(%struct.archive_entry* %66), !dbg !6878
  %cmp75 = icmp sle i64 %call74, 1228800, !dbg !6879
  br i1 %cmp75, label %if.then77, label %if.else80, !dbg !6880

if.then77:                                        ; preds = %sw.bb69
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6881
  %el_torito78 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 36, !dbg !6882
  %media_type79 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito78, i32 0, i32 6, !dbg !6883
  store i8 1, i8* %media_type79, align 8, !dbg !6884
  br label %if.end100, !dbg !6881

if.else80:                                        ; preds = %sw.bb69
  %68 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6885
  %call81 = call i64 @archive_entry_size(%struct.archive_entry* %68), !dbg !6887
  %cmp82 = icmp sle i64 %call81, 1474560, !dbg !6888
  br i1 %cmp82, label %if.then84, label %if.else87, !dbg !6889

if.then84:                                        ; preds = %if.else80
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6890
  %el_torito85 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 36, !dbg !6891
  %media_type86 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito85, i32 0, i32 6, !dbg !6892
  store i8 2, i8* %media_type86, align 8, !dbg !6893
  br label %if.end99, !dbg !6890

if.else87:                                        ; preds = %if.else80
  %70 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !6894
  %call88 = call i64 @archive_entry_size(%struct.archive_entry* %70), !dbg !6896
  %cmp89 = icmp sle i64 %call88, 2949120, !dbg !6897
  br i1 %cmp89, label %if.then91, label %if.else94, !dbg !6898

if.then91:                                        ; preds = %if.else87
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6899
  %el_torito92 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 36, !dbg !6900
  %media_type93 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito92, i32 0, i32 6, !dbg !6901
  store i8 3, i8* %media_type93, align 8, !dbg !6902
  br label %if.end98, !dbg !6899

if.else94:                                        ; preds = %if.else87
  %72 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6903
  %archive95 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %72, i32 0, i32 0, !dbg !6905
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6906
  %el_torito96 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 36, !dbg !6907
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito96, i32 0, i32 2, !dbg !6908
  %s97 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename, i32 0, i32 0, !dbg !6909
  %74 = load i8*, i8** %s97, align 8, !dbg !6909
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive95, i32 -1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.72, i32 0, i32 0), i8* %74), !dbg !6910
  store i32 -30, i32* %retval, align 4, !dbg !6911
  br label %return, !dbg !6911

if.end98:                                         ; preds = %if.then91
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then84
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then77
  br label %sw.epilog, !dbg !6912

sw.epilog:                                        ; preds = %if.end100, %sw.bb66, %sw.bb63, %if.end62
  %75 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6913
  %el_torito101 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %75, i32 0, i32 36, !dbg !6914
  %system_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito101, i32 0, i32 7, !dbg !6915
  store i8 0, i8* %system_type, align 1, !dbg !6916
  %76 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6917
  %opt102 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %76, i32 0, i32 37, !dbg !6919
  %77 = bitcast %struct.iso_option* %opt102 to i32*, !dbg !6920
  %bf.load103 = load i32, i32* %77, align 8, !dbg !6920
  %bf.lshr104 = lshr i32 %bf.load103, 22, !dbg !6920
  %bf.clear105 = and i32 %bf.lshr104, 1, !dbg !6920
  %tobool = icmp ne i32 %bf.clear105, 0, !dbg !6917
  br i1 %tobool, label %if.then106, label %if.end110, !dbg !6921

if.then106:                                       ; preds = %sw.epilog
  %78 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6922
  %el_torito107 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %78, i32 0, i32 36, !dbg !6922
  %id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito107, i32 0, i32 5, !dbg !6922
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id, i32 0, i32 1, !dbg !6922
  store i64 0, i64* %length, align 8, !dbg !6922
  %79 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6922
  %el_torito108 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 36, !dbg !6922
  %id109 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito108, i32 0, i32 5, !dbg !6922
  %80 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !6922
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %80, i32 0, i32 20, !dbg !6922
  call void @archive_string_concat(%struct.archive_string* %id109, %struct.archive_string* %publisher_identifier), !dbg !6922
  br label %if.end110, !dbg !6922

if.end110:                                        ; preds = %if.then106, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !6923
  br label %return, !dbg !6923

return:                                           ; preds = %if.end110, %if.else94, %if.then30, %if.then24, %if.then19, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !6924
  ret i32 %81, !dbg !6924
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_clone_tree(%struct.archive_write* %a, %struct.isoent** %nroot, %struct.isoent* %root) #0 !dbg !678 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %nroot.addr = alloca %struct.isoent**, align 8
  %root.addr = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %xroot = alloca %struct.isoent*, align 8
  %newent = alloca %struct.isoent*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !6925, metadata !986), !dbg !6926
  store %struct.isoent** %nroot, %struct.isoent*** %nroot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent*** %nroot.addr, metadata !6927, metadata !986), !dbg !6928
  store %struct.isoent* %root, %struct.isoent** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %root.addr, metadata !6929, metadata !986), !dbg !6930
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !6931, metadata !986), !dbg !6932
  call void @llvm.dbg.declare(metadata %struct.isoent** %xroot, metadata !6933, metadata !986), !dbg !6934
  call void @llvm.dbg.declare(metadata %struct.isoent** %newent, metadata !6935, metadata !986), !dbg !6936
  %0 = load %struct.isoent*, %struct.isoent** %root.addr, align 8, !dbg !6937
  store %struct.isoent* %0, %struct.isoent** %np, align 8, !dbg !6938
  store %struct.isoent* null, %struct.isoent** %xroot, align 8, !dbg !6939
  br label %do.body, !dbg !6940

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6941
  %call = call %struct.isoent* @isoent_clone(%struct.isoent* %1), !dbg !6943
  store %struct.isoent* %call, %struct.isoent** %newent, align 8, !dbg !6944
  %2 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !6945
  %cmp = icmp eq %struct.isoent* %2, null, !dbg !6947
  br i1 %cmp, label %if.then, label %if.end, !dbg !6948

if.then:                                          ; preds = %do.body
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !6949
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %3, i32 0, i32 0, !dbg !6951
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !6952
  store i32 -30, i32* %retval, align 4, !dbg !6953
  br label %return, !dbg !6953

if.end:                                           ; preds = %do.body
  %4 = load %struct.isoent*, %struct.isoent** %xroot, align 8, !dbg !6954
  %cmp1 = icmp eq %struct.isoent* %4, null, !dbg !6956
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !6957

if.then2:                                         ; preds = %if.end
  %5 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !6958
  store %struct.isoent* %5, %struct.isoent** %xroot, align 8, !dbg !6960
  %6 = load %struct.isoent**, %struct.isoent*** %nroot.addr, align 8, !dbg !6961
  store %struct.isoent* %5, %struct.isoent** %6, align 8, !dbg !6962
  %7 = load %struct.isoent*, %struct.isoent** %xroot, align 8, !dbg !6963
  %8 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !6964
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 2, !dbg !6965
  store %struct.isoent* %7, %struct.isoent** %parent, align 8, !dbg !6966
  br label %if.end4, !dbg !6967

if.else:                                          ; preds = %if.end
  %9 = load %struct.isoent*, %struct.isoent** %xroot, align 8, !dbg !6968
  %10 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !6969
  %call3 = call i32 @isoent_add_child_tail(%struct.isoent* %9, %struct.isoent* %10), !dbg !6970
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %11 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6971
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 22, !dbg !6973
  %bf.load = load i8, i8* %dir, align 8, !dbg !6973
  %bf.shl = shl i8 %bf.load, 6, !dbg !6973
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !6973
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !6973
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6971
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !6974

land.lhs.true:                                    ; preds = %if.end4
  %12 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6975
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 3, !dbg !6977
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !6978
  %13 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !6978
  %cmp5 = icmp ne %struct.isoent* %13, null, !dbg !6979
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !6980

if.then6:                                         ; preds = %land.lhs.true
  %14 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6981
  %children7 = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 3, !dbg !6983
  %first8 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children7, i32 0, i32 0, !dbg !6984
  %15 = load %struct.isoent*, %struct.isoent** %first8, align 8, !dbg !6984
  store %struct.isoent* %15, %struct.isoent** %np, align 8, !dbg !6985
  %16 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !6986
  store %struct.isoent* %16, %struct.isoent** %xroot, align 8, !dbg !6987
  br label %do.cond, !dbg !6988

if.end9:                                          ; preds = %land.lhs.true, %if.end4
  br label %while.cond, !dbg !6989

while.cond:                                       ; preds = %if.end18, %if.end9
  %17 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6990
  %18 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6992
  %parent10 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 2, !dbg !6993
  %19 = load %struct.isoent*, %struct.isoent** %parent10, align 8, !dbg !6993
  %cmp11 = icmp ne %struct.isoent* %17, %19, !dbg !6994
  br i1 %cmp11, label %while.body, label %while.end, !dbg !6995

while.body:                                       ; preds = %while.cond
  %20 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !6996
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 7, !dbg !6999
  %21 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !6999
  %cmp12 = icmp eq %struct.isoent* %21, null, !dbg !7000
  br i1 %cmp12, label %if.then13, label %if.else16, !dbg !7001

if.then13:                                        ; preds = %while.body
  %22 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7002
  %parent14 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 2, !dbg !7004
  %23 = load %struct.isoent*, %struct.isoent** %parent14, align 8, !dbg !7004
  store %struct.isoent* %23, %struct.isoent** %np, align 8, !dbg !7005
  %24 = load %struct.isoent*, %struct.isoent** %xroot, align 8, !dbg !7006
  %parent15 = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 2, !dbg !7007
  %25 = load %struct.isoent*, %struct.isoent** %parent15, align 8, !dbg !7007
  store %struct.isoent* %25, %struct.isoent** %xroot, align 8, !dbg !7008
  br label %if.end18, !dbg !7009

if.else16:                                        ; preds = %while.body
  %26 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7010
  %chnext17 = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 7, !dbg !7012
  %27 = load %struct.isoent*, %struct.isoent** %chnext17, align 8, !dbg !7012
  store %struct.isoent* %27, %struct.isoent** %np, align 8, !dbg !7013
  br label %while.end, !dbg !7014

if.end18:                                         ; preds = %if.then13
  br label %while.cond, !dbg !7015

while.end:                                        ; preds = %if.else16, %while.cond
  br label %do.cond, !dbg !7017

do.cond:                                          ; preds = %while.end, %if.then6
  %28 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7018
  %29 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7020
  %parent19 = getelementptr inbounds %struct.isoent, %struct.isoent* %29, i32 0, i32 2, !dbg !7021
  %30 = load %struct.isoent*, %struct.isoent** %parent19, align 8, !dbg !7021
  %cmp20 = icmp ne %struct.isoent* %28, %30, !dbg !7022
  br i1 %cmp20, label %do.body, label %do.end, !dbg !7023

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !7024
  br label %return, !dbg !7024

return:                                           ; preds = %do.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !7025
  ret i32 %31, !dbg !7025
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_make_path_table(%struct.archive_write* %a) #0 !dbg !684 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %depth = alloca i32, align 4
  %r = alloca i32, align 4
  %dir_number = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !7026, metadata !986), !dbg !7027
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !7028, metadata !986), !dbg !7029
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7030
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !7031
  %1 = load i8*, i8** %format_data, align 8, !dbg !7031
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !7030
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !7029
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !7032, metadata !986), !dbg !7033
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7034, metadata !986), !dbg !7035
  call void @llvm.dbg.declare(metadata i32* %dir_number, metadata !7036, metadata !986), !dbg !7037
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7038
  %dircnt_max = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 29, !dbg !7040
  %4 = load i32, i32* %dircnt_max, align 8, !dbg !7040
  %cmp = icmp sge i32 %4, 8, !dbg !7041
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7042

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7043
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 37, !dbg !7044
  %6 = bitcast %struct.iso_option* %opt to i32*, !dbg !7045
  %bf.load = load i32, i32* %6, align 8, !dbg !7045
  %bf.lshr = lshr i32 %bf.load, 19, !dbg !7045
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7045
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !7043
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7046

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7047
  %opt1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 37, !dbg !7049
  %8 = bitcast %struct.iso_option* %opt1 to i32*, !dbg !7050
  %bf.load2 = load i32, i32* %8, align 8, !dbg !7050
  %bf.lshr3 = lshr i32 %bf.load2, 14, !dbg !7050
  %bf.clear4 = and i32 %bf.lshr3, 7, !dbg !7050
  %cmp5 = icmp eq i32 %bf.clear4, 4, !dbg !7051
  br i1 %cmp5, label %if.then, label %if.else, !dbg !7052

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7054
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7055
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 14, !dbg !7056
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7057
  %dircnt_max6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 29, !dbg !7058
  %12 = load i32, i32* %dircnt_max6, align 8, !dbg !7058
  %add = add nsw i32 %12, 1, !dbg !7059
  %call = call i32 @isoent_alloc_path_table(%struct.archive_write* %9, %struct.vdd* %primary, i32 %add), !dbg !7060
  store i32 %call, i32* %r, align 4, !dbg !7061
  br label %if.end, !dbg !7062

if.else:                                          ; preds = %lor.lhs.false, %entry
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7063
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7064
  %primary7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 14, !dbg !7065
  %call8 = call i32 @isoent_alloc_path_table(%struct.archive_write* %13, %struct.vdd* %primary7, i32 8), !dbg !7066
  store i32 %call8, i32* %r, align 4, !dbg !7067
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %r, align 4, !dbg !7068
  %cmp9 = icmp slt i32 %15, 0, !dbg !7070
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7071

if.then10:                                        ; preds = %if.end
  %16 = load i32, i32* %r, align 4, !dbg !7072
  store i32 %16, i32* %retval, align 4, !dbg !7073
  br label %return, !dbg !7073

if.end11:                                         ; preds = %if.end
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7074
  %opt12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 37, !dbg !7076
  %18 = bitcast %struct.iso_option* %opt12 to i32*, !dbg !7077
  %bf.load13 = load i32, i32* %18, align 8, !dbg !7077
  %bf.lshr14 = lshr i32 %bf.load13, 17, !dbg !7077
  %bf.clear15 = and i32 %bf.lshr14, 3, !dbg !7077
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !7074
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !7078

if.then17:                                        ; preds = %if.end11
  %19 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7079
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7081
  %joliet = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 15, !dbg !7082
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7083
  %dircnt_max18 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 29, !dbg !7084
  %22 = load i32, i32* %dircnt_max18, align 8, !dbg !7084
  %add19 = add nsw i32 %22, 1, !dbg !7085
  %call20 = call i32 @isoent_alloc_path_table(%struct.archive_write* %19, %struct.vdd* %joliet, i32 %add19), !dbg !7086
  store i32 %call20, i32* %r, align 4, !dbg !7087
  %23 = load i32, i32* %r, align 4, !dbg !7088
  %cmp21 = icmp slt i32 %23, 0, !dbg !7090
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !7091

if.then22:                                        ; preds = %if.then17
  %24 = load i32, i32* %r, align 4, !dbg !7092
  store i32 %24, i32* %retval, align 4, !dbg !7093
  br label %return, !dbg !7093

if.end23:                                         ; preds = %if.then17
  br label %if.end24, !dbg !7094

if.end24:                                         ; preds = %if.end23, %if.end11
  %25 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7095
  %primary25 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %25, i32 0, i32 14, !dbg !7096
  %call26 = call i32 @isoent_collect_dirs(%struct.vdd* %primary25, %struct.isoent* null, i32 0), !dbg !7097
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7098
  %opt27 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 37, !dbg !7100
  %27 = bitcast %struct.iso_option* %opt27 to i32*, !dbg !7101
  %bf.load28 = load i32, i32* %27, align 8, !dbg !7101
  %bf.lshr29 = lshr i32 %bf.load28, 17, !dbg !7101
  %bf.clear30 = and i32 %bf.lshr29, 3, !dbg !7101
  %tobool31 = icmp ne i32 %bf.clear30, 0, !dbg !7098
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !7102

if.then32:                                        ; preds = %if.end24
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7103
  %joliet33 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 15, !dbg !7104
  %call34 = call i32 @isoent_collect_dirs(%struct.vdd* %joliet33, %struct.isoent* null, i32 0), !dbg !7105
  br label %if.end35, !dbg !7105

if.end35:                                         ; preds = %if.then32, %if.end24
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7106
  %opt36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 37, !dbg !7108
  %30 = bitcast %struct.iso_option* %opt36 to i32*, !dbg !7109
  %bf.load37 = load i32, i32* %30, align 8, !dbg !7109
  %bf.lshr38 = lshr i32 %bf.load37, 23, !dbg !7109
  %bf.clear39 = and i32 %bf.lshr38, 3, !dbg !7109
  %tobool40 = icmp ne i32 %bf.clear39, 0, !dbg !7106
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !7110

if.then41:                                        ; preds = %if.end35
  %31 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7111
  %call42 = call i32 @isoent_rr_move(%struct.archive_write* %31), !dbg !7113
  store i32 %call42, i32* %r, align 4, !dbg !7114
  %32 = load i32, i32* %r, align 4, !dbg !7115
  %cmp43 = icmp slt i32 %32, 0, !dbg !7117
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !7118

if.then44:                                        ; preds = %if.then41
  %33 = load i32, i32* %r, align 4, !dbg !7119
  store i32 %33, i32* %retval, align 4, !dbg !7120
  br label %return, !dbg !7120

if.end45:                                         ; preds = %if.then41
  br label %if.end46, !dbg !7121

if.end46:                                         ; preds = %if.end45, %if.end35
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7122
  call void @isofile_connect_hardlink_files(%struct.iso9660* %34), !dbg !7123
  %35 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7124
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7125
  %primary47 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 14, !dbg !7126
  %call48 = call i32 @isoent_traverse_tree(%struct.archive_write* %35, %struct.vdd* %primary47), !dbg !7127
  store i32 %call48, i32* %r, align 4, !dbg !7128
  %37 = load i32, i32* %r, align 4, !dbg !7129
  %cmp49 = icmp slt i32 %37, 0, !dbg !7131
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !7132

if.then50:                                        ; preds = %if.end46
  %38 = load i32, i32* %r, align 4, !dbg !7133
  store i32 %38, i32* %retval, align 4, !dbg !7134
  br label %return, !dbg !7134

if.end51:                                         ; preds = %if.end46
  %39 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7135
  %opt52 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %39, i32 0, i32 37, !dbg !7137
  %40 = bitcast %struct.iso_option* %opt52 to i32*, !dbg !7138
  %bf.load53 = load i32, i32* %40, align 8, !dbg !7138
  %bf.lshr54 = lshr i32 %bf.load53, 17, !dbg !7138
  %bf.clear55 = and i32 %bf.lshr54, 3, !dbg !7138
  %tobool56 = icmp ne i32 %bf.clear55, 0, !dbg !7135
  br i1 %tobool56, label %if.then57, label %if.end63, !dbg !7139

if.then57:                                        ; preds = %if.end51
  %41 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7140
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7142
  %joliet58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 15, !dbg !7143
  %call59 = call i32 @isoent_traverse_tree(%struct.archive_write* %41, %struct.vdd* %joliet58), !dbg !7144
  store i32 %call59, i32* %r, align 4, !dbg !7145
  %43 = load i32, i32* %r, align 4, !dbg !7146
  %cmp60 = icmp slt i32 %43, 0, !dbg !7148
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !7149

if.then61:                                        ; preds = %if.then57
  %44 = load i32, i32* %r, align 4, !dbg !7150
  store i32 %44, i32* %retval, align 4, !dbg !7151
  br label %return, !dbg !7151

if.end62:                                         ; preds = %if.then57
  br label %if.end63, !dbg !7152

if.end63:                                         ; preds = %if.end62, %if.end51
  store i32 1, i32* %dir_number, align 4, !dbg !7153
  store i32 0, i32* %depth, align 4, !dbg !7154
  br label %for.cond, !dbg !7156

for.cond:                                         ; preds = %for.inc, %if.end63
  %45 = load i32, i32* %depth, align 4, !dbg !7157
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7160
  %primary64 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 14, !dbg !7161
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %primary64, i32 0, i32 3, !dbg !7162
  %47 = load i32, i32* %max_depth, align 8, !dbg !7162
  %cmp65 = icmp slt i32 %45, %47, !dbg !7163
  br i1 %cmp65, label %for.body, label %for.end, !dbg !7164

for.body:                                         ; preds = %for.cond
  %48 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7165
  %49 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7167
  %primary66 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %49, i32 0, i32 14, !dbg !7168
  %50 = load i32, i32* %depth, align 4, !dbg !7169
  %call67 = call i32 @isoent_make_path_table_2(%struct.archive_write* %48, %struct.vdd* %primary66, i32 %50, i32* %dir_number), !dbg !7170
  store i32 %call67, i32* %r, align 4, !dbg !7171
  %51 = load i32, i32* %r, align 4, !dbg !7172
  %cmp68 = icmp slt i32 %51, 0, !dbg !7174
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !7175

if.then69:                                        ; preds = %for.body
  %52 = load i32, i32* %r, align 4, !dbg !7176
  store i32 %52, i32* %retval, align 4, !dbg !7177
  br label %return, !dbg !7177

if.end70:                                         ; preds = %for.body
  br label %for.inc, !dbg !7178

for.inc:                                          ; preds = %if.end70
  %53 = load i32, i32* %depth, align 4, !dbg !7179
  %inc = add nsw i32 %53, 1, !dbg !7179
  store i32 %inc, i32* %depth, align 4, !dbg !7179
  br label %for.cond, !dbg !7181

for.end:                                          ; preds = %for.cond
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7182
  %opt71 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 37, !dbg !7184
  %55 = bitcast %struct.iso_option* %opt71 to i32*, !dbg !7185
  %bf.load72 = load i32, i32* %55, align 8, !dbg !7185
  %bf.lshr73 = lshr i32 %bf.load72, 17, !dbg !7185
  %bf.clear74 = and i32 %bf.lshr73, 3, !dbg !7185
  %tobool75 = icmp ne i32 %bf.clear74, 0, !dbg !7182
  br i1 %tobool75, label %if.then76, label %if.end90, !dbg !7186

if.then76:                                        ; preds = %for.end
  store i32 1, i32* %dir_number, align 4, !dbg !7187
  store i32 0, i32* %depth, align 4, !dbg !7189
  br label %for.cond77, !dbg !7191

for.cond77:                                       ; preds = %for.inc87, %if.then76
  %56 = load i32, i32* %depth, align 4, !dbg !7192
  %57 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7195
  %joliet78 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %57, i32 0, i32 15, !dbg !7196
  %max_depth79 = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet78, i32 0, i32 3, !dbg !7197
  %58 = load i32, i32* %max_depth79, align 8, !dbg !7197
  %cmp80 = icmp slt i32 %56, %58, !dbg !7198
  br i1 %cmp80, label %for.body81, label %for.end89, !dbg !7199

for.body81:                                       ; preds = %for.cond77
  %59 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7200
  %60 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7202
  %joliet82 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %60, i32 0, i32 15, !dbg !7203
  %61 = load i32, i32* %depth, align 4, !dbg !7204
  %call83 = call i32 @isoent_make_path_table_2(%struct.archive_write* %59, %struct.vdd* %joliet82, i32 %61, i32* %dir_number), !dbg !7205
  store i32 %call83, i32* %r, align 4, !dbg !7206
  %62 = load i32, i32* %r, align 4, !dbg !7207
  %cmp84 = icmp slt i32 %62, 0, !dbg !7209
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !7210

if.then85:                                        ; preds = %for.body81
  %63 = load i32, i32* %r, align 4, !dbg !7211
  store i32 %63, i32* %retval, align 4, !dbg !7212
  br label %return, !dbg !7212

if.end86:                                         ; preds = %for.body81
  br label %for.inc87, !dbg !7213

for.inc87:                                        ; preds = %if.end86
  %64 = load i32, i32* %depth, align 4, !dbg !7214
  %inc88 = add nsw i32 %64, 1, !dbg !7214
  store i32 %inc88, i32* %depth, align 4, !dbg !7214
  br label %for.cond77, !dbg !7216

for.end89:                                        ; preds = %for.cond77
  br label %if.end90, !dbg !7217

if.end90:                                         ; preds = %for.end89, %for.end
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7218
  %opt91 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 37, !dbg !7220
  %66 = bitcast %struct.iso_option* %opt91 to i32*, !dbg !7221
  %bf.load92 = load i32, i32* %66, align 8, !dbg !7221
  %bf.lshr93 = lshr i32 %bf.load92, 20, !dbg !7221
  %bf.clear94 = and i32 %bf.lshr93, 1, !dbg !7221
  %tobool95 = icmp ne i32 %bf.clear94, 0, !dbg !7218
  br i1 %tobool95, label %land.lhs.true96, label %if.end99, !dbg !7222

land.lhs.true96:                                  ; preds = %if.end90
  %67 = load i32, i32* %dir_number, align 4, !dbg !7223
  %cmp97 = icmp sgt i32 %67, 65535, !dbg !7225
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !7226

if.then98:                                        ; preds = %land.lhs.true96
  %68 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7227
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %68, i32 0, i32 0, !dbg !7229
  %69 = load i32, i32* %dir_number, align 4, !dbg !7230
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.73, i32 0, i32 0), i32 %69), !dbg !7231
  store i32 -30, i32* %retval, align 4, !dbg !7232
  br label %return, !dbg !7232

if.end99:                                         ; preds = %land.lhs.true96, %if.end90
  %70 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7233
  %primary100 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %70, i32 0, i32 14, !dbg !7234
  call void @calculate_path_table_size(%struct.vdd* %primary100), !dbg !7235
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7236
  %opt101 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 37, !dbg !7238
  %72 = bitcast %struct.iso_option* %opt101 to i32*, !dbg !7239
  %bf.load102 = load i32, i32* %72, align 8, !dbg !7239
  %bf.lshr103 = lshr i32 %bf.load102, 17, !dbg !7239
  %bf.clear104 = and i32 %bf.lshr103, 3, !dbg !7239
  %tobool105 = icmp ne i32 %bf.clear104, 0, !dbg !7236
  br i1 %tobool105, label %if.then106, label %if.end108, !dbg !7240

if.then106:                                       ; preds = %if.end99
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7241
  %joliet107 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 15, !dbg !7242
  call void @calculate_path_table_size(%struct.vdd* %joliet107), !dbg !7243
  br label %if.end108, !dbg !7243

if.end108:                                        ; preds = %if.then106, %if.end99
  store i32 0, i32* %retval, align 4, !dbg !7244
  br label %return, !dbg !7244

return:                                           ; preds = %if.end108, %if.then98, %if.then85, %if.then69, %if.then61, %if.then50, %if.then44, %if.then22, %if.then10
  %74 = load i32, i32* %retval, align 4, !dbg !7245
  ret i32 %74, !dbg !7245
}

; Function Attrs: nounwind uwtable
define internal void @isoent_setup_directory_location(%struct.iso9660* %iso9660, i32 %location, %struct.vdd* %vdd) #0 !dbg !787 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %location.addr = alloca i32, align 4
  %vdd.addr = alloca %struct.vdd*, align 8
  %np = alloca %struct.isoent*, align 8
  %depth = alloca i32, align 4
  %block = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !7246, metadata !986), !dbg !7247
  store i32 %location, i32* %location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %location.addr, metadata !7248, metadata !986), !dbg !7249
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !7250, metadata !986), !dbg !7251
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !7252, metadata !986), !dbg !7253
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !7254, metadata !986), !dbg !7255
  %0 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7256
  %total_dir_block = getelementptr inbounds %struct.vdd, %struct.vdd* %0, i32 0, i32 8, !dbg !7257
  store i32 0, i32* %total_dir_block, align 4, !dbg !7258
  store i32 0, i32* %depth, align 4, !dbg !7259
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7260
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 0, !dbg !7261
  %2 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !7261
  store %struct.isoent* %2, %struct.isoent** %np, align 8, !dbg !7262
  br label %do.body, !dbg !7263

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i32* %block, metadata !7264, metadata !986), !dbg !7266
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7267
  %4 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7268
  %5 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7269
  %6 = load i32, i32* %depth, align 4, !dbg !7270
  %call = call i32 @calculate_directory_descriptors(%struct.iso9660* %3, %struct.vdd* %4, %struct.isoent* %5, i32 %6), !dbg !7271
  %7 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7272
  %dir_block = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 13, !dbg !7273
  store i32 %call, i32* %dir_block, align 8, !dbg !7274
  %8 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7275
  %dir_block1 = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 13, !dbg !7276
  %9 = load i32, i32* %dir_block1, align 8, !dbg !7276
  %10 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7277
  %total_dir_block2 = getelementptr inbounds %struct.vdd, %struct.vdd* %10, i32 0, i32 8, !dbg !7278
  %11 = load i32, i32* %total_dir_block2, align 4, !dbg !7279
  %add = add nsw i32 %11, %9, !dbg !7279
  store i32 %add, i32* %total_dir_block2, align 4, !dbg !7279
  %12 = load i32, i32* %location.addr, align 4, !dbg !7280
  %13 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7281
  %dir_location = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 12, !dbg !7282
  store i32 %12, i32* %dir_location, align 4, !dbg !7283
  %14 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7284
  %dir_block3 = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 13, !dbg !7285
  %15 = load i32, i32* %dir_block3, align 8, !dbg !7285
  %16 = load i32, i32* %location.addr, align 4, !dbg !7286
  %add4 = add nsw i32 %16, %15, !dbg !7286
  store i32 %add4, i32* %location.addr, align 4, !dbg !7286
  %17 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7287
  %18 = load i32, i32* %location.addr, align 4, !dbg !7288
  %call5 = call i32 @extra_setup_location(%struct.isoent* %17, i32 %18), !dbg !7289
  store i32 %call5, i32* %block, align 4, !dbg !7290
  %19 = load i32, i32* %block, align 4, !dbg !7291
  %20 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7292
  %total_dir_block6 = getelementptr inbounds %struct.vdd, %struct.vdd* %20, i32 0, i32 8, !dbg !7293
  %21 = load i32, i32* %total_dir_block6, align 4, !dbg !7294
  %add7 = add nsw i32 %21, %19, !dbg !7294
  store i32 %add7, i32* %total_dir_block6, align 4, !dbg !7294
  %22 = load i32, i32* %block, align 4, !dbg !7295
  %23 = load i32, i32* %location.addr, align 4, !dbg !7296
  %add8 = add nsw i32 %23, %22, !dbg !7296
  store i32 %add8, i32* %location.addr, align 4, !dbg !7296
  %24 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7297
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 5, !dbg !7299
  %first = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !7300
  %25 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !7300
  %cmp = icmp ne %struct.isoent* %25, null, !dbg !7301
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7302

land.lhs.true:                                    ; preds = %do.body
  %26 = load i32, i32* %depth, align 4, !dbg !7303
  %add9 = add nsw i32 %26, 1, !dbg !7305
  %27 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7306
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %27, i32 0, i32 3, !dbg !7307
  %28 = load i32, i32* %max_depth, align 8, !dbg !7307
  %cmp10 = icmp slt i32 %add9, %28, !dbg !7308
  br i1 %cmp10, label %if.then, label %if.end, !dbg !7309

if.then:                                          ; preds = %land.lhs.true
  %29 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7310
  %subdirs11 = getelementptr inbounds %struct.isoent, %struct.isoent* %29, i32 0, i32 5, !dbg !7312
  %first12 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs11, i32 0, i32 0, !dbg !7313
  %30 = load %struct.isoent*, %struct.isoent** %first12, align 8, !dbg !7313
  store %struct.isoent* %30, %struct.isoent** %np, align 8, !dbg !7314
  %31 = load i32, i32* %depth, align 4, !dbg !7315
  %inc = add nsw i32 %31, 1, !dbg !7315
  store i32 %inc, i32* %depth, align 4, !dbg !7315
  br label %do.cond, !dbg !7316

if.end:                                           ; preds = %land.lhs.true, %do.body
  br label %while.cond, !dbg !7317

while.cond:                                       ; preds = %if.end18, %if.end
  %32 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7318
  %33 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7320
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 2, !dbg !7321
  %34 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !7321
  %cmp13 = icmp ne %struct.isoent* %32, %34, !dbg !7322
  br i1 %cmp13, label %while.body, label %while.end, !dbg !7323

while.body:                                       ; preds = %while.cond
  %35 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7324
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %35, i32 0, i32 8, !dbg !7327
  %36 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !7327
  %cmp14 = icmp eq %struct.isoent* %36, null, !dbg !7328
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !7329

if.then15:                                        ; preds = %while.body
  %37 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7330
  %parent16 = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 2, !dbg !7332
  %38 = load %struct.isoent*, %struct.isoent** %parent16, align 8, !dbg !7332
  store %struct.isoent* %38, %struct.isoent** %np, align 8, !dbg !7333
  %39 = load i32, i32* %depth, align 4, !dbg !7334
  %dec = add nsw i32 %39, -1, !dbg !7334
  store i32 %dec, i32* %depth, align 4, !dbg !7334
  br label %if.end18, !dbg !7335

if.else:                                          ; preds = %while.body
  %40 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7336
  %drnext17 = getelementptr inbounds %struct.isoent, %struct.isoent* %40, i32 0, i32 8, !dbg !7338
  %41 = load %struct.isoent*, %struct.isoent** %drnext17, align 8, !dbg !7338
  store %struct.isoent* %41, %struct.isoent** %np, align 8, !dbg !7339
  br label %while.end, !dbg !7340

if.end18:                                         ; preds = %if.then15
  br label %while.cond, !dbg !7341

while.end:                                        ; preds = %if.else, %while.cond
  br label %do.cond, !dbg !7343

do.cond:                                          ; preds = %while.end, %if.then
  %42 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7344
  %43 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7346
  %parent19 = getelementptr inbounds %struct.isoent, %struct.isoent* %43, i32 0, i32 2, !dbg !7347
  %44 = load %struct.isoent*, %struct.isoent** %parent19, align 8, !dbg !7347
  %cmp20 = icmp ne %struct.isoent* %42, %44, !dbg !7348
  br i1 %cmp20, label %do.body, label %do.end, !dbg !7349

do.end:                                           ; preds = %do.cond
  ret void, !dbg !7350
}

; Function Attrs: nounwind uwtable
define internal void @isoent_setup_file_location(%struct.iso9660* %iso9660, i32 %location) #0 !dbg !869 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %location.addr = alloca i32, align 4
  %isoent = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  %size = alloca i64, align 8
  %block = alloca i32, align 4
  %depth = alloca i32, align 4
  %joliet = alloca i32, align 4
  %symlocation = alloca i32, align 4
  %total_block = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !7351, metadata !986), !dbg !7352
  store i32 %location, i32* %location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %location.addr, metadata !7353, metadata !986), !dbg !7354
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !7355, metadata !986), !dbg !7356
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !7357, metadata !986), !dbg !7358
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !7359, metadata !986), !dbg !7360
  call void @llvm.dbg.declare(metadata i64* %size, metadata !7361, metadata !986), !dbg !7362
  call void @llvm.dbg.declare(metadata i32* %block, metadata !7363, metadata !986), !dbg !7364
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !7365, metadata !986), !dbg !7366
  call void @llvm.dbg.declare(metadata i32* %joliet, metadata !7367, metadata !986), !dbg !7368
  call void @llvm.dbg.declare(metadata i32* %symlocation, metadata !7369, metadata !986), !dbg !7370
  call void @llvm.dbg.declare(metadata i32* %total_block, metadata !7371, metadata !986), !dbg !7372
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7373
  %total_file_block = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 18, !dbg !7374
  store i32 0, i32* %total_file_block, align 8, !dbg !7375
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7376
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %1, i32 0, i32 36, !dbg !7378
  %catalog = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 1, !dbg !7379
  %2 = load %struct.isoent*, %struct.isoent** %catalog, align 8, !dbg !7379
  store %struct.isoent* %2, %struct.isoent** %isoent, align 8, !dbg !7380
  %cmp = icmp ne %struct.isoent* %2, null, !dbg !7381
  br i1 %cmp, label %if.then, label %if.end, !dbg !7382

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %location.addr, align 4, !dbg !7383
  %4 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !7385
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 1, !dbg !7386
  %5 = load %struct.isofile*, %struct.isofile** %file1, align 8, !dbg !7386
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 10, !dbg !7387
  %location2 = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 3, !dbg !7388
  store i32 %3, i32* %location2, align 4, !dbg !7389
  %6 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !7390
  %file3 = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 1, !dbg !7391
  %7 = load %struct.isofile*, %struct.isofile** %file3, align 8, !dbg !7391
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %7, i32 0, i32 4, !dbg !7392
  %8 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !7392
  %call = call i64 @archive_entry_size(%struct.archive_entry* %8), !dbg !7393
  %add = add nsw i64 %call, 2048, !dbg !7394
  %sub = sub nsw i64 %add, 1, !dbg !7395
  %shr = ashr i64 %sub, 11, !dbg !7396
  %conv = trunc i64 %shr to i32, !dbg !7397
  store i32 %conv, i32* %block, align 4, !dbg !7398
  %9 = load i32, i32* %block, align 4, !dbg !7399
  %10 = load i32, i32* %location.addr, align 4, !dbg !7400
  %add5 = add nsw i32 %10, %9, !dbg !7400
  store i32 %add5, i32* %location.addr, align 4, !dbg !7400
  %11 = load i32, i32* %block, align 4, !dbg !7401
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7402
  %total_file_block6 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 18, !dbg !7403
  %13 = load i32, i32* %total_file_block6, align 8, !dbg !7404
  %add7 = add nsw i32 %13, %11, !dbg !7404
  store i32 %add7, i32* %total_file_block6, align 8, !dbg !7404
  br label %if.end, !dbg !7405

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7406
  %el_torito8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 36, !dbg !7408
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito8, i32 0, i32 3, !dbg !7409
  %15 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !7409
  store %struct.isoent* %15, %struct.isoent** %isoent, align 8, !dbg !7410
  %cmp9 = icmp ne %struct.isoent* %15, null, !dbg !7411
  br i1 %cmp9, label %if.then11, label %if.end34, !dbg !7412

if.then11:                                        ; preds = %if.end
  %16 = load i32, i32* %location.addr, align 4, !dbg !7413
  %17 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !7415
  %file12 = getelementptr inbounds %struct.isoent, %struct.isoent* %17, i32 0, i32 1, !dbg !7416
  %18 = load %struct.isofile*, %struct.isofile** %file12, align 8, !dbg !7416
  %content13 = getelementptr inbounds %struct.isofile, %struct.isofile* %18, i32 0, i32 10, !dbg !7417
  %location14 = getelementptr inbounds %struct.content, %struct.content* %content13, i32 0, i32 3, !dbg !7418
  store i32 %16, i32* %location14, align 4, !dbg !7419
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7420
  %el_torito15 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 36, !dbg !7421
  %media_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito15, i32 0, i32 6, !dbg !7422
  %20 = load i8, i8* %media_type, align 8, !dbg !7422
  %conv16 = zext i8 %20 to i32, !dbg !7420
  %call17 = call i64 @fd_boot_image_size(i32 %conv16), !dbg !7423
  store i64 %call17, i64* %size, align 8, !dbg !7424
  %21 = load i64, i64* %size, align 8, !dbg !7425
  %cmp18 = icmp eq i64 %21, 0, !dbg !7427
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !7428

if.then20:                                        ; preds = %if.then11
  %22 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !7429
  %file21 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 1, !dbg !7430
  %23 = load %struct.isofile*, %struct.isofile** %file21, align 8, !dbg !7430
  %entry22 = getelementptr inbounds %struct.isofile, %struct.isofile* %23, i32 0, i32 4, !dbg !7431
  %24 = load %struct.archive_entry*, %struct.archive_entry** %entry22, align 8, !dbg !7431
  %call23 = call i64 @archive_entry_size(%struct.archive_entry* %24), !dbg !7432
  store i64 %call23, i64* %size, align 8, !dbg !7433
  br label %if.end24, !dbg !7434

if.end24:                                         ; preds = %if.then20, %if.then11
  %25 = load i64, i64* %size, align 8, !dbg !7435
  %conv25 = trunc i64 %25 to i32, !dbg !7436
  %add26 = add nsw i32 %conv25, 2048, !dbg !7437
  %sub27 = sub nsw i32 %add26, 1, !dbg !7438
  %shr28 = ashr i32 %sub27, 11, !dbg !7439
  store i32 %shr28, i32* %block, align 4, !dbg !7440
  %26 = load i32, i32* %block, align 4, !dbg !7441
  %27 = load i32, i32* %location.addr, align 4, !dbg !7442
  %add29 = add nsw i32 %27, %26, !dbg !7442
  store i32 %add29, i32* %location.addr, align 4, !dbg !7442
  %28 = load i32, i32* %block, align 4, !dbg !7443
  %29 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7444
  %total_file_block30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %29, i32 0, i32 18, !dbg !7445
  %30 = load i32, i32* %total_file_block30, align 8, !dbg !7446
  %add31 = add nsw i32 %30, %28, !dbg !7446
  store i32 %add31, i32* %total_file_block30, align 8, !dbg !7446
  %31 = load i32, i32* %block, align 4, !dbg !7447
  %32 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !7448
  %file32 = getelementptr inbounds %struct.isoent, %struct.isoent* %32, i32 0, i32 1, !dbg !7449
  %33 = load %struct.isofile*, %struct.isofile** %file32, align 8, !dbg !7449
  %content33 = getelementptr inbounds %struct.isofile, %struct.isofile* %33, i32 0, i32 10, !dbg !7450
  %blocks = getelementptr inbounds %struct.content, %struct.content* %content33, i32 0, i32 2, !dbg !7451
  store i32 %31, i32* %blocks, align 8, !dbg !7452
  br label %if.end34, !dbg !7453

if.end34:                                         ; preds = %if.end24, %if.end
  store i32 0, i32* %depth, align 4, !dbg !7454
  store i32 -16, i32* %symlocation, align 4, !dbg !7455
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7456
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 37, !dbg !7458
  %35 = bitcast %struct.iso_option* %opt to i32*, !dbg !7459
  %bf.load = load i32, i32* %35, align 8, !dbg !7459
  %bf.lshr = lshr i32 %bf.load, 23, !dbg !7459
  %bf.clear = and i32 %bf.lshr, 3, !dbg !7459
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !7456
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7460

land.lhs.true:                                    ; preds = %if.end34
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7461
  %opt35 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 37, !dbg !7463
  %37 = bitcast %struct.iso_option* %opt35 to i32*, !dbg !7464
  %bf.load36 = load i32, i32* %37, align 8, !dbg !7464
  %bf.lshr37 = lshr i32 %bf.load36, 17, !dbg !7464
  %bf.clear38 = and i32 %bf.lshr37, 3, !dbg !7464
  %tobool39 = icmp ne i32 %bf.clear38, 0, !dbg !7461
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !7465

if.then40:                                        ; preds = %land.lhs.true
  store i32 1, i32* %joliet, align 4, !dbg !7466
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7468
  %joliet41 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 15, !dbg !7469
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %joliet41, i32 0, i32 0, !dbg !7470
  %39 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !7470
  store %struct.isoent* %39, %struct.isoent** %np, align 8, !dbg !7471
  br label %if.end43, !dbg !7472

if.else:                                          ; preds = %land.lhs.true, %if.end34
  store i32 0, i32* %joliet, align 4, !dbg !7473
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7475
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 14, !dbg !7476
  %rootent42 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 0, !dbg !7477
  %41 = load %struct.isoent*, %struct.isoent** %rootent42, align 8, !dbg !7477
  store %struct.isoent* %41, %struct.isoent** %np, align 8, !dbg !7478
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then40
  br label %do.body, !dbg !7479

do.body:                                          ; preds = %do.cond, %if.end43
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7480
  %43 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7482
  call void @_isoent_file_location(%struct.iso9660* %42, %struct.isoent* %43, i32* %symlocation), !dbg !7483
  %44 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7484
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %44, i32 0, i32 5, !dbg !7486
  %first = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !7487
  %45 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !7487
  %cmp44 = icmp ne %struct.isoent* %45, null, !dbg !7488
  br i1 %cmp44, label %land.lhs.true46, label %if.end74, !dbg !7489

land.lhs.true46:                                  ; preds = %do.body
  %46 = load i32, i32* %joliet, align 4, !dbg !7490
  %tobool47 = icmp ne i32 %46, 0, !dbg !7490
  br i1 %tobool47, label %if.then71, label %lor.lhs.false, !dbg !7491

lor.lhs.false:                                    ; preds = %land.lhs.true46
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7492
  %opt48 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 37, !dbg !7493
  %48 = bitcast %struct.iso_option* %opt48 to i32*, !dbg !7494
  %bf.load49 = load i32, i32* %48, align 8, !dbg !7494
  %bf.lshr50 = lshr i32 %bf.load49, 23, !dbg !7494
  %bf.clear51 = and i32 %bf.lshr50, 3, !dbg !7494
  %cmp52 = icmp eq i32 %bf.clear51, 0, !dbg !7495
  br i1 %cmp52, label %land.lhs.true54, label %lor.lhs.false59, !dbg !7496

land.lhs.true54:                                  ; preds = %lor.lhs.false
  %49 = load i32, i32* %depth, align 4, !dbg !7497
  %add55 = add nsw i32 %49, 2, !dbg !7498
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7499
  %primary56 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 14, !dbg !7500
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %primary56, i32 0, i32 3, !dbg !7501
  %51 = load i32, i32* %max_depth, align 8, !dbg !7501
  %cmp57 = icmp slt i32 %add55, %51, !dbg !7502
  br i1 %cmp57, label %if.then71, label %lor.lhs.false59, !dbg !7503

lor.lhs.false59:                                  ; preds = %land.lhs.true54, %lor.lhs.false
  %52 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7504
  %opt60 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %52, i32 0, i32 37, !dbg !7505
  %53 = bitcast %struct.iso_option* %opt60 to i32*, !dbg !7506
  %bf.load61 = load i32, i32* %53, align 8, !dbg !7506
  %bf.lshr62 = lshr i32 %bf.load61, 23, !dbg !7506
  %bf.clear63 = and i32 %bf.lshr62, 3, !dbg !7506
  %tobool64 = icmp ne i32 %bf.clear63, 0, !dbg !7504
  br i1 %tobool64, label %land.lhs.true65, label %if.end74, !dbg !7507

land.lhs.true65:                                  ; preds = %lor.lhs.false59
  %54 = load i32, i32* %depth, align 4, !dbg !7508
  %add66 = add nsw i32 %54, 1, !dbg !7509
  %55 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7510
  %primary67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %55, i32 0, i32 14, !dbg !7511
  %max_depth68 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary67, i32 0, i32 3, !dbg !7512
  %56 = load i32, i32* %max_depth68, align 8, !dbg !7512
  %cmp69 = icmp slt i32 %add66, %56, !dbg !7513
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !7514

if.then71:                                        ; preds = %land.lhs.true65, %land.lhs.true54, %land.lhs.true46
  %57 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7516
  %subdirs72 = getelementptr inbounds %struct.isoent, %struct.isoent* %57, i32 0, i32 5, !dbg !7518
  %first73 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs72, i32 0, i32 0, !dbg !7519
  %58 = load %struct.isoent*, %struct.isoent** %first73, align 8, !dbg !7519
  store %struct.isoent* %58, %struct.isoent** %np, align 8, !dbg !7520
  %59 = load i32, i32* %depth, align 4, !dbg !7521
  %inc = add nsw i32 %59, 1, !dbg !7521
  store i32 %inc, i32* %depth, align 4, !dbg !7521
  br label %do.cond, !dbg !7522

if.end74:                                         ; preds = %land.lhs.true65, %lor.lhs.false59, %do.body
  br label %while.cond, !dbg !7523

while.cond:                                       ; preds = %if.end83, %if.end74
  %60 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7524
  %61 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7525
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %61, i32 0, i32 2, !dbg !7526
  %62 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !7526
  %cmp75 = icmp ne %struct.isoent* %60, %62, !dbg !7527
  br i1 %cmp75, label %while.body, label %while.end, !dbg !7528

while.body:                                       ; preds = %while.cond
  %63 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7529
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %63, i32 0, i32 8, !dbg !7532
  %64 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !7532
  %cmp77 = icmp eq %struct.isoent* %64, null, !dbg !7533
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !7534

if.then79:                                        ; preds = %while.body
  %65 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7535
  %parent80 = getelementptr inbounds %struct.isoent, %struct.isoent* %65, i32 0, i32 2, !dbg !7537
  %66 = load %struct.isoent*, %struct.isoent** %parent80, align 8, !dbg !7537
  store %struct.isoent* %66, %struct.isoent** %np, align 8, !dbg !7538
  %67 = load i32, i32* %depth, align 4, !dbg !7539
  %dec = add nsw i32 %67, -1, !dbg !7539
  store i32 %dec, i32* %depth, align 4, !dbg !7539
  br label %if.end83, !dbg !7540

if.else81:                                        ; preds = %while.body
  %68 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7541
  %drnext82 = getelementptr inbounds %struct.isoent, %struct.isoent* %68, i32 0, i32 8, !dbg !7543
  %69 = load %struct.isoent*, %struct.isoent** %drnext82, align 8, !dbg !7543
  store %struct.isoent* %69, %struct.isoent** %np, align 8, !dbg !7544
  br label %while.end, !dbg !7545

if.end83:                                         ; preds = %if.then79
  br label %while.cond, !dbg !7546

while.end:                                        ; preds = %if.else81, %while.cond
  br label %do.cond, !dbg !7548

do.cond:                                          ; preds = %while.end, %if.then71
  %70 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7549
  %71 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7551
  %parent84 = getelementptr inbounds %struct.isoent, %struct.isoent* %71, i32 0, i32 2, !dbg !7552
  %72 = load %struct.isoent*, %struct.isoent** %parent84, align 8, !dbg !7552
  %cmp85 = icmp ne %struct.isoent* %70, %72, !dbg !7553
  br i1 %cmp85, label %do.body, label %do.end, !dbg !7554

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %total_block, align 4, !dbg !7555
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7556
  %data_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 12, !dbg !7558
  %first87 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list, i32 0, i32 0, !dbg !7559
  %74 = load %struct.isofile*, %struct.isofile** %first87, align 8, !dbg !7559
  store %struct.isofile* %74, %struct.isofile** %file, align 8, !dbg !7560
  br label %for.cond, !dbg !7561

for.cond:                                         ; preds = %for.inc, %do.end
  %75 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7562
  %cmp88 = icmp ne %struct.isofile* %75, null, !dbg !7564
  br i1 %cmp88, label %for.body, label %for.end, !dbg !7565

for.body:                                         ; preds = %for.cond
  %76 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7567
  %write_content = getelementptr inbounds %struct.isofile, %struct.isofile* %76, i32 0, i32 12, !dbg !7570
  %77 = load i32, i32* %write_content, align 8, !dbg !7570
  %tobool90 = icmp ne i32 %77, 0, !dbg !7567
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !7571

if.then91:                                        ; preds = %for.body
  br label %for.inc, !dbg !7572

if.end92:                                         ; preds = %for.body
  %78 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7573
  %content93 = getelementptr inbounds %struct.isofile, %struct.isofile* %78, i32 0, i32 10, !dbg !7574
  %79 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7575
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %79, i32 0, i32 11, !dbg !7576
  store %struct.content* %content93, %struct.content** %cur_content, align 8, !dbg !7577
  br label %do.body94, !dbg !7578

do.body94:                                        ; preds = %do.cond105, %if.end92
  %80 = load i32, i32* %location.addr, align 4, !dbg !7579
  %81 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7581
  %cur_content95 = getelementptr inbounds %struct.isofile, %struct.isofile* %81, i32 0, i32 11, !dbg !7582
  %82 = load %struct.content*, %struct.content** %cur_content95, align 8, !dbg !7582
  %location96 = getelementptr inbounds %struct.content, %struct.content* %82, i32 0, i32 3, !dbg !7583
  store i32 %80, i32* %location96, align 4, !dbg !7584
  %83 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7585
  %cur_content97 = getelementptr inbounds %struct.isofile, %struct.isofile* %83, i32 0, i32 11, !dbg !7586
  %84 = load %struct.content*, %struct.content** %cur_content97, align 8, !dbg !7586
  %blocks98 = getelementptr inbounds %struct.content, %struct.content* %84, i32 0, i32 2, !dbg !7587
  %85 = load i32, i32* %blocks98, align 8, !dbg !7587
  %86 = load i32, i32* %location.addr, align 4, !dbg !7588
  %add99 = add nsw i32 %86, %85, !dbg !7588
  store i32 %add99, i32* %location.addr, align 4, !dbg !7588
  %87 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7589
  %cur_content100 = getelementptr inbounds %struct.isofile, %struct.isofile* %87, i32 0, i32 11, !dbg !7590
  %88 = load %struct.content*, %struct.content** %cur_content100, align 8, !dbg !7590
  %blocks101 = getelementptr inbounds %struct.content, %struct.content* %88, i32 0, i32 2, !dbg !7591
  %89 = load i32, i32* %blocks101, align 8, !dbg !7591
  %90 = load i32, i32* %total_block, align 4, !dbg !7592
  %add102 = add nsw i32 %90, %89, !dbg !7592
  store i32 %add102, i32* %total_block, align 4, !dbg !7592
  %91 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7593
  %cur_content103 = getelementptr inbounds %struct.isofile, %struct.isofile* %91, i32 0, i32 11, !dbg !7594
  %92 = load %struct.content*, %struct.content** %cur_content103, align 8, !dbg !7594
  %next = getelementptr inbounds %struct.content, %struct.content* %92, i32 0, i32 4, !dbg !7595
  %93 = load %struct.content*, %struct.content** %next, align 8, !dbg !7595
  %94 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7596
  %cur_content104 = getelementptr inbounds %struct.isofile, %struct.isofile* %94, i32 0, i32 11, !dbg !7597
  store %struct.content* %93, %struct.content** %cur_content104, align 8, !dbg !7598
  br label %do.cond105, !dbg !7599

do.cond105:                                       ; preds = %do.body94
  %95 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7600
  %cur_content106 = getelementptr inbounds %struct.isofile, %struct.isofile* %95, i32 0, i32 11, !dbg !7602
  %96 = load %struct.content*, %struct.content** %cur_content106, align 8, !dbg !7602
  %cmp107 = icmp ne %struct.content* %96, null, !dbg !7603
  br i1 %cmp107, label %do.body94, label %do.end109, !dbg !7604

do.end109:                                        ; preds = %do.cond105
  br label %for.inc, !dbg !7605

for.inc:                                          ; preds = %do.end109, %if.then91
  %97 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7606
  %datanext = getelementptr inbounds %struct.isofile, %struct.isofile* %97, i32 0, i32 1, !dbg !7608
  %98 = load %struct.isofile*, %struct.isofile** %datanext, align 8, !dbg !7608
  store %struct.isofile* %98, %struct.isofile** %file, align 8, !dbg !7609
  br label %for.cond, !dbg !7610

for.end:                                          ; preds = %for.cond
  %99 = load i32, i32* %total_block, align 4, !dbg !7612
  %100 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !7613
  %total_file_block110 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %100, i32 0, i32 18, !dbg !7614
  %101 = load i32, i32* %total_file_block110, align 8, !dbg !7615
  %add111 = add nsw i32 %101, %99, !dbg !7615
  store i32 %add111, i32* %total_file_block110, align 8, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: nounwind uwtable
define internal i32 @setup_boot_information(%struct.archive_write* %a) #0 !dbg !878 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %np = alloca %struct.isoent*, align 8
  %size = alloca i64, align 8
  %sum = alloca i32, align 4
  %buff = alloca [4096 x i8], align 16
  %rsize = alloca i64, align 8
  %i = alloca i64, align 8
  %rs = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !7617, metadata !986), !dbg !7618
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !7619, metadata !986), !dbg !7620
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7621
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !7622
  %1 = load i8*, i8** %format_data, align 8, !dbg !7622
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !7621
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !7620
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !7623, metadata !986), !dbg !7624
  call void @llvm.dbg.declare(metadata i64* %size, metadata !7625, metadata !986), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !7627, metadata !986), !dbg !7628
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buff, metadata !7629, metadata !986), !dbg !7633
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7634
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 36, !dbg !7635
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 3, !dbg !7636
  %4 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !7636
  store %struct.isoent* %4, %struct.isoent** %np, align 8, !dbg !7637
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7638
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 1, !dbg !7639
  %6 = load i32, i32* %temp_fd, align 8, !dbg !7639
  %7 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7640
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 1, !dbg !7641
  %8 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !7641
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %8, i32 0, i32 10, !dbg !7642
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 0, !dbg !7643
  %9 = load i64, i64* %offset_of_temp, align 8, !dbg !7643
  %add = add nsw i64 %9, 64, !dbg !7644
  %call = call i64 @lseek(i32 %6, i64 %add, i32 0) #8, !dbg !7645
  %10 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7646
  %file1 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 1, !dbg !7647
  %11 = load %struct.isofile*, %struct.isofile** %file1, align 8, !dbg !7647
  %entry2 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 4, !dbg !7648
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry2, align 8, !dbg !7648
  %call3 = call i64 @archive_entry_size(%struct.archive_entry* %12), !dbg !7649
  %sub = sub nsw i64 %call3, 64, !dbg !7650
  store i64 %sub, i64* %size, align 8, !dbg !7651
  %13 = load i64, i64* %size, align 8, !dbg !7652
  %cmp = icmp sle i64 %13, 0, !dbg !7654
  br i1 %cmp, label %if.then, label %if.end, !dbg !7655

if.then:                                          ; preds = %entry
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7656
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %14, i32 0, i32 0, !dbg !7658
  %call4 = call i32* @__errno_location() #1, !dbg !7659
  %15 = load i32, i32* %call4, align 4, !dbg !7659
  %16 = load i64, i64* %size, align 8, !dbg !7660
  %add5 = add nsw i64 %16, 64, !dbg !7661
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i32 0, i32 0), i64 %add5), !dbg !7662
  store i32 -30, i32* %retval, align 4, !dbg !7664
  br label %return, !dbg !7664

if.end:                                           ; preds = %entry
  store i32 0, i32* %sum, align 4, !dbg !7665
  br label %while.cond, !dbg !7666

while.cond:                                       ; preds = %for.end, %if.end
  %17 = load i64, i64* %size, align 8, !dbg !7667
  %cmp6 = icmp sgt i64 %17, 0, !dbg !7669
  br i1 %cmp6, label %while.body, label %while.end, !dbg !7670

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !7671, metadata !986), !dbg !7673
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7674, metadata !986), !dbg !7675
  call void @llvm.dbg.declare(metadata i64* %rs, metadata !7676, metadata !986), !dbg !7677
  %18 = load i64, i64* %size, align 8, !dbg !7678
  %cmp7 = icmp sgt i64 %18, 4096, !dbg !7680
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7681

if.then8:                                         ; preds = %while.body
  store i64 4096, i64* %rsize, align 8, !dbg !7682
  br label %if.end9, !dbg !7683

if.else:                                          ; preds = %while.body
  %19 = load i64, i64* %size, align 8, !dbg !7684
  store i64 %19, i64* %rsize, align 8, !dbg !7685
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7686
  %temp_fd10 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 1, !dbg !7687
  %21 = load i32, i32* %temp_fd10, align 8, !dbg !7687
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7688
  %22 = load i64, i64* %rsize, align 8, !dbg !7689
  %call11 = call i64 @read(i32 %21, i8* %arraydecay, i64 %22), !dbg !7690
  store i64 %call11, i64* %rs, align 8, !dbg !7691
  %23 = load i64, i64* %rs, align 8, !dbg !7692
  %cmp12 = icmp sle i64 %23, 0, !dbg !7694
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !7695

if.then13:                                        ; preds = %if.end9
  %24 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7696
  %archive14 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %24, i32 0, i32 0, !dbg !7698
  %call15 = call i32* @__errno_location() #1, !dbg !7699
  %25 = load i32, i32* %call15, align 4, !dbg !7699
  %26 = load i64, i64* %rs, align 8, !dbg !7700
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive14, i32 %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i32 0, i32 0), i64 %26), !dbg !7701
  store i32 -30, i32* %retval, align 4, !dbg !7703
  br label %return, !dbg !7703

if.end16:                                         ; preds = %if.end9
  store i64 0, i64* %i, align 8, !dbg !7704
  br label %for.cond, !dbg !7706

for.cond:                                         ; preds = %for.inc, %if.end16
  %27 = load i64, i64* %i, align 8, !dbg !7707
  %28 = load i64, i64* %rs, align 8, !dbg !7710
  %cmp17 = icmp slt i64 %27, %28, !dbg !7711
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7712

for.body:                                         ; preds = %for.cond
  %arraydecay18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7713
  %29 = load i64, i64* %i, align 8, !dbg !7714
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay18, i64 %29, !dbg !7715
  %call19 = call i32 @archive_le32dec(i8* %add.ptr), !dbg !7716
  %30 = load i32, i32* %sum, align 4, !dbg !7717
  %add20 = add i32 %30, %call19, !dbg !7717
  store i32 %add20, i32* %sum, align 4, !dbg !7717
  br label %for.inc, !dbg !7718

for.inc:                                          ; preds = %for.body
  %31 = load i64, i64* %i, align 8, !dbg !7719
  %add21 = add nsw i64 %31, 4, !dbg !7719
  store i64 %add21, i64* %i, align 8, !dbg !7719
  br label %for.cond, !dbg !7721

for.end:                                          ; preds = %for.cond
  %32 = load i64, i64* %rs, align 8, !dbg !7722
  %33 = load i64, i64* %size, align 8, !dbg !7723
  %sub22 = sub nsw i64 %33, %32, !dbg !7723
  store i64 %sub22, i64* %size, align 8, !dbg !7723
  br label %while.cond, !dbg !7724

while.end:                                        ; preds = %while.cond
  %arraydecay23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7726
  call void @set_num_731(i8* %arraydecay23, i32 16), !dbg !7727
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7728
  %add.ptr25 = getelementptr inbounds i8, i8* %arraydecay24, i64 4, !dbg !7729
  %34 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7730
  %file26 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 1, !dbg !7731
  %35 = load %struct.isofile*, %struct.isofile** %file26, align 8, !dbg !7731
  %content27 = getelementptr inbounds %struct.isofile, %struct.isofile* %35, i32 0, i32 10, !dbg !7732
  %location = getelementptr inbounds %struct.content, %struct.content* %content27, i32 0, i32 3, !dbg !7733
  %36 = load i32, i32* %location, align 4, !dbg !7733
  call void @set_num_731(i8* %add.ptr25, i32 %36), !dbg !7734
  %37 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7735
  %el_torito28 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %37, i32 0, i32 36, !dbg !7736
  %media_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito28, i32 0, i32 6, !dbg !7737
  %38 = load i8, i8* %media_type, align 8, !dbg !7737
  %conv = zext i8 %38 to i32, !dbg !7735
  %call29 = call i64 @fd_boot_image_size(i32 %conv), !dbg !7738
  store i64 %call29, i64* %size, align 8, !dbg !7739
  %39 = load i64, i64* %size, align 8, !dbg !7740
  %cmp30 = icmp eq i64 %39, 0, !dbg !7742
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !7743

if.then32:                                        ; preds = %while.end
  %40 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7744
  %file33 = getelementptr inbounds %struct.isoent, %struct.isoent* %40, i32 0, i32 1, !dbg !7745
  %41 = load %struct.isofile*, %struct.isofile** %file33, align 8, !dbg !7745
  %entry34 = getelementptr inbounds %struct.isofile, %struct.isofile* %41, i32 0, i32 4, !dbg !7746
  %42 = load %struct.archive_entry*, %struct.archive_entry** %entry34, align 8, !dbg !7746
  %call35 = call i64 @archive_entry_size(%struct.archive_entry* %42), !dbg !7747
  store i64 %call35, i64* %size, align 8, !dbg !7748
  br label %if.end36, !dbg !7749

if.end36:                                         ; preds = %if.then32, %while.end
  %arraydecay37 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7750
  %add.ptr38 = getelementptr inbounds i8, i8* %arraydecay37, i64 8, !dbg !7751
  %43 = load i64, i64* %size, align 8, !dbg !7752
  %conv39 = trunc i64 %43 to i32, !dbg !7753
  call void @set_num_731(i8* %add.ptr38, i32 %conv39), !dbg !7754
  %arraydecay40 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7755
  %add.ptr41 = getelementptr inbounds i8, i8* %arraydecay40, i64 12, !dbg !7756
  %44 = load i32, i32* %sum, align 4, !dbg !7757
  call void @set_num_731(i8* %add.ptr41, i32 %44), !dbg !7758
  %arraydecay42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7759
  %add.ptr43 = getelementptr inbounds i8, i8* %arraydecay42, i64 16, !dbg !7760
  call void @llvm.memset.p0i8.i64(i8* %add.ptr43, i8 0, i64 40, i32 1, i1 false), !dbg !7761
  %45 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7762
  %temp_fd44 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %45, i32 0, i32 1, !dbg !7763
  %46 = load i32, i32* %temp_fd44, align 8, !dbg !7763
  %47 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !7764
  %file45 = getelementptr inbounds %struct.isoent, %struct.isoent* %47, i32 0, i32 1, !dbg !7765
  %48 = load %struct.isofile*, %struct.isofile** %file45, align 8, !dbg !7765
  %content46 = getelementptr inbounds %struct.isofile, %struct.isofile* %48, i32 0, i32 10, !dbg !7766
  %offset_of_temp47 = getelementptr inbounds %struct.content, %struct.content* %content46, i32 0, i32 0, !dbg !7767
  %49 = load i64, i64* %offset_of_temp47, align 8, !dbg !7767
  %add48 = add nsw i64 %49, 8, !dbg !7768
  %call49 = call i64 @lseek(i32 %46, i64 %add48, i32 0) #8, !dbg !7769
  %50 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7770
  %arraydecay50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buff, i32 0, i32 0, !dbg !7771
  %call51 = call i32 @write_to_temp(%struct.archive_write* %50, i8* %arraydecay50, i64 56), !dbg !7772
  store i32 %call51, i32* %retval, align 4, !dbg !7773
  br label %return, !dbg !7773

return:                                           ; preds = %if.end36, %if.then13, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !7774
  ret i32 %51, !dbg !7774
}

; Function Attrs: nounwind uwtable
define internal i32 @write_VD(%struct.archive_write* %a, %struct.vdd* %vdd) #0 !dbg !879 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %bp = alloca i8*, align 8
  %volume_set_size = alloca i16, align 2
  %identifier = alloca [256 x i8], align 16
  %vdt = alloca i32, align 4
  %vdc = alloca i32, align 4
  %vd_ver = alloca i8, align 1
  %fst_ver = alloca i8, align 1
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !7775, metadata !986), !dbg !7776
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !7777, metadata !986), !dbg !7778
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !7779, metadata !986), !dbg !7780
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !7781, metadata !986), !dbg !7782
  call void @llvm.dbg.declare(metadata i16* %volume_set_size, metadata !7783, metadata !986), !dbg !7784
  store i16 1, i16* %volume_set_size, align 2, !dbg !7784
  call void @llvm.dbg.declare(metadata [256 x i8]* %identifier, metadata !7785, metadata !986), !dbg !7786
  call void @llvm.dbg.declare(metadata i32* %vdt, metadata !7787, metadata !986), !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %vdc, metadata !7789, metadata !986), !dbg !7790
  call void @llvm.dbg.declare(metadata i8* %vd_ver, metadata !7791, metadata !986), !dbg !7792
  call void @llvm.dbg.declare(metadata i8* %fst_ver, metadata !7793, metadata !986), !dbg !7794
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7795, metadata !986), !dbg !7796
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7797
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !7798
  %1 = load i8*, i8** %format_data, align 8, !dbg !7798
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !7797
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !7799
  %3 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7800
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %3, i32 0, i32 1, !dbg !7801
  %4 = load i32, i32* %vdd_type, align 8, !dbg !7801
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 0, label %sw.bb2
  ], !dbg !7802

sw.bb:                                            ; preds = %entry
  store i32 2, i32* %vdt, align 4, !dbg !7803
  store i8 1, i8* %fst_ver, align 1, !dbg !7805
  store i8 1, i8* %vd_ver, align 1, !dbg !7806
  store i32 2, i32* %vdc, align 4, !dbg !7807
  br label %sw.epilog, !dbg !7808

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %vdt, align 4, !dbg !7809
  store i8 2, i8* %fst_ver, align 1, !dbg !7810
  store i8 2, i8* %vd_ver, align 1, !dbg !7811
  store i32 1, i32* %vdc, align 4, !dbg !7812
  br label %sw.epilog, !dbg !7813

sw.bb2:                                           ; preds = %entry
  br label %sw.default, !dbg !7814

sw.default:                                       ; preds = %entry, %sw.bb2
  store i32 1, i32* %vdt, align 4, !dbg !7816
  store i8 1, i8* %fst_ver, align 1, !dbg !7817
  store i8 1, i8* %vd_ver, align 1, !dbg !7818
  store i32 0, i32* %vdc, align 4, !dbg !7819
  br label %sw.epilog, !dbg !7820

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7821
  %call = call i8* @wb_buffptr(%struct.archive_write* %5), !dbg !7822
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 -1, !dbg !7823
  store i8* %add.ptr, i8** %bp, align 8, !dbg !7824
  %6 = load i8*, i8** %bp, align 8, !dbg !7825
  %7 = load i32, i32* %vdt, align 4, !dbg !7826
  %8 = load i8, i8* %vd_ver, align 1, !dbg !7827
  call void @set_VD_bp(i8* %6, i32 %7, i8 zeroext %8), !dbg !7828
  %9 = load i8*, i8** %bp, align 8, !dbg !7829
  call void @set_unused_field_bp(i8* %9, i32 8, i32 8), !dbg !7830
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i32 0, i32 0, !dbg !7831
  call void @get_system_identitier(i8* %arraydecay, i64 256), !dbg !7832
  %10 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7833
  %11 = load i8*, i8** %bp, align 8, !dbg !7834
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i32 0, i32 0, !dbg !7835
  %12 = load i32, i32* %vdc, align 4, !dbg !7836
  %call4 = call i32 @set_str_a_characters_bp(%struct.archive_write* %10, i8* %11, i32 9, i32 40, i8* %arraydecay3, i32 %12), !dbg !7837
  store i32 %call4, i32* %r, align 4, !dbg !7838
  %13 = load i32, i32* %r, align 4, !dbg !7839
  %cmp = icmp ne i32 %13, 0, !dbg !7841
  br i1 %cmp, label %if.then, label %if.end, !dbg !7842

if.then:                                          ; preds = %sw.epilog
  %14 = load i32, i32* %r, align 4, !dbg !7843
  store i32 %14, i32* %retval, align 4, !dbg !7844
  br label %return, !dbg !7844

if.end:                                           ; preds = %sw.epilog
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7845
  %16 = load i8*, i8** %bp, align 8, !dbg !7846
  %17 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7847
  %volume_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %17, i32 0, i32 19, !dbg !7848
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier, i32 0, i32 0, !dbg !7849
  %18 = load i8*, i8** %s, align 8, !dbg !7849
  %19 = load i32, i32* %vdc, align 4, !dbg !7850
  %call5 = call i32 @set_str_d_characters_bp(%struct.archive_write* %15, i8* %16, i32 41, i32 72, i8* %18, i32 %19), !dbg !7851
  store i32 %call5, i32* %r, align 4, !dbg !7852
  %20 = load i32, i32* %r, align 4, !dbg !7853
  %cmp6 = icmp ne i32 %20, 0, !dbg !7855
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7856

if.then7:                                         ; preds = %if.end
  %21 = load i32, i32* %r, align 4, !dbg !7857
  store i32 %21, i32* %retval, align 4, !dbg !7858
  br label %return, !dbg !7858

if.end8:                                          ; preds = %if.end
  %22 = load i8*, i8** %bp, align 8, !dbg !7859
  call void @set_unused_field_bp(i8* %22, i32 73, i32 80), !dbg !7860
  %23 = load i8*, i8** %bp, align 8, !dbg !7861
  %add.ptr9 = getelementptr inbounds i8, i8* %23, i64 81, !dbg !7862
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7863
  %volume_space_size = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 16, !dbg !7864
  %25 = load i32, i32* %volume_space_size, align 8, !dbg !7864
  call void @set_num_733(i8* %add.ptr9, i32 %25), !dbg !7865
  %26 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7866
  %vdd_type10 = getelementptr inbounds %struct.vdd, %struct.vdd* %26, i32 0, i32 1, !dbg !7868
  %27 = load i32, i32* %vdd_type10, align 8, !dbg !7868
  %cmp11 = icmp eq i32 %27, 1, !dbg !7869
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !7870

if.then12:                                        ; preds = %if.end8
  %28 = load i8*, i8** %bp, align 8, !dbg !7871
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 89, !dbg !7871
  store i8 37, i8* %arrayidx, align 1, !dbg !7873
  %29 = load i8*, i8** %bp, align 8, !dbg !7874
  %arrayidx13 = getelementptr inbounds i8, i8* %29, i64 90, !dbg !7874
  store i8 47, i8* %arrayidx13, align 1, !dbg !7875
  %30 = load i8*, i8** %bp, align 8, !dbg !7876
  %arrayidx14 = getelementptr inbounds i8, i8* %30, i64 91, !dbg !7876
  store i8 69, i8* %arrayidx14, align 1, !dbg !7877
  %31 = load i8*, i8** %bp, align 8, !dbg !7878
  %add.ptr15 = getelementptr inbounds i8, i8* %31, i64 92, !dbg !7879
  call void @llvm.memset.p0i8.i64(i8* %add.ptr15, i8 0, i64 29, i32 1, i1 false), !dbg !7880
  br label %if.end16, !dbg !7881

if.else:                                          ; preds = %if.end8
  %32 = load i8*, i8** %bp, align 8, !dbg !7882
  call void @set_unused_field_bp(i8* %32, i32 89, i32 120), !dbg !7884
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then12
  %33 = load i8*, i8** %bp, align 8, !dbg !7885
  %add.ptr17 = getelementptr inbounds i8, i8* %33, i64 121, !dbg !7886
  %34 = load i16, i16* %volume_set_size, align 2, !dbg !7887
  call void @set_num_723(i8* %add.ptr17, i16 zeroext %34), !dbg !7888
  %35 = load i8*, i8** %bp, align 8, !dbg !7889
  %add.ptr18 = getelementptr inbounds i8, i8* %35, i64 125, !dbg !7890
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7891
  %volume_sequence_number = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 17, !dbg !7892
  %37 = load i32, i32* %volume_sequence_number, align 4, !dbg !7892
  %conv = trunc i32 %37 to i16, !dbg !7891
  call void @set_num_723(i8* %add.ptr18, i16 zeroext %conv), !dbg !7893
  %38 = load i8*, i8** %bp, align 8, !dbg !7894
  %add.ptr19 = getelementptr inbounds i8, i8* %38, i64 129, !dbg !7895
  call void @set_num_723(i8* %add.ptr19, i16 zeroext 2048), !dbg !7896
  %39 = load i8*, i8** %bp, align 8, !dbg !7897
  %add.ptr20 = getelementptr inbounds i8, i8* %39, i64 133, !dbg !7898
  %40 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7899
  %path_table_size = getelementptr inbounds %struct.vdd, %struct.vdd* %40, i32 0, i32 5, !dbg !7900
  %41 = load i32, i32* %path_table_size, align 8, !dbg !7900
  call void @set_num_733(i8* %add.ptr20, i32 %41), !dbg !7901
  %42 = load i8*, i8** %bp, align 8, !dbg !7902
  %add.ptr21 = getelementptr inbounds i8, i8* %42, i64 141, !dbg !7903
  %43 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7904
  %location_type_L_path_table = getelementptr inbounds %struct.vdd, %struct.vdd* %43, i32 0, i32 6, !dbg !7905
  %44 = load i32, i32* %location_type_L_path_table, align 4, !dbg !7905
  call void @set_num_731(i8* %add.ptr21, i32 %44), !dbg !7906
  %45 = load i8*, i8** %bp, align 8, !dbg !7907
  %add.ptr22 = getelementptr inbounds i8, i8* %45, i64 145, !dbg !7908
  call void @set_num_731(i8* %add.ptr22, i32 0), !dbg !7909
  %46 = load i8*, i8** %bp, align 8, !dbg !7910
  %add.ptr23 = getelementptr inbounds i8, i8* %46, i64 149, !dbg !7911
  %47 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7912
  %location_type_M_path_table = getelementptr inbounds %struct.vdd, %struct.vdd* %47, i32 0, i32 7, !dbg !7913
  %48 = load i32, i32* %location_type_M_path_table, align 8, !dbg !7913
  call void @set_num_732(i8* %add.ptr23, i32 %48), !dbg !7914
  %49 = load i8*, i8** %bp, align 8, !dbg !7915
  %add.ptr24 = getelementptr inbounds i8, i8* %49, i64 153, !dbg !7916
  call void @set_num_732(i8* %add.ptr24, i32 0), !dbg !7917
  %50 = load i8*, i8** %bp, align 8, !dbg !7918
  %add.ptr25 = getelementptr inbounds i8, i8* %50, i64 157, !dbg !7919
  %51 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7920
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %51, i32 0, i32 0, !dbg !7921
  %52 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !7921
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7922
  %54 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7923
  %vdd_type26 = getelementptr inbounds %struct.vdd, %struct.vdd* %54, i32 0, i32 1, !dbg !7924
  %55 = load i32, i32* %vdd_type26, align 8, !dbg !7924
  %call27 = call i32 @set_directory_record(i8* %add.ptr25, i64 34, %struct.isoent* %52, %struct.iso9660* %53, i32 0, i32 %55), !dbg !7925
  %56 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7926
  %57 = load i8*, i8** %bp, align 8, !dbg !7927
  %58 = load i32, i32* %vdc, align 4, !dbg !7928
  %call28 = call i32 @set_str_d_characters_bp(%struct.archive_write* %56, i8* %57, i32 191, i32 318, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i32 %58), !dbg !7929
  store i32 %call28, i32* %r, align 4, !dbg !7930
  %59 = load i32, i32* %r, align 4, !dbg !7931
  %cmp29 = icmp ne i32 %59, 0, !dbg !7933
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7934

if.then31:                                        ; preds = %if.end16
  %60 = load i32, i32* %r, align 4, !dbg !7935
  store i32 %60, i32* %retval, align 4, !dbg !7936
  br label %return, !dbg !7936

if.end32:                                         ; preds = %if.end16
  %61 = load i8*, i8** %bp, align 8, !dbg !7937
  %62 = load i32, i32* %vdc, align 4, !dbg !7938
  %63 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7939
  %64 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7940
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7941
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 20, !dbg !7942
  %call33 = call i32 @set_file_identifier(i8* %61, i32 319, i32 446, i32 %62, %struct.archive_write* %63, %struct.vdd* %64, %struct.archive_string* %publisher_identifier, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 1, i32 0), !dbg !7943
  store i32 %call33, i32* %r, align 4, !dbg !7944
  %66 = load i32, i32* %r, align 4, !dbg !7945
  %cmp34 = icmp ne i32 %66, 0, !dbg !7947
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7948

if.then36:                                        ; preds = %if.end32
  %67 = load i32, i32* %r, align 4, !dbg !7949
  store i32 %67, i32* %retval, align 4, !dbg !7950
  br label %return, !dbg !7950

if.end37:                                         ; preds = %if.end32
  %68 = load i8*, i8** %bp, align 8, !dbg !7951
  %69 = load i32, i32* %vdc, align 4, !dbg !7952
  %70 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7953
  %71 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7954
  %72 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7955
  %data_preparer_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %72, i32 0, i32 21, !dbg !7956
  %call38 = call i32 @set_file_identifier(i8* %68, i32 447, i32 574, i32 %69, %struct.archive_write* %70, %struct.vdd* %71, %struct.archive_string* %data_preparer_identifier, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i32 0, i32 0), i32 1, i32 0), !dbg !7957
  store i32 %call38, i32* %r, align 4, !dbg !7958
  %73 = load i32, i32* %r, align 4, !dbg !7959
  %cmp39 = icmp ne i32 %73, 0, !dbg !7961
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !7962

if.then41:                                        ; preds = %if.end37
  %74 = load i32, i32* %r, align 4, !dbg !7963
  store i32 %74, i32* %retval, align 4, !dbg !7964
  br label %return, !dbg !7964

if.end42:                                         ; preds = %if.end37
  %75 = load i8*, i8** %bp, align 8, !dbg !7965
  %76 = load i32, i32* %vdc, align 4, !dbg !7966
  %77 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7967
  %78 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7968
  %79 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7969
  %application_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 22, !dbg !7970
  %call43 = call i32 @set_file_identifier(i8* %75, i32 575, i32 702, i32 %76, %struct.archive_write* %77, %struct.vdd* %78, %struct.archive_string* %application_identifier, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.80, i32 0, i32 0), i32 1, i32 0), !dbg !7971
  store i32 %call43, i32* %r, align 4, !dbg !7972
  %80 = load i32, i32* %r, align 4, !dbg !7973
  %cmp44 = icmp ne i32 %80, 0, !dbg !7975
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7976

if.then46:                                        ; preds = %if.end42
  %81 = load i32, i32* %r, align 4, !dbg !7977
  store i32 %81, i32* %retval, align 4, !dbg !7978
  br label %return, !dbg !7978

if.end47:                                         ; preds = %if.end42
  %82 = load i8*, i8** %bp, align 8, !dbg !7979
  %83 = load i32, i32* %vdc, align 4, !dbg !7980
  %84 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7981
  %85 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7982
  %86 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7983
  %copyright_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %86, i32 0, i32 23, !dbg !7984
  %call48 = call i32 @set_file_identifier(i8* %82, i32 703, i32 739, i32 %83, %struct.archive_write* %84, %struct.vdd* %85, %struct.archive_string* %copyright_file_identifier, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i32 0, i32 1), !dbg !7985
  store i32 %call48, i32* %r, align 4, !dbg !7986
  %87 = load i32, i32* %r, align 4, !dbg !7987
  %cmp49 = icmp ne i32 %87, 0, !dbg !7989
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7990

if.then51:                                        ; preds = %if.end47
  %88 = load i32, i32* %r, align 4, !dbg !7991
  store i32 %88, i32* %retval, align 4, !dbg !7992
  br label %return, !dbg !7992

if.end52:                                         ; preds = %if.end47
  %89 = load i8*, i8** %bp, align 8, !dbg !7993
  %90 = load i32, i32* %vdc, align 4, !dbg !7994
  %91 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !7995
  %92 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !7996
  %93 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !7997
  %abstract_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %93, i32 0, i32 24, !dbg !7998
  %call53 = call i32 @set_file_identifier(i8* %89, i32 740, i32 776, i32 %90, %struct.archive_write* %91, %struct.vdd* %92, %struct.archive_string* %abstract_file_identifier, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i32 0, i32 0), i32 0, i32 1), !dbg !7999
  store i32 %call53, i32* %r, align 4, !dbg !8000
  %94 = load i32, i32* %r, align 4, !dbg !8001
  %cmp54 = icmp ne i32 %94, 0, !dbg !8003
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8004

if.then56:                                        ; preds = %if.end52
  %95 = load i32, i32* %r, align 4, !dbg !8005
  store i32 %95, i32* %retval, align 4, !dbg !8006
  br label %return, !dbg !8006

if.end57:                                         ; preds = %if.end52
  %96 = load i8*, i8** %bp, align 8, !dbg !8007
  %97 = load i32, i32* %vdc, align 4, !dbg !8008
  %98 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8009
  %99 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8010
  %100 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8011
  %bibliographic_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %100, i32 0, i32 25, !dbg !8012
  %call58 = call i32 @set_file_identifier(i8* %96, i32 777, i32 813, i32 %97, %struct.archive_write* %98, %struct.vdd* %99, %struct.archive_string* %bibliographic_file_identifier, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.83, i32 0, i32 0), i32 0, i32 1), !dbg !8013
  store i32 %call58, i32* %r, align 4, !dbg !8014
  %101 = load i32, i32* %r, align 4, !dbg !8015
  %cmp59 = icmp ne i32 %101, 0, !dbg !8017
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !8018

if.then61:                                        ; preds = %if.end57
  %102 = load i32, i32* %r, align 4, !dbg !8019
  store i32 %102, i32* %retval, align 4, !dbg !8020
  br label %return, !dbg !8020

if.end62:                                         ; preds = %if.end57
  %103 = load i8*, i8** %bp, align 8, !dbg !8021
  %add.ptr63 = getelementptr inbounds i8, i8* %103, i64 814, !dbg !8022
  %104 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8023
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %104, i32 0, i32 0, !dbg !8024
  %105 = load i64, i64* %birth_time, align 8, !dbg !8024
  call void @set_date_time(i8* %add.ptr63, i64 %105), !dbg !8025
  %106 = load i8*, i8** %bp, align 8, !dbg !8026
  %add.ptr64 = getelementptr inbounds i8, i8* %106, i64 831, !dbg !8027
  %107 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8028
  %birth_time65 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %107, i32 0, i32 0, !dbg !8029
  %108 = load i64, i64* %birth_time65, align 8, !dbg !8029
  call void @set_date_time(i8* %add.ptr64, i64 %108), !dbg !8030
  %109 = load i8*, i8** %bp, align 8, !dbg !8031
  %add.ptr66 = getelementptr inbounds i8, i8* %109, i64 848, !dbg !8032
  call void @set_date_time_null(i8* %add.ptr66), !dbg !8033
  %110 = load i8*, i8** %bp, align 8, !dbg !8034
  %add.ptr67 = getelementptr inbounds i8, i8* %110, i64 865, !dbg !8035
  %111 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8036
  %birth_time68 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %111, i32 0, i32 0, !dbg !8037
  %112 = load i64, i64* %birth_time68, align 8, !dbg !8037
  call void @set_date_time(i8* %add.ptr67, i64 %112), !dbg !8038
  %113 = load i8, i8* %fst_ver, align 1, !dbg !8039
  %114 = load i8*, i8** %bp, align 8, !dbg !8040
  %arrayidx69 = getelementptr inbounds i8, i8* %114, i64 882, !dbg !8040
  store i8 %113, i8* %arrayidx69, align 1, !dbg !8041
  %115 = load i8*, i8** %bp, align 8, !dbg !8042
  %arrayidx70 = getelementptr inbounds i8, i8* %115, i64 883, !dbg !8042
  store i8 0, i8* %arrayidx70, align 1, !dbg !8043
  %116 = load i8*, i8** %bp, align 8, !dbg !8044
  %add.ptr71 = getelementptr inbounds i8, i8* %116, i64 884, !dbg !8045
  call void @llvm.memset.p0i8.i64(i8* %add.ptr71, i8 32, i64 512, i32 1, i1 false), !dbg !8046
  %117 = load i8*, i8** %bp, align 8, !dbg !8047
  call void @set_unused_field_bp(i8* %117, i32 1396, i32 2048), !dbg !8048
  %118 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8049
  %call72 = call i32 @wb_consume(%struct.archive_write* %118, i64 2048), !dbg !8050
  store i32 %call72, i32* %retval, align 4, !dbg !8051
  br label %return, !dbg !8051

return:                                           ; preds = %if.end62, %if.then61, %if.then56, %if.then51, %if.then46, %if.then41, %if.then36, %if.then31, %if.then7, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !8052
  ret i32 %119, !dbg !8052
}

; Function Attrs: nounwind uwtable
define internal i32 @write_VD_boot_record(%struct.archive_write* %a) #0 !dbg !910 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %bp = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8053, metadata !986), !dbg !8054
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !8055, metadata !986), !dbg !8056
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !8057, metadata !986), !dbg !8058
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8059
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !8060
  %1 = load i8*, i8** %format_data, align 8, !dbg !8060
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !8059
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !8061
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8062
  %call = call i8* @wb_buffptr(%struct.archive_write* %3), !dbg !8063
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 -1, !dbg !8064
  store i8* %add.ptr, i8** %bp, align 8, !dbg !8065
  %4 = load i8*, i8** %bp, align 8, !dbg !8066
  call void @set_VD_bp(i8* %4, i32 0, i8 zeroext 1), !dbg !8067
  %5 = load i8*, i8** %bp, align 8, !dbg !8068
  %add.ptr1 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !8069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i32 0, i32 0), i64 23, i32 1, i1 false), !dbg !8070
  %6 = load i8*, i8** %bp, align 8, !dbg !8071
  call void @set_unused_field_bp(i8* %6, i32 31, i32 39), !dbg !8072
  %7 = load i8*, i8** %bp, align 8, !dbg !8073
  call void @set_unused_field_bp(i8* %7, i32 40, i32 71), !dbg !8074
  %8 = load i8*, i8** %bp, align 8, !dbg !8075
  %add.ptr2 = getelementptr inbounds i8, i8* %8, i64 72, !dbg !8076
  %9 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8077
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %9, i32 0, i32 36, !dbg !8078
  %catalog = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 1, !dbg !8079
  %10 = load %struct.isoent*, %struct.isoent** %catalog, align 8, !dbg !8079
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 1, !dbg !8080
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8080
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 10, !dbg !8081
  %location = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 3, !dbg !8082
  %12 = load i32, i32* %location, align 4, !dbg !8082
  call void @set_num_731(i8* %add.ptr2, i32 %12), !dbg !8083
  %13 = load i8*, i8** %bp, align 8, !dbg !8084
  call void @set_unused_field_bp(i8* %13, i32 76, i32 2048), !dbg !8085
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8086
  %call3 = call i32 @wb_consume(%struct.archive_write* %14, i64 2048), !dbg !8087
  ret i32 %call3, !dbg !8088
}

; Function Attrs: nounwind uwtable
define internal i32 @write_VD_terminator(%struct.archive_write* %a) #0 !dbg !911 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %bp = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8089, metadata !986), !dbg !8090
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !8091, metadata !986), !dbg !8092
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8093
  %call = call i8* @wb_buffptr(%struct.archive_write* %0), !dbg !8094
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 -1, !dbg !8095
  store i8* %add.ptr, i8** %bp, align 8, !dbg !8096
  %1 = load i8*, i8** %bp, align 8, !dbg !8097
  call void @set_VD_bp(i8* %1, i32 255, i8 zeroext 1), !dbg !8098
  %2 = load i8*, i8** %bp, align 8, !dbg !8099
  call void @set_unused_field_bp(i8* %2, i32 8, i32 2048), !dbg !8100
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8101
  %call1 = call i32 @wb_consume(%struct.archive_write* %3, i64 2048), !dbg !8102
  ret i32 %call1, !dbg !8103
}

; Function Attrs: nounwind uwtable
define internal i32 @write_information_block(%struct.archive_write* %a) #0 !dbg !912 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %buf = alloca [128 x i8], align 16
  %v = alloca i8*, align 8
  %opt = alloca i32, align 4
  %r = alloca i32, align 4
  %info = alloca %struct.archive_string, align 8
  %info_size = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8104, metadata !986), !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !8106, metadata !986), !dbg !8107
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !8108, metadata !986), !dbg !8109
  call void @llvm.dbg.declare(metadata i8** %v, metadata !8110, metadata !986), !dbg !8111
  call void @llvm.dbg.declare(metadata i32* %opt, metadata !8112, metadata !986), !dbg !8113
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8114, metadata !986), !dbg !8115
  call void @llvm.dbg.declare(metadata %struct.archive_string* %info, metadata !8116, metadata !986), !dbg !8117
  call void @llvm.dbg.declare(metadata i64* %info_size, metadata !8118, metadata !986), !dbg !8119
  store i64 2048, i64* %info_size, align 8, !dbg !8119
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8120
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !8121
  %1 = load i8*, i8** %format_data, align 8, !dbg !8121
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !8122
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !8123
  %3 = load i64, i64* %info_size, align 8, !dbg !8124
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8126
  %format_data1 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %4, i32 0, i32 14, !dbg !8126
  %5 = load i8*, i8** %format_data1, align 8, !dbg !8126
  %6 = bitcast i8* %5 to %struct.iso9660*, !dbg !8126
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 31, !dbg !8126
  %7 = load i64, i64* %wbuff_remaining, align 8, !dbg !8126
  %cmp = icmp ugt i64 %3, %7, !dbg !8127
  br i1 %cmp, label %if.then, label %if.end4, !dbg !8128

if.then:                                          ; preds = %entry
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8129
  %call = call i32 @wb_write_out(%struct.archive_write* %8), !dbg !8131
  store i32 %call, i32* %r, align 4, !dbg !8132
  %9 = load i32, i32* %r, align 4, !dbg !8133
  %cmp2 = icmp ne i32 %9, 0, !dbg !8135
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !8136

if.then3:                                         ; preds = %if.then
  %10 = load i32, i32* %r, align 4, !dbg !8137
  store i32 %10, i32* %retval, align 4, !dbg !8138
  br label %return, !dbg !8138

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !8139

if.end4:                                          ; preds = %if.end, %entry
  br label %do.body, !dbg !8140

do.body:                                          ; preds = %if.end4
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %info, i32 0, i32 0, !dbg !8141
  store i8* null, i8** %s, align 8, !dbg !8141
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %info, i32 0, i32 1, !dbg !8141
  store i64 0, i64* %length, align 8, !dbg !8141
  %buffer_length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %info, i32 0, i32 2, !dbg !8141
  store i64 0, i64* %buffer_length, align 8, !dbg !8141
  br label %do.end, !dbg !8141

do.end:                                           ; preds = %do.body
  %11 = load i64, i64* %info_size, align 8, !dbg !8144
  %call5 = call %struct.archive_string* @archive_string_ensure(%struct.archive_string* %info, i64 %11), !dbg !8146
  %cmp6 = icmp eq %struct.archive_string* %call5, null, !dbg !8147
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8148

if.then7:                                         ; preds = %do.end
  %12 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8149
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %12, i32 0, i32 0, !dbg !8151
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !8152
  store i32 -30, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

if.end8:                                          ; preds = %do.end
  %s9 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %info, i32 0, i32 0, !dbg !8154
  %13 = load i8*, i8** %s9, align 8, !dbg !8154
  %14 = load i64, i64* %info_size, align 8, !dbg !8155
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 %14, i32 1, i1 false), !dbg !8156
  store i32 0, i32* %opt, align 4, !dbg !8157
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8158
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 0, !dbg !8159
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !8160
  %call10 = call i8* @ctime_r(i64* %birth_time, i8* %arraydecay) #8, !dbg !8161
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !8162
  %call12 = call i8* @archive_version_string(), !dbg !8163
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %info, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0), i8* %arraydecay11, i8* %call12), !dbg !8164
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8165
  %opt13 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 37, !dbg !8167
  %17 = bitcast %struct.iso_option* %opt13 to i32*, !dbg !8168
  %bf.load = load i32, i32* %17, align 8, !dbg !8168
  %bf.clear = and i32 %bf.load, 1, !dbg !8168
  %cmp14 = icmp ne i32 %bf.clear, 0, !dbg !8169
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !8170

if.then15:                                        ; preds = %if.end8
  %18 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8171
  %abstract_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %18, i32 0, i32 24, !dbg !8172
  %s16 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %abstract_file_identifier, i32 0, i32 0, !dbg !8173
  %19 = load i8*, i8** %s16, align 8, !dbg !8173
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i32 1, i8* %19), !dbg !8174
  br label %if.end17, !dbg !8174

if.end17:                                         ; preds = %if.then15, %if.end8
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8175
  %opt18 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 37, !dbg !8177
  %21 = bitcast %struct.iso_option* %opt18 to i32*, !dbg !8178
  %bf.load19 = load i32, i32* %21, align 8, !dbg !8178
  %bf.lshr = lshr i32 %bf.load19, 1, !dbg !8178
  %bf.clear20 = and i32 %bf.lshr, 1, !dbg !8178
  %cmp21 = icmp ne i32 %bf.clear20, 0, !dbg !8179
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !8180

if.then22:                                        ; preds = %if.end17
  %22 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8181
  %application_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %22, i32 0, i32 22, !dbg !8182
  %s23 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %application_identifier, i32 0, i32 0, !dbg !8183
  %23 = load i8*, i8** %s23, align 8, !dbg !8183
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i32 1, i8* %23), !dbg !8184
  br label %if.end24, !dbg !8184

if.end24:                                         ; preds = %if.then22, %if.end17
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8185
  %opt25 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 37, !dbg !8187
  %25 = bitcast %struct.iso_option* %opt25 to i32*, !dbg !8188
  %bf.load26 = load i32, i32* %25, align 8, !dbg !8188
  %bf.lshr27 = lshr i32 %bf.load26, 2, !dbg !8188
  %bf.clear28 = and i32 %bf.lshr27, 1, !dbg !8188
  %cmp29 = icmp ne i32 %bf.clear28, 1, !dbg !8189
  br i1 %cmp29, label %if.then30, label %if.end35, !dbg !8190

if.then30:                                        ; preds = %if.end24
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8191
  %opt31 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 37, !dbg !8192
  %27 = bitcast %struct.iso_option* %opt31 to i32*, !dbg !8193
  %bf.load32 = load i32, i32* %27, align 8, !dbg !8193
  %bf.lshr33 = lshr i32 %bf.load32, 2, !dbg !8193
  %bf.clear34 = and i32 %bf.lshr33, 1, !dbg !8193
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), i32 0, i32 %bf.clear34), !dbg !8194
  br label %if.end35, !dbg !8194

if.end35:                                         ; preds = %if.then30, %if.end24
  %28 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8195
  %opt36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %28, i32 0, i32 37, !dbg !8197
  %29 = bitcast %struct.iso_option* %opt36 to i32*, !dbg !8198
  %bf.load37 = load i32, i32* %29, align 8, !dbg !8198
  %bf.lshr38 = lshr i32 %bf.load37, 3, !dbg !8198
  %bf.clear39 = and i32 %bf.lshr38, 1, !dbg !8198
  %cmp40 = icmp ne i32 %bf.clear39, 0, !dbg !8199
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !8200

if.then41:                                        ; preds = %if.end35
  %30 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8201
  %bibliographic_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %30, i32 0, i32 25, !dbg !8202
  %s42 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %bibliographic_file_identifier, i32 0, i32 0, !dbg !8203
  %31 = load i8*, i8** %s42, align 8, !dbg !8203
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* %31), !dbg !8204
  br label %if.end43, !dbg !8204

if.end43:                                         ; preds = %if.then41, %if.end35
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8205
  %opt44 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 37, !dbg !8207
  %33 = bitcast %struct.iso_option* %opt44 to i32*, !dbg !8208
  %bf.load45 = load i32, i32* %33, align 8, !dbg !8208
  %bf.lshr46 = lshr i32 %bf.load45, 4, !dbg !8208
  %bf.clear47 = and i32 %bf.lshr46, 1, !dbg !8208
  %cmp48 = icmp ne i32 %bf.clear47, 0, !dbg !8209
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !8210

if.then49:                                        ; preds = %if.end43
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8211
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 36, !dbg !8212
  %boot_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 2, !dbg !8213
  %s50 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %boot_filename, i32 0, i32 0, !dbg !8214
  %35 = load i8*, i8** %s50, align 8, !dbg !8214
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 1, i8* %35), !dbg !8215
  br label %if.end51, !dbg !8215

if.end51:                                         ; preds = %if.then49, %if.end43
  %36 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8216
  %opt52 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %36, i32 0, i32 37, !dbg !8218
  %37 = bitcast %struct.iso_option* %opt52 to i32*, !dbg !8219
  %bf.load53 = load i32, i32* %37, align 8, !dbg !8219
  %bf.lshr54 = lshr i32 %bf.load53, 5, !dbg !8219
  %bf.clear55 = and i32 %bf.lshr54, 1, !dbg !8219
  %cmp56 = icmp ne i32 %bf.clear55, 0, !dbg !8220
  br i1 %cmp56, label %if.then57, label %if.end60, !dbg !8221

if.then57:                                        ; preds = %if.end51
  %38 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8222
  %el_torito58 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 36, !dbg !8223
  %catalog_filename = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito58, i32 0, i32 0, !dbg !8224
  %s59 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %catalog_filename, i32 0, i32 0, !dbg !8225
  %39 = load i8*, i8** %s59, align 8, !dbg !8225
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 1, i8* %39), !dbg !8226
  br label %if.end60, !dbg !8226

if.end60:                                         ; preds = %if.then57, %if.end51
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8227
  %opt61 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 37, !dbg !8229
  %41 = bitcast %struct.iso_option* %opt61 to i32*, !dbg !8230
  %bf.load62 = load i32, i32* %41, align 8, !dbg !8230
  %bf.lshr63 = lshr i32 %bf.load62, 6, !dbg !8230
  %bf.clear64 = and i32 %bf.lshr63, 1, !dbg !8230
  %cmp65 = icmp ne i32 %bf.clear64, 0, !dbg !8231
  br i1 %cmp65, label %if.then66, label %if.end71, !dbg !8232

if.then66:                                        ; preds = %if.end60
  %42 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8233
  %opt67 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %42, i32 0, i32 37, !dbg !8234
  %43 = bitcast %struct.iso_option* %opt67 to i32*, !dbg !8235
  %bf.load68 = load i32, i32* %43, align 8, !dbg !8235
  %bf.lshr69 = lshr i32 %bf.load68, 6, !dbg !8235
  %bf.clear70 = and i32 %bf.lshr69, 1, !dbg !8235
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), i32 0, i32 %bf.clear70), !dbg !8236
  br label %if.end71, !dbg !8236

if.end71:                                         ; preds = %if.then66, %if.end60
  %44 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8237
  %opt72 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %44, i32 0, i32 37, !dbg !8239
  %45 = bitcast %struct.iso_option* %opt72 to i32*, !dbg !8240
  %bf.load73 = load i32, i32* %45, align 8, !dbg !8240
  %bf.lshr74 = lshr i32 %bf.load73, 7, !dbg !8240
  %bf.clear75 = and i32 %bf.lshr74, 1, !dbg !8240
  %cmp76 = icmp ne i32 %bf.clear75, 0, !dbg !8241
  br i1 %cmp76, label %if.then77, label %if.end79, !dbg !8242

if.then77:                                        ; preds = %if.end71
  %46 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8243
  %el_torito78 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %46, i32 0, i32 36, !dbg !8244
  %boot_load_seg = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito78, i32 0, i32 8, !dbg !8245
  %47 = load i16, i16* %boot_load_seg, align 2, !dbg !8245
  %conv = zext i16 %47 to i32, !dbg !8243
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i32 3, i32 %conv), !dbg !8246
  br label %if.end79, !dbg !8246

if.end79:                                         ; preds = %if.then77, %if.end71
  %48 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8247
  %opt80 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %48, i32 0, i32 37, !dbg !8249
  %49 = bitcast %struct.iso_option* %opt80 to i32*, !dbg !8250
  %bf.load81 = load i32, i32* %49, align 8, !dbg !8250
  %bf.lshr82 = lshr i32 %bf.load81, 8, !dbg !8250
  %bf.clear83 = and i32 %bf.lshr82, 1, !dbg !8250
  %cmp84 = icmp ne i32 %bf.clear83, 0, !dbg !8251
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !8252

if.then86:                                        ; preds = %if.end79
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8253
  %el_torito87 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 36, !dbg !8254
  %boot_load_size = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito87, i32 0, i32 9, !dbg !8255
  %51 = load i16, i16* %boot_load_size, align 4, !dbg !8255
  %conv88 = zext i16 %51 to i32, !dbg !8253
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i32 2, i32 %conv88), !dbg !8256
  br label %if.end89, !dbg !8256

if.end89:                                         ; preds = %if.then86, %if.end79
  %52 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8257
  %opt90 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %52, i32 0, i32 37, !dbg !8259
  %53 = bitcast %struct.iso_option* %opt90 to i32*, !dbg !8260
  %bf.load91 = load i32, i32* %53, align 8, !dbg !8260
  %bf.lshr92 = lshr i32 %bf.load91, 9, !dbg !8260
  %bf.clear93 = and i32 %bf.lshr92, 3, !dbg !8260
  %cmp94 = icmp ne i32 %bf.clear93, 0, !dbg !8261
  br i1 %cmp94, label %if.then96, label %if.end113, !dbg !8262

if.then96:                                        ; preds = %if.end89
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8** %v, align 8, !dbg !8263
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8265
  %opt97 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 37, !dbg !8267
  %55 = bitcast %struct.iso_option* %opt97 to i32*, !dbg !8268
  %bf.load98 = load i32, i32* %55, align 8, !dbg !8268
  %bf.lshr99 = lshr i32 %bf.load98, 9, !dbg !8268
  %bf.clear100 = and i32 %bf.lshr99, 3, !dbg !8268
  %cmp101 = icmp eq i32 %bf.clear100, 2, !dbg !8269
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !8270

if.then103:                                       ; preds = %if.then96
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i8** %v, align 8, !dbg !8271
  br label %if.end104, !dbg !8272

if.end104:                                        ; preds = %if.then103, %if.then96
  %56 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8273
  %opt105 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %56, i32 0, i32 37, !dbg !8275
  %57 = bitcast %struct.iso_option* %opt105 to i32*, !dbg !8276
  %bf.load106 = load i32, i32* %57, align 8, !dbg !8276
  %bf.lshr107 = lshr i32 %bf.load106, 9, !dbg !8276
  %bf.clear108 = and i32 %bf.lshr107, 3, !dbg !8276
  %cmp109 = icmp eq i32 %bf.clear108, 3, !dbg !8277
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !8278

if.then111:                                       ; preds = %if.end104
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8** %v, align 8, !dbg !8279
  br label %if.end112, !dbg !8280

if.end112:                                        ; preds = %if.then111, %if.end104
  %58 = load i8*, i8** %v, align 8, !dbg !8281
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i32 1, i8* %58), !dbg !8282
  br label %if.end113, !dbg !8283

if.end113:                                        ; preds = %if.end112, %if.end89
  %59 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8284
  %opt114 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %59, i32 0, i32 37, !dbg !8286
  %60 = bitcast %struct.iso_option* %opt114 to i32*, !dbg !8287
  %bf.load115 = load i32, i32* %60, align 8, !dbg !8287
  %bf.lshr116 = lshr i32 %bf.load115, 11, !dbg !8287
  %bf.clear117 = and i32 %bf.lshr116, 1, !dbg !8287
  %cmp118 = icmp ne i32 %bf.clear117, 0, !dbg !8288
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !8289

if.then120:                                       ; preds = %if.end113
  %61 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8290
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %61, i32 0, i32 27, !dbg !8291
  %compression_level = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 12, !dbg !8292
  %62 = load i32, i32* %compression_level, align 8, !dbg !8292
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i32 0, i32 0), i32 2, i32 %62), !dbg !8293
  br label %if.end121, !dbg !8293

if.end121:                                        ; preds = %if.then120, %if.end113
  %63 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8294
  %opt122 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %63, i32 0, i32 37, !dbg !8296
  %64 = bitcast %struct.iso_option* %opt122 to i32*, !dbg !8297
  %bf.load123 = load i32, i32* %64, align 8, !dbg !8297
  %bf.lshr124 = lshr i32 %bf.load123, 12, !dbg !8297
  %bf.clear125 = and i32 %bf.lshr124, 1, !dbg !8297
  %cmp126 = icmp ne i32 %bf.clear125, 0, !dbg !8298
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !8299

if.then128:                                       ; preds = %if.end121
  %65 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8300
  %copyright_file_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %65, i32 0, i32 23, !dbg !8301
  %s129 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %copyright_file_identifier, i32 0, i32 0, !dbg !8302
  %66 = load i8*, i8** %s129, align 8, !dbg !8302
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i32 0, i32 0), i32 1, i8* %66), !dbg !8303
  br label %if.end130, !dbg !8303

if.end130:                                        ; preds = %if.then128, %if.end121
  %67 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8304
  %opt131 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %67, i32 0, i32 37, !dbg !8306
  %68 = bitcast %struct.iso_option* %opt131 to i32*, !dbg !8307
  %bf.load132 = load i32, i32* %68, align 8, !dbg !8307
  %bf.lshr133 = lshr i32 %bf.load132, 14, !dbg !8307
  %bf.clear134 = and i32 %bf.lshr133, 7, !dbg !8307
  %cmp135 = icmp ne i32 %bf.clear134, 1, !dbg !8308
  br i1 %cmp135, label %if.then137, label %if.end142, !dbg !8309

if.then137:                                       ; preds = %if.end130
  %69 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8310
  %opt138 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %69, i32 0, i32 37, !dbg !8311
  %70 = bitcast %struct.iso_option* %opt138 to i32*, !dbg !8312
  %bf.load139 = load i32, i32* %70, align 8, !dbg !8312
  %bf.lshr140 = lshr i32 %bf.load139, 14, !dbg !8312
  %bf.clear141 = and i32 %bf.lshr140, 7, !dbg !8312
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 2, i32 %bf.clear141), !dbg !8313
  br label %if.end142, !dbg !8313

if.end142:                                        ; preds = %if.then137, %if.end130
  %71 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8314
  %opt143 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %71, i32 0, i32 37, !dbg !8316
  %72 = bitcast %struct.iso_option* %opt143 to i32*, !dbg !8317
  %bf.load144 = load i32, i32* %72, align 8, !dbg !8317
  %bf.lshr145 = lshr i32 %bf.load144, 17, !dbg !8317
  %bf.clear146 = and i32 %bf.lshr145, 3, !dbg !8317
  %cmp147 = icmp ne i32 %bf.clear146, 1, !dbg !8318
  br i1 %cmp147, label %if.then149, label %if.end162, !dbg !8319

if.then149:                                       ; preds = %if.end142
  %73 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8320
  %opt150 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %73, i32 0, i32 37, !dbg !8323
  %74 = bitcast %struct.iso_option* %opt150 to i32*, !dbg !8324
  %bf.load151 = load i32, i32* %74, align 8, !dbg !8324
  %bf.lshr152 = lshr i32 %bf.load151, 17, !dbg !8324
  %bf.clear153 = and i32 %bf.lshr152, 3, !dbg !8324
  %cmp154 = icmp eq i32 %bf.clear153, 2, !dbg !8325
  br i1 %cmp154, label %if.then156, label %if.else, !dbg !8326

if.then156:                                       ; preds = %if.then149
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)), !dbg !8327
  br label %if.end161, !dbg !8327

if.else:                                          ; preds = %if.then149
  %75 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8328
  %opt157 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %75, i32 0, i32 37, !dbg !8329
  %76 = bitcast %struct.iso_option* %opt157 to i32*, !dbg !8330
  %bf.load158 = load i32, i32* %76, align 8, !dbg !8330
  %bf.lshr159 = lshr i32 %bf.load158, 17, !dbg !8330
  %bf.clear160 = and i32 %bf.lshr159, 3, !dbg !8330
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 0, i32 %bf.clear160), !dbg !8331
  br label %if.end161

if.end161:                                        ; preds = %if.else, %if.then156
  br label %if.end162, !dbg !8332

if.end162:                                        ; preds = %if.end161, %if.end142
  %77 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8333
  %opt163 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %77, i32 0, i32 37, !dbg !8335
  %78 = bitcast %struct.iso_option* %opt163 to i32*, !dbg !8336
  %bf.load164 = load i32, i32* %78, align 8, !dbg !8336
  %bf.lshr165 = lshr i32 %bf.load164, 19, !dbg !8336
  %bf.clear166 = and i32 %bf.lshr165, 1, !dbg !8336
  %cmp167 = icmp ne i32 %bf.clear166, 1, !dbg !8337
  br i1 %cmp167, label %if.then169, label %if.end174, !dbg !8338

if.then169:                                       ; preds = %if.end162
  %79 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8339
  %opt170 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 37, !dbg !8340
  %80 = bitcast %struct.iso_option* %opt170 to i32*, !dbg !8341
  %bf.load171 = load i32, i32* %80, align 8, !dbg !8341
  %bf.lshr172 = lshr i32 %bf.load171, 19, !dbg !8341
  %bf.clear173 = and i32 %bf.lshr172, 1, !dbg !8341
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), i32 0, i32 %bf.clear173), !dbg !8342
  br label %if.end174, !dbg !8342

if.end174:                                        ; preds = %if.then169, %if.end162
  %81 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8343
  %opt175 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %81, i32 0, i32 37, !dbg !8345
  %82 = bitcast %struct.iso_option* %opt175 to i32*, !dbg !8346
  %bf.load176 = load i32, i32* %82, align 8, !dbg !8346
  %bf.lshr177 = lshr i32 %bf.load176, 20, !dbg !8346
  %bf.clear178 = and i32 %bf.lshr177, 1, !dbg !8346
  %cmp179 = icmp ne i32 %bf.clear178, 1, !dbg !8347
  br i1 %cmp179, label %if.then181, label %if.end186, !dbg !8348

if.then181:                                       ; preds = %if.end174
  %83 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8349
  %opt182 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %83, i32 0, i32 37, !dbg !8350
  %84 = bitcast %struct.iso_option* %opt182 to i32*, !dbg !8351
  %bf.load183 = load i32, i32* %84, align 8, !dbg !8351
  %bf.lshr184 = lshr i32 %bf.load183, 20, !dbg !8351
  %bf.clear185 = and i32 %bf.lshr184, 1, !dbg !8351
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i32 0, i32 %bf.clear185), !dbg !8352
  br label %if.end186, !dbg !8352

if.end186:                                        ; preds = %if.then181, %if.end174
  %85 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8353
  %opt187 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %85, i32 0, i32 37, !dbg !8355
  %86 = bitcast %struct.iso_option* %opt187 to i32*, !dbg !8356
  %bf.load188 = load i32, i32* %86, align 8, !dbg !8356
  %bf.lshr189 = lshr i32 %bf.load188, 21, !dbg !8356
  %bf.clear190 = and i32 %bf.lshr189, 1, !dbg !8356
  %cmp191 = icmp ne i32 %bf.clear190, 1, !dbg !8357
  br i1 %cmp191, label %if.then193, label %if.end198, !dbg !8358

if.then193:                                       ; preds = %if.end186
  %87 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8359
  %opt194 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %87, i32 0, i32 37, !dbg !8360
  %88 = bitcast %struct.iso_option* %opt194 to i32*, !dbg !8361
  %bf.load195 = load i32, i32* %88, align 8, !dbg !8361
  %bf.lshr196 = lshr i32 %bf.load195, 21, !dbg !8361
  %bf.clear197 = and i32 %bf.lshr196, 1, !dbg !8361
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 %bf.clear197), !dbg !8362
  br label %if.end198, !dbg !8362

if.end198:                                        ; preds = %if.then193, %if.end186
  %89 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8363
  %opt199 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %89, i32 0, i32 37, !dbg !8365
  %90 = bitcast %struct.iso_option* %opt199 to i32*, !dbg !8366
  %bf.load200 = load i32, i32* %90, align 8, !dbg !8366
  %bf.lshr201 = lshr i32 %bf.load200, 22, !dbg !8366
  %bf.clear202 = and i32 %bf.lshr201, 1, !dbg !8366
  %cmp203 = icmp ne i32 %bf.clear202, 0, !dbg !8367
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !8368

if.then205:                                       ; preds = %if.end198
  %91 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8369
  %publisher_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %91, i32 0, i32 20, !dbg !8370
  %s206 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %publisher_identifier, i32 0, i32 0, !dbg !8371
  %92 = load i8*, i8** %s206, align 8, !dbg !8371
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i32 1, i8* %92), !dbg !8372
  br label %if.end207, !dbg !8372

if.end207:                                        ; preds = %if.then205, %if.end198
  %93 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8373
  %opt208 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %93, i32 0, i32 37, !dbg !8375
  %94 = bitcast %struct.iso_option* %opt208 to i32*, !dbg !8376
  %bf.load209 = load i32, i32* %94, align 8, !dbg !8376
  %bf.lshr210 = lshr i32 %bf.load209, 23, !dbg !8376
  %bf.clear211 = and i32 %bf.lshr210, 3, !dbg !8376
  %cmp212 = icmp ne i32 %bf.clear211, 2, !dbg !8377
  br i1 %cmp212, label %if.then214, label %if.end245, !dbg !8378

if.then214:                                       ; preds = %if.end207
  %95 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8379
  %opt215 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %95, i32 0, i32 37, !dbg !8382
  %96 = bitcast %struct.iso_option* %opt215 to i32*, !dbg !8383
  %bf.load216 = load i32, i32* %96, align 8, !dbg !8383
  %bf.lshr217 = lshr i32 %bf.load216, 23, !dbg !8383
  %bf.clear218 = and i32 %bf.lshr217, 3, !dbg !8383
  %cmp219 = icmp eq i32 %bf.clear218, 0, !dbg !8384
  br i1 %cmp219, label %if.then221, label %if.else226, !dbg !8385

if.then221:                                       ; preds = %if.then214
  %97 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8386
  %opt222 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %97, i32 0, i32 37, !dbg !8387
  %98 = bitcast %struct.iso_option* %opt222 to i32*, !dbg !8388
  %bf.load223 = load i32, i32* %98, align 8, !dbg !8388
  %bf.lshr224 = lshr i32 %bf.load223, 23, !dbg !8388
  %bf.clear225 = and i32 %bf.lshr224, 3, !dbg !8388
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 0, i32 %bf.clear225), !dbg !8389
  br label %if.end244, !dbg !8389

if.else226:                                       ; preds = %if.then214
  %99 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8390
  %opt227 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %99, i32 0, i32 37, !dbg !8392
  %100 = bitcast %struct.iso_option* %opt227 to i32*, !dbg !8393
  %bf.load228 = load i32, i32* %100, align 8, !dbg !8393
  %bf.lshr229 = lshr i32 %bf.load228, 23, !dbg !8393
  %bf.clear230 = and i32 %bf.lshr229, 3, !dbg !8393
  %cmp231 = icmp eq i32 %bf.clear230, 1, !dbg !8394
  br i1 %cmp231, label %if.then233, label %if.else234, !dbg !8395

if.then233:                                       ; preds = %if.else226
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0)), !dbg !8396
  br label %if.end243, !dbg !8396

if.else234:                                       ; preds = %if.else226
  %101 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8397
  %opt235 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %101, i32 0, i32 37, !dbg !8399
  %102 = bitcast %struct.iso_option* %opt235 to i32*, !dbg !8400
  %bf.load236 = load i32, i32* %102, align 8, !dbg !8400
  %bf.lshr237 = lshr i32 %bf.load236, 23, !dbg !8400
  %bf.clear238 = and i32 %bf.lshr237, 3, !dbg !8400
  %cmp239 = icmp eq i32 %bf.clear238, 2, !dbg !8401
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !8402

if.then241:                                       ; preds = %if.else234
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0)), !dbg !8403
  br label %if.end242, !dbg !8403

if.end242:                                        ; preds = %if.then241, %if.else234
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then233
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.then221
  br label %if.end245, !dbg !8404

if.end245:                                        ; preds = %if.end244, %if.end207
  %103 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8405
  %opt246 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %103, i32 0, i32 37, !dbg !8407
  %104 = bitcast %struct.iso_option* %opt246 to i32*, !dbg !8408
  %bf.load247 = load i32, i32* %104, align 8, !dbg !8408
  %bf.lshr248 = lshr i32 %bf.load247, 25, !dbg !8408
  %bf.clear249 = and i32 %bf.lshr248, 1, !dbg !8408
  %cmp250 = icmp ne i32 %bf.clear249, 0, !dbg !8409
  br i1 %cmp250, label %if.then252, label %if.end254, !dbg !8410

if.then252:                                       ; preds = %if.end245
  %105 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8411
  %volume_identifier = getelementptr inbounds %struct.iso9660, %struct.iso9660* %105, i32 0, i32 19, !dbg !8412
  %s253 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %volume_identifier, i32 0, i32 0, !dbg !8413
  %106 = load i8*, i8** %s253, align 8, !dbg !8413
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i32 1, i8* %106), !dbg !8414
  br label %if.end254, !dbg !8414

if.end254:                                        ; preds = %if.then252, %if.end245
  %107 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8415
  %opt255 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %107, i32 0, i32 37, !dbg !8417
  %108 = bitcast %struct.iso_option* %opt255 to i32*, !dbg !8418
  %bf.load256 = load i32, i32* %108, align 8, !dbg !8418
  %bf.lshr257 = lshr i32 %bf.load256, 26, !dbg !8418
  %bf.clear258 = and i32 %bf.lshr257, 1, !dbg !8418
  %cmp259 = icmp ne i32 %bf.clear258, 0, !dbg !8419
  br i1 %cmp259, label %if.then261, label %if.end266, !dbg !8420

if.then261:                                       ; preds = %if.end254
  %109 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8421
  %opt262 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %109, i32 0, i32 37, !dbg !8422
  %110 = bitcast %struct.iso_option* %opt262 to i32*, !dbg !8423
  %bf.load263 = load i32, i32* %110, align 8, !dbg !8423
  %bf.lshr264 = lshr i32 %bf.load263, 26, !dbg !8423
  %bf.clear265 = and i32 %bf.lshr264, 1, !dbg !8423
  call void (%struct.archive_string*, i32*, i8*, i32, ...) @set_option_info(%struct.archive_string* %info, i32* %opt, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 %bf.clear265), !dbg !8424
  br label %if.end266, !dbg !8424

if.end266:                                        ; preds = %if.then261, %if.end254
  %111 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8425
  %call267 = call i8* @wb_buffptr(%struct.archive_write* %111), !dbg !8426
  %s268 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %info, i32 0, i32 0, !dbg !8427
  %112 = load i8*, i8** %s268, align 8, !dbg !8427
  %113 = load i64, i64* %info_size, align 8, !dbg !8428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call267, i8* %112, i64 %113, i32 1, i1 false), !dbg !8429
  call void @archive_string_free(%struct.archive_string* %info), !dbg !8431
  %114 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8432
  %115 = load i64, i64* %info_size, align 8, !dbg !8433
  %call269 = call i32 @wb_consume(%struct.archive_write* %114, i64 %115), !dbg !8434
  store i32 %call269, i32* %retval, align 4, !dbg !8435
  br label %return, !dbg !8435

return:                                           ; preds = %if.end266, %if.then7, %if.then3
  %116 = load i32, i32* %retval, align 4, !dbg !8436
  ret i32 %116, !dbg !8436
}

; Function Attrs: nounwind uwtable
define internal i32 @write_path_table(%struct.archive_write* %a, i32 %type_m, %struct.vdd* %vdd) #0 !dbg !916 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %type_m.addr = alloca i32, align 4
  %vdd.addr = alloca %struct.vdd*, align 8
  %depth = alloca i32, align 4
  %r = alloca i32, align 4
  %path_table_size = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8437, metadata !986), !dbg !8438
  store i32 %type_m, i32* %type_m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type_m.addr, metadata !8439, metadata !986), !dbg !8440
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !8441, metadata !986), !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !8443, metadata !986), !dbg !8444
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8445, metadata !986), !dbg !8446
  call void @llvm.dbg.declare(metadata i64* %path_table_size, metadata !8447, metadata !986), !dbg !8448
  store i32 0, i32* %r, align 4, !dbg !8449
  store i64 0, i64* %path_table_size, align 8, !dbg !8450
  store i32 0, i32* %depth, align 4, !dbg !8451
  br label %for.cond, !dbg !8453

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %depth, align 4, !dbg !8454
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8457
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 3, !dbg !8458
  %2 = load i32, i32* %max_depth, align 8, !dbg !8458
  %cmp = icmp slt i32 %0, %2, !dbg !8459
  br i1 %cmp, label %for.body, label %for.end, !dbg !8460

for.body:                                         ; preds = %for.cond
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8461
  %4 = load i32, i32* %type_m.addr, align 4, !dbg !8463
  %5 = load i32, i32* %depth, align 4, !dbg !8464
  %6 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8465
  %call = call i32 @_write_path_table(%struct.archive_write* %3, i32 %4, i32 %5, %struct.vdd* %6), !dbg !8466
  store i32 %call, i32* %r, align 4, !dbg !8467
  %7 = load i32, i32* %r, align 4, !dbg !8468
  %cmp1 = icmp slt i32 %7, 0, !dbg !8470
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8471

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %r, align 4, !dbg !8472
  store i32 %8, i32* %retval, align 4, !dbg !8473
  br label %return, !dbg !8473

if.end:                                           ; preds = %for.body
  %9 = load i32, i32* %r, align 4, !dbg !8474
  %conv = sext i32 %9 to i64, !dbg !8474
  %10 = load i64, i64* %path_table_size, align 8, !dbg !8475
  %add = add i64 %10, %conv, !dbg !8475
  store i64 %add, i64* %path_table_size, align 8, !dbg !8475
  br label %for.inc, !dbg !8476

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %depth, align 4, !dbg !8477
  %inc = add nsw i32 %11, 1, !dbg !8477
  store i32 %inc, i32* %depth, align 4, !dbg !8477
  br label %for.cond, !dbg !8479

for.end:                                          ; preds = %for.cond
  %12 = load i64, i64* %path_table_size, align 8, !dbg !8480
  %rem = urem i64 %12, 4096, !dbg !8481
  store i64 %rem, i64* %path_table_size, align 8, !dbg !8482
  %13 = load i64, i64* %path_table_size, align 8, !dbg !8483
  %cmp2 = icmp ugt i64 %13, 0, !dbg !8485
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !8486

if.then4:                                         ; preds = %for.end
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8487
  %15 = load i64, i64* %path_table_size, align 8, !dbg !8488
  %sub = sub i64 4096, %15, !dbg !8489
  %call5 = call i32 @write_null(%struct.archive_write* %14, i64 %sub), !dbg !8490
  store i32 %call5, i32* %r, align 4, !dbg !8491
  br label %if.end6, !dbg !8492

if.end6:                                          ; preds = %if.then4, %for.end
  %16 = load i32, i32* %r, align 4, !dbg !8493
  store i32 %16, i32* %retval, align 4, !dbg !8494
  br label %return, !dbg !8494

return:                                           ; preds = %if.end6, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8495
  ret i32 %17, !dbg !8495
}

; Function Attrs: nounwind uwtable
define internal i32 @write_directory_descriptors(%struct.archive_write* %a, %struct.vdd* %vdd) #0 !dbg !924 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %np = alloca %struct.isoent*, align 8
  %depth = alloca i32, align 4
  %r = alloca i32, align 4
  %extr = alloca %struct.extr_rec*, align 8
  %wb = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8496, metadata !986), !dbg !8497
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !8498, metadata !986), !dbg !8499
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !8500, metadata !986), !dbg !8501
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !8502, metadata !986), !dbg !8503
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8504, metadata !986), !dbg !8505
  store i32 0, i32* %depth, align 4, !dbg !8506
  %0 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8507
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %0, i32 0, i32 0, !dbg !8508
  %1 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !8508
  store %struct.isoent* %1, %struct.isoent** %np, align 8, !dbg !8509
  br label %do.body, !dbg !8510

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %extr, metadata !8511, metadata !986), !dbg !8513
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8514
  %3 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8515
  %4 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8516
  %5 = load i32, i32* %depth, align 4, !dbg !8517
  %call = call i32 @_write_directory_descriptors(%struct.archive_write* %2, %struct.vdd* %3, %struct.isoent* %4, i32 %5), !dbg !8518
  store i32 %call, i32* %r, align 4, !dbg !8519
  %6 = load i32, i32* %r, align 4, !dbg !8520
  %cmp = icmp slt i32 %6, 0, !dbg !8522
  br i1 %cmp, label %if.then, label %if.end, !dbg !8523

if.then:                                          ; preds = %do.body
  %7 = load i32, i32* %r, align 4, !dbg !8524
  store i32 %7, i32* %retval, align 4, !dbg !8525
  br label %return, !dbg !8525

if.end:                                           ; preds = %do.body
  %8 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8526
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %8, i32 0, i32 1, !dbg !8528
  %9 = load i32, i32* %vdd_type, align 8, !dbg !8528
  %cmp1 = icmp ne i32 %9, 1, !dbg !8529
  br i1 %cmp1, label %if.then2, label %if.end13, !dbg !8530

if.then2:                                         ; preds = %if.end
  %10 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8531
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 21, !dbg !8534
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 0, !dbg !8535
  %11 = load %struct.extr_rec*, %struct.extr_rec** %first, align 8, !dbg !8535
  store %struct.extr_rec* %11, %struct.extr_rec** %extr, align 8, !dbg !8536
  br label %for.cond, !dbg !8537

for.cond:                                         ; preds = %for.inc, %if.then2
  %12 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8538
  %cmp3 = icmp ne %struct.extr_rec* %12, null, !dbg !8540
  br i1 %cmp3, label %for.body, label %for.end, !dbg !8541

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %wb, metadata !8543, metadata !986), !dbg !8545
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8546
  %call4 = call i8* @wb_buffptr(%struct.archive_write* %13), !dbg !8547
  store i8* %call4, i8** %wb, align 8, !dbg !8548
  %14 = load i8*, i8** %wb, align 8, !dbg !8549
  %15 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8550
  %buf = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %15, i32 0, i32 2, !dbg !8551
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !8552
  %16 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8553
  %offset = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %16, i32 0, i32 1, !dbg !8554
  %17 = load i32, i32* %offset, align 4, !dbg !8554
  %conv = sext i32 %17 to i64, !dbg !8553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %arraydecay, i64 %conv, i32 1, i1 false), !dbg !8552
  %18 = load i8*, i8** %wb, align 8, !dbg !8555
  %19 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8556
  %offset5 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %19, i32 0, i32 1, !dbg !8557
  %20 = load i32, i32* %offset5, align 4, !dbg !8557
  %idx.ext = sext i32 %20 to i64, !dbg !8558
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !8558
  %21 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8559
  %offset6 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %21, i32 0, i32 1, !dbg !8560
  %22 = load i32, i32* %offset6, align 4, !dbg !8560
  %sub = sub nsw i32 2048, %22, !dbg !8561
  %conv7 = sext i32 %sub to i64, !dbg !8562
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv7, i32 1, i1 false), !dbg !8563
  %23 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8564
  %call8 = call i32 @wb_consume(%struct.archive_write* %23, i64 2048), !dbg !8565
  store i32 %call8, i32* %r, align 4, !dbg !8566
  %24 = load i32, i32* %r, align 4, !dbg !8567
  %cmp9 = icmp slt i32 %24, 0, !dbg !8569
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !8570

if.then11:                                        ; preds = %for.body
  %25 = load i32, i32* %r, align 4, !dbg !8571
  store i32 %25, i32* %retval, align 4, !dbg !8572
  br label %return, !dbg !8572

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !8573

for.inc:                                          ; preds = %if.end12
  %26 = load %struct.extr_rec*, %struct.extr_rec** %extr, align 8, !dbg !8574
  %next = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %26, i32 0, i32 3, !dbg !8575
  %27 = load %struct.extr_rec*, %struct.extr_rec** %next, align 8, !dbg !8575
  store %struct.extr_rec* %27, %struct.extr_rec** %extr, align 8, !dbg !8576
  br label %for.cond, !dbg !8577

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !8579

if.end13:                                         ; preds = %for.end, %if.end
  %28 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8580
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %28, i32 0, i32 5, !dbg !8582
  %first14 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !8583
  %29 = load %struct.isoent*, %struct.isoent** %first14, align 8, !dbg !8583
  %cmp15 = icmp ne %struct.isoent* %29, null, !dbg !8584
  br i1 %cmp15, label %land.lhs.true, label %if.end22, !dbg !8585

land.lhs.true:                                    ; preds = %if.end13
  %30 = load i32, i32* %depth, align 4, !dbg !8586
  %add = add nsw i32 %30, 1, !dbg !8588
  %31 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !8589
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %31, i32 0, i32 3, !dbg !8590
  %32 = load i32, i32* %max_depth, align 8, !dbg !8590
  %cmp17 = icmp slt i32 %add, %32, !dbg !8591
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !8592

if.then19:                                        ; preds = %land.lhs.true
  %33 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8593
  %subdirs20 = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 5, !dbg !8595
  %first21 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs20, i32 0, i32 0, !dbg !8596
  %34 = load %struct.isoent*, %struct.isoent** %first21, align 8, !dbg !8596
  store %struct.isoent* %34, %struct.isoent** %np, align 8, !dbg !8597
  %35 = load i32, i32* %depth, align 4, !dbg !8598
  %inc = add nsw i32 %35, 1, !dbg !8598
  store i32 %inc, i32* %depth, align 4, !dbg !8598
  br label %do.cond, !dbg !8599

if.end22:                                         ; preds = %land.lhs.true, %if.end13
  br label %while.cond, !dbg !8600

while.cond:                                       ; preds = %if.end30, %if.end22
  %36 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8601
  %37 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8603
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 2, !dbg !8604
  %38 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !8604
  %cmp23 = icmp ne %struct.isoent* %36, %38, !dbg !8605
  br i1 %cmp23, label %while.body, label %while.end, !dbg !8606

while.body:                                       ; preds = %while.cond
  %39 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8607
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %39, i32 0, i32 8, !dbg !8610
  %40 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !8610
  %cmp25 = icmp eq %struct.isoent* %40, null, !dbg !8611
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !8612

if.then27:                                        ; preds = %while.body
  %41 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8613
  %parent28 = getelementptr inbounds %struct.isoent, %struct.isoent* %41, i32 0, i32 2, !dbg !8615
  %42 = load %struct.isoent*, %struct.isoent** %parent28, align 8, !dbg !8615
  store %struct.isoent* %42, %struct.isoent** %np, align 8, !dbg !8616
  %43 = load i32, i32* %depth, align 4, !dbg !8617
  %dec = add nsw i32 %43, -1, !dbg !8617
  store i32 %dec, i32* %depth, align 4, !dbg !8617
  br label %if.end30, !dbg !8618

if.else:                                          ; preds = %while.body
  %44 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8619
  %drnext29 = getelementptr inbounds %struct.isoent, %struct.isoent* %44, i32 0, i32 8, !dbg !8621
  %45 = load %struct.isoent*, %struct.isoent** %drnext29, align 8, !dbg !8621
  store %struct.isoent* %45, %struct.isoent** %np, align 8, !dbg !8622
  br label %while.end, !dbg !8623

if.end30:                                         ; preds = %if.then27
  br label %while.cond, !dbg !8624

while.end:                                        ; preds = %if.else, %while.cond
  br label %do.cond, !dbg !8626

do.cond:                                          ; preds = %while.end, %if.then19
  %46 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8627
  %47 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8629
  %parent31 = getelementptr inbounds %struct.isoent, %struct.isoent* %47, i32 0, i32 2, !dbg !8630
  %48 = load %struct.isoent*, %struct.isoent** %parent31, align 8, !dbg !8630
  %cmp32 = icmp ne %struct.isoent* %46, %48, !dbg !8631
  br i1 %cmp32, label %do.body, label %do.end, !dbg !8632

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !8633
  br label %return, !dbg !8633

return:                                           ; preds = %do.end, %if.then11, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !8634
  ret i32 %49, !dbg !8634
}

; Function Attrs: nounwind uwtable
define internal i32 @write_rr_ER(%struct.archive_write* %a) #0 !dbg !928 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %p = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8635, metadata !986), !dbg !8636
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8637, metadata !986), !dbg !8638
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8639
  %call = call i8* @wb_buffptr(%struct.archive_write* %0), !dbg !8640
  store i8* %call, i8** %p, align 8, !dbg !8641
  %1 = load i8*, i8** %p, align 8, !dbg !8642
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 2048, i32 1, i1 false), !dbg !8643
  %2 = load i8*, i8** %p, align 8, !dbg !8644
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !8644
  store i8 69, i8* %arrayidx, align 1, !dbg !8645
  %3 = load i8*, i8** %p, align 8, !dbg !8646
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8646
  store i8 82, i8* %arrayidx1, align 1, !dbg !8647
  %4 = load i8*, i8** %p, align 8, !dbg !8648
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 3, !dbg !8648
  store i8 1, i8* %arrayidx2, align 1, !dbg !8649
  %5 = load i8*, i8** %p, align 8, !dbg !8650
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 2, !dbg !8650
  store i8 -19, i8* %arrayidx3, align 1, !dbg !8651
  %6 = load i8*, i8** %p, align 8, !dbg !8652
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 4, !dbg !8652
  store i8 10, i8* %arrayidx4, align 1, !dbg !8653
  %7 = load i8*, i8** %p, align 8, !dbg !8654
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 5, !dbg !8654
  store i8 84, i8* %arrayidx5, align 1, !dbg !8655
  %8 = load i8*, i8** %p, align 8, !dbg !8656
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 6, !dbg !8656
  store i8 -121, i8* %arrayidx6, align 1, !dbg !8657
  %9 = load i8*, i8** %p, align 8, !dbg !8658
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 7, !dbg !8658
  store i8 1, i8* %arrayidx7, align 1, !dbg !8659
  %10 = load i8*, i8** %p, align 8, !dbg !8660
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 8, !dbg !8660
  %11 = load i8*, i8** %p, align 8, !dbg !8661
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !8661
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !8661
  %conv = zext i8 %12 to i64, !dbg !8661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @rrip_identifier, i32 0, i32 0), i64 %conv, i32 1, i1 false), !dbg !8662
  %13 = load i8*, i8** %p, align 8, !dbg !8663
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i64 4, !dbg !8663
  %14 = load i8, i8* %arrayidx10, align 1, !dbg !8663
  %conv11 = zext i8 %14 to i32, !dbg !8663
  %add = add nsw i32 8, %conv11, !dbg !8664
  %idxprom = sext i32 %add to i64, !dbg !8665
  %15 = load i8*, i8** %p, align 8, !dbg !8665
  %arrayidx12 = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !8665
  %16 = load i8*, i8** %p, align 8, !dbg !8666
  %arrayidx13 = getelementptr inbounds i8, i8* %16, i64 5, !dbg !8666
  %17 = load i8, i8* %arrayidx13, align 1, !dbg !8666
  %conv14 = zext i8 %17 to i64, !dbg !8666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx12, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @rrip_descriptor, i32 0, i32 0), i64 %conv14, i32 1, i1 false), !dbg !8667
  %18 = load i8*, i8** %p, align 8, !dbg !8668
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 4, !dbg !8668
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !8668
  %conv16 = zext i8 %19 to i32, !dbg !8668
  %add17 = add nsw i32 8, %conv16, !dbg !8669
  %20 = load i8*, i8** %p, align 8, !dbg !8670
  %arrayidx18 = getelementptr inbounds i8, i8* %20, i64 5, !dbg !8670
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !8670
  %conv19 = zext i8 %21 to i32, !dbg !8670
  %add20 = add nsw i32 %add17, %conv19, !dbg !8671
  %idxprom21 = sext i32 %add20 to i64, !dbg !8672
  %22 = load i8*, i8** %p, align 8, !dbg !8672
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %idxprom21, !dbg !8672
  %23 = load i8*, i8** %p, align 8, !dbg !8673
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 6, !dbg !8673
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !8673
  %conv24 = zext i8 %24 to i64, !dbg !8673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx22, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @rrip_source, i32 0, i32 0), i64 %conv24, i32 1, i1 false), !dbg !8674
  %25 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8675
  %call25 = call i32 @wb_consume(%struct.archive_write* %25, i64 2048), !dbg !8676
  ret i32 %call25, !dbg !8677
}

; Function Attrs: nounwind uwtable
define internal i32 @write_file_descriptors(%struct.archive_write* %a) #0 !dbg !929 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %blocks = alloca i64, align 8
  %offset = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8678, metadata !986), !dbg !8679
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !8680, metadata !986), !dbg !8681
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8682
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !8683
  %1 = load i8*, i8** %format_data, align 8, !dbg !8683
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !8682
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !8681
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !8684, metadata !986), !dbg !8685
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !8686, metadata !986), !dbg !8687
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !8688, metadata !986), !dbg !8689
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8690, metadata !986), !dbg !8691
  store i64 0, i64* %blocks, align 8, !dbg !8692
  store i64 0, i64* %offset, align 8, !dbg !8693
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8694
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 36, !dbg !8696
  %catalog = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 1, !dbg !8697
  %4 = load %struct.isoent*, %struct.isoent** %catalog, align 8, !dbg !8697
  %cmp = icmp ne %struct.isoent* %4, null, !dbg !8698
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8699

if.then:                                          ; preds = %entry
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8700
  %call = call i32 @make_boot_catalog(%struct.archive_write* %5), !dbg !8702
  store i32 %call, i32* %r, align 4, !dbg !8703
  %6 = load i32, i32* %r, align 4, !dbg !8704
  %cmp1 = icmp slt i32 %6, 0, !dbg !8706
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8707

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %r, align 4, !dbg !8708
  store i32 %7, i32* %retval, align 4, !dbg !8709
  br label %return, !dbg !8709

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !8710

if.end3:                                          ; preds = %if.end, %entry
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8711
  %el_torito4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 36, !dbg !8713
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito4, i32 0, i32 3, !dbg !8714
  %9 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !8714
  %cmp5 = icmp ne %struct.isoent* %9, null, !dbg !8715
  br i1 %cmp5, label %if.then6, label %if.end21, !dbg !8716

if.then6:                                         ; preds = %if.end3
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8717
  %el_torito7 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 36, !dbg !8719
  %boot8 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito7, i32 0, i32 3, !dbg !8720
  %11 = load %struct.isoent*, %struct.isoent** %boot8, align 8, !dbg !8720
  %file9 = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 1, !dbg !8721
  %12 = load %struct.isofile*, %struct.isofile** %file9, align 8, !dbg !8721
  store %struct.isofile* %12, %struct.isofile** %file, align 8, !dbg !8722
  %13 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8723
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %13, i32 0, i32 10, !dbg !8724
  %blocks10 = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 2, !dbg !8725
  %14 = load i32, i32* %blocks10, align 8, !dbg !8725
  %conv = sext i32 %14 to i64, !dbg !8723
  store i64 %conv, i64* %blocks, align 8, !dbg !8726
  %15 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8727
  %content11 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 10, !dbg !8728
  %offset_of_temp = getelementptr inbounds %struct.content, %struct.content* %content11, i32 0, i32 0, !dbg !8729
  %16 = load i64, i64* %offset_of_temp, align 8, !dbg !8729
  store i64 %16, i64* %offset, align 8, !dbg !8730
  %17 = load i64, i64* %offset, align 8, !dbg !8731
  %cmp12 = icmp ne i64 %17, 0, !dbg !8733
  br i1 %cmp12, label %if.then14, label %if.end20, !dbg !8734

if.then14:                                        ; preds = %if.then6
  %18 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8735
  %19 = load i64, i64* %offset, align 8, !dbg !8737
  %20 = load i64, i64* %blocks, align 8, !dbg !8738
  %shl = shl i64 %20, 11, !dbg !8739
  %call15 = call i32 @write_file_contents(%struct.archive_write* %18, i64 %19, i64 %shl), !dbg !8740
  store i32 %call15, i32* %r, align 4, !dbg !8741
  %21 = load i32, i32* %r, align 4, !dbg !8742
  %cmp16 = icmp slt i32 %21, 0, !dbg !8744
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8745

if.then18:                                        ; preds = %if.then14
  %22 = load i32, i32* %r, align 4, !dbg !8746
  store i32 %22, i32* %retval, align 4, !dbg !8747
  br label %return, !dbg !8747

if.end19:                                         ; preds = %if.then14
  store i64 0, i64* %blocks, align 8, !dbg !8748
  store i64 0, i64* %offset, align 8, !dbg !8749
  br label %if.end20, !dbg !8750

if.end20:                                         ; preds = %if.end19, %if.then6
  br label %if.end21, !dbg !8751

if.end21:                                         ; preds = %if.end20, %if.end3
  %23 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !8752
  %data_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %23, i32 0, i32 12, !dbg !8754
  %first = getelementptr inbounds %struct.anon.5, %struct.anon.5* %data_file_list, i32 0, i32 0, !dbg !8755
  %24 = load %struct.isofile*, %struct.isofile** %first, align 8, !dbg !8755
  store %struct.isofile* %24, %struct.isofile** %file, align 8, !dbg !8756
  br label %for.cond, !dbg !8757

for.cond:                                         ; preds = %for.inc, %if.end21
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8758
  %cmp22 = icmp ne %struct.isofile* %25, null, !dbg !8760
  br i1 %cmp22, label %for.body, label %for.end, !dbg !8761

for.body:                                         ; preds = %for.cond
  %26 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8763
  %write_content = getelementptr inbounds %struct.isofile, %struct.isofile* %26, i32 0, i32 12, !dbg !8766
  %27 = load i32, i32* %write_content, align 8, !dbg !8766
  %tobool = icmp ne i32 %27, 0, !dbg !8763
  br i1 %tobool, label %if.end25, label %if.then24, !dbg !8767

if.then24:                                        ; preds = %for.body
  br label %for.inc, !dbg !8768

if.end25:                                         ; preds = %for.body
  %28 = load i64, i64* %offset, align 8, !dbg !8769
  %29 = load i64, i64* %blocks, align 8, !dbg !8771
  %shl26 = shl i64 %29, 11, !dbg !8772
  %add = add nsw i64 %28, %shl26, !dbg !8773
  %30 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8774
  %content27 = getelementptr inbounds %struct.isofile, %struct.isofile* %30, i32 0, i32 10, !dbg !8775
  %offset_of_temp28 = getelementptr inbounds %struct.content, %struct.content* %content27, i32 0, i32 0, !dbg !8776
  %31 = load i64, i64* %offset_of_temp28, align 8, !dbg !8776
  %cmp29 = icmp slt i64 %add, %31, !dbg !8777
  br i1 %cmp29, label %if.then31, label %if.end44, !dbg !8778

if.then31:                                        ; preds = %if.end25
  %32 = load i64, i64* %blocks, align 8, !dbg !8779
  %cmp32 = icmp sgt i64 %32, 0, !dbg !8782
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !8783

if.then34:                                        ; preds = %if.then31
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8784
  %34 = load i64, i64* %offset, align 8, !dbg !8786
  %35 = load i64, i64* %blocks, align 8, !dbg !8787
  %shl35 = shl i64 %35, 11, !dbg !8788
  %call36 = call i32 @write_file_contents(%struct.archive_write* %33, i64 %34, i64 %shl35), !dbg !8789
  store i32 %call36, i32* %r, align 4, !dbg !8790
  %36 = load i32, i32* %r, align 4, !dbg !8791
  %cmp37 = icmp slt i32 %36, 0, !dbg !8793
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8794

if.then39:                                        ; preds = %if.then34
  %37 = load i32, i32* %r, align 4, !dbg !8795
  store i32 %37, i32* %retval, align 4, !dbg !8796
  br label %return, !dbg !8796

if.end40:                                         ; preds = %if.then34
  br label %if.end41, !dbg !8797

if.end41:                                         ; preds = %if.end40, %if.then31
  store i64 0, i64* %blocks, align 8, !dbg !8798
  %38 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8799
  %content42 = getelementptr inbounds %struct.isofile, %struct.isofile* %38, i32 0, i32 10, !dbg !8800
  %offset_of_temp43 = getelementptr inbounds %struct.content, %struct.content* %content42, i32 0, i32 0, !dbg !8801
  %39 = load i64, i64* %offset_of_temp43, align 8, !dbg !8801
  store i64 %39, i64* %offset, align 8, !dbg !8802
  br label %if.end44, !dbg !8803

if.end44:                                         ; preds = %if.end41, %if.end25
  %40 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8804
  %content45 = getelementptr inbounds %struct.isofile, %struct.isofile* %40, i32 0, i32 10, !dbg !8805
  %41 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8806
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %41, i32 0, i32 11, !dbg !8807
  store %struct.content* %content45, %struct.content** %cur_content, align 8, !dbg !8808
  br label %do.body, !dbg !8809

do.body:                                          ; preds = %do.cond, %if.end44
  %42 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8810
  %cur_content46 = getelementptr inbounds %struct.isofile, %struct.isofile* %42, i32 0, i32 11, !dbg !8812
  %43 = load %struct.content*, %struct.content** %cur_content46, align 8, !dbg !8812
  %blocks47 = getelementptr inbounds %struct.content, %struct.content* %43, i32 0, i32 2, !dbg !8813
  %44 = load i32, i32* %blocks47, align 8, !dbg !8813
  %conv48 = sext i32 %44 to i64, !dbg !8810
  %45 = load i64, i64* %blocks, align 8, !dbg !8814
  %add49 = add nsw i64 %45, %conv48, !dbg !8814
  store i64 %add49, i64* %blocks, align 8, !dbg !8814
  %46 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8815
  %cur_content50 = getelementptr inbounds %struct.isofile, %struct.isofile* %46, i32 0, i32 11, !dbg !8816
  %47 = load %struct.content*, %struct.content** %cur_content50, align 8, !dbg !8816
  %next = getelementptr inbounds %struct.content, %struct.content* %47, i32 0, i32 4, !dbg !8817
  %48 = load %struct.content*, %struct.content** %next, align 8, !dbg !8817
  %49 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8818
  %cur_content51 = getelementptr inbounds %struct.isofile, %struct.isofile* %49, i32 0, i32 11, !dbg !8819
  store %struct.content* %48, %struct.content** %cur_content51, align 8, !dbg !8820
  br label %do.cond, !dbg !8821

do.cond:                                          ; preds = %do.body
  %50 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8822
  %cur_content52 = getelementptr inbounds %struct.isofile, %struct.isofile* %50, i32 0, i32 11, !dbg !8824
  %51 = load %struct.content*, %struct.content** %cur_content52, align 8, !dbg !8824
  %cmp53 = icmp ne %struct.content* %51, null, !dbg !8825
  br i1 %cmp53, label %do.body, label %do.end, !dbg !8826

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !8827

for.inc:                                          ; preds = %do.end, %if.then24
  %52 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !8828
  %datanext = getelementptr inbounds %struct.isofile, %struct.isofile* %52, i32 0, i32 1, !dbg !8830
  %53 = load %struct.isofile*, %struct.isofile** %datanext, align 8, !dbg !8830
  store %struct.isofile* %53, %struct.isofile** %file, align 8, !dbg !8831
  br label %for.cond, !dbg !8832

for.end:                                          ; preds = %for.cond
  %54 = load i64, i64* %blocks, align 8, !dbg !8834
  %cmp55 = icmp sgt i64 %54, 0, !dbg !8836
  br i1 %cmp55, label %if.then57, label %if.end64, !dbg !8837

if.then57:                                        ; preds = %for.end
  %55 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8838
  %56 = load i64, i64* %offset, align 8, !dbg !8840
  %57 = load i64, i64* %blocks, align 8, !dbg !8841
  %shl58 = shl i64 %57, 11, !dbg !8842
  %call59 = call i32 @write_file_contents(%struct.archive_write* %55, i64 %56, i64 %shl58), !dbg !8843
  store i32 %call59, i32* %r, align 4, !dbg !8844
  %58 = load i32, i32* %r, align 4, !dbg !8845
  %cmp60 = icmp slt i32 %58, 0, !dbg !8847
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !8848

if.then62:                                        ; preds = %if.then57
  %59 = load i32, i32* %r, align 4, !dbg !8849
  store i32 %59, i32* %retval, align 4, !dbg !8850
  br label %return, !dbg !8850

if.end63:                                         ; preds = %if.then57
  br label %if.end64, !dbg !8851

if.end64:                                         ; preds = %if.end63, %for.end
  store i32 0, i32* %retval, align 4, !dbg !8852
  br label %return, !dbg !8852

return:                                           ; preds = %if.end64, %if.then62, %if.then39, %if.then18, %if.then2
  %60 = load i32, i32* %retval, align 4, !dbg !8853
  ret i32 %60, !dbg !8853
}

; Function Attrs: nounwind uwtable
define internal %struct.isoent* @isoent_find_entry(%struct.isoent* %rootent, i8* %fn) #0 !dbg !655 {
entry:
  %rootent.addr = alloca %struct.isoent*, align 8
  %fn.addr = alloca i8*, align 8
  %name = alloca [256 x i8], align 16
  %isoent = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %l = alloca i32, align 4
  store %struct.isoent* %rootent, %struct.isoent** %rootent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent.addr, metadata !8854, metadata !986), !dbg !8855
  store i8* %fn, i8** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn.addr, metadata !8856, metadata !986), !dbg !8857
  call void @llvm.dbg.declare(metadata [256 x i8]* %name, metadata !8858, metadata !986), !dbg !8859
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !8860, metadata !986), !dbg !8861
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !8862, metadata !986), !dbg !8863
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8864, metadata !986), !dbg !8865
  %0 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !8866
  store %struct.isoent* %0, %struct.isoent** %isoent, align 8, !dbg !8867
  store %struct.isoent* null, %struct.isoent** %np, align 8, !dbg !8868
  br label %for.cond, !dbg !8869

for.cond:                                         ; preds = %if.end18, %entry
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !8870
  %1 = load i8*, i8** %fn.addr, align 8, !dbg !8874
  %call = call i32 @get_path_component(i8* %arraydecay, i64 256, i8* %1), !dbg !8875
  store i32 %call, i32* %l, align 4, !dbg !8876
  %2 = load i32, i32* %l, align 4, !dbg !8877
  %cmp = icmp eq i32 %2, 0, !dbg !8879
  br i1 %cmp, label %if.then, label %if.end, !dbg !8880

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !8881

if.end:                                           ; preds = %for.cond
  %3 = load i32, i32* %l, align 4, !dbg !8882
  %4 = load i8*, i8** %fn.addr, align 8, !dbg !8883
  %idx.ext = sext i32 %3 to i64, !dbg !8883
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !8883
  store i8* %add.ptr, i8** %fn.addr, align 8, !dbg !8883
  %5 = load i8*, i8** %fn.addr, align 8, !dbg !8884
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !8884
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8884
  %conv = sext i8 %6 to i32, !dbg !8884
  %cmp1 = icmp eq i32 %conv, 47, !dbg !8886
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !8887

if.then3:                                         ; preds = %if.end
  %7 = load i8*, i8** %fn.addr, align 8, !dbg !8888
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8888
  store i8* %incdec.ptr, i8** %fn.addr, align 8, !dbg !8888
  br label %if.end4, !dbg !8889

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !8890
  %arraydecay5 = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !8891
  %call6 = call %struct.isoent* @isoent_find_child(%struct.isoent* %8, i8* %arraydecay5), !dbg !8892
  store %struct.isoent* %call6, %struct.isoent** %np, align 8, !dbg !8893
  %9 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8894
  %cmp7 = icmp eq %struct.isoent* %9, null, !dbg !8896
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8897

if.then9:                                         ; preds = %if.end4
  br label %for.end, !dbg !8898

if.end10:                                         ; preds = %if.end4
  %10 = load i8*, i8** %fn.addr, align 8, !dbg !8899
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !8899
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !8899
  %conv12 = sext i8 %11 to i32, !dbg !8899
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !8901
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8902

if.then15:                                        ; preds = %if.end10
  br label %for.end, !dbg !8903

if.end16:                                         ; preds = %if.end10
  %12 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8904
  store %struct.isoent* %12, %struct.isoent** %isoent, align 8, !dbg !8905
  store %struct.isoent* null, %struct.isoent** %np, align 8, !dbg !8906
  %13 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !8907
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 22, !dbg !8909
  %bf.load = load i8, i8* %dir, align 8, !dbg !8909
  %bf.shl = shl i8 %bf.load, 6, !dbg !8909
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !8909
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !8909
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8907
  br i1 %tobool, label %if.end18, label %if.then17, !dbg !8910

if.then17:                                        ; preds = %if.end16
  br label %for.end, !dbg !8911

if.end18:                                         ; preds = %if.end16
  br label %for.cond, !dbg !8912

for.end:                                          ; preds = %if.then17, %if.then15, %if.then9, %if.then
  %14 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !8914
  ret %struct.isoent* %14, !dbg !8915
}

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i64 @zisofs_extract(%struct.archive_write* %a, %struct.zisofs_extract* %zisofs, i8* %p, i64 %bytes) #0 !dbg !657 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %zisofs.addr = alloca %struct.zisofs_extract*, align 8
  %p.addr = alloca i8*, align 8
  %bytes.addr = alloca i64, align 8
  %avail = alloca i64, align 8
  %r = alloca i32, align 4
  %rs = alloca i64, align 8
  %bst = alloca i32, align 4
  %bed = alloca i32, align 4
  %wb = alloca i8*, align 8
  %size = alloca i64, align 8
  %wsize = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !8916, metadata !986), !dbg !8917
  store %struct.zisofs_extract* %zisofs, %struct.zisofs_extract** %zisofs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zisofs_extract** %zisofs.addr, metadata !8918, metadata !986), !dbg !8919
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8920, metadata !986), !dbg !8921
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !8922, metadata !986), !dbg !8923
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !8924, metadata !986), !dbg !8925
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8926, metadata !986), !dbg !8927
  %0 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8928
  %initialized = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %0, i32 0, i32 3, !dbg !8930
  %bf.load = load i8, i8* %initialized, align 8, !dbg !8930
  %bf.shl = shl i8 %bf.load, 7, !dbg !8930
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !8930
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !8930
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8928
  br i1 %tobool, label %if.else, label %if.then, !dbg !8931

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %rs, metadata !8932, metadata !986), !dbg !8934
  %1 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8935
  %2 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8936
  %3 = load i8*, i8** %p.addr, align 8, !dbg !8937
  %4 = load i64, i64* %bytes.addr, align 8, !dbg !8938
  %call = call i64 @zisofs_extract_init(%struct.archive_write* %1, %struct.zisofs_extract* %2, i8* %3, i64 %4), !dbg !8939
  store i64 %call, i64* %rs, align 8, !dbg !8934
  %5 = load i64, i64* %rs, align 8, !dbg !8940
  %cmp = icmp slt i64 %5, 0, !dbg !8942
  br i1 %cmp, label %if.then1, label %if.end, !dbg !8943

if.then1:                                         ; preds = %if.then
  %6 = load i64, i64* %rs, align 8, !dbg !8944
  store i64 %6, i64* %retval, align 8, !dbg !8945
  br label %return, !dbg !8945

if.end:                                           ; preds = %if.then
  %7 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8946
  %initialized2 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %7, i32 0, i32 3, !dbg !8948
  %bf.load3 = load i8, i8* %initialized2, align 8, !dbg !8948
  %bf.shl4 = shl i8 %bf.load3, 7, !dbg !8948
  %bf.ashr5 = ashr i8 %bf.shl4, 7, !dbg !8948
  %bf.cast6 = sext i8 %bf.ashr5 to i32, !dbg !8948
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !8946
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8949

if.then8:                                         ; preds = %if.end
  %8 = load i64, i64* %bytes.addr, align 8, !dbg !8950
  %conv = trunc i64 %8 to i32, !dbg !8952
  %9 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8953
  %pz_offset = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %9, i32 0, i32 4, !dbg !8954
  %10 = load i32, i32* %pz_offset, align 4, !dbg !8955
  %add = add i32 %10, %conv, !dbg !8955
  store i32 %add, i32* %pz_offset, align 4, !dbg !8955
  %11 = load i64, i64* %bytes.addr, align 8, !dbg !8956
  store i64 %11, i64* %retval, align 8, !dbg !8957
  br label %return, !dbg !8957

if.end9:                                          ; preds = %if.end
  %12 = load i64, i64* %rs, align 8, !dbg !8958
  store i64 %12, i64* %avail, align 8, !dbg !8959
  %13 = load i64, i64* %bytes.addr, align 8, !dbg !8960
  %14 = load i64, i64* %avail, align 8, !dbg !8961
  %sub = sub i64 %13, %14, !dbg !8962
  %15 = load i8*, i8** %p.addr, align 8, !dbg !8963
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %sub, !dbg !8963
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !8963
  br label %if.end10, !dbg !8964

if.else:                                          ; preds = %entry
  %16 = load i64, i64* %bytes.addr, align 8, !dbg !8965
  store i64 %16, i64* %avail, align 8, !dbg !8966
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end9
  %17 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8967
  %block_avail = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %17, i32 0, i32 9, !dbg !8969
  %18 = load i32, i32* %block_avail, align 8, !dbg !8969
  %cmp11 = icmp eq i32 %18, 0, !dbg !8970
  br i1 %cmp11, label %if.then13, label %if.end61, !dbg !8971

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i32* %bst, metadata !8972, metadata !986), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %bed, metadata !8975, metadata !986), !dbg !8976
  %19 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8977
  %block_off = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %19, i32 0, i32 8, !dbg !8979
  %20 = load i64, i64* %block_off, align 8, !dbg !8979
  %add14 = add i64 %20, 4, !dbg !8980
  %21 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8981
  %block_pointers_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %21, i32 0, i32 6, !dbg !8982
  %22 = load i64, i64* %block_pointers_size, align 8, !dbg !8982
  %cmp15 = icmp uge i64 %add14, %22, !dbg !8983
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8984

if.then17:                                        ; preds = %if.then13
  %23 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !8985
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %23, i32 0, i32 0, !dbg !8987
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i32 0, i32 0)), !dbg !8988
  store i64 -30, i64* %retval, align 8, !dbg !8989
  br label %return, !dbg !8989

if.end18:                                         ; preds = %if.then13
  %24 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8990
  %block_pointers = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %24, i32 0, i32 5, !dbg !8991
  %25 = load i8*, i8** %block_pointers, align 8, !dbg !8991
  %26 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8992
  %block_off19 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %26, i32 0, i32 8, !dbg !8993
  %27 = load i64, i64* %block_off19, align 8, !dbg !8993
  %add.ptr20 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !8994
  %call21 = call i32 @archive_le32dec(i8* %add.ptr20), !dbg !8995
  store i32 %call21, i32* %bst, align 4, !dbg !8996
  %28 = load i32, i32* %bst, align 4, !dbg !8997
  %conv22 = zext i32 %28 to i64, !dbg !8997
  %29 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !8999
  %pz_offset23 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %29, i32 0, i32 4, !dbg !9000
  %30 = load i32, i32* %pz_offset23, align 4, !dbg !9000
  %conv24 = zext i32 %30 to i64, !dbg !8999
  %31 = load i64, i64* %bytes.addr, align 8, !dbg !9001
  %32 = load i64, i64* %avail, align 8, !dbg !9002
  %sub25 = sub i64 %31, %32, !dbg !9003
  %add26 = add i64 %conv24, %sub25, !dbg !9004
  %cmp27 = icmp ne i64 %conv22, %add26, !dbg !9005
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !9006

if.then29:                                        ; preds = %if.end18
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9007
  %archive30 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %33, i32 0, i32 0, !dbg !9009
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive30, i32 84, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i32 0, i32 0)), !dbg !9010
  store i64 -30, i64* %retval, align 8, !dbg !9011
  br label %return, !dbg !9011

if.end31:                                         ; preds = %if.end18
  %34 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9012
  %block_pointers32 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %34, i32 0, i32 5, !dbg !9013
  %35 = load i8*, i8** %block_pointers32, align 8, !dbg !9013
  %36 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9014
  %block_off33 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %36, i32 0, i32 8, !dbg !9015
  %37 = load i64, i64* %block_off33, align 8, !dbg !9015
  %add.ptr34 = getelementptr inbounds i8, i8* %35, i64 %37, !dbg !9016
  %add.ptr35 = getelementptr inbounds i8, i8* %add.ptr34, i64 4, !dbg !9017
  %call36 = call i32 @archive_le32dec(i8* %add.ptr35), !dbg !9018
  store i32 %call36, i32* %bed, align 4, !dbg !9019
  %38 = load i32, i32* %bed, align 4, !dbg !9020
  %39 = load i32, i32* %bst, align 4, !dbg !9022
  %cmp37 = icmp ult i32 %38, %39, !dbg !9023
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !9024

if.then39:                                        ; preds = %if.end31
  %40 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9025
  %archive40 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %40, i32 0, i32 0, !dbg !9027
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive40, i32 84, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i32 0, i32 0)), !dbg !9028
  store i64 -30, i64* %retval, align 8, !dbg !9029
  br label %return, !dbg !9029

if.end41:                                         ; preds = %if.end31
  %41 = load i32, i32* %bed, align 4, !dbg !9030
  %42 = load i32, i32* %bst, align 4, !dbg !9031
  %sub42 = sub i32 %41, %42, !dbg !9032
  %43 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9033
  %block_avail43 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %43, i32 0, i32 9, !dbg !9034
  store i32 %sub42, i32* %block_avail43, align 8, !dbg !9035
  %44 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9036
  %block_off44 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %44, i32 0, i32 8, !dbg !9037
  %45 = load i64, i64* %block_off44, align 8, !dbg !9038
  %add45 = add i64 %45, 4, !dbg !9038
  store i64 %add45, i64* %block_off44, align 8, !dbg !9038
  %46 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9039
  %stream_valid = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %46, i32 0, i32 11, !dbg !9041
  %47 = load i32, i32* %stream_valid, align 8, !dbg !9041
  %tobool46 = icmp ne i32 %47, 0, !dbg !9039
  br i1 %tobool46, label %if.then47, label %if.else49, !dbg !9042

if.then47:                                        ; preds = %if.end41
  %48 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9043
  %stream = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %48, i32 0, i32 10, !dbg !9044
  %call48 = call i32 @cm_zlib_inflateReset(%struct.z_stream_s* %stream), !dbg !9045
  store i32 %call48, i32* %r, align 4, !dbg !9046
  br label %if.end52, !dbg !9047

if.else49:                                        ; preds = %if.end41
  %49 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9048
  %stream50 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %49, i32 0, i32 10, !dbg !9048
  %call51 = call i32 @cm_zlib_inflateInit_(%struct.z_stream_s* %stream50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 112), !dbg !9048
  store i32 %call51, i32* %r, align 4, !dbg !9049
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.then47
  %50 = load i32, i32* %r, align 4, !dbg !9050
  %cmp53 = icmp ne i32 %50, 0, !dbg !9052
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !9053

if.then55:                                        ; preds = %if.end52
  %51 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9054
  %archive56 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %51, i32 0, i32 0, !dbg !9056
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive56, i32 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.68, i32 0, i32 0)), !dbg !9057
  store i64 -30, i64* %retval, align 8, !dbg !9058
  br label %return, !dbg !9058

if.end57:                                         ; preds = %if.end52
  %52 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9059
  %stream_valid58 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %52, i32 0, i32 11, !dbg !9060
  store i32 1, i32* %stream_valid58, align 8, !dbg !9061
  %53 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9062
  %stream59 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %53, i32 0, i32 10, !dbg !9063
  %total_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream59, i32 0, i32 2, !dbg !9064
  store i64 0, i64* %total_in, align 8, !dbg !9065
  %54 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9066
  %stream60 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %54, i32 0, i32 10, !dbg !9067
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream60, i32 0, i32 5, !dbg !9068
  store i64 0, i64* %total_out, align 8, !dbg !9069
  br label %if.end61, !dbg !9070

if.end61:                                         ; preds = %if.end57, %if.end10
  %55 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9071
  %block_avail62 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %55, i32 0, i32 9, !dbg !9073
  %56 = load i32, i32* %block_avail62, align 8, !dbg !9073
  %cmp63 = icmp eq i32 %56, 0, !dbg !9074
  br i1 %cmp63, label %if.then65, label %if.else82, !dbg !9075

if.then65:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i8** %wb, metadata !9076, metadata !986), !dbg !9078
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9079, metadata !986), !dbg !9080
  call void @llvm.dbg.declare(metadata i64* %wsize, metadata !9081, metadata !986), !dbg !9082
  %57 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9083
  %uncompressed_buffer_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %57, i32 0, i32 2, !dbg !9084
  %58 = load i64, i64* %uncompressed_buffer_size, align 8, !dbg !9084
  store i64 %58, i64* %size, align 8, !dbg !9085
  br label %while.cond, !dbg !9086

while.cond:                                       ; preds = %if.end80, %if.then65
  %59 = load i64, i64* %size, align 8, !dbg !9087
  %tobool66 = icmp ne i64 %59, 0, !dbg !9089
  br i1 %tobool66, label %while.body, label %while.end, !dbg !9089

while.body:                                       ; preds = %while.cond
  %60 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9090
  %call67 = call i8* @wb_buffptr(%struct.archive_write* %60), !dbg !9092
  store i8* %call67, i8** %wb, align 8, !dbg !9093
  %61 = load i64, i64* %size, align 8, !dbg !9094
  %62 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9096
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %62, i32 0, i32 14, !dbg !9096
  %63 = load i8*, i8** %format_data, align 8, !dbg !9096
  %64 = bitcast i8* %63 to %struct.iso9660*, !dbg !9096
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %64, i32 0, i32 31, !dbg !9096
  %65 = load i64, i64* %wbuff_remaining, align 8, !dbg !9096
  %cmp68 = icmp ugt i64 %61, %65, !dbg !9097
  br i1 %cmp68, label %if.then70, label %if.else73, !dbg !9098

if.then70:                                        ; preds = %while.body
  %66 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9099
  %format_data71 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %66, i32 0, i32 14, !dbg !9099
  %67 = load i8*, i8** %format_data71, align 8, !dbg !9099
  %68 = bitcast i8* %67 to %struct.iso9660*, !dbg !9099
  %wbuff_remaining72 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %68, i32 0, i32 31, !dbg !9099
  %69 = load i64, i64* %wbuff_remaining72, align 8, !dbg !9099
  store i64 %69, i64* %wsize, align 8, !dbg !9100
  br label %if.end74, !dbg !9101

if.else73:                                        ; preds = %while.body
  %70 = load i64, i64* %size, align 8, !dbg !9102
  store i64 %70, i64* %wsize, align 8, !dbg !9103
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then70
  %71 = load i8*, i8** %wb, align 8, !dbg !9104
  %72 = load i64, i64* %wsize, align 8, !dbg !9105
  call void @llvm.memset.p0i8.i64(i8* %71, i8 0, i64 %72, i32 1, i1 false), !dbg !9106
  %73 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9107
  %74 = load i64, i64* %wsize, align 8, !dbg !9108
  %call75 = call i32 @wb_consume(%struct.archive_write* %73, i64 %74), !dbg !9109
  store i32 %call75, i32* %r, align 4, !dbg !9110
  %75 = load i32, i32* %r, align 4, !dbg !9111
  %cmp76 = icmp slt i32 %75, 0, !dbg !9113
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !9114

if.then78:                                        ; preds = %if.end74
  %76 = load i32, i32* %r, align 4, !dbg !9115
  %conv79 = sext i32 %76 to i64, !dbg !9116
  store i64 %conv79, i64* %retval, align 8, !dbg !9117
  br label %return, !dbg !9117

if.end80:                                         ; preds = %if.end74
  %77 = load i64, i64* %wsize, align 8, !dbg !9118
  %78 = load i64, i64* %size, align 8, !dbg !9119
  %sub81 = sub i64 %78, %77, !dbg !9119
  store i64 %sub81, i64* %size, align 8, !dbg !9119
  br label %while.cond, !dbg !9120

while.end:                                        ; preds = %while.cond
  br label %if.end128, !dbg !9122

if.else82:                                        ; preds = %if.end61
  %79 = load i8*, i8** %p.addr, align 8, !dbg !9123
  %80 = ptrtoint i8* %79 to i64, !dbg !9125
  %81 = inttoptr i64 %80 to i8*, !dbg !9126
  %82 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9127
  %stream83 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %82, i32 0, i32 10, !dbg !9128
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream83, i32 0, i32 0, !dbg !9129
  store i8* %81, i8** %next_in, align 8, !dbg !9130
  %83 = load i64, i64* %avail, align 8, !dbg !9131
  %84 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9133
  %block_avail84 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %84, i32 0, i32 9, !dbg !9134
  %85 = load i32, i32* %block_avail84, align 8, !dbg !9134
  %conv85 = zext i32 %85 to i64, !dbg !9133
  %cmp86 = icmp ugt i64 %83, %conv85, !dbg !9135
  br i1 %cmp86, label %if.then88, label %if.else91, !dbg !9136

if.then88:                                        ; preds = %if.else82
  %86 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9137
  %block_avail89 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %86, i32 0, i32 9, !dbg !9138
  %87 = load i32, i32* %block_avail89, align 8, !dbg !9138
  %88 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9139
  %stream90 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %88, i32 0, i32 10, !dbg !9140
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream90, i32 0, i32 1, !dbg !9141
  store i32 %87, i32* %avail_in, align 8, !dbg !9142
  br label %if.end95, !dbg !9139

if.else91:                                        ; preds = %if.else82
  %89 = load i64, i64* %avail, align 8, !dbg !9143
  %conv92 = trunc i64 %89 to i32, !dbg !9144
  %90 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9145
  %stream93 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %90, i32 0, i32 10, !dbg !9146
  %avail_in94 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream93, i32 0, i32 1, !dbg !9147
  store i32 %conv92, i32* %avail_in94, align 8, !dbg !9148
  br label %if.end95

if.end95:                                         ; preds = %if.else91, %if.then88
  %91 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9149
  %call96 = call i8* @wb_buffptr(%struct.archive_write* %91), !dbg !9150
  %92 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9151
  %stream97 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %92, i32 0, i32 10, !dbg !9152
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream97, i32 0, i32 3, !dbg !9153
  store i8* %call96, i8** %next_out, align 8, !dbg !9154
  %93 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9155
  %format_data98 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %93, i32 0, i32 14, !dbg !9155
  %94 = load i8*, i8** %format_data98, align 8, !dbg !9155
  %95 = bitcast i8* %94 to %struct.iso9660*, !dbg !9155
  %wbuff_remaining99 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %95, i32 0, i32 31, !dbg !9155
  %96 = load i64, i64* %wbuff_remaining99, align 8, !dbg !9155
  %conv100 = trunc i64 %96 to i32, !dbg !9156
  %97 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9157
  %stream101 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %97, i32 0, i32 10, !dbg !9158
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream101, i32 0, i32 4, !dbg !9159
  store i32 %conv100, i32* %avail_out, align 8, !dbg !9160
  %98 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9161
  %stream102 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %98, i32 0, i32 10, !dbg !9162
  %call103 = call i32 @cm_zlib_inflate(%struct.z_stream_s* %stream102, i32 0), !dbg !9163
  store i32 %call103, i32* %r, align 4, !dbg !9164
  %99 = load i32, i32* %r, align 4, !dbg !9165
  switch i32 %99, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !9166

sw.bb:                                            ; preds = %if.end95, %if.end95
  br label %sw.epilog, !dbg !9167

sw.default:                                       ; preds = %if.end95
  %100 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9169
  %archive104 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %100, i32 0, i32 0, !dbg !9170
  %101 = load i32, i32* %r, align 4, !dbg !9171
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive104, i32 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.69, i32 0, i32 0), i32 %101), !dbg !9172
  store i64 -30, i64* %retval, align 8, !dbg !9173
  br label %return, !dbg !9173

sw.epilog:                                        ; preds = %sw.bb
  %102 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9174
  %stream105 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %102, i32 0, i32 10, !dbg !9175
  %next_in106 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream105, i32 0, i32 0, !dbg !9176
  %103 = load i8*, i8** %next_in106, align 8, !dbg !9176
  %104 = load i8*, i8** %p.addr, align 8, !dbg !9177
  %sub.ptr.lhs.cast = ptrtoint i8* %103 to i64, !dbg !9178
  %sub.ptr.rhs.cast = ptrtoint i8* %104 to i64, !dbg !9178
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9178
  %105 = load i64, i64* %avail, align 8, !dbg !9179
  %sub107 = sub i64 %105, %sub.ptr.sub, !dbg !9179
  store i64 %sub107, i64* %avail, align 8, !dbg !9179
  %106 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9180
  %stream108 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %106, i32 0, i32 10, !dbg !9181
  %next_in109 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream108, i32 0, i32 0, !dbg !9182
  %107 = load i8*, i8** %next_in109, align 8, !dbg !9182
  %108 = load i8*, i8** %p.addr, align 8, !dbg !9183
  %sub.ptr.lhs.cast110 = ptrtoint i8* %107 to i64, !dbg !9184
  %sub.ptr.rhs.cast111 = ptrtoint i8* %108 to i64, !dbg !9184
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111, !dbg !9184
  %conv113 = trunc i64 %sub.ptr.sub112 to i32, !dbg !9185
  %109 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9186
  %block_avail114 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %109, i32 0, i32 9, !dbg !9187
  %110 = load i32, i32* %block_avail114, align 8, !dbg !9188
  %sub115 = sub i32 %110, %conv113, !dbg !9188
  store i32 %sub115, i32* %block_avail114, align 8, !dbg !9188
  %111 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9189
  %112 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9190
  %format_data116 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %112, i32 0, i32 14, !dbg !9190
  %113 = load i8*, i8** %format_data116, align 8, !dbg !9190
  %114 = bitcast i8* %113 to %struct.iso9660*, !dbg !9190
  %wbuff_remaining117 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %114, i32 0, i32 31, !dbg !9190
  %115 = load i64, i64* %wbuff_remaining117, align 8, !dbg !9190
  %116 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9191
  %stream118 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %116, i32 0, i32 10, !dbg !9192
  %avail_out119 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %stream118, i32 0, i32 4, !dbg !9193
  %117 = load i32, i32* %avail_out119, align 8, !dbg !9193
  %conv120 = zext i32 %117 to i64, !dbg !9191
  %sub121 = sub i64 %115, %conv120, !dbg !9194
  %call122 = call i32 @wb_consume(%struct.archive_write* %111, i64 %sub121), !dbg !9195
  store i32 %call122, i32* %r, align 4, !dbg !9196
  %118 = load i32, i32* %r, align 4, !dbg !9197
  %cmp123 = icmp slt i32 %118, 0, !dbg !9199
  br i1 %cmp123, label %if.then125, label %if.end127, !dbg !9200

if.then125:                                       ; preds = %sw.epilog
  %119 = load i32, i32* %r, align 4, !dbg !9201
  %conv126 = sext i32 %119 to i64, !dbg !9202
  store i64 %conv126, i64* %retval, align 8, !dbg !9203
  br label %return, !dbg !9203

if.end127:                                        ; preds = %sw.epilog
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %while.end
  %120 = load i64, i64* %bytes.addr, align 8, !dbg !9204
  %conv129 = trunc i64 %120 to i32, !dbg !9205
  %121 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9206
  %pz_offset130 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %121, i32 0, i32 4, !dbg !9207
  %122 = load i32, i32* %pz_offset130, align 4, !dbg !9208
  %add131 = add i32 %122, %conv129, !dbg !9208
  store i32 %add131, i32* %pz_offset130, align 4, !dbg !9208
  %123 = load i64, i64* %bytes.addr, align 8, !dbg !9209
  %124 = load i64, i64* %avail, align 8, !dbg !9210
  %sub132 = sub i64 %123, %124, !dbg !9211
  store i64 %sub132, i64* %retval, align 8, !dbg !9212
  br label %return, !dbg !9212

return:                                           ; preds = %if.end128, %if.then125, %sw.default, %if.then78, %if.then55, %if.then39, %if.then29, %if.then17, %if.then8, %if.then1
  %125 = load i64, i64* %retval, align 8, !dbg !9213
  ret i64 %125, !dbg !9213
}

declare i32 @cm_zlib_inflateEnd(%struct.z_stream_s*) #2

; Function Attrs: nounwind uwtable
define internal i64 @zisofs_extract_init(%struct.archive_write* %a, %struct.zisofs_extract* %zisofs, i8* %p, i64 %bytes) #0 !dbg !676 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.archive_write*, align 8
  %zisofs.addr = alloca %struct.zisofs_extract*, align 8
  %p.addr = alloca i8*, align 8
  %bytes.addr = alloca i64, align 8
  %avail = alloca i64, align 8
  %_ceil = alloca i64, align 8
  %xsize = alloca i64, align 8
  %alloc = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !9214, metadata !986), !dbg !9215
  store %struct.zisofs_extract* %zisofs, %struct.zisofs_extract** %zisofs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.zisofs_extract** %zisofs.addr, metadata !9216, metadata !986), !dbg !9217
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9218, metadata !986), !dbg !9219
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !9220, metadata !986), !dbg !9221
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !9222, metadata !986), !dbg !9223
  %0 = load i64, i64* %bytes.addr, align 8, !dbg !9224
  store i64 %0, i64* %avail, align 8, !dbg !9223
  call void @llvm.dbg.declare(metadata i64* %_ceil, metadata !9225, metadata !986), !dbg !9226
  call void @llvm.dbg.declare(metadata i64* %xsize, metadata !9227, metadata !986), !dbg !9228
  %1 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9229
  %pz_uncompressed_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %1, i32 0, i32 1, !dbg !9230
  %2 = load i64, i64* %pz_uncompressed_size, align 8, !dbg !9230
  %3 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9231
  %pz_log2_bs = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %3, i32 0, i32 0, !dbg !9232
  %4 = load i32, i32* %pz_log2_bs, align 8, !dbg !9232
  %sh_prom = zext i32 %4 to i64, !dbg !9233
  %shl = shl i64 1, %sh_prom, !dbg !9233
  %add = add i64 %2, %shl, !dbg !9234
  %sub = sub i64 %add, 1, !dbg !9235
  %5 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9236
  %pz_log2_bs1 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %5, i32 0, i32 0, !dbg !9237
  %6 = load i32, i32* %pz_log2_bs1, align 8, !dbg !9237
  %sh_prom2 = zext i32 %6 to i64, !dbg !9238
  %shr = lshr i64 %sub, %sh_prom2, !dbg !9238
  store i64 %shr, i64* %_ceil, align 8, !dbg !9239
  %7 = load i64, i64* %_ceil, align 8, !dbg !9240
  %add3 = add i64 %7, 1, !dbg !9241
  %mul = mul i64 %add3, 4, !dbg !9242
  store i64 %mul, i64* %xsize, align 8, !dbg !9243
  %8 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9244
  %block_pointers = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %8, i32 0, i32 5, !dbg !9246
  %9 = load i8*, i8** %block_pointers, align 8, !dbg !9246
  %cmp = icmp eq i8* %9, null, !dbg !9247
  br i1 %cmp, label %if.then, label %if.end11, !dbg !9248

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %alloc, metadata !9249, metadata !986), !dbg !9251
  %10 = load i64, i64* %xsize, align 8, !dbg !9252
  %shr4 = lshr i64 %10, 10, !dbg !9253
  %add5 = add i64 %shr4, 1, !dbg !9254
  %shl6 = shl i64 %add5, 10, !dbg !9255
  store i64 %shl6, i64* %alloc, align 8, !dbg !9251
  %11 = load i64, i64* %alloc, align 8, !dbg !9256
  %call = call noalias i8* @malloc(i64 %11) #8, !dbg !9257
  %12 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9258
  %block_pointers7 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %12, i32 0, i32 5, !dbg !9259
  store i8* %call, i8** %block_pointers7, align 8, !dbg !9260
  %13 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9261
  %block_pointers8 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %13, i32 0, i32 5, !dbg !9263
  %14 = load i8*, i8** %block_pointers8, align 8, !dbg !9263
  %cmp9 = icmp eq i8* %14, null, !dbg !9264
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !9265

if.then10:                                        ; preds = %if.then
  %15 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9266
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %15, i32 0, i32 0, !dbg !9268
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i32 0, i32 0)), !dbg !9269
  store i64 -30, i64* %retval, align 8, !dbg !9270
  br label %return, !dbg !9270

if.end:                                           ; preds = %if.then
  br label %if.end11, !dbg !9271

if.end11:                                         ; preds = %if.end, %entry
  %16 = load i64, i64* %xsize, align 8, !dbg !9272
  %17 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9273
  %block_pointers_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %17, i32 0, i32 6, !dbg !9274
  store i64 %16, i64* %block_pointers_size, align 8, !dbg !9275
  %18 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9276
  %pz_log2_bs12 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %18, i32 0, i32 0, !dbg !9277
  %19 = load i32, i32* %pz_log2_bs12, align 8, !dbg !9277
  %sh_prom13 = zext i32 %19 to i64, !dbg !9278
  %shl14 = shl i64 1, %sh_prom13, !dbg !9278
  %20 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9279
  %uncompressed_buffer_size = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %20, i32 0, i32 2, !dbg !9280
  store i64 %shl14, i64* %uncompressed_buffer_size, align 8, !dbg !9281
  %21 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9282
  %header_passed = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %21, i32 0, i32 3, !dbg !9284
  %bf.load = load i8, i8* %header_passed, align 8, !dbg !9284
  %bf.shl = shl i8 %bf.load, 6, !dbg !9284
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !9284
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !9284
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9282
  br i1 %tobool, label %if.end49, label %if.then15, !dbg !9285

if.then15:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9286, metadata !986), !dbg !9288
  store i32 0, i32* %err, align 4, !dbg !9288
  %22 = load i64, i64* %avail, align 8, !dbg !9289
  %cmp16 = icmp ult i64 %22, 16, !dbg !9291
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !9292

if.then17:                                        ; preds = %if.then15
  %23 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9293
  %archive18 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %23, i32 0, i32 0, !dbg !9295
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive18, i32 84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i32 0, i32 0)), !dbg !9296
  store i64 -30, i64* %retval, align 8, !dbg !9297
  br label %return, !dbg !9297

if.end19:                                         ; preds = %if.then15
  %24 = load i8*, i8** %p.addr, align 8, !dbg !9298
  %call20 = call i32 @memcmp(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @zisofs_magic, i32 0, i32 0), i64 8) #9, !dbg !9300
  %cmp21 = icmp ne i32 %call20, 0, !dbg !9301
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !9302

if.then22:                                        ; preds = %if.end19
  store i32 1, i32* %err, align 4, !dbg !9303
  br label %if.end40, !dbg !9304

if.else:                                          ; preds = %if.end19
  %25 = load i8*, i8** %p.addr, align 8, !dbg !9305
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 8, !dbg !9307
  %call23 = call i32 @archive_le32dec(i8* %add.ptr), !dbg !9308
  %conv = zext i32 %call23 to i64, !dbg !9308
  %26 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9309
  %pz_uncompressed_size24 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %26, i32 0, i32 1, !dbg !9310
  %27 = load i64, i64* %pz_uncompressed_size24, align 8, !dbg !9310
  %cmp25 = icmp ne i64 %conv, %27, !dbg !9311
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !9312

if.then27:                                        ; preds = %if.else
  store i32 1, i32* %err, align 4, !dbg !9313
  br label %if.end39, !dbg !9314

if.else28:                                        ; preds = %if.else
  %28 = load i8*, i8** %p.addr, align 8, !dbg !9315
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 12, !dbg !9315
  %29 = load i8, i8* %arrayidx, align 1, !dbg !9315
  %conv29 = zext i8 %29 to i32, !dbg !9315
  %cmp30 = icmp ne i32 %conv29, 4, !dbg !9317
  br i1 %cmp30, label %if.then37, label %lor.lhs.false, !dbg !9318

lor.lhs.false:                                    ; preds = %if.else28
  %30 = load i8*, i8** %p.addr, align 8, !dbg !9319
  %arrayidx32 = getelementptr inbounds i8, i8* %30, i64 13, !dbg !9319
  %31 = load i8, i8* %arrayidx32, align 1, !dbg !9319
  %conv33 = zext i8 %31 to i32, !dbg !9319
  %32 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9321
  %pz_log2_bs34 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %32, i32 0, i32 0, !dbg !9322
  %33 = load i32, i32* %pz_log2_bs34, align 8, !dbg !9322
  %cmp35 = icmp ne i32 %conv33, %33, !dbg !9323
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9324

if.then37:                                        ; preds = %lor.lhs.false, %if.else28
  store i32 1, i32* %err, align 4, !dbg !9325
  br label %if.end38, !dbg !9326

if.end38:                                         ; preds = %if.then37, %lor.lhs.false
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then27
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then22
  %34 = load i32, i32* %err, align 4, !dbg !9327
  %tobool41 = icmp ne i32 %34, 0, !dbg !9327
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9329

if.then42:                                        ; preds = %if.end40
  %35 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9330
  %archive43 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %35, i32 0, i32 0, !dbg !9332
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive43, i32 84, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i32 0, i32 0)), !dbg !9333
  store i64 -30, i64* %retval, align 8, !dbg !9334
  br label %return, !dbg !9334

if.end44:                                         ; preds = %if.end40
  %36 = load i64, i64* %avail, align 8, !dbg !9335
  %sub45 = sub i64 %36, 16, !dbg !9335
  store i64 %sub45, i64* %avail, align 8, !dbg !9335
  %37 = load i8*, i8** %p.addr, align 8, !dbg !9336
  %add.ptr46 = getelementptr inbounds i8, i8* %37, i64 16, !dbg !9336
  store i8* %add.ptr46, i8** %p.addr, align 8, !dbg !9336
  %38 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9337
  %header_passed47 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %38, i32 0, i32 3, !dbg !9338
  %bf.load48 = load i8, i8* %header_passed47, align 8, !dbg !9339
  %bf.clear = and i8 %bf.load48, -3, !dbg !9339
  %bf.set = or i8 %bf.clear, 2, !dbg !9339
  store i8 %bf.set, i8* %header_passed47, align 8, !dbg !9339
  br label %if.end49, !dbg !9340

if.end49:                                         ; preds = %if.end44, %if.end11
  %39 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9341
  %header_passed50 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %39, i32 0, i32 3, !dbg !9343
  %bf.load51 = load i8, i8* %header_passed50, align 8, !dbg !9343
  %bf.shl52 = shl i8 %bf.load51, 6, !dbg !9343
  %bf.ashr53 = ashr i8 %bf.shl52, 7, !dbg !9343
  %bf.cast54 = sext i8 %bf.ashr53 to i32, !dbg !9343
  %tobool55 = icmp ne i32 %bf.cast54, 0, !dbg !9341
  br i1 %tobool55, label %land.lhs.true, label %if.end82, !dbg !9344

land.lhs.true:                                    ; preds = %if.end49
  %40 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9345
  %block_pointers_avail = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %40, i32 0, i32 7, !dbg !9346
  %41 = load i64, i64* %block_pointers_avail, align 8, !dbg !9346
  %42 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9347
  %block_pointers_size56 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %42, i32 0, i32 6, !dbg !9348
  %43 = load i64, i64* %block_pointers_size56, align 8, !dbg !9348
  %cmp57 = icmp ult i64 %41, %43, !dbg !9349
  br i1 %cmp57, label %if.then59, label %if.end82, !dbg !9350

if.then59:                                        ; preds = %land.lhs.true
  %44 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9352
  %block_pointers_size60 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %44, i32 0, i32 6, !dbg !9354
  %45 = load i64, i64* %block_pointers_size60, align 8, !dbg !9354
  %46 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9355
  %block_pointers_avail61 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %46, i32 0, i32 7, !dbg !9356
  %47 = load i64, i64* %block_pointers_avail61, align 8, !dbg !9356
  %sub62 = sub i64 %45, %47, !dbg !9357
  store i64 %sub62, i64* %xsize, align 8, !dbg !9358
  %48 = load i64, i64* %avail, align 8, !dbg !9359
  %49 = load i64, i64* %xsize, align 8, !dbg !9361
  %cmp63 = icmp ult i64 %48, %49, !dbg !9362
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !9363

if.then65:                                        ; preds = %if.then59
  %50 = load i64, i64* %avail, align 8, !dbg !9364
  store i64 %50, i64* %xsize, align 8, !dbg !9365
  br label %if.end66, !dbg !9366

if.end66:                                         ; preds = %if.then65, %if.then59
  %51 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9367
  %block_pointers67 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %51, i32 0, i32 5, !dbg !9368
  %52 = load i8*, i8** %block_pointers67, align 8, !dbg !9368
  %53 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9369
  %block_pointers_avail68 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %53, i32 0, i32 7, !dbg !9370
  %54 = load i64, i64* %block_pointers_avail68, align 8, !dbg !9370
  %add.ptr69 = getelementptr inbounds i8, i8* %52, i64 %54, !dbg !9371
  %55 = load i8*, i8** %p.addr, align 8, !dbg !9372
  %56 = load i64, i64* %xsize, align 8, !dbg !9373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr69, i8* %55, i64 %56, i32 1, i1 false), !dbg !9374
  %57 = load i64, i64* %xsize, align 8, !dbg !9375
  %58 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9376
  %block_pointers_avail70 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %58, i32 0, i32 7, !dbg !9377
  %59 = load i64, i64* %block_pointers_avail70, align 8, !dbg !9378
  %add71 = add i64 %59, %57, !dbg !9378
  store i64 %add71, i64* %block_pointers_avail70, align 8, !dbg !9378
  %60 = load i64, i64* %xsize, align 8, !dbg !9379
  %61 = load i64, i64* %avail, align 8, !dbg !9380
  %sub72 = sub i64 %61, %60, !dbg !9380
  store i64 %sub72, i64* %avail, align 8, !dbg !9380
  %62 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9381
  %block_pointers_avail73 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %62, i32 0, i32 7, !dbg !9383
  %63 = load i64, i64* %block_pointers_avail73, align 8, !dbg !9383
  %64 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9384
  %block_pointers_size74 = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %64, i32 0, i32 6, !dbg !9385
  %65 = load i64, i64* %block_pointers_size74, align 8, !dbg !9385
  %cmp75 = icmp eq i64 %63, %65, !dbg !9386
  br i1 %cmp75, label %if.then77, label %if.end81, !dbg !9387

if.then77:                                        ; preds = %if.end66
  %66 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9388
  %block_off = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %66, i32 0, i32 8, !dbg !9390
  store i64 0, i64* %block_off, align 8, !dbg !9391
  %67 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9392
  %block_avail = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %67, i32 0, i32 9, !dbg !9393
  store i32 0, i32* %block_avail, align 8, !dbg !9394
  %68 = load %struct.zisofs_extract*, %struct.zisofs_extract** %zisofs.addr, align 8, !dbg !9395
  %initialized = getelementptr inbounds %struct.zisofs_extract, %struct.zisofs_extract* %68, i32 0, i32 3, !dbg !9396
  %bf.load78 = load i8, i8* %initialized, align 8, !dbg !9397
  %bf.clear79 = and i8 %bf.load78, -2, !dbg !9397
  %bf.set80 = or i8 %bf.clear79, 1, !dbg !9397
  store i8 %bf.set80, i8* %initialized, align 8, !dbg !9397
  br label %if.end81, !dbg !9398

if.end81:                                         ; preds = %if.then77, %if.end66
  br label %if.end82, !dbg !9399

if.end82:                                         ; preds = %if.end81, %land.lhs.true, %if.end49
  %69 = load i64, i64* %avail, align 8, !dbg !9400
  store i64 %69, i64* %retval, align 8, !dbg !9401
  br label %return, !dbg !9401

return:                                           ; preds = %if.end82, %if.then42, %if.then17, %if.then10
  %70 = load i64, i64* %retval, align 8, !dbg !9402
  ret i64 %70, !dbg !9402
}

declare i32 @cm_zlib_inflateReset(%struct.z_stream_s*) #2

declare i32 @cm_zlib_inflateInit_(%struct.z_stream_s*, i8*, i32) #2

declare i32 @cm_zlib_inflate(%struct.z_stream_s*, i32) #2

declare void @archive_entry_set_pathname(%struct.archive_entry*, i8*) #2

declare void @archive_entry_set_mtime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_atime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_ctime(%struct.archive_entry*, i64, i64) #2

declare void @archive_entry_set_uid(%struct.archive_entry*, i64) #2

; Function Attrs: nounwind
declare i32 @getuid() #3

declare void @archive_entry_set_gid(%struct.archive_entry*, i64) #2

; Function Attrs: nounwind
declare i32 @getgid() #3

declare void @archive_entry_set_mode(%struct.archive_entry*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.isoent* @isoent_clone(%struct.isoent* %src) #7 !dbg !681 {
entry:
  %src.addr = alloca %struct.isoent*, align 8
  store %struct.isoent* %src, %struct.isoent** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %src.addr, metadata !9403, metadata !986), !dbg !9404
  %0 = load %struct.isoent*, %struct.isoent** %src.addr, align 8, !dbg !9405
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 1, !dbg !9406
  %1 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !9406
  %call = call %struct.isoent* @isoent_new(%struct.isofile* %1), !dbg !9407
  ret %struct.isoent* %call, !dbg !9408
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_alloc_path_table(%struct.archive_write* %a, %struct.vdd* %vdd, i32 %max_depth) #0 !dbg !685 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %max_depth.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !9409, metadata !986), !dbg !9410
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !9411, metadata !986), !dbg !9412
  store i32 %max_depth, i32* %max_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr, metadata !9413, metadata !986), !dbg !9414
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9415, metadata !986), !dbg !9416
  %0 = load i32, i32* %max_depth.addr, align 4, !dbg !9417
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9418
  %max_depth1 = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 3, !dbg !9419
  store i32 %0, i32* %max_depth1, align 8, !dbg !9420
  %2 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9421
  %max_depth2 = getelementptr inbounds %struct.vdd, %struct.vdd* %2, i32 0, i32 3, !dbg !9422
  %3 = load i32, i32* %max_depth2, align 8, !dbg !9422
  %conv = sext i32 %3 to i64, !dbg !9421
  %mul = mul i64 32, %conv, !dbg !9423
  %call = call noalias i8* @malloc(i64 %mul) #8, !dbg !9424
  %4 = bitcast i8* %call to %struct.path_table*, !dbg !9424
  %5 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9425
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %5, i32 0, i32 2, !dbg !9426
  store %struct.path_table* %4, %struct.path_table** %pathtbl, align 8, !dbg !9427
  %6 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9428
  %pathtbl3 = getelementptr inbounds %struct.vdd, %struct.vdd* %6, i32 0, i32 2, !dbg !9430
  %7 = load %struct.path_table*, %struct.path_table** %pathtbl3, align 8, !dbg !9430
  %cmp = icmp eq %struct.path_table* %7, null, !dbg !9431
  br i1 %cmp, label %if.then, label %if.end, !dbg !9432

if.then:                                          ; preds = %entry
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9433
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %8, i32 0, i32 0, !dbg !9435
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !9436
  store i32 -30, i32* %retval, align 4, !dbg !9437
  br label %return, !dbg !9437

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9438
  br label %for.cond, !dbg !9440

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !9441
  %10 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9444
  %max_depth5 = getelementptr inbounds %struct.vdd, %struct.vdd* %10, i32 0, i32 3, !dbg !9445
  %11 = load i32, i32* %max_depth5, align 8, !dbg !9445
  %cmp6 = icmp slt i32 %9, %11, !dbg !9446
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9447

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !9448
  %idxprom = sext i32 %12 to i64, !dbg !9450
  %13 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9450
  %pathtbl8 = getelementptr inbounds %struct.vdd, %struct.vdd* %13, i32 0, i32 2, !dbg !9451
  %14 = load %struct.path_table*, %struct.path_table** %pathtbl8, align 8, !dbg !9451
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %14, i64 %idxprom, !dbg !9450
  %first = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx, i32 0, i32 0, !dbg !9452
  store %struct.isoent* null, %struct.isoent** %first, align 8, !dbg !9453
  %15 = load i32, i32* %i, align 4, !dbg !9454
  %idxprom9 = sext i32 %15 to i64, !dbg !9455
  %16 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9455
  %pathtbl10 = getelementptr inbounds %struct.vdd, %struct.vdd* %16, i32 0, i32 2, !dbg !9456
  %17 = load %struct.path_table*, %struct.path_table** %pathtbl10, align 8, !dbg !9456
  %arrayidx11 = getelementptr inbounds %struct.path_table, %struct.path_table* %17, i64 %idxprom9, !dbg !9455
  %first12 = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx11, i32 0, i32 0, !dbg !9457
  %18 = load i32, i32* %i, align 4, !dbg !9458
  %idxprom13 = sext i32 %18 to i64, !dbg !9459
  %19 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9459
  %pathtbl14 = getelementptr inbounds %struct.vdd, %struct.vdd* %19, i32 0, i32 2, !dbg !9460
  %20 = load %struct.path_table*, %struct.path_table** %pathtbl14, align 8, !dbg !9460
  %arrayidx15 = getelementptr inbounds %struct.path_table, %struct.path_table* %20, i64 %idxprom13, !dbg !9459
  %last = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx15, i32 0, i32 1, !dbg !9461
  store %struct.isoent** %first12, %struct.isoent*** %last, align 8, !dbg !9462
  %21 = load i32, i32* %i, align 4, !dbg !9463
  %idxprom16 = sext i32 %21 to i64, !dbg !9464
  %22 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9464
  %pathtbl17 = getelementptr inbounds %struct.vdd, %struct.vdd* %22, i32 0, i32 2, !dbg !9465
  %23 = load %struct.path_table*, %struct.path_table** %pathtbl17, align 8, !dbg !9465
  %arrayidx18 = getelementptr inbounds %struct.path_table, %struct.path_table* %23, i64 %idxprom16, !dbg !9464
  %sorted = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx18, i32 0, i32 2, !dbg !9466
  store %struct.isoent** null, %struct.isoent*** %sorted, align 8, !dbg !9467
  %24 = load i32, i32* %i, align 4, !dbg !9468
  %idxprom19 = sext i32 %24 to i64, !dbg !9469
  %25 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9469
  %pathtbl20 = getelementptr inbounds %struct.vdd, %struct.vdd* %25, i32 0, i32 2, !dbg !9470
  %26 = load %struct.path_table*, %struct.path_table** %pathtbl20, align 8, !dbg !9470
  %arrayidx21 = getelementptr inbounds %struct.path_table, %struct.path_table* %26, i64 %idxprom19, !dbg !9469
  %cnt = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx21, i32 0, i32 3, !dbg !9471
  store i32 0, i32* %cnt, align 8, !dbg !9472
  br label %for.inc, !dbg !9473

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !9474
  %inc = add nsw i32 %27, 1, !dbg !9474
  store i32 %inc, i32* %i, align 4, !dbg !9474
  br label %for.cond, !dbg !9476

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9477
  br label %return, !dbg !9477

return:                                           ; preds = %for.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !9478
  ret i32 %28, !dbg !9478
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_collect_dirs(%struct.vdd* %vdd, %struct.isoent* %rootent, i32 %depth) #0 !dbg !689 {
entry:
  %vdd.addr = alloca %struct.vdd*, align 8
  %rootent.addr = alloca %struct.isoent*, align 8
  %depth.addr = alloca i32, align 4
  %np = alloca %struct.isoent*, align 8
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !9479, metadata !986), !dbg !9480
  store %struct.isoent* %rootent, %struct.isoent** %rootent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent.addr, metadata !9481, metadata !986), !dbg !9482
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !9483, metadata !986), !dbg !9484
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !9485, metadata !986), !dbg !9486
  %0 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !9487
  %cmp = icmp eq %struct.isoent* %0, null, !dbg !9489
  br i1 %cmp, label %if.then, label %if.end, !dbg !9490

if.then:                                          ; preds = %entry
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9491
  %rootent1 = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 0, !dbg !9492
  %2 = load %struct.isoent*, %struct.isoent** %rootent1, align 8, !dbg !9492
  store %struct.isoent* %2, %struct.isoent** %rootent.addr, align 8, !dbg !9493
  br label %if.end, !dbg !9494

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !9495
  store %struct.isoent* %3, %struct.isoent** %np, align 8, !dbg !9496
  br label %do.body, !dbg !9497

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i32, i32* %depth.addr, align 4, !dbg !9498
  %idxprom = sext i32 %4 to i64, !dbg !9500
  %5 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9500
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %5, i32 0, i32 2, !dbg !9501
  %6 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !9501
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %6, i64 %idxprom, !dbg !9500
  %7 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9502
  call void @path_table_add_entry(%struct.path_table* %arrayidx, %struct.isoent* %7), !dbg !9503
  %8 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9504
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 5, !dbg !9506
  %first = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !9507
  %9 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !9507
  %cmp2 = icmp ne %struct.isoent* %9, null, !dbg !9508
  br i1 %cmp2, label %land.lhs.true, label %if.end7, !dbg !9509

land.lhs.true:                                    ; preds = %do.body
  %10 = load i32, i32* %depth.addr, align 4, !dbg !9510
  %add = add nsw i32 %10, 1, !dbg !9512
  %11 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9513
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %11, i32 0, i32 3, !dbg !9514
  %12 = load i32, i32* %max_depth, align 8, !dbg !9514
  %cmp3 = icmp slt i32 %add, %12, !dbg !9515
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !9516

if.then4:                                         ; preds = %land.lhs.true
  %13 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9517
  %subdirs5 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 5, !dbg !9519
  %first6 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs5, i32 0, i32 0, !dbg !9520
  %14 = load %struct.isoent*, %struct.isoent** %first6, align 8, !dbg !9520
  store %struct.isoent* %14, %struct.isoent** %np, align 8, !dbg !9521
  %15 = load i32, i32* %depth.addr, align 4, !dbg !9522
  %inc = add nsw i32 %15, 1, !dbg !9522
  store i32 %inc, i32* %depth.addr, align 4, !dbg !9522
  br label %do.cond, !dbg !9523

if.end7:                                          ; preds = %land.lhs.true, %do.body
  br label %while.cond, !dbg !9524

while.cond:                                       ; preds = %if.end12, %if.end7
  %16 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9525
  %17 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !9527
  %cmp8 = icmp ne %struct.isoent* %16, %17, !dbg !9528
  br i1 %cmp8, label %while.body, label %while.end, !dbg !9529

while.body:                                       ; preds = %while.cond
  %18 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9530
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 8, !dbg !9533
  %19 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !9533
  %cmp9 = icmp eq %struct.isoent* %19, null, !dbg !9534
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !9535

if.then10:                                        ; preds = %while.body
  %20 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9536
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 2, !dbg !9538
  %21 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !9538
  store %struct.isoent* %21, %struct.isoent** %np, align 8, !dbg !9539
  %22 = load i32, i32* %depth.addr, align 4, !dbg !9540
  %dec = add nsw i32 %22, -1, !dbg !9540
  store i32 %dec, i32* %depth.addr, align 4, !dbg !9540
  br label %if.end12, !dbg !9541

if.else:                                          ; preds = %while.body
  %23 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9542
  %drnext11 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 8, !dbg !9544
  %24 = load %struct.isoent*, %struct.isoent** %drnext11, align 8, !dbg !9544
  store %struct.isoent* %24, %struct.isoent** %np, align 8, !dbg !9545
  br label %while.end, !dbg !9546

if.end12:                                         ; preds = %if.then10
  br label %while.cond, !dbg !9547

while.end:                                        ; preds = %if.else, %while.cond
  br label %do.cond, !dbg !9549

do.cond:                                          ; preds = %while.end, %if.then4
  %25 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9550
  %26 = load %struct.isoent*, %struct.isoent** %rootent.addr, align 8, !dbg !9552
  %cmp13 = icmp ne %struct.isoent* %25, %26, !dbg !9553
  br i1 %cmp13, label %do.body, label %do.end, !dbg !9554

do.end:                                           ; preds = %do.cond
  ret i32 0, !dbg !9555
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_rr_move(%struct.archive_write* %a) #0 !dbg !695 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %pt = alloca %struct.path_table*, align 8
  %rootent = alloca %struct.isoent*, align 8
  %rr_moved = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %last = alloca %struct.isoent*, align 8
  %r = alloca i32, align 4
  %mvent = alloca %struct.isoent*, align 8
  %newent = alloca %struct.isoent*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !9556, metadata !986), !dbg !9557
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !9558, metadata !986), !dbg !9559
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9560
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !9561
  %1 = load i8*, i8** %format_data, align 8, !dbg !9561
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !9560
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !9559
  call void @llvm.dbg.declare(metadata %struct.path_table** %pt, metadata !9562, metadata !986), !dbg !9563
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent, metadata !9564, metadata !986), !dbg !9565
  call void @llvm.dbg.declare(metadata %struct.isoent** %rr_moved, metadata !9566, metadata !986), !dbg !9567
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !9568, metadata !986), !dbg !9569
  call void @llvm.dbg.declare(metadata %struct.isoent** %last, metadata !9570, metadata !986), !dbg !9571
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9572, metadata !986), !dbg !9573
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9574
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 14, !dbg !9575
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 2, !dbg !9576
  %4 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !9576
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %4, i64 7, !dbg !9574
  store %struct.path_table* %arrayidx, %struct.path_table** %pt, align 8, !dbg !9577
  %5 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9578
  %cnt = getelementptr inbounds %struct.path_table, %struct.path_table* %5, i32 0, i32 3, !dbg !9580
  %6 = load i32, i32* %cnt, align 8, !dbg !9580
  %cmp = icmp eq i32 %6, 0, !dbg !9581
  br i1 %cmp, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9583
  br label %return, !dbg !9583

if.end:                                           ; preds = %entry
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9584
  %primary1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 14, !dbg !9585
  %rootent2 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary1, i32 0, i32 0, !dbg !9586
  %8 = load %struct.isoent*, %struct.isoent** %rootent2, align 8, !dbg !9586
  store %struct.isoent* %8, %struct.isoent** %rootent, align 8, !dbg !9587
  %9 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !9588
  %call = call %struct.isoent* @isoent_find_child(%struct.isoent* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i32 0, i32 0)), !dbg !9589
  store %struct.isoent* %call, %struct.isoent** %rr_moved, align 8, !dbg !9590
  %10 = load %struct.isoent*, %struct.isoent** %rr_moved, align 8, !dbg !9591
  %cmp3 = icmp ne %struct.isoent* %10, null, !dbg !9593
  br i1 %cmp3, label %land.lhs.true, label %if.end7, !dbg !9594

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.isoent*, %struct.isoent** %rr_moved, align 8, !dbg !9595
  %12 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !9596
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 3, !dbg !9597
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !9598
  %13 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !9598
  %cmp4 = icmp ne %struct.isoent* %11, %13, !dbg !9599
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9600

if.then5:                                         ; preds = %land.lhs.true
  %14 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !9602
  %15 = load %struct.isoent*, %struct.isoent** %rr_moved, align 8, !dbg !9604
  call void @isoent_remove_child(%struct.isoent* %14, %struct.isoent* %15), !dbg !9605
  %16 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !9606
  %17 = load %struct.isoent*, %struct.isoent** %rr_moved, align 8, !dbg !9607
  %call6 = call i32 @isoent_add_child_head(%struct.isoent* %16, %struct.isoent* %17), !dbg !9608
  br label %if.end7, !dbg !9609

if.end7:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %18 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9610
  %first8 = getelementptr inbounds %struct.path_table, %struct.path_table* %18, i32 0, i32 0, !dbg !9611
  %19 = load %struct.isoent*, %struct.isoent** %first8, align 8, !dbg !9611
  store %struct.isoent* %19, %struct.isoent** %np, align 8, !dbg !9612
  br label %while.cond, !dbg !9613

while.cond:                                       ; preds = %for.end25, %if.end7
  %20 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9614
  %cmp9 = icmp ne %struct.isoent* %20, null, !dbg !9615
  br i1 %cmp9, label %while.body, label %while.end, !dbg !9616

while.body:                                       ; preds = %while.cond
  %21 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9617
  %call10 = call %struct.isoent* @path_table_last_entry(%struct.path_table* %21), !dbg !9619
  store %struct.isoent* %call10, %struct.isoent** %last, align 8, !dbg !9620
  br label %for.cond, !dbg !9621

for.cond:                                         ; preds = %for.inc24, %while.body
  %22 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9622
  %cmp11 = icmp ne %struct.isoent* %22, null, !dbg !9626
  br i1 %cmp11, label %for.body, label %for.end25, !dbg !9627

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %mvent, metadata !9628, metadata !986), !dbg !9630
  call void @llvm.dbg.declare(metadata %struct.isoent** %newent, metadata !9631, metadata !986), !dbg !9632
  %23 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9633
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 22, !dbg !9635
  %bf.load = load i8, i8* %dir, align 8, !dbg !9635
  %bf.shl = shl i8 %bf.load, 6, !dbg !9635
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !9635
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !9635
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9633
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !9636

if.then12:                                        ; preds = %for.body
  br label %for.inc24, !dbg !9637

if.end13:                                         ; preds = %for.body
  %24 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9638
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 5, !dbg !9640
  %first14 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !9641
  %25 = load %struct.isoent*, %struct.isoent** %first14, align 8, !dbg !9641
  store %struct.isoent* %25, %struct.isoent** %mvent, align 8, !dbg !9642
  br label %for.cond15, !dbg !9643

for.cond15:                                       ; preds = %for.inc, %if.end13
  %26 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !9644
  %cmp16 = icmp ne %struct.isoent* %26, null, !dbg !9646
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !9647

for.body17:                                       ; preds = %for.cond15
  %27 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9649
  %28 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !9651
  %call18 = call i32 @isoent_rr_move_dir(%struct.archive_write* %27, %struct.isoent** %rr_moved, %struct.isoent* %28, %struct.isoent** %newent), !dbg !9652
  store i32 %call18, i32* %r, align 4, !dbg !9653
  %29 = load i32, i32* %r, align 4, !dbg !9654
  %cmp19 = icmp slt i32 %29, 0, !dbg !9656
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !9657

if.then20:                                        ; preds = %for.body17
  %30 = load i32, i32* %r, align 4, !dbg !9658
  store i32 %30, i32* %retval, align 4, !dbg !9659
  br label %return, !dbg !9659

if.end21:                                         ; preds = %for.body17
  %31 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9660
  %primary22 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %31, i32 0, i32 14, !dbg !9661
  %32 = load %struct.isoent*, %struct.isoent** %newent, align 8, !dbg !9662
  %call23 = call i32 @isoent_collect_dirs(%struct.vdd* %primary22, %struct.isoent* %32, i32 2), !dbg !9663
  br label %for.inc, !dbg !9664

for.inc:                                          ; preds = %if.end21
  %33 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !9665
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 8, !dbg !9667
  %34 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !9667
  store %struct.isoent* %34, %struct.isoent** %mvent, align 8, !dbg !9668
  br label %for.cond15, !dbg !9669

for.end:                                          ; preds = %for.cond15
  br label %for.inc24, !dbg !9671

for.inc24:                                        ; preds = %for.end, %if.then12
  %35 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9672
  %ptnext = getelementptr inbounds %struct.isoent, %struct.isoent* %35, i32 0, i32 9, !dbg !9674
  %36 = load %struct.isoent*, %struct.isoent** %ptnext, align 8, !dbg !9674
  store %struct.isoent* %36, %struct.isoent** %np, align 8, !dbg !9675
  br label %for.cond, !dbg !9676

for.end25:                                        ; preds = %for.cond
  %37 = load %struct.isoent*, %struct.isoent** %last, align 8, !dbg !9677
  %ptnext26 = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 9, !dbg !9678
  %38 = load %struct.isoent*, %struct.isoent** %ptnext26, align 8, !dbg !9678
  store %struct.isoent* %38, %struct.isoent** %np, align 8, !dbg !9679
  br label %while.cond, !dbg !9680

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !9682
  br label %return, !dbg !9682

return:                                           ; preds = %while.end, %if.then20, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !9683
  ret i32 %39, !dbg !9683
}

; Function Attrs: nounwind uwtable
define internal void @isofile_connect_hardlink_files(%struct.iso9660* %iso9660) #0 !dbg !706 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %n = alloca %struct.archive_rb_node*, align 8
  %hl = alloca %struct.hardlink*, align 8
  %target = alloca %struct.isofile*, align 8
  %nf = alloca %struct.isofile*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !9684, metadata !986), !dbg !9685
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n, metadata !9686, metadata !986), !dbg !9687
  call void @llvm.dbg.declare(metadata %struct.hardlink** %hl, metadata !9688, metadata !986), !dbg !9689
  call void @llvm.dbg.declare(metadata %struct.isofile** %target, metadata !9690, metadata !986), !dbg !9691
  call void @llvm.dbg.declare(metadata %struct.isofile** %nf, metadata !9692, metadata !986), !dbg !9693
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !9694
  %hardlink_rbtree = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 13, !dbg !9694
  %call = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %hardlink_rbtree, %struct.archive_rb_node* null, i32 0), !dbg !9694
  store %struct.archive_rb_node* %call, %struct.archive_rb_node** %n, align 8, !dbg !9694
  br label %for.cond, !dbg !9694

for.cond:                                         ; preds = %for.inc7, %entry
  %1 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !9696
  %tobool = icmp ne %struct.archive_rb_node* %1, null, !dbg !9696
  br i1 %tobool, label %for.body, label %for.end10, !dbg !9696

for.body:                                         ; preds = %for.cond
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !9699
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.hardlink*, !dbg !9701
  store %struct.hardlink* %3, %struct.hardlink** %hl, align 8, !dbg !9702
  %4 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !9703
  %file_list = getelementptr inbounds %struct.hardlink, %struct.hardlink* %4, i32 0, i32 2, !dbg !9704
  %first = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list, i32 0, i32 0, !dbg !9705
  %5 = load %struct.isofile*, %struct.isofile** %first, align 8, !dbg !9705
  store %struct.isofile* %5, %struct.isofile** %target, align 8, !dbg !9706
  %6 = load %struct.isofile*, %struct.isofile** %target, align 8, !dbg !9707
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %6, i32 0, i32 4, !dbg !9708
  %7 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !9708
  %8 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !9709
  %nlink = getelementptr inbounds %struct.hardlink, %struct.hardlink* %8, i32 0, i32 1, !dbg !9710
  %9 = load i32, i32* %nlink, align 8, !dbg !9710
  call void @archive_entry_set_nlink(%struct.archive_entry* %7, i32 %9), !dbg !9711
  %10 = load %struct.isofile*, %struct.isofile** %target, align 8, !dbg !9712
  %hlnext = getelementptr inbounds %struct.isofile, %struct.isofile* %10, i32 0, i32 2, !dbg !9714
  %11 = load %struct.isofile*, %struct.isofile** %hlnext, align 8, !dbg !9714
  store %struct.isofile* %11, %struct.isofile** %nf, align 8, !dbg !9715
  br label %for.cond2, !dbg !9716

for.cond2:                                        ; preds = %for.inc, %for.body
  %12 = load %struct.isofile*, %struct.isofile** %nf, align 8, !dbg !9717
  %cmp = icmp ne %struct.isofile* %12, null, !dbg !9719
  br i1 %cmp, label %for.body3, label %for.end, !dbg !9720

for.body3:                                        ; preds = %for.cond2
  %13 = load %struct.isofile*, %struct.isofile** %target, align 8, !dbg !9722
  %14 = load %struct.isofile*, %struct.isofile** %nf, align 8, !dbg !9724
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %14, i32 0, i32 3, !dbg !9725
  store %struct.isofile* %13, %struct.isofile** %hardlink_target, align 8, !dbg !9726
  %15 = load %struct.isofile*, %struct.isofile** %nf, align 8, !dbg !9727
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %15, i32 0, i32 4, !dbg !9728
  %16 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !9728
  %17 = load %struct.hardlink*, %struct.hardlink** %hl, align 8, !dbg !9729
  %nlink5 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %17, i32 0, i32 1, !dbg !9730
  %18 = load i32, i32* %nlink5, align 8, !dbg !9730
  call void @archive_entry_set_nlink(%struct.archive_entry* %16, i32 %18), !dbg !9731
  br label %for.inc, !dbg !9732

for.inc:                                          ; preds = %for.body3
  %19 = load %struct.isofile*, %struct.isofile** %nf, align 8, !dbg !9733
  %hlnext6 = getelementptr inbounds %struct.isofile, %struct.isofile* %19, i32 0, i32 2, !dbg !9735
  %20 = load %struct.isofile*, %struct.isofile** %hlnext6, align 8, !dbg !9735
  store %struct.isofile* %20, %struct.isofile** %nf, align 8, !dbg !9736
  br label %for.cond2, !dbg !9737

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !9739

for.inc7:                                         ; preds = %for.end
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !9740
  %hardlink_rbtree8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 13, !dbg !9740
  %22 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !9740
  %call9 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %hardlink_rbtree8, %struct.archive_rb_node* %22, i32 1), !dbg !9740
  store %struct.archive_rb_node* %call9, %struct.archive_rb_node** %n, align 8, !dbg !9740
  br label %for.cond, !dbg !9740

for.end10:                                        ; preds = %for.cond
  ret void, !dbg !9742
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_traverse_tree(%struct.archive_write* %a, %struct.vdd* %vdd) #0 !dbg !709 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %np = alloca %struct.isoent*, align 8
  %idr = alloca %struct.idr, align 8
  %depth = alloca i32, align 4
  %r = alloca i32, align 4
  %genid = alloca i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !9743, metadata !986), !dbg !9744
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !9745, metadata !986), !dbg !9746
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !9747, metadata !986), !dbg !9748
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9749
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !9750
  %1 = load i8*, i8** %format_data, align 8, !dbg !9750
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !9749
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !9748
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !9751, metadata !986), !dbg !9752
  call void @llvm.dbg.declare(metadata %struct.idr* %idr, metadata !9753, metadata !986), !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !9755, metadata !986), !dbg !9756
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9757, metadata !986), !dbg !9758
  call void @llvm.dbg.declare(metadata i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)** %genid, metadata !9759, metadata !986), !dbg !9761
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9762
  %4 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9763
  call void @idr_init(%struct.iso9660* %3, %struct.vdd* %4, %struct.idr* %idr), !dbg !9764
  %5 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9765
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %5, i32 0, i32 0, !dbg !9766
  %6 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !9766
  store %struct.isoent* %6, %struct.isoent** %np, align 8, !dbg !9767
  store i32 0, i32* %depth, align 4, !dbg !9768
  %7 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9769
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %7, i32 0, i32 1, !dbg !9771
  %8 = load i32, i32* %vdd_type, align 8, !dbg !9771
  %cmp = icmp eq i32 %8, 1, !dbg !9772
  br i1 %cmp, label %if.then, label %if.else, !dbg !9773

if.then:                                          ; preds = %entry
  store i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)* @isoent_gen_joliet_identifier, i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)** %genid, align 8, !dbg !9774
  br label %if.end, !dbg !9775

if.else:                                          ; preds = %entry
  store i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)* @isoent_gen_iso9660_identifier, i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)** %genid, align 8, !dbg !9776
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !9777

do.body:                                          ; preds = %do.cond, %if.end
  %9 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9778
  %virtual = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 22, !dbg !9781
  %bf.load = load i8, i8* %virtual, align 8, !dbg !9781
  %bf.shl = shl i8 %bf.load, 7, !dbg !9781
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !9781
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !9781
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9778
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !9782

land.lhs.true:                                    ; preds = %do.body
  %10 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9783
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 1, !dbg !9784
  %11 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !9784
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %11, i32 0, i32 4, !dbg !9785
  %12 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !9785
  %call = call i32 @archive_entry_mtime_is_set(%struct.archive_entry* %12), !dbg !9786
  %tobool2 = icmp ne i32 %call, 0, !dbg !9786
  br i1 %tobool2, label %if.end12, label %if.then3, !dbg !9787

if.then3:                                         ; preds = %land.lhs.true
  %13 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9789
  %file4 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 1, !dbg !9791
  %14 = load %struct.isofile*, %struct.isofile** %file4, align 8, !dbg !9791
  %entry5 = getelementptr inbounds %struct.isofile, %struct.isofile* %14, i32 0, i32 4, !dbg !9792
  %15 = load %struct.archive_entry*, %struct.archive_entry** %entry5, align 8, !dbg !9792
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9793
  %birth_time = getelementptr inbounds %struct.iso9660, %struct.iso9660* %16, i32 0, i32 0, !dbg !9794
  %17 = load i64, i64* %birth_time, align 8, !dbg !9794
  call void @archive_entry_set_mtime(%struct.archive_entry* %15, i64 %17, i64 0), !dbg !9795
  %18 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9796
  %file6 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 1, !dbg !9797
  %19 = load %struct.isofile*, %struct.isofile** %file6, align 8, !dbg !9797
  %entry7 = getelementptr inbounds %struct.isofile, %struct.isofile* %19, i32 0, i32 4, !dbg !9798
  %20 = load %struct.archive_entry*, %struct.archive_entry** %entry7, align 8, !dbg !9798
  %21 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9799
  %birth_time8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %21, i32 0, i32 0, !dbg !9800
  %22 = load i64, i64* %birth_time8, align 8, !dbg !9800
  call void @archive_entry_set_atime(%struct.archive_entry* %20, i64 %22, i64 0), !dbg !9801
  %23 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9802
  %file9 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 1, !dbg !9803
  %24 = load %struct.isofile*, %struct.isofile** %file9, align 8, !dbg !9803
  %entry10 = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 4, !dbg !9804
  %25 = load %struct.archive_entry*, %struct.archive_entry** %entry10, align 8, !dbg !9804
  %26 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9805
  %birth_time11 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %26, i32 0, i32 0, !dbg !9806
  %27 = load i64, i64* %birth_time11, align 8, !dbg !9806
  call void @archive_entry_set_ctime(%struct.archive_entry* %25, i64 %27, i64 0), !dbg !9807
  br label %if.end12, !dbg !9808

if.end12:                                         ; preds = %if.then3, %land.lhs.true, %do.body
  %28 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9809
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %28, i32 0, i32 3, !dbg !9811
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !9812
  %29 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !9812
  %cmp13 = icmp ne %struct.isoent* %29, null, !dbg !9813
  br i1 %cmp13, label %if.then14, label %if.end47, !dbg !9814

if.then14:                                        ; preds = %if.end12
  %30 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9815
  %vdd_type15 = getelementptr inbounds %struct.vdd, %struct.vdd* %30, i32 0, i32 1, !dbg !9818
  %31 = load i32, i32* %vdd_type15, align 8, !dbg !9818
  %cmp16 = icmp ne i32 %31, 1, !dbg !9819
  br i1 %cmp16, label %land.lhs.true17, label %if.else27, !dbg !9820

land.lhs.true17:                                  ; preds = %if.then14
  %32 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9821
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %32, i32 0, i32 37, !dbg !9822
  %33 = bitcast %struct.iso_option* %opt to i32*, !dbg !9823
  %bf.load18 = load i32, i32* %33, align 8, !dbg !9823
  %bf.lshr = lshr i32 %bf.load18, 23, !dbg !9823
  %bf.clear = and i32 %bf.lshr, 3, !dbg !9823
  %tobool19 = icmp ne i32 %bf.clear, 0, !dbg !9821
  br i1 %tobool19, label %if.else27, label %land.lhs.true20, !dbg !9824

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %34 = load i32, i32* %depth, align 4, !dbg !9825
  %add = add nsw i32 %34, 1, !dbg !9827
  %35 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9828
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %35, i32 0, i32 3, !dbg !9829
  %36 = load i32, i32* %max_depth, align 8, !dbg !9829
  %cmp21 = icmp sge i32 %add, %36, !dbg !9830
  br i1 %cmp21, label %if.then22, label %if.else27, !dbg !9831

if.then22:                                        ; preds = %land.lhs.true20
  %37 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9833
  %children23 = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 3, !dbg !9836
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children23, i32 0, i32 2, !dbg !9837
  %38 = load i32, i32* %cnt, align 8, !dbg !9837
  %cmp24 = icmp sgt i32 %38, 0, !dbg !9838
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !9839

if.then25:                                        ; preds = %if.then22
  %39 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9840
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !9841
  %directories_too_deep = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 28, !dbg !9842
  store %struct.isoent* %39, %struct.isoent** %directories_too_deep, align 8, !dbg !9843
  br label %if.end26, !dbg !9841

if.end26:                                         ; preds = %if.then25, %if.then22
  br label %if.end46, !dbg !9844

if.else27:                                        ; preds = %land.lhs.true20, %land.lhs.true17, %if.then14
  %41 = load i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)*, i32 (%struct.archive_write*, %struct.isoent*, %struct.idr*)** %genid, align 8, !dbg !9845
  %42 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9847
  %43 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9848
  %call28 = call i32 %41(%struct.archive_write* %42, %struct.isoent* %43, %struct.idr* %idr), !dbg !9845
  store i32 %call28, i32* %r, align 4, !dbg !9849
  %44 = load i32, i32* %r, align 4, !dbg !9850
  %cmp29 = icmp slt i32 %44, 0, !dbg !9852
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9853

if.then30:                                        ; preds = %if.else27
  br label %exit_traverse_tree, !dbg !9854

if.end31:                                         ; preds = %if.else27
  %45 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9855
  %46 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9856
  %call32 = call i32 @isoent_make_sorted_files(%struct.archive_write* %45, %struct.isoent* %46, %struct.idr* %idr), !dbg !9857
  store i32 %call32, i32* %r, align 4, !dbg !9858
  %47 = load i32, i32* %r, align 4, !dbg !9859
  %cmp33 = icmp slt i32 %47, 0, !dbg !9861
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9862

if.then34:                                        ; preds = %if.end31
  br label %exit_traverse_tree, !dbg !9863

if.end35:                                         ; preds = %if.end31
  %48 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9864
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %48, i32 0, i32 5, !dbg !9866
  %first36 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !9867
  %49 = load %struct.isoent*, %struct.isoent** %first36, align 8, !dbg !9867
  %cmp37 = icmp ne %struct.isoent* %49, null, !dbg !9868
  br i1 %cmp37, label %land.lhs.true38, label %if.end45, !dbg !9869

land.lhs.true38:                                  ; preds = %if.end35
  %50 = load i32, i32* %depth, align 4, !dbg !9870
  %add39 = add nsw i32 %50, 1, !dbg !9871
  %51 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9872
  %max_depth40 = getelementptr inbounds %struct.vdd, %struct.vdd* %51, i32 0, i32 3, !dbg !9873
  %52 = load i32, i32* %max_depth40, align 8, !dbg !9873
  %cmp41 = icmp slt i32 %add39, %52, !dbg !9874
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !9875

if.then42:                                        ; preds = %land.lhs.true38
  %53 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9877
  %subdirs43 = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 5, !dbg !9879
  %first44 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs43, i32 0, i32 0, !dbg !9880
  %54 = load %struct.isoent*, %struct.isoent** %first44, align 8, !dbg !9880
  store %struct.isoent* %54, %struct.isoent** %np, align 8, !dbg !9881
  %55 = load i32, i32* %depth, align 4, !dbg !9882
  %inc = add nsw i32 %55, 1, !dbg !9882
  store i32 %inc, i32* %depth, align 4, !dbg !9882
  br label %do.cond, !dbg !9883

if.end45:                                         ; preds = %land.lhs.true38, %if.end35
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end26
  br label %if.end47, !dbg !9884

if.end47:                                         ; preds = %if.end46, %if.end12
  br label %while.cond, !dbg !9885

while.cond:                                       ; preds = %if.end54, %if.end47
  %56 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9886
  %57 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9887
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %57, i32 0, i32 2, !dbg !9888
  %58 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !9888
  %cmp48 = icmp ne %struct.isoent* %56, %58, !dbg !9889
  br i1 %cmp48, label %while.body, label %while.end, !dbg !9890

while.body:                                       ; preds = %while.cond
  %59 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9891
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %59, i32 0, i32 8, !dbg !9894
  %60 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !9894
  %cmp49 = icmp eq %struct.isoent* %60, null, !dbg !9895
  br i1 %cmp49, label %if.then50, label %if.else52, !dbg !9896

if.then50:                                        ; preds = %while.body
  %61 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9897
  %parent51 = getelementptr inbounds %struct.isoent, %struct.isoent* %61, i32 0, i32 2, !dbg !9899
  %62 = load %struct.isoent*, %struct.isoent** %parent51, align 8, !dbg !9899
  store %struct.isoent* %62, %struct.isoent** %np, align 8, !dbg !9900
  %63 = load i32, i32* %depth, align 4, !dbg !9901
  %dec = add nsw i32 %63, -1, !dbg !9901
  store i32 %dec, i32* %depth, align 4, !dbg !9901
  br label %if.end54, !dbg !9902

if.else52:                                        ; preds = %while.body
  %64 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9903
  %drnext53 = getelementptr inbounds %struct.isoent, %struct.isoent* %64, i32 0, i32 8, !dbg !9905
  %65 = load %struct.isoent*, %struct.isoent** %drnext53, align 8, !dbg !9905
  store %struct.isoent* %65, %struct.isoent** %np, align 8, !dbg !9906
  br label %while.end, !dbg !9907

if.end54:                                         ; preds = %if.then50
  br label %while.cond, !dbg !9908

while.end:                                        ; preds = %if.else52, %while.cond
  br label %do.cond, !dbg !9910

do.cond:                                          ; preds = %while.end, %if.then42
  %66 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9911
  %67 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9913
  %parent55 = getelementptr inbounds %struct.isoent, %struct.isoent* %67, i32 0, i32 2, !dbg !9914
  %68 = load %struct.isoent*, %struct.isoent** %parent55, align 8, !dbg !9914
  %cmp56 = icmp ne %struct.isoent* %66, %68, !dbg !9915
  br i1 %cmp56, label %do.body, label %do.end, !dbg !9916

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %r, align 4, !dbg !9917
  br label %exit_traverse_tree, !dbg !9918

exit_traverse_tree:                               ; preds = %do.end, %if.then34, %if.then30
  call void @idr_cleanup(%struct.idr* %idr), !dbg !9919
  %69 = load i32, i32* %r, align 4, !dbg !9920
  ret i32 %69, !dbg !9921
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_make_path_table_2(%struct.archive_write* %a, %struct.vdd* %vdd, i32 %depth, i32* %dir_number) #0 !dbg !779 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %depth.addr = alloca i32, align 4
  %dir_number.addr = alloca i32*, align 8
  %np = alloca %struct.isoent*, align 8
  %enttbl = alloca %struct.isoent**, align 8
  %pt = alloca %struct.path_table*, align 8
  %i = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !9922, metadata !986), !dbg !9923
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !9924, metadata !986), !dbg !9925
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !9926, metadata !986), !dbg !9927
  store i32* %dir_number, i32** %dir_number.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dir_number.addr, metadata !9928, metadata !986), !dbg !9929
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !9930, metadata !986), !dbg !9931
  call void @llvm.dbg.declare(metadata %struct.isoent*** %enttbl, metadata !9932, metadata !986), !dbg !9933
  call void @llvm.dbg.declare(metadata %struct.path_table** %pt, metadata !9934, metadata !986), !dbg !9935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9936, metadata !986), !dbg !9937
  %0 = load i32, i32* %depth.addr, align 4, !dbg !9938
  %idxprom = sext i32 %0 to i64, !dbg !9939
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9939
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 2, !dbg !9940
  %2 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !9940
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %2, i64 %idxprom, !dbg !9939
  store %struct.path_table* %arrayidx, %struct.path_table** %pt, align 8, !dbg !9941
  %3 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9942
  %cnt = getelementptr inbounds %struct.path_table, %struct.path_table* %3, i32 0, i32 3, !dbg !9944
  %4 = load i32, i32* %cnt, align 8, !dbg !9944
  %cmp = icmp eq i32 %4, 0, !dbg !9945
  br i1 %cmp, label %if.then, label %if.end, !dbg !9946

if.then:                                          ; preds = %entry
  %5 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9947
  %sorted = getelementptr inbounds %struct.path_table, %struct.path_table* %5, i32 0, i32 2, !dbg !9949
  store %struct.isoent** null, %struct.isoent*** %sorted, align 8, !dbg !9950
  store i32 0, i32* %retval, align 4, !dbg !9951
  br label %return, !dbg !9951

if.end:                                           ; preds = %entry
  %6 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9952
  %cnt1 = getelementptr inbounds %struct.path_table, %struct.path_table* %6, i32 0, i32 3, !dbg !9953
  %7 = load i32, i32* %cnt1, align 8, !dbg !9953
  %conv = sext i32 %7 to i64, !dbg !9952
  %mul = mul i64 %conv, 8, !dbg !9954
  %call = call noalias i8* @malloc(i64 %mul) #8, !dbg !9955
  %8 = bitcast i8* %call to %struct.isoent**, !dbg !9955
  store %struct.isoent** %8, %struct.isoent*** %enttbl, align 8, !dbg !9956
  %9 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !9957
  %cmp2 = icmp eq %struct.isoent** %9, null, !dbg !9959
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !9960

if.then4:                                         ; preds = %if.end
  %10 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !9961
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %10, i32 0, i32 0, !dbg !9963
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !9964
  store i32 -30, i32* %retval, align 4, !dbg !9965
  br label %return, !dbg !9965

if.end5:                                          ; preds = %if.end
  %11 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !9966
  %12 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9967
  %sorted6 = getelementptr inbounds %struct.path_table, %struct.path_table* %12, i32 0, i32 2, !dbg !9968
  store %struct.isoent** %11, %struct.isoent*** %sorted6, align 8, !dbg !9969
  %13 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9970
  %first = getelementptr inbounds %struct.path_table, %struct.path_table* %13, i32 0, i32 0, !dbg !9972
  %14 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !9972
  store %struct.isoent* %14, %struct.isoent** %np, align 8, !dbg !9973
  br label %for.cond, !dbg !9974

for.cond:                                         ; preds = %for.inc, %if.end5
  %15 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9975
  %cmp7 = icmp ne %struct.isoent* %15, null, !dbg !9978
  br i1 %cmp7, label %for.body, label %for.end, !dbg !9979

for.body:                                         ; preds = %for.cond
  %16 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9980
  %17 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !9981
  %incdec.ptr = getelementptr inbounds %struct.isoent*, %struct.isoent** %17, i32 1, !dbg !9981
  store %struct.isoent** %incdec.ptr, %struct.isoent*** %enttbl, align 8, !dbg !9981
  store %struct.isoent* %16, %struct.isoent** %17, align 8, !dbg !9982
  br label %for.inc, !dbg !9983

for.inc:                                          ; preds = %for.body
  %18 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !9984
  %ptnext = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 9, !dbg !9986
  %19 = load %struct.isoent*, %struct.isoent** %ptnext, align 8, !dbg !9986
  store %struct.isoent* %19, %struct.isoent** %np, align 8, !dbg !9987
  br label %for.cond, !dbg !9988

for.end:                                          ; preds = %for.cond
  %20 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9989
  %sorted9 = getelementptr inbounds %struct.path_table, %struct.path_table* %20, i32 0, i32 2, !dbg !9990
  %21 = load %struct.isoent**, %struct.isoent*** %sorted9, align 8, !dbg !9990
  store %struct.isoent** %21, %struct.isoent*** %enttbl, align 8, !dbg !9991
  %22 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !9992
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %22, i32 0, i32 1, !dbg !9993
  %23 = load i32, i32* %vdd_type, align 8, !dbg !9993
  switch i32 %23, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb12
  ], !dbg !9994

sw.bb:                                            ; preds = %for.end, %for.end
  %24 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !9995
  %25 = bitcast %struct.isoent** %24 to i8*, !dbg !9995
  %26 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !9997
  %cnt10 = getelementptr inbounds %struct.path_table, %struct.path_table* %26, i32 0, i32 3, !dbg !9998
  %27 = load i32, i32* %cnt10, align 8, !dbg !9998
  %conv11 = sext i32 %27 to i64, !dbg !9997
  call void @qsort(i8* %25, i64 %conv11, i64 8, i32 (i8*, i8*)* @_compare_path_table), !dbg !9999
  br label %sw.epilog, !dbg !10000

sw.bb12:                                          ; preds = %for.end
  %28 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !10001
  %29 = bitcast %struct.isoent** %28 to i8*, !dbg !10001
  %30 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !10002
  %cnt13 = getelementptr inbounds %struct.path_table, %struct.path_table* %30, i32 0, i32 3, !dbg !10003
  %31 = load i32, i32* %cnt13, align 8, !dbg !10003
  %conv14 = sext i32 %31 to i64, !dbg !10002
  call void @qsort(i8* %29, i64 %conv14, i64 8, i32 (i8*, i8*)* @_compare_path_table_joliet), !dbg !10004
  br label %sw.epilog, !dbg !10005

sw.epilog:                                        ; preds = %for.end, %sw.bb12, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !10006
  br label %for.cond15, !dbg !10008

for.cond15:                                       ; preds = %for.inc23, %sw.epilog
  %32 = load i32, i32* %i, align 4, !dbg !10009
  %33 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !10012
  %cnt16 = getelementptr inbounds %struct.path_table, %struct.path_table* %33, i32 0, i32 3, !dbg !10013
  %34 = load i32, i32* %cnt16, align 8, !dbg !10013
  %cmp17 = icmp slt i32 %32, %34, !dbg !10014
  br i1 %cmp17, label %for.body19, label %for.end25, !dbg !10015

for.body19:                                       ; preds = %for.cond15
  %35 = load i32*, i32** %dir_number.addr, align 8, !dbg !10016
  %36 = load i32, i32* %35, align 4, !dbg !10017
  %inc = add nsw i32 %36, 1, !dbg !10017
  store i32 %inc, i32* %35, align 4, !dbg !10017
  %37 = load i32, i32* %i, align 4, !dbg !10018
  %idxprom20 = sext i32 %37 to i64, !dbg !10019
  %38 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !10019
  %arrayidx21 = getelementptr inbounds %struct.isoent*, %struct.isoent** %38, i64 %idxprom20, !dbg !10019
  %39 = load %struct.isoent*, %struct.isoent** %arrayidx21, align 8, !dbg !10019
  %dir_number22 = getelementptr inbounds %struct.isoent, %struct.isoent* %39, i32 0, i32 10, !dbg !10020
  store i32 %36, i32* %dir_number22, align 8, !dbg !10021
  br label %for.inc23, !dbg !10019

for.inc23:                                        ; preds = %for.body19
  %40 = load i32, i32* %i, align 4, !dbg !10022
  %inc24 = add nsw i32 %40, 1, !dbg !10022
  store i32 %inc24, i32* %i, align 4, !dbg !10022
  br label %for.cond15, !dbg !10024

for.end25:                                        ; preds = %for.cond15
  store i32 0, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

return:                                           ; preds = %for.end25, %if.then4, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !10026
  ret i32 %41, !dbg !10026
}

; Function Attrs: nounwind uwtable
define internal void @calculate_path_table_size(%struct.vdd* %vdd) #0 !dbg !784 {
entry:
  %vdd.addr = alloca %struct.vdd*, align 8
  %depth = alloca i32, align 4
  %size = alloca i32, align 4
  %pt = alloca %struct.path_table*, align 8
  %ptbl = alloca %struct.isoent**, align 8
  %i = alloca i32, align 4
  %cnt = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !10027, metadata !986), !dbg !10028
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !10029, metadata !986), !dbg !10030
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10031, metadata !986), !dbg !10032
  call void @llvm.dbg.declare(metadata %struct.path_table** %pt, metadata !10033, metadata !986), !dbg !10034
  %0 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !10035
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %0, i32 0, i32 2, !dbg !10036
  %1 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !10036
  store %struct.path_table* %1, %struct.path_table** %pt, align 8, !dbg !10037
  store i32 0, i32* %size, align 4, !dbg !10038
  store i32 0, i32* %depth, align 4, !dbg !10039
  br label %for.cond, !dbg !10041

for.cond:                                         ; preds = %for.inc19, %entry
  %2 = load i32, i32* %depth, align 4, !dbg !10042
  %3 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !10045
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %3, i32 0, i32 3, !dbg !10046
  %4 = load i32, i32* %max_depth, align 8, !dbg !10046
  %cmp = icmp slt i32 %2, %4, !dbg !10047
  br i1 %cmp, label %for.body, label %for.end21, !dbg !10048

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent*** %ptbl, metadata !10049, metadata !986), !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10052, metadata !986), !dbg !10053
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !10054, metadata !986), !dbg !10055
  %5 = load i32, i32* %depth, align 4, !dbg !10056
  %idxprom = sext i32 %5 to i64, !dbg !10058
  %6 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !10058
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %6, i64 %idxprom, !dbg !10058
  %cnt1 = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx, i32 0, i32 3, !dbg !10059
  %7 = load i32, i32* %cnt1, align 8, !dbg !10059
  store i32 %7, i32* %cnt, align 4, !dbg !10060
  %cmp2 = icmp eq i32 %7, 0, !dbg !10061
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10062

if.then:                                          ; preds = %for.body
  br label %for.end21, !dbg !10063

if.end:                                           ; preds = %for.body
  %8 = load i32, i32* %depth, align 4, !dbg !10064
  %idxprom3 = sext i32 %8 to i64, !dbg !10065
  %9 = load %struct.path_table*, %struct.path_table** %pt, align 8, !dbg !10065
  %arrayidx4 = getelementptr inbounds %struct.path_table, %struct.path_table* %9, i64 %idxprom3, !dbg !10065
  %sorted = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx4, i32 0, i32 2, !dbg !10066
  %10 = load %struct.isoent**, %struct.isoent*** %sorted, align 8, !dbg !10066
  store %struct.isoent** %10, %struct.isoent*** %ptbl, align 8, !dbg !10067
  store i32 0, i32* %i, align 4, !dbg !10068
  br label %for.cond5, !dbg !10070

for.cond5:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10071
  %12 = load i32, i32* %cnt, align 4, !dbg !10074
  %cmp6 = icmp slt i32 %11, %12, !dbg !10075
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !10076

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10077, metadata !986), !dbg !10079
  %13 = load i32, i32* %i, align 4, !dbg !10080
  %idxprom8 = sext i32 %13 to i64, !dbg !10082
  %14 = load %struct.isoent**, %struct.isoent*** %ptbl, align 8, !dbg !10082
  %arrayidx9 = getelementptr inbounds %struct.isoent*, %struct.isoent** %14, i64 %idxprom8, !dbg !10082
  %15 = load %struct.isoent*, %struct.isoent** %arrayidx9, align 8, !dbg !10082
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 14, !dbg !10083
  %16 = load i8*, i8** %identifier, align 8, !dbg !10083
  %cmp10 = icmp eq i8* %16, null, !dbg !10084
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !10085

if.then11:                                        ; preds = %for.body7
  store i32 1, i32* %len, align 4, !dbg !10086
  br label %if.end14, !dbg !10087

if.else:                                          ; preds = %for.body7
  %17 = load i32, i32* %i, align 4, !dbg !10088
  %idxprom12 = sext i32 %17 to i64, !dbg !10089
  %18 = load %struct.isoent**, %struct.isoent*** %ptbl, align 8, !dbg !10089
  %arrayidx13 = getelementptr inbounds %struct.isoent*, %struct.isoent** %18, i64 %idxprom12, !dbg !10089
  %19 = load %struct.isoent*, %struct.isoent** %arrayidx13, align 8, !dbg !10089
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %19, i32 0, i32 17, !dbg !10090
  %20 = load i32, i32* %id_len, align 8, !dbg !10090
  store i32 %20, i32* %len, align 4, !dbg !10091
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then11
  %21 = load i32, i32* %len, align 4, !dbg !10092
  %and = and i32 %21, 1, !dbg !10094
  %tobool = icmp ne i32 %and, 0, !dbg !10094
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !10095

if.then15:                                        ; preds = %if.end14
  %22 = load i32, i32* %len, align 4, !dbg !10096
  %inc = add nsw i32 %22, 1, !dbg !10096
  store i32 %inc, i32* %len, align 4, !dbg !10096
  br label %if.end16, !dbg !10097

if.end16:                                         ; preds = %if.then15, %if.end14
  %23 = load i32, i32* %len, align 4, !dbg !10098
  %add = add nsw i32 8, %23, !dbg !10099
  %24 = load i32, i32* %size, align 4, !dbg !10100
  %add17 = add nsw i32 %24, %add, !dbg !10100
  store i32 %add17, i32* %size, align 4, !dbg !10100
  br label %for.inc, !dbg !10101

for.inc:                                          ; preds = %if.end16
  %25 = load i32, i32* %i, align 4, !dbg !10102
  %inc18 = add nsw i32 %25, 1, !dbg !10102
  store i32 %inc18, i32* %i, align 4, !dbg !10102
  br label %for.cond5, !dbg !10104

for.end:                                          ; preds = %for.cond5
  br label %for.inc19, !dbg !10105

for.inc19:                                        ; preds = %for.end
  %26 = load i32, i32* %depth, align 4, !dbg !10106
  %inc20 = add nsw i32 %26, 1, !dbg !10106
  store i32 %inc20, i32* %depth, align 4, !dbg !10106
  br label %for.cond, !dbg !10108

for.end21:                                        ; preds = %if.then, %for.cond
  %27 = load i32, i32* %size, align 4, !dbg !10109
  %28 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !10110
  %path_table_size = getelementptr inbounds %struct.vdd, %struct.vdd* %28, i32 0, i32 5, !dbg !10111
  store i32 %27, i32* %path_table_size, align 8, !dbg !10112
  %29 = load i32, i32* %size, align 4, !dbg !10113
  %add22 = add nsw i32 %29, 4096, !dbg !10114
  %sub = sub nsw i32 %add22, 1, !dbg !10115
  %div = sdiv i32 %sub, 4096, !dbg !10116
  %mul = mul nsw i32 %div, 2, !dbg !10117
  %30 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !10118
  %path_table_block = getelementptr inbounds %struct.vdd, %struct.vdd* %30, i32 0, i32 4, !dbg !10119
  store i32 %mul, i32* %path_table_block, align 4, !dbg !10120
  ret void, !dbg !10121
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @path_table_add_entry(%struct.path_table* %pathtbl, %struct.isoent* %ent) #7 !dbg !692 {
entry:
  %pathtbl.addr = alloca %struct.path_table*, align 8
  %ent.addr = alloca %struct.isoent*, align 8
  store %struct.path_table* %pathtbl, %struct.path_table** %pathtbl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.path_table** %pathtbl.addr, metadata !10122, metadata !986), !dbg !10123
  store %struct.isoent* %ent, %struct.isoent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %ent.addr, metadata !10124, metadata !986), !dbg !10125
  %0 = load %struct.isoent*, %struct.isoent** %ent.addr, align 8, !dbg !10126
  %ptnext = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 9, !dbg !10127
  store %struct.isoent* null, %struct.isoent** %ptnext, align 8, !dbg !10128
  %1 = load %struct.isoent*, %struct.isoent** %ent.addr, align 8, !dbg !10129
  %2 = load %struct.path_table*, %struct.path_table** %pathtbl.addr, align 8, !dbg !10130
  %last = getelementptr inbounds %struct.path_table, %struct.path_table* %2, i32 0, i32 1, !dbg !10131
  %3 = load %struct.isoent**, %struct.isoent*** %last, align 8, !dbg !10131
  store %struct.isoent* %1, %struct.isoent** %3, align 8, !dbg !10132
  %4 = load %struct.isoent*, %struct.isoent** %ent.addr, align 8, !dbg !10133
  %ptnext1 = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 9, !dbg !10134
  %5 = load %struct.path_table*, %struct.path_table** %pathtbl.addr, align 8, !dbg !10135
  %last2 = getelementptr inbounds %struct.path_table, %struct.path_table* %5, i32 0, i32 1, !dbg !10136
  store %struct.isoent** %ptnext1, %struct.isoent*** %last2, align 8, !dbg !10137
  %6 = load %struct.path_table*, %struct.path_table** %pathtbl.addr, align 8, !dbg !10138
  %cnt = getelementptr inbounds %struct.path_table, %struct.path_table* %6, i32 0, i32 3, !dbg !10139
  %7 = load i32, i32* %cnt, align 8, !dbg !10140
  %inc = add nsw i32 %7, 1, !dbg !10140
  store i32 %inc, i32* %cnt, align 8, !dbg !10140
  ret void, !dbg !10141
}

; Function Attrs: nounwind uwtable
define internal void @isoent_remove_child(%struct.isoent* %parent, %struct.isoent* %child) #0 !dbg !696 {
entry:
  %parent.addr = alloca %struct.isoent*, align 8
  %child.addr = alloca %struct.isoent*, align 8
  %ent = alloca %struct.isoent*, align 8
  store %struct.isoent* %parent, %struct.isoent** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %parent.addr, metadata !10142, metadata !986), !dbg !10143
  store %struct.isoent* %child, %struct.isoent** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %child.addr, metadata !10144, metadata !986), !dbg !10145
  call void @llvm.dbg.declare(metadata %struct.isoent** %ent, metadata !10146, metadata !986), !dbg !10147
  %0 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10148
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 3, !dbg !10149
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !10150
  %1 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !10150
  store %struct.isoent* %1, %struct.isoent** %ent, align 8, !dbg !10151
  br label %while.cond, !dbg !10152

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10153
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 7, !dbg !10155
  %3 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !10155
  %4 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10156
  %cmp = icmp ne %struct.isoent* %3, %4, !dbg !10157
  br i1 %cmp, label %while.body, label %while.end, !dbg !10158

while.body:                                       ; preds = %while.cond
  %5 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10159
  %chnext1 = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 7, !dbg !10160
  %6 = load %struct.isoent*, %struct.isoent** %chnext1, align 8, !dbg !10160
  store %struct.isoent* %6, %struct.isoent** %ent, align 8, !dbg !10161
  br label %while.cond, !dbg !10162

while.end:                                        ; preds = %while.cond
  %7 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10164
  %chnext2 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 7, !dbg !10166
  %8 = load %struct.isoent*, %struct.isoent** %chnext2, align 8, !dbg !10166
  %chnext3 = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 7, !dbg !10167
  %9 = load %struct.isoent*, %struct.isoent** %chnext3, align 8, !dbg !10167
  %10 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10168
  %chnext4 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 7, !dbg !10169
  store %struct.isoent* %9, %struct.isoent** %chnext4, align 8, !dbg !10170
  %cmp5 = icmp eq %struct.isoent* %9, null, !dbg !10171
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10172

if.then:                                          ; preds = %while.end
  %11 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10173
  %chnext6 = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 7, !dbg !10174
  %12 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10175
  %children7 = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 3, !dbg !10176
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children7, i32 0, i32 1, !dbg !10177
  store %struct.isoent** %chnext6, %struct.isoent*** %last, align 8, !dbg !10178
  br label %if.end, !dbg !10175

if.end:                                           ; preds = %if.then, %while.end
  %13 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10179
  %children8 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 3, !dbg !10180
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children8, i32 0, i32 2, !dbg !10181
  %14 = load i32, i32* %cnt, align 8, !dbg !10182
  %dec = add nsw i32 %14, -1, !dbg !10182
  store i32 %dec, i32* %cnt, align 8, !dbg !10182
  %15 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10183
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 22, !dbg !10185
  %bf.load = load i8, i8* %dir, align 8, !dbg !10185
  %bf.shl = shl i8 %bf.load, 6, !dbg !10185
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !10185
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !10185
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10183
  br i1 %tobool, label %if.then9, label %if.end28, !dbg !10186

if.then9:                                         ; preds = %if.end
  %16 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10187
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 5, !dbg !10189
  %first10 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !10190
  %17 = load %struct.isoent*, %struct.isoent** %first10, align 8, !dbg !10190
  store %struct.isoent* %17, %struct.isoent** %ent, align 8, !dbg !10191
  br label %while.cond11, !dbg !10192

while.cond11:                                     ; preds = %while.body13, %if.then9
  %18 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10193
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 8, !dbg !10195
  %19 = load %struct.isoent*, %struct.isoent** %drnext, align 8, !dbg !10195
  %20 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10196
  %cmp12 = icmp ne %struct.isoent* %19, %20, !dbg !10197
  br i1 %cmp12, label %while.body13, label %while.end15, !dbg !10198

while.body13:                                     ; preds = %while.cond11
  %21 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10199
  %drnext14 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 8, !dbg !10200
  %22 = load %struct.isoent*, %struct.isoent** %drnext14, align 8, !dbg !10200
  store %struct.isoent* %22, %struct.isoent** %ent, align 8, !dbg !10201
  br label %while.cond11, !dbg !10202

while.end15:                                      ; preds = %while.cond11
  %23 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10204
  %drnext16 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 8, !dbg !10206
  %24 = load %struct.isoent*, %struct.isoent** %drnext16, align 8, !dbg !10206
  %drnext17 = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 8, !dbg !10207
  %25 = load %struct.isoent*, %struct.isoent** %drnext17, align 8, !dbg !10207
  %26 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10208
  %drnext18 = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 8, !dbg !10209
  store %struct.isoent* %25, %struct.isoent** %drnext18, align 8, !dbg !10210
  %cmp19 = icmp eq %struct.isoent* %25, null, !dbg !10211
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !10212

if.then20:                                        ; preds = %while.end15
  %27 = load %struct.isoent*, %struct.isoent** %ent, align 8, !dbg !10213
  %drnext21 = getelementptr inbounds %struct.isoent, %struct.isoent* %27, i32 0, i32 8, !dbg !10214
  %28 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10215
  %subdirs22 = getelementptr inbounds %struct.isoent, %struct.isoent* %28, i32 0, i32 5, !dbg !10216
  %last23 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs22, i32 0, i32 1, !dbg !10217
  store %struct.isoent** %drnext21, %struct.isoent*** %last23, align 8, !dbg !10218
  br label %if.end24, !dbg !10215

if.end24:                                         ; preds = %if.then20, %while.end15
  %29 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10219
  %subdirs25 = getelementptr inbounds %struct.isoent, %struct.isoent* %29, i32 0, i32 5, !dbg !10220
  %cnt26 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs25, i32 0, i32 2, !dbg !10221
  %30 = load i32, i32* %cnt26, align 8, !dbg !10222
  %dec27 = add nsw i32 %30, -1, !dbg !10222
  store i32 %dec27, i32* %cnt26, align 8, !dbg !10222
  br label %if.end28, !dbg !10223

if.end28:                                         ; preds = %if.end24, %if.end
  %31 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10224
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %31, i32 0, i32 4, !dbg !10225
  %32 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10226
  %33 = bitcast %struct.isoent* %32 to %struct.archive_rb_node*, !dbg !10227
  call void @__archive_rb_tree_remove_node(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* %33), !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_add_child_head(%struct.isoent* %parent, %struct.isoent* %child) #0 !dbg !699 {
entry:
  %retval = alloca i32, align 4
  %parent.addr = alloca %struct.isoent*, align 8
  %child.addr = alloca %struct.isoent*, align 8
  store %struct.isoent* %parent, %struct.isoent** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %parent.addr, metadata !10230, metadata !986), !dbg !10231
  store %struct.isoent* %child, %struct.isoent** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %child.addr, metadata !10232, metadata !986), !dbg !10233
  %0 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10234
  %rbtree = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 4, !dbg !10236
  %1 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10237
  %2 = bitcast %struct.isoent* %1 to %struct.archive_rb_node*, !dbg !10238
  %call = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* %2), !dbg !10239
  %tobool = icmp ne i32 %call, 0, !dbg !10239
  br i1 %tobool, label %if.end, label %if.then, !dbg !10240

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10241
  br label %return, !dbg !10241

if.end:                                           ; preds = %entry
  %3 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10242
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 3, !dbg !10244
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !10245
  %4 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !10245
  %5 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10246
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 7, !dbg !10247
  store %struct.isoent* %4, %struct.isoent** %chnext, align 8, !dbg !10248
  %cmp = icmp eq %struct.isoent* %4, null, !dbg !10249
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !10250

if.then1:                                         ; preds = %if.end
  %6 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10251
  %chnext2 = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 7, !dbg !10252
  %7 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10253
  %children3 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 3, !dbg !10254
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children3, i32 0, i32 1, !dbg !10255
  store %struct.isoent** %chnext2, %struct.isoent*** %last, align 8, !dbg !10256
  br label %if.end4, !dbg !10253

if.end4:                                          ; preds = %if.then1, %if.end
  %8 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10257
  %9 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10258
  %children5 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 3, !dbg !10259
  %first6 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children5, i32 0, i32 0, !dbg !10260
  store %struct.isoent* %8, %struct.isoent** %first6, align 8, !dbg !10261
  %10 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10262
  %children7 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 3, !dbg !10263
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children7, i32 0, i32 2, !dbg !10264
  %11 = load i32, i32* %cnt, align 8, !dbg !10265
  %inc = add nsw i32 %11, 1, !dbg !10265
  store i32 %inc, i32* %cnt, align 8, !dbg !10265
  %12 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10266
  %13 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10267
  %parent8 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 2, !dbg !10268
  store %struct.isoent* %12, %struct.isoent** %parent8, align 8, !dbg !10269
  %14 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10270
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 22, !dbg !10272
  %bf.load = load i8, i8* %dir, align 8, !dbg !10272
  %bf.shl = shl i8 %bf.load, 6, !dbg !10272
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !10272
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !10272
  %tobool9 = icmp ne i32 %bf.cast, 0, !dbg !10270
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !10273

if.then10:                                        ; preds = %if.end4
  %15 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10274
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 5, !dbg !10277
  %first11 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !10278
  %16 = load %struct.isoent*, %struct.isoent** %first11, align 8, !dbg !10278
  %17 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10279
  %drnext = getelementptr inbounds %struct.isoent, %struct.isoent* %17, i32 0, i32 8, !dbg !10280
  store %struct.isoent* %16, %struct.isoent** %drnext, align 8, !dbg !10281
  %cmp12 = icmp eq %struct.isoent* %16, null, !dbg !10282
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !10283

if.then13:                                        ; preds = %if.then10
  %18 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10284
  %drnext14 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 8, !dbg !10285
  %19 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10286
  %subdirs15 = getelementptr inbounds %struct.isoent, %struct.isoent* %19, i32 0, i32 5, !dbg !10287
  %last16 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs15, i32 0, i32 1, !dbg !10288
  store %struct.isoent** %drnext14, %struct.isoent*** %last16, align 8, !dbg !10289
  br label %if.end17, !dbg !10286

if.end17:                                         ; preds = %if.then13, %if.then10
  %20 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10290
  %21 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10291
  %subdirs18 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 5, !dbg !10292
  %first19 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs18, i32 0, i32 0, !dbg !10293
  store %struct.isoent* %20, %struct.isoent** %first19, align 8, !dbg !10294
  %22 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10295
  %subdirs20 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 5, !dbg !10296
  %cnt21 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs20, i32 0, i32 2, !dbg !10297
  %23 = load i32, i32* %cnt21, align 8, !dbg !10298
  %inc22 = add nsw i32 %23, 1, !dbg !10298
  store i32 %inc22, i32* %cnt21, align 8, !dbg !10298
  %24 = load %struct.isoent*, %struct.isoent** %parent.addr, align 8, !dbg !10299
  %25 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10300
  %parent23 = getelementptr inbounds %struct.isoent, %struct.isoent* %25, i32 0, i32 2, !dbg !10301
  store %struct.isoent* %24, %struct.isoent** %parent23, align 8, !dbg !10302
  br label %if.end25, !dbg !10303

if.else:                                          ; preds = %if.end4
  %26 = load %struct.isoent*, %struct.isoent** %child.addr, align 8, !dbg !10304
  %drnext24 = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 8, !dbg !10305
  store %struct.isoent* null, %struct.isoent** %drnext24, align 8, !dbg !10306
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.end17
  store i32 1, i32* %retval, align 4, !dbg !10307
  br label %return, !dbg !10307

return:                                           ; preds = %if.end25, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10308
  ret i32 %27, !dbg !10308
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.isoent* @path_table_last_entry(%struct.path_table* %pathtbl) #7 !dbg !700 {
entry:
  %retval = alloca %struct.isoent*, align 8
  %pathtbl.addr = alloca %struct.path_table*, align 8
  store %struct.path_table* %pathtbl, %struct.path_table** %pathtbl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.path_table** %pathtbl.addr, metadata !10309, metadata !986), !dbg !10310
  %0 = load %struct.path_table*, %struct.path_table** %pathtbl.addr, align 8, !dbg !10311
  %first = getelementptr inbounds %struct.path_table, %struct.path_table* %0, i32 0, i32 0, !dbg !10313
  %1 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !10313
  %cmp = icmp eq %struct.isoent* %1, null, !dbg !10314
  br i1 %cmp, label %if.then, label %if.end, !dbg !10315

if.then:                                          ; preds = %entry
  store %struct.isoent* null, %struct.isoent** %retval, align 8, !dbg !10316
  br label %return, !dbg !10316

if.end:                                           ; preds = %entry
  %2 = load %struct.path_table*, %struct.path_table** %pathtbl.addr, align 8, !dbg !10317
  %last = getelementptr inbounds %struct.path_table, %struct.path_table* %2, i32 0, i32 1, !dbg !10318
  %3 = load %struct.isoent**, %struct.isoent*** %last, align 8, !dbg !10318
  %4 = bitcast %struct.isoent** %3 to i8*, !dbg !10319
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 -128, !dbg !10320
  %5 = bitcast i8* %add.ptr to %struct.isoent*, !dbg !10321
  store %struct.isoent* %5, %struct.isoent** %retval, align 8, !dbg !10322
  br label %return, !dbg !10322

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.isoent*, %struct.isoent** %retval, align 8, !dbg !10323
  ret %struct.isoent* %6, !dbg !10323
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_rr_move_dir(%struct.archive_write* %a, %struct.isoent** %rr_moved, %struct.isoent* %curent, %struct.isoent** %newent) #0 !dbg !703 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %rr_moved.addr = alloca %struct.isoent**, align 8
  %curent.addr = alloca %struct.isoent*, align 8
  %newent.addr = alloca %struct.isoent**, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %rrmoved = alloca %struct.isoent*, align 8
  %mvent = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %rootent = alloca %struct.isoent*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !10324, metadata !986), !dbg !10325
  store %struct.isoent** %rr_moved, %struct.isoent*** %rr_moved.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent*** %rr_moved.addr, metadata !10326, metadata !986), !dbg !10327
  store %struct.isoent* %curent, %struct.isoent** %curent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %curent.addr, metadata !10328, metadata !986), !dbg !10329
  store %struct.isoent** %newent, %struct.isoent*** %newent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent*** %newent.addr, metadata !10330, metadata !986), !dbg !10331
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !10332, metadata !986), !dbg !10333
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10334
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !10335
  %1 = load i8*, i8** %format_data, align 8, !dbg !10335
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !10334
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !10333
  call void @llvm.dbg.declare(metadata %struct.isoent** %rrmoved, metadata !10336, metadata !986), !dbg !10337
  call void @llvm.dbg.declare(metadata %struct.isoent** %mvent, metadata !10338, metadata !986), !dbg !10339
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !10340, metadata !986), !dbg !10341
  %3 = load %struct.isoent**, %struct.isoent*** %rr_moved.addr, align 8, !dbg !10342
  %4 = load %struct.isoent*, %struct.isoent** %3, align 8, !dbg !10344
  store %struct.isoent* %4, %struct.isoent** %rrmoved, align 8, !dbg !10345
  %cmp = icmp eq %struct.isoent* %4, null, !dbg !10346
  br i1 %cmp, label %if.then, label %if.end10, !dbg !10347

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.isoent** %rootent, metadata !10348, metadata !986), !dbg !10350
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10351
  %primary = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 14, !dbg !10352
  %rootent1 = getelementptr inbounds %struct.vdd, %struct.vdd* %primary, i32 0, i32 0, !dbg !10353
  %6 = load %struct.isoent*, %struct.isoent** %rootent1, align 8, !dbg !10353
  store %struct.isoent* %6, %struct.isoent** %rootent, align 8, !dbg !10350
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10354
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10355
  %call = call %struct.isoent* @isoent_create_virtual_dir(%struct.archive_write* %7, %struct.iso9660* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i32 0, i32 0)), !dbg !10356
  store %struct.isoent* %call, %struct.isoent** %rrmoved, align 8, !dbg !10357
  %9 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10358
  %cmp2 = icmp eq %struct.isoent* %9, null, !dbg !10360
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !10361

if.then3:                                         ; preds = %if.then
  %10 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10362
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %10, i32 0, i32 0, !dbg !10364
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !10365
  store i32 -30, i32* %retval, align 4, !dbg !10366
  br label %return, !dbg !10366

if.end:                                           ; preds = %if.then
  %11 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !10367
  %12 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10368
  %call4 = call i32 @isoent_add_child_head(%struct.isoent* %11, %struct.isoent* %12), !dbg !10369
  %13 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !10370
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 1, !dbg !10371
  %14 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !10371
  %entry5 = getelementptr inbounds %struct.isofile, %struct.isofile* %14, i32 0, i32 4, !dbg !10372
  %15 = load %struct.archive_entry*, %struct.archive_entry** %entry5, align 8, !dbg !10372
  %16 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !10373
  %file6 = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 1, !dbg !10374
  %17 = load %struct.isofile*, %struct.isofile** %file6, align 8, !dbg !10374
  %entry7 = getelementptr inbounds %struct.isofile, %struct.isofile* %17, i32 0, i32 4, !dbg !10375
  %18 = load %struct.archive_entry*, %struct.archive_entry** %entry7, align 8, !dbg !10375
  %call8 = call i32 @archive_entry_nlink(%struct.archive_entry* %18), !dbg !10376
  %add = add i32 %call8, 1, !dbg !10377
  call void @archive_entry_set_nlink(%struct.archive_entry* %15, i32 %add), !dbg !10378
  %19 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10379
  %primary9 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %19, i32 0, i32 14, !dbg !10380
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %primary9, i32 0, i32 2, !dbg !10381
  %20 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !10381
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %20, i64 1, !dbg !10379
  %21 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10382
  call void @path_table_add_entry(%struct.path_table* %arrayidx, %struct.isoent* %21), !dbg !10383
  %22 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10384
  %23 = load %struct.isoent**, %struct.isoent*** %rr_moved.addr, align 8, !dbg !10385
  store %struct.isoent* %22, %struct.isoent** %23, align 8, !dbg !10386
  br label %if.end10, !dbg !10387

if.end10:                                         ; preds = %if.end, %entry
  %24 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10388
  %call11 = call %struct.isoent* @isoent_clone(%struct.isoent* %24), !dbg !10389
  store %struct.isoent* %call11, %struct.isoent** %mvent, align 8, !dbg !10390
  %25 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10391
  %cmp12 = icmp eq %struct.isoent* %25, null, !dbg !10393
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !10394

if.then13:                                        ; preds = %if.end10
  %26 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10395
  %archive14 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %26, i32 0, i32 0, !dbg !10397
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive14, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !10398
  store i32 -30, i32* %retval, align 4, !dbg !10399
  br label %return, !dbg !10399

if.end15:                                         ; preds = %if.end10
  %27 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10400
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %27, i32 0, i32 2, !dbg !10401
  %28 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !10401
  %29 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10402
  %rr_parent = getelementptr inbounds %struct.isoent, %struct.isoent* %29, i32 0, i32 19, !dbg !10403
  store %struct.isoent* %28, %struct.isoent** %rr_parent, align 8, !dbg !10404
  %30 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10405
  %31 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10406
  %rr_child = getelementptr inbounds %struct.isoent, %struct.isoent* %31, i32 0, i32 20, !dbg !10407
  store %struct.isoent* %30, %struct.isoent** %rr_child, align 8, !dbg !10408
  %32 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10409
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %32, i32 0, i32 3, !dbg !10411
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !10412
  %33 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !10412
  %cmp16 = icmp ne %struct.isoent* %33, null, !dbg !10413
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !10414

if.then17:                                        ; preds = %if.end15
  %34 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10415
  %children18 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 3, !dbg !10417
  %first19 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children18, i32 0, i32 0, !dbg !10418
  %35 = load %struct.isoent*, %struct.isoent** %first19, align 8, !dbg !10418
  %36 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10419
  %children20 = getelementptr inbounds %struct.isoent, %struct.isoent* %36, i32 0, i32 3, !dbg !10420
  %last = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children20, i32 0, i32 1, !dbg !10421
  %37 = load %struct.isoent**, %struct.isoent*** %last, align 8, !dbg !10421
  store %struct.isoent* %35, %struct.isoent** %37, align 8, !dbg !10422
  %38 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10423
  %children21 = getelementptr inbounds %struct.isoent, %struct.isoent* %38, i32 0, i32 3, !dbg !10424
  %last22 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children21, i32 0, i32 1, !dbg !10425
  %39 = load %struct.isoent**, %struct.isoent*** %last22, align 8, !dbg !10425
  %40 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10426
  %children23 = getelementptr inbounds %struct.isoent, %struct.isoent* %40, i32 0, i32 3, !dbg !10427
  %last24 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children23, i32 0, i32 1, !dbg !10428
  store %struct.isoent** %39, %struct.isoent*** %last24, align 8, !dbg !10429
  br label %if.end25, !dbg !10430

if.end25:                                         ; preds = %if.then17, %if.end15
  %41 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10431
  %children26 = getelementptr inbounds %struct.isoent, %struct.isoent* %41, i32 0, i32 3, !dbg !10433
  %first27 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children26, i32 0, i32 0, !dbg !10434
  %42 = load %struct.isoent*, %struct.isoent** %first27, align 8, !dbg !10434
  store %struct.isoent* %42, %struct.isoent** %np, align 8, !dbg !10435
  br label %for.cond, !dbg !10436

for.cond:                                         ; preds = %for.inc, %if.end25
  %43 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10437
  %cmp28 = icmp ne %struct.isoent* %43, null, !dbg !10440
  br i1 %cmp28, label %for.body, label %for.end, !dbg !10441

for.body:                                         ; preds = %for.cond
  %44 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10442
  %45 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10443
  %parent29 = getelementptr inbounds %struct.isoent, %struct.isoent* %45, i32 0, i32 2, !dbg !10444
  store %struct.isoent* %44, %struct.isoent** %parent29, align 8, !dbg !10445
  br label %for.inc, !dbg !10443

for.inc:                                          ; preds = %for.body
  %46 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10446
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %46, i32 0, i32 7, !dbg !10448
  %47 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !10448
  store %struct.isoent* %47, %struct.isoent** %np, align 8, !dbg !10449
  br label %for.cond, !dbg !10450

for.end:                                          ; preds = %for.cond
  %48 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10451
  %children30 = getelementptr inbounds %struct.isoent, %struct.isoent* %48, i32 0, i32 3, !dbg !10452
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children30, i32 0, i32 2, !dbg !10453
  %49 = load i32, i32* %cnt, align 8, !dbg !10453
  %50 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10454
  %children31 = getelementptr inbounds %struct.isoent, %struct.isoent* %50, i32 0, i32 3, !dbg !10455
  %cnt32 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children31, i32 0, i32 2, !dbg !10456
  store i32 %49, i32* %cnt32, align 8, !dbg !10457
  %51 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10458
  %children33 = getelementptr inbounds %struct.isoent, %struct.isoent* %51, i32 0, i32 3, !dbg !10459
  %cnt34 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children33, i32 0, i32 2, !dbg !10460
  store i32 0, i32* %cnt34, align 8, !dbg !10461
  %52 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10462
  %children35 = getelementptr inbounds %struct.isoent, %struct.isoent* %52, i32 0, i32 3, !dbg !10463
  %first36 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children35, i32 0, i32 0, !dbg !10464
  store %struct.isoent* null, %struct.isoent** %first36, align 8, !dbg !10465
  %53 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10466
  %children37 = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 3, !dbg !10467
  %first38 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children37, i32 0, i32 0, !dbg !10468
  %54 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10469
  %children39 = getelementptr inbounds %struct.isoent, %struct.isoent* %54, i32 0, i32 3, !dbg !10470
  %last40 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children39, i32 0, i32 1, !dbg !10471
  store %struct.isoent** %first38, %struct.isoent*** %last40, align 8, !dbg !10472
  %55 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10473
  %subdirs = getelementptr inbounds %struct.isoent, %struct.isoent* %55, i32 0, i32 5, !dbg !10475
  %first41 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs, i32 0, i32 0, !dbg !10476
  %56 = load %struct.isoent*, %struct.isoent** %first41, align 8, !dbg !10476
  %cmp42 = icmp ne %struct.isoent* %56, null, !dbg !10477
  br i1 %cmp42, label %if.then43, label %if.end52, !dbg !10478

if.then43:                                        ; preds = %for.end
  %57 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10479
  %subdirs44 = getelementptr inbounds %struct.isoent, %struct.isoent* %57, i32 0, i32 5, !dbg !10481
  %first45 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs44, i32 0, i32 0, !dbg !10482
  %58 = load %struct.isoent*, %struct.isoent** %first45, align 8, !dbg !10482
  %59 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10483
  %subdirs46 = getelementptr inbounds %struct.isoent, %struct.isoent* %59, i32 0, i32 5, !dbg !10484
  %last47 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs46, i32 0, i32 1, !dbg !10485
  %60 = load %struct.isoent**, %struct.isoent*** %last47, align 8, !dbg !10485
  store %struct.isoent* %58, %struct.isoent** %60, align 8, !dbg !10486
  %61 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10487
  %subdirs48 = getelementptr inbounds %struct.isoent, %struct.isoent* %61, i32 0, i32 5, !dbg !10488
  %last49 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs48, i32 0, i32 1, !dbg !10489
  %62 = load %struct.isoent**, %struct.isoent*** %last49, align 8, !dbg !10489
  %63 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10490
  %subdirs50 = getelementptr inbounds %struct.isoent, %struct.isoent* %63, i32 0, i32 5, !dbg !10491
  %last51 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs50, i32 0, i32 1, !dbg !10492
  store %struct.isoent** %62, %struct.isoent*** %last51, align 8, !dbg !10493
  br label %if.end52, !dbg !10494

if.end52:                                         ; preds = %if.then43, %for.end
  %64 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10495
  %subdirs53 = getelementptr inbounds %struct.isoent, %struct.isoent* %64, i32 0, i32 5, !dbg !10496
  %cnt54 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs53, i32 0, i32 2, !dbg !10497
  %65 = load i32, i32* %cnt54, align 8, !dbg !10497
  %66 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10498
  %subdirs55 = getelementptr inbounds %struct.isoent, %struct.isoent* %66, i32 0, i32 5, !dbg !10499
  %cnt56 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs55, i32 0, i32 2, !dbg !10500
  store i32 %65, i32* %cnt56, align 8, !dbg !10501
  %67 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10502
  %subdirs57 = getelementptr inbounds %struct.isoent, %struct.isoent* %67, i32 0, i32 5, !dbg !10503
  %cnt58 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs57, i32 0, i32 2, !dbg !10504
  store i32 0, i32* %cnt58, align 8, !dbg !10505
  %68 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10506
  %subdirs59 = getelementptr inbounds %struct.isoent, %struct.isoent* %68, i32 0, i32 5, !dbg !10507
  %first60 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs59, i32 0, i32 0, !dbg !10508
  store %struct.isoent* null, %struct.isoent** %first60, align 8, !dbg !10509
  %69 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10510
  %subdirs61 = getelementptr inbounds %struct.isoent, %struct.isoent* %69, i32 0, i32 5, !dbg !10511
  %first62 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs61, i32 0, i32 0, !dbg !10512
  %70 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10513
  %subdirs63 = getelementptr inbounds %struct.isoent, %struct.isoent* %70, i32 0, i32 5, !dbg !10514
  %last64 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %subdirs63, i32 0, i32 1, !dbg !10515
  store %struct.isoent** %first62, %struct.isoent*** %last64, align 8, !dbg !10516
  %71 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10517
  %72 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10518
  %call65 = call i32 @isoent_add_child_tail(%struct.isoent* %71, %struct.isoent* %72), !dbg !10519
  %73 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10520
  %file66 = getelementptr inbounds %struct.isoent, %struct.isoent* %73, i32 0, i32 1, !dbg !10521
  %74 = load %struct.isofile*, %struct.isofile** %file66, align 8, !dbg !10521
  %entry67 = getelementptr inbounds %struct.isofile, %struct.isofile* %74, i32 0, i32 4, !dbg !10522
  %75 = load %struct.archive_entry*, %struct.archive_entry** %entry67, align 8, !dbg !10522
  %76 = load %struct.isoent*, %struct.isoent** %rrmoved, align 8, !dbg !10523
  %file68 = getelementptr inbounds %struct.isoent, %struct.isoent* %76, i32 0, i32 1, !dbg !10524
  %77 = load %struct.isofile*, %struct.isofile** %file68, align 8, !dbg !10524
  %entry69 = getelementptr inbounds %struct.isofile, %struct.isofile* %77, i32 0, i32 4, !dbg !10525
  %78 = load %struct.archive_entry*, %struct.archive_entry** %entry69, align 8, !dbg !10525
  %call70 = call i32 @archive_entry_nlink(%struct.archive_entry* %78), !dbg !10526
  %add71 = add i32 %call70, 1, !dbg !10527
  call void @archive_entry_set_nlink(%struct.archive_entry* %75, i32 %add71), !dbg !10528
  %79 = load %struct.isoent*, %struct.isoent** %curent.addr, align 8, !dbg !10529
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %79, i32 0, i32 22, !dbg !10530
  %bf.load = load i8, i8* %dir, align 8, !dbg !10531
  %bf.clear = and i8 %bf.load, -3, !dbg !10531
  store i8 %bf.clear, i8* %dir, align 8, !dbg !10531
  %80 = load %struct.isoent*, %struct.isoent** %mvent, align 8, !dbg !10532
  %81 = load %struct.isoent**, %struct.isoent*** %newent.addr, align 8, !dbg !10533
  store %struct.isoent* %80, %struct.isoent** %81, align 8, !dbg !10534
  store i32 0, i32* %retval, align 4, !dbg !10535
  br label %return, !dbg !10535

return:                                           ; preds = %if.end52, %if.then13, %if.then3
  %82 = load i32, i32* %retval, align 4, !dbg !10536
  ret i32 %82, !dbg !10536
}

declare void @__archive_rb_tree_remove_node(%struct.archive_rb_tree*, %struct.archive_rb_node*) #2

declare %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree*, %struct.archive_rb_node*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @idr_init(%struct.iso9660* %iso9660, %struct.vdd* %vdd, %struct.idr* %idr) #0 !dbg !712 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !10537, metadata !986), !dbg !10538
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !10539, metadata !986), !dbg !10540
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !10541, metadata !986), !dbg !10542
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10543
  %idrent_pool = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 0, !dbg !10544
  store %struct.idrent* null, %struct.idrent** %idrent_pool, align 8, !dbg !10545
  %1 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10546
  %pool_size = getelementptr inbounds %struct.idr, %struct.idr* %1, i32 0, i32 3, !dbg !10547
  store i32 0, i32* %pool_size, align 8, !dbg !10548
  %2 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !10549
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %2, i32 0, i32 1, !dbg !10551
  %3 = load i32, i32* %vdd_type, align 8, !dbg !10551
  %cmp = icmp ne i32 %3, 1, !dbg !10552
  br i1 %cmp, label %if.then, label %if.end7, !dbg !10553

if.then:                                          ; preds = %entry
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !10554
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %4, i32 0, i32 37, !dbg !10557
  %5 = bitcast %struct.iso_option* %opt to i32*, !dbg !10558
  %bf.load = load i32, i32* %5, align 8, !dbg !10558
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !10558
  %bf.clear = and i32 %bf.lshr, 7, !dbg !10558
  %cmp1 = icmp sle i32 %bf.clear, 3, !dbg !10559
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !10560

if.then2:                                         ; preds = %if.then
  %6 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10561
  %char_map = getelementptr inbounds %struct.idr, %struct.idr* %6, i32 0, i32 7, !dbg !10563
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %char_map, i32 0, i32 0, !dbg !10564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @d_characters_map, i32 0, i32 0), i64 128, i32 8, i1 false), !dbg !10564
  br label %if.end, !dbg !10565

if.else:                                          ; preds = %if.then
  %7 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10566
  %char_map3 = getelementptr inbounds %struct.idr, %struct.idr* %7, i32 0, i32 7, !dbg !10568
  %arraydecay4 = getelementptr inbounds [128 x i8], [128 x i8]* %char_map3, i32 0, i32 0, !dbg !10569
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay4, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @d1_characters_map, i32 0, i32 0), i64 128, i32 8, i1 false), !dbg !10569
  %8 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10570
  %char_map5 = getelementptr inbounds %struct.idr, %struct.idr* %8, i32 0, i32 7, !dbg !10571
  %arraydecay6 = getelementptr inbounds [128 x i8], [128 x i8]* %char_map5, i32 0, i32 0, !dbg !10570
  call void @idr_relaxed_filenames(i8* %arraydecay6), !dbg !10572
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end7, !dbg !10573

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !10574
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_gen_joliet_identifier(%struct.archive_write* %a, %struct.isoent* %isoent, %struct.idr* %idr) #0 !dbg !737 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %np = alloca %struct.isoent*, align 8
  %p = alloca i8*, align 8
  %l = alloca i64, align 8
  %r = alloca i32, align 4
  %ffmax = alloca i64, align 8
  %parent_len = alloca i64, align 8
  %dot = alloca i8*, align 8
  %ext_off = alloca i32, align 4
  %noff = alloca i32, align 4
  %weight = alloca i32, align 4
  %lt = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !10575, metadata !986), !dbg !10576
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !10577, metadata !986), !dbg !10578
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !10579, metadata !986), !dbg !10580
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !10581, metadata !986), !dbg !10582
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !10583, metadata !986), !dbg !10584
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10585, metadata !986), !dbg !10586
  call void @llvm.dbg.declare(metadata i64* %l, metadata !10587, metadata !986), !dbg !10588
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10589, metadata !986), !dbg !10590
  call void @llvm.dbg.declare(metadata i64* %ffmax, metadata !10591, metadata !986), !dbg !10592
  call void @llvm.dbg.declare(metadata i64* %parent_len, metadata !10593, metadata !986), !dbg !10594
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !10595
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 3, !dbg !10597
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 2, !dbg !10598
  %1 = load i32, i32* %cnt, align 8, !dbg !10598
  %cmp = icmp eq i32 %1, 0, !dbg !10599
  br i1 %cmp, label %if.then, label %if.end, !dbg !10600

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10601
  br label %return, !dbg !10601

if.end:                                           ; preds = %entry
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10602
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %2, i32 0, i32 14, !dbg !10603
  %3 = load i8*, i8** %format_data, align 8, !dbg !10603
  %4 = bitcast i8* %3 to %struct.iso9660*, !dbg !10602
  store %struct.iso9660* %4, %struct.iso9660** %iso9660, align 8, !dbg !10604
  %5 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10605
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %5, i32 0, i32 37, !dbg !10607
  %6 = bitcast %struct.iso_option* %opt to i32*, !dbg !10608
  %bf.load = load i32, i32* %6, align 8, !dbg !10608
  %bf.lshr = lshr i32 %bf.load, 17, !dbg !10608
  %bf.clear = and i32 %bf.lshr, 3, !dbg !10608
  %cmp1 = icmp eq i32 %bf.clear, 2, !dbg !10609
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !10610

if.then2:                                         ; preds = %if.end
  store i64 206, i64* %ffmax, align 8, !dbg !10611
  br label %if.end3, !dbg !10612

if.else:                                          ; preds = %if.end
  store i64 128, i64* %ffmax, align 8, !dbg !10613
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10614
  %8 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10615
  %9 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !10616
  %children4 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 3, !dbg !10617
  %cnt5 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children4, i32 0, i32 2, !dbg !10618
  %10 = load i32, i32* %cnt5, align 8, !dbg !10618
  %11 = load i64, i64* %ffmax, align 8, !dbg !10619
  %conv = trunc i64 %11 to i32, !dbg !10620
  %call = call i32 @idr_start(%struct.archive_write* %7, %struct.idr* %8, i32 %10, i32 %conv, i32 6, i32 2, %struct.archive_rb_tree_ops* @isoent_gen_joliet_identifier.rb_ops), !dbg !10621
  store i32 %call, i32* %r, align 4, !dbg !10622
  %12 = load i32, i32* %r, align 4, !dbg !10623
  %cmp6 = icmp slt i32 %12, 0, !dbg !10625
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !10626

if.then8:                                         ; preds = %if.end3
  %13 = load i32, i32* %r, align 4, !dbg !10627
  store i32 %13, i32* %retval, align 4, !dbg !10628
  br label %return, !dbg !10628

if.end9:                                          ; preds = %if.end3
  store i64 1, i64* %parent_len, align 8, !dbg !10629
  %14 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !10630
  store %struct.isoent* %14, %struct.isoent** %np, align 8, !dbg !10632
  br label %for.cond, !dbg !10633

for.cond:                                         ; preds = %for.inc, %if.end9
  %15 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10634
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 2, !dbg !10637
  %16 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !10637
  %17 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10638
  %cmp10 = icmp ne %struct.isoent* %16, %17, !dbg !10639
  br i1 %cmp10, label %for.body, label %for.end, !dbg !10640

for.body:                                         ; preds = %for.cond
  %18 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10641
  %mb_len = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 18, !dbg !10642
  %19 = load i32, i32* %mb_len, align 4, !dbg !10642
  %add = add nsw i32 %19, 1, !dbg !10643
  %conv12 = sext i32 %add to i64, !dbg !10641
  %20 = load i64, i64* %parent_len, align 8, !dbg !10644
  %add13 = add i64 %20, %conv12, !dbg !10644
  store i64 %add13, i64* %parent_len, align 8, !dbg !10644
  br label %for.inc, !dbg !10645

for.inc:                                          ; preds = %for.body
  %21 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10646
  %parent14 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 2, !dbg !10648
  %22 = load %struct.isoent*, %struct.isoent** %parent14, align 8, !dbg !10648
  store %struct.isoent* %22, %struct.isoent** %np, align 8, !dbg !10649
  br label %for.cond, !dbg !10650

for.end:                                          ; preds = %for.cond
  %23 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !10651
  %children15 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 3, !dbg !10653
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children15, i32 0, i32 0, !dbg !10654
  %24 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !10654
  store %struct.isoent* %24, %struct.isoent** %np, align 8, !dbg !10655
  br label %for.cond16, !dbg !10656

for.cond16:                                       ; preds = %for.inc136, %for.end
  %25 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10657
  %cmp17 = icmp ne %struct.isoent* %25, null, !dbg !10660
  br i1 %cmp17, label %for.body19, label %for.end137, !dbg !10661

for.body19:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata i8** %dot, metadata !10662, metadata !986), !dbg !10664
  call void @llvm.dbg.declare(metadata i32* %ext_off, metadata !10665, metadata !986), !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %noff, metadata !10667, metadata !986), !dbg !10668
  call void @llvm.dbg.declare(metadata i32* %weight, metadata !10669, metadata !986), !dbg !10670
  call void @llvm.dbg.declare(metadata i64* %lt, metadata !10671, metadata !986), !dbg !10672
  %26 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10673
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 1, !dbg !10675
  %27 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !10675
  %basename_utf16 = getelementptr inbounds %struct.isofile, %struct.isofile* %27, i32 0, i32 7, !dbg !10676
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf16, i32 0, i32 1, !dbg !10677
  %28 = load i64, i64* %length, align 8, !dbg !10677
  store i64 %28, i64* %l, align 8, !dbg !10678
  %29 = load i64, i64* %ffmax, align 8, !dbg !10679
  %cmp20 = icmp ugt i64 %28, %29, !dbg !10680
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10681

if.then22:                                        ; preds = %for.body19
  %30 = load i64, i64* %ffmax, align 8, !dbg !10682
  store i64 %30, i64* %l, align 8, !dbg !10683
  br label %if.end23, !dbg !10684

if.end23:                                         ; preds = %if.then22, %for.body19
  %31 = load i64, i64* %l, align 8, !dbg !10685
  %add24 = add i64 %31, 1, !dbg !10686
  %mul = mul i64 %add24, 2, !dbg !10687
  %call25 = call noalias i8* @malloc(i64 %mul) #8, !dbg !10688
  store i8* %call25, i8** %p, align 8, !dbg !10689
  %32 = load i8*, i8** %p, align 8, !dbg !10690
  %cmp26 = icmp eq i8* %32, null, !dbg !10692
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !10693

if.then28:                                        ; preds = %if.end23
  %33 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10694
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %33, i32 0, i32 0, !dbg !10696
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !10697
  store i32 -30, i32* %retval, align 4, !dbg !10698
  br label %return, !dbg !10698

if.end29:                                         ; preds = %if.end23
  %34 = load i8*, i8** %p, align 8, !dbg !10699
  %35 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10700
  %file30 = getelementptr inbounds %struct.isoent, %struct.isoent* %35, i32 0, i32 1, !dbg !10701
  %36 = load %struct.isofile*, %struct.isofile** %file30, align 8, !dbg !10701
  %basename_utf1631 = getelementptr inbounds %struct.isofile, %struct.isofile* %36, i32 0, i32 7, !dbg !10702
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1631, i32 0, i32 0, !dbg !10703
  %37 = load i8*, i8** %s, align 8, !dbg !10703
  %38 = load i64, i64* %l, align 8, !dbg !10704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %37, i64 %38, i32 1, i1 false), !dbg !10705
  %39 = load i64, i64* %l, align 8, !dbg !10706
  %40 = load i8*, i8** %p, align 8, !dbg !10707
  %arrayidx = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !10707
  store i8 0, i8* %arrayidx, align 1, !dbg !10708
  %41 = load i64, i64* %l, align 8, !dbg !10709
  %add32 = add i64 %41, 1, !dbg !10710
  %42 = load i8*, i8** %p, align 8, !dbg !10711
  %arrayidx33 = getelementptr inbounds i8, i8* %42, i64 %add32, !dbg !10711
  store i8 0, i8* %arrayidx33, align 1, !dbg !10712
  %43 = load i8*, i8** %p, align 8, !dbg !10713
  %44 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10714
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %44, i32 0, i32 14, !dbg !10715
  store i8* %43, i8** %identifier, align 8, !dbg !10716
  %45 = load i64, i64* %l, align 8, !dbg !10717
  store i64 %45, i64* %lt, align 8, !dbg !10718
  %46 = load i8*, i8** %p, align 8, !dbg !10719
  %47 = load i64, i64* %l, align 8, !dbg !10720
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10721
  store i8* %add.ptr, i8** %dot, align 8, !dbg !10722
  store i32 0, i32* %weight, align 4, !dbg !10723
  br label %while.cond, !dbg !10724

while.cond:                                       ; preds = %if.end51, %if.end29
  %48 = load i64, i64* %lt, align 8, !dbg !10725
  %cmp34 = icmp ugt i64 %48, 0, !dbg !10727
  br i1 %cmp34, label %while.body, label %while.end, !dbg !10728

while.body:                                       ; preds = %while.cond
  %49 = load i8*, i8** %p, align 8, !dbg !10729
  %arrayidx36 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !10729
  %50 = load i8, i8* %arrayidx36, align 1, !dbg !10729
  %51 = load i8*, i8** %p, align 8, !dbg !10732
  %arrayidx37 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !10732
  %52 = load i8, i8* %arrayidx37, align 1, !dbg !10732
  %call38 = call i32 @joliet_allowed_char(i8 zeroext %50, i8 zeroext %52), !dbg !10733
  %tobool = icmp ne i32 %call38, 0, !dbg !10733
  br i1 %tobool, label %if.else40, label %if.then39, !dbg !10734

if.then39:                                        ; preds = %while.body
  %53 = load i8*, i8** %p, align 8, !dbg !10735
  call void @archive_be16enc(i8* %53, i16 zeroext 95), !dbg !10736
  br label %if.end51, !dbg !10736

if.else40:                                        ; preds = %while.body
  %54 = load i8*, i8** %p, align 8, !dbg !10737
  %arrayidx41 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !10737
  %55 = load i8, i8* %arrayidx41, align 1, !dbg !10737
  %conv42 = zext i8 %55 to i32, !dbg !10737
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !10739
  br i1 %cmp43, label %land.lhs.true, label %if.end50, !dbg !10740

land.lhs.true:                                    ; preds = %if.else40
  %56 = load i8*, i8** %p, align 8, !dbg !10741
  %arrayidx45 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !10741
  %57 = load i8, i8* %arrayidx45, align 1, !dbg !10741
  %conv46 = zext i8 %57 to i32, !dbg !10741
  %cmp47 = icmp eq i32 %conv46, 46, !dbg !10743
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !10744

if.then49:                                        ; preds = %land.lhs.true
  %58 = load i8*, i8** %p, align 8, !dbg !10745
  store i8* %58, i8** %dot, align 8, !dbg !10746
  br label %if.end50, !dbg !10747

if.end50:                                         ; preds = %if.then49, %land.lhs.true, %if.else40
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then39
  %59 = load i8*, i8** %p, align 8, !dbg !10748
  %add.ptr52 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !10748
  store i8* %add.ptr52, i8** %p, align 8, !dbg !10748
  %60 = load i64, i64* %lt, align 8, !dbg !10749
  %sub = sub i64 %60, 2, !dbg !10749
  store i64 %sub, i64* %lt, align 8, !dbg !10749
  br label %while.cond, !dbg !10750

while.end:                                        ; preds = %while.cond
  %61 = load i8*, i8** %dot, align 8, !dbg !10752
  %62 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10753
  %identifier53 = getelementptr inbounds %struct.isoent, %struct.isoent* %62, i32 0, i32 14, !dbg !10754
  %63 = load i8*, i8** %identifier53, align 8, !dbg !10754
  %sub.ptr.lhs.cast = ptrtoint i8* %61 to i64, !dbg !10755
  %sub.ptr.rhs.cast = ptrtoint i8* %63 to i64, !dbg !10755
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10755
  %conv54 = trunc i64 %sub.ptr.sub to i32, !dbg !10756
  store i32 %conv54, i32* %ext_off, align 4, !dbg !10757
  %64 = load i32, i32* %ext_off, align 4, !dbg !10758
  %65 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10759
  %ext_off55 = getelementptr inbounds %struct.isoent, %struct.isoent* %65, i32 0, i32 15, !dbg !10760
  store i32 %64, i32* %ext_off55, align 8, !dbg !10761
  %66 = load i64, i64* %l, align 8, !dbg !10762
  %conv56 = trunc i64 %66 to i32, !dbg !10763
  %67 = load i32, i32* %ext_off, align 4, !dbg !10764
  %sub57 = sub nsw i32 %conv56, %67, !dbg !10765
  %68 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10766
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %68, i32 0, i32 16, !dbg !10767
  store i32 %sub57, i32* %ext_len, align 4, !dbg !10768
  %69 = load i64, i64* %l, align 8, !dbg !10769
  %conv58 = trunc i64 %69 to i32, !dbg !10770
  %70 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10771
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %70, i32 0, i32 17, !dbg !10772
  store i32 %conv58, i32* %id_len, align 8, !dbg !10773
  %71 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10774
  %file59 = getelementptr inbounds %struct.isoent, %struct.isoent* %71, i32 0, i32 1, !dbg !10776
  %72 = load %struct.isofile*, %struct.isofile** %file59, align 8, !dbg !10776
  %basename_utf1660 = getelementptr inbounds %struct.isofile, %struct.isofile* %72, i32 0, i32 7, !dbg !10777
  %length61 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename_utf1660, i32 0, i32 1, !dbg !10778
  %73 = load i64, i64* %length61, align 8, !dbg !10778
  %74 = load i64, i64* %ffmax, align 8, !dbg !10779
  %cmp62 = icmp ugt i64 %73, %74, !dbg !10780
  br i1 %cmp62, label %if.then64, label %if.else90, !dbg !10781

if.then64:                                        ; preds = %while.end
  %75 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10782
  %mbs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %75, i32 0, i32 8, !dbg !10785
  %76 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10786
  %identifier65 = getelementptr inbounds %struct.isoent, %struct.isoent* %76, i32 0, i32 14, !dbg !10787
  %77 = load i8*, i8** %identifier65, align 8, !dbg !10787
  %78 = load i64, i64* %l, align 8, !dbg !10788
  %79 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10789
  %sconv_from_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %79, i32 0, i32 10, !dbg !10790
  %80 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_from_utf16be, align 8, !dbg !10790
  %call66 = call i32 @archive_strncpy_l(%struct.archive_string* %mbs, i8* %77, i64 %78, %struct.archive_string_conv* %80), !dbg !10791
  %cmp67 = icmp ne i32 %call66, 0, !dbg !10792
  br i1 %cmp67, label %land.lhs.true69, label %if.end76, !dbg !10793

land.lhs.true69:                                  ; preds = %if.then64
  %call70 = call i32* @__errno_location() #1, !dbg !10794
  %81 = load i32, i32* %call70, align 4, !dbg !10794
  %cmp71 = icmp eq i32 %81, 12, !dbg !10795
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !10796

if.then73:                                        ; preds = %land.lhs.true69
  %82 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10798
  %archive74 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %82, i32 0, i32 0, !dbg !10800
  %call75 = call i32* @__errno_location() #1, !dbg !10801
  %83 = load i32, i32* %call75, align 4, !dbg !10801
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive74, i32 %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0)), !dbg !10802
  store i32 -30, i32* %retval, align 4, !dbg !10804
  br label %return, !dbg !10804

if.end76:                                         ; preds = %land.lhs.true69, %if.then64
  %84 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10805
  %mbs77 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %84, i32 0, i32 8, !dbg !10806
  %length78 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %mbs77, i32 0, i32 1, !dbg !10807
  %85 = load i64, i64* %length78, align 8, !dbg !10807
  %conv79 = trunc i64 %85 to i32, !dbg !10808
  %86 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10809
  %mb_len80 = getelementptr inbounds %struct.isoent, %struct.isoent* %86, i32 0, i32 18, !dbg !10810
  store i32 %conv79, i32* %mb_len80, align 4, !dbg !10811
  %87 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10812
  %mb_len81 = getelementptr inbounds %struct.isoent, %struct.isoent* %87, i32 0, i32 18, !dbg !10814
  %88 = load i32, i32* %mb_len81, align 4, !dbg !10814
  %89 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10815
  %file82 = getelementptr inbounds %struct.isoent, %struct.isoent* %89, i32 0, i32 1, !dbg !10816
  %90 = load %struct.isofile*, %struct.isofile** %file82, align 8, !dbg !10816
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %90, i32 0, i32 6, !dbg !10817
  %length83 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 1, !dbg !10818
  %91 = load i64, i64* %length83, align 8, !dbg !10818
  %conv84 = trunc i64 %91 to i32, !dbg !10819
  %cmp85 = icmp ne i32 %88, %conv84, !dbg !10820
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !10821

if.then87:                                        ; preds = %if.end76
  %92 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10822
  %mb_len88 = getelementptr inbounds %struct.isoent, %struct.isoent* %92, i32 0, i32 18, !dbg !10823
  %93 = load i32, i32* %mb_len88, align 4, !dbg !10823
  store i32 %93, i32* %weight, align 4, !dbg !10824
  br label %if.end89, !dbg !10825

if.end89:                                         ; preds = %if.then87, %if.end76
  br label %if.end96, !dbg !10826

if.else90:                                        ; preds = %while.end
  %94 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10827
  %file91 = getelementptr inbounds %struct.isoent, %struct.isoent* %94, i32 0, i32 1, !dbg !10828
  %95 = load %struct.isofile*, %struct.isofile** %file91, align 8, !dbg !10828
  %basename92 = getelementptr inbounds %struct.isofile, %struct.isofile* %95, i32 0, i32 6, !dbg !10829
  %length93 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename92, i32 0, i32 1, !dbg !10830
  %96 = load i64, i64* %length93, align 8, !dbg !10830
  %conv94 = trunc i64 %96 to i32, !dbg !10831
  %97 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10832
  %mb_len95 = getelementptr inbounds %struct.isoent, %struct.isoent* %97, i32 0, i32 18, !dbg !10833
  store i32 %conv94, i32* %mb_len95, align 4, !dbg !10834
  br label %if.end96

if.end96:                                         ; preds = %if.else90, %if.end89
  %98 = load i64, i64* %parent_len, align 8, !dbg !10835
  %cmp97 = icmp ugt i64 %98, 240, !dbg !10837
  br i1 %cmp97, label %if.then108, label %lor.lhs.false, !dbg !10838

lor.lhs.false:                                    ; preds = %if.end96
  %99 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10839
  %mb_len99 = getelementptr inbounds %struct.isoent, %struct.isoent* %99, i32 0, i32 18, !dbg !10841
  %100 = load i32, i32* %mb_len99, align 4, !dbg !10841
  %cmp100 = icmp sgt i32 %100, 240, !dbg !10842
  br i1 %cmp100, label %if.then108, label %lor.lhs.false102, !dbg !10843

lor.lhs.false102:                                 ; preds = %lor.lhs.false
  %101 = load i64, i64* %parent_len, align 8, !dbg !10844
  %102 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10845
  %mb_len103 = getelementptr inbounds %struct.isoent, %struct.isoent* %102, i32 0, i32 18, !dbg !10846
  %103 = load i32, i32* %mb_len103, align 4, !dbg !10846
  %conv104 = sext i32 %103 to i64, !dbg !10845
  %add105 = add i64 %101, %conv104, !dbg !10847
  %cmp106 = icmp ugt i64 %add105, 240, !dbg !10848
  br i1 %cmp106, label %if.then108, label %if.end115, !dbg !10849

if.then108:                                       ; preds = %lor.lhs.false102, %lor.lhs.false, %if.end96
  %104 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10850
  %archive109 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %104, i32 0, i32 0, !dbg !10852
  %105 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10853
  %file110 = getelementptr inbounds %struct.isoent, %struct.isoent* %105, i32 0, i32 1, !dbg !10854
  %106 = load %struct.isofile*, %struct.isofile** %file110, align 8, !dbg !10854
  %entry111 = getelementptr inbounds %struct.isofile, %struct.isofile* %106, i32 0, i32 4, !dbg !10855
  %107 = load %struct.archive_entry*, %struct.archive_entry** %entry111, align 8, !dbg !10855
  %call112 = call i8* @archive_entry_pathname(%struct.archive_entry* %107), !dbg !10856
  %108 = load i64, i64* %parent_len, align 8, !dbg !10857
  %conv113 = trunc i64 %108 to i32, !dbg !10858
  %109 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10859
  %mb_len114 = getelementptr inbounds %struct.isoent, %struct.isoent* %109, i32 0, i32 18, !dbg !10860
  %110 = load i32, i32* %mb_len114, align 4, !dbg !10860
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive109, i32 -1, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.76, i32 0, i32 0), i8* %call112, i32 %conv113, i32 %110), !dbg !10861
  store i32 -30, i32* %retval, align 4, !dbg !10862
  br label %return, !dbg !10862

if.end115:                                        ; preds = %lor.lhs.false102
  %111 = load i64, i64* %l, align 8, !dbg !10863
  %112 = load i64, i64* %ffmax, align 8, !dbg !10865
  %cmp116 = icmp eq i64 %111, %112, !dbg !10866
  br i1 %cmp116, label %if.then118, label %if.else120, !dbg !10867

if.then118:                                       ; preds = %if.end115
  %113 = load i32, i32* %ext_off, align 4, !dbg !10868
  %sub119 = sub nsw i32 %113, 6, !dbg !10869
  store i32 %sub119, i32* %noff, align 4, !dbg !10870
  br label %if.end135, !dbg !10871

if.else120:                                       ; preds = %if.end115
  %114 = load i64, i64* %l, align 8, !dbg !10872
  %115 = load i64, i64* %ffmax, align 8, !dbg !10874
  %sub121 = sub i64 %115, 2, !dbg !10875
  %cmp122 = icmp eq i64 %114, %sub121, !dbg !10876
  br i1 %cmp122, label %if.then124, label %if.else126, !dbg !10877

if.then124:                                       ; preds = %if.else120
  %116 = load i32, i32* %ext_off, align 4, !dbg !10878
  %sub125 = sub nsw i32 %116, 4, !dbg !10879
  store i32 %sub125, i32* %noff, align 4, !dbg !10880
  br label %if.end134, !dbg !10881

if.else126:                                       ; preds = %if.else120
  %117 = load i64, i64* %l, align 8, !dbg !10882
  %118 = load i64, i64* %ffmax, align 8, !dbg !10884
  %sub127 = sub i64 %118, 4, !dbg !10885
  %cmp128 = icmp eq i64 %117, %sub127, !dbg !10886
  br i1 %cmp128, label %if.then130, label %if.else132, !dbg !10887

if.then130:                                       ; preds = %if.else126
  %119 = load i32, i32* %ext_off, align 4, !dbg !10888
  %sub131 = sub nsw i32 %119, 2, !dbg !10889
  store i32 %sub131, i32* %noff, align 4, !dbg !10890
  br label %if.end133, !dbg !10891

if.else132:                                       ; preds = %if.else126
  %120 = load i32, i32* %ext_off, align 4, !dbg !10892
  store i32 %120, i32* %noff, align 4, !dbg !10893
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.then130
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then124
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then118
  %121 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10894
  %122 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10895
  %123 = load i32, i32* %weight, align 4, !dbg !10896
  %124 = load i32, i32* %noff, align 4, !dbg !10897
  call void @idr_register(%struct.idr* %121, %struct.isoent* %122, i32 %123, i32 %124), !dbg !10898
  br label %for.inc136, !dbg !10899

for.inc136:                                       ; preds = %if.end135
  %125 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !10900
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %125, i32 0, i32 7, !dbg !10902
  %126 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !10902
  store %struct.isoent* %126, %struct.isoent** %np, align 8, !dbg !10903
  br label %for.cond16, !dbg !10904

for.end137:                                       ; preds = %for.cond16
  %127 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10905
  call void @idr_resolve(%struct.idr* %127, void (i8*, i32)* @idr_set_num_beutf16), !dbg !10906
  store i32 0, i32* %retval, align 4, !dbg !10907
  br label %return, !dbg !10907

return:                                           ; preds = %for.end137, %if.then108, %if.then73, %if.then28, %if.then8, %if.then
  %128 = load i32, i32* %retval, align 4, !dbg !10908
  ret i32 %128, !dbg !10908
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_gen_iso9660_identifier(%struct.archive_write* %a, %struct.isoent* %isoent, %struct.idr* %idr) #0 !dbg !770 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %np = alloca %struct.isoent*, align 8
  %p = alloca i8*, align 8
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %char_map = alloca i8*, align 8
  %allow_ldots = alloca i8, align 1
  %allow_multidot = alloca i8, align 1
  %allow_period = alloca i8, align 1
  %allow_vernum = alloca i8, align 1
  %fnmax = alloca i32, align 4
  %ffmax = alloca i32, align 4
  %dnmax = alloca i32, align 4
  %dot = alloca i8*, align 8
  %xdot = alloca i8*, align 8
  %ext_off = alloca i32, align 4
  %noff = alloca i32, align 4
  %weight = alloca i32, align 4
  %nammax = alloca i32, align 4
  %extlen = alloca i32, align 4
  %xdoff = alloca i32, align 4
  %off = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !10909, metadata !986), !dbg !10910
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !10911, metadata !986), !dbg !10912
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !10913, metadata !986), !dbg !10914
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !10915, metadata !986), !dbg !10916
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !10917, metadata !986), !dbg !10918
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10919, metadata !986), !dbg !10920
  call void @llvm.dbg.declare(metadata i32* %l, metadata !10921, metadata !986), !dbg !10922
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10923, metadata !986), !dbg !10924
  call void @llvm.dbg.declare(metadata i8** %char_map, metadata !10925, metadata !986), !dbg !10926
  call void @llvm.dbg.declare(metadata i8* %allow_ldots, metadata !10927, metadata !986), !dbg !10928
  call void @llvm.dbg.declare(metadata i8* %allow_multidot, metadata !10929, metadata !986), !dbg !10930
  call void @llvm.dbg.declare(metadata i8* %allow_period, metadata !10931, metadata !986), !dbg !10932
  call void @llvm.dbg.declare(metadata i8* %allow_vernum, metadata !10933, metadata !986), !dbg !10934
  call void @llvm.dbg.declare(metadata i32* %fnmax, metadata !10935, metadata !986), !dbg !10936
  call void @llvm.dbg.declare(metadata i32* %ffmax, metadata !10937, metadata !986), !dbg !10938
  call void @llvm.dbg.declare(metadata i32* %dnmax, metadata !10939, metadata !986), !dbg !10940
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !10941
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 3, !dbg !10943
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 2, !dbg !10944
  %1 = load i32, i32* %cnt, align 8, !dbg !10944
  %cmp = icmp eq i32 %1, 0, !dbg !10945
  br i1 %cmp, label %if.then, label %if.end, !dbg !10946

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10947
  br label %return, !dbg !10947

if.end:                                           ; preds = %entry
  %2 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !10948
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %2, i32 0, i32 14, !dbg !10949
  %3 = load i8*, i8** %format_data, align 8, !dbg !10949
  %4 = bitcast i8* %3 to %struct.iso9660*, !dbg !10948
  store %struct.iso9660* %4, %struct.iso9660** %iso9660, align 8, !dbg !10950
  %5 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !10951
  %char_map1 = getelementptr inbounds %struct.idr, %struct.idr* %5, i32 0, i32 7, !dbg !10952
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %char_map1, i32 0, i32 0, !dbg !10951
  store i8* %arraydecay, i8** %char_map, align 8, !dbg !10953
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10954
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 37, !dbg !10956
  %7 = bitcast %struct.iso_option* %opt to i32*, !dbg !10957
  %bf.load = load i32, i32* %7, align 8, !dbg !10957
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !10957
  %bf.clear = and i32 %bf.lshr, 7, !dbg !10957
  %cmp2 = icmp sle i32 %bf.clear, 3, !dbg !10958
  br i1 %cmp2, label %if.then3, label %if.else16, !dbg !10959

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %allow_ldots, align 1, !dbg !10960
  store i8 0, i8* %allow_multidot, align 1, !dbg !10962
  store i8 1, i8* %allow_period, align 1, !dbg !10963
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10964
  %opt4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 37, !dbg !10965
  %9 = bitcast %struct.iso_option* %opt4 to i32*, !dbg !10966
  %bf.load5 = load i32, i32* %9, align 8, !dbg !10966
  %bf.lshr6 = lshr i32 %bf.load5, 2, !dbg !10966
  %bf.clear7 = and i32 %bf.lshr6, 1, !dbg !10966
  %conv = trunc i32 %bf.clear7 to i8, !dbg !10964
  store i8 %conv, i8* %allow_vernum, align 1, !dbg !10967
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10968
  %opt8 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 37, !dbg !10970
  %11 = bitcast %struct.iso_option* %opt8 to i32*, !dbg !10971
  %bf.load9 = load i32, i32* %11, align 8, !dbg !10971
  %bf.lshr10 = lshr i32 %bf.load9, 14, !dbg !10971
  %bf.clear11 = and i32 %bf.lshr10, 7, !dbg !10971
  %cmp12 = icmp eq i32 %bf.clear11, 1, !dbg !10972
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !10973

if.then14:                                        ; preds = %if.then3
  store i32 8, i32* %fnmax, align 4, !dbg !10974
  store i32 12, i32* %ffmax, align 4, !dbg !10976
  store i32 8, i32* %dnmax, align 4, !dbg !10977
  br label %if.end15, !dbg !10978

if.else:                                          ; preds = %if.then3
  store i32 30, i32* %fnmax, align 4, !dbg !10979
  store i32 31, i32* %ffmax, align 4, !dbg !10981
  store i32 31, i32* %dnmax, align 4, !dbg !10982
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  br label %if.end24, !dbg !10983

if.else16:                                        ; preds = %if.end
  store i8 1, i8* %allow_multidot, align 1, !dbg !10984
  store i8 1, i8* %allow_ldots, align 1, !dbg !10986
  store i8 0, i8* %allow_vernum, align 1, !dbg !10987
  store i8 0, i8* %allow_period, align 1, !dbg !10988
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !10989
  %opt17 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 37, !dbg !10991
  %13 = bitcast %struct.iso_option* %opt17 to i32*, !dbg !10992
  %bf.load18 = load i32, i32* %13, align 8, !dbg !10992
  %bf.lshr19 = lshr i32 %bf.load18, 23, !dbg !10992
  %bf.clear20 = and i32 %bf.lshr19, 3, !dbg !10992
  %tobool = icmp ne i32 %bf.clear20, 0, !dbg !10989
  br i1 %tobool, label %if.then21, label %if.else22, !dbg !10993

if.then21:                                        ; preds = %if.else16
  store i32 193, i32* %dnmax, align 4, !dbg !10994
  store i32 193, i32* %ffmax, align 4, !dbg !10995
  store i32 193, i32* %fnmax, align 4, !dbg !10996
  br label %if.end23, !dbg !10997

if.else22:                                        ; preds = %if.else16
  store i32 207, i32* %dnmax, align 4, !dbg !10998
  store i32 207, i32* %ffmax, align 4, !dbg !10999
  store i32 207, i32* %fnmax, align 4, !dbg !11000
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end15
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !11001
  %15 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11002
  %16 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11003
  %children25 = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 3, !dbg !11004
  %cnt26 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children25, i32 0, i32 2, !dbg !11005
  %17 = load i32, i32* %cnt26, align 8, !dbg !11005
  %18 = load i32, i32* %ffmax, align 4, !dbg !11006
  %call = call i32 @idr_start(%struct.archive_write* %14, %struct.idr* %15, i32 %17, i32 %18, i32 3, i32 1, %struct.archive_rb_tree_ops* @isoent_gen_iso9660_identifier.rb_ops), !dbg !11007
  store i32 %call, i32* %r, align 4, !dbg !11008
  %19 = load i32, i32* %r, align 4, !dbg !11009
  %cmp27 = icmp slt i32 %19, 0, !dbg !11011
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11012

if.then29:                                        ; preds = %if.end24
  %20 = load i32, i32* %r, align 4, !dbg !11013
  store i32 %20, i32* %retval, align 4, !dbg !11014
  br label %return, !dbg !11014

if.end30:                                         ; preds = %if.end24
  %21 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11015
  %children31 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 3, !dbg !11017
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children31, i32 0, i32 0, !dbg !11018
  %22 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !11018
  store %struct.isoent* %22, %struct.isoent** %np, align 8, !dbg !11019
  br label %for.cond, !dbg !11020

for.cond:                                         ; preds = %for.inc239, %if.end30
  %23 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11021
  %cmp32 = icmp ne %struct.isoent* %23, null, !dbg !11024
  br i1 %cmp32, label %for.body, label %for.end240, !dbg !11025

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %dot, metadata !11026, metadata !986), !dbg !11028
  call void @llvm.dbg.declare(metadata i8** %xdot, metadata !11029, metadata !986), !dbg !11030
  call void @llvm.dbg.declare(metadata i32* %ext_off, metadata !11031, metadata !986), !dbg !11032
  call void @llvm.dbg.declare(metadata i32* %noff, metadata !11033, metadata !986), !dbg !11034
  call void @llvm.dbg.declare(metadata i32* %weight, metadata !11035, metadata !986), !dbg !11036
  %24 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11037
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 1, !dbg !11038
  %25 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !11038
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %25, i32 0, i32 6, !dbg !11039
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 1, !dbg !11040
  %26 = load i64, i64* %length, align 8, !dbg !11040
  %conv34 = trunc i64 %26 to i32, !dbg !11041
  store i32 %conv34, i32* %l, align 4, !dbg !11042
  %27 = load i32, i32* %l, align 4, !dbg !11043
  %add = add nsw i32 %27, 31, !dbg !11044
  %add35 = add nsw i32 %add, 2, !dbg !11045
  %add36 = add nsw i32 %add35, 1, !dbg !11046
  %conv37 = sext i32 %add36 to i64, !dbg !11043
  %call38 = call noalias i8* @malloc(i64 %conv37) #8, !dbg !11047
  store i8* %call38, i8** %p, align 8, !dbg !11048
  %28 = load i8*, i8** %p, align 8, !dbg !11049
  %cmp39 = icmp eq i8* %28, null, !dbg !11051
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !11052

if.then41:                                        ; preds = %for.body
  %29 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !11053
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %29, i32 0, i32 0, !dbg !11055
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !11056
  store i32 -30, i32* %retval, align 4, !dbg !11057
  br label %return, !dbg !11057

if.end42:                                         ; preds = %for.body
  %30 = load i8*, i8** %p, align 8, !dbg !11058
  %31 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11059
  %file43 = getelementptr inbounds %struct.isoent, %struct.isoent* %31, i32 0, i32 1, !dbg !11060
  %32 = load %struct.isofile*, %struct.isofile** %file43, align 8, !dbg !11060
  %basename44 = getelementptr inbounds %struct.isofile, %struct.isofile* %32, i32 0, i32 6, !dbg !11061
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename44, i32 0, i32 0, !dbg !11062
  %33 = load i8*, i8** %s, align 8, !dbg !11062
  %34 = load i32, i32* %l, align 4, !dbg !11063
  %conv45 = sext i32 %34 to i64, !dbg !11063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %33, i64 %conv45, i32 1, i1 false), !dbg !11064
  %35 = load i32, i32* %l, align 4, !dbg !11065
  %idxprom = sext i32 %35 to i64, !dbg !11066
  %36 = load i8*, i8** %p, align 8, !dbg !11066
  %arrayidx = getelementptr inbounds i8, i8* %36, i64 %idxprom, !dbg !11066
  store i8 0, i8* %arrayidx, align 1, !dbg !11067
  %37 = load i8*, i8** %p, align 8, !dbg !11068
  %38 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11069
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %38, i32 0, i32 14, !dbg !11070
  store i8* %37, i8** %identifier, align 8, !dbg !11071
  store i8* null, i8** %xdot, align 8, !dbg !11072
  store i8* null, i8** %dot, align 8, !dbg !11073
  %39 = load i8, i8* %allow_ldots, align 1, !dbg !11074
  %tobool46 = icmp ne i8 %39, 0, !dbg !11074
  br i1 %tobool46, label %if.end53, label %if.then47, !dbg !11076

if.then47:                                        ; preds = %if.end42
  %40 = load i8*, i8** %p, align 8, !dbg !11077
  %41 = load i8, i8* %40, align 1, !dbg !11080
  %conv48 = sext i8 %41 to i32, !dbg !11080
  %cmp49 = icmp eq i32 %conv48, 46, !dbg !11081
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !11082

if.then51:                                        ; preds = %if.then47
  %42 = load i8*, i8** %p, align 8, !dbg !11083
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1, !dbg !11083
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !11083
  store i8 95, i8* %42, align 1, !dbg !11084
  br label %if.end52, !dbg !11085

if.end52:                                         ; preds = %if.then51, %if.then47
  br label %if.end53, !dbg !11086

if.end53:                                         ; preds = %if.end52, %if.end42
  br label %for.cond54, !dbg !11087

for.cond54:                                       ; preds = %for.inc, %if.end53
  %43 = load i8*, i8** %p, align 8, !dbg !11088
  %44 = load i8, i8* %43, align 1, !dbg !11092
  %tobool55 = icmp ne i8 %44, 0, !dbg !11093
  br i1 %tobool55, label %for.body56, label %for.end, !dbg !11093

for.body56:                                       ; preds = %for.cond54
  %45 = load i8*, i8** %p, align 8, !dbg !11094
  %46 = load i8, i8* %45, align 1, !dbg !11097
  %conv57 = sext i8 %46 to i32, !dbg !11097
  %and = and i32 %conv57, 128, !dbg !11098
  %tobool58 = icmp ne i32 %and, 0, !dbg !11098
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !11099

if.then59:                                        ; preds = %for.body56
  %47 = load i8*, i8** %p, align 8, !dbg !11100
  store i8 95, i8* %47, align 1, !dbg !11102
  br label %for.inc, !dbg !11103

if.end60:                                         ; preds = %for.body56
  %48 = load i8*, i8** %p, align 8, !dbg !11104
  %49 = load i8, i8* %48, align 1, !dbg !11106
  %idxprom61 = zext i8 %49 to i64, !dbg !11107
  %50 = load i8*, i8** %char_map, align 8, !dbg !11107
  %arrayidx62 = getelementptr inbounds i8, i8* %50, i64 %idxprom61, !dbg !11107
  %51 = load i8, i8* %arrayidx62, align 1, !dbg !11107
  %tobool63 = icmp ne i8 %51, 0, !dbg !11107
  br i1 %tobool63, label %if.then64, label %if.end70, !dbg !11108

if.then64:                                        ; preds = %if.end60
  %52 = load i8*, i8** %p, align 8, !dbg !11109
  %53 = load i8, i8* %52, align 1, !dbg !11112
  %conv65 = sext i8 %53 to i32, !dbg !11112
  %cmp66 = icmp eq i32 %conv65, 46, !dbg !11113
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !11114

if.then68:                                        ; preds = %if.then64
  %54 = load i8*, i8** %dot, align 8, !dbg !11115
  store i8* %54, i8** %xdot, align 8, !dbg !11117
  %55 = load i8*, i8** %p, align 8, !dbg !11118
  store i8* %55, i8** %dot, align 8, !dbg !11119
  br label %if.end69, !dbg !11120

if.end69:                                         ; preds = %if.then68, %if.then64
  br label %for.inc, !dbg !11121

if.end70:                                         ; preds = %if.end60
  %56 = load i8*, i8** %p, align 8, !dbg !11122
  %57 = load i8, i8* %56, align 1, !dbg !11124
  %conv71 = sext i8 %57 to i32, !dbg !11124
  %cmp72 = icmp sge i32 %conv71, 97, !dbg !11125
  br i1 %cmp72, label %land.lhs.true, label %if.end80, !dbg !11126

land.lhs.true:                                    ; preds = %if.end70
  %58 = load i8*, i8** %p, align 8, !dbg !11127
  %59 = load i8, i8* %58, align 1, !dbg !11129
  %conv74 = sext i8 %59 to i32, !dbg !11129
  %cmp75 = icmp sle i32 %conv74, 122, !dbg !11130
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !11131

if.then77:                                        ; preds = %land.lhs.true
  %60 = load i8*, i8** %p, align 8, !dbg !11132
  %61 = load i8, i8* %60, align 1, !dbg !11134
  %conv78 = sext i8 %61 to i32, !dbg !11134
  %sub = sub nsw i32 %conv78, 32, !dbg !11134
  %conv79 = trunc i32 %sub to i8, !dbg !11134
  store i8 %conv79, i8* %60, align 1, !dbg !11134
  br label %for.inc, !dbg !11135

if.end80:                                         ; preds = %land.lhs.true, %if.end70
  %62 = load i8*, i8** %p, align 8, !dbg !11136
  %63 = load i8, i8* %62, align 1, !dbg !11138
  %conv81 = sext i8 %63 to i32, !dbg !11138
  %cmp82 = icmp eq i32 %conv81, 46, !dbg !11139
  br i1 %cmp82, label %if.then84, label %if.end88, !dbg !11140

if.then84:                                        ; preds = %if.end80
  %64 = load i8*, i8** %dot, align 8, !dbg !11141
  store i8* %64, i8** %xdot, align 8, !dbg !11143
  %65 = load i8*, i8** %p, align 8, !dbg !11144
  store i8* %65, i8** %dot, align 8, !dbg !11145
  %66 = load i8, i8* %allow_multidot, align 1, !dbg !11146
  %tobool85 = icmp ne i8 %66, 0, !dbg !11146
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !11148

if.then86:                                        ; preds = %if.then84
  br label %for.inc, !dbg !11149

if.end87:                                         ; preds = %if.then84
  br label %if.end88, !dbg !11150

if.end88:                                         ; preds = %if.end87, %if.end80
  %67 = load i8*, i8** %p, align 8, !dbg !11151
  store i8 95, i8* %67, align 1, !dbg !11152
  br label %for.inc, !dbg !11153

for.inc:                                          ; preds = %if.end88, %if.then86, %if.then77, %if.end69, %if.then59
  %68 = load i8*, i8** %p, align 8, !dbg !11154
  %incdec.ptr89 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !11154
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !11154
  br label %for.cond54, !dbg !11156

for.end:                                          ; preds = %for.cond54
  %69 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11157
  %identifier90 = getelementptr inbounds %struct.isoent, %struct.isoent* %69, i32 0, i32 14, !dbg !11158
  %70 = load i8*, i8** %identifier90, align 8, !dbg !11158
  store i8* %70, i8** %p, align 8, !dbg !11159
  store i32 -1, i32* %weight, align 4, !dbg !11160
  %71 = load i8*, i8** %dot, align 8, !dbg !11161
  %cmp91 = icmp eq i8* %71, null, !dbg !11163
  br i1 %cmp91, label %if.then93, label %if.else106, !dbg !11164

if.then93:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %nammax, metadata !11165, metadata !986), !dbg !11167
  %72 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11168
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %72, i32 0, i32 22, !dbg !11170
  %bf.load94 = load i8, i8* %dir, align 8, !dbg !11170
  %bf.shl = shl i8 %bf.load94, 6, !dbg !11170
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !11170
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !11170
  %tobool95 = icmp ne i32 %bf.cast, 0, !dbg !11168
  br i1 %tobool95, label %if.then96, label %if.else97, !dbg !11171

if.then96:                                        ; preds = %if.then93
  %73 = load i32, i32* %dnmax, align 4, !dbg !11172
  store i32 %73, i32* %nammax, align 4, !dbg !11173
  br label %if.end98, !dbg !11174

if.else97:                                        ; preds = %if.then93
  %74 = load i32, i32* %fnmax, align 4, !dbg !11175
  store i32 %74, i32* %nammax, align 4, !dbg !11176
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.then96
  %75 = load i32, i32* %l, align 4, !dbg !11177
  %76 = load i32, i32* %nammax, align 4, !dbg !11179
  %cmp99 = icmp sgt i32 %75, %76, !dbg !11180
  br i1 %cmp99, label %if.then101, label %if.else104, !dbg !11181

if.then101:                                       ; preds = %if.end98
  %77 = load i32, i32* %nammax, align 4, !dbg !11182
  %idxprom102 = sext i32 %77 to i64, !dbg !11184
  %78 = load i8*, i8** %p, align 8, !dbg !11184
  %arrayidx103 = getelementptr inbounds i8, i8* %78, i64 %idxprom102, !dbg !11184
  store i8 0, i8* %arrayidx103, align 1, !dbg !11185
  %79 = load i32, i32* %nammax, align 4, !dbg !11186
  store i32 %79, i32* %weight, align 4, !dbg !11187
  %80 = load i32, i32* %nammax, align 4, !dbg !11188
  store i32 %80, i32* %ext_off, align 4, !dbg !11189
  br label %if.end105, !dbg !11190

if.else104:                                       ; preds = %if.end98
  %81 = load i32, i32* %l, align 4, !dbg !11191
  store i32 %81, i32* %ext_off, align 4, !dbg !11192
  br label %if.end105

if.end105:                                        ; preds = %if.else104, %if.then101
  br label %if.end197, !dbg !11193

if.else106:                                       ; preds = %for.end
  %82 = load i8*, i8** %dot, align 8, !dbg !11194
  store i8 46, i8* %82, align 1, !dbg !11196
  %83 = load i8*, i8** %dot, align 8, !dbg !11197
  %84 = load i8*, i8** %p, align 8, !dbg !11198
  %sub.ptr.lhs.cast = ptrtoint i8* %83 to i64, !dbg !11199
  %sub.ptr.rhs.cast = ptrtoint i8* %84 to i64, !dbg !11199
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11199
  %conv107 = trunc i64 %sub.ptr.sub to i32, !dbg !11200
  store i32 %conv107, i32* %ext_off, align 4, !dbg !11201
  %85 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !11202
  %opt108 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %85, i32 0, i32 37, !dbg !11204
  %86 = bitcast %struct.iso_option* %opt108 to i32*, !dbg !11205
  %bf.load109 = load i32, i32* %86, align 8, !dbg !11205
  %bf.lshr110 = lshr i32 %bf.load109, 14, !dbg !11205
  %bf.clear111 = and i32 %bf.lshr110, 7, !dbg !11205
  %cmp112 = icmp eq i32 %bf.clear111, 1, !dbg !11206
  br i1 %cmp112, label %if.then114, label %if.else138, !dbg !11207

if.then114:                                       ; preds = %if.else106
  %87 = load i8*, i8** %dot, align 8, !dbg !11208
  %88 = load i8*, i8** %p, align 8, !dbg !11211
  %sub.ptr.lhs.cast115 = ptrtoint i8* %87 to i64, !dbg !11212
  %sub.ptr.rhs.cast116 = ptrtoint i8* %88 to i64, !dbg !11212
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116, !dbg !11212
  %cmp118 = icmp sle i64 %sub.ptr.sub117, 8, !dbg !11213
  br i1 %cmp118, label %if.then120, label %if.else127, !dbg !11214

if.then120:                                       ; preds = %if.then114
  %89 = load i8*, i8** %dot, align 8, !dbg !11215
  %call121 = call i64 @strlen(i8* %89) #9, !dbg !11218
  %cmp122 = icmp ugt i64 %call121, 4, !dbg !11219
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !11220

if.then124:                                       ; preds = %if.then120
  %90 = load i8*, i8** %dot, align 8, !dbg !11221
  %arrayidx125 = getelementptr inbounds i8, i8* %90, i64 4, !dbg !11221
  store i8 0, i8* %arrayidx125, align 1, !dbg !11223
  store i32 0, i32* %weight, align 4, !dbg !11224
  br label %if.end126, !dbg !11225

if.end126:                                        ; preds = %if.then124, %if.then120
  br label %if.end137, !dbg !11226

if.else127:                                       ; preds = %if.then114
  %91 = load i8*, i8** %dot, align 8, !dbg !11227
  %arrayidx128 = getelementptr inbounds i8, i8* %91, i64 0, !dbg !11227
  %92 = load i8, i8* %arrayidx128, align 1, !dbg !11227
  %93 = load i8*, i8** %p, align 8, !dbg !11229
  %arrayidx129 = getelementptr inbounds i8, i8* %93, i64 8, !dbg !11229
  store i8 %92, i8* %arrayidx129, align 1, !dbg !11230
  %94 = load i8*, i8** %dot, align 8, !dbg !11231
  %arrayidx130 = getelementptr inbounds i8, i8* %94, i64 1, !dbg !11231
  %95 = load i8, i8* %arrayidx130, align 1, !dbg !11231
  %96 = load i8*, i8** %p, align 8, !dbg !11232
  %arrayidx131 = getelementptr inbounds i8, i8* %96, i64 9, !dbg !11232
  store i8 %95, i8* %arrayidx131, align 1, !dbg !11233
  %97 = load i8*, i8** %dot, align 8, !dbg !11234
  %arrayidx132 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !11234
  %98 = load i8, i8* %arrayidx132, align 1, !dbg !11234
  %99 = load i8*, i8** %p, align 8, !dbg !11235
  %arrayidx133 = getelementptr inbounds i8, i8* %99, i64 10, !dbg !11235
  store i8 %98, i8* %arrayidx133, align 1, !dbg !11236
  %100 = load i8*, i8** %dot, align 8, !dbg !11237
  %arrayidx134 = getelementptr inbounds i8, i8* %100, i64 3, !dbg !11237
  %101 = load i8, i8* %arrayidx134, align 1, !dbg !11237
  %102 = load i8*, i8** %p, align 8, !dbg !11238
  %arrayidx135 = getelementptr inbounds i8, i8* %102, i64 11, !dbg !11238
  store i8 %101, i8* %arrayidx135, align 1, !dbg !11239
  %103 = load i8*, i8** %p, align 8, !dbg !11240
  %arrayidx136 = getelementptr inbounds i8, i8* %103, i64 12, !dbg !11240
  store i8 0, i8* %arrayidx136, align 1, !dbg !11241
  store i32 8, i32* %weight, align 4, !dbg !11242
  store i32 8, i32* %ext_off, align 4, !dbg !11243
  br label %if.end137

if.end137:                                        ; preds = %if.else127, %if.end126
  br label %if.end196, !dbg !11244

if.else138:                                       ; preds = %if.else106
  %104 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11245
  %dir139 = getelementptr inbounds %struct.isoent, %struct.isoent* %104, i32 0, i32 22, !dbg !11248
  %bf.load140 = load i8, i8* %dir139, align 8, !dbg !11248
  %bf.shl141 = shl i8 %bf.load140, 6, !dbg !11248
  %bf.ashr142 = ashr i8 %bf.shl141, 7, !dbg !11248
  %bf.cast143 = sext i8 %bf.ashr142 to i32, !dbg !11248
  %tobool144 = icmp ne i32 %bf.cast143, 0, !dbg !11245
  br i1 %tobool144, label %if.then145, label %if.else156, !dbg !11245

if.then145:                                       ; preds = %if.else138
  %105 = load i32, i32* %l, align 4, !dbg !11249
  %106 = load i32, i32* %dnmax, align 4, !dbg !11252
  %cmp146 = icmp sgt i32 %105, %106, !dbg !11253
  br i1 %cmp146, label %if.then148, label %if.end155, !dbg !11254

if.then148:                                       ; preds = %if.then145
  %107 = load i32, i32* %dnmax, align 4, !dbg !11255
  %idxprom149 = sext i32 %107 to i64, !dbg !11257
  %108 = load i8*, i8** %p, align 8, !dbg !11257
  %arrayidx150 = getelementptr inbounds i8, i8* %108, i64 %idxprom149, !dbg !11257
  store i8 0, i8* %arrayidx150, align 1, !dbg !11258
  %109 = load i32, i32* %dnmax, align 4, !dbg !11259
  store i32 %109, i32* %weight, align 4, !dbg !11260
  %110 = load i32, i32* %ext_off, align 4, !dbg !11261
  %111 = load i32, i32* %dnmax, align 4, !dbg !11263
  %cmp151 = icmp sgt i32 %110, %111, !dbg !11264
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !11265

if.then153:                                       ; preds = %if.then148
  %112 = load i32, i32* %dnmax, align 4, !dbg !11266
  store i32 %112, i32* %ext_off, align 4, !dbg !11267
  br label %if.end154, !dbg !11268

if.end154:                                        ; preds = %if.then153, %if.then148
  br label %if.end155, !dbg !11269

if.end155:                                        ; preds = %if.end154, %if.then145
  br label %if.end195, !dbg !11270

if.else156:                                       ; preds = %if.else138
  %113 = load i32, i32* %l, align 4, !dbg !11271
  %114 = load i32, i32* %ffmax, align 4, !dbg !11274
  %cmp157 = icmp sgt i32 %113, %114, !dbg !11275
  br i1 %cmp157, label %if.then159, label %if.end194, !dbg !11271

if.then159:                                       ; preds = %if.else156
  call void @llvm.dbg.declare(metadata i32* %extlen, metadata !11276, metadata !986), !dbg !11278
  %115 = load i8*, i8** %dot, align 8, !dbg !11279
  %call160 = call i64 @strlen(i8* %115) #9, !dbg !11280
  %conv161 = trunc i64 %call160 to i32, !dbg !11281
  store i32 %conv161, i32* %extlen, align 4, !dbg !11278
  call void @llvm.dbg.declare(metadata i32* %xdoff, metadata !11282, metadata !986), !dbg !11283
  %116 = load i8*, i8** %xdot, align 8, !dbg !11284
  %cmp162 = icmp ne i8* %116, null, !dbg !11286
  br i1 %cmp162, label %if.then164, label %if.else169, !dbg !11287

if.then164:                                       ; preds = %if.then159
  %117 = load i8*, i8** %xdot, align 8, !dbg !11288
  %118 = load i8*, i8** %p, align 8, !dbg !11289
  %sub.ptr.lhs.cast165 = ptrtoint i8* %117 to i64, !dbg !11290
  %sub.ptr.rhs.cast166 = ptrtoint i8* %118 to i64, !dbg !11290
  %sub.ptr.sub167 = sub i64 %sub.ptr.lhs.cast165, %sub.ptr.rhs.cast166, !dbg !11290
  %conv168 = trunc i64 %sub.ptr.sub167 to i32, !dbg !11291
  store i32 %conv168, i32* %xdoff, align 4, !dbg !11292
  br label %if.end170, !dbg !11293

if.else169:                                       ; preds = %if.then159
  store i32 0, i32* %xdoff, align 4, !dbg !11294
  br label %if.end170

if.end170:                                        ; preds = %if.else169, %if.then164
  %119 = load i32, i32* %extlen, align 4, !dbg !11295
  %cmp171 = icmp sgt i32 %119, 1, !dbg !11297
  br i1 %cmp171, label %land.lhs.true173, label %if.else190, !dbg !11298

land.lhs.true173:                                 ; preds = %if.end170
  %120 = load i32, i32* %xdoff, align 4, !dbg !11299
  %121 = load i32, i32* %fnmax, align 4, !dbg !11301
  %sub174 = sub nsw i32 %121, 1, !dbg !11302
  %cmp175 = icmp slt i32 %120, %sub174, !dbg !11303
  br i1 %cmp175, label %if.then177, label %if.else190, !dbg !11304

if.then177:                                       ; preds = %land.lhs.true173
  call void @llvm.dbg.declare(metadata i32* %off, metadata !11305, metadata !986), !dbg !11307
  %122 = load i32, i32* %extlen, align 4, !dbg !11308
  %123 = load i32, i32* %ffmax, align 4, !dbg !11310
  %cmp178 = icmp sgt i32 %122, %123, !dbg !11311
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !11312

if.then180:                                       ; preds = %if.then177
  %124 = load i32, i32* %ffmax, align 4, !dbg !11313
  store i32 %124, i32* %extlen, align 4, !dbg !11314
  br label %if.end181, !dbg !11315

if.end181:                                        ; preds = %if.then180, %if.then177
  %125 = load i32, i32* %ffmax, align 4, !dbg !11316
  %126 = load i32, i32* %extlen, align 4, !dbg !11317
  %sub182 = sub nsw i32 %125, %126, !dbg !11318
  store i32 %sub182, i32* %off, align 4, !dbg !11319
  %127 = load i32, i32* %off, align 4, !dbg !11320
  %cmp183 = icmp eq i32 %127, 0, !dbg !11322
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !11323

if.then185:                                       ; preds = %if.end181
  %128 = load i32, i32* %off, align 4, !dbg !11324
  %inc = add nsw i32 %128, 1, !dbg !11324
  store i32 %inc, i32* %off, align 4, !dbg !11324
  %129 = load i32, i32* %extlen, align 4, !dbg !11326
  %dec = add nsw i32 %129, -1, !dbg !11326
  store i32 %dec, i32* %extlen, align 4, !dbg !11326
  br label %if.end186, !dbg !11327

if.end186:                                        ; preds = %if.then185, %if.end181
  %130 = load i8*, i8** %p, align 8, !dbg !11328
  %131 = load i32, i32* %off, align 4, !dbg !11329
  %idx.ext = sext i32 %131 to i64, !dbg !11330
  %add.ptr = getelementptr inbounds i8, i8* %130, i64 %idx.ext, !dbg !11330
  %132 = load i8*, i8** %dot, align 8, !dbg !11331
  %133 = load i32, i32* %extlen, align 4, !dbg !11332
  %conv187 = sext i32 %133 to i64, !dbg !11332
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr, i8* %132, i64 %conv187, i32 1, i1 false), !dbg !11333
  %134 = load i32, i32* %ffmax, align 4, !dbg !11334
  %idxprom188 = sext i32 %134 to i64, !dbg !11335
  %135 = load i8*, i8** %p, align 8, !dbg !11335
  %arrayidx189 = getelementptr inbounds i8, i8* %135, i64 %idxprom188, !dbg !11335
  store i8 0, i8* %arrayidx189, align 1, !dbg !11336
  %136 = load i32, i32* %off, align 4, !dbg !11337
  store i32 %136, i32* %ext_off, align 4, !dbg !11338
  %137 = load i32, i32* %off, align 4, !dbg !11339
  store i32 %137, i32* %weight, align 4, !dbg !11340
  br label %if.end193, !dbg !11341

if.else190:                                       ; preds = %land.lhs.true173, %if.end170
  %138 = load i32, i32* %fnmax, align 4, !dbg !11342
  %idxprom191 = sext i32 %138 to i64, !dbg !11344
  %139 = load i8*, i8** %p, align 8, !dbg !11344
  %arrayidx192 = getelementptr inbounds i8, i8* %139, i64 %idxprom191, !dbg !11344
  store i8 0, i8* %arrayidx192, align 1, !dbg !11345
  %140 = load i32, i32* %fnmax, align 4, !dbg !11346
  store i32 %140, i32* %ext_off, align 4, !dbg !11347
  %141 = load i32, i32* %fnmax, align 4, !dbg !11348
  store i32 %141, i32* %weight, align 4, !dbg !11349
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.end186
  br label %if.end194, !dbg !11350

if.end194:                                        ; preds = %if.end193, %if.else156
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.end155
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.end137
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.end105
  %142 = load i32, i32* %ext_off, align 4, !dbg !11351
  %143 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11352
  %ext_off198 = getelementptr inbounds %struct.isoent, %struct.isoent* %143, i32 0, i32 15, !dbg !11353
  store i32 %142, i32* %ext_off198, align 8, !dbg !11354
  %144 = load i32, i32* %ext_off, align 4, !dbg !11355
  %idxprom199 = sext i32 %144 to i64, !dbg !11356
  %145 = load i8*, i8** %p, align 8, !dbg !11356
  %arrayidx200 = getelementptr inbounds i8, i8* %145, i64 %idxprom199, !dbg !11356
  %call201 = call i64 @strlen(i8* %arrayidx200) #9, !dbg !11357
  %conv202 = trunc i64 %call201 to i32, !dbg !11358
  %146 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11359
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %146, i32 0, i32 16, !dbg !11360
  store i32 %conv202, i32* %ext_len, align 4, !dbg !11361
  %147 = load i32, i32* %ext_off, align 4, !dbg !11362
  %148 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11363
  %ext_len203 = getelementptr inbounds %struct.isoent, %struct.isoent* %148, i32 0, i32 16, !dbg !11364
  %149 = load i32, i32* %ext_len203, align 4, !dbg !11364
  %add204 = add nsw i32 %147, %149, !dbg !11365
  store i32 %add204, i32* %l, align 4, !dbg !11366
  %150 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11367
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %150, i32 0, i32 17, !dbg !11368
  store i32 %add204, i32* %id_len, align 8, !dbg !11369
  %151 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !11370
  %opt205 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %151, i32 0, i32 37, !dbg !11372
  %152 = bitcast %struct.iso_option* %opt205 to i32*, !dbg !11373
  %bf.load206 = load i32, i32* %152, align 8, !dbg !11373
  %bf.lshr207 = lshr i32 %bf.load206, 14, !dbg !11373
  %bf.clear208 = and i32 %bf.lshr207, 7, !dbg !11373
  %cmp209 = icmp eq i32 %bf.clear208, 1, !dbg !11374
  br i1 %cmp209, label %if.then211, label %if.else217, !dbg !11375

if.then211:                                       ; preds = %if.end197
  %153 = load i32, i32* %ext_off, align 4, !dbg !11376
  %cmp212 = icmp sge i32 %153, 5, !dbg !11379
  br i1 %cmp212, label %if.then214, label %if.else215, !dbg !11380

if.then214:                                       ; preds = %if.then211
  store i32 5, i32* %noff, align 4, !dbg !11381
  br label %if.end216, !dbg !11382

if.else215:                                       ; preds = %if.then211
  %154 = load i32, i32* %ext_off, align 4, !dbg !11383
  store i32 %154, i32* %noff, align 4, !dbg !11384
  br label %if.end216

if.end216:                                        ; preds = %if.else215, %if.then214
  br label %if.end238, !dbg !11385

if.else217:                                       ; preds = %if.end197
  %155 = load i32, i32* %l, align 4, !dbg !11386
  %156 = load i32, i32* %ffmax, align 4, !dbg !11389
  %cmp218 = icmp eq i32 %155, %156, !dbg !11390
  br i1 %cmp218, label %if.then220, label %if.else222, !dbg !11391

if.then220:                                       ; preds = %if.else217
  %157 = load i32, i32* %ext_off, align 4, !dbg !11392
  %sub221 = sub nsw i32 %157, 3, !dbg !11393
  store i32 %sub221, i32* %noff, align 4, !dbg !11394
  br label %if.end237, !dbg !11395

if.else222:                                       ; preds = %if.else217
  %158 = load i32, i32* %l, align 4, !dbg !11396
  %159 = load i32, i32* %ffmax, align 4, !dbg !11398
  %sub223 = sub nsw i32 %159, 1, !dbg !11399
  %cmp224 = icmp eq i32 %158, %sub223, !dbg !11400
  br i1 %cmp224, label %if.then226, label %if.else228, !dbg !11401

if.then226:                                       ; preds = %if.else222
  %160 = load i32, i32* %ext_off, align 4, !dbg !11402
  %sub227 = sub nsw i32 %160, 2, !dbg !11403
  store i32 %sub227, i32* %noff, align 4, !dbg !11404
  br label %if.end236, !dbg !11405

if.else228:                                       ; preds = %if.else222
  %161 = load i32, i32* %l, align 4, !dbg !11406
  %162 = load i32, i32* %ffmax, align 4, !dbg !11408
  %sub229 = sub nsw i32 %162, 2, !dbg !11409
  %cmp230 = icmp eq i32 %161, %sub229, !dbg !11410
  br i1 %cmp230, label %if.then232, label %if.else234, !dbg !11411

if.then232:                                       ; preds = %if.else228
  %163 = load i32, i32* %ext_off, align 4, !dbg !11412
  %sub233 = sub nsw i32 %163, 1, !dbg !11413
  store i32 %sub233, i32* %noff, align 4, !dbg !11414
  br label %if.end235, !dbg !11415

if.else234:                                       ; preds = %if.else228
  %164 = load i32, i32* %ext_off, align 4, !dbg !11416
  store i32 %164, i32* %noff, align 4, !dbg !11417
  br label %if.end235

if.end235:                                        ; preds = %if.else234, %if.then232
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.then226
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then220
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.end216
  %165 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11418
  %166 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11419
  %167 = load i32, i32* %weight, align 4, !dbg !11420
  %168 = load i32, i32* %noff, align 4, !dbg !11421
  call void @idr_register(%struct.idr* %165, %struct.isoent* %166, i32 %167, i32 %168), !dbg !11422
  br label %for.inc239, !dbg !11423

for.inc239:                                       ; preds = %if.end238
  %169 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11424
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %169, i32 0, i32 7, !dbg !11426
  %170 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !11426
  store %struct.isoent* %170, %struct.isoent** %np, align 8, !dbg !11427
  br label %for.cond, !dbg !11428

for.end240:                                       ; preds = %for.cond
  %171 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11429
  call void @idr_resolve(%struct.idr* %171, void (i8*, i32)* @idr_set_num), !dbg !11430
  %172 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11431
  %children241 = getelementptr inbounds %struct.isoent, %struct.isoent* %172, i32 0, i32 3, !dbg !11433
  %first242 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children241, i32 0, i32 0, !dbg !11434
  %173 = load %struct.isoent*, %struct.isoent** %first242, align 8, !dbg !11434
  store %struct.isoent* %173, %struct.isoent** %np, align 8, !dbg !11435
  br label %for.cond243, !dbg !11436

for.cond243:                                      ; preds = %for.inc301, %for.end240
  %174 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11437
  %cmp244 = icmp ne %struct.isoent* %174, null, !dbg !11440
  br i1 %cmp244, label %for.body246, label %for.end303, !dbg !11441

for.body246:                                      ; preds = %for.cond243
  %175 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11442
  %dir247 = getelementptr inbounds %struct.isoent, %struct.isoent* %175, i32 0, i32 22, !dbg !11445
  %bf.load248 = load i8, i8* %dir247, align 8, !dbg !11445
  %bf.shl249 = shl i8 %bf.load248, 6, !dbg !11445
  %bf.ashr250 = ashr i8 %bf.shl249, 7, !dbg !11445
  %bf.cast251 = sext i8 %bf.ashr250 to i32, !dbg !11445
  %tobool252 = icmp ne i32 %bf.cast251, 0, !dbg !11442
  br i1 %tobool252, label %if.else294, label %land.lhs.true253, !dbg !11446

land.lhs.true253:                                 ; preds = %for.body246
  %176 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11447
  %rr_child = getelementptr inbounds %struct.isoent, %struct.isoent* %176, i32 0, i32 20, !dbg !11449
  %177 = load %struct.isoent*, %struct.isoent** %rr_child, align 8, !dbg !11449
  %cmp254 = icmp eq %struct.isoent* %177, null, !dbg !11450
  br i1 %cmp254, label %if.then256, label %if.else294, !dbg !11451

if.then256:                                       ; preds = %land.lhs.true253
  %178 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11452
  %identifier257 = getelementptr inbounds %struct.isoent, %struct.isoent* %178, i32 0, i32 14, !dbg !11454
  %179 = load i8*, i8** %identifier257, align 8, !dbg !11454
  %180 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11455
  %ext_off258 = getelementptr inbounds %struct.isoent, %struct.isoent* %180, i32 0, i32 15, !dbg !11456
  %181 = load i32, i32* %ext_off258, align 8, !dbg !11456
  %idx.ext259 = sext i32 %181 to i64, !dbg !11457
  %add.ptr260 = getelementptr inbounds i8, i8* %179, i64 %idx.ext259, !dbg !11457
  %182 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11458
  %ext_len261 = getelementptr inbounds %struct.isoent, %struct.isoent* %182, i32 0, i32 16, !dbg !11459
  %183 = load i32, i32* %ext_len261, align 4, !dbg !11459
  %idx.ext262 = sext i32 %183 to i64, !dbg !11460
  %add.ptr263 = getelementptr inbounds i8, i8* %add.ptr260, i64 %idx.ext262, !dbg !11460
  store i8* %add.ptr263, i8** %p, align 8, !dbg !11461
  %184 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11462
  %ext_len264 = getelementptr inbounds %struct.isoent, %struct.isoent* %184, i32 0, i32 16, !dbg !11464
  %185 = load i32, i32* %ext_len264, align 4, !dbg !11464
  %cmp265 = icmp eq i32 %185, 0, !dbg !11465
  br i1 %cmp265, label %land.lhs.true267, label %if.end273, !dbg !11466

land.lhs.true267:                                 ; preds = %if.then256
  %186 = load i8, i8* %allow_period, align 1, !dbg !11467
  %conv268 = sext i8 %186 to i32, !dbg !11467
  %tobool269 = icmp ne i32 %conv268, 0, !dbg !11467
  br i1 %tobool269, label %if.then270, label %if.end273, !dbg !11469

if.then270:                                       ; preds = %land.lhs.true267
  %187 = load i8*, i8** %p, align 8, !dbg !11470
  %incdec.ptr271 = getelementptr inbounds i8, i8* %187, i32 1, !dbg !11470
  store i8* %incdec.ptr271, i8** %p, align 8, !dbg !11470
  store i8 46, i8* %187, align 1, !dbg !11472
  %188 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11473
  %ext_len272 = getelementptr inbounds %struct.isoent, %struct.isoent* %188, i32 0, i32 16, !dbg !11474
  store i32 1, i32* %ext_len272, align 4, !dbg !11475
  br label %if.end273, !dbg !11476

if.end273:                                        ; preds = %if.then270, %land.lhs.true267, %if.then256
  %189 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11477
  %ext_len274 = getelementptr inbounds %struct.isoent, %struct.isoent* %189, i32 0, i32 16, !dbg !11479
  %190 = load i32, i32* %ext_len274, align 4, !dbg !11479
  %cmp275 = icmp eq i32 %190, 1, !dbg !11480
  br i1 %cmp275, label %land.lhs.true277, label %if.end282, !dbg !11481

land.lhs.true277:                                 ; preds = %if.end273
  %191 = load i8, i8* %allow_period, align 1, !dbg !11482
  %tobool278 = icmp ne i8 %191, 0, !dbg !11482
  br i1 %tobool278, label %if.end282, label %if.then279, !dbg !11484

if.then279:                                       ; preds = %land.lhs.true277
  %192 = load i8*, i8** %p, align 8, !dbg !11485
  %incdec.ptr280 = getelementptr inbounds i8, i8* %192, i32 -1, !dbg !11485
  store i8* %incdec.ptr280, i8** %p, align 8, !dbg !11485
  store i8 0, i8* %incdec.ptr280, align 1, !dbg !11487
  %193 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11488
  %ext_len281 = getelementptr inbounds %struct.isoent, %struct.isoent* %193, i32 0, i32 16, !dbg !11489
  store i32 0, i32* %ext_len281, align 4, !dbg !11490
  br label %if.end282, !dbg !11491

if.end282:                                        ; preds = %if.then279, %land.lhs.true277, %if.end273
  %194 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11492
  %ext_off283 = getelementptr inbounds %struct.isoent, %struct.isoent* %194, i32 0, i32 15, !dbg !11493
  %195 = load i32, i32* %ext_off283, align 8, !dbg !11493
  %196 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11494
  %ext_len284 = getelementptr inbounds %struct.isoent, %struct.isoent* %196, i32 0, i32 16, !dbg !11495
  %197 = load i32, i32* %ext_len284, align 4, !dbg !11495
  %add285 = add nsw i32 %195, %197, !dbg !11496
  %198 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11497
  %id_len286 = getelementptr inbounds %struct.isoent, %struct.isoent* %198, i32 0, i32 17, !dbg !11498
  store i32 %add285, i32* %id_len286, align 8, !dbg !11499
  %199 = load i8, i8* %allow_vernum, align 1, !dbg !11500
  %tobool287 = icmp ne i8 %199, 0, !dbg !11500
  br i1 %tobool287, label %if.then288, label %if.end293, !dbg !11502

if.then288:                                       ; preds = %if.end282
  %200 = load i8*, i8** %p, align 8, !dbg !11503
  %incdec.ptr289 = getelementptr inbounds i8, i8* %200, i32 1, !dbg !11503
  store i8* %incdec.ptr289, i8** %p, align 8, !dbg !11503
  store i8 59, i8* %200, align 1, !dbg !11505
  %201 = load i8*, i8** %p, align 8, !dbg !11506
  %incdec.ptr290 = getelementptr inbounds i8, i8* %201, i32 1, !dbg !11506
  store i8* %incdec.ptr290, i8** %p, align 8, !dbg !11506
  store i8 49, i8* %201, align 1, !dbg !11507
  %202 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11508
  %id_len291 = getelementptr inbounds %struct.isoent, %struct.isoent* %202, i32 0, i32 17, !dbg !11509
  %203 = load i32, i32* %id_len291, align 8, !dbg !11510
  %add292 = add nsw i32 %203, 2, !dbg !11510
  store i32 %add292, i32* %id_len291, align 8, !dbg !11510
  br label %if.end293, !dbg !11511

if.end293:                                        ; preds = %if.then288, %if.end282
  %204 = load i8*, i8** %p, align 8, !dbg !11512
  store i8 0, i8* %204, align 1, !dbg !11513
  br label %if.end299, !dbg !11514

if.else294:                                       ; preds = %land.lhs.true253, %for.body246
  %205 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11515
  %ext_off295 = getelementptr inbounds %struct.isoent, %struct.isoent* %205, i32 0, i32 15, !dbg !11516
  %206 = load i32, i32* %ext_off295, align 8, !dbg !11516
  %207 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11517
  %ext_len296 = getelementptr inbounds %struct.isoent, %struct.isoent* %207, i32 0, i32 16, !dbg !11518
  %208 = load i32, i32* %ext_len296, align 4, !dbg !11518
  %add297 = add nsw i32 %206, %208, !dbg !11519
  %209 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11520
  %id_len298 = getelementptr inbounds %struct.isoent, %struct.isoent* %209, i32 0, i32 17, !dbg !11521
  store i32 %add297, i32* %id_len298, align 8, !dbg !11522
  br label %if.end299

if.end299:                                        ; preds = %if.else294, %if.end293
  %210 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11523
  %id_len300 = getelementptr inbounds %struct.isoent, %struct.isoent* %210, i32 0, i32 17, !dbg !11524
  %211 = load i32, i32* %id_len300, align 8, !dbg !11524
  %212 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11525
  %mb_len = getelementptr inbounds %struct.isoent, %struct.isoent* %212, i32 0, i32 18, !dbg !11526
  store i32 %211, i32* %mb_len, align 4, !dbg !11527
  br label %for.inc301, !dbg !11528

for.inc301:                                       ; preds = %if.end299
  %213 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !11529
  %chnext302 = getelementptr inbounds %struct.isoent, %struct.isoent* %213, i32 0, i32 7, !dbg !11531
  %214 = load %struct.isoent*, %struct.isoent** %chnext302, align 8, !dbg !11531
  store %struct.isoent* %214, %struct.isoent** %np, align 8, !dbg !11532
  br label %for.cond243, !dbg !11533

for.end303:                                       ; preds = %for.cond243
  store i32 0, i32* %retval, align 4, !dbg !11534
  br label %return, !dbg !11534

return:                                           ; preds = %for.end303, %if.then41, %if.then29, %if.then
  %215 = load i32, i32* %retval, align 4, !dbg !11535
  ret i32 %215, !dbg !11535
}

declare i32 @archive_entry_mtime_is_set(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal i32 @isoent_make_sorted_files(%struct.archive_write* %a, %struct.isoent* %isoent, %struct.idr* %idr) #0 !dbg !775 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  %rn = alloca %struct.archive_rb_node*, align 8
  %children = alloca %struct.isoent**, align 8
  %idrent = alloca %struct.idrent*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !11536, metadata !986), !dbg !11537
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !11538, metadata !986), !dbg !11539
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !11540, metadata !986), !dbg !11541
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %rn, metadata !11542, metadata !986), !dbg !11543
  call void @llvm.dbg.declare(metadata %struct.isoent*** %children, metadata !11544, metadata !986), !dbg !11545
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11546
  %children1 = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 3, !dbg !11547
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children1, i32 0, i32 2, !dbg !11548
  %1 = load i32, i32* %cnt, align 8, !dbg !11548
  %conv = sext i32 %1 to i64, !dbg !11546
  %mul = mul i64 %conv, 8, !dbg !11549
  %call = call noalias i8* @malloc(i64 %mul) #8, !dbg !11550
  %2 = bitcast i8* %call to %struct.isoent**, !dbg !11550
  store %struct.isoent** %2, %struct.isoent*** %children, align 8, !dbg !11551
  %3 = load %struct.isoent**, %struct.isoent*** %children, align 8, !dbg !11552
  %cmp = icmp eq %struct.isoent** %3, null, !dbg !11554
  br i1 %cmp, label %if.then, label %if.end, !dbg !11555

if.then:                                          ; preds = %entry
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !11556
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %4, i32 0, i32 0, !dbg !11558
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !11559
  store i32 -30, i32* %retval, align 4, !dbg !11560
  br label %return, !dbg !11560

if.end:                                           ; preds = %entry
  %5 = load %struct.isoent**, %struct.isoent*** %children, align 8, !dbg !11561
  %6 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11562
  %children_sorted = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 6, !dbg !11563
  store %struct.isoent** %5, %struct.isoent*** %children_sorted, align 8, !dbg !11564
  %7 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11565
  %rbtree = getelementptr inbounds %struct.idr, %struct.idr* %7, i32 0, i32 1, !dbg !11565
  %call3 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* null, i32 0), !dbg !11565
  store %struct.archive_rb_node* %call3, %struct.archive_rb_node** %rn, align 8, !dbg !11565
  br label %for.cond, !dbg !11565

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.archive_rb_node*, %struct.archive_rb_node** %rn, align 8, !dbg !11567
  %tobool = icmp ne %struct.archive_rb_node* %8, null, !dbg !11567
  br i1 %tobool, label %for.body, label %for.end, !dbg !11567

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.idrent** %idrent, metadata !11570, metadata !986), !dbg !11572
  %9 = load %struct.archive_rb_node*, %struct.archive_rb_node** %rn, align 8, !dbg !11573
  %10 = bitcast %struct.archive_rb_node* %9 to %struct.idrent*, !dbg !11574
  store %struct.idrent* %10, %struct.idrent** %idrent, align 8, !dbg !11572
  %11 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11575
  %isoent4 = getelementptr inbounds %struct.idrent, %struct.idrent* %11, i32 0, i32 3, !dbg !11576
  %12 = load %struct.isoent*, %struct.isoent** %isoent4, align 8, !dbg !11576
  %13 = load %struct.isoent**, %struct.isoent*** %children, align 8, !dbg !11577
  %incdec.ptr = getelementptr inbounds %struct.isoent*, %struct.isoent** %13, i32 1, !dbg !11577
  store %struct.isoent** %incdec.ptr, %struct.isoent*** %children, align 8, !dbg !11577
  store %struct.isoent* %12, %struct.isoent** %13, align 8, !dbg !11578
  br label %for.inc, !dbg !11579

for.inc:                                          ; preds = %for.body
  %14 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11580
  %rbtree5 = getelementptr inbounds %struct.idr, %struct.idr* %14, i32 0, i32 1, !dbg !11580
  %15 = load %struct.archive_rb_node*, %struct.archive_rb_node** %rn, align 8, !dbg !11580
  %call6 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %rbtree5, %struct.archive_rb_node* %15, i32 1), !dbg !11580
  store %struct.archive_rb_node* %call6, %struct.archive_rb_node** %rn, align 8, !dbg !11580
  br label %for.cond, !dbg !11580

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11582
  br label %return, !dbg !11582

return:                                           ; preds = %for.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11583
  ret i32 %16, !dbg !11583
}

; Function Attrs: nounwind uwtable
define internal void @idr_cleanup(%struct.idr* %idr) #0 !dbg !776 {
entry:
  %idr.addr = alloca %struct.idr*, align 8
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !11584, metadata !986), !dbg !11585
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11586
  %idrent_pool = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 0, !dbg !11587
  %1 = load %struct.idrent*, %struct.idrent** %idrent_pool, align 8, !dbg !11587
  %2 = bitcast %struct.idrent* %1 to i8*, !dbg !11586
  call void @free(i8* %2) #8, !dbg !11588
  ret void, !dbg !11589
}

; Function Attrs: nounwind uwtable
define internal void @idr_relaxed_filenames(i8* %map) #0 !dbg !734 {
entry:
  %map.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !11590, metadata !986), !dbg !11591
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11592, metadata !986), !dbg !11593
  store i32 33, i32* %i, align 4, !dbg !11594
  br label %for.cond, !dbg !11596

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11597
  %cmp = icmp sle i32 %0, 47, !dbg !11600
  br i1 %cmp, label %for.body, label %for.end, !dbg !11601

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11602
  %idxprom = sext i32 %1 to i64, !dbg !11603
  %2 = load i8*, i8** %map.addr, align 8, !dbg !11603
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !11603
  store i8 1, i8* %arrayidx, align 1, !dbg !11604
  br label %for.inc, !dbg !11603

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !11605
  %inc = add nsw i32 %3, 1, !dbg !11605
  store i32 %inc, i32* %i, align 4, !dbg !11605
  br label %for.cond, !dbg !11607

for.end:                                          ; preds = %for.cond
  store i32 58, i32* %i, align 4, !dbg !11608
  br label %for.cond1, !dbg !11610

for.cond1:                                        ; preds = %for.inc6, %for.end
  %4 = load i32, i32* %i, align 4, !dbg !11611
  %cmp2 = icmp sle i32 %4, 65, !dbg !11614
  br i1 %cmp2, label %for.body3, label %for.end8, !dbg !11615

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %i, align 4, !dbg !11616
  %idxprom4 = sext i32 %5 to i64, !dbg !11617
  %6 = load i8*, i8** %map.addr, align 8, !dbg !11617
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %idxprom4, !dbg !11617
  store i8 1, i8* %arrayidx5, align 1, !dbg !11618
  br label %for.inc6, !dbg !11617

for.inc6:                                         ; preds = %for.body3
  %7 = load i32, i32* %i, align 4, !dbg !11619
  %inc7 = add nsw i32 %7, 1, !dbg !11619
  store i32 %inc7, i32* %i, align 4, !dbg !11619
  br label %for.cond1, !dbg !11621

for.end8:                                         ; preds = %for.cond1
  store i32 91, i32* %i, align 4, !dbg !11622
  br label %for.cond9, !dbg !11624

for.cond9:                                        ; preds = %for.inc14, %for.end8
  %8 = load i32, i32* %i, align 4, !dbg !11625
  %cmp10 = icmp sle i32 %8, 94, !dbg !11628
  br i1 %cmp10, label %for.body11, label %for.end16, !dbg !11629

for.body11:                                       ; preds = %for.cond9
  %9 = load i32, i32* %i, align 4, !dbg !11630
  %idxprom12 = sext i32 %9 to i64, !dbg !11631
  %10 = load i8*, i8** %map.addr, align 8, !dbg !11631
  %arrayidx13 = getelementptr inbounds i8, i8* %10, i64 %idxprom12, !dbg !11631
  store i8 1, i8* %arrayidx13, align 1, !dbg !11632
  br label %for.inc14, !dbg !11631

for.inc14:                                        ; preds = %for.body11
  %11 = load i32, i32* %i, align 4, !dbg !11633
  %inc15 = add nsw i32 %11, 1, !dbg !11633
  store i32 %inc15, i32* %i, align 4, !dbg !11633
  br label %for.cond9, !dbg !11635

for.end16:                                        ; preds = %for.cond9
  %12 = load i8*, i8** %map.addr, align 8, !dbg !11636
  %arrayidx17 = getelementptr inbounds i8, i8* %12, i64 96, !dbg !11636
  store i8 1, i8* %arrayidx17, align 1, !dbg !11637
  store i32 123, i32* %i, align 4, !dbg !11638
  br label %for.cond18, !dbg !11640

for.cond18:                                       ; preds = %for.inc23, %for.end16
  %13 = load i32, i32* %i, align 4, !dbg !11641
  %cmp19 = icmp sle i32 %13, 126, !dbg !11644
  br i1 %cmp19, label %for.body20, label %for.end25, !dbg !11645

for.body20:                                       ; preds = %for.cond18
  %14 = load i32, i32* %i, align 4, !dbg !11646
  %idxprom21 = sext i32 %14 to i64, !dbg !11647
  %15 = load i8*, i8** %map.addr, align 8, !dbg !11647
  %arrayidx22 = getelementptr inbounds i8, i8* %15, i64 %idxprom21, !dbg !11647
  store i8 1, i8* %arrayidx22, align 1, !dbg !11648
  br label %for.inc23, !dbg !11647

for.inc23:                                        ; preds = %for.body20
  %16 = load i32, i32* %i, align 4, !dbg !11649
  %inc24 = add nsw i32 %16, 1, !dbg !11649
  store i32 %inc24, i32* %i, align 4, !dbg !11649
  br label %for.cond18, !dbg !11651

for.end25:                                        ; preds = %for.cond18
  ret void, !dbg !11652
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_node_joliet(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !740 {
entry:
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %e1 = alloca %struct.idrent*, align 8
  %e2 = alloca %struct.idrent*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !11653, metadata !986), !dbg !11654
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !11655, metadata !986), !dbg !11656
  call void @llvm.dbg.declare(metadata %struct.idrent** %e1, metadata !11657, metadata !986), !dbg !11658
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !11659
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.idrent*, !dbg !11660
  store %struct.idrent* %1, %struct.idrent** %e1, align 8, !dbg !11658
  call void @llvm.dbg.declare(metadata %struct.idrent** %e2, metadata !11661, metadata !986), !dbg !11662
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !11663
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.idrent*, !dbg !11664
  store %struct.idrent* %3, %struct.idrent** %e2, align 8, !dbg !11662
  %4 = load %struct.idrent*, %struct.idrent** %e2, align 8, !dbg !11665
  %isoent = getelementptr inbounds %struct.idrent, %struct.idrent* %4, i32 0, i32 3, !dbg !11666
  %5 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !11666
  %6 = load %struct.idrent*, %struct.idrent** %e1, align 8, !dbg !11667
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %6, i32 0, i32 3, !dbg !11668
  %7 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !11668
  %call = call i32 @isoent_cmp_joliet_identifier(%struct.isoent* %5, %struct.isoent* %7), !dbg !11669
  ret i32 %call, !dbg !11670
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_key_joliet(%struct.archive_rb_node* %node, i8* %key) #0 !dbg !744 {
entry:
  %node.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  %isoent = alloca %struct.isoent*, align 8
  %idrent = alloca %struct.idrent*, align 8
  store %struct.archive_rb_node* %node, %struct.archive_rb_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %node.addr, metadata !11671, metadata !986), !dbg !11672
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11673, metadata !986), !dbg !11674
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !11675, metadata !986), !dbg !11676
  %0 = load i8*, i8** %key.addr, align 8, !dbg !11677
  %1 = bitcast i8* %0 to %struct.isoent*, !dbg !11678
  store %struct.isoent* %1, %struct.isoent** %isoent, align 8, !dbg !11676
  call void @llvm.dbg.declare(metadata %struct.idrent** %idrent, metadata !11679, metadata !986), !dbg !11680
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %node.addr, align 8, !dbg !11681
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.idrent*, !dbg !11682
  store %struct.idrent* %3, %struct.idrent** %idrent, align 8, !dbg !11680
  %4 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !11683
  %5 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11684
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %5, i32 0, i32 3, !dbg !11685
  %6 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !11685
  %call = call i32 @isoent_cmp_joliet_identifier(%struct.isoent* %4, %struct.isoent* %6), !dbg !11686
  ret i32 %call, !dbg !11687
}

; Function Attrs: nounwind uwtable
define internal i32 @idr_start(%struct.archive_write* %a, %struct.idr* %idr, i32 %cnt, i32 %ffmax, i32 %num_size, i32 %null_size, %struct.archive_rb_tree_ops* %rbt_ops) #0 !dbg !745 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  %cnt.addr = alloca i32, align 4
  %ffmax.addr = alloca i32, align 4
  %num_size.addr = alloca i32, align 4
  %null_size.addr = alloca i32, align 4
  %rbt_ops.addr = alloca %struct.archive_rb_tree_ops*, align 8
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !11688, metadata !986), !dbg !11689
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !11690, metadata !986), !dbg !11691
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !11692, metadata !986), !dbg !11693
  store i32 %ffmax, i32* %ffmax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ffmax.addr, metadata !11694, metadata !986), !dbg !11695
  store i32 %num_size, i32* %num_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_size.addr, metadata !11696, metadata !986), !dbg !11697
  store i32 %null_size, i32* %null_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %null_size.addr, metadata !11698, metadata !986), !dbg !11699
  store %struct.archive_rb_tree_ops* %rbt_ops, %struct.archive_rb_tree_ops** %rbt_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_tree_ops** %rbt_ops.addr, metadata !11700, metadata !986), !dbg !11701
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11702, metadata !986), !dbg !11703
  %0 = load i32, i32* %ffmax.addr, align 4, !dbg !11704
  %1 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !11705
  %2 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11706
  %3 = load i32, i32* %cnt.addr, align 4, !dbg !11707
  %call = call i32 @idr_ensure_poolsize(%struct.archive_write* %1, %struct.idr* %2, i32 %3), !dbg !11708
  store i32 %call, i32* %r, align 4, !dbg !11709
  %4 = load i32, i32* %r, align 4, !dbg !11710
  %cmp = icmp ne i32 %4, 0, !dbg !11712
  br i1 %cmp, label %if.then, label %if.end, !dbg !11713

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %r, align 4, !dbg !11714
  store i32 %5, i32* %retval, align 4, !dbg !11715
  br label %return, !dbg !11715

if.end:                                           ; preds = %entry
  %6 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11716
  %rbtree = getelementptr inbounds %struct.idr, %struct.idr* %6, i32 0, i32 1, !dbg !11717
  %7 = load %struct.archive_rb_tree_ops*, %struct.archive_rb_tree_ops** %rbt_ops.addr, align 8, !dbg !11718
  call void @__archive_rb_tree_init(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_tree_ops* %7), !dbg !11719
  %8 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11720
  %wait_list = getelementptr inbounds %struct.idr, %struct.idr* %8, i32 0, i32 2, !dbg !11721
  %first = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list, i32 0, i32 0, !dbg !11722
  store %struct.idrent* null, %struct.idrent** %first, align 8, !dbg !11723
  %9 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11724
  %wait_list1 = getelementptr inbounds %struct.idr, %struct.idr* %9, i32 0, i32 2, !dbg !11725
  %first2 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list1, i32 0, i32 0, !dbg !11726
  %10 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11727
  %wait_list3 = getelementptr inbounds %struct.idr, %struct.idr* %10, i32 0, i32 2, !dbg !11728
  %last = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list3, i32 0, i32 1, !dbg !11729
  store %struct.idrent** %first2, %struct.idrent*** %last, align 8, !dbg !11730
  %11 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11731
  %pool_idx = getelementptr inbounds %struct.idr, %struct.idr* %11, i32 0, i32 4, !dbg !11732
  store i32 0, i32* %pool_idx, align 4, !dbg !11733
  %12 = load i32, i32* %num_size.addr, align 4, !dbg !11734
  %13 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11735
  %num_size4 = getelementptr inbounds %struct.idr, %struct.idr* %13, i32 0, i32 5, !dbg !11736
  store i32 %12, i32* %num_size4, align 8, !dbg !11737
  %14 = load i32, i32* %null_size.addr, align 4, !dbg !11738
  %15 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11739
  %null_size5 = getelementptr inbounds %struct.idr, %struct.idr* %15, i32 0, i32 6, !dbg !11740
  store i32 %14, i32* %null_size5, align 4, !dbg !11741
  store i32 0, i32* %retval, align 4, !dbg !11742
  br label %return, !dbg !11742

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11743
  ret i32 %16, !dbg !11743
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @joliet_allowed_char(i8 zeroext %high, i8 zeroext %low) #7 !dbg !751 {
entry:
  %retval = alloca i32, align 4
  %high.addr = alloca i8, align 1
  %low.addr = alloca i8, align 1
  %utf16 = alloca i32, align 4
  store i8 %high, i8* %high.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %high.addr, metadata !11744, metadata !986), !dbg !11745
  store i8 %low, i8* %low.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %low.addr, metadata !11746, metadata !986), !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %utf16, metadata !11748, metadata !986), !dbg !11749
  %0 = load i8, i8* %high.addr, align 1, !dbg !11750
  %conv = zext i8 %0 to i32, !dbg !11750
  %shl = shl i32 %conv, 8, !dbg !11751
  %1 = load i8, i8* %low.addr, align 1, !dbg !11752
  %conv1 = zext i8 %1 to i32, !dbg !11752
  %or = or i32 %shl, %conv1, !dbg !11753
  store i32 %or, i32* %utf16, align 4, !dbg !11749
  %2 = load i32, i32* %utf16, align 4, !dbg !11754
  %cmp = icmp sle i32 %2, 31, !dbg !11756
  br i1 %cmp, label %if.then, label %if.end, !dbg !11757

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11758
  br label %return, !dbg !11758

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %utf16, align 4, !dbg !11759
  switch i32 %3, label %sw.epilog [
    i32 42, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 63, label %sw.bb
    i32 92, label %sw.bb
  ], !dbg !11760

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11761
  br label %return, !dbg !11761

sw.epilog:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11763
  br label %return, !dbg !11763

return:                                           ; preds = %sw.epilog, %sw.bb, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11764
  ret i32 %4, !dbg !11764
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_be16enc(i8* %pp, i16 zeroext %u) #7 !dbg !754 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i16, align 2
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !11765, metadata !986), !dbg !11766
  store i16 %u, i16* %u.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %u.addr, metadata !11767, metadata !986), !dbg !11768
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11769, metadata !986), !dbg !11770
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !11771
  store i8* %0, i8** %p, align 8, !dbg !11770
  %1 = load i16, i16* %u.addr, align 2, !dbg !11772
  %conv = zext i16 %1 to i32, !dbg !11772
  %shr = ashr i32 %conv, 8, !dbg !11773
  %and = and i32 %shr, 255, !dbg !11774
  %conv1 = trunc i32 %and to i8, !dbg !11775
  %2 = load i8*, i8** %p, align 8, !dbg !11776
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !11776
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !11777
  %3 = load i16, i16* %u.addr, align 2, !dbg !11778
  %conv2 = zext i16 %3 to i32, !dbg !11778
  %and3 = and i32 %conv2, 255, !dbg !11779
  %conv4 = trunc i32 %and3 to i8, !dbg !11778
  %4 = load i8*, i8** %p, align 8, !dbg !11780
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11780
  store i8 %conv4, i8* %arrayidx5, align 1, !dbg !11781
  ret void, !dbg !11782
}

declare i32 @archive_strncpy_l(%struct.archive_string*, i8*, i64, %struct.archive_string_conv*) #2

; Function Attrs: nounwind uwtable
define internal void @idr_register(%struct.idr* %idr, %struct.isoent* %isoent, i32 %weight, i32 %noff) #0 !dbg !757 {
entry:
  %idr.addr = alloca %struct.idr*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %weight.addr = alloca i32, align 4
  %noff.addr = alloca i32, align 4
  %idrent = alloca %struct.idrent*, align 8
  %n = alloca %struct.idrent*, align 8
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !11783, metadata !986), !dbg !11784
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !11785, metadata !986), !dbg !11786
  store i32 %weight, i32* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %weight.addr, metadata !11787, metadata !986), !dbg !11788
  store i32 %noff, i32* %noff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %noff.addr, metadata !11789, metadata !986), !dbg !11790
  call void @llvm.dbg.declare(metadata %struct.idrent** %idrent, metadata !11791, metadata !986), !dbg !11792
  call void @llvm.dbg.declare(metadata %struct.idrent** %n, metadata !11793, metadata !986), !dbg !11794
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11795
  %pool_idx = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 4, !dbg !11796
  %1 = load i32, i32* %pool_idx, align 4, !dbg !11797
  %inc = add nsw i32 %1, 1, !dbg !11797
  store i32 %inc, i32* %pool_idx, align 4, !dbg !11797
  %idxprom = sext i32 %1 to i64, !dbg !11798
  %2 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11798
  %idrent_pool = getelementptr inbounds %struct.idr, %struct.idr* %2, i32 0, i32 0, !dbg !11799
  %3 = load %struct.idrent*, %struct.idrent** %idrent_pool, align 8, !dbg !11799
  %arrayidx = getelementptr inbounds %struct.idrent, %struct.idrent* %3, i64 %idxprom, !dbg !11798
  store %struct.idrent* %arrayidx, %struct.idrent** %idrent, align 8, !dbg !11800
  %4 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11801
  %avail = getelementptr inbounds %struct.idrent, %struct.idrent* %4, i32 0, i32 2, !dbg !11802
  store %struct.idrent* null, %struct.idrent** %avail, align 8, !dbg !11803
  %5 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11804
  %wnext = getelementptr inbounds %struct.idrent, %struct.idrent* %5, i32 0, i32 1, !dbg !11805
  store %struct.idrent* null, %struct.idrent** %wnext, align 8, !dbg !11806
  %6 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !11807
  %7 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11808
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %7, i32 0, i32 3, !dbg !11809
  store %struct.isoent* %6, %struct.isoent** %isoent1, align 8, !dbg !11810
  %8 = load i32, i32* %weight.addr, align 4, !dbg !11811
  %9 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11812
  %weight2 = getelementptr inbounds %struct.idrent, %struct.idrent* %9, i32 0, i32 4, !dbg !11813
  store i32 %8, i32* %weight2, align 8, !dbg !11814
  %10 = load i32, i32* %noff.addr, align 4, !dbg !11815
  %11 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11816
  %noff3 = getelementptr inbounds %struct.idrent, %struct.idrent* %11, i32 0, i32 5, !dbg !11817
  store i32 %10, i32* %noff3, align 4, !dbg !11818
  %12 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11819
  %rename_num = getelementptr inbounds %struct.idrent, %struct.idrent* %12, i32 0, i32 6, !dbg !11820
  store i32 0, i32* %rename_num, align 8, !dbg !11821
  %13 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11822
  %rbtree = getelementptr inbounds %struct.idr, %struct.idr* %13, i32 0, i32 1, !dbg !11824
  %14 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11825
  %rbnode = getelementptr inbounds %struct.idrent, %struct.idrent* %14, i32 0, i32 0, !dbg !11826
  %call = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* %rbnode), !dbg !11827
  %tobool = icmp ne i32 %call, 0, !dbg !11827
  br i1 %tobool, label %if.end12, label %if.then, !dbg !11828

if.then:                                          ; preds = %entry
  %15 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11829
  %rbtree4 = getelementptr inbounds %struct.idr, %struct.idr* %15, i32 0, i32 1, !dbg !11831
  %16 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11832
  %isoent5 = getelementptr inbounds %struct.idrent, %struct.idrent* %16, i32 0, i32 3, !dbg !11833
  %17 = load %struct.isoent*, %struct.isoent** %isoent5, align 8, !dbg !11833
  %18 = bitcast %struct.isoent* %17 to i8*, !dbg !11832
  %call6 = call %struct.archive_rb_node* @__archive_rb_tree_find_node(%struct.archive_rb_tree* %rbtree4, i8* %18), !dbg !11834
  %19 = bitcast %struct.archive_rb_node* %call6 to %struct.idrent*, !dbg !11835
  store %struct.idrent* %19, %struct.idrent** %n, align 8, !dbg !11836
  %20 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11837
  %cmp = icmp ne %struct.idrent* %20, null, !dbg !11839
  br i1 %cmp, label %if.then7, label %if.end, !dbg !11840

if.then7:                                         ; preds = %if.then
  %21 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11841
  %22 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11843
  %avail8 = getelementptr inbounds %struct.idrent, %struct.idrent* %22, i32 0, i32 2, !dbg !11844
  store %struct.idrent* %21, %struct.idrent** %avail8, align 8, !dbg !11845
  %23 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11846
  %24 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11847
  %wait_list = getelementptr inbounds %struct.idr, %struct.idr* %24, i32 0, i32 2, !dbg !11848
  %last = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list, i32 0, i32 1, !dbg !11849
  %25 = load %struct.idrent**, %struct.idrent*** %last, align 8, !dbg !11849
  store %struct.idrent* %23, %struct.idrent** %25, align 8, !dbg !11850
  %26 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !11851
  %wnext9 = getelementptr inbounds %struct.idrent, %struct.idrent* %26, i32 0, i32 1, !dbg !11852
  %27 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11853
  %wait_list10 = getelementptr inbounds %struct.idr, %struct.idr* %27, i32 0, i32 2, !dbg !11854
  %last11 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list10, i32 0, i32 1, !dbg !11855
  store %struct.idrent** %wnext9, %struct.idrent*** %last11, align 8, !dbg !11856
  br label %if.end, !dbg !11857

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end12, !dbg !11858

if.end12:                                         ; preds = %if.end, %entry
  ret void, !dbg !11859
}

; Function Attrs: nounwind uwtable
define internal void @idr_resolve(%struct.idr* %idr, void (i8*, i32)* %fsetnum) #0 !dbg !760 {
entry:
  %idr.addr = alloca %struct.idr*, align 8
  %fsetnum.addr = alloca void (i8*, i32)*, align 8
  %n = alloca %struct.idrent*, align 8
  %p = alloca i8*, align 8
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !11860, metadata !986), !dbg !11861
  store void (i8*, i32)* %fsetnum, void (i8*, i32)** %fsetnum.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32)** %fsetnum.addr, metadata !11862, metadata !986), !dbg !11863
  call void @llvm.dbg.declare(metadata %struct.idrent** %n, metadata !11864, metadata !986), !dbg !11865
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11866, metadata !986), !dbg !11867
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11868
  %wait_list = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 2, !dbg !11870
  %first = getelementptr inbounds %struct.anon.9, %struct.anon.9* %wait_list, i32 0, i32 0, !dbg !11871
  %1 = load %struct.idrent*, %struct.idrent** %first, align 8, !dbg !11871
  store %struct.idrent* %1, %struct.idrent** %n, align 8, !dbg !11872
  br label %for.cond, !dbg !11873

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11874
  %cmp = icmp ne %struct.idrent* %2, null, !dbg !11877
  br i1 %cmp, label %for.body, label %for.end, !dbg !11878

for.body:                                         ; preds = %for.cond
  %3 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11879
  %4 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11881
  %num_size = getelementptr inbounds %struct.idr, %struct.idr* %4, i32 0, i32 5, !dbg !11882
  %5 = load i32, i32* %num_size, align 8, !dbg !11882
  %6 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11883
  %null_size = getelementptr inbounds %struct.idr, %struct.idr* %6, i32 0, i32 6, !dbg !11884
  %7 = load i32, i32* %null_size, align 4, !dbg !11884
  call void @idr_extend_identifier(%struct.idrent* %3, i32 %5, i32 %7), !dbg !11885
  %8 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11886
  %isoent = getelementptr inbounds %struct.idrent, %struct.idrent* %8, i32 0, i32 3, !dbg !11887
  %9 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !11887
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 14, !dbg !11888
  %10 = load i8*, i8** %identifier, align 8, !dbg !11888
  %11 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11889
  %noff = getelementptr inbounds %struct.idrent, %struct.idrent* %11, i32 0, i32 5, !dbg !11890
  %12 = load i32, i32* %noff, align 4, !dbg !11890
  %idx.ext = sext i32 %12 to i64, !dbg !11891
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !11891
  store i8* %add.ptr, i8** %p, align 8, !dbg !11892
  br label %do.body, !dbg !11893

do.body:                                          ; preds = %do.cond, %for.body
  %13 = load void (i8*, i32)*, void (i8*, i32)** %fsetnum.addr, align 8, !dbg !11894
  %14 = load i8*, i8** %p, align 8, !dbg !11896
  %15 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11897
  %avail = getelementptr inbounds %struct.idrent, %struct.idrent* %15, i32 0, i32 2, !dbg !11898
  %16 = load %struct.idrent*, %struct.idrent** %avail, align 8, !dbg !11898
  %rename_num = getelementptr inbounds %struct.idrent, %struct.idrent* %16, i32 0, i32 6, !dbg !11899
  %17 = load i32, i32* %rename_num, align 8, !dbg !11900
  %inc = add nsw i32 %17, 1, !dbg !11900
  store i32 %inc, i32* %rename_num, align 8, !dbg !11900
  call void %13(i8* %14, i32 %17), !dbg !11894
  br label %do.cond, !dbg !11901

do.cond:                                          ; preds = %do.body
  %18 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !11902
  %rbtree = getelementptr inbounds %struct.idr, %struct.idr* %18, i32 0, i32 1, !dbg !11903
  %19 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11904
  %rbnode = getelementptr inbounds %struct.idrent, %struct.idrent* %19, i32 0, i32 0, !dbg !11905
  %call = call i32 @__archive_rb_tree_insert_node(%struct.archive_rb_tree* %rbtree, %struct.archive_rb_node* %rbnode), !dbg !11906
  %tobool = icmp ne i32 %call, 0, !dbg !11908
  %lnot = xor i1 %tobool, true, !dbg !11908
  br i1 %lnot, label %do.body, label %do.end, !dbg !11909

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !11910

for.inc:                                          ; preds = %do.end
  %20 = load %struct.idrent*, %struct.idrent** %n, align 8, !dbg !11911
  %wnext = getelementptr inbounds %struct.idrent, %struct.idrent* %20, i32 0, i32 1, !dbg !11913
  %21 = load %struct.idrent*, %struct.idrent** %wnext, align 8, !dbg !11913
  store %struct.idrent* %21, %struct.idrent** %n, align 8, !dbg !11914
  br label %for.cond, !dbg !11915

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11916
}

; Function Attrs: nounwind uwtable
define internal void @idr_set_num_beutf16(i8* %p, i32 %num) #0 !dbg !769 {
entry:
  %p.addr = alloca i8*, align 8
  %num.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11917, metadata !986), !dbg !11918
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !11919, metadata !986), !dbg !11920
  %0 = load i32, i32* %num.addr, align 4, !dbg !11921
  %conv = sext i32 %0 to i64, !dbg !11921
  %rem = urem i64 %conv, 46656, !dbg !11921
  %conv1 = trunc i64 %rem to i32, !dbg !11921
  store i32 %conv1, i32* %num.addr, align 4, !dbg !11921
  %1 = load i8*, i8** %p.addr, align 8, !dbg !11922
  %2 = load i32, i32* %num.addr, align 4, !dbg !11923
  %conv2 = sext i32 %2 to i64, !dbg !11923
  %div = udiv i64 %conv2, 1296, !dbg !11924
  %arrayidx = getelementptr inbounds [36 x i16], [36 x i16]* @idr_set_num_beutf16.xdig, i64 0, i64 %div, !dbg !11925
  %3 = load i16, i16* %arrayidx, align 2, !dbg !11925
  call void @archive_be16enc(i8* %1, i16 zeroext %3), !dbg !11926
  %4 = load i32, i32* %num.addr, align 4, !dbg !11927
  %conv3 = sext i32 %4 to i64, !dbg !11927
  %rem4 = urem i64 %conv3, 1296, !dbg !11927
  %conv5 = trunc i64 %rem4 to i32, !dbg !11927
  store i32 %conv5, i32* %num.addr, align 4, !dbg !11927
  %5 = load i8*, i8** %p.addr, align 8, !dbg !11928
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 2, !dbg !11929
  %6 = load i32, i32* %num.addr, align 4, !dbg !11930
  %conv6 = sext i32 %6 to i64, !dbg !11930
  %div7 = udiv i64 %conv6, 36, !dbg !11931
  %arrayidx8 = getelementptr inbounds [36 x i16], [36 x i16]* @idr_set_num_beutf16.xdig, i64 0, i64 %div7, !dbg !11932
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !11932
  call void @archive_be16enc(i8* %add.ptr, i16 zeroext %7), !dbg !11933
  %8 = load i32, i32* %num.addr, align 4, !dbg !11934
  %conv9 = sext i32 %8 to i64, !dbg !11934
  %rem10 = urem i64 %conv9, 36, !dbg !11934
  %conv11 = trunc i64 %rem10 to i32, !dbg !11934
  store i32 %conv11, i32* %num.addr, align 4, !dbg !11934
  %9 = load i8*, i8** %p.addr, align 8, !dbg !11935
  %add.ptr12 = getelementptr inbounds i8, i8* %9, i64 4, !dbg !11936
  %10 = load i32, i32* %num.addr, align 4, !dbg !11937
  %idxprom = sext i32 %10 to i64, !dbg !11938
  %arrayidx13 = getelementptr inbounds [36 x i16], [36 x i16]* @idr_set_num_beutf16.xdig, i64 0, i64 %idxprom, !dbg !11938
  %11 = load i16, i16* %arrayidx13, align 2, !dbg !11938
  call void @archive_be16enc(i8* %add.ptr12, i16 zeroext %11), !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_joliet_identifier(%struct.isoent* %p1, %struct.isoent* %p2) #0 !dbg !741 {
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca %struct.isoent*, align 8
  %p2.addr = alloca %struct.isoent*, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %cmp = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.isoent* %p1, %struct.isoent** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %p1.addr, metadata !11941, metadata !986), !dbg !11942
  store %struct.isoent* %p2, %struct.isoent** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %p2.addr, metadata !11943, metadata !986), !dbg !11944
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !11945, metadata !986), !dbg !11946
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !11947, metadata !986), !dbg !11948
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !11949, metadata !986), !dbg !11950
  call void @llvm.dbg.declare(metadata i32* %l, metadata !11951, metadata !986), !dbg !11952
  %0 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !11953
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 14, !dbg !11954
  %1 = load i8*, i8** %identifier, align 8, !dbg !11954
  store i8* %1, i8** %s1, align 8, !dbg !11955
  %2 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !11956
  %identifier1 = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 14, !dbg !11957
  %3 = load i8*, i8** %identifier1, align 8, !dbg !11957
  store i8* %3, i8** %s2, align 8, !dbg !11958
  %4 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !11959
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 15, !dbg !11960
  %5 = load i32, i32* %ext_off, align 8, !dbg !11960
  store i32 %5, i32* %l, align 4, !dbg !11961
  %6 = load i32, i32* %l, align 4, !dbg !11962
  %7 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !11964
  %ext_off2 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 15, !dbg !11965
  %8 = load i32, i32* %ext_off2, align 8, !dbg !11965
  %cmp3 = icmp sgt i32 %6, %8, !dbg !11966
  br i1 %cmp3, label %if.then, label %if.end, !dbg !11967

if.then:                                          ; preds = %entry
  %9 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !11968
  %ext_off4 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 15, !dbg !11969
  %10 = load i32, i32* %ext_off4, align 8, !dbg !11969
  store i32 %10, i32* %l, align 4, !dbg !11970
  br label %if.end, !dbg !11971

if.end:                                           ; preds = %if.then, %entry
  %11 = load i8*, i8** %s1, align 8, !dbg !11972
  %12 = load i8*, i8** %s2, align 8, !dbg !11973
  %13 = load i32, i32* %l, align 4, !dbg !11974
  %conv = sext i32 %13 to i64, !dbg !11974
  %call = call i32 @memcmp(i8* %11, i8* %12, i64 %conv) #9, !dbg !11975
  store i32 %call, i32* %cmp, align 4, !dbg !11976
  %14 = load i32, i32* %cmp, align 4, !dbg !11977
  %cmp5 = icmp ne i32 %14, 0, !dbg !11979
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11980

if.then7:                                         ; preds = %if.end
  %15 = load i32, i32* %cmp, align 4, !dbg !11981
  store i32 %15, i32* %retval, align 4, !dbg !11982
  br label %return, !dbg !11982

if.end8:                                          ; preds = %if.end
  %16 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !11983
  %ext_off9 = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 15, !dbg !11985
  %17 = load i32, i32* %ext_off9, align 8, !dbg !11985
  %18 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !11986
  %ext_off10 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 15, !dbg !11987
  %19 = load i32, i32* %ext_off10, align 8, !dbg !11987
  %cmp11 = icmp slt i32 %17, %19, !dbg !11988
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !11989

if.then13:                                        ; preds = %if.end8
  %20 = load i32, i32* %l, align 4, !dbg !11990
  %21 = load i8*, i8** %s2, align 8, !dbg !11992
  %idx.ext = sext i32 %20 to i64, !dbg !11992
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !11992
  store i8* %add.ptr, i8** %s2, align 8, !dbg !11992
  %22 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !11993
  %ext_off14 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 15, !dbg !11994
  %23 = load i32, i32* %ext_off14, align 8, !dbg !11994
  %24 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !11995
  %ext_off15 = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 15, !dbg !11996
  %25 = load i32, i32* %ext_off15, align 8, !dbg !11996
  %sub = sub nsw i32 %23, %25, !dbg !11997
  store i32 %sub, i32* %l, align 4, !dbg !11998
  br label %while.cond, !dbg !11999

while.cond:                                       ; preds = %if.end23, %if.then13
  %26 = load i32, i32* %l, align 4, !dbg !12000
  %dec = add nsw i32 %26, -1, !dbg !12000
  store i32 %dec, i32* %l, align 4, !dbg !12000
  %tobool = icmp ne i32 %26, 0, !dbg !12002
  br i1 %tobool, label %while.body, label %while.end, !dbg !12002

while.body:                                       ; preds = %while.cond
  %27 = load i8*, i8** %s2, align 8, !dbg !12003
  %incdec.ptr = getelementptr inbounds i8, i8* %27, i32 1, !dbg !12003
  store i8* %incdec.ptr, i8** %s2, align 8, !dbg !12003
  %28 = load i8, i8* %27, align 1, !dbg !12005
  %conv16 = zext i8 %28 to i32, !dbg !12005
  %cmp17 = icmp ne i32 0, %conv16, !dbg !12006
  br i1 %cmp17, label %if.then19, label %if.end23, !dbg !12007

if.then19:                                        ; preds = %while.body
  %29 = load i8*, i8** %s2, align 8, !dbg !12008
  %add.ptr20 = getelementptr inbounds i8, i8* %29, i64 -1, !dbg !12009
  %30 = load i8, i8* %add.ptr20, align 1, !dbg !12010
  %conv21 = zext i8 %30 to i32, !dbg !12010
  %sub22 = sub nsw i32 0, %conv21, !dbg !12011
  store i32 %sub22, i32* %retval, align 4, !dbg !12012
  br label %return, !dbg !12012

if.end23:                                         ; preds = %while.body
  br label %while.cond, !dbg !12013

while.end:                                        ; preds = %while.cond
  br label %if.end48, !dbg !12015

if.else:                                          ; preds = %if.end8
  %31 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12016
  %ext_off24 = getelementptr inbounds %struct.isoent, %struct.isoent* %31, i32 0, i32 15, !dbg !12019
  %32 = load i32, i32* %ext_off24, align 8, !dbg !12019
  %33 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12020
  %ext_off25 = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 15, !dbg !12021
  %34 = load i32, i32* %ext_off25, align 8, !dbg !12021
  %cmp26 = icmp sgt i32 %32, %34, !dbg !12022
  br i1 %cmp26, label %if.then28, label %if.end47, !dbg !12016

if.then28:                                        ; preds = %if.else
  %35 = load i32, i32* %l, align 4, !dbg !12023
  %36 = load i8*, i8** %s1, align 8, !dbg !12025
  %idx.ext29 = sext i32 %35 to i64, !dbg !12025
  %add.ptr30 = getelementptr inbounds i8, i8* %36, i64 %idx.ext29, !dbg !12025
  store i8* %add.ptr30, i8** %s1, align 8, !dbg !12025
  %37 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12026
  %ext_off31 = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 15, !dbg !12027
  %38 = load i32, i32* %ext_off31, align 8, !dbg !12027
  %39 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12028
  %ext_off32 = getelementptr inbounds %struct.isoent, %struct.isoent* %39, i32 0, i32 15, !dbg !12029
  %40 = load i32, i32* %ext_off32, align 8, !dbg !12029
  %sub33 = sub nsw i32 %38, %40, !dbg !12030
  store i32 %sub33, i32* %l, align 4, !dbg !12031
  br label %while.cond34, !dbg !12032

while.cond34:                                     ; preds = %if.end45, %if.then28
  %41 = load i32, i32* %l, align 4, !dbg !12033
  %dec35 = add nsw i32 %41, -1, !dbg !12033
  store i32 %dec35, i32* %l, align 4, !dbg !12033
  %tobool36 = icmp ne i32 %41, 0, !dbg !12035
  br i1 %tobool36, label %while.body37, label %while.end46, !dbg !12035

while.body37:                                     ; preds = %while.cond34
  %42 = load i8*, i8** %s1, align 8, !dbg !12036
  %incdec.ptr38 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !12036
  store i8* %incdec.ptr38, i8** %s1, align 8, !dbg !12036
  %43 = load i8, i8* %42, align 1, !dbg !12038
  %conv39 = zext i8 %43 to i32, !dbg !12038
  %cmp40 = icmp ne i32 0, %conv39, !dbg !12039
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !12040

if.then42:                                        ; preds = %while.body37
  %44 = load i8*, i8** %s1, align 8, !dbg !12041
  %add.ptr43 = getelementptr inbounds i8, i8* %44, i64 -1, !dbg !12042
  %45 = load i8, i8* %add.ptr43, align 1, !dbg !12043
  %conv44 = zext i8 %45 to i32, !dbg !12044
  store i32 %conv44, i32* %retval, align 4, !dbg !12045
  br label %return, !dbg !12045

if.end45:                                         ; preds = %while.body37
  br label %while.cond34, !dbg !12046

while.end46:                                      ; preds = %while.cond34
  br label %if.end47, !dbg !12048

if.end47:                                         ; preds = %while.end46, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %while.end
  %46 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12049
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %46, i32 0, i32 16, !dbg !12051
  %47 = load i32, i32* %ext_len, align 4, !dbg !12051
  %cmp49 = icmp eq i32 %47, 0, !dbg !12052
  br i1 %cmp49, label %land.lhs.true, label %if.end55, !dbg !12053

land.lhs.true:                                    ; preds = %if.end48
  %48 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12054
  %ext_len51 = getelementptr inbounds %struct.isoent, %struct.isoent* %48, i32 0, i32 16, !dbg !12056
  %49 = load i32, i32* %ext_len51, align 4, !dbg !12056
  %cmp52 = icmp eq i32 %49, 0, !dbg !12057
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !12058

if.then54:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !12059
  br label %return, !dbg !12059

if.end55:                                         ; preds = %land.lhs.true, %if.end48
  %50 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12060
  %ext_len56 = getelementptr inbounds %struct.isoent, %struct.isoent* %50, i32 0, i32 16, !dbg !12062
  %51 = load i32, i32* %ext_len56, align 4, !dbg !12062
  %cmp57 = icmp eq i32 %51, 2, !dbg !12063
  br i1 %cmp57, label %land.lhs.true59, label %if.end64, !dbg !12064

land.lhs.true59:                                  ; preds = %if.end55
  %52 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12065
  %ext_len60 = getelementptr inbounds %struct.isoent, %struct.isoent* %52, i32 0, i32 16, !dbg !12067
  %53 = load i32, i32* %ext_len60, align 4, !dbg !12067
  %cmp61 = icmp eq i32 %53, 2, !dbg !12068
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !12069

if.then63:                                        ; preds = %land.lhs.true59
  store i32 0, i32* %retval, align 4, !dbg !12070
  br label %return, !dbg !12070

if.end64:                                         ; preds = %land.lhs.true59, %if.end55
  %54 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12071
  %ext_len65 = getelementptr inbounds %struct.isoent, %struct.isoent* %54, i32 0, i32 16, !dbg !12073
  %55 = load i32, i32* %ext_len65, align 4, !dbg !12073
  %cmp66 = icmp sle i32 %55, 2, !dbg !12074
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !12075

if.then68:                                        ; preds = %if.end64
  store i32 -1, i32* %retval, align 4, !dbg !12076
  br label %return, !dbg !12076

if.end69:                                         ; preds = %if.end64
  %56 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12077
  %ext_len70 = getelementptr inbounds %struct.isoent, %struct.isoent* %56, i32 0, i32 16, !dbg !12079
  %57 = load i32, i32* %ext_len70, align 4, !dbg !12079
  %cmp71 = icmp sle i32 %57, 2, !dbg !12080
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !12081

if.then73:                                        ; preds = %if.end69
  store i32 1, i32* %retval, align 4, !dbg !12082
  br label %return, !dbg !12082

if.end74:                                         ; preds = %if.end69
  %58 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12083
  %ext_len75 = getelementptr inbounds %struct.isoent, %struct.isoent* %58, i32 0, i32 16, !dbg !12084
  %59 = load i32, i32* %ext_len75, align 4, !dbg !12084
  store i32 %59, i32* %l, align 4, !dbg !12085
  %60 = load i32, i32* %l, align 4, !dbg !12086
  %61 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12088
  %ext_len76 = getelementptr inbounds %struct.isoent, %struct.isoent* %61, i32 0, i32 16, !dbg !12089
  %62 = load i32, i32* %ext_len76, align 4, !dbg !12089
  %cmp77 = icmp sgt i32 %60, %62, !dbg !12090
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !12091

if.then79:                                        ; preds = %if.end74
  %63 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12092
  %ext_len80 = getelementptr inbounds %struct.isoent, %struct.isoent* %63, i32 0, i32 16, !dbg !12093
  %64 = load i32, i32* %ext_len80, align 4, !dbg !12093
  store i32 %64, i32* %l, align 4, !dbg !12094
  br label %if.end81, !dbg !12095

if.end81:                                         ; preds = %if.then79, %if.end74
  %65 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12096
  %identifier82 = getelementptr inbounds %struct.isoent, %struct.isoent* %65, i32 0, i32 14, !dbg !12097
  %66 = load i8*, i8** %identifier82, align 8, !dbg !12097
  %67 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12098
  %ext_off83 = getelementptr inbounds %struct.isoent, %struct.isoent* %67, i32 0, i32 15, !dbg !12099
  %68 = load i32, i32* %ext_off83, align 8, !dbg !12099
  %idx.ext84 = sext i32 %68 to i64, !dbg !12100
  %add.ptr85 = getelementptr inbounds i8, i8* %66, i64 %idx.ext84, !dbg !12100
  store i8* %add.ptr85, i8** %s1, align 8, !dbg !12101
  %69 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12102
  %identifier86 = getelementptr inbounds %struct.isoent, %struct.isoent* %69, i32 0, i32 14, !dbg !12103
  %70 = load i8*, i8** %identifier86, align 8, !dbg !12103
  %71 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12104
  %ext_off87 = getelementptr inbounds %struct.isoent, %struct.isoent* %71, i32 0, i32 15, !dbg !12105
  %72 = load i32, i32* %ext_off87, align 8, !dbg !12105
  %idx.ext88 = sext i32 %72 to i64, !dbg !12106
  %add.ptr89 = getelementptr inbounds i8, i8* %70, i64 %idx.ext88, !dbg !12106
  store i8* %add.ptr89, i8** %s2, align 8, !dbg !12107
  %73 = load i32, i32* %l, align 4, !dbg !12108
  %cmp90 = icmp sgt i32 %73, 1, !dbg !12110
  br i1 %cmp90, label %if.then92, label %if.end99, !dbg !12111

if.then92:                                        ; preds = %if.end81
  %74 = load i8*, i8** %s1, align 8, !dbg !12112
  %75 = load i8*, i8** %s2, align 8, !dbg !12114
  %76 = load i32, i32* %l, align 4, !dbg !12115
  %conv93 = sext i32 %76 to i64, !dbg !12115
  %call94 = call i32 @memcmp(i8* %74, i8* %75, i64 %conv93) #9, !dbg !12116
  store i32 %call94, i32* %cmp, align 4, !dbg !12117
  %77 = load i32, i32* %cmp, align 4, !dbg !12118
  %cmp95 = icmp ne i32 %77, 0, !dbg !12120
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !12121

if.then97:                                        ; preds = %if.then92
  %78 = load i32, i32* %cmp, align 4, !dbg !12122
  store i32 %78, i32* %retval, align 4, !dbg !12123
  br label %return, !dbg !12123

if.end98:                                         ; preds = %if.then92
  br label %if.end99, !dbg !12124

if.end99:                                         ; preds = %if.end98, %if.end81
  %79 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12125
  %ext_len100 = getelementptr inbounds %struct.isoent, %struct.isoent* %79, i32 0, i32 16, !dbg !12127
  %80 = load i32, i32* %ext_len100, align 4, !dbg !12127
  %81 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12128
  %ext_len101 = getelementptr inbounds %struct.isoent, %struct.isoent* %81, i32 0, i32 16, !dbg !12129
  %82 = load i32, i32* %ext_len101, align 4, !dbg !12129
  %cmp102 = icmp slt i32 %80, %82, !dbg !12130
  br i1 %cmp102, label %if.then104, label %if.else124, !dbg !12131

if.then104:                                       ; preds = %if.end99
  %83 = load i32, i32* %l, align 4, !dbg !12132
  %84 = load i8*, i8** %s2, align 8, !dbg !12134
  %idx.ext105 = sext i32 %83 to i64, !dbg !12134
  %add.ptr106 = getelementptr inbounds i8, i8* %84, i64 %idx.ext105, !dbg !12134
  store i8* %add.ptr106, i8** %s2, align 8, !dbg !12134
  %85 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12135
  %ext_len107 = getelementptr inbounds %struct.isoent, %struct.isoent* %85, i32 0, i32 16, !dbg !12136
  %86 = load i32, i32* %ext_len107, align 4, !dbg !12136
  %87 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12137
  %ext_len108 = getelementptr inbounds %struct.isoent, %struct.isoent* %87, i32 0, i32 16, !dbg !12138
  %88 = load i32, i32* %ext_len108, align 4, !dbg !12138
  %sub109 = sub nsw i32 %86, %88, !dbg !12139
  store i32 %sub109, i32* %l, align 4, !dbg !12140
  br label %while.cond110, !dbg !12141

while.cond110:                                    ; preds = %if.end122, %if.then104
  %89 = load i32, i32* %l, align 4, !dbg !12142
  %dec111 = add nsw i32 %89, -1, !dbg !12142
  store i32 %dec111, i32* %l, align 4, !dbg !12142
  %tobool112 = icmp ne i32 %89, 0, !dbg !12144
  br i1 %tobool112, label %while.body113, label %while.end123, !dbg !12144

while.body113:                                    ; preds = %while.cond110
  %90 = load i8*, i8** %s2, align 8, !dbg !12145
  %incdec.ptr114 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !12145
  store i8* %incdec.ptr114, i8** %s2, align 8, !dbg !12145
  %91 = load i8, i8* %90, align 1, !dbg !12147
  %conv115 = zext i8 %91 to i32, !dbg !12147
  %cmp116 = icmp ne i32 0, %conv115, !dbg !12148
  br i1 %cmp116, label %if.then118, label %if.end122, !dbg !12149

if.then118:                                       ; preds = %while.body113
  %92 = load i8*, i8** %s2, align 8, !dbg !12150
  %add.ptr119 = getelementptr inbounds i8, i8* %92, i64 -1, !dbg !12151
  %93 = load i8, i8* %add.ptr119, align 1, !dbg !12152
  %conv120 = zext i8 %93 to i32, !dbg !12152
  %sub121 = sub nsw i32 0, %conv120, !dbg !12153
  store i32 %sub121, i32* %retval, align 4, !dbg !12154
  br label %return, !dbg !12154

if.end122:                                        ; preds = %while.body113
  br label %while.cond110, !dbg !12155

while.end123:                                     ; preds = %while.cond110
  br label %if.end149, !dbg !12157

if.else124:                                       ; preds = %if.end99
  %94 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12158
  %ext_len125 = getelementptr inbounds %struct.isoent, %struct.isoent* %94, i32 0, i32 16, !dbg !12161
  %95 = load i32, i32* %ext_len125, align 4, !dbg !12161
  %96 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12162
  %ext_len126 = getelementptr inbounds %struct.isoent, %struct.isoent* %96, i32 0, i32 16, !dbg !12163
  %97 = load i32, i32* %ext_len126, align 4, !dbg !12163
  %cmp127 = icmp sgt i32 %95, %97, !dbg !12164
  br i1 %cmp127, label %if.then129, label %if.end148, !dbg !12158

if.then129:                                       ; preds = %if.else124
  %98 = load i32, i32* %l, align 4, !dbg !12165
  %99 = load i8*, i8** %s1, align 8, !dbg !12167
  %idx.ext130 = sext i32 %98 to i64, !dbg !12167
  %add.ptr131 = getelementptr inbounds i8, i8* %99, i64 %idx.ext130, !dbg !12167
  store i8* %add.ptr131, i8** %s1, align 8, !dbg !12167
  %100 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12168
  %ext_len132 = getelementptr inbounds %struct.isoent, %struct.isoent* %100, i32 0, i32 16, !dbg !12169
  %101 = load i32, i32* %ext_len132, align 4, !dbg !12169
  %102 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12170
  %ext_len133 = getelementptr inbounds %struct.isoent, %struct.isoent* %102, i32 0, i32 16, !dbg !12171
  %103 = load i32, i32* %ext_len133, align 4, !dbg !12171
  %sub134 = sub nsw i32 %101, %103, !dbg !12172
  store i32 %sub134, i32* %l, align 4, !dbg !12173
  br label %while.cond135, !dbg !12174

while.cond135:                                    ; preds = %if.end146, %if.then129
  %104 = load i32, i32* %l, align 4, !dbg !12175
  %dec136 = add nsw i32 %104, -1, !dbg !12175
  store i32 %dec136, i32* %l, align 4, !dbg !12175
  %tobool137 = icmp ne i32 %104, 0, !dbg !12177
  br i1 %tobool137, label %while.body138, label %while.end147, !dbg !12177

while.body138:                                    ; preds = %while.cond135
  %105 = load i8*, i8** %s1, align 8, !dbg !12178
  %incdec.ptr139 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !12178
  store i8* %incdec.ptr139, i8** %s1, align 8, !dbg !12178
  %106 = load i8, i8* %105, align 1, !dbg !12180
  %conv140 = zext i8 %106 to i32, !dbg !12180
  %cmp141 = icmp ne i32 0, %conv140, !dbg !12181
  br i1 %cmp141, label %if.then143, label %if.end146, !dbg !12182

if.then143:                                       ; preds = %while.body138
  %107 = load i8*, i8** %s1, align 8, !dbg !12183
  %add.ptr144 = getelementptr inbounds i8, i8* %107, i64 -1, !dbg !12184
  %108 = load i8, i8* %add.ptr144, align 1, !dbg !12185
  %conv145 = zext i8 %108 to i32, !dbg !12186
  store i32 %conv145, i32* %retval, align 4, !dbg !12187
  br label %return, !dbg !12187

if.end146:                                        ; preds = %while.body138
  br label %while.cond135, !dbg !12188

while.end147:                                     ; preds = %while.cond135
  br label %if.end148, !dbg !12190

if.end148:                                        ; preds = %while.end147, %if.else124
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %while.end123
  %109 = load i32, i32* %cmp, align 4, !dbg !12191
  store i32 %109, i32* %retval, align 4, !dbg !12192
  br label %return, !dbg !12192

return:                                           ; preds = %if.end149, %if.then143, %if.then118, %if.then97, %if.then73, %if.then68, %if.then63, %if.then54, %if.then42, %if.then19, %if.then7
  %110 = load i32, i32* %retval, align 4, !dbg !12193
  ret i32 %110, !dbg !12193
}

; Function Attrs: nounwind uwtable
define internal i32 @idr_ensure_poolsize(%struct.archive_write* %a, %struct.idr* %idr, i32 %cnt) #0 !dbg !748 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %idr.addr = alloca %struct.idr*, align 8
  %cnt.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %bk = alloca i32, align 4
  %psize = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !12194, metadata !986), !dbg !12195
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !12196, metadata !986), !dbg !12197
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !12198, metadata !986), !dbg !12199
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !12200
  %pool_size = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 3, !dbg !12202
  %1 = load i32, i32* %pool_size, align 8, !dbg !12202
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !12203
  %cmp = icmp slt i32 %1, %2, !dbg !12204
  br i1 %cmp, label %if.then, label %if.end6, !dbg !12205

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12206, metadata !986), !dbg !12208
  call void @llvm.dbg.declare(metadata i32* %bk, metadata !12209, metadata !986), !dbg !12211
  store i32 127, i32* %bk, align 4, !dbg !12211
  call void @llvm.dbg.declare(metadata i32* %psize, metadata !12212, metadata !986), !dbg !12213
  %3 = load i32, i32* %cnt.addr, align 4, !dbg !12214
  %add = add nsw i32 %3, 127, !dbg !12215
  %and = and i32 %add, -128, !dbg !12216
  store i32 %and, i32* %psize, align 4, !dbg !12217
  %4 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !12218
  %idrent_pool = getelementptr inbounds %struct.idr, %struct.idr* %4, i32 0, i32 0, !dbg !12219
  %5 = load %struct.idrent*, %struct.idrent** %idrent_pool, align 8, !dbg !12219
  %6 = bitcast %struct.idrent* %5 to i8*, !dbg !12218
  %7 = load i32, i32* %psize, align 4, !dbg !12220
  %conv = sext i32 %7 to i64, !dbg !12220
  %mul = mul i64 64, %conv, !dbg !12221
  %call = call i8* @realloc(i8* %6, i64 %mul) #8, !dbg !12222
  store i8* %call, i8** %p, align 8, !dbg !12223
  %8 = load i8*, i8** %p, align 8, !dbg !12224
  %cmp1 = icmp eq i8* %8, null, !dbg !12226
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !12227

if.then3:                                         ; preds = %if.then
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !12228
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %9, i32 0, i32 0, !dbg !12230
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0)), !dbg !12231
  store i32 -30, i32* %retval, align 4, !dbg !12232
  br label %return, !dbg !12232

if.end:                                           ; preds = %if.then
  %10 = load i8*, i8** %p, align 8, !dbg !12233
  %11 = bitcast i8* %10 to %struct.idrent*, !dbg !12234
  %12 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !12235
  %idrent_pool4 = getelementptr inbounds %struct.idr, %struct.idr* %12, i32 0, i32 0, !dbg !12236
  store %struct.idrent* %11, %struct.idrent** %idrent_pool4, align 8, !dbg !12237
  %13 = load i32, i32* %psize, align 4, !dbg !12238
  %14 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !12239
  %pool_size5 = getelementptr inbounds %struct.idr, %struct.idr* %14, i32 0, i32 3, !dbg !12240
  store i32 %13, i32* %pool_size5, align 8, !dbg !12241
  br label %if.end6, !dbg !12242

if.end6:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !12243
  br label %return, !dbg !12243

return:                                           ; preds = %if.end6, %if.then3
  %15 = load i32, i32* %retval, align 4, !dbg !12244
  ret i32 %15, !dbg !12244
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal void @idr_extend_identifier(%struct.idrent* %wnp, i32 %numsize, i32 %nullsize) #0 !dbg !766 {
entry:
  %wnp.addr = alloca %struct.idrent*, align 8
  %numsize.addr = alloca i32, align 4
  %nullsize.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %wnp_ext_off = alloca i32, align 4
  store %struct.idrent* %wnp, %struct.idrent** %wnp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idrent** %wnp.addr, metadata !12245, metadata !986), !dbg !12246
  store i32 %numsize, i32* %numsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numsize.addr, metadata !12247, metadata !986), !dbg !12248
  store i32 %nullsize, i32* %nullsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nullsize.addr, metadata !12249, metadata !986), !dbg !12250
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12251, metadata !986), !dbg !12252
  call void @llvm.dbg.declare(metadata i32* %wnp_ext_off, metadata !12253, metadata !986), !dbg !12254
  %0 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12255
  %isoent = getelementptr inbounds %struct.idrent, %struct.idrent* %0, i32 0, i32 3, !dbg !12256
  %1 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !12256
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %1, i32 0, i32 15, !dbg !12257
  %2 = load i32, i32* %ext_off, align 8, !dbg !12257
  store i32 %2, i32* %wnp_ext_off, align 4, !dbg !12258
  %3 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12259
  %noff = getelementptr inbounds %struct.idrent, %struct.idrent* %3, i32 0, i32 5, !dbg !12261
  %4 = load i32, i32* %noff, align 4, !dbg !12261
  %5 = load i32, i32* %numsize.addr, align 4, !dbg !12262
  %add = add nsw i32 %4, %5, !dbg !12263
  %6 = load i32, i32* %wnp_ext_off, align 4, !dbg !12264
  %cmp = icmp ne i32 %add, %6, !dbg !12265
  br i1 %cmp, label %if.then, label %if.end, !dbg !12266

if.then:                                          ; preds = %entry
  %7 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12267
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %7, i32 0, i32 3, !dbg !12269
  %8 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !12269
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 14, !dbg !12270
  %9 = load i8*, i8** %identifier, align 8, !dbg !12270
  store i8* %9, i8** %p, align 8, !dbg !12271
  %10 = load i8*, i8** %p, align 8, !dbg !12272
  %11 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12273
  %noff2 = getelementptr inbounds %struct.idrent, %struct.idrent* %11, i32 0, i32 5, !dbg !12274
  %12 = load i32, i32* %noff2, align 4, !dbg !12274
  %idx.ext = sext i32 %12 to i64, !dbg !12275
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !12275
  %13 = load i32, i32* %numsize.addr, align 4, !dbg !12276
  %idx.ext3 = sext i32 %13 to i64, !dbg !12277
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext3, !dbg !12277
  %14 = load i8*, i8** %p, align 8, !dbg !12278
  %15 = load i32, i32* %wnp_ext_off, align 4, !dbg !12279
  %idx.ext5 = sext i32 %15 to i64, !dbg !12280
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %idx.ext5, !dbg !12280
  %16 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12281
  %isoent7 = getelementptr inbounds %struct.idrent, %struct.idrent* %16, i32 0, i32 3, !dbg !12282
  %17 = load %struct.isoent*, %struct.isoent** %isoent7, align 8, !dbg !12282
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %17, i32 0, i32 16, !dbg !12283
  %18 = load i32, i32* %ext_len, align 4, !dbg !12283
  %19 = load i32, i32* %nullsize.addr, align 4, !dbg !12284
  %add8 = add nsw i32 %18, %19, !dbg !12285
  %conv = sext i32 %add8 to i64, !dbg !12281
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr4, i8* %add.ptr6, i64 %conv, i32 1, i1 false), !dbg !12286
  %20 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12287
  %noff9 = getelementptr inbounds %struct.idrent, %struct.idrent* %20, i32 0, i32 5, !dbg !12288
  %21 = load i32, i32* %noff9, align 4, !dbg !12288
  %22 = load i32, i32* %numsize.addr, align 4, !dbg !12289
  %add10 = add nsw i32 %21, %22, !dbg !12290
  store i32 %add10, i32* %wnp_ext_off, align 4, !dbg !12291
  %23 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12292
  %isoent11 = getelementptr inbounds %struct.idrent, %struct.idrent* %23, i32 0, i32 3, !dbg !12293
  %24 = load %struct.isoent*, %struct.isoent** %isoent11, align 8, !dbg !12293
  %ext_off12 = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 15, !dbg !12294
  store i32 %add10, i32* %ext_off12, align 8, !dbg !12295
  %25 = load i32, i32* %wnp_ext_off, align 4, !dbg !12296
  %26 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12297
  %isoent13 = getelementptr inbounds %struct.idrent, %struct.idrent* %26, i32 0, i32 3, !dbg !12298
  %27 = load %struct.isoent*, %struct.isoent** %isoent13, align 8, !dbg !12298
  %ext_len14 = getelementptr inbounds %struct.isoent, %struct.isoent* %27, i32 0, i32 16, !dbg !12299
  %28 = load i32, i32* %ext_len14, align 4, !dbg !12299
  %add15 = add nsw i32 %25, %28, !dbg !12300
  %29 = load %struct.idrent*, %struct.idrent** %wnp.addr, align 8, !dbg !12301
  %isoent16 = getelementptr inbounds %struct.idrent, %struct.idrent* %29, i32 0, i32 3, !dbg !12302
  %30 = load %struct.isoent*, %struct.isoent** %isoent16, align 8, !dbg !12302
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %30, i32 0, i32 17, !dbg !12303
  store i32 %add15, i32* %id_len, align 8, !dbg !12304
  br label %if.end, !dbg !12305

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12306
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_node_iso9660(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !771 {
entry:
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %e1 = alloca %struct.idrent*, align 8
  %e2 = alloca %struct.idrent*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !12307, metadata !986), !dbg !12308
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !12309, metadata !986), !dbg !12310
  call void @llvm.dbg.declare(metadata %struct.idrent** %e1, metadata !12311, metadata !986), !dbg !12312
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !12313
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.idrent*, !dbg !12314
  store %struct.idrent* %1, %struct.idrent** %e1, align 8, !dbg !12312
  call void @llvm.dbg.declare(metadata %struct.idrent** %e2, metadata !12315, metadata !986), !dbg !12316
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !12317
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.idrent*, !dbg !12318
  store %struct.idrent* %3, %struct.idrent** %e2, align 8, !dbg !12316
  %4 = load %struct.idrent*, %struct.idrent** %e2, align 8, !dbg !12319
  %isoent = getelementptr inbounds %struct.idrent, %struct.idrent* %4, i32 0, i32 3, !dbg !12320
  %5 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !12320
  %6 = load %struct.idrent*, %struct.idrent** %e1, align 8, !dbg !12321
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %6, i32 0, i32 3, !dbg !12322
  %7 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !12322
  %call = call i32 @isoent_cmp_iso9660_identifier(%struct.isoent* %5, %struct.isoent* %7), !dbg !12323
  ret i32 %call, !dbg !12324
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_key_iso9660(%struct.archive_rb_node* %node, i8* %key) #0 !dbg !773 {
entry:
  %node.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  %isoent = alloca %struct.isoent*, align 8
  %idrent = alloca %struct.idrent*, align 8
  store %struct.archive_rb_node* %node, %struct.archive_rb_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %node.addr, metadata !12325, metadata !986), !dbg !12326
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !12327, metadata !986), !dbg !12328
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !12329, metadata !986), !dbg !12330
  %0 = load i8*, i8** %key.addr, align 8, !dbg !12331
  %1 = bitcast i8* %0 to %struct.isoent*, !dbg !12332
  store %struct.isoent* %1, %struct.isoent** %isoent, align 8, !dbg !12330
  call void @llvm.dbg.declare(metadata %struct.idrent** %idrent, metadata !12333, metadata !986), !dbg !12334
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %node.addr, align 8, !dbg !12335
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.idrent*, !dbg !12336
  store %struct.idrent* %3, %struct.idrent** %idrent, align 8, !dbg !12334
  %4 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !12337
  %5 = load %struct.idrent*, %struct.idrent** %idrent, align 8, !dbg !12338
  %isoent1 = getelementptr inbounds %struct.idrent, %struct.idrent* %5, i32 0, i32 3, !dbg !12339
  %6 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !12339
  %call = call i32 @isoent_cmp_iso9660_identifier(%struct.isoent* %4, %struct.isoent* %6), !dbg !12340
  ret i32 %call, !dbg !12341
}

; Function Attrs: nounwind uwtable
define internal void @idr_set_num(i8* %p, i32 %num) #0 !dbg !774 {
entry:
  %p.addr = alloca i8*, align 8
  %num.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12342, metadata !986), !dbg !12343
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !12344, metadata !986), !dbg !12345
  %0 = load i32, i32* %num.addr, align 4, !dbg !12346
  %conv = sext i32 %0 to i64, !dbg !12346
  %rem = urem i64 %conv, 46656, !dbg !12346
  %conv1 = trunc i64 %rem to i32, !dbg !12346
  store i32 %conv1, i32* %num.addr, align 4, !dbg !12346
  %1 = load i32, i32* %num.addr, align 4, !dbg !12347
  %conv2 = sext i32 %1 to i64, !dbg !12347
  %div = udiv i64 %conv2, 1296, !dbg !12348
  %arrayidx = getelementptr inbounds [36 x i8], [36 x i8]* @idr_set_num.xdig, i64 0, i64 %div, !dbg !12349
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12349
  %3 = load i8*, i8** %p.addr, align 8, !dbg !12350
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !12350
  store i8 %2, i8* %arrayidx3, align 1, !dbg !12351
  %4 = load i32, i32* %num.addr, align 4, !dbg !12352
  %conv4 = sext i32 %4 to i64, !dbg !12352
  %rem5 = urem i64 %conv4, 1296, !dbg !12352
  %conv6 = trunc i64 %rem5 to i32, !dbg !12352
  store i32 %conv6, i32* %num.addr, align 4, !dbg !12352
  %5 = load i32, i32* %num.addr, align 4, !dbg !12353
  %conv7 = sext i32 %5 to i64, !dbg !12353
  %div8 = udiv i64 %conv7, 36, !dbg !12354
  %arrayidx9 = getelementptr inbounds [36 x i8], [36 x i8]* @idr_set_num.xdig, i64 0, i64 %div8, !dbg !12355
  %6 = load i8, i8* %arrayidx9, align 1, !dbg !12355
  %7 = load i8*, i8** %p.addr, align 8, !dbg !12356
  %arrayidx10 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !12356
  store i8 %6, i8* %arrayidx10, align 1, !dbg !12357
  %8 = load i32, i32* %num.addr, align 4, !dbg !12358
  %conv11 = sext i32 %8 to i64, !dbg !12358
  %rem12 = urem i64 %conv11, 36, !dbg !12358
  %conv13 = trunc i64 %rem12 to i32, !dbg !12358
  store i32 %conv13, i32* %num.addr, align 4, !dbg !12358
  %9 = load i32, i32* %num.addr, align 4, !dbg !12359
  %idxprom = sext i32 %9 to i64, !dbg !12360
  %arrayidx14 = getelementptr inbounds [36 x i8], [36 x i8]* @idr_set_num.xdig, i64 0, i64 %idxprom, !dbg !12360
  %10 = load i8, i8* %arrayidx14, align 1, !dbg !12360
  %11 = load i8*, i8** %p.addr, align 8, !dbg !12361
  %arrayidx15 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !12361
  store i8 %10, i8* %arrayidx15, align 1, !dbg !12362
  ret void, !dbg !12363
}

; Function Attrs: nounwind uwtable
define internal i32 @isoent_cmp_iso9660_identifier(%struct.isoent* %p1, %struct.isoent* %p2) #0 !dbg !772 {
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca %struct.isoent*, align 8
  %p2.addr = alloca %struct.isoent*, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %cmp = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.isoent* %p1, %struct.isoent** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %p1.addr, metadata !12364, metadata !986), !dbg !12365
  store %struct.isoent* %p2, %struct.isoent** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %p2.addr, metadata !12366, metadata !986), !dbg !12367
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !12368, metadata !986), !dbg !12369
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !12370, metadata !986), !dbg !12371
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !12372, metadata !986), !dbg !12373
  call void @llvm.dbg.declare(metadata i32* %l, metadata !12374, metadata !986), !dbg !12375
  %0 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12376
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 14, !dbg !12377
  %1 = load i8*, i8** %identifier, align 8, !dbg !12377
  store i8* %1, i8** %s1, align 8, !dbg !12378
  %2 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12379
  %identifier1 = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 14, !dbg !12380
  %3 = load i8*, i8** %identifier1, align 8, !dbg !12380
  store i8* %3, i8** %s2, align 8, !dbg !12381
  %4 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12382
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 15, !dbg !12383
  %5 = load i32, i32* %ext_off, align 8, !dbg !12383
  store i32 %5, i32* %l, align 4, !dbg !12384
  %6 = load i32, i32* %l, align 4, !dbg !12385
  %7 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12387
  %ext_off2 = getelementptr inbounds %struct.isoent, %struct.isoent* %7, i32 0, i32 15, !dbg !12388
  %8 = load i32, i32* %ext_off2, align 8, !dbg !12388
  %cmp3 = icmp sgt i32 %6, %8, !dbg !12389
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12390

if.then:                                          ; preds = %entry
  %9 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12391
  %ext_off4 = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 15, !dbg !12392
  %10 = load i32, i32* %ext_off4, align 8, !dbg !12392
  store i32 %10, i32* %l, align 4, !dbg !12393
  br label %if.end, !dbg !12394

if.end:                                           ; preds = %if.then, %entry
  %11 = load i8*, i8** %s1, align 8, !dbg !12395
  %12 = load i8*, i8** %s2, align 8, !dbg !12396
  %13 = load i32, i32* %l, align 4, !dbg !12397
  %conv = sext i32 %13 to i64, !dbg !12397
  %call = call i32 @memcmp(i8* %11, i8* %12, i64 %conv) #9, !dbg !12398
  store i32 %call, i32* %cmp, align 4, !dbg !12399
  %14 = load i32, i32* %cmp, align 4, !dbg !12400
  %cmp5 = icmp ne i32 %14, 0, !dbg !12402
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12403

if.then7:                                         ; preds = %if.end
  %15 = load i32, i32* %cmp, align 4, !dbg !12404
  store i32 %15, i32* %retval, align 4, !dbg !12405
  br label %return, !dbg !12405

if.end8:                                          ; preds = %if.end
  %16 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12406
  %ext_off9 = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 15, !dbg !12408
  %17 = load i32, i32* %ext_off9, align 8, !dbg !12408
  %18 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12409
  %ext_off10 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 15, !dbg !12410
  %19 = load i32, i32* %ext_off10, align 8, !dbg !12410
  %cmp11 = icmp slt i32 %17, %19, !dbg !12411
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !12412

if.then13:                                        ; preds = %if.end8
  %20 = load i32, i32* %l, align 4, !dbg !12413
  %21 = load i8*, i8** %s2, align 8, !dbg !12415
  %idx.ext = sext i32 %20 to i64, !dbg !12415
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !12415
  store i8* %add.ptr, i8** %s2, align 8, !dbg !12415
  %22 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12416
  %ext_off14 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 15, !dbg !12417
  %23 = load i32, i32* %ext_off14, align 8, !dbg !12417
  %24 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12418
  %ext_off15 = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 15, !dbg !12419
  %25 = load i32, i32* %ext_off15, align 8, !dbg !12419
  %sub = sub nsw i32 %23, %25, !dbg !12420
  store i32 %sub, i32* %l, align 4, !dbg !12421
  br label %while.cond, !dbg !12422

while.cond:                                       ; preds = %if.end23, %if.then13
  %26 = load i32, i32* %l, align 4, !dbg !12423
  %dec = add nsw i32 %26, -1, !dbg !12423
  store i32 %dec, i32* %l, align 4, !dbg !12423
  %tobool = icmp ne i32 %26, 0, !dbg !12425
  br i1 %tobool, label %while.body, label %while.end, !dbg !12425

while.body:                                       ; preds = %while.cond
  %27 = load i8*, i8** %s2, align 8, !dbg !12426
  %incdec.ptr = getelementptr inbounds i8, i8* %27, i32 1, !dbg !12426
  store i8* %incdec.ptr, i8** %s2, align 8, !dbg !12426
  %28 = load i8, i8* %27, align 1, !dbg !12428
  %conv16 = sext i8 %28 to i32, !dbg !12428
  %cmp17 = icmp ne i32 32, %conv16, !dbg !12429
  br i1 %cmp17, label %if.then19, label %if.end23, !dbg !12430

if.then19:                                        ; preds = %while.body
  %29 = load i8*, i8** %s2, align 8, !dbg !12431
  %add.ptr20 = getelementptr inbounds i8, i8* %29, i64 -1, !dbg !12432
  %30 = load i8, i8* %add.ptr20, align 1, !dbg !12433
  %conv21 = zext i8 %30 to i32, !dbg !12433
  %sub22 = sub nsw i32 32, %conv21, !dbg !12434
  store i32 %sub22, i32* %retval, align 4, !dbg !12435
  br label %return, !dbg !12435

if.end23:                                         ; preds = %while.body
  br label %while.cond, !dbg !12436

while.end:                                        ; preds = %while.cond
  br label %if.end49, !dbg !12438

if.else:                                          ; preds = %if.end8
  %31 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12439
  %ext_off24 = getelementptr inbounds %struct.isoent, %struct.isoent* %31, i32 0, i32 15, !dbg !12442
  %32 = load i32, i32* %ext_off24, align 8, !dbg !12442
  %33 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12443
  %ext_off25 = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 15, !dbg !12444
  %34 = load i32, i32* %ext_off25, align 8, !dbg !12444
  %cmp26 = icmp sgt i32 %32, %34, !dbg !12445
  br i1 %cmp26, label %if.then28, label %if.end48, !dbg !12439

if.then28:                                        ; preds = %if.else
  %35 = load i32, i32* %l, align 4, !dbg !12446
  %36 = load i8*, i8** %s1, align 8, !dbg !12448
  %idx.ext29 = sext i32 %35 to i64, !dbg !12448
  %add.ptr30 = getelementptr inbounds i8, i8* %36, i64 %idx.ext29, !dbg !12448
  store i8* %add.ptr30, i8** %s1, align 8, !dbg !12448
  %37 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12449
  %ext_off31 = getelementptr inbounds %struct.isoent, %struct.isoent* %37, i32 0, i32 15, !dbg !12450
  %38 = load i32, i32* %ext_off31, align 8, !dbg !12450
  %39 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12451
  %ext_off32 = getelementptr inbounds %struct.isoent, %struct.isoent* %39, i32 0, i32 15, !dbg !12452
  %40 = load i32, i32* %ext_off32, align 8, !dbg !12452
  %sub33 = sub nsw i32 %38, %40, !dbg !12453
  store i32 %sub33, i32* %l, align 4, !dbg !12454
  br label %while.cond34, !dbg !12455

while.cond34:                                     ; preds = %if.end46, %if.then28
  %41 = load i32, i32* %l, align 4, !dbg !12456
  %dec35 = add nsw i32 %41, -1, !dbg !12456
  store i32 %dec35, i32* %l, align 4, !dbg !12456
  %tobool36 = icmp ne i32 %41, 0, !dbg !12458
  br i1 %tobool36, label %while.body37, label %while.end47, !dbg !12458

while.body37:                                     ; preds = %while.cond34
  %42 = load i8*, i8** %s1, align 8, !dbg !12459
  %incdec.ptr38 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !12459
  store i8* %incdec.ptr38, i8** %s1, align 8, !dbg !12459
  %43 = load i8, i8* %42, align 1, !dbg !12461
  %conv39 = sext i8 %43 to i32, !dbg !12461
  %cmp40 = icmp ne i32 32, %conv39, !dbg !12462
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !12463

if.then42:                                        ; preds = %while.body37
  %44 = load i8*, i8** %s1, align 8, !dbg !12464
  %add.ptr43 = getelementptr inbounds i8, i8* %44, i64 -1, !dbg !12465
  %45 = load i8, i8* %add.ptr43, align 1, !dbg !12466
  %conv44 = zext i8 %45 to i32, !dbg !12466
  %sub45 = sub nsw i32 %conv44, 32, !dbg !12467
  store i32 %sub45, i32* %retval, align 4, !dbg !12468
  br label %return, !dbg !12468

if.end46:                                         ; preds = %while.body37
  br label %while.cond34, !dbg !12469

while.end47:                                      ; preds = %while.cond34
  br label %if.end48, !dbg !12471

if.end48:                                         ; preds = %while.end47, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %while.end
  %46 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12472
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %46, i32 0, i32 16, !dbg !12474
  %47 = load i32, i32* %ext_len, align 4, !dbg !12474
  %cmp50 = icmp eq i32 %47, 0, !dbg !12475
  br i1 %cmp50, label %land.lhs.true, label %if.end56, !dbg !12476

land.lhs.true:                                    ; preds = %if.end49
  %48 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12477
  %ext_len52 = getelementptr inbounds %struct.isoent, %struct.isoent* %48, i32 0, i32 16, !dbg !12479
  %49 = load i32, i32* %ext_len52, align 4, !dbg !12479
  %cmp53 = icmp eq i32 %49, 0, !dbg !12480
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !12481

if.then55:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !12482
  br label %return, !dbg !12482

if.end56:                                         ; preds = %land.lhs.true, %if.end49
  %50 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12483
  %ext_len57 = getelementptr inbounds %struct.isoent, %struct.isoent* %50, i32 0, i32 16, !dbg !12485
  %51 = load i32, i32* %ext_len57, align 4, !dbg !12485
  %cmp58 = icmp eq i32 %51, 1, !dbg !12486
  br i1 %cmp58, label %land.lhs.true60, label %if.end65, !dbg !12487

land.lhs.true60:                                  ; preds = %if.end56
  %52 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12488
  %ext_len61 = getelementptr inbounds %struct.isoent, %struct.isoent* %52, i32 0, i32 16, !dbg !12490
  %53 = load i32, i32* %ext_len61, align 4, !dbg !12490
  %cmp62 = icmp eq i32 %53, 1, !dbg !12491
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !12492

if.then64:                                        ; preds = %land.lhs.true60
  store i32 0, i32* %retval, align 4, !dbg !12493
  br label %return, !dbg !12493

if.end65:                                         ; preds = %land.lhs.true60, %if.end56
  %54 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12494
  %ext_len66 = getelementptr inbounds %struct.isoent, %struct.isoent* %54, i32 0, i32 16, !dbg !12496
  %55 = load i32, i32* %ext_len66, align 4, !dbg !12496
  %cmp67 = icmp sle i32 %55, 1, !dbg !12497
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !12498

if.then69:                                        ; preds = %if.end65
  store i32 -1, i32* %retval, align 4, !dbg !12499
  br label %return, !dbg !12499

if.end70:                                         ; preds = %if.end65
  %56 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12500
  %ext_len71 = getelementptr inbounds %struct.isoent, %struct.isoent* %56, i32 0, i32 16, !dbg !12502
  %57 = load i32, i32* %ext_len71, align 4, !dbg !12502
  %cmp72 = icmp sle i32 %57, 1, !dbg !12503
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !12504

if.then74:                                        ; preds = %if.end70
  store i32 1, i32* %retval, align 4, !dbg !12505
  br label %return, !dbg !12505

if.end75:                                         ; preds = %if.end70
  %58 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12506
  %ext_len76 = getelementptr inbounds %struct.isoent, %struct.isoent* %58, i32 0, i32 16, !dbg !12507
  %59 = load i32, i32* %ext_len76, align 4, !dbg !12507
  store i32 %59, i32* %l, align 4, !dbg !12508
  %60 = load i32, i32* %l, align 4, !dbg !12509
  %61 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12511
  %ext_len77 = getelementptr inbounds %struct.isoent, %struct.isoent* %61, i32 0, i32 16, !dbg !12512
  %62 = load i32, i32* %ext_len77, align 4, !dbg !12512
  %cmp78 = icmp sgt i32 %60, %62, !dbg !12513
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !12514

if.then80:                                        ; preds = %if.end75
  %63 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12515
  %ext_len81 = getelementptr inbounds %struct.isoent, %struct.isoent* %63, i32 0, i32 16, !dbg !12516
  %64 = load i32, i32* %ext_len81, align 4, !dbg !12516
  store i32 %64, i32* %l, align 4, !dbg !12517
  br label %if.end82, !dbg !12518

if.end82:                                         ; preds = %if.then80, %if.end75
  %65 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12519
  %identifier83 = getelementptr inbounds %struct.isoent, %struct.isoent* %65, i32 0, i32 14, !dbg !12520
  %66 = load i8*, i8** %identifier83, align 8, !dbg !12520
  %67 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12521
  %ext_off84 = getelementptr inbounds %struct.isoent, %struct.isoent* %67, i32 0, i32 15, !dbg !12522
  %68 = load i32, i32* %ext_off84, align 8, !dbg !12522
  %idx.ext85 = sext i32 %68 to i64, !dbg !12523
  %add.ptr86 = getelementptr inbounds i8, i8* %66, i64 %idx.ext85, !dbg !12523
  store i8* %add.ptr86, i8** %s1, align 8, !dbg !12524
  %69 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12525
  %identifier87 = getelementptr inbounds %struct.isoent, %struct.isoent* %69, i32 0, i32 14, !dbg !12526
  %70 = load i8*, i8** %identifier87, align 8, !dbg !12526
  %71 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12527
  %ext_off88 = getelementptr inbounds %struct.isoent, %struct.isoent* %71, i32 0, i32 15, !dbg !12528
  %72 = load i32, i32* %ext_off88, align 8, !dbg !12528
  %idx.ext89 = sext i32 %72 to i64, !dbg !12529
  %add.ptr90 = getelementptr inbounds i8, i8* %70, i64 %idx.ext89, !dbg !12529
  store i8* %add.ptr90, i8** %s2, align 8, !dbg !12530
  %73 = load i32, i32* %l, align 4, !dbg !12531
  %cmp91 = icmp sgt i32 %73, 1, !dbg !12533
  br i1 %cmp91, label %if.then93, label %if.end100, !dbg !12534

if.then93:                                        ; preds = %if.end82
  %74 = load i8*, i8** %s1, align 8, !dbg !12535
  %75 = load i8*, i8** %s2, align 8, !dbg !12537
  %76 = load i32, i32* %l, align 4, !dbg !12538
  %conv94 = sext i32 %76 to i64, !dbg !12538
  %call95 = call i32 @memcmp(i8* %74, i8* %75, i64 %conv94) #9, !dbg !12539
  store i32 %call95, i32* %cmp, align 4, !dbg !12540
  %77 = load i32, i32* %cmp, align 4, !dbg !12541
  %cmp96 = icmp ne i32 %77, 0, !dbg !12543
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !12544

if.then98:                                        ; preds = %if.then93
  %78 = load i32, i32* %cmp, align 4, !dbg !12545
  store i32 %78, i32* %retval, align 4, !dbg !12546
  br label %return, !dbg !12546

if.end99:                                         ; preds = %if.then93
  br label %if.end100, !dbg !12547

if.end100:                                        ; preds = %if.end99, %if.end82
  %79 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12548
  %ext_len101 = getelementptr inbounds %struct.isoent, %struct.isoent* %79, i32 0, i32 16, !dbg !12550
  %80 = load i32, i32* %ext_len101, align 4, !dbg !12550
  %81 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12551
  %ext_len102 = getelementptr inbounds %struct.isoent, %struct.isoent* %81, i32 0, i32 16, !dbg !12552
  %82 = load i32, i32* %ext_len102, align 4, !dbg !12552
  %cmp103 = icmp slt i32 %80, %82, !dbg !12553
  br i1 %cmp103, label %if.then105, label %if.else125, !dbg !12554

if.then105:                                       ; preds = %if.end100
  %83 = load i32, i32* %l, align 4, !dbg !12555
  %84 = load i8*, i8** %s2, align 8, !dbg !12557
  %idx.ext106 = sext i32 %83 to i64, !dbg !12557
  %add.ptr107 = getelementptr inbounds i8, i8* %84, i64 %idx.ext106, !dbg !12557
  store i8* %add.ptr107, i8** %s2, align 8, !dbg !12557
  %85 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12558
  %ext_len108 = getelementptr inbounds %struct.isoent, %struct.isoent* %85, i32 0, i32 16, !dbg !12559
  %86 = load i32, i32* %ext_len108, align 4, !dbg !12559
  %87 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12560
  %ext_len109 = getelementptr inbounds %struct.isoent, %struct.isoent* %87, i32 0, i32 16, !dbg !12561
  %88 = load i32, i32* %ext_len109, align 4, !dbg !12561
  %sub110 = sub nsw i32 %86, %88, !dbg !12562
  store i32 %sub110, i32* %l, align 4, !dbg !12563
  br label %while.cond111, !dbg !12564

while.cond111:                                    ; preds = %if.end123, %if.then105
  %89 = load i32, i32* %l, align 4, !dbg !12565
  %dec112 = add nsw i32 %89, -1, !dbg !12565
  store i32 %dec112, i32* %l, align 4, !dbg !12565
  %tobool113 = icmp ne i32 %89, 0, !dbg !12567
  br i1 %tobool113, label %while.body114, label %while.end124, !dbg !12567

while.body114:                                    ; preds = %while.cond111
  %90 = load i8*, i8** %s2, align 8, !dbg !12568
  %incdec.ptr115 = getelementptr inbounds i8, i8* %90, i32 1, !dbg !12568
  store i8* %incdec.ptr115, i8** %s2, align 8, !dbg !12568
  %91 = load i8, i8* %90, align 1, !dbg !12570
  %conv116 = sext i8 %91 to i32, !dbg !12570
  %cmp117 = icmp ne i32 32, %conv116, !dbg !12571
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !12572

if.then119:                                       ; preds = %while.body114
  %92 = load i8*, i8** %s2, align 8, !dbg !12573
  %add.ptr120 = getelementptr inbounds i8, i8* %92, i64 -1, !dbg !12574
  %93 = load i8, i8* %add.ptr120, align 1, !dbg !12575
  %conv121 = zext i8 %93 to i32, !dbg !12575
  %sub122 = sub nsw i32 32, %conv121, !dbg !12576
  store i32 %sub122, i32* %retval, align 4, !dbg !12577
  br label %return, !dbg !12577

if.end123:                                        ; preds = %while.body114
  br label %while.cond111, !dbg !12578

while.end124:                                     ; preds = %while.cond111
  br label %if.end151, !dbg !12580

if.else125:                                       ; preds = %if.end100
  %94 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12581
  %ext_len126 = getelementptr inbounds %struct.isoent, %struct.isoent* %94, i32 0, i32 16, !dbg !12584
  %95 = load i32, i32* %ext_len126, align 4, !dbg !12584
  %96 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12585
  %ext_len127 = getelementptr inbounds %struct.isoent, %struct.isoent* %96, i32 0, i32 16, !dbg !12586
  %97 = load i32, i32* %ext_len127, align 4, !dbg !12586
  %cmp128 = icmp sgt i32 %95, %97, !dbg !12587
  br i1 %cmp128, label %if.then130, label %if.end150, !dbg !12581

if.then130:                                       ; preds = %if.else125
  %98 = load i32, i32* %l, align 4, !dbg !12588
  %99 = load i8*, i8** %s1, align 8, !dbg !12590
  %idx.ext131 = sext i32 %98 to i64, !dbg !12590
  %add.ptr132 = getelementptr inbounds i8, i8* %99, i64 %idx.ext131, !dbg !12590
  store i8* %add.ptr132, i8** %s1, align 8, !dbg !12590
  %100 = load %struct.isoent*, %struct.isoent** %p1.addr, align 8, !dbg !12591
  %ext_len133 = getelementptr inbounds %struct.isoent, %struct.isoent* %100, i32 0, i32 16, !dbg !12592
  %101 = load i32, i32* %ext_len133, align 4, !dbg !12592
  %102 = load %struct.isoent*, %struct.isoent** %p2.addr, align 8, !dbg !12593
  %ext_len134 = getelementptr inbounds %struct.isoent, %struct.isoent* %102, i32 0, i32 16, !dbg !12594
  %103 = load i32, i32* %ext_len134, align 4, !dbg !12594
  %sub135 = sub nsw i32 %101, %103, !dbg !12595
  store i32 %sub135, i32* %l, align 4, !dbg !12596
  br label %while.cond136, !dbg !12597

while.cond136:                                    ; preds = %if.end148, %if.then130
  %104 = load i32, i32* %l, align 4, !dbg !12598
  %dec137 = add nsw i32 %104, -1, !dbg !12598
  store i32 %dec137, i32* %l, align 4, !dbg !12598
  %tobool138 = icmp ne i32 %104, 0, !dbg !12600
  br i1 %tobool138, label %while.body139, label %while.end149, !dbg !12600

while.body139:                                    ; preds = %while.cond136
  %105 = load i8*, i8** %s1, align 8, !dbg !12601
  %incdec.ptr140 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !12601
  store i8* %incdec.ptr140, i8** %s1, align 8, !dbg !12601
  %106 = load i8, i8* %105, align 1, !dbg !12603
  %conv141 = sext i8 %106 to i32, !dbg !12603
  %cmp142 = icmp ne i32 32, %conv141, !dbg !12604
  br i1 %cmp142, label %if.then144, label %if.end148, !dbg !12605

if.then144:                                       ; preds = %while.body139
  %107 = load i8*, i8** %s1, align 8, !dbg !12606
  %add.ptr145 = getelementptr inbounds i8, i8* %107, i64 -1, !dbg !12607
  %108 = load i8, i8* %add.ptr145, align 1, !dbg !12608
  %conv146 = zext i8 %108 to i32, !dbg !12608
  %sub147 = sub nsw i32 %conv146, 32, !dbg !12609
  store i32 %sub147, i32* %retval, align 4, !dbg !12610
  br label %return, !dbg !12610

if.end148:                                        ; preds = %while.body139
  br label %while.cond136, !dbg !12611

while.end149:                                     ; preds = %while.cond136
  br label %if.end150, !dbg !12613

if.end150:                                        ; preds = %while.end149, %if.else125
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %while.end124
  %109 = load i32, i32* %cmp, align 4, !dbg !12614
  store i32 %109, i32* %retval, align 4, !dbg !12615
  br label %return, !dbg !12615

return:                                           ; preds = %if.end151, %if.then144, %if.then119, %if.then98, %if.then74, %if.then69, %if.then64, %if.then55, %if.then42, %if.then19, %if.then7
  %110 = load i32, i32* %retval, align 4, !dbg !12616
  ret i32 %110, !dbg !12616
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @_compare_path_table(i8* %v1, i8* %v2) #0 !dbg !782 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %p1 = alloca %struct.isoent*, align 8
  %p2 = alloca %struct.isoent*, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %cmp = alloca i32, align 4
  %l = alloca i32, align 4
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !12617, metadata !986), !dbg !12618
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !12619, metadata !986), !dbg !12620
  call void @llvm.dbg.declare(metadata %struct.isoent** %p1, metadata !12621, metadata !986), !dbg !12622
  call void @llvm.dbg.declare(metadata %struct.isoent** %p2, metadata !12623, metadata !986), !dbg !12624
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !12625, metadata !986), !dbg !12626
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !12627, metadata !986), !dbg !12628
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !12629, metadata !986), !dbg !12630
  call void @llvm.dbg.declare(metadata i32* %l, metadata !12631, metadata !986), !dbg !12632
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !12633
  %1 = ptrtoint i8* %0 to i64, !dbg !12634
  %2 = inttoptr i64 %1 to %struct.isoent**, !dbg !12635
  %3 = load %struct.isoent*, %struct.isoent** %2, align 8, !dbg !12636
  store %struct.isoent* %3, %struct.isoent** %p1, align 8, !dbg !12637
  %4 = load i8*, i8** %v2.addr, align 8, !dbg !12638
  %5 = ptrtoint i8* %4 to i64, !dbg !12639
  %6 = inttoptr i64 %5 to %struct.isoent**, !dbg !12640
  %7 = load %struct.isoent*, %struct.isoent** %6, align 8, !dbg !12641
  store %struct.isoent* %7, %struct.isoent** %p2, align 8, !dbg !12642
  %8 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12643
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 2, !dbg !12644
  %9 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !12644
  %dir_number = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 10, !dbg !12645
  %10 = load i32, i32* %dir_number, align 8, !dbg !12645
  %11 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12646
  %parent1 = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 2, !dbg !12647
  %12 = load %struct.isoent*, %struct.isoent** %parent1, align 8, !dbg !12647
  %dir_number2 = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 10, !dbg !12648
  %13 = load i32, i32* %dir_number2, align 8, !dbg !12648
  %sub = sub nsw i32 %10, %13, !dbg !12649
  store i32 %sub, i32* %cmp, align 4, !dbg !12650
  %14 = load i32, i32* %cmp, align 4, !dbg !12651
  %cmp3 = icmp ne i32 %14, 0, !dbg !12653
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12654

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %cmp, align 4, !dbg !12655
  store i32 %15, i32* %retval, align 4, !dbg !12656
  br label %return, !dbg !12656

if.end:                                           ; preds = %entry
  %16 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12657
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 14, !dbg !12658
  %17 = load i8*, i8** %identifier, align 8, !dbg !12658
  store i8* %17, i8** %s1, align 8, !dbg !12659
  %18 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12660
  %identifier4 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 14, !dbg !12661
  %19 = load i8*, i8** %identifier4, align 8, !dbg !12661
  store i8* %19, i8** %s2, align 8, !dbg !12662
  %20 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12663
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 15, !dbg !12664
  %21 = load i32, i32* %ext_off, align 8, !dbg !12664
  store i32 %21, i32* %l, align 4, !dbg !12665
  %22 = load i32, i32* %l, align 4, !dbg !12666
  %23 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12668
  %ext_off5 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 15, !dbg !12669
  %24 = load i32, i32* %ext_off5, align 8, !dbg !12669
  %cmp6 = icmp sgt i32 %22, %24, !dbg !12670
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !12671

if.then7:                                         ; preds = %if.end
  %25 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12672
  %ext_off8 = getelementptr inbounds %struct.isoent, %struct.isoent* %25, i32 0, i32 15, !dbg !12673
  %26 = load i32, i32* %ext_off8, align 8, !dbg !12673
  store i32 %26, i32* %l, align 4, !dbg !12674
  br label %if.end9, !dbg !12675

if.end9:                                          ; preds = %if.then7, %if.end
  %27 = load i8*, i8** %s1, align 8, !dbg !12676
  %28 = load i8*, i8** %s2, align 8, !dbg !12677
  %29 = load i32, i32* %l, align 4, !dbg !12678
  %conv = sext i32 %29 to i64, !dbg !12678
  %call = call i32 @strncmp(i8* %27, i8* %28, i64 %conv) #9, !dbg !12679
  store i32 %call, i32* %cmp, align 4, !dbg !12680
  %30 = load i32, i32* %cmp, align 4, !dbg !12681
  %cmp10 = icmp ne i32 %30, 0, !dbg !12683
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12684

if.then12:                                        ; preds = %if.end9
  %31 = load i32, i32* %cmp, align 4, !dbg !12685
  store i32 %31, i32* %retval, align 4, !dbg !12686
  br label %return, !dbg !12686

if.end13:                                         ; preds = %if.end9
  %32 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12687
  %ext_off14 = getelementptr inbounds %struct.isoent, %struct.isoent* %32, i32 0, i32 15, !dbg !12689
  %33 = load i32, i32* %ext_off14, align 8, !dbg !12689
  %34 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12690
  %ext_off15 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 15, !dbg !12691
  %35 = load i32, i32* %ext_off15, align 8, !dbg !12691
  %cmp16 = icmp slt i32 %33, %35, !dbg !12692
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !12693

if.then18:                                        ; preds = %if.end13
  %36 = load i32, i32* %l, align 4, !dbg !12694
  %37 = load i8*, i8** %s2, align 8, !dbg !12696
  %idx.ext = sext i32 %36 to i64, !dbg !12696
  %add.ptr = getelementptr inbounds i8, i8* %37, i64 %idx.ext, !dbg !12696
  store i8* %add.ptr, i8** %s2, align 8, !dbg !12696
  %38 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12697
  %ext_off19 = getelementptr inbounds %struct.isoent, %struct.isoent* %38, i32 0, i32 15, !dbg !12698
  %39 = load i32, i32* %ext_off19, align 8, !dbg !12698
  %40 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12699
  %ext_off20 = getelementptr inbounds %struct.isoent, %struct.isoent* %40, i32 0, i32 15, !dbg !12700
  %41 = load i32, i32* %ext_off20, align 8, !dbg !12700
  %sub21 = sub nsw i32 %39, %41, !dbg !12701
  store i32 %sub21, i32* %l, align 4, !dbg !12702
  br label %while.cond, !dbg !12703

while.cond:                                       ; preds = %if.end29, %if.then18
  %42 = load i32, i32* %l, align 4, !dbg !12704
  %dec = add nsw i32 %42, -1, !dbg !12704
  store i32 %dec, i32* %l, align 4, !dbg !12704
  %tobool = icmp ne i32 %42, 0, !dbg !12706
  br i1 %tobool, label %while.body, label %while.end, !dbg !12706

while.body:                                       ; preds = %while.cond
  %43 = load i8*, i8** %s2, align 8, !dbg !12707
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1, !dbg !12707
  store i8* %incdec.ptr, i8** %s2, align 8, !dbg !12707
  %44 = load i8, i8* %43, align 1, !dbg !12709
  %conv22 = sext i8 %44 to i32, !dbg !12709
  %cmp23 = icmp ne i32 32, %conv22, !dbg !12710
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !12711

if.then25:                                        ; preds = %while.body
  %45 = load i8*, i8** %s2, align 8, !dbg !12712
  %add.ptr26 = getelementptr inbounds i8, i8* %45, i64 -1, !dbg !12713
  %46 = load i8, i8* %add.ptr26, align 1, !dbg !12714
  %conv27 = zext i8 %46 to i32, !dbg !12714
  %sub28 = sub nsw i32 32, %conv27, !dbg !12715
  store i32 %sub28, i32* %retval, align 4, !dbg !12716
  br label %return, !dbg !12716

if.end29:                                         ; preds = %while.body
  br label %while.cond, !dbg !12717

while.end:                                        ; preds = %while.cond
  br label %if.end55, !dbg !12719

if.else:                                          ; preds = %if.end13
  %47 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12720
  %ext_off30 = getelementptr inbounds %struct.isoent, %struct.isoent* %47, i32 0, i32 15, !dbg !12723
  %48 = load i32, i32* %ext_off30, align 8, !dbg !12723
  %49 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12724
  %ext_off31 = getelementptr inbounds %struct.isoent, %struct.isoent* %49, i32 0, i32 15, !dbg !12725
  %50 = load i32, i32* %ext_off31, align 8, !dbg !12725
  %cmp32 = icmp sgt i32 %48, %50, !dbg !12726
  br i1 %cmp32, label %if.then34, label %if.end54, !dbg !12720

if.then34:                                        ; preds = %if.else
  %51 = load i32, i32* %l, align 4, !dbg !12727
  %52 = load i8*, i8** %s1, align 8, !dbg !12729
  %idx.ext35 = sext i32 %51 to i64, !dbg !12729
  %add.ptr36 = getelementptr inbounds i8, i8* %52, i64 %idx.ext35, !dbg !12729
  store i8* %add.ptr36, i8** %s1, align 8, !dbg !12729
  %53 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12730
  %ext_off37 = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 15, !dbg !12731
  %54 = load i32, i32* %ext_off37, align 8, !dbg !12731
  %55 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12732
  %ext_off38 = getelementptr inbounds %struct.isoent, %struct.isoent* %55, i32 0, i32 15, !dbg !12733
  %56 = load i32, i32* %ext_off38, align 8, !dbg !12733
  %sub39 = sub nsw i32 %54, %56, !dbg !12734
  store i32 %sub39, i32* %l, align 4, !dbg !12735
  br label %while.cond40, !dbg !12736

while.cond40:                                     ; preds = %if.end52, %if.then34
  %57 = load i32, i32* %l, align 4, !dbg !12737
  %dec41 = add nsw i32 %57, -1, !dbg !12737
  store i32 %dec41, i32* %l, align 4, !dbg !12737
  %tobool42 = icmp ne i32 %57, 0, !dbg !12739
  br i1 %tobool42, label %while.body43, label %while.end53, !dbg !12739

while.body43:                                     ; preds = %while.cond40
  %58 = load i8*, i8** %s1, align 8, !dbg !12740
  %incdec.ptr44 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !12740
  store i8* %incdec.ptr44, i8** %s1, align 8, !dbg !12740
  %59 = load i8, i8* %58, align 1, !dbg !12742
  %conv45 = sext i8 %59 to i32, !dbg !12742
  %cmp46 = icmp ne i32 32, %conv45, !dbg !12743
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !12744

if.then48:                                        ; preds = %while.body43
  %60 = load i8*, i8** %s1, align 8, !dbg !12745
  %add.ptr49 = getelementptr inbounds i8, i8* %60, i64 -1, !dbg !12746
  %61 = load i8, i8* %add.ptr49, align 1, !dbg !12747
  %conv50 = zext i8 %61 to i32, !dbg !12747
  %sub51 = sub nsw i32 %conv50, 32, !dbg !12748
  store i32 %sub51, i32* %retval, align 4, !dbg !12749
  br label %return, !dbg !12749

if.end52:                                         ; preds = %while.body43
  br label %while.cond40, !dbg !12750

while.end53:                                      ; preds = %while.cond40
  br label %if.end54, !dbg !12752

if.end54:                                         ; preds = %while.end53, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %while.end
  store i32 0, i32* %retval, align 4, !dbg !12753
  br label %return, !dbg !12753

return:                                           ; preds = %if.end55, %if.then48, %if.then25, %if.then12, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !12754
  ret i32 %62, !dbg !12754
}

; Function Attrs: nounwind uwtable
define internal i32 @_compare_path_table_joliet(i8* %v1, i8* %v2) #0 !dbg !783 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %p1 = alloca %struct.isoent*, align 8
  %p2 = alloca %struct.isoent*, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %cmp = alloca i32, align 4
  %l = alloca i32, align 4
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !12755, metadata !986), !dbg !12756
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !12757, metadata !986), !dbg !12758
  call void @llvm.dbg.declare(metadata %struct.isoent** %p1, metadata !12759, metadata !986), !dbg !12760
  call void @llvm.dbg.declare(metadata %struct.isoent** %p2, metadata !12761, metadata !986), !dbg !12762
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !12763, metadata !986), !dbg !12764
  call void @llvm.dbg.declare(metadata i8** %s2, metadata !12765, metadata !986), !dbg !12766
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !12767, metadata !986), !dbg !12768
  call void @llvm.dbg.declare(metadata i32* %l, metadata !12769, metadata !986), !dbg !12770
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !12771
  %1 = ptrtoint i8* %0 to i64, !dbg !12772
  %2 = inttoptr i64 %1 to %struct.isoent**, !dbg !12773
  %3 = load %struct.isoent*, %struct.isoent** %2, align 8, !dbg !12774
  store %struct.isoent* %3, %struct.isoent** %p1, align 8, !dbg !12775
  %4 = load i8*, i8** %v2.addr, align 8, !dbg !12776
  %5 = ptrtoint i8* %4 to i64, !dbg !12777
  %6 = inttoptr i64 %5 to %struct.isoent**, !dbg !12778
  %7 = load %struct.isoent*, %struct.isoent** %6, align 8, !dbg !12779
  store %struct.isoent* %7, %struct.isoent** %p2, align 8, !dbg !12780
  %8 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12781
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 2, !dbg !12782
  %9 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !12782
  %dir_number = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 10, !dbg !12783
  %10 = load i32, i32* %dir_number, align 8, !dbg !12783
  %11 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12784
  %parent1 = getelementptr inbounds %struct.isoent, %struct.isoent* %11, i32 0, i32 2, !dbg !12785
  %12 = load %struct.isoent*, %struct.isoent** %parent1, align 8, !dbg !12785
  %dir_number2 = getelementptr inbounds %struct.isoent, %struct.isoent* %12, i32 0, i32 10, !dbg !12786
  %13 = load i32, i32* %dir_number2, align 8, !dbg !12786
  %sub = sub nsw i32 %10, %13, !dbg !12787
  store i32 %sub, i32* %cmp, align 4, !dbg !12788
  %14 = load i32, i32* %cmp, align 4, !dbg !12789
  %cmp3 = icmp ne i32 %14, 0, !dbg !12791
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12792

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %cmp, align 4, !dbg !12793
  store i32 %15, i32* %retval, align 4, !dbg !12794
  br label %return, !dbg !12794

if.end:                                           ; preds = %entry
  %16 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12795
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %16, i32 0, i32 14, !dbg !12796
  %17 = load i8*, i8** %identifier, align 8, !dbg !12796
  store i8* %17, i8** %s1, align 8, !dbg !12797
  %18 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12798
  %identifier4 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 14, !dbg !12799
  %19 = load i8*, i8** %identifier4, align 8, !dbg !12799
  store i8* %19, i8** %s2, align 8, !dbg !12800
  %20 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12801
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 15, !dbg !12802
  %21 = load i32, i32* %ext_off, align 8, !dbg !12802
  store i32 %21, i32* %l, align 4, !dbg !12803
  %22 = load i32, i32* %l, align 4, !dbg !12804
  %23 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12806
  %ext_off5 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 15, !dbg !12807
  %24 = load i32, i32* %ext_off5, align 8, !dbg !12807
  %cmp6 = icmp sgt i32 %22, %24, !dbg !12808
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !12809

if.then7:                                         ; preds = %if.end
  %25 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12810
  %ext_off8 = getelementptr inbounds %struct.isoent, %struct.isoent* %25, i32 0, i32 15, !dbg !12811
  %26 = load i32, i32* %ext_off8, align 8, !dbg !12811
  store i32 %26, i32* %l, align 4, !dbg !12812
  br label %if.end9, !dbg !12813

if.end9:                                          ; preds = %if.then7, %if.end
  %27 = load i8*, i8** %s1, align 8, !dbg !12814
  %28 = load i8*, i8** %s2, align 8, !dbg !12815
  %29 = load i32, i32* %l, align 4, !dbg !12816
  %conv = sext i32 %29 to i64, !dbg !12816
  %call = call i32 @memcmp(i8* %27, i8* %28, i64 %conv) #9, !dbg !12817
  store i32 %call, i32* %cmp, align 4, !dbg !12818
  %30 = load i32, i32* %cmp, align 4, !dbg !12819
  %cmp10 = icmp ne i32 %30, 0, !dbg !12821
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12822

if.then12:                                        ; preds = %if.end9
  %31 = load i32, i32* %cmp, align 4, !dbg !12823
  store i32 %31, i32* %retval, align 4, !dbg !12824
  br label %return, !dbg !12824

if.end13:                                         ; preds = %if.end9
  %32 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12825
  %ext_off14 = getelementptr inbounds %struct.isoent, %struct.isoent* %32, i32 0, i32 15, !dbg !12827
  %33 = load i32, i32* %ext_off14, align 8, !dbg !12827
  %34 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12828
  %ext_off15 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 15, !dbg !12829
  %35 = load i32, i32* %ext_off15, align 8, !dbg !12829
  %cmp16 = icmp slt i32 %33, %35, !dbg !12830
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !12831

if.then18:                                        ; preds = %if.end13
  %36 = load i32, i32* %l, align 4, !dbg !12832
  %37 = load i8*, i8** %s2, align 8, !dbg !12834
  %idx.ext = sext i32 %36 to i64, !dbg !12834
  %add.ptr = getelementptr inbounds i8, i8* %37, i64 %idx.ext, !dbg !12834
  store i8* %add.ptr, i8** %s2, align 8, !dbg !12834
  %38 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12835
  %ext_off19 = getelementptr inbounds %struct.isoent, %struct.isoent* %38, i32 0, i32 15, !dbg !12836
  %39 = load i32, i32* %ext_off19, align 8, !dbg !12836
  %40 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12837
  %ext_off20 = getelementptr inbounds %struct.isoent, %struct.isoent* %40, i32 0, i32 15, !dbg !12838
  %41 = load i32, i32* %ext_off20, align 8, !dbg !12838
  %sub21 = sub nsw i32 %39, %41, !dbg !12839
  store i32 %sub21, i32* %l, align 4, !dbg !12840
  br label %while.cond, !dbg !12841

while.cond:                                       ; preds = %if.end29, %if.then18
  %42 = load i32, i32* %l, align 4, !dbg !12842
  %dec = add nsw i32 %42, -1, !dbg !12842
  store i32 %dec, i32* %l, align 4, !dbg !12842
  %tobool = icmp ne i32 %42, 0, !dbg !12844
  br i1 %tobool, label %while.body, label %while.end, !dbg !12844

while.body:                                       ; preds = %while.cond
  %43 = load i8*, i8** %s2, align 8, !dbg !12845
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1, !dbg !12845
  store i8* %incdec.ptr, i8** %s2, align 8, !dbg !12845
  %44 = load i8, i8* %43, align 1, !dbg !12847
  %conv22 = zext i8 %44 to i32, !dbg !12847
  %cmp23 = icmp ne i32 0, %conv22, !dbg !12848
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !12849

if.then25:                                        ; preds = %while.body
  %45 = load i8*, i8** %s2, align 8, !dbg !12850
  %add.ptr26 = getelementptr inbounds i8, i8* %45, i64 -1, !dbg !12851
  %46 = load i8, i8* %add.ptr26, align 1, !dbg !12852
  %conv27 = zext i8 %46 to i32, !dbg !12852
  %sub28 = sub nsw i32 0, %conv27, !dbg !12853
  store i32 %sub28, i32* %retval, align 4, !dbg !12854
  br label %return, !dbg !12854

if.end29:                                         ; preds = %while.body
  br label %while.cond, !dbg !12855

while.end:                                        ; preds = %while.cond
  br label %if.end54, !dbg !12857

if.else:                                          ; preds = %if.end13
  %47 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12858
  %ext_off30 = getelementptr inbounds %struct.isoent, %struct.isoent* %47, i32 0, i32 15, !dbg !12861
  %48 = load i32, i32* %ext_off30, align 8, !dbg !12861
  %49 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12862
  %ext_off31 = getelementptr inbounds %struct.isoent, %struct.isoent* %49, i32 0, i32 15, !dbg !12863
  %50 = load i32, i32* %ext_off31, align 8, !dbg !12863
  %cmp32 = icmp sgt i32 %48, %50, !dbg !12864
  br i1 %cmp32, label %if.then34, label %if.end53, !dbg !12858

if.then34:                                        ; preds = %if.else
  %51 = load i32, i32* %l, align 4, !dbg !12865
  %52 = load i8*, i8** %s1, align 8, !dbg !12867
  %idx.ext35 = sext i32 %51 to i64, !dbg !12867
  %add.ptr36 = getelementptr inbounds i8, i8* %52, i64 %idx.ext35, !dbg !12867
  store i8* %add.ptr36, i8** %s1, align 8, !dbg !12867
  %53 = load %struct.isoent*, %struct.isoent** %p1, align 8, !dbg !12868
  %ext_off37 = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 15, !dbg !12869
  %54 = load i32, i32* %ext_off37, align 8, !dbg !12869
  %55 = load %struct.isoent*, %struct.isoent** %p2, align 8, !dbg !12870
  %ext_off38 = getelementptr inbounds %struct.isoent, %struct.isoent* %55, i32 0, i32 15, !dbg !12871
  %56 = load i32, i32* %ext_off38, align 8, !dbg !12871
  %sub39 = sub nsw i32 %54, %56, !dbg !12872
  store i32 %sub39, i32* %l, align 4, !dbg !12873
  br label %while.cond40, !dbg !12874

while.cond40:                                     ; preds = %if.end51, %if.then34
  %57 = load i32, i32* %l, align 4, !dbg !12875
  %dec41 = add nsw i32 %57, -1, !dbg !12875
  store i32 %dec41, i32* %l, align 4, !dbg !12875
  %tobool42 = icmp ne i32 %57, 0, !dbg !12877
  br i1 %tobool42, label %while.body43, label %while.end52, !dbg !12877

while.body43:                                     ; preds = %while.cond40
  %58 = load i8*, i8** %s1, align 8, !dbg !12878
  %incdec.ptr44 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !12878
  store i8* %incdec.ptr44, i8** %s1, align 8, !dbg !12878
  %59 = load i8, i8* %58, align 1, !dbg !12880
  %conv45 = zext i8 %59 to i32, !dbg !12880
  %cmp46 = icmp ne i32 0, %conv45, !dbg !12881
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !12882

if.then48:                                        ; preds = %while.body43
  %60 = load i8*, i8** %s1, align 8, !dbg !12883
  %add.ptr49 = getelementptr inbounds i8, i8* %60, i64 -1, !dbg !12884
  %61 = load i8, i8* %add.ptr49, align 1, !dbg !12885
  %conv50 = zext i8 %61 to i32, !dbg !12886
  store i32 %conv50, i32* %retval, align 4, !dbg !12887
  br label %return, !dbg !12887

if.end51:                                         ; preds = %while.body43
  br label %while.cond40, !dbg !12888

while.end52:                                      ; preds = %while.cond40
  br label %if.end53, !dbg !12890

if.end53:                                         ; preds = %while.end52, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %while.end
  store i32 0, i32* %retval, align 4, !dbg !12891
  br label %return, !dbg !12891

return:                                           ; preds = %if.end54, %if.then48, %if.then25, %if.then12, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !12892
  ret i32 %62, !dbg !12892
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @calculate_directory_descriptors(%struct.iso9660* %iso9660, %struct.vdd* %vdd, %struct.isoent* %isoent, i32 %depth) #0 !dbg !790 {
entry:
  %retval = alloca i32, align 4
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %depth.addr = alloca i32, align 4
  %enttbl = alloca %struct.isoent**, align 8
  %bs = alloca i32, align 4
  %block = alloca i32, align 4
  %i = alloca i32, align 4
  %np = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  %dr_l = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !12893, metadata !986), !dbg !12894
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !12895, metadata !986), !dbg !12896
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !12897, metadata !986), !dbg !12898
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !12899, metadata !986), !dbg !12900
  call void @llvm.dbg.declare(metadata %struct.isoent*** %enttbl, metadata !12901, metadata !986), !dbg !12902
  call void @llvm.dbg.declare(metadata i32* %bs, metadata !12903, metadata !986), !dbg !12904
  call void @llvm.dbg.declare(metadata i32* %block, metadata !12905, metadata !986), !dbg !12906
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12907, metadata !986), !dbg !12908
  store i32 1, i32* %block, align 4, !dbg !12909
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !12910
  %1 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !12911
  %2 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !12912
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %2, i32 0, i32 1, !dbg !12913
  %3 = load i32, i32* %vdd_type, align 8, !dbg !12913
  %call = call i32 @get_dir_rec_size(%struct.iso9660* %0, %struct.isoent* %1, i32 1, i32 %3), !dbg !12914
  store i32 %call, i32* %bs, align 4, !dbg !12915
  %4 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !12916
  %5 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !12917
  %6 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !12918
  %vdd_type1 = getelementptr inbounds %struct.vdd, %struct.vdd* %6, i32 0, i32 1, !dbg !12919
  %7 = load i32, i32* %vdd_type1, align 8, !dbg !12919
  %call2 = call i32 @get_dir_rec_size(%struct.iso9660* %4, %struct.isoent* %5, i32 2, i32 %7), !dbg !12920
  %8 = load i32, i32* %bs, align 4, !dbg !12921
  %add = add nsw i32 %8, %call2, !dbg !12921
  store i32 %add, i32* %bs, align 4, !dbg !12921
  %9 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !12922
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %9, i32 0, i32 3, !dbg !12924
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 2, !dbg !12925
  %10 = load i32, i32* %cnt, align 8, !dbg !12925
  %cmp = icmp sle i32 %10, 0, !dbg !12926
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12927

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !12928
  %vdd_type3 = getelementptr inbounds %struct.vdd, %struct.vdd* %11, i32 0, i32 1, !dbg !12930
  %12 = load i32, i32* %vdd_type3, align 8, !dbg !12930
  %cmp4 = icmp ne i32 %12, 1, !dbg !12931
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !12932

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !12933
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %13, i32 0, i32 37, !dbg !12934
  %14 = bitcast %struct.iso_option* %opt to i32*, !dbg !12935
  %bf.load = load i32, i32* %14, align 8, !dbg !12935
  %bf.lshr = lshr i32 %bf.load, 23, !dbg !12935
  %bf.clear = and i32 %bf.lshr, 3, !dbg !12935
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !12933
  br i1 %tobool, label %if.end, label %land.lhs.true5, !dbg !12936

land.lhs.true5:                                   ; preds = %land.lhs.true
  %15 = load i32, i32* %depth.addr, align 4, !dbg !12937
  %add6 = add nsw i32 %15, 1, !dbg !12938
  %16 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !12939
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %16, i32 0, i32 3, !dbg !12940
  %17 = load i32, i32* %max_depth, align 8, !dbg !12940
  %cmp7 = icmp sge i32 %add6, %17, !dbg !12941
  br i1 %cmp7, label %if.then, label %if.end, !dbg !12942

if.then:                                          ; preds = %land.lhs.true5, %entry
  %18 = load i32, i32* %block, align 4, !dbg !12944
  store i32 %18, i32* %retval, align 4, !dbg !12945
  br label %return, !dbg !12945

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %lor.lhs.false
  %19 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !12946
  %children_sorted = getelementptr inbounds %struct.isoent, %struct.isoent* %19, i32 0, i32 6, !dbg !12947
  %20 = load %struct.isoent**, %struct.isoent*** %children_sorted, align 8, !dbg !12947
  store %struct.isoent** %20, %struct.isoent*** %enttbl, align 8, !dbg !12948
  store i32 0, i32* %i, align 4, !dbg !12949
  br label %for.cond, !dbg !12951

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i32, i32* %i, align 4, !dbg !12952
  %22 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !12955
  %children8 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 3, !dbg !12956
  %cnt9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children8, i32 0, i32 2, !dbg !12957
  %23 = load i32, i32* %cnt9, align 8, !dbg !12957
  %cmp10 = icmp slt i32 %21, %23, !dbg !12958
  br i1 %cmp10, label %for.body, label %for.end, !dbg !12959

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !12960, metadata !986), !dbg !12962
  %24 = load i32, i32* %i, align 4, !dbg !12963
  %idxprom = sext i32 %24 to i64, !dbg !12964
  %25 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !12964
  %arrayidx = getelementptr inbounds %struct.isoent*, %struct.isoent** %25, i64 %idxprom, !dbg !12964
  %26 = load %struct.isoent*, %struct.isoent** %arrayidx, align 8, !dbg !12964
  store %struct.isoent* %26, %struct.isoent** %np, align 8, !dbg !12962
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !12965, metadata !986), !dbg !12966
  %27 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !12967
  %file11 = getelementptr inbounds %struct.isoent, %struct.isoent* %27, i32 0, i32 1, !dbg !12968
  %28 = load %struct.isofile*, %struct.isofile** %file11, align 8, !dbg !12968
  store %struct.isofile* %28, %struct.isofile** %file, align 8, !dbg !12969
  %29 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !12970
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %29, i32 0, i32 3, !dbg !12972
  %30 = load %struct.isofile*, %struct.isofile** %hardlink_target, align 8, !dbg !12972
  %cmp12 = icmp ne %struct.isofile* %30, null, !dbg !12973
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !12974

if.then13:                                        ; preds = %for.body
  %31 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !12975
  %hardlink_target14 = getelementptr inbounds %struct.isofile, %struct.isofile* %31, i32 0, i32 3, !dbg !12976
  %32 = load %struct.isofile*, %struct.isofile** %hardlink_target14, align 8, !dbg !12976
  store %struct.isofile* %32, %struct.isofile** %file, align 8, !dbg !12977
  br label %if.end15, !dbg !12978

if.end15:                                         ; preds = %if.then13, %for.body
  %33 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !12979
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %33, i32 0, i32 10, !dbg !12980
  %34 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !12981
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %34, i32 0, i32 11, !dbg !12982
  store %struct.content* %content, %struct.content** %cur_content, align 8, !dbg !12983
  br label %do.body, !dbg !12984

do.body:                                          ; preds = %do.cond, %if.end15
  call void @llvm.dbg.declare(metadata i32* %dr_l, metadata !12985, metadata !986), !dbg !12987
  %35 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !12988
  %36 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !12989
  %37 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !12990
  %vdd_type16 = getelementptr inbounds %struct.vdd, %struct.vdd* %37, i32 0, i32 1, !dbg !12991
  %38 = load i32, i32* %vdd_type16, align 8, !dbg !12991
  %call17 = call i32 @get_dir_rec_size(%struct.iso9660* %35, %struct.isoent* %36, i32 3, i32 %38), !dbg !12992
  store i32 %call17, i32* %dr_l, align 4, !dbg !12993
  %39 = load i32, i32* %bs, align 4, !dbg !12994
  %40 = load i32, i32* %dr_l, align 4, !dbg !12996
  %add18 = add nsw i32 %39, %40, !dbg !12997
  %cmp19 = icmp sgt i32 %add18, 2048, !dbg !12998
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !12999

if.then20:                                        ; preds = %do.body
  %41 = load i32, i32* %block, align 4, !dbg !13000
  %inc = add nsw i32 %41, 1, !dbg !13000
  store i32 %inc, i32* %block, align 4, !dbg !13000
  %42 = load i32, i32* %dr_l, align 4, !dbg !13002
  store i32 %42, i32* %bs, align 4, !dbg !13003
  br label %if.end22, !dbg !13004

if.else:                                          ; preds = %do.body
  %43 = load i32, i32* %dr_l, align 4, !dbg !13005
  %44 = load i32, i32* %bs, align 4, !dbg !13006
  %add21 = add nsw i32 %44, %43, !dbg !13006
  store i32 %add21, i32* %bs, align 4, !dbg !13006
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then20
  %45 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13007
  %cur_content23 = getelementptr inbounds %struct.isofile, %struct.isofile* %45, i32 0, i32 11, !dbg !13008
  %46 = load %struct.content*, %struct.content** %cur_content23, align 8, !dbg !13008
  %next = getelementptr inbounds %struct.content, %struct.content* %46, i32 0, i32 4, !dbg !13009
  %47 = load %struct.content*, %struct.content** %next, align 8, !dbg !13009
  %48 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13010
  %cur_content24 = getelementptr inbounds %struct.isofile, %struct.isofile* %48, i32 0, i32 11, !dbg !13011
  store %struct.content* %47, %struct.content** %cur_content24, align 8, !dbg !13012
  br label %do.cond, !dbg !13013

do.cond:                                          ; preds = %if.end22
  %49 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13014
  %cur_content25 = getelementptr inbounds %struct.isofile, %struct.isofile* %49, i32 0, i32 11, !dbg !13016
  %50 = load %struct.content*, %struct.content** %cur_content25, align 8, !dbg !13016
  %cmp26 = icmp ne %struct.content* %50, null, !dbg !13017
  br i1 %cmp26, label %do.body, label %do.end, !dbg !13018

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !13019

for.inc:                                          ; preds = %do.end
  %51 = load i32, i32* %i, align 4, !dbg !13020
  %inc27 = add nsw i32 %51, 1, !dbg !13020
  store i32 %inc27, i32* %i, align 4, !dbg !13020
  br label %for.cond, !dbg !13022

for.end:                                          ; preds = %for.cond
  %52 = load i32, i32* %block, align 4, !dbg !13023
  store i32 %52, i32* %retval, align 4, !dbg !13024
  br label %return, !dbg !13024

return:                                           ; preds = %for.end, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !13025
  ret i32 %53, !dbg !13025
}

; Function Attrs: nounwind uwtable
define internal i32 @extra_setup_location(%struct.isoent* %isoent, i32 %location) #0 !dbg !866 {
entry:
  %isoent.addr = alloca %struct.isoent*, align 8
  %location.addr = alloca i32, align 4
  %rec = alloca %struct.extr_rec*, align 8
  %cnt = alloca i32, align 4
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !13026, metadata !986), !dbg !13027
  store i32 %location, i32* %location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %location.addr, metadata !13028, metadata !986), !dbg !13029
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %rec, metadata !13030, metadata !986), !dbg !13031
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !13032, metadata !986), !dbg !13033
  store i32 0, i32* %cnt, align 4, !dbg !13034
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13035
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 21, !dbg !13036
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 0, !dbg !13037
  %1 = load %struct.extr_rec*, %struct.extr_rec** %first, align 8, !dbg !13037
  store %struct.extr_rec* %1, %struct.extr_rec** %rec, align 8, !dbg !13038
  %2 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !13039
  %3 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13040
  %extr_rec_list1 = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 21, !dbg !13041
  %current = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list1, i32 0, i32 2, !dbg !13042
  store %struct.extr_rec* %2, %struct.extr_rec** %current, align 8, !dbg !13043
  br label %while.cond, !dbg !13044

while.cond:                                       ; preds = %while.body, %entry
  %4 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !13045
  %tobool = icmp ne %struct.extr_rec* %4, null, !dbg !13047
  br i1 %tobool, label %while.body, label %while.end, !dbg !13047

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %cnt, align 4, !dbg !13048
  %inc = add nsw i32 %5, 1, !dbg !13048
  store i32 %inc, i32* %cnt, align 4, !dbg !13048
  %6 = load i32, i32* %location.addr, align 4, !dbg !13050
  %inc2 = add nsw i32 %6, 1, !dbg !13050
  store i32 %inc2, i32* %location.addr, align 4, !dbg !13050
  %7 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !13051
  %location3 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %7, i32 0, i32 0, !dbg !13052
  store i32 %6, i32* %location3, align 8, !dbg !13053
  %8 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !13054
  %offset = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %8, i32 0, i32 1, !dbg !13055
  store i32 0, i32* %offset, align 4, !dbg !13056
  %9 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !13057
  %next = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %9, i32 0, i32 3, !dbg !13058
  %10 = load %struct.extr_rec*, %struct.extr_rec** %next, align 8, !dbg !13058
  store %struct.extr_rec* %10, %struct.extr_rec** %rec, align 8, !dbg !13059
  br label %while.cond, !dbg !13060

while.end:                                        ; preds = %while.cond
  %11 = load i32, i32* %cnt, align 4, !dbg !13062
  ret i32 %11, !dbg !13063
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_dir_rec_size(%struct.iso9660* %iso9660, %struct.isoent* %isoent, i32 %t, i32 %vdd_type) #7 !dbg !793 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %t.addr = alloca i32, align 4
  %vdd_type.addr = alloca i32, align 4
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !13064, metadata !986), !dbg !13065
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !13066, metadata !986), !dbg !13067
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !13068, metadata !986), !dbg !13069
  store i32 %vdd_type, i32* %vdd_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdd_type.addr, metadata !13070, metadata !986), !dbg !13071
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13072
  %1 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !13073
  %2 = load i32, i32* %t.addr, align 4, !dbg !13074
  %3 = load i32, i32* %vdd_type.addr, align 4, !dbg !13075
  %call = call i32 @set_directory_record(i8* null, i64 -1, %struct.isoent* %0, %struct.iso9660* %1, i32 %2, i32 %3), !dbg !13076
  ret i32 %call, !dbg !13077
}

; Function Attrs: nounwind uwtable
define internal i32 @set_directory_record(i8* %p, i64 %n, %struct.isoent* %isoent, %struct.iso9660* %iso9660, i32 %t, i32 %vdd_type) #0 !dbg !796 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %t.addr = alloca i32, align 4
  %vdd_type.addr = alloca i32, align 4
  %bp = alloca i8*, align 8
  %dr_len = alloca i64, align 8
  %fi_len = alloca i64, align 8
  %xisoent = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  %flag = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13078, metadata !986), !dbg !13079
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13080, metadata !986), !dbg !13081
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !13082, metadata !986), !dbg !13083
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !13084, metadata !986), !dbg !13085
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !13086, metadata !986), !dbg !13087
  store i32 %vdd_type, i32* %vdd_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdd_type.addr, metadata !13088, metadata !986), !dbg !13089
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !13090, metadata !986), !dbg !13091
  call void @llvm.dbg.declare(metadata i64* %dr_len, metadata !13092, metadata !986), !dbg !13093
  call void @llvm.dbg.declare(metadata i64* %fi_len, metadata !13094, metadata !986), !dbg !13095
  %0 = load i8*, i8** %p.addr, align 8, !dbg !13096
  %cmp = icmp ne i8* %0, null, !dbg !13098
  br i1 %cmp, label %if.then, label %if.end14, !dbg !13099

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %t.addr, align 4, !dbg !13100
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb5
    i32 3, label %sw.bb8
  ], !dbg !13102

sw.bb:                                            ; preds = %if.then
  %2 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13103
  %dr_len1 = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 11, !dbg !13105
  %vd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len1, i32 0, i32 0, !dbg !13106
  %3 = load i32, i32* %vd, align 4, !dbg !13106
  %conv = sext i32 %3 to i64, !dbg !13103
  store i64 %conv, i64* %dr_len, align 8, !dbg !13107
  br label %sw.epilog, !dbg !13108

sw.bb2:                                           ; preds = %if.then
  %4 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13109
  %dr_len3 = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 11, !dbg !13110
  %self = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len3, i32 0, i32 1, !dbg !13111
  %5 = load i32, i32* %self, align 4, !dbg !13111
  %conv4 = sext i32 %5 to i64, !dbg !13109
  store i64 %conv4, i64* %dr_len, align 8, !dbg !13112
  br label %sw.epilog, !dbg !13113

sw.bb5:                                           ; preds = %if.then
  %6 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13114
  %dr_len6 = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 11, !dbg !13115
  %parent = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len6, i32 0, i32 2, !dbg !13116
  %7 = load i32, i32* %parent, align 4, !dbg !13116
  %conv7 = sext i32 %7 to i64, !dbg !13114
  store i64 %conv7, i64* %dr_len, align 8, !dbg !13117
  br label %sw.epilog, !dbg !13118

sw.bb8:                                           ; preds = %if.then
  br label %sw.default, !dbg !13119

sw.default:                                       ; preds = %if.then, %sw.bb8
  %8 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13121
  %dr_len9 = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 11, !dbg !13122
  %normal = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len9, i32 0, i32 3, !dbg !13123
  %9 = load i32, i32* %normal, align 4, !dbg !13123
  %conv10 = sext i32 %9 to i64, !dbg !13121
  store i64 %conv10, i64* %dr_len, align 8, !dbg !13124
  br label %sw.epilog, !dbg !13125

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb2, %sw.bb
  %10 = load i64, i64* %dr_len, align 8, !dbg !13126
  %11 = load i64, i64* %n.addr, align 8, !dbg !13128
  %cmp11 = icmp ugt i64 %10, %11, !dbg !13129
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !13130

if.then13:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !13131
  br label %return, !dbg !13131

if.end:                                           ; preds = %sw.epilog
  br label %if.end14, !dbg !13132

if.end14:                                         ; preds = %if.end, %entry
  %12 = load i32, i32* %t.addr, align 4, !dbg !13133
  %cmp15 = icmp eq i32 %12, 3, !dbg !13135
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !13136

land.lhs.true:                                    ; preds = %if.end14
  %13 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13137
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 14, !dbg !13139
  %14 = load i8*, i8** %identifier, align 8, !dbg !13139
  %cmp17 = icmp ne i8* %14, null, !dbg !13140
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !13141

if.then19:                                        ; preds = %land.lhs.true
  %15 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13142
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 17, !dbg !13143
  %16 = load i32, i32* %id_len, align 8, !dbg !13143
  %conv20 = sext i32 %16 to i64, !dbg !13142
  store i64 %conv20, i64* %fi_len, align 8, !dbg !13144
  br label %if.end21, !dbg !13145

if.else:                                          ; preds = %land.lhs.true, %if.end14
  store i64 1, i64* %fi_len, align 8, !dbg !13146
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then19
  %17 = load i8*, i8** %p.addr, align 8, !dbg !13147
  %cmp22 = icmp ne i8* %17, null, !dbg !13149
  br i1 %cmp22, label %if.then24, label %if.else95, !dbg !13150

if.then24:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata %struct.isoent** %xisoent, metadata !13151, metadata !986), !dbg !13153
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !13154, metadata !986), !dbg !13155
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !13156, metadata !986), !dbg !13157
  %18 = load i32, i32* %t.addr, align 4, !dbg !13158
  %cmp25 = icmp eq i32 %18, 2, !dbg !13160
  br i1 %cmp25, label %if.then27, label %if.else29, !dbg !13161

if.then27:                                        ; preds = %if.then24
  %19 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13162
  %parent28 = getelementptr inbounds %struct.isoent, %struct.isoent* %19, i32 0, i32 2, !dbg !13163
  %20 = load %struct.isoent*, %struct.isoent** %parent28, align 8, !dbg !13163
  store %struct.isoent* %20, %struct.isoent** %xisoent, align 8, !dbg !13164
  br label %if.end30, !dbg !13165

if.else29:                                        ; preds = %if.then24
  %21 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13166
  store %struct.isoent* %21, %struct.isoent** %xisoent, align 8, !dbg !13167
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then27
  %22 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13168
  %file31 = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 1, !dbg !13169
  %23 = load %struct.isofile*, %struct.isofile** %file31, align 8, !dbg !13169
  store %struct.isofile* %23, %struct.isofile** %file, align 8, !dbg !13170
  %24 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13171
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %24, i32 0, i32 3, !dbg !13173
  %25 = load %struct.isofile*, %struct.isofile** %hardlink_target, align 8, !dbg !13173
  %cmp32 = icmp ne %struct.isofile* %25, null, !dbg !13174
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !13175

if.then34:                                        ; preds = %if.end30
  %26 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13176
  %hardlink_target35 = getelementptr inbounds %struct.isofile, %struct.isofile* %26, i32 0, i32 3, !dbg !13177
  %27 = load %struct.isofile*, %struct.isofile** %hardlink_target35, align 8, !dbg !13177
  store %struct.isofile* %27, %struct.isofile** %file, align 8, !dbg !13178
  br label %if.end36, !dbg !13179

if.end36:                                         ; preds = %if.then34, %if.end30
  %28 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13180
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %28, i32 0, i32 22, !dbg !13182
  %bf.load = load i8, i8* %dir, align 8, !dbg !13182
  %bf.shl = shl i8 %bf.load, 6, !dbg !13182
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !13182
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !13182
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13180
  br i1 %tobool, label %if.then37, label %if.else38, !dbg !13183

if.then37:                                        ; preds = %if.end36
  store i8 2, i8* %flag, align 1, !dbg !13184
  br label %if.end44, !dbg !13185

if.else38:                                        ; preds = %if.end36
  %29 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13186
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %29, i32 0, i32 11, !dbg !13189
  %30 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !13189
  %next = getelementptr inbounds %struct.content, %struct.content* %30, i32 0, i32 4, !dbg !13190
  %31 = load %struct.content*, %struct.content** %next, align 8, !dbg !13190
  %cmp39 = icmp ne %struct.content* %31, null, !dbg !13191
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !13192

if.then41:                                        ; preds = %if.else38
  store i8 -128, i8* %flag, align 1, !dbg !13193
  br label %if.end43, !dbg !13194

if.else42:                                        ; preds = %if.else38
  store i8 0, i8* %flag, align 1, !dbg !13195
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then41
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then37
  %32 = load i8*, i8** %p.addr, align 8, !dbg !13196
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 -1, !dbg !13197
  store i8* %add.ptr, i8** %bp, align 8, !dbg !13198
  %33 = load i8*, i8** %bp, align 8, !dbg !13199
  %add.ptr45 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !13200
  call void @set_num_711(i8* %add.ptr45, i8 zeroext 0), !dbg !13201
  %34 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13202
  %dir46 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 22, !dbg !13204
  %bf.load47 = load i8, i8* %dir46, align 8, !dbg !13204
  %bf.shl48 = shl i8 %bf.load47, 6, !dbg !13204
  %bf.ashr49 = ashr i8 %bf.shl48, 7, !dbg !13204
  %bf.cast50 = sext i8 %bf.ashr49 to i32, !dbg !13204
  %tobool51 = icmp ne i32 %bf.cast50, 0, !dbg !13202
  br i1 %tobool51, label %if.then52, label %if.else54, !dbg !13205

if.then52:                                        ; preds = %if.end44
  %35 = load i8*, i8** %bp, align 8, !dbg !13206
  %add.ptr53 = getelementptr inbounds i8, i8* %35, i64 3, !dbg !13207
  %36 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13208
  %dir_location = getelementptr inbounds %struct.isoent, %struct.isoent* %36, i32 0, i32 12, !dbg !13209
  %37 = load i32, i32* %dir_location, align 4, !dbg !13209
  call void @set_num_733(i8* %add.ptr53, i32 %37), !dbg !13210
  br label %if.end57, !dbg !13210

if.else54:                                        ; preds = %if.end44
  %38 = load i8*, i8** %bp, align 8, !dbg !13211
  %add.ptr55 = getelementptr inbounds i8, i8* %38, i64 3, !dbg !13212
  %39 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13213
  %cur_content56 = getelementptr inbounds %struct.isofile, %struct.isofile* %39, i32 0, i32 11, !dbg !13214
  %40 = load %struct.content*, %struct.content** %cur_content56, align 8, !dbg !13214
  %location = getelementptr inbounds %struct.content, %struct.content* %40, i32 0, i32 3, !dbg !13215
  %41 = load i32, i32* %location, align 4, !dbg !13215
  call void @set_num_733(i8* %add.ptr55, i32 %41), !dbg !13216
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then52
  %42 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13217
  %dir58 = getelementptr inbounds %struct.isoent, %struct.isoent* %42, i32 0, i32 22, !dbg !13219
  %bf.load59 = load i8, i8* %dir58, align 8, !dbg !13219
  %bf.shl60 = shl i8 %bf.load59, 6, !dbg !13219
  %bf.ashr61 = ashr i8 %bf.shl60, 7, !dbg !13219
  %bf.cast62 = sext i8 %bf.ashr61 to i32, !dbg !13219
  %tobool63 = icmp ne i32 %bf.cast62, 0, !dbg !13217
  br i1 %tobool63, label %if.then64, label %if.else66, !dbg !13220

if.then64:                                        ; preds = %if.end57
  %43 = load i8*, i8** %bp, align 8, !dbg !13221
  %add.ptr65 = getelementptr inbounds i8, i8* %43, i64 11, !dbg !13222
  %44 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13223
  %dir_block = getelementptr inbounds %struct.isoent, %struct.isoent* %44, i32 0, i32 13, !dbg !13224
  %45 = load i32, i32* %dir_block, align 8, !dbg !13224
  %mul = mul nsw i32 %45, 2048, !dbg !13225
  call void @set_num_733(i8* %add.ptr65, i32 %mul), !dbg !13226
  br label %if.end70, !dbg !13226

if.else66:                                        ; preds = %if.end57
  %46 = load i8*, i8** %bp, align 8, !dbg !13227
  %add.ptr67 = getelementptr inbounds i8, i8* %46, i64 11, !dbg !13228
  %47 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13229
  %cur_content68 = getelementptr inbounds %struct.isofile, %struct.isofile* %47, i32 0, i32 11, !dbg !13230
  %48 = load %struct.content*, %struct.content** %cur_content68, align 8, !dbg !13230
  %size = getelementptr inbounds %struct.content, %struct.content* %48, i32 0, i32 1, !dbg !13231
  %49 = load i64, i64* %size, align 8, !dbg !13231
  %conv69 = trunc i64 %49 to i32, !dbg !13232
  call void @set_num_733(i8* %add.ptr67, i32 %conv69), !dbg !13233
  br label %if.end70

if.end70:                                         ; preds = %if.else66, %if.then64
  %50 = load i8*, i8** %bp, align 8, !dbg !13234
  %add.ptr71 = getelementptr inbounds i8, i8* %50, i64 19, !dbg !13235
  %51 = load %struct.isoent*, %struct.isoent** %xisoent, align 8, !dbg !13236
  %file72 = getelementptr inbounds %struct.isoent, %struct.isoent* %51, i32 0, i32 1, !dbg !13237
  %52 = load %struct.isofile*, %struct.isofile** %file72, align 8, !dbg !13237
  %entry73 = getelementptr inbounds %struct.isofile, %struct.isofile* %52, i32 0, i32 4, !dbg !13238
  %53 = load %struct.archive_entry*, %struct.archive_entry** %entry73, align 8, !dbg !13238
  %call = call i64 @archive_entry_mtime(%struct.archive_entry* %53), !dbg !13239
  call void @set_time_915(i8* %add.ptr71, i64 %call), !dbg !13240
  %54 = load i8, i8* %flag, align 1, !dbg !13241
  %55 = load i8*, i8** %bp, align 8, !dbg !13242
  %arrayidx = getelementptr inbounds i8, i8* %55, i64 26, !dbg !13242
  store i8 %54, i8* %arrayidx, align 1, !dbg !13243
  %56 = load i8*, i8** %bp, align 8, !dbg !13244
  %add.ptr74 = getelementptr inbounds i8, i8* %56, i64 27, !dbg !13245
  call void @set_num_711(i8* %add.ptr74, i8 zeroext 0), !dbg !13246
  %57 = load i8*, i8** %bp, align 8, !dbg !13247
  %add.ptr75 = getelementptr inbounds i8, i8* %57, i64 28, !dbg !13248
  call void @set_num_711(i8* %add.ptr75, i8 zeroext 0), !dbg !13249
  %58 = load i8*, i8** %bp, align 8, !dbg !13250
  %add.ptr76 = getelementptr inbounds i8, i8* %58, i64 29, !dbg !13251
  %59 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !13252
  %volume_sequence_number = getelementptr inbounds %struct.iso9660, %struct.iso9660* %59, i32 0, i32 17, !dbg !13253
  %60 = load i32, i32* %volume_sequence_number, align 4, !dbg !13253
  %conv77 = trunc i32 %60 to i16, !dbg !13252
  call void @set_num_723(i8* %add.ptr76, i16 zeroext %conv77), !dbg !13254
  %61 = load i8*, i8** %bp, align 8, !dbg !13255
  %add.ptr78 = getelementptr inbounds i8, i8* %61, i64 33, !dbg !13256
  %62 = load i64, i64* %fi_len, align 8, !dbg !13257
  %conv79 = trunc i64 %62 to i8, !dbg !13258
  call void @set_num_711(i8* %add.ptr78, i8 zeroext %conv79), !dbg !13259
  %63 = load i32, i32* %t.addr, align 4, !dbg !13260
  switch i32 %63, label %sw.epilog94 [
    i32 0, label %sw.bb80
    i32 1, label %sw.bb80
    i32 2, label %sw.bb82
    i32 3, label %sw.bb84
  ], !dbg !13261

sw.bb80:                                          ; preds = %if.end70, %if.end70
  %64 = load i8*, i8** %bp, align 8, !dbg !13262
  %add.ptr81 = getelementptr inbounds i8, i8* %64, i64 34, !dbg !13264
  call void @set_num_711(i8* %add.ptr81, i8 zeroext 0), !dbg !13265
  br label %sw.epilog94, !dbg !13266

sw.bb82:                                          ; preds = %if.end70
  %65 = load i8*, i8** %bp, align 8, !dbg !13267
  %add.ptr83 = getelementptr inbounds i8, i8* %65, i64 34, !dbg !13268
  call void @set_num_711(i8* %add.ptr83, i8 zeroext 1), !dbg !13269
  br label %sw.epilog94, !dbg !13270

sw.bb84:                                          ; preds = %if.end70
  %66 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13271
  %identifier85 = getelementptr inbounds %struct.isoent, %struct.isoent* %66, i32 0, i32 14, !dbg !13273
  %67 = load i8*, i8** %identifier85, align 8, !dbg !13273
  %cmp86 = icmp ne i8* %67, null, !dbg !13274
  br i1 %cmp86, label %if.then88, label %if.else91, !dbg !13275

if.then88:                                        ; preds = %sw.bb84
  %68 = load i8*, i8** %bp, align 8, !dbg !13276
  %add.ptr89 = getelementptr inbounds i8, i8* %68, i64 34, !dbg !13277
  %69 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13278
  %identifier90 = getelementptr inbounds %struct.isoent, %struct.isoent* %69, i32 0, i32 14, !dbg !13279
  %70 = load i8*, i8** %identifier90, align 8, !dbg !13279
  %71 = load i64, i64* %fi_len, align 8, !dbg !13280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr89, i8* %70, i64 %71, i32 1, i1 false), !dbg !13281
  br label %if.end93, !dbg !13281

if.else91:                                        ; preds = %sw.bb84
  %72 = load i8*, i8** %bp, align 8, !dbg !13282
  %add.ptr92 = getelementptr inbounds i8, i8* %72, i64 34, !dbg !13283
  call void @set_num_711(i8* %add.ptr92, i8 zeroext 0), !dbg !13284
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.then88
  br label %sw.epilog94, !dbg !13285

sw.epilog94:                                      ; preds = %if.end70, %if.end93, %sw.bb82, %sw.bb80
  br label %if.end96, !dbg !13286

if.else95:                                        ; preds = %if.end21
  store i8* null, i8** %bp, align 8, !dbg !13287
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %sw.epilog94
  %73 = load i64, i64* %fi_len, align 8, !dbg !13288
  %add = add i64 33, %73, !dbg !13289
  store i64 %add, i64* %dr_len, align 8, !dbg !13290
  %74 = load i64, i64* %dr_len, align 8, !dbg !13291
  %and = and i64 %74, 1, !dbg !13293
  %tobool97 = icmp ne i64 %and, 0, !dbg !13293
  br i1 %tobool97, label %if.then98, label %if.end104, !dbg !13294

if.then98:                                        ; preds = %if.end96
  %75 = load i64, i64* %dr_len, align 8, !dbg !13295
  %inc = add i64 %75, 1, !dbg !13295
  store i64 %inc, i64* %dr_len, align 8, !dbg !13295
  %76 = load i8*, i8** %p.addr, align 8, !dbg !13297
  %cmp99 = icmp ne i8* %76, null, !dbg !13299
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !13300

if.then101:                                       ; preds = %if.then98
  %77 = load i64, i64* %dr_len, align 8, !dbg !13301
  %78 = load i8*, i8** %bp, align 8, !dbg !13302
  %arrayidx102 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !13302
  store i8 0, i8* %arrayidx102, align 1, !dbg !13303
  br label %if.end103, !dbg !13302

if.end103:                                        ; preds = %if.then101, %if.then98
  br label %if.end104, !dbg !13304

if.end104:                                        ; preds = %if.end103, %if.end96
  %79 = load i32, i32* %t.addr, align 4, !dbg !13305
  %cmp105 = icmp eq i32 %79, 0, !dbg !13307
  br i1 %cmp105, label %if.then107, label %if.end118, !dbg !13308

if.then107:                                       ; preds = %if.end104
  %80 = load i8*, i8** %p.addr, align 8, !dbg !13309
  %cmp108 = icmp ne i8* %80, null, !dbg !13312
  br i1 %cmp108, label %if.then110, label %if.else112, !dbg !13313

if.then110:                                       ; preds = %if.then107
  %81 = load i8*, i8** %p.addr, align 8, !dbg !13314
  %82 = load i64, i64* %dr_len, align 8, !dbg !13315
  %conv111 = trunc i64 %82 to i8, !dbg !13316
  call void @set_num_711(i8* %81, i8 zeroext %conv111), !dbg !13317
  br label %if.end116, !dbg !13317

if.else112:                                       ; preds = %if.then107
  %83 = load i64, i64* %dr_len, align 8, !dbg !13318
  %conv113 = trunc i64 %83 to i32, !dbg !13319
  %84 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13320
  %dr_len114 = getelementptr inbounds %struct.isoent, %struct.isoent* %84, i32 0, i32 11, !dbg !13321
  %vd115 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len114, i32 0, i32 0, !dbg !13322
  store i32 %conv113, i32* %vd115, align 4, !dbg !13323
  br label %if.end116

if.end116:                                        ; preds = %if.else112, %if.then110
  %85 = load i64, i64* %dr_len, align 8, !dbg !13324
  %conv117 = trunc i64 %85 to i32, !dbg !13325
  store i32 %conv117, i32* %retval, align 4, !dbg !13326
  br label %return, !dbg !13326

if.end118:                                        ; preds = %if.end104
  %86 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !13327
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %86, i32 0, i32 37, !dbg !13329
  %87 = bitcast %struct.iso_option* %opt to i32*, !dbg !13330
  %bf.load119 = load i32, i32* %87, align 8, !dbg !13330
  %bf.lshr = lshr i32 %bf.load119, 23, !dbg !13330
  %bf.clear = and i32 %bf.lshr, 3, !dbg !13330
  %tobool120 = icmp ne i32 %bf.clear, 0, !dbg !13327
  br i1 %tobool120, label %land.lhs.true121, label %if.end128, !dbg !13331

land.lhs.true121:                                 ; preds = %if.end118
  %88 = load i32, i32* %vdd_type.addr, align 4, !dbg !13332
  %cmp122 = icmp ne i32 %88, 1, !dbg !13334
  br i1 %cmp122, label %if.then124, label %if.end128, !dbg !13335

if.then124:                                       ; preds = %land.lhs.true121
  %89 = load i8*, i8** %bp, align 8, !dbg !13336
  %90 = load i64, i64* %dr_len, align 8, !dbg !13337
  %conv125 = trunc i64 %90 to i32, !dbg !13338
  %91 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13339
  %92 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !13340
  %93 = load i32, i32* %t.addr, align 4, !dbg !13341
  %call126 = call i32 @set_directory_record_rr(i8* %89, i32 %conv125, %struct.isoent* %91, %struct.iso9660* %92, i32 %93), !dbg !13342
  %conv127 = sext i32 %call126 to i64, !dbg !13342
  store i64 %conv127, i64* %dr_len, align 8, !dbg !13343
  br label %if.end128, !dbg !13344

if.end128:                                        ; preds = %if.then124, %land.lhs.true121, %if.end118
  %94 = load i8*, i8** %p.addr, align 8, !dbg !13345
  %cmp129 = icmp ne i8* %94, null, !dbg !13347
  br i1 %cmp129, label %if.then131, label %if.else133, !dbg !13348

if.then131:                                       ; preds = %if.end128
  %95 = load i8*, i8** %p.addr, align 8, !dbg !13349
  %96 = load i64, i64* %dr_len, align 8, !dbg !13350
  %conv132 = trunc i64 %96 to i8, !dbg !13351
  call void @set_num_711(i8* %95, i8 zeroext %conv132), !dbg !13352
  br label %if.end148, !dbg !13352

if.else133:                                       ; preds = %if.end128
  %97 = load i32, i32* %t.addr, align 4, !dbg !13353
  switch i32 %97, label %sw.epilog147 [
    i32 0, label %sw.bb134
    i32 1, label %sw.bb135
    i32 2, label %sw.bb139
    i32 3, label %sw.bb143
  ], !dbg !13355

sw.bb134:                                         ; preds = %if.else133
  br label %sw.epilog147, !dbg !13356

sw.bb135:                                         ; preds = %if.else133
  %98 = load i64, i64* %dr_len, align 8, !dbg !13358
  %conv136 = trunc i64 %98 to i32, !dbg !13359
  %99 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13360
  %dr_len137 = getelementptr inbounds %struct.isoent, %struct.isoent* %99, i32 0, i32 11, !dbg !13361
  %self138 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len137, i32 0, i32 1, !dbg !13362
  store i32 %conv136, i32* %self138, align 4, !dbg !13363
  br label %sw.epilog147, !dbg !13364

sw.bb139:                                         ; preds = %if.else133
  %100 = load i64, i64* %dr_len, align 8, !dbg !13365
  %conv140 = trunc i64 %100 to i32, !dbg !13366
  %101 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13367
  %dr_len141 = getelementptr inbounds %struct.isoent, %struct.isoent* %101, i32 0, i32 11, !dbg !13368
  %parent142 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len141, i32 0, i32 2, !dbg !13369
  store i32 %conv140, i32* %parent142, align 4, !dbg !13370
  br label %sw.epilog147, !dbg !13371

sw.bb143:                                         ; preds = %if.else133
  %102 = load i64, i64* %dr_len, align 8, !dbg !13372
  %conv144 = trunc i64 %102 to i32, !dbg !13373
  %103 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13374
  %dr_len145 = getelementptr inbounds %struct.isoent, %struct.isoent* %103, i32 0, i32 11, !dbg !13375
  %normal146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %dr_len145, i32 0, i32 3, !dbg !13376
  store i32 %conv144, i32* %normal146, align 4, !dbg !13377
  br label %sw.epilog147, !dbg !13378

sw.epilog147:                                     ; preds = %if.else133, %sw.bb143, %sw.bb139, %sw.bb135, %sw.bb134
  br label %if.end148

if.end148:                                        ; preds = %sw.epilog147, %if.then131
  %104 = load i64, i64* %dr_len, align 8, !dbg !13379
  %conv149 = trunc i64 %104 to i32, !dbg !13380
  store i32 %conv149, i32* %retval, align 4, !dbg !13381
  br label %return, !dbg !13381

return:                                           ; preds = %if.end148, %if.end116, %if.then13
  %105 = load i32, i32* %retval, align 4, !dbg !13382
  ret i32 %105, !dbg !13382
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_711(i8* %p, i8 zeroext %value) #7 !dbg !799 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13383, metadata !986), !dbg !13384
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !13385, metadata !986), !dbg !13386
  %0 = load i8, i8* %value.addr, align 1, !dbg !13387
  %1 = load i8*, i8** %p.addr, align 8, !dbg !13388
  store i8 %0, i8* %1, align 1, !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_733(i8* %p, i32 %value) #7 !dbg !802 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13391, metadata !986), !dbg !13392
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !13393, metadata !986), !dbg !13394
  %0 = load i8*, i8** %p.addr, align 8, !dbg !13395
  %1 = load i32, i32* %value.addr, align 4, !dbg !13396
  call void @archive_le32enc(i8* %0, i32 %1), !dbg !13397
  %2 = load i8*, i8** %p.addr, align 8, !dbg !13398
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 4, !dbg !13399
  %3 = load i32, i32* %value.addr, align 4, !dbg !13400
  call void @archive_be32enc(i8* %add.ptr, i32 %3), !dbg !13401
  ret void, !dbg !13402
}

; Function Attrs: nounwind uwtable
define internal void @set_time_915(i8* %p, i64 %t) #0 !dbg !804 {
entry:
  %p.addr = alloca i8*, align 8
  %t.addr = alloca i64, align 8
  %tm = alloca %struct.tm, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13403, metadata !986), !dbg !13404
  store i64 %t, i64* %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !13405, metadata !986), !dbg !13406
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !13407, metadata !986), !dbg !13408
  call void @get_tmfromtime(%struct.tm* %tm, i64* %t.addr), !dbg !13409
  %0 = load i8*, i8** %p.addr, align 8, !dbg !13410
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !13411
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !13412
  %1 = load i32, i32* %tm_year, align 4, !dbg !13412
  %conv = trunc i32 %1 to i8, !dbg !13413
  call void @set_num_711(i8* %add.ptr, i8 zeroext %conv), !dbg !13414
  %2 = load i8*, i8** %p.addr, align 8, !dbg !13415
  %add.ptr1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !13416
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !13417
  %3 = load i32, i32* %tm_mon, align 8, !dbg !13417
  %add = add nsw i32 %3, 1, !dbg !13418
  %conv2 = trunc i32 %add to i8, !dbg !13419
  call void @set_num_711(i8* %add.ptr1, i8 zeroext %conv2), !dbg !13420
  %4 = load i8*, i8** %p.addr, align 8, !dbg !13421
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !13422
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !13423
  %5 = load i32, i32* %tm_mday, align 4, !dbg !13423
  %conv4 = trunc i32 %5 to i8, !dbg !13424
  call void @set_num_711(i8* %add.ptr3, i8 zeroext %conv4), !dbg !13425
  %6 = load i8*, i8** %p.addr, align 8, !dbg !13426
  %add.ptr5 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !13427
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !13428
  %7 = load i32, i32* %tm_hour, align 8, !dbg !13428
  %conv6 = trunc i32 %7 to i8, !dbg !13429
  call void @set_num_711(i8* %add.ptr5, i8 zeroext %conv6), !dbg !13430
  %8 = load i8*, i8** %p.addr, align 8, !dbg !13431
  %add.ptr7 = getelementptr inbounds i8, i8* %8, i64 4, !dbg !13432
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !13433
  %9 = load i32, i32* %tm_min, align 4, !dbg !13433
  %conv8 = trunc i32 %9 to i8, !dbg !13434
  call void @set_num_711(i8* %add.ptr7, i8 zeroext %conv8), !dbg !13435
  %10 = load i8*, i8** %p.addr, align 8, !dbg !13436
  %add.ptr9 = getelementptr inbounds i8, i8* %10, i64 5, !dbg !13437
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !13438
  %11 = load i32, i32* %tm_sec, align 8, !dbg !13438
  %conv10 = trunc i32 %11 to i8, !dbg !13439
  call void @set_num_711(i8* %add.ptr9, i8 zeroext %conv10), !dbg !13440
  %12 = load i8*, i8** %p.addr, align 8, !dbg !13441
  %add.ptr11 = getelementptr inbounds i8, i8* %12, i64 6, !dbg !13442
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 9, !dbg !13443
  %13 = load i64, i64* %tm_gmtoff, align 8, !dbg !13443
  %div = sdiv i64 %13, 900, !dbg !13444
  %conv12 = trunc i64 %div to i8, !dbg !13445
  call void @set_num_712(i8* %add.ptr11, i8 signext %conv12), !dbg !13446
  ret void, !dbg !13447
}

declare i64 @archive_entry_mtime(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal void @set_num_723(i8* %p, i16 zeroext %value) #0 !dbg !828 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13448, metadata !986), !dbg !13449
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !13450, metadata !986), !dbg !13451
  %0 = load i8*, i8** %p.addr, align 8, !dbg !13452
  %1 = load i16, i16* %value.addr, align 2, !dbg !13453
  call void @archive_le16enc(i8* %0, i16 zeroext %1), !dbg !13454
  %2 = load i8*, i8** %p.addr, align 8, !dbg !13455
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 2, !dbg !13456
  %3 = load i16, i16* %value.addr, align 2, !dbg !13457
  call void @archive_be16enc(i8* %add.ptr, i16 zeroext %3), !dbg !13458
  ret void, !dbg !13459
}

; Function Attrs: nounwind uwtable
define internal i32 @set_directory_record_rr(i8* %bp, i32 %dr_len, %struct.isoent* %isoent, %struct.iso9660* %iso9660, i32 %t) #0 !dbg !832 {
entry:
  %bp.addr = alloca i8*, align 8
  %dr_len.addr = alloca i32, align 4
  %isoent.addr = alloca %struct.isoent*, align 8
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %t.addr = alloca i32, align 4
  %rr_flag = alloca i8, align 1
  %length = alloca i32, align 4
  %ctl = alloca %struct.ctl_extr_rec, align 8
  %rr_parent = alloca %struct.isoent*, align 8
  %pxent = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  %nmlen = alloca i64, align 8
  %nm = alloca i8*, align 8
  %nmmax = alloca i64, align 8
  %mode = alloca i32, align 4
  %uid = alloca i64, align 8
  %gid = alloca i64, align 8
  %sl = alloca i8*, align 8
  %sl_last = alloca i8, align 1
  %nc = alloca i8*, align 8
  %cf = alloca i8*, align 8
  %cl = alloca i8*, align 8
  %cldmy = alloca i8, align 1
  %sllen = alloca i32, align 4
  %slmax = alloca i32, align 4
  %tf_flags = alloca i8, align 1
  %dev = alloca i64, align 8
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !13460, metadata !986), !dbg !13461
  store i32 %dr_len, i32* %dr_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dr_len.addr, metadata !13462, metadata !986), !dbg !13463
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !13464, metadata !986), !dbg !13465
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !13466, metadata !986), !dbg !13467
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !13468, metadata !986), !dbg !13469
  call void @llvm.dbg.declare(metadata i8* %rr_flag, metadata !13470, metadata !986), !dbg !13471
  call void @llvm.dbg.declare(metadata i32* %length, metadata !13472, metadata !986), !dbg !13473
  call void @llvm.dbg.declare(metadata %struct.ctl_extr_rec* %ctl, metadata !13474, metadata !986), !dbg !13475
  call void @llvm.dbg.declare(metadata %struct.isoent** %rr_parent, metadata !13476, metadata !986), !dbg !13477
  call void @llvm.dbg.declare(metadata %struct.isoent** %pxent, metadata !13478, metadata !986), !dbg !13479
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !13480, metadata !986), !dbg !13481
  %0 = load i8*, i8** %bp.addr, align 8, !dbg !13482
  %1 = load i32, i32* %dr_len.addr, align 4, !dbg !13483
  %2 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13484
  %call = call i8* @extra_open_record(i8* %0, i32 %1, %struct.isoent* %2, %struct.ctl_extr_rec* %ctl), !dbg !13485
  store i8* %call, i8** %bp.addr, align 8, !dbg !13486
  %3 = load i32, i32* %t.addr, align 4, !dbg !13487
  %cmp = icmp eq i32 %3, 2, !dbg !13489
  br i1 %cmp, label %if.then, label %if.else5, !dbg !13490

if.then:                                          ; preds = %entry
  %4 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13491
  %rr_parent1 = getelementptr inbounds %struct.isoent, %struct.isoent* %4, i32 0, i32 19, !dbg !13493
  %5 = load %struct.isoent*, %struct.isoent** %rr_parent1, align 8, !dbg !13493
  store %struct.isoent* %5, %struct.isoent** %rr_parent, align 8, !dbg !13494
  %6 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13495
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %6, i32 0, i32 2, !dbg !13496
  %7 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !13496
  store %struct.isoent* %7, %struct.isoent** %pxent, align 8, !dbg !13497
  %8 = load %struct.isoent*, %struct.isoent** %rr_parent, align 8, !dbg !13498
  %cmp2 = icmp ne %struct.isoent* %8, null, !dbg !13500
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !13501

if.then3:                                         ; preds = %if.then
  %9 = load %struct.isoent*, %struct.isoent** %rr_parent, align 8, !dbg !13502
  store %struct.isoent* %9, %struct.isoent** %isoent.addr, align 8, !dbg !13503
  br label %if.end, !dbg !13504

if.else:                                          ; preds = %if.then
  %10 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13505
  %parent4 = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 2, !dbg !13506
  %11 = load %struct.isoent*, %struct.isoent** %parent4, align 8, !dbg !13506
  store %struct.isoent* %11, %struct.isoent** %isoent.addr, align 8, !dbg !13507
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end6, !dbg !13508

if.else5:                                         ; preds = %entry
  store %struct.isoent* null, %struct.isoent** %rr_parent, align 8, !dbg !13509
  %12 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13511
  store %struct.isoent* %12, %struct.isoent** %pxent, align 8, !dbg !13512
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end
  %13 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13513
  %file7 = getelementptr inbounds %struct.isoent, %struct.isoent* %13, i32 0, i32 1, !dbg !13514
  %14 = load %struct.isofile*, %struct.isofile** %file7, align 8, !dbg !13514
  store %struct.isofile* %14, %struct.isofile** %file, align 8, !dbg !13515
  %15 = load i32, i32* %t.addr, align 4, !dbg !13516
  %cmp8 = icmp ne i32 %15, 3, !dbg !13518
  br i1 %cmp8, label %if.then9, label %if.else14, !dbg !13519

if.then9:                                         ; preds = %if.end6
  store i8 -127, i8* %rr_flag, align 1, !dbg !13520
  %16 = load %struct.isoent*, %struct.isoent** %rr_parent, align 8, !dbg !13522
  %cmp10 = icmp ne %struct.isoent* %16, null, !dbg !13524
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !13525

if.then11:                                        ; preds = %if.then9
  %17 = load i8, i8* %rr_flag, align 1, !dbg !13526
  %conv = zext i8 %17 to i32, !dbg !13526
  %or = or i32 %conv, 32, !dbg !13526
  %conv12 = trunc i32 %or to i8, !dbg !13526
  store i8 %conv12, i8* %rr_flag, align 1, !dbg !13526
  br label %if.end13, !dbg !13527

if.end13:                                         ; preds = %if.then11, %if.then9
  br label %if.end52, !dbg !13528

if.else14:                                        ; preds = %if.end6
  store i8 -119, i8* %rr_flag, align 1, !dbg !13529
  %18 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13531
  %entry15 = getelementptr inbounds %struct.isofile, %struct.isofile* %18, i32 0, i32 4, !dbg !13533
  %19 = load %struct.archive_entry*, %struct.archive_entry** %entry15, align 8, !dbg !13533
  %call16 = call i32 @archive_entry_filetype(%struct.archive_entry* %19), !dbg !13534
  %cmp17 = icmp eq i32 %call16, 40960, !dbg !13535
  br i1 %cmp17, label %if.then19, label %if.end23, !dbg !13536

if.then19:                                        ; preds = %if.else14
  %20 = load i8, i8* %rr_flag, align 1, !dbg !13537
  %conv20 = zext i8 %20 to i32, !dbg !13537
  %or21 = or i32 %conv20, 4, !dbg !13537
  %conv22 = trunc i32 %or21 to i8, !dbg !13537
  store i8 %conv22, i8* %rr_flag, align 1, !dbg !13537
  br label %if.end23, !dbg !13538

if.end23:                                         ; preds = %if.then19, %if.else14
  %21 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13539
  %rr_parent24 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 19, !dbg !13541
  %22 = load %struct.isoent*, %struct.isoent** %rr_parent24, align 8, !dbg !13541
  %cmp25 = icmp ne %struct.isoent* %22, null, !dbg !13542
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !13543

if.then27:                                        ; preds = %if.end23
  %23 = load i8, i8* %rr_flag, align 1, !dbg !13544
  %conv28 = zext i8 %23 to i32, !dbg !13544
  %or29 = or i32 %conv28, 64, !dbg !13544
  %conv30 = trunc i32 %or29 to i8, !dbg !13544
  store i8 %conv30, i8* %rr_flag, align 1, !dbg !13544
  br label %if.end31, !dbg !13545

if.end31:                                         ; preds = %if.then27, %if.end23
  %24 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13546
  %rr_child = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 20, !dbg !13548
  %25 = load %struct.isoent*, %struct.isoent** %rr_child, align 8, !dbg !13548
  %cmp32 = icmp ne %struct.isoent* %25, null, !dbg !13549
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !13550

if.then34:                                        ; preds = %if.end31
  %26 = load i8, i8* %rr_flag, align 1, !dbg !13551
  %conv35 = zext i8 %26 to i32, !dbg !13551
  %or36 = or i32 %conv35, 16, !dbg !13551
  %conv37 = trunc i32 %or36 to i8, !dbg !13551
  store i8 %conv37, i8* %rr_flag, align 1, !dbg !13551
  br label %if.end38, !dbg !13552

if.end38:                                         ; preds = %if.then34, %if.end31
  %27 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13553
  %entry39 = getelementptr inbounds %struct.isofile, %struct.isofile* %27, i32 0, i32 4, !dbg !13555
  %28 = load %struct.archive_entry*, %struct.archive_entry** %entry39, align 8, !dbg !13555
  %call40 = call i32 @archive_entry_filetype(%struct.archive_entry* %28), !dbg !13556
  %cmp41 = icmp eq i32 %call40, 8192, !dbg !13557
  br i1 %cmp41, label %if.then47, label %lor.lhs.false, !dbg !13558

lor.lhs.false:                                    ; preds = %if.end38
  %29 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13559
  %entry43 = getelementptr inbounds %struct.isofile, %struct.isofile* %29, i32 0, i32 4, !dbg !13560
  %30 = load %struct.archive_entry*, %struct.archive_entry** %entry43, align 8, !dbg !13560
  %call44 = call i32 @archive_entry_filetype(%struct.archive_entry* %30), !dbg !13561
  %cmp45 = icmp eq i32 %call44, 24576, !dbg !13562
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !13563

if.then47:                                        ; preds = %lor.lhs.false, %if.end38
  %31 = load i8, i8* %rr_flag, align 1, !dbg !13565
  %conv48 = zext i8 %31 to i32, !dbg !13565
  %or49 = or i32 %conv48, 2, !dbg !13565
  %conv50 = trunc i32 %or49 to i8, !dbg !13565
  store i8 %conv50, i8* %rr_flag, align 1, !dbg !13565
  br label %if.end51, !dbg !13566

if.end51:                                         ; preds = %if.then47, %lor.lhs.false
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end13
  %32 = load i32, i32* %t.addr, align 4, !dbg !13567
  %cmp53 = icmp eq i32 %32, 1, !dbg !13569
  br i1 %cmp53, label %land.lhs.true, label %if.end70, !dbg !13570

land.lhs.true:                                    ; preds = %if.end52
  %33 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13571
  %34 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !13573
  %parent55 = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 2, !dbg !13574
  %35 = load %struct.isoent*, %struct.isoent** %parent55, align 8, !dbg !13574
  %cmp56 = icmp eq %struct.isoent* %33, %35, !dbg !13575
  br i1 %cmp56, label %if.then58, label %if.end70, !dbg !13576

if.then58:                                        ; preds = %land.lhs.true
  store i32 7, i32* %length, align 4, !dbg !13577
  %36 = load i8*, i8** %bp.addr, align 8, !dbg !13579
  %cmp59 = icmp ne i8* %36, null, !dbg !13581
  br i1 %cmp59, label %if.then61, label %if.end69, !dbg !13582

if.then61:                                        ; preds = %if.then58
  %37 = load i8*, i8** %bp.addr, align 8, !dbg !13583
  %arrayidx = getelementptr inbounds i8, i8* %37, i64 1, !dbg !13583
  store i8 83, i8* %arrayidx, align 1, !dbg !13585
  %38 = load i8*, i8** %bp.addr, align 8, !dbg !13586
  %arrayidx62 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !13586
  store i8 80, i8* %arrayidx62, align 1, !dbg !13587
  %39 = load i32, i32* %length, align 4, !dbg !13588
  %conv63 = trunc i32 %39 to i8, !dbg !13588
  %40 = load i8*, i8** %bp.addr, align 8, !dbg !13589
  %arrayidx64 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !13589
  store i8 %conv63, i8* %arrayidx64, align 1, !dbg !13590
  %41 = load i8*, i8** %bp.addr, align 8, !dbg !13591
  %arrayidx65 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !13591
  store i8 1, i8* %arrayidx65, align 1, !dbg !13592
  %42 = load i8*, i8** %bp.addr, align 8, !dbg !13593
  %arrayidx66 = getelementptr inbounds i8, i8* %42, i64 5, !dbg !13593
  store i8 -66, i8* %arrayidx66, align 1, !dbg !13594
  %43 = load i8*, i8** %bp.addr, align 8, !dbg !13595
  %arrayidx67 = getelementptr inbounds i8, i8* %43, i64 6, !dbg !13595
  store i8 -17, i8* %arrayidx67, align 1, !dbg !13596
  %44 = load i8*, i8** %bp.addr, align 8, !dbg !13597
  %arrayidx68 = getelementptr inbounds i8, i8* %44, i64 7, !dbg !13597
  store i8 0, i8* %arrayidx68, align 1, !dbg !13598
  %45 = load i32, i32* %length, align 4, !dbg !13599
  %46 = load i8*, i8** %bp.addr, align 8, !dbg !13600
  %idx.ext = sext i32 %45 to i64, !dbg !13600
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %idx.ext, !dbg !13600
  store i8* %add.ptr, i8** %bp.addr, align 8, !dbg !13600
  br label %if.end69, !dbg !13601

if.end69:                                         ; preds = %if.then61, %if.then58
  %47 = load i32, i32* %length, align 4, !dbg !13602
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %47), !dbg !13603
  br label %if.end70, !dbg !13604

if.end70:                                         ; preds = %if.end69, %land.lhs.true, %if.end52
  store i32 5, i32* %length, align 4, !dbg !13605
  %limit = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13606
  %48 = load i32, i32* %limit, align 8, !dbg !13606
  %cur_len = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13606
  %49 = load i32, i32* %cur_len, align 8, !dbg !13606
  %sub = sub nsw i32 %48, %49, !dbg !13606
  %50 = load i32, i32* %length, align 4, !dbg !13608
  %cmp71 = icmp slt i32 %sub, %50, !dbg !13609
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !13610

if.then73:                                        ; preds = %if.end70
  %51 = load i32, i32* %length, align 4, !dbg !13611
  %call74 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %51), !dbg !13612
  store i8* %call74, i8** %bp.addr, align 8, !dbg !13613
  br label %if.end75, !dbg !13614

if.end75:                                         ; preds = %if.then73, %if.end70
  %52 = load i8*, i8** %bp.addr, align 8, !dbg !13615
  %cmp76 = icmp ne i8* %52, null, !dbg !13617
  br i1 %cmp76, label %if.then78, label %if.end87, !dbg !13618

if.then78:                                        ; preds = %if.end75
  %53 = load i8*, i8** %bp.addr, align 8, !dbg !13619
  %arrayidx79 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !13619
  store i8 82, i8* %arrayidx79, align 1, !dbg !13621
  %54 = load i8*, i8** %bp.addr, align 8, !dbg !13622
  %arrayidx80 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !13622
  store i8 82, i8* %arrayidx80, align 1, !dbg !13623
  %55 = load i32, i32* %length, align 4, !dbg !13624
  %conv81 = trunc i32 %55 to i8, !dbg !13624
  %56 = load i8*, i8** %bp.addr, align 8, !dbg !13625
  %arrayidx82 = getelementptr inbounds i8, i8* %56, i64 3, !dbg !13625
  store i8 %conv81, i8* %arrayidx82, align 1, !dbg !13626
  %57 = load i8*, i8** %bp.addr, align 8, !dbg !13627
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i64 4, !dbg !13627
  store i8 1, i8* %arrayidx83, align 1, !dbg !13628
  %58 = load i8, i8* %rr_flag, align 1, !dbg !13629
  %59 = load i8*, i8** %bp.addr, align 8, !dbg !13630
  %arrayidx84 = getelementptr inbounds i8, i8* %59, i64 5, !dbg !13630
  store i8 %58, i8* %arrayidx84, align 1, !dbg !13631
  %60 = load i32, i32* %length, align 4, !dbg !13632
  %61 = load i8*, i8** %bp.addr, align 8, !dbg !13633
  %idx.ext85 = sext i32 %60 to i64, !dbg !13633
  %add.ptr86 = getelementptr inbounds i8, i8* %61, i64 %idx.ext85, !dbg !13633
  store i8* %add.ptr86, i8** %bp.addr, align 8, !dbg !13633
  br label %if.end87, !dbg !13634

if.end87:                                         ; preds = %if.then78, %if.end75
  %62 = load i32, i32* %length, align 4, !dbg !13635
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %62), !dbg !13636
  %63 = load i8, i8* %rr_flag, align 1, !dbg !13637
  %conv88 = zext i8 %63 to i32, !dbg !13637
  %and = and i32 %conv88, 8, !dbg !13639
  %tobool = icmp ne i32 %and, 0, !dbg !13639
  br i1 %tobool, label %if.then89, label %if.end171, !dbg !13640

if.then89:                                        ; preds = %if.end87
  call void @llvm.dbg.declare(metadata i64* %nmlen, metadata !13641, metadata !986), !dbg !13643
  %64 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13644
  %basename = getelementptr inbounds %struct.isofile, %struct.isofile* %64, i32 0, i32 6, !dbg !13645
  %length90 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename, i32 0, i32 1, !dbg !13646
  %65 = load i64, i64* %length90, align 8, !dbg !13646
  store i64 %65, i64* %nmlen, align 8, !dbg !13643
  call void @llvm.dbg.declare(metadata i8** %nm, metadata !13647, metadata !986), !dbg !13648
  %66 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13649
  %basename91 = getelementptr inbounds %struct.isofile, %struct.isofile* %66, i32 0, i32 6, !dbg !13650
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %basename91, i32 0, i32 0, !dbg !13651
  %67 = load i8*, i8** %s, align 8, !dbg !13651
  store i8* %67, i8** %nm, align 8, !dbg !13648
  call void @llvm.dbg.declare(metadata i64* %nmmax, metadata !13652, metadata !986), !dbg !13653
  %limit92 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13654
  %68 = load i32, i32* %limit92, align 8, !dbg !13654
  %cur_len93 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13654
  %69 = load i32, i32* %cur_len93, align 8, !dbg !13654
  %sub94 = sub nsw i32 %68, %69, !dbg !13654
  %cmp95 = icmp slt i32 %sub94, 6, !dbg !13656
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !13657

if.then97:                                        ; preds = %if.then89
  %call98 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 6), !dbg !13658
  store i8* %call98, i8** %bp.addr, align 8, !dbg !13659
  br label %if.end99, !dbg !13660

if.end99:                                         ; preds = %if.then97, %if.then89
  %70 = load i8*, i8** %bp.addr, align 8, !dbg !13661
  %cmp100 = icmp ne i8* %70, null, !dbg !13663
  br i1 %cmp100, label %if.then102, label %if.end106, !dbg !13664

if.then102:                                       ; preds = %if.end99
  %71 = load i8*, i8** %bp.addr, align 8, !dbg !13665
  %arrayidx103 = getelementptr inbounds i8, i8* %71, i64 1, !dbg !13665
  store i8 78, i8* %arrayidx103, align 1, !dbg !13667
  %72 = load i8*, i8** %bp.addr, align 8, !dbg !13668
  %arrayidx104 = getelementptr inbounds i8, i8* %72, i64 2, !dbg !13668
  store i8 77, i8* %arrayidx104, align 1, !dbg !13669
  %73 = load i8*, i8** %bp.addr, align 8, !dbg !13670
  %arrayidx105 = getelementptr inbounds i8, i8* %73, i64 4, !dbg !13670
  store i8 1, i8* %arrayidx105, align 1, !dbg !13671
  br label %if.end106, !dbg !13672

if.end106:                                        ; preds = %if.then102, %if.end99
  %limit107 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13673
  %74 = load i32, i32* %limit107, align 8, !dbg !13673
  %cur_len108 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13673
  %75 = load i32, i32* %cur_len108, align 8, !dbg !13673
  %sub109 = sub nsw i32 %74, %75, !dbg !13673
  %conv110 = sext i32 %sub109 to i64, !dbg !13673
  store i64 %conv110, i64* %nmmax, align 8, !dbg !13674
  %76 = load i64, i64* %nmmax, align 8, !dbg !13675
  %cmp111 = icmp ugt i64 %76, 255, !dbg !13677
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !13678

if.then113:                                       ; preds = %if.end106
  store i64 255, i64* %nmmax, align 8, !dbg !13679
  br label %if.end114, !dbg !13680

if.end114:                                        ; preds = %if.then113, %if.end106
  br label %while.cond, !dbg !13681

while.cond:                                       ; preds = %if.end158, %if.end114
  %77 = load i64, i64* %nmlen, align 8, !dbg !13682
  %add = add i64 %77, 5, !dbg !13684
  %78 = load i64, i64* %nmmax, align 8, !dbg !13685
  %cmp115 = icmp ugt i64 %add, %78, !dbg !13686
  br i1 %cmp115, label %while.body, label %while.end, !dbg !13687

while.body:                                       ; preds = %while.cond
  %79 = load i64, i64* %nmmax, align 8, !dbg !13688
  %conv117 = trunc i64 %79 to i32, !dbg !13690
  store i32 %conv117, i32* %length, align 4, !dbg !13691
  %80 = load i8*, i8** %bp.addr, align 8, !dbg !13692
  %cmp118 = icmp ne i8* %80, null, !dbg !13694
  br i1 %cmp118, label %if.then120, label %if.end129, !dbg !13695

if.then120:                                       ; preds = %while.body
  %81 = load i32, i32* %length, align 4, !dbg !13696
  %conv121 = trunc i32 %81 to i8, !dbg !13696
  %82 = load i8*, i8** %bp.addr, align 8, !dbg !13698
  %arrayidx122 = getelementptr inbounds i8, i8* %82, i64 3, !dbg !13698
  store i8 %conv121, i8* %arrayidx122, align 1, !dbg !13699
  %83 = load i8*, i8** %bp.addr, align 8, !dbg !13700
  %arrayidx123 = getelementptr inbounds i8, i8* %83, i64 5, !dbg !13700
  store i8 1, i8* %arrayidx123, align 1, !dbg !13701
  %84 = load i8*, i8** %bp.addr, align 8, !dbg !13702
  %add.ptr124 = getelementptr inbounds i8, i8* %84, i64 6, !dbg !13703
  %85 = load i8*, i8** %nm, align 8, !dbg !13704
  %86 = load i32, i32* %length, align 4, !dbg !13705
  %sub125 = sub nsw i32 %86, 5, !dbg !13706
  %conv126 = sext i32 %sub125 to i64, !dbg !13705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr124, i8* %85, i64 %conv126, i32 1, i1 false), !dbg !13707
  %87 = load i32, i32* %length, align 4, !dbg !13708
  %88 = load i8*, i8** %bp.addr, align 8, !dbg !13709
  %idx.ext127 = sext i32 %87 to i64, !dbg !13709
  %add.ptr128 = getelementptr inbounds i8, i8* %88, i64 %idx.ext127, !dbg !13709
  store i8* %add.ptr128, i8** %bp.addr, align 8, !dbg !13709
  br label %if.end129, !dbg !13710

if.end129:                                        ; preds = %if.then120, %while.body
  %89 = load i32, i32* %length, align 4, !dbg !13711
  %sub130 = sub nsw i32 %89, 5, !dbg !13712
  %conv131 = sext i32 %sub130 to i64, !dbg !13711
  %90 = load i64, i64* %nmlen, align 8, !dbg !13713
  %sub132 = sub i64 %90, %conv131, !dbg !13713
  store i64 %sub132, i64* %nmlen, align 8, !dbg !13713
  %91 = load i32, i32* %length, align 4, !dbg !13714
  %sub133 = sub nsw i32 %91, 5, !dbg !13715
  %92 = load i8*, i8** %nm, align 8, !dbg !13716
  %idx.ext134 = sext i32 %sub133 to i64, !dbg !13716
  %add.ptr135 = getelementptr inbounds i8, i8* %92, i64 %idx.ext134, !dbg !13716
  store i8* %add.ptr135, i8** %nm, align 8, !dbg !13716
  %93 = load i32, i32* %length, align 4, !dbg !13717
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %93), !dbg !13718
  %limit136 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13719
  %94 = load i32, i32* %limit136, align 8, !dbg !13719
  %cur_len137 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13719
  %95 = load i32, i32* %cur_len137, align 8, !dbg !13719
  %sub138 = sub nsw i32 %94, %95, !dbg !13719
  %cmp139 = icmp slt i32 %sub138, 6, !dbg !13721
  br i1 %cmp139, label %if.then141, label %if.end151, !dbg !13722

if.then141:                                       ; preds = %if.end129
  %call142 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 6), !dbg !13723
  store i8* %call142, i8** %bp.addr, align 8, !dbg !13725
  %limit143 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13726
  %96 = load i32, i32* %limit143, align 8, !dbg !13726
  %cur_len144 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13726
  %97 = load i32, i32* %cur_len144, align 8, !dbg !13726
  %sub145 = sub nsw i32 %96, %97, !dbg !13726
  %conv146 = sext i32 %sub145 to i64, !dbg !13726
  store i64 %conv146, i64* %nmmax, align 8, !dbg !13727
  %98 = load i64, i64* %nmmax, align 8, !dbg !13728
  %cmp147 = icmp ugt i64 %98, 255, !dbg !13730
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !13731

if.then149:                                       ; preds = %if.then141
  store i64 255, i64* %nmmax, align 8, !dbg !13732
  br label %if.end150, !dbg !13733

if.end150:                                        ; preds = %if.then149, %if.then141
  br label %if.end151, !dbg !13734

if.end151:                                        ; preds = %if.end150, %if.end129
  %99 = load i8*, i8** %bp.addr, align 8, !dbg !13735
  %cmp152 = icmp ne i8* %99, null, !dbg !13737
  br i1 %cmp152, label %if.then154, label %if.end158, !dbg !13738

if.then154:                                       ; preds = %if.end151
  %100 = load i8*, i8** %bp.addr, align 8, !dbg !13739
  %arrayidx155 = getelementptr inbounds i8, i8* %100, i64 1, !dbg !13739
  store i8 78, i8* %arrayidx155, align 1, !dbg !13741
  %101 = load i8*, i8** %bp.addr, align 8, !dbg !13742
  %arrayidx156 = getelementptr inbounds i8, i8* %101, i64 2, !dbg !13742
  store i8 77, i8* %arrayidx156, align 1, !dbg !13743
  %102 = load i8*, i8** %bp.addr, align 8, !dbg !13744
  %arrayidx157 = getelementptr inbounds i8, i8* %102, i64 4, !dbg !13744
  store i8 1, i8* %arrayidx157, align 1, !dbg !13745
  br label %if.end158, !dbg !13746

if.end158:                                        ; preds = %if.then154, %if.end151
  br label %while.cond, !dbg !13747

while.end:                                        ; preds = %while.cond
  %103 = load i64, i64* %nmlen, align 8, !dbg !13749
  %conv159 = trunc i64 %103 to i32, !dbg !13750
  %add160 = add nsw i32 5, %conv159, !dbg !13751
  store i32 %add160, i32* %length, align 4, !dbg !13752
  %104 = load i8*, i8** %bp.addr, align 8, !dbg !13753
  %cmp161 = icmp ne i8* %104, null, !dbg !13755
  br i1 %cmp161, label %if.then163, label %if.end170, !dbg !13756

if.then163:                                       ; preds = %while.end
  %105 = load i32, i32* %length, align 4, !dbg !13757
  %conv164 = trunc i32 %105 to i8, !dbg !13757
  %106 = load i8*, i8** %bp.addr, align 8, !dbg !13759
  %arrayidx165 = getelementptr inbounds i8, i8* %106, i64 3, !dbg !13759
  store i8 %conv164, i8* %arrayidx165, align 1, !dbg !13760
  %107 = load i8*, i8** %bp.addr, align 8, !dbg !13761
  %arrayidx166 = getelementptr inbounds i8, i8* %107, i64 5, !dbg !13761
  store i8 0, i8* %arrayidx166, align 1, !dbg !13762
  %108 = load i8*, i8** %bp.addr, align 8, !dbg !13763
  %add.ptr167 = getelementptr inbounds i8, i8* %108, i64 6, !dbg !13764
  %109 = load i8*, i8** %nm, align 8, !dbg !13765
  %110 = load i64, i64* %nmlen, align 8, !dbg !13766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr167, i8* %109, i64 %110, i32 1, i1 false), !dbg !13767
  %111 = load i32, i32* %length, align 4, !dbg !13768
  %112 = load i8*, i8** %bp.addr, align 8, !dbg !13769
  %idx.ext168 = sext i32 %111 to i64, !dbg !13769
  %add.ptr169 = getelementptr inbounds i8, i8* %112, i64 %idx.ext168, !dbg !13769
  store i8* %add.ptr169, i8** %bp.addr, align 8, !dbg !13769
  br label %if.end170, !dbg !13770

if.end170:                                        ; preds = %if.then163, %while.end
  %113 = load i32, i32* %length, align 4, !dbg !13771
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %113), !dbg !13772
  br label %if.end171, !dbg !13773

if.end171:                                        ; preds = %if.end170, %if.end87
  %114 = load i8, i8* %rr_flag, align 1, !dbg !13774
  %conv172 = zext i8 %114 to i32, !dbg !13774
  %and173 = and i32 %conv172, 1, !dbg !13776
  %tobool174 = icmp ne i32 %and173, 0, !dbg !13776
  br i1 %tobool174, label %if.then175, label %if.end237, !dbg !13777

if.then175:                                       ; preds = %if.end171
  store i32 44, i32* %length, align 4, !dbg !13778
  %limit176 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13780
  %115 = load i32, i32* %limit176, align 8, !dbg !13780
  %cur_len177 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13780
  %116 = load i32, i32* %cur_len177, align 8, !dbg !13780
  %sub178 = sub nsw i32 %115, %116, !dbg !13780
  %117 = load i32, i32* %length, align 4, !dbg !13782
  %cmp179 = icmp slt i32 %sub178, %117, !dbg !13783
  br i1 %cmp179, label %if.then181, label %if.end183, !dbg !13784

if.then181:                                       ; preds = %if.then175
  %118 = load i32, i32* %length, align 4, !dbg !13785
  %call182 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %118), !dbg !13786
  store i8* %call182, i8** %bp.addr, align 8, !dbg !13787
  br label %if.end183, !dbg !13788

if.end183:                                        ; preds = %if.then181, %if.then175
  %119 = load i8*, i8** %bp.addr, align 8, !dbg !13789
  %cmp184 = icmp ne i8* %119, null, !dbg !13791
  br i1 %cmp184, label %if.then186, label %if.end236, !dbg !13792

if.then186:                                       ; preds = %if.end183
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13793, metadata !986), !dbg !13795
  call void @llvm.dbg.declare(metadata i64* %uid, metadata !13796, metadata !986), !dbg !13797
  call void @llvm.dbg.declare(metadata i64* %gid, metadata !13798, metadata !986), !dbg !13799
  %120 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13800
  %entry187 = getelementptr inbounds %struct.isofile, %struct.isofile* %120, i32 0, i32 4, !dbg !13801
  %121 = load %struct.archive_entry*, %struct.archive_entry** %entry187, align 8, !dbg !13801
  %call188 = call i32 @archive_entry_mode(%struct.archive_entry* %121), !dbg !13802
  store i32 %call188, i32* %mode, align 4, !dbg !13803
  %122 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13804
  %entry189 = getelementptr inbounds %struct.isofile, %struct.isofile* %122, i32 0, i32 4, !dbg !13805
  %123 = load %struct.archive_entry*, %struct.archive_entry** %entry189, align 8, !dbg !13805
  %call190 = call i64 @archive_entry_uid(%struct.archive_entry* %123), !dbg !13806
  store i64 %call190, i64* %uid, align 8, !dbg !13807
  %124 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13808
  %entry191 = getelementptr inbounds %struct.isofile, %struct.isofile* %124, i32 0, i32 4, !dbg !13809
  %125 = load %struct.archive_entry*, %struct.archive_entry** %entry191, align 8, !dbg !13809
  %call192 = call i64 @archive_entry_gid(%struct.archive_entry* %125), !dbg !13810
  store i64 %call192, i64* %gid, align 8, !dbg !13811
  %126 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !13812
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %126, i32 0, i32 37, !dbg !13814
  %127 = bitcast %struct.iso_option* %opt to i32*, !dbg !13815
  %bf.load = load i32, i32* %127, align 8, !dbg !13815
  %bf.lshr = lshr i32 %bf.load, 23, !dbg !13815
  %bf.clear = and i32 %bf.lshr, 3, !dbg !13815
  %cmp193 = icmp eq i32 %bf.clear, 2, !dbg !13816
  br i1 %cmp193, label %if.then195, label %if.end204, !dbg !13817

if.then195:                                       ; preds = %if.then186
  %128 = load i32, i32* %mode, align 4, !dbg !13818
  %or196 = or i32 %128, 292, !dbg !13818
  store i32 %or196, i32* %mode, align 4, !dbg !13818
  %129 = load i32, i32* %mode, align 4, !dbg !13820
  %and197 = and i32 %129, 73, !dbg !13822
  %tobool198 = icmp ne i32 %and197, 0, !dbg !13822
  br i1 %tobool198, label %if.then199, label %if.end201, !dbg !13823

if.then199:                                       ; preds = %if.then195
  %130 = load i32, i32* %mode, align 4, !dbg !13824
  %or200 = or i32 %130, 73, !dbg !13824
  store i32 %or200, i32* %mode, align 4, !dbg !13824
  br label %if.end201, !dbg !13825

if.end201:                                        ; preds = %if.then199, %if.then195
  %131 = load i32, i32* %mode, align 4, !dbg !13826
  %and202 = and i32 %131, -147, !dbg !13826
  store i32 %and202, i32* %mode, align 4, !dbg !13826
  %132 = load i32, i32* %mode, align 4, !dbg !13827
  %and203 = and i32 %132, -3585, !dbg !13827
  store i32 %and203, i32* %mode, align 4, !dbg !13827
  br label %if.end204, !dbg !13828

if.end204:                                        ; preds = %if.end201, %if.then186
  %133 = load i8*, i8** %bp.addr, align 8, !dbg !13829
  %arrayidx205 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !13829
  store i8 80, i8* %arrayidx205, align 1, !dbg !13830
  %134 = load i8*, i8** %bp.addr, align 8, !dbg !13831
  %arrayidx206 = getelementptr inbounds i8, i8* %134, i64 2, !dbg !13831
  store i8 88, i8* %arrayidx206, align 1, !dbg !13832
  %135 = load i32, i32* %length, align 4, !dbg !13833
  %conv207 = trunc i32 %135 to i8, !dbg !13833
  %136 = load i8*, i8** %bp.addr, align 8, !dbg !13834
  %arrayidx208 = getelementptr inbounds i8, i8* %136, i64 3, !dbg !13834
  store i8 %conv207, i8* %arrayidx208, align 1, !dbg !13835
  %137 = load i8*, i8** %bp.addr, align 8, !dbg !13836
  %arrayidx209 = getelementptr inbounds i8, i8* %137, i64 4, !dbg !13836
  store i8 1, i8* %arrayidx209, align 1, !dbg !13837
  %138 = load i8*, i8** %bp.addr, align 8, !dbg !13838
  %add.ptr210 = getelementptr inbounds i8, i8* %138, i64 5, !dbg !13839
  %139 = load i32, i32* %mode, align 4, !dbg !13840
  call void @set_num_733(i8* %add.ptr210, i32 %139), !dbg !13841
  %140 = load i8*, i8** %bp.addr, align 8, !dbg !13842
  %add.ptr211 = getelementptr inbounds i8, i8* %140, i64 13, !dbg !13843
  %141 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13844
  %entry212 = getelementptr inbounds %struct.isofile, %struct.isofile* %141, i32 0, i32 4, !dbg !13845
  %142 = load %struct.archive_entry*, %struct.archive_entry** %entry212, align 8, !dbg !13845
  %call213 = call i32 @archive_entry_nlink(%struct.archive_entry* %142), !dbg !13846
  call void @set_num_733(i8* %add.ptr211, i32 %call213), !dbg !13847
  %143 = load i8*, i8** %bp.addr, align 8, !dbg !13848
  %add.ptr214 = getelementptr inbounds i8, i8* %143, i64 21, !dbg !13849
  %144 = load i64, i64* %uid, align 8, !dbg !13850
  %conv215 = trunc i64 %144 to i32, !dbg !13851
  call void @set_num_733(i8* %add.ptr214, i32 %conv215), !dbg !13852
  %145 = load i8*, i8** %bp.addr, align 8, !dbg !13853
  %add.ptr216 = getelementptr inbounds i8, i8* %145, i64 29, !dbg !13854
  %146 = load i64, i64* %gid, align 8, !dbg !13855
  %conv217 = trunc i64 %146 to i32, !dbg !13856
  call void @set_num_733(i8* %add.ptr216, i32 %conv217), !dbg !13857
  %147 = load %struct.isoent*, %struct.isoent** %pxent, align 8, !dbg !13858
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %147, i32 0, i32 22, !dbg !13860
  %bf.load218 = load i8, i8* %dir, align 8, !dbg !13860
  %bf.shl = shl i8 %bf.load218, 6, !dbg !13860
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !13860
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !13860
  %tobool219 = icmp ne i32 %bf.cast, 0, !dbg !13858
  br i1 %tobool219, label %if.then220, label %if.else222, !dbg !13861

if.then220:                                       ; preds = %if.end204
  %148 = load i8*, i8** %bp.addr, align 8, !dbg !13862
  %add.ptr221 = getelementptr inbounds i8, i8* %148, i64 37, !dbg !13863
  %149 = load %struct.isoent*, %struct.isoent** %pxent, align 8, !dbg !13864
  %dir_location = getelementptr inbounds %struct.isoent, %struct.isoent* %149, i32 0, i32 12, !dbg !13865
  %150 = load i32, i32* %dir_location, align 4, !dbg !13865
  call void @set_num_733(i8* %add.ptr221, i32 %150), !dbg !13866
  br label %if.end233, !dbg !13866

if.else222:                                       ; preds = %if.end204
  %151 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13867
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %151, i32 0, i32 3, !dbg !13869
  %152 = load %struct.isofile*, %struct.isofile** %hardlink_target, align 8, !dbg !13869
  %cmp223 = icmp ne %struct.isofile* %152, null, !dbg !13870
  br i1 %cmp223, label %if.then225, label %if.else228, !dbg !13871

if.then225:                                       ; preds = %if.else222
  %153 = load i8*, i8** %bp.addr, align 8, !dbg !13872
  %add.ptr226 = getelementptr inbounds i8, i8* %153, i64 37, !dbg !13873
  %154 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13874
  %hardlink_target227 = getelementptr inbounds %struct.isofile, %struct.isofile* %154, i32 0, i32 3, !dbg !13875
  %155 = load %struct.isofile*, %struct.isofile** %hardlink_target227, align 8, !dbg !13875
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %155, i32 0, i32 11, !dbg !13876
  %156 = load %struct.content*, %struct.content** %cur_content, align 8, !dbg !13876
  %location = getelementptr inbounds %struct.content, %struct.content* %156, i32 0, i32 3, !dbg !13877
  %157 = load i32, i32* %location, align 4, !dbg !13877
  call void @set_num_733(i8* %add.ptr226, i32 %157), !dbg !13878
  br label %if.end232, !dbg !13878

if.else228:                                       ; preds = %if.else222
  %158 = load i8*, i8** %bp.addr, align 8, !dbg !13879
  %add.ptr229 = getelementptr inbounds i8, i8* %158, i64 37, !dbg !13880
  %159 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13881
  %cur_content230 = getelementptr inbounds %struct.isofile, %struct.isofile* %159, i32 0, i32 11, !dbg !13882
  %160 = load %struct.content*, %struct.content** %cur_content230, align 8, !dbg !13882
  %location231 = getelementptr inbounds %struct.content, %struct.content* %160, i32 0, i32 3, !dbg !13883
  %161 = load i32, i32* %location231, align 4, !dbg !13883
  call void @set_num_733(i8* %add.ptr229, i32 %161), !dbg !13884
  br label %if.end232

if.end232:                                        ; preds = %if.else228, %if.then225
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.then220
  %162 = load i32, i32* %length, align 4, !dbg !13885
  %163 = load i8*, i8** %bp.addr, align 8, !dbg !13886
  %idx.ext234 = sext i32 %162 to i64, !dbg !13886
  %add.ptr235 = getelementptr inbounds i8, i8* %163, i64 %idx.ext234, !dbg !13886
  store i8* %add.ptr235, i8** %bp.addr, align 8, !dbg !13886
  br label %if.end236, !dbg !13887

if.end236:                                        ; preds = %if.end233, %if.end183
  %164 = load i32, i32* %length, align 4, !dbg !13888
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %164), !dbg !13889
  br label %if.end237, !dbg !13890

if.end237:                                        ; preds = %if.end236, %if.end171
  %165 = load i8, i8* %rr_flag, align 1, !dbg !13891
  %conv238 = zext i8 %165 to i32, !dbg !13891
  %and239 = and i32 %conv238, 4, !dbg !13893
  %tobool240 = icmp ne i32 %and239, 0, !dbg !13893
  br i1 %tobool240, label %if.then241, label %if.end499, !dbg !13894

if.then241:                                       ; preds = %if.end237
  call void @llvm.dbg.declare(metadata i8** %sl, metadata !13895, metadata !986), !dbg !13897
  call void @llvm.dbg.declare(metadata i8* %sl_last, metadata !13898, metadata !986), !dbg !13899
  %limit242 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13900
  %166 = load i32, i32* %limit242, align 8, !dbg !13900
  %cur_len243 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13900
  %167 = load i32, i32* %cur_len243, align 8, !dbg !13900
  %sub244 = sub nsw i32 %166, %167, !dbg !13900
  %cmp245 = icmp slt i32 %sub244, 7, !dbg !13902
  br i1 %cmp245, label %if.then247, label %if.end249, !dbg !13903

if.then247:                                       ; preds = %if.then241
  %call248 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 7), !dbg !13904
  store i8* %call248, i8** %bp.addr, align 8, !dbg !13905
  br label %if.end249, !dbg !13906

if.end249:                                        ; preds = %if.then247, %if.then241
  %168 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !13907
  %symlink = getelementptr inbounds %struct.isofile, %struct.isofile* %168, i32 0, i32 8, !dbg !13908
  %s250 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %symlink, i32 0, i32 0, !dbg !13909
  %169 = load i8*, i8** %s250, align 8, !dbg !13909
  store i8* %169, i8** %sl, align 8, !dbg !13910
  store i8 0, i8* %sl_last, align 1, !dbg !13911
  %170 = load i8*, i8** %bp.addr, align 8, !dbg !13912
  %cmp251 = icmp ne i8* %170, null, !dbg !13914
  br i1 %cmp251, label %if.then253, label %if.end257, !dbg !13915

if.then253:                                       ; preds = %if.end249
  %171 = load i8*, i8** %bp.addr, align 8, !dbg !13916
  %arrayidx254 = getelementptr inbounds i8, i8* %171, i64 1, !dbg !13916
  store i8 83, i8* %arrayidx254, align 1, !dbg !13918
  %172 = load i8*, i8** %bp.addr, align 8, !dbg !13919
  %arrayidx255 = getelementptr inbounds i8, i8* %172, i64 2, !dbg !13919
  store i8 76, i8* %arrayidx255, align 1, !dbg !13920
  %173 = load i8*, i8** %bp.addr, align 8, !dbg !13921
  %arrayidx256 = getelementptr inbounds i8, i8* %173, i64 4, !dbg !13921
  store i8 1, i8* %arrayidx256, align 1, !dbg !13922
  br label %if.end257, !dbg !13923

if.end257:                                        ; preds = %if.then253, %if.end249
  br label %for.cond, !dbg !13924

for.cond:                                         ; preds = %if.end498, %if.end257
  call void @llvm.dbg.declare(metadata i8** %nc, metadata !13925, metadata !986), !dbg !13929
  call void @llvm.dbg.declare(metadata i8** %cf, metadata !13930, metadata !986), !dbg !13931
  call void @llvm.dbg.declare(metadata i8** %cl, metadata !13932, metadata !986), !dbg !13933
  call void @llvm.dbg.declare(metadata i8* %cldmy, metadata !13934, metadata !986), !dbg !13935
  store i8 0, i8* %cldmy, align 1, !dbg !13935
  call void @llvm.dbg.declare(metadata i32* %sllen, metadata !13936, metadata !986), !dbg !13937
  call void @llvm.dbg.declare(metadata i32* %slmax, metadata !13938, metadata !986), !dbg !13939
  %limit258 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !13940
  %174 = load i32, i32* %limit258, align 8, !dbg !13940
  %cur_len259 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !13940
  %175 = load i32, i32* %cur_len259, align 8, !dbg !13940
  %sub260 = sub nsw i32 %174, %175, !dbg !13940
  store i32 %sub260, i32* %slmax, align 4, !dbg !13941
  %176 = load i32, i32* %slmax, align 4, !dbg !13942
  %cmp261 = icmp sgt i32 %176, 255, !dbg !13944
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !13945

if.then263:                                       ; preds = %for.cond
  store i32 255, i32* %slmax, align 4, !dbg !13946
  br label %if.end264, !dbg !13947

if.end264:                                        ; preds = %if.then263, %for.cond
  %177 = load i8*, i8** %bp.addr, align 8, !dbg !13948
  %cmp265 = icmp ne i8* %177, null, !dbg !13950
  br i1 %cmp265, label %if.then267, label %if.else269, !dbg !13951

if.then267:                                       ; preds = %if.end264
  %178 = load i8*, i8** %bp.addr, align 8, !dbg !13952
  %arrayidx268 = getelementptr inbounds i8, i8* %178, i64 6, !dbg !13952
  store i8* %arrayidx268, i8** %nc, align 8, !dbg !13953
  br label %if.end270, !dbg !13954

if.else269:                                       ; preds = %if.end264
  store i8* null, i8** %nc, align 8, !dbg !13955
  br label %if.end270

if.end270:                                        ; preds = %if.else269, %if.then267
  store i8* null, i8** %cl, align 8, !dbg !13956
  store i8* null, i8** %cf, align 8, !dbg !13957
  store i32 0, i32* %sllen, align 4, !dbg !13958
  br label %while.cond271, !dbg !13959

while.cond271:                                    ; preds = %if.end454, %if.then445, %if.end423, %if.end363, %if.end291, %if.end270
  %179 = load i8*, i8** %sl, align 8, !dbg !13960
  %180 = load i8, i8* %179, align 1, !dbg !13962
  %conv272 = sext i8 %180 to i32, !dbg !13962
  %tobool273 = icmp ne i32 %conv272, 0, !dbg !13962
  br i1 %tobool273, label %land.rhs, label %land.end, !dbg !13963

land.rhs:                                         ; preds = %while.cond271
  %181 = load i32, i32* %sllen, align 4, !dbg !13964
  %add274 = add nsw i32 %181, 11, !dbg !13966
  %182 = load i32, i32* %slmax, align 4, !dbg !13967
  %cmp275 = icmp slt i32 %add274, %182, !dbg !13968
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond271
  %183 = phi i1 [ false, %while.cond271 ], [ %cmp275, %land.rhs ]
  br i1 %183, label %while.body277, label %while.end456, !dbg !13969

while.body277:                                    ; preds = %land.end
  %184 = load i8, i8* %sl_last, align 1, !dbg !13971
  %conv278 = sext i8 %184 to i32, !dbg !13971
  %cmp279 = icmp eq i32 %conv278, 0, !dbg !13974
  br i1 %cmp279, label %land.lhs.true281, label %if.end294, !dbg !13975

land.lhs.true281:                                 ; preds = %while.body277
  %185 = load i8*, i8** %sl, align 8, !dbg !13976
  %arrayidx282 = getelementptr inbounds i8, i8* %185, i64 0, !dbg !13976
  %186 = load i8, i8* %arrayidx282, align 1, !dbg !13976
  %conv283 = sext i8 %186 to i32, !dbg !13976
  %cmp284 = icmp eq i32 %conv283, 47, !dbg !13978
  br i1 %cmp284, label %if.then286, label %if.end294, !dbg !13979

if.then286:                                       ; preds = %land.lhs.true281
  %187 = load i8*, i8** %nc, align 8, !dbg !13980
  %cmp287 = icmp ne i8* %187, null, !dbg !13983
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !13984

if.then289:                                       ; preds = %if.then286
  %188 = load i8*, i8** %nc, align 8, !dbg !13985
  %incdec.ptr = getelementptr inbounds i8, i8* %188, i32 1, !dbg !13985
  store i8* %incdec.ptr, i8** %nc, align 8, !dbg !13985
  store i8* %188, i8** %cf, align 8, !dbg !13987
  %189 = load i8*, i8** %cf, align 8, !dbg !13988
  store i8 8, i8* %189, align 1, !dbg !13989
  %190 = load i8*, i8** %nc, align 8, !dbg !13990
  %incdec.ptr290 = getelementptr inbounds i8, i8* %190, i32 1, !dbg !13990
  store i8* %incdec.ptr290, i8** %nc, align 8, !dbg !13990
  store i8 0, i8* %190, align 1, !dbg !13991
  br label %if.end291, !dbg !13992

if.end291:                                        ; preds = %if.then289, %if.then286
  %191 = load i32, i32* %sllen, align 4, !dbg !13993
  %add292 = add nsw i32 %191, 2, !dbg !13993
  store i32 %add292, i32* %sllen, align 4, !dbg !13993
  %192 = load i8*, i8** %sl, align 8, !dbg !13994
  %incdec.ptr293 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !13994
  store i8* %incdec.ptr293, i8** %sl, align 8, !dbg !13994
  store i8 47, i8* %sl_last, align 1, !dbg !13995
  store i8* null, i8** %cl, align 8, !dbg !13996
  br label %while.cond271, !dbg !13997

if.end294:                                        ; preds = %land.lhs.true281, %while.body277
  %193 = load i8, i8* %sl_last, align 1, !dbg !13998
  %conv295 = sext i8 %193 to i32, !dbg !13998
  %cmp296 = icmp eq i32 %conv295, 0, !dbg !14000
  br i1 %cmp296, label %land.lhs.true302, label %lor.lhs.false298, !dbg !14001

lor.lhs.false298:                                 ; preds = %if.end294
  %194 = load i8, i8* %sl_last, align 1, !dbg !14002
  %conv299 = sext i8 %194 to i32, !dbg !14002
  %cmp300 = icmp eq i32 %conv299, 47, !dbg !14004
  br i1 %cmp300, label %land.lhs.true302, label %lor.lhs.false322, !dbg !14005

land.lhs.true302:                                 ; preds = %lor.lhs.false298, %if.end294
  %195 = load i8*, i8** %sl, align 8, !dbg !14006
  %arrayidx303 = getelementptr inbounds i8, i8* %195, i64 0, !dbg !14006
  %196 = load i8, i8* %arrayidx303, align 1, !dbg !14006
  %conv304 = sext i8 %196 to i32, !dbg !14006
  %cmp305 = icmp eq i32 %conv304, 46, !dbg !14007
  br i1 %cmp305, label %land.lhs.true307, label %lor.lhs.false322, !dbg !14008

land.lhs.true307:                                 ; preds = %land.lhs.true302
  %197 = load i8*, i8** %sl, align 8, !dbg !14009
  %arrayidx308 = getelementptr inbounds i8, i8* %197, i64 1, !dbg !14009
  %198 = load i8, i8* %arrayidx308, align 1, !dbg !14009
  %conv309 = sext i8 %198 to i32, !dbg !14009
  %cmp310 = icmp eq i32 %conv309, 46, !dbg !14010
  br i1 %cmp310, label %land.lhs.true312, label %lor.lhs.false322, !dbg !14011

land.lhs.true312:                                 ; preds = %land.lhs.true307
  %199 = load i8*, i8** %sl, align 8, !dbg !14012
  %arrayidx313 = getelementptr inbounds i8, i8* %199, i64 2, !dbg !14012
  %200 = load i8, i8* %arrayidx313, align 1, !dbg !14012
  %conv314 = sext i8 %200 to i32, !dbg !14012
  %cmp315 = icmp eq i32 %conv314, 47, !dbg !14013
  br i1 %cmp315, label %if.then347, label %lor.lhs.false317, !dbg !14014

lor.lhs.false317:                                 ; preds = %land.lhs.true312
  %201 = load i8*, i8** %sl, align 8, !dbg !14015
  %arrayidx318 = getelementptr inbounds i8, i8* %201, i64 2, !dbg !14015
  %202 = load i8, i8* %arrayidx318, align 1, !dbg !14015
  %conv319 = sext i8 %202 to i32, !dbg !14015
  %cmp320 = icmp eq i32 %conv319, 0, !dbg !14016
  br i1 %cmp320, label %if.then347, label %lor.lhs.false322, !dbg !14017

lor.lhs.false322:                                 ; preds = %lor.lhs.false317, %land.lhs.true307, %land.lhs.true302, %lor.lhs.false298
  %203 = load i8*, i8** %sl, align 8, !dbg !14018
  %arrayidx323 = getelementptr inbounds i8, i8* %203, i64 0, !dbg !14018
  %204 = load i8, i8* %arrayidx323, align 1, !dbg !14018
  %conv324 = sext i8 %204 to i32, !dbg !14018
  %cmp325 = icmp eq i32 %conv324, 47, !dbg !14019
  br i1 %cmp325, label %land.lhs.true327, label %if.end364, !dbg !14020

land.lhs.true327:                                 ; preds = %lor.lhs.false322
  %205 = load i8*, i8** %sl, align 8, !dbg !14021
  %arrayidx328 = getelementptr inbounds i8, i8* %205, i64 1, !dbg !14021
  %206 = load i8, i8* %arrayidx328, align 1, !dbg !14021
  %conv329 = sext i8 %206 to i32, !dbg !14021
  %cmp330 = icmp eq i32 %conv329, 46, !dbg !14022
  br i1 %cmp330, label %land.lhs.true332, label %if.end364, !dbg !14023

land.lhs.true332:                                 ; preds = %land.lhs.true327
  %207 = load i8*, i8** %sl, align 8, !dbg !14024
  %arrayidx333 = getelementptr inbounds i8, i8* %207, i64 2, !dbg !14024
  %208 = load i8, i8* %arrayidx333, align 1, !dbg !14024
  %conv334 = sext i8 %208 to i32, !dbg !14024
  %cmp335 = icmp eq i32 %conv334, 46, !dbg !14025
  br i1 %cmp335, label %land.lhs.true337, label %if.end364, !dbg !14026

land.lhs.true337:                                 ; preds = %land.lhs.true332
  %209 = load i8*, i8** %sl, align 8, !dbg !14027
  %arrayidx338 = getelementptr inbounds i8, i8* %209, i64 3, !dbg !14027
  %210 = load i8, i8* %arrayidx338, align 1, !dbg !14027
  %conv339 = sext i8 %210 to i32, !dbg !14027
  %cmp340 = icmp eq i32 %conv339, 47, !dbg !14028
  br i1 %cmp340, label %if.then347, label %lor.lhs.false342, !dbg !14029

lor.lhs.false342:                                 ; preds = %land.lhs.true337
  %211 = load i8*, i8** %sl, align 8, !dbg !14030
  %arrayidx343 = getelementptr inbounds i8, i8* %211, i64 3, !dbg !14030
  %212 = load i8, i8* %arrayidx343, align 1, !dbg !14030
  %conv344 = sext i8 %212 to i32, !dbg !14030
  %cmp345 = icmp eq i32 %conv344, 0, !dbg !14031
  br i1 %cmp345, label %if.then347, label %if.end364, !dbg !14032

if.then347:                                       ; preds = %lor.lhs.false342, %land.lhs.true337, %lor.lhs.false317, %land.lhs.true312
  %213 = load i8*, i8** %nc, align 8, !dbg !14034
  %cmp348 = icmp ne i8* %213, null, !dbg !14037
  br i1 %cmp348, label %if.then350, label %if.end353, !dbg !14038

if.then350:                                       ; preds = %if.then347
  %214 = load i8*, i8** %nc, align 8, !dbg !14039
  %incdec.ptr351 = getelementptr inbounds i8, i8* %214, i32 1, !dbg !14039
  store i8* %incdec.ptr351, i8** %nc, align 8, !dbg !14039
  store i8* %214, i8** %cf, align 8, !dbg !14041
  %215 = load i8*, i8** %cf, align 8, !dbg !14042
  store i8 4, i8* %215, align 1, !dbg !14043
  %216 = load i8*, i8** %nc, align 8, !dbg !14044
  %incdec.ptr352 = getelementptr inbounds i8, i8* %216, i32 1, !dbg !14044
  store i8* %incdec.ptr352, i8** %nc, align 8, !dbg !14044
  store i8 0, i8* %216, align 1, !dbg !14045
  br label %if.end353, !dbg !14046

if.end353:                                        ; preds = %if.then350, %if.then347
  %217 = load i32, i32* %sllen, align 4, !dbg !14047
  %add354 = add nsw i32 %217, 2, !dbg !14047
  store i32 %add354, i32* %sllen, align 4, !dbg !14047
  %218 = load i8*, i8** %sl, align 8, !dbg !14048
  %arrayidx355 = getelementptr inbounds i8, i8* %218, i64 0, !dbg !14048
  %219 = load i8, i8* %arrayidx355, align 1, !dbg !14048
  %conv356 = sext i8 %219 to i32, !dbg !14048
  %cmp357 = icmp eq i32 %conv356, 47, !dbg !14050
  br i1 %cmp357, label %if.then359, label %if.else361, !dbg !14051

if.then359:                                       ; preds = %if.end353
  %220 = load i8*, i8** %sl, align 8, !dbg !14052
  %add.ptr360 = getelementptr inbounds i8, i8* %220, i64 3, !dbg !14052
  store i8* %add.ptr360, i8** %sl, align 8, !dbg !14052
  br label %if.end363, !dbg !14053

if.else361:                                       ; preds = %if.end353
  %221 = load i8*, i8** %sl, align 8, !dbg !14054
  %add.ptr362 = getelementptr inbounds i8, i8* %221, i64 2, !dbg !14054
  store i8* %add.ptr362, i8** %sl, align 8, !dbg !14054
  br label %if.end363

if.end363:                                        ; preds = %if.else361, %if.then359
  store i8 46, i8* %sl_last, align 1, !dbg !14055
  store i8* null, i8** %cl, align 8, !dbg !14056
  br label %while.cond271, !dbg !14057

if.end364:                                        ; preds = %lor.lhs.false342, %land.lhs.true332, %land.lhs.true327, %lor.lhs.false322
  %222 = load i8, i8* %sl_last, align 1, !dbg !14058
  %conv365 = sext i8 %222 to i32, !dbg !14058
  %cmp366 = icmp eq i32 %conv365, 0, !dbg !14060
  br i1 %cmp366, label %land.lhs.true372, label %lor.lhs.false368, !dbg !14061

lor.lhs.false368:                                 ; preds = %if.end364
  %223 = load i8, i8* %sl_last, align 1, !dbg !14062
  %conv369 = sext i8 %223 to i32, !dbg !14062
  %cmp370 = icmp eq i32 %conv369, 47, !dbg !14064
  br i1 %cmp370, label %land.lhs.true372, label %lor.lhs.false387, !dbg !14065

land.lhs.true372:                                 ; preds = %lor.lhs.false368, %if.end364
  %224 = load i8*, i8** %sl, align 8, !dbg !14066
  %arrayidx373 = getelementptr inbounds i8, i8* %224, i64 0, !dbg !14066
  %225 = load i8, i8* %arrayidx373, align 1, !dbg !14066
  %conv374 = sext i8 %225 to i32, !dbg !14066
  %cmp375 = icmp eq i32 %conv374, 46, !dbg !14067
  br i1 %cmp375, label %land.lhs.true377, label %lor.lhs.false387, !dbg !14068

land.lhs.true377:                                 ; preds = %land.lhs.true372
  %226 = load i8*, i8** %sl, align 8, !dbg !14069
  %arrayidx378 = getelementptr inbounds i8, i8* %226, i64 1, !dbg !14069
  %227 = load i8, i8* %arrayidx378, align 1, !dbg !14069
  %conv379 = sext i8 %227 to i32, !dbg !14069
  %cmp380 = icmp eq i32 %conv379, 47, !dbg !14070
  br i1 %cmp380, label %if.then407, label %lor.lhs.false382, !dbg !14071

lor.lhs.false382:                                 ; preds = %land.lhs.true377
  %228 = load i8*, i8** %sl, align 8, !dbg !14072
  %arrayidx383 = getelementptr inbounds i8, i8* %228, i64 1, !dbg !14072
  %229 = load i8, i8* %arrayidx383, align 1, !dbg !14072
  %conv384 = sext i8 %229 to i32, !dbg !14072
  %cmp385 = icmp eq i32 %conv384, 0, !dbg !14073
  br i1 %cmp385, label %if.then407, label %lor.lhs.false387, !dbg !14074

lor.lhs.false387:                                 ; preds = %lor.lhs.false382, %land.lhs.true372, %lor.lhs.false368
  %230 = load i8*, i8** %sl, align 8, !dbg !14075
  %arrayidx388 = getelementptr inbounds i8, i8* %230, i64 0, !dbg !14075
  %231 = load i8, i8* %arrayidx388, align 1, !dbg !14075
  %conv389 = sext i8 %231 to i32, !dbg !14075
  %cmp390 = icmp eq i32 %conv389, 47, !dbg !14076
  br i1 %cmp390, label %land.lhs.true392, label %if.end424, !dbg !14077

land.lhs.true392:                                 ; preds = %lor.lhs.false387
  %232 = load i8*, i8** %sl, align 8, !dbg !14078
  %arrayidx393 = getelementptr inbounds i8, i8* %232, i64 1, !dbg !14078
  %233 = load i8, i8* %arrayidx393, align 1, !dbg !14078
  %conv394 = sext i8 %233 to i32, !dbg !14078
  %cmp395 = icmp eq i32 %conv394, 46, !dbg !14079
  br i1 %cmp395, label %land.lhs.true397, label %if.end424, !dbg !14080

land.lhs.true397:                                 ; preds = %land.lhs.true392
  %234 = load i8*, i8** %sl, align 8, !dbg !14081
  %arrayidx398 = getelementptr inbounds i8, i8* %234, i64 2, !dbg !14081
  %235 = load i8, i8* %arrayidx398, align 1, !dbg !14081
  %conv399 = sext i8 %235 to i32, !dbg !14081
  %cmp400 = icmp eq i32 %conv399, 47, !dbg !14082
  br i1 %cmp400, label %if.then407, label %lor.lhs.false402, !dbg !14083

lor.lhs.false402:                                 ; preds = %land.lhs.true397
  %236 = load i8*, i8** %sl, align 8, !dbg !14084
  %arrayidx403 = getelementptr inbounds i8, i8* %236, i64 2, !dbg !14084
  %237 = load i8, i8* %arrayidx403, align 1, !dbg !14084
  %conv404 = sext i8 %237 to i32, !dbg !14084
  %cmp405 = icmp eq i32 %conv404, 0, !dbg !14085
  br i1 %cmp405, label %if.then407, label %if.end424, !dbg !14086

if.then407:                                       ; preds = %lor.lhs.false402, %land.lhs.true397, %lor.lhs.false382, %land.lhs.true377
  %238 = load i8*, i8** %nc, align 8, !dbg !14087
  %cmp408 = icmp ne i8* %238, null, !dbg !14090
  br i1 %cmp408, label %if.then410, label %if.end413, !dbg !14091

if.then410:                                       ; preds = %if.then407
  %239 = load i8*, i8** %nc, align 8, !dbg !14092
  %incdec.ptr411 = getelementptr inbounds i8, i8* %239, i32 1, !dbg !14092
  store i8* %incdec.ptr411, i8** %nc, align 8, !dbg !14092
  store i8* %239, i8** %cf, align 8, !dbg !14094
  %240 = load i8*, i8** %cf, align 8, !dbg !14095
  store i8 2, i8* %240, align 1, !dbg !14096
  %241 = load i8*, i8** %nc, align 8, !dbg !14097
  %incdec.ptr412 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !14097
  store i8* %incdec.ptr412, i8** %nc, align 8, !dbg !14097
  store i8 0, i8* %241, align 1, !dbg !14098
  br label %if.end413, !dbg !14099

if.end413:                                        ; preds = %if.then410, %if.then407
  %242 = load i32, i32* %sllen, align 4, !dbg !14100
  %add414 = add nsw i32 %242, 2, !dbg !14100
  store i32 %add414, i32* %sllen, align 4, !dbg !14100
  %243 = load i8*, i8** %sl, align 8, !dbg !14101
  %arrayidx415 = getelementptr inbounds i8, i8* %243, i64 0, !dbg !14101
  %244 = load i8, i8* %arrayidx415, align 1, !dbg !14101
  %conv416 = sext i8 %244 to i32, !dbg !14101
  %cmp417 = icmp eq i32 %conv416, 47, !dbg !14103
  br i1 %cmp417, label %if.then419, label %if.else421, !dbg !14104

if.then419:                                       ; preds = %if.end413
  %245 = load i8*, i8** %sl, align 8, !dbg !14105
  %add.ptr420 = getelementptr inbounds i8, i8* %245, i64 2, !dbg !14105
  store i8* %add.ptr420, i8** %sl, align 8, !dbg !14105
  br label %if.end423, !dbg !14106

if.else421:                                       ; preds = %if.end413
  %246 = load i8*, i8** %sl, align 8, !dbg !14107
  %incdec.ptr422 = getelementptr inbounds i8, i8* %246, i32 1, !dbg !14107
  store i8* %incdec.ptr422, i8** %sl, align 8, !dbg !14107
  br label %if.end423

if.end423:                                        ; preds = %if.else421, %if.then419
  store i8 46, i8* %sl_last, align 1, !dbg !14108
  store i8* null, i8** %cl, align 8, !dbg !14109
  br label %while.cond271, !dbg !14110

if.end424:                                        ; preds = %lor.lhs.false402, %land.lhs.true392, %lor.lhs.false387
  %247 = load i8*, i8** %sl, align 8, !dbg !14111
  %arrayidx425 = getelementptr inbounds i8, i8* %247, i64 0, !dbg !14111
  %248 = load i8, i8* %arrayidx425, align 1, !dbg !14111
  %conv426 = sext i8 %248 to i32, !dbg !14111
  %cmp427 = icmp eq i32 %conv426, 47, !dbg !14113
  br i1 %cmp427, label %if.then432, label %lor.lhs.false429, !dbg !14114

lor.lhs.false429:                                 ; preds = %if.end424
  %249 = load i8*, i8** %cl, align 8, !dbg !14115
  %cmp430 = icmp eq i8* %249, null, !dbg !14117
  br i1 %cmp430, label %if.then432, label %if.end448, !dbg !14118

if.then432:                                       ; preds = %lor.lhs.false429, %if.end424
  %250 = load i8*, i8** %nc, align 8, !dbg !14119
  %cmp433 = icmp ne i8* %250, null, !dbg !14122
  br i1 %cmp433, label %if.then435, label %if.else438, !dbg !14123

if.then435:                                       ; preds = %if.then432
  %251 = load i8*, i8** %nc, align 8, !dbg !14124
  %incdec.ptr436 = getelementptr inbounds i8, i8* %251, i32 1, !dbg !14124
  store i8* %incdec.ptr436, i8** %nc, align 8, !dbg !14124
  store i8* %251, i8** %cf, align 8, !dbg !14126
  %252 = load i8*, i8** %cf, align 8, !dbg !14127
  store i8 0, i8* %252, align 1, !dbg !14128
  %253 = load i8*, i8** %nc, align 8, !dbg !14129
  %incdec.ptr437 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !14129
  store i8* %incdec.ptr437, i8** %nc, align 8, !dbg !14129
  store i8* %253, i8** %cl, align 8, !dbg !14130
  %254 = load i8*, i8** %cl, align 8, !dbg !14131
  store i8 0, i8* %254, align 1, !dbg !14132
  br label %if.end439, !dbg !14133

if.else438:                                       ; preds = %if.then432
  store i8* %cldmy, i8** %cl, align 8, !dbg !14134
  br label %if.end439

if.end439:                                        ; preds = %if.else438, %if.then435
  %255 = load i32, i32* %sllen, align 4, !dbg !14135
  %add440 = add nsw i32 %255, 2, !dbg !14135
  store i32 %add440, i32* %sllen, align 4, !dbg !14135
  %256 = load i8*, i8** %sl, align 8, !dbg !14136
  %arrayidx441 = getelementptr inbounds i8, i8* %256, i64 0, !dbg !14136
  %257 = load i8, i8* %arrayidx441, align 1, !dbg !14136
  %conv442 = sext i8 %257 to i32, !dbg !14136
  %cmp443 = icmp eq i32 %conv442, 47, !dbg !14138
  br i1 %cmp443, label %if.then445, label %if.end447, !dbg !14139

if.then445:                                       ; preds = %if.end439
  %258 = load i8*, i8** %sl, align 8, !dbg !14140
  %incdec.ptr446 = getelementptr inbounds i8, i8* %258, i32 1, !dbg !14140
  store i8* %incdec.ptr446, i8** %sl, align 8, !dbg !14140
  %259 = load i8, i8* %258, align 1, !dbg !14142
  store i8 %259, i8* %sl_last, align 1, !dbg !14143
  br label %while.cond271, !dbg !14144

if.end447:                                        ; preds = %if.end439
  br label %if.end448, !dbg !14145

if.end448:                                        ; preds = %if.end447, %lor.lhs.false429
  %260 = load i8*, i8** %sl, align 8, !dbg !14146
  %incdec.ptr449 = getelementptr inbounds i8, i8* %260, i32 1, !dbg !14146
  store i8* %incdec.ptr449, i8** %sl, align 8, !dbg !14146
  %261 = load i8, i8* %260, align 1, !dbg !14147
  store i8 %261, i8* %sl_last, align 1, !dbg !14148
  %262 = load i8*, i8** %nc, align 8, !dbg !14149
  %cmp450 = icmp ne i8* %262, null, !dbg !14151
  br i1 %cmp450, label %if.then452, label %if.end454, !dbg !14152

if.then452:                                       ; preds = %if.end448
  %263 = load i8, i8* %sl_last, align 1, !dbg !14153
  %264 = load i8*, i8** %nc, align 8, !dbg !14155
  %incdec.ptr453 = getelementptr inbounds i8, i8* %264, i32 1, !dbg !14155
  store i8* %incdec.ptr453, i8** %nc, align 8, !dbg !14155
  store i8 %263, i8* %264, align 1, !dbg !14156
  %265 = load i8*, i8** %cl, align 8, !dbg !14157
  %266 = load i8, i8* %265, align 1, !dbg !14158
  %inc = add i8 %266, 1, !dbg !14158
  store i8 %inc, i8* %265, align 1, !dbg !14158
  br label %if.end454, !dbg !14159

if.end454:                                        ; preds = %if.then452, %if.end448
  %267 = load i32, i32* %sllen, align 4, !dbg !14160
  %inc455 = add nsw i32 %267, 1, !dbg !14160
  store i32 %inc455, i32* %sllen, align 4, !dbg !14160
  br label %while.cond271, !dbg !14161

while.end456:                                     ; preds = %land.end
  %268 = load i8*, i8** %sl, align 8, !dbg !14163
  %269 = load i8, i8* %268, align 1, !dbg !14165
  %tobool457 = icmp ne i8 %269, 0, !dbg !14165
  br i1 %tobool457, label %if.then458, label %if.else487, !dbg !14166

if.then458:                                       ; preds = %while.end456
  %270 = load i32, i32* %sllen, align 4, !dbg !14167
  %add459 = add nsw i32 5, %270, !dbg !14169
  store i32 %add459, i32* %length, align 4, !dbg !14170
  %271 = load i8*, i8** %bp.addr, align 8, !dbg !14171
  %cmp460 = icmp ne i8* %271, null, !dbg !14173
  br i1 %cmp460, label %if.then462, label %if.end471, !dbg !14174

if.then462:                                       ; preds = %if.then458
  %272 = load i8*, i8** %cf, align 8, !dbg !14175
  %273 = load i8, i8* %272, align 1, !dbg !14177
  %conv463 = zext i8 %273 to i32, !dbg !14177
  %or464 = or i32 %conv463, 1, !dbg !14177
  %conv465 = trunc i32 %or464 to i8, !dbg !14177
  store i8 %conv465, i8* %272, align 1, !dbg !14177
  %274 = load i32, i32* %length, align 4, !dbg !14178
  %conv466 = trunc i32 %274 to i8, !dbg !14178
  %275 = load i8*, i8** %bp.addr, align 8, !dbg !14179
  %arrayidx467 = getelementptr inbounds i8, i8* %275, i64 3, !dbg !14179
  store i8 %conv466, i8* %arrayidx467, align 1, !dbg !14180
  %276 = load i8*, i8** %bp.addr, align 8, !dbg !14181
  %arrayidx468 = getelementptr inbounds i8, i8* %276, i64 5, !dbg !14181
  store i8 1, i8* %arrayidx468, align 1, !dbg !14182
  %277 = load i32, i32* %length, align 4, !dbg !14183
  %278 = load i8*, i8** %bp.addr, align 8, !dbg !14184
  %idx.ext469 = sext i32 %277 to i64, !dbg !14184
  %add.ptr470 = getelementptr inbounds i8, i8* %278, i64 %idx.ext469, !dbg !14184
  store i8* %add.ptr470, i8** %bp.addr, align 8, !dbg !14184
  br label %if.end471, !dbg !14185

if.end471:                                        ; preds = %if.then462, %if.then458
  %279 = load i32, i32* %length, align 4, !dbg !14186
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %279), !dbg !14187
  %limit472 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14188
  %280 = load i32, i32* %limit472, align 8, !dbg !14188
  %cur_len473 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14188
  %281 = load i32, i32* %cur_len473, align 8, !dbg !14188
  %sub474 = sub nsw i32 %280, %281, !dbg !14188
  %cmp475 = icmp slt i32 %sub474, 11, !dbg !14190
  br i1 %cmp475, label %if.then477, label %if.end479, !dbg !14191

if.then477:                                       ; preds = %if.end471
  %call478 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 11), !dbg !14192
  store i8* %call478, i8** %bp.addr, align 8, !dbg !14193
  br label %if.end479, !dbg !14194

if.end479:                                        ; preds = %if.then477, %if.end471
  %282 = load i8*, i8** %bp.addr, align 8, !dbg !14195
  %cmp480 = icmp ne i8* %282, null, !dbg !14197
  br i1 %cmp480, label %if.then482, label %if.end486, !dbg !14198

if.then482:                                       ; preds = %if.end479
  %283 = load i8*, i8** %bp.addr, align 8, !dbg !14199
  %arrayidx483 = getelementptr inbounds i8, i8* %283, i64 1, !dbg !14199
  store i8 83, i8* %arrayidx483, align 1, !dbg !14201
  %284 = load i8*, i8** %bp.addr, align 8, !dbg !14202
  %arrayidx484 = getelementptr inbounds i8, i8* %284, i64 2, !dbg !14202
  store i8 76, i8* %arrayidx484, align 1, !dbg !14203
  %285 = load i8*, i8** %bp.addr, align 8, !dbg !14204
  %arrayidx485 = getelementptr inbounds i8, i8* %285, i64 4, !dbg !14204
  store i8 1, i8* %arrayidx485, align 1, !dbg !14205
  br label %if.end486, !dbg !14206

if.end486:                                        ; preds = %if.then482, %if.end479
  br label %if.end498, !dbg !14207

if.else487:                                       ; preds = %while.end456
  %286 = load i32, i32* %sllen, align 4, !dbg !14208
  %add488 = add nsw i32 5, %286, !dbg !14210
  store i32 %add488, i32* %length, align 4, !dbg !14211
  %287 = load i8*, i8** %bp.addr, align 8, !dbg !14212
  %cmp489 = icmp ne i8* %287, null, !dbg !14214
  br i1 %cmp489, label %if.then491, label %if.end497, !dbg !14215

if.then491:                                       ; preds = %if.else487
  %288 = load i32, i32* %length, align 4, !dbg !14216
  %conv492 = trunc i32 %288 to i8, !dbg !14216
  %289 = load i8*, i8** %bp.addr, align 8, !dbg !14218
  %arrayidx493 = getelementptr inbounds i8, i8* %289, i64 3, !dbg !14218
  store i8 %conv492, i8* %arrayidx493, align 1, !dbg !14219
  %290 = load i8*, i8** %bp.addr, align 8, !dbg !14220
  %arrayidx494 = getelementptr inbounds i8, i8* %290, i64 5, !dbg !14220
  store i8 0, i8* %arrayidx494, align 1, !dbg !14221
  %291 = load i32, i32* %length, align 4, !dbg !14222
  %292 = load i8*, i8** %bp.addr, align 8, !dbg !14223
  %idx.ext495 = sext i32 %291 to i64, !dbg !14223
  %add.ptr496 = getelementptr inbounds i8, i8* %292, i64 %idx.ext495, !dbg !14223
  store i8* %add.ptr496, i8** %bp.addr, align 8, !dbg !14223
  br label %if.end497, !dbg !14224

if.end497:                                        ; preds = %if.then491, %if.else487
  %293 = load i32, i32* %length, align 4, !dbg !14225
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %293), !dbg !14226
  br label %for.end, !dbg !14227

if.end498:                                        ; preds = %if.end486
  br label %for.cond, !dbg !14228

for.end:                                          ; preds = %if.end497
  br label %if.end499, !dbg !14230

if.end499:                                        ; preds = %for.end, %if.end237
  %294 = load i8, i8* %rr_flag, align 1, !dbg !14231
  %conv500 = zext i8 %294 to i32, !dbg !14231
  %and501 = and i32 %conv500, 128, !dbg !14233
  %tobool502 = icmp ne i32 %and501, 0, !dbg !14233
  br i1 %tobool502, label %if.then503, label %if.end602, !dbg !14234

if.then503:                                       ; preds = %if.end499
  call void @llvm.dbg.declare(metadata i8* %tf_flags, metadata !14235, metadata !986), !dbg !14237
  store i32 5, i32* %length, align 4, !dbg !14238
  store i8 0, i8* %tf_flags, align 1, !dbg !14239
  %295 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14240
  %entry504 = getelementptr inbounds %struct.isofile, %struct.isofile* %295, i32 0, i32 4, !dbg !14242
  %296 = load %struct.archive_entry*, %struct.archive_entry** %entry504, align 8, !dbg !14242
  %call505 = call i32 @archive_entry_birthtime_is_set(%struct.archive_entry* %296), !dbg !14243
  %tobool506 = icmp ne i32 %call505, 0, !dbg !14243
  br i1 %tobool506, label %land.lhs.true507, label %if.end519, !dbg !14244

land.lhs.true507:                                 ; preds = %if.then503
  %297 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14245
  %entry508 = getelementptr inbounds %struct.isofile, %struct.isofile* %297, i32 0, i32 4, !dbg !14246
  %298 = load %struct.archive_entry*, %struct.archive_entry** %entry508, align 8, !dbg !14246
  %call509 = call i64 @archive_entry_birthtime(%struct.archive_entry* %298), !dbg !14247
  %299 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14248
  %entry510 = getelementptr inbounds %struct.isofile, %struct.isofile* %299, i32 0, i32 4, !dbg !14249
  %300 = load %struct.archive_entry*, %struct.archive_entry** %entry510, align 8, !dbg !14249
  %call511 = call i64 @archive_entry_mtime(%struct.archive_entry* %300), !dbg !14250
  %cmp512 = icmp sle i64 %call509, %call511, !dbg !14251
  br i1 %cmp512, label %if.then514, label %if.end519, !dbg !14252

if.then514:                                       ; preds = %land.lhs.true507
  %301 = load i32, i32* %length, align 4, !dbg !14254
  %add515 = add nsw i32 %301, 7, !dbg !14254
  store i32 %add515, i32* %length, align 4, !dbg !14254
  %302 = load i8, i8* %tf_flags, align 1, !dbg !14256
  %conv516 = zext i8 %302 to i32, !dbg !14256
  %or517 = or i32 %conv516, 1, !dbg !14256
  %conv518 = trunc i32 %or517 to i8, !dbg !14256
  store i8 %conv518, i8* %tf_flags, align 1, !dbg !14256
  br label %if.end519, !dbg !14257

if.end519:                                        ; preds = %if.then514, %land.lhs.true507, %if.then503
  %303 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14258
  %entry520 = getelementptr inbounds %struct.isofile, %struct.isofile* %303, i32 0, i32 4, !dbg !14260
  %304 = load %struct.archive_entry*, %struct.archive_entry** %entry520, align 8, !dbg !14260
  %call521 = call i32 @archive_entry_mtime_is_set(%struct.archive_entry* %304), !dbg !14261
  %tobool522 = icmp ne i32 %call521, 0, !dbg !14261
  br i1 %tobool522, label %if.then523, label %if.end528, !dbg !14262

if.then523:                                       ; preds = %if.end519
  %305 = load i32, i32* %length, align 4, !dbg !14263
  %add524 = add nsw i32 %305, 7, !dbg !14263
  store i32 %add524, i32* %length, align 4, !dbg !14263
  %306 = load i8, i8* %tf_flags, align 1, !dbg !14265
  %conv525 = zext i8 %306 to i32, !dbg !14265
  %or526 = or i32 %conv525, 2, !dbg !14265
  %conv527 = trunc i32 %or526 to i8, !dbg !14265
  store i8 %conv527, i8* %tf_flags, align 1, !dbg !14265
  br label %if.end528, !dbg !14266

if.end528:                                        ; preds = %if.then523, %if.end519
  %307 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14267
  %entry529 = getelementptr inbounds %struct.isofile, %struct.isofile* %307, i32 0, i32 4, !dbg !14269
  %308 = load %struct.archive_entry*, %struct.archive_entry** %entry529, align 8, !dbg !14269
  %call530 = call i32 @archive_entry_atime_is_set(%struct.archive_entry* %308), !dbg !14270
  %tobool531 = icmp ne i32 %call530, 0, !dbg !14270
  br i1 %tobool531, label %if.then532, label %if.end537, !dbg !14271

if.then532:                                       ; preds = %if.end528
  %309 = load i32, i32* %length, align 4, !dbg !14272
  %add533 = add nsw i32 %309, 7, !dbg !14272
  store i32 %add533, i32* %length, align 4, !dbg !14272
  %310 = load i8, i8* %tf_flags, align 1, !dbg !14274
  %conv534 = zext i8 %310 to i32, !dbg !14274
  %or535 = or i32 %conv534, 4, !dbg !14274
  %conv536 = trunc i32 %or535 to i8, !dbg !14274
  store i8 %conv536, i8* %tf_flags, align 1, !dbg !14274
  br label %if.end537, !dbg !14275

if.end537:                                        ; preds = %if.then532, %if.end528
  %311 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14276
  %entry538 = getelementptr inbounds %struct.isofile, %struct.isofile* %311, i32 0, i32 4, !dbg !14278
  %312 = load %struct.archive_entry*, %struct.archive_entry** %entry538, align 8, !dbg !14278
  %call539 = call i32 @archive_entry_ctime_is_set(%struct.archive_entry* %312), !dbg !14279
  %tobool540 = icmp ne i32 %call539, 0, !dbg !14279
  br i1 %tobool540, label %if.then541, label %if.end546, !dbg !14280

if.then541:                                       ; preds = %if.end537
  %313 = load i32, i32* %length, align 4, !dbg !14281
  %add542 = add nsw i32 %313, 7, !dbg !14281
  store i32 %add542, i32* %length, align 4, !dbg !14281
  %314 = load i8, i8* %tf_flags, align 1, !dbg !14283
  %conv543 = zext i8 %314 to i32, !dbg !14283
  %or544 = or i32 %conv543, 8, !dbg !14283
  %conv545 = trunc i32 %or544 to i8, !dbg !14283
  store i8 %conv545, i8* %tf_flags, align 1, !dbg !14283
  br label %if.end546, !dbg !14284

if.end546:                                        ; preds = %if.then541, %if.end537
  %limit547 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14285
  %315 = load i32, i32* %limit547, align 8, !dbg !14285
  %cur_len548 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14285
  %316 = load i32, i32* %cur_len548, align 8, !dbg !14285
  %sub549 = sub nsw i32 %315, %316, !dbg !14285
  %317 = load i32, i32* %length, align 4, !dbg !14287
  %cmp550 = icmp slt i32 %sub549, %317, !dbg !14288
  br i1 %cmp550, label %if.then552, label %if.end554, !dbg !14289

if.then552:                                       ; preds = %if.end546
  %318 = load i32, i32* %length, align 4, !dbg !14290
  %call553 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %318), !dbg !14291
  store i8* %call553, i8** %bp.addr, align 8, !dbg !14292
  br label %if.end554, !dbg !14293

if.end554:                                        ; preds = %if.then552, %if.end546
  %319 = load i8*, i8** %bp.addr, align 8, !dbg !14294
  %cmp555 = icmp ne i8* %319, null, !dbg !14296
  br i1 %cmp555, label %if.then557, label %if.end601, !dbg !14297

if.then557:                                       ; preds = %if.end554
  %320 = load i8*, i8** %bp.addr, align 8, !dbg !14298
  %arrayidx558 = getelementptr inbounds i8, i8* %320, i64 1, !dbg !14298
  store i8 84, i8* %arrayidx558, align 1, !dbg !14300
  %321 = load i8*, i8** %bp.addr, align 8, !dbg !14301
  %arrayidx559 = getelementptr inbounds i8, i8* %321, i64 2, !dbg !14301
  store i8 70, i8* %arrayidx559, align 1, !dbg !14302
  %322 = load i32, i32* %length, align 4, !dbg !14303
  %conv560 = trunc i32 %322 to i8, !dbg !14303
  %323 = load i8*, i8** %bp.addr, align 8, !dbg !14304
  %arrayidx561 = getelementptr inbounds i8, i8* %323, i64 3, !dbg !14304
  store i8 %conv560, i8* %arrayidx561, align 1, !dbg !14305
  %324 = load i8*, i8** %bp.addr, align 8, !dbg !14306
  %arrayidx562 = getelementptr inbounds i8, i8* %324, i64 4, !dbg !14306
  store i8 1, i8* %arrayidx562, align 1, !dbg !14307
  %325 = load i8, i8* %tf_flags, align 1, !dbg !14308
  %326 = load i8*, i8** %bp.addr, align 8, !dbg !14309
  %arrayidx563 = getelementptr inbounds i8, i8* %326, i64 5, !dbg !14309
  store i8 %325, i8* %arrayidx563, align 1, !dbg !14310
  %327 = load i8*, i8** %bp.addr, align 8, !dbg !14311
  %add.ptr564 = getelementptr inbounds i8, i8* %327, i64 5, !dbg !14311
  store i8* %add.ptr564, i8** %bp.addr, align 8, !dbg !14311
  %328 = load i8, i8* %tf_flags, align 1, !dbg !14312
  %conv565 = zext i8 %328 to i32, !dbg !14312
  %and566 = and i32 %conv565, 1, !dbg !14314
  %tobool567 = icmp ne i32 %and566, 0, !dbg !14314
  br i1 %tobool567, label %if.then568, label %if.end573, !dbg !14315

if.then568:                                       ; preds = %if.then557
  %329 = load i8*, i8** %bp.addr, align 8, !dbg !14316
  %add.ptr569 = getelementptr inbounds i8, i8* %329, i64 1, !dbg !14318
  %330 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14319
  %entry570 = getelementptr inbounds %struct.isofile, %struct.isofile* %330, i32 0, i32 4, !dbg !14320
  %331 = load %struct.archive_entry*, %struct.archive_entry** %entry570, align 8, !dbg !14320
  %call571 = call i64 @archive_entry_birthtime(%struct.archive_entry* %331), !dbg !14321
  call void @set_time_915(i8* %add.ptr569, i64 %call571), !dbg !14322
  %332 = load i8*, i8** %bp.addr, align 8, !dbg !14323
  %add.ptr572 = getelementptr inbounds i8, i8* %332, i64 7, !dbg !14323
  store i8* %add.ptr572, i8** %bp.addr, align 8, !dbg !14323
  br label %if.end573, !dbg !14324

if.end573:                                        ; preds = %if.then568, %if.then557
  %333 = load i8, i8* %tf_flags, align 1, !dbg !14325
  %conv574 = zext i8 %333 to i32, !dbg !14325
  %and575 = and i32 %conv574, 2, !dbg !14327
  %tobool576 = icmp ne i32 %and575, 0, !dbg !14327
  br i1 %tobool576, label %if.then577, label %if.end582, !dbg !14328

if.then577:                                       ; preds = %if.end573
  %334 = load i8*, i8** %bp.addr, align 8, !dbg !14329
  %add.ptr578 = getelementptr inbounds i8, i8* %334, i64 1, !dbg !14331
  %335 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14332
  %entry579 = getelementptr inbounds %struct.isofile, %struct.isofile* %335, i32 0, i32 4, !dbg !14333
  %336 = load %struct.archive_entry*, %struct.archive_entry** %entry579, align 8, !dbg !14333
  %call580 = call i64 @archive_entry_mtime(%struct.archive_entry* %336), !dbg !14334
  call void @set_time_915(i8* %add.ptr578, i64 %call580), !dbg !14335
  %337 = load i8*, i8** %bp.addr, align 8, !dbg !14336
  %add.ptr581 = getelementptr inbounds i8, i8* %337, i64 7, !dbg !14336
  store i8* %add.ptr581, i8** %bp.addr, align 8, !dbg !14336
  br label %if.end582, !dbg !14337

if.end582:                                        ; preds = %if.then577, %if.end573
  %338 = load i8, i8* %tf_flags, align 1, !dbg !14338
  %conv583 = zext i8 %338 to i32, !dbg !14338
  %and584 = and i32 %conv583, 4, !dbg !14340
  %tobool585 = icmp ne i32 %and584, 0, !dbg !14340
  br i1 %tobool585, label %if.then586, label %if.end591, !dbg !14341

if.then586:                                       ; preds = %if.end582
  %339 = load i8*, i8** %bp.addr, align 8, !dbg !14342
  %add.ptr587 = getelementptr inbounds i8, i8* %339, i64 1, !dbg !14344
  %340 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14345
  %entry588 = getelementptr inbounds %struct.isofile, %struct.isofile* %340, i32 0, i32 4, !dbg !14346
  %341 = load %struct.archive_entry*, %struct.archive_entry** %entry588, align 8, !dbg !14346
  %call589 = call i64 @archive_entry_atime(%struct.archive_entry* %341), !dbg !14347
  call void @set_time_915(i8* %add.ptr587, i64 %call589), !dbg !14348
  %342 = load i8*, i8** %bp.addr, align 8, !dbg !14349
  %add.ptr590 = getelementptr inbounds i8, i8* %342, i64 7, !dbg !14349
  store i8* %add.ptr590, i8** %bp.addr, align 8, !dbg !14349
  br label %if.end591, !dbg !14350

if.end591:                                        ; preds = %if.then586, %if.end582
  %343 = load i8, i8* %tf_flags, align 1, !dbg !14351
  %conv592 = zext i8 %343 to i32, !dbg !14351
  %and593 = and i32 %conv592, 8, !dbg !14353
  %tobool594 = icmp ne i32 %and593, 0, !dbg !14353
  br i1 %tobool594, label %if.then595, label %if.end600, !dbg !14354

if.then595:                                       ; preds = %if.end591
  %344 = load i8*, i8** %bp.addr, align 8, !dbg !14355
  %add.ptr596 = getelementptr inbounds i8, i8* %344, i64 1, !dbg !14357
  %345 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14358
  %entry597 = getelementptr inbounds %struct.isofile, %struct.isofile* %345, i32 0, i32 4, !dbg !14359
  %346 = load %struct.archive_entry*, %struct.archive_entry** %entry597, align 8, !dbg !14359
  %call598 = call i64 @archive_entry_ctime(%struct.archive_entry* %346), !dbg !14360
  call void @set_time_915(i8* %add.ptr596, i64 %call598), !dbg !14361
  %347 = load i8*, i8** %bp.addr, align 8, !dbg !14362
  %add.ptr599 = getelementptr inbounds i8, i8* %347, i64 7, !dbg !14362
  store i8* %add.ptr599, i8** %bp.addr, align 8, !dbg !14362
  br label %if.end600, !dbg !14363

if.end600:                                        ; preds = %if.then595, %if.end591
  br label %if.end601, !dbg !14364

if.end601:                                        ; preds = %if.end600, %if.end554
  %348 = load i32, i32* %length, align 4, !dbg !14365
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %348), !dbg !14366
  br label %if.end602, !dbg !14367

if.end602:                                        ; preds = %if.end601, %if.end499
  %349 = load i8, i8* %rr_flag, align 1, !dbg !14368
  %conv603 = zext i8 %349 to i32, !dbg !14368
  %and604 = and i32 %conv603, 64, !dbg !14370
  %tobool605 = icmp ne i32 %and604, 0, !dbg !14370
  br i1 %tobool605, label %if.then606, label %if.end626, !dbg !14371

if.then606:                                       ; preds = %if.end602
  store i32 4, i32* %length, align 4, !dbg !14372
  %limit607 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14374
  %350 = load i32, i32* %limit607, align 8, !dbg !14374
  %cur_len608 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14374
  %351 = load i32, i32* %cur_len608, align 8, !dbg !14374
  %sub609 = sub nsw i32 %350, %351, !dbg !14374
  %352 = load i32, i32* %length, align 4, !dbg !14376
  %cmp610 = icmp slt i32 %sub609, %352, !dbg !14377
  br i1 %cmp610, label %if.then612, label %if.end614, !dbg !14378

if.then612:                                       ; preds = %if.then606
  %353 = load i32, i32* %length, align 4, !dbg !14379
  %call613 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %353), !dbg !14380
  store i8* %call613, i8** %bp.addr, align 8, !dbg !14381
  br label %if.end614, !dbg !14382

if.end614:                                        ; preds = %if.then612, %if.then606
  %354 = load i8*, i8** %bp.addr, align 8, !dbg !14383
  %cmp615 = icmp ne i8* %354, null, !dbg !14385
  br i1 %cmp615, label %if.then617, label %if.end625, !dbg !14386

if.then617:                                       ; preds = %if.end614
  %355 = load i8*, i8** %bp.addr, align 8, !dbg !14387
  %arrayidx618 = getelementptr inbounds i8, i8* %355, i64 1, !dbg !14387
  store i8 82, i8* %arrayidx618, align 1, !dbg !14389
  %356 = load i8*, i8** %bp.addr, align 8, !dbg !14390
  %arrayidx619 = getelementptr inbounds i8, i8* %356, i64 2, !dbg !14390
  store i8 69, i8* %arrayidx619, align 1, !dbg !14391
  %357 = load i32, i32* %length, align 4, !dbg !14392
  %conv620 = trunc i32 %357 to i8, !dbg !14392
  %358 = load i8*, i8** %bp.addr, align 8, !dbg !14393
  %arrayidx621 = getelementptr inbounds i8, i8* %358, i64 3, !dbg !14393
  store i8 %conv620, i8* %arrayidx621, align 1, !dbg !14394
  %359 = load i8*, i8** %bp.addr, align 8, !dbg !14395
  %arrayidx622 = getelementptr inbounds i8, i8* %359, i64 4, !dbg !14395
  store i8 1, i8* %arrayidx622, align 1, !dbg !14396
  %360 = load i32, i32* %length, align 4, !dbg !14397
  %361 = load i8*, i8** %bp.addr, align 8, !dbg !14398
  %idx.ext623 = sext i32 %360 to i64, !dbg !14398
  %add.ptr624 = getelementptr inbounds i8, i8* %361, i64 %idx.ext623, !dbg !14398
  store i8* %add.ptr624, i8** %bp.addr, align 8, !dbg !14398
  br label %if.end625, !dbg !14399

if.end625:                                        ; preds = %if.then617, %if.end614
  %362 = load i32, i32* %length, align 4, !dbg !14400
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %362), !dbg !14401
  br label %if.end626, !dbg !14402

if.end626:                                        ; preds = %if.end625, %if.end602
  %363 = load i8, i8* %rr_flag, align 1, !dbg !14403
  %conv627 = zext i8 %363 to i32, !dbg !14403
  %and628 = and i32 %conv627, 32, !dbg !14405
  %tobool629 = icmp ne i32 %and628, 0, !dbg !14405
  br i1 %tobool629, label %if.then630, label %if.end652, !dbg !14406

if.then630:                                       ; preds = %if.end626
  store i32 12, i32* %length, align 4, !dbg !14407
  %limit631 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14409
  %364 = load i32, i32* %limit631, align 8, !dbg !14409
  %cur_len632 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14409
  %365 = load i32, i32* %cur_len632, align 8, !dbg !14409
  %sub633 = sub nsw i32 %364, %365, !dbg !14409
  %366 = load i32, i32* %length, align 4, !dbg !14411
  %cmp634 = icmp slt i32 %sub633, %366, !dbg !14412
  br i1 %cmp634, label %if.then636, label %if.end638, !dbg !14413

if.then636:                                       ; preds = %if.then630
  %367 = load i32, i32* %length, align 4, !dbg !14414
  %call637 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %367), !dbg !14415
  store i8* %call637, i8** %bp.addr, align 8, !dbg !14416
  br label %if.end638, !dbg !14417

if.end638:                                        ; preds = %if.then636, %if.then630
  %368 = load i8*, i8** %bp.addr, align 8, !dbg !14418
  %cmp639 = icmp ne i8* %368, null, !dbg !14420
  br i1 %cmp639, label %if.then641, label %if.end651, !dbg !14421

if.then641:                                       ; preds = %if.end638
  %369 = load i8*, i8** %bp.addr, align 8, !dbg !14422
  %arrayidx642 = getelementptr inbounds i8, i8* %369, i64 1, !dbg !14422
  store i8 80, i8* %arrayidx642, align 1, !dbg !14424
  %370 = load i8*, i8** %bp.addr, align 8, !dbg !14425
  %arrayidx643 = getelementptr inbounds i8, i8* %370, i64 2, !dbg !14425
  store i8 76, i8* %arrayidx643, align 1, !dbg !14426
  %371 = load i32, i32* %length, align 4, !dbg !14427
  %conv644 = trunc i32 %371 to i8, !dbg !14427
  %372 = load i8*, i8** %bp.addr, align 8, !dbg !14428
  %arrayidx645 = getelementptr inbounds i8, i8* %372, i64 3, !dbg !14428
  store i8 %conv644, i8* %arrayidx645, align 1, !dbg !14429
  %373 = load i8*, i8** %bp.addr, align 8, !dbg !14430
  %arrayidx646 = getelementptr inbounds i8, i8* %373, i64 4, !dbg !14430
  store i8 1, i8* %arrayidx646, align 1, !dbg !14431
  %374 = load i8*, i8** %bp.addr, align 8, !dbg !14432
  %add.ptr647 = getelementptr inbounds i8, i8* %374, i64 5, !dbg !14433
  %375 = load %struct.isoent*, %struct.isoent** %rr_parent, align 8, !dbg !14434
  %dir_location648 = getelementptr inbounds %struct.isoent, %struct.isoent* %375, i32 0, i32 12, !dbg !14435
  %376 = load i32, i32* %dir_location648, align 4, !dbg !14435
  call void @set_num_733(i8* %add.ptr647, i32 %376), !dbg !14436
  %377 = load i32, i32* %length, align 4, !dbg !14437
  %378 = load i8*, i8** %bp.addr, align 8, !dbg !14438
  %idx.ext649 = sext i32 %377 to i64, !dbg !14438
  %add.ptr650 = getelementptr inbounds i8, i8* %378, i64 %idx.ext649, !dbg !14438
  store i8* %add.ptr650, i8** %bp.addr, align 8, !dbg !14438
  br label %if.end651, !dbg !14439

if.end651:                                        ; preds = %if.then641, %if.end638
  %379 = load i32, i32* %length, align 4, !dbg !14440
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %379), !dbg !14441
  br label %if.end652, !dbg !14442

if.end652:                                        ; preds = %if.end651, %if.end626
  %380 = load i8, i8* %rr_flag, align 1, !dbg !14443
  %conv653 = zext i8 %380 to i32, !dbg !14443
  %and654 = and i32 %conv653, 16, !dbg !14445
  %tobool655 = icmp ne i32 %and654, 0, !dbg !14445
  br i1 %tobool655, label %if.then656, label %if.end679, !dbg !14446

if.then656:                                       ; preds = %if.end652
  store i32 12, i32* %length, align 4, !dbg !14447
  %limit657 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14449
  %381 = load i32, i32* %limit657, align 8, !dbg !14449
  %cur_len658 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14449
  %382 = load i32, i32* %cur_len658, align 8, !dbg !14449
  %sub659 = sub nsw i32 %381, %382, !dbg !14449
  %383 = load i32, i32* %length, align 4, !dbg !14451
  %cmp660 = icmp slt i32 %sub659, %383, !dbg !14452
  br i1 %cmp660, label %if.then662, label %if.end664, !dbg !14453

if.then662:                                       ; preds = %if.then656
  %384 = load i32, i32* %length, align 4, !dbg !14454
  %call663 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %384), !dbg !14455
  store i8* %call663, i8** %bp.addr, align 8, !dbg !14456
  br label %if.end664, !dbg !14457

if.end664:                                        ; preds = %if.then662, %if.then656
  %385 = load i8*, i8** %bp.addr, align 8, !dbg !14458
  %cmp665 = icmp ne i8* %385, null, !dbg !14460
  br i1 %cmp665, label %if.then667, label %if.end678, !dbg !14461

if.then667:                                       ; preds = %if.end664
  %386 = load i8*, i8** %bp.addr, align 8, !dbg !14462
  %arrayidx668 = getelementptr inbounds i8, i8* %386, i64 1, !dbg !14462
  store i8 67, i8* %arrayidx668, align 1, !dbg !14464
  %387 = load i8*, i8** %bp.addr, align 8, !dbg !14465
  %arrayidx669 = getelementptr inbounds i8, i8* %387, i64 2, !dbg !14465
  store i8 76, i8* %arrayidx669, align 1, !dbg !14466
  %388 = load i32, i32* %length, align 4, !dbg !14467
  %conv670 = trunc i32 %388 to i8, !dbg !14467
  %389 = load i8*, i8** %bp.addr, align 8, !dbg !14468
  %arrayidx671 = getelementptr inbounds i8, i8* %389, i64 3, !dbg !14468
  store i8 %conv670, i8* %arrayidx671, align 1, !dbg !14469
  %390 = load i8*, i8** %bp.addr, align 8, !dbg !14470
  %arrayidx672 = getelementptr inbounds i8, i8* %390, i64 4, !dbg !14470
  store i8 1, i8* %arrayidx672, align 1, !dbg !14471
  %391 = load i8*, i8** %bp.addr, align 8, !dbg !14472
  %add.ptr673 = getelementptr inbounds i8, i8* %391, i64 5, !dbg !14473
  %392 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14474
  %rr_child674 = getelementptr inbounds %struct.isoent, %struct.isoent* %392, i32 0, i32 20, !dbg !14475
  %393 = load %struct.isoent*, %struct.isoent** %rr_child674, align 8, !dbg !14475
  %dir_location675 = getelementptr inbounds %struct.isoent, %struct.isoent* %393, i32 0, i32 12, !dbg !14476
  %394 = load i32, i32* %dir_location675, align 4, !dbg !14476
  call void @set_num_733(i8* %add.ptr673, i32 %394), !dbg !14477
  %395 = load i32, i32* %length, align 4, !dbg !14478
  %396 = load i8*, i8** %bp.addr, align 8, !dbg !14479
  %idx.ext676 = sext i32 %395 to i64, !dbg !14479
  %add.ptr677 = getelementptr inbounds i8, i8* %396, i64 %idx.ext676, !dbg !14479
  store i8* %add.ptr677, i8** %bp.addr, align 8, !dbg !14479
  br label %if.end678, !dbg !14480

if.end678:                                        ; preds = %if.then667, %if.end664
  %397 = load i32, i32* %length, align 4, !dbg !14481
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %397), !dbg !14482
  br label %if.end679, !dbg !14483

if.end679:                                        ; preds = %if.end678, %if.end652
  %398 = load i8, i8* %rr_flag, align 1, !dbg !14484
  %conv680 = zext i8 %398 to i32, !dbg !14484
  %and681 = and i32 %conv680, 2, !dbg !14486
  %tobool682 = icmp ne i32 %and681, 0, !dbg !14486
  br i1 %tobool682, label %if.then683, label %if.end710, !dbg !14487

if.then683:                                       ; preds = %if.end679
  store i32 20, i32* %length, align 4, !dbg !14488
  %limit684 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14490
  %399 = load i32, i32* %limit684, align 8, !dbg !14490
  %cur_len685 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14490
  %400 = load i32, i32* %cur_len685, align 8, !dbg !14490
  %sub686 = sub nsw i32 %399, %400, !dbg !14490
  %401 = load i32, i32* %length, align 4, !dbg !14492
  %cmp687 = icmp slt i32 %sub686, %401, !dbg !14493
  br i1 %cmp687, label %if.then689, label %if.end691, !dbg !14494

if.then689:                                       ; preds = %if.then683
  %402 = load i32, i32* %length, align 4, !dbg !14495
  %call690 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %402), !dbg !14496
  store i8* %call690, i8** %bp.addr, align 8, !dbg !14497
  br label %if.end691, !dbg !14498

if.end691:                                        ; preds = %if.then689, %if.then683
  %403 = load i8*, i8** %bp.addr, align 8, !dbg !14499
  %cmp692 = icmp ne i8* %403, null, !dbg !14501
  br i1 %cmp692, label %if.then694, label %if.end709, !dbg !14502

if.then694:                                       ; preds = %if.end691
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !14503, metadata !986), !dbg !14505
  %404 = load i8*, i8** %bp.addr, align 8, !dbg !14506
  %arrayidx695 = getelementptr inbounds i8, i8* %404, i64 1, !dbg !14506
  store i8 80, i8* %arrayidx695, align 1, !dbg !14507
  %405 = load i8*, i8** %bp.addr, align 8, !dbg !14508
  %arrayidx696 = getelementptr inbounds i8, i8* %405, i64 2, !dbg !14508
  store i8 78, i8* %arrayidx696, align 1, !dbg !14509
  %406 = load i32, i32* %length, align 4, !dbg !14510
  %conv697 = trunc i32 %406 to i8, !dbg !14510
  %407 = load i8*, i8** %bp.addr, align 8, !dbg !14511
  %arrayidx698 = getelementptr inbounds i8, i8* %407, i64 3, !dbg !14511
  store i8 %conv697, i8* %arrayidx698, align 1, !dbg !14512
  %408 = load i8*, i8** %bp.addr, align 8, !dbg !14513
  %arrayidx699 = getelementptr inbounds i8, i8* %408, i64 4, !dbg !14513
  store i8 1, i8* %arrayidx699, align 1, !dbg !14514
  %409 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14515
  %entry700 = getelementptr inbounds %struct.isofile, %struct.isofile* %409, i32 0, i32 4, !dbg !14516
  %410 = load %struct.archive_entry*, %struct.archive_entry** %entry700, align 8, !dbg !14516
  %call701 = call i64 @archive_entry_rdev(%struct.archive_entry* %410), !dbg !14517
  store i64 %call701, i64* %dev, align 8, !dbg !14518
  %411 = load i8*, i8** %bp.addr, align 8, !dbg !14519
  %add.ptr702 = getelementptr inbounds i8, i8* %411, i64 5, !dbg !14520
  %412 = load i64, i64* %dev, align 8, !dbg !14521
  %shr = lshr i64 %412, 32, !dbg !14522
  %conv703 = trunc i64 %shr to i32, !dbg !14523
  call void @set_num_733(i8* %add.ptr702, i32 %conv703), !dbg !14524
  %413 = load i8*, i8** %bp.addr, align 8, !dbg !14525
  %add.ptr704 = getelementptr inbounds i8, i8* %413, i64 13, !dbg !14526
  %414 = load i64, i64* %dev, align 8, !dbg !14527
  %and705 = and i64 %414, 4294967295, !dbg !14528
  %conv706 = trunc i64 %and705 to i32, !dbg !14529
  call void @set_num_733(i8* %add.ptr704, i32 %conv706), !dbg !14530
  %415 = load i32, i32* %length, align 4, !dbg !14531
  %416 = load i8*, i8** %bp.addr, align 8, !dbg !14532
  %idx.ext707 = sext i32 %415 to i64, !dbg !14532
  %add.ptr708 = getelementptr inbounds i8, i8* %416, i64 %idx.ext707, !dbg !14532
  store i8* %add.ptr708, i8** %bp.addr, align 8, !dbg !14532
  br label %if.end709, !dbg !14533

if.end709:                                        ; preds = %if.then694, %if.end691
  %417 = load i32, i32* %length, align 4, !dbg !14534
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %417), !dbg !14535
  br label %if.end710, !dbg !14536

if.end710:                                        ; preds = %if.end709, %if.end679
  %418 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14537
  %zisofs = getelementptr inbounds %struct.isofile, %struct.isofile* %418, i32 0, i32 14, !dbg !14539
  %header_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs, i32 0, i32 0, !dbg !14540
  %419 = load i8, i8* %header_size, align 8, !dbg !14540
  %tobool711 = icmp ne i8 %419, 0, !dbg !14537
  br i1 %tobool711, label %if.then712, label %if.end741, !dbg !14541

if.then712:                                       ; preds = %if.end710
  store i32 16, i32* %length, align 4, !dbg !14542
  %limit713 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 6, !dbg !14544
  %420 = load i32, i32* %limit713, align 8, !dbg !14544
  %cur_len714 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 4, !dbg !14544
  %421 = load i32, i32* %cur_len714, align 8, !dbg !14544
  %sub715 = sub nsw i32 %420, %421, !dbg !14544
  %422 = load i32, i32* %length, align 4, !dbg !14546
  %cmp716 = icmp slt i32 %sub715, %422, !dbg !14547
  br i1 %cmp716, label %if.then718, label %if.end720, !dbg !14548

if.then718:                                       ; preds = %if.then712
  %423 = load i32, i32* %length, align 4, !dbg !14549
  %call719 = call i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %423), !dbg !14550
  store i8* %call719, i8** %bp.addr, align 8, !dbg !14551
  br label %if.end720, !dbg !14552

if.end720:                                        ; preds = %if.then718, %if.then712
  %424 = load i8*, i8** %bp.addr, align 8, !dbg !14553
  %cmp721 = icmp ne i8* %424, null, !dbg !14555
  br i1 %cmp721, label %if.then723, label %if.end740, !dbg !14556

if.then723:                                       ; preds = %if.end720
  %425 = load i8*, i8** %bp.addr, align 8, !dbg !14557
  %arrayidx724 = getelementptr inbounds i8, i8* %425, i64 1, !dbg !14557
  store i8 90, i8* %arrayidx724, align 1, !dbg !14559
  %426 = load i8*, i8** %bp.addr, align 8, !dbg !14560
  %arrayidx725 = getelementptr inbounds i8, i8* %426, i64 2, !dbg !14560
  store i8 70, i8* %arrayidx725, align 1, !dbg !14561
  %427 = load i32, i32* %length, align 4, !dbg !14562
  %conv726 = trunc i32 %427 to i8, !dbg !14562
  %428 = load i8*, i8** %bp.addr, align 8, !dbg !14563
  %arrayidx727 = getelementptr inbounds i8, i8* %428, i64 3, !dbg !14563
  store i8 %conv726, i8* %arrayidx727, align 1, !dbg !14564
  %429 = load i8*, i8** %bp.addr, align 8, !dbg !14565
  %arrayidx728 = getelementptr inbounds i8, i8* %429, i64 4, !dbg !14565
  store i8 1, i8* %arrayidx728, align 1, !dbg !14566
  %430 = load i8*, i8** %bp.addr, align 8, !dbg !14567
  %arrayidx729 = getelementptr inbounds i8, i8* %430, i64 5, !dbg !14567
  store i8 112, i8* %arrayidx729, align 1, !dbg !14568
  %431 = load i8*, i8** %bp.addr, align 8, !dbg !14569
  %arrayidx730 = getelementptr inbounds i8, i8* %431, i64 6, !dbg !14569
  store i8 122, i8* %arrayidx730, align 1, !dbg !14570
  %432 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14571
  %zisofs731 = getelementptr inbounds %struct.isofile, %struct.isofile* %432, i32 0, i32 14, !dbg !14572
  %header_size732 = getelementptr inbounds %struct.anon, %struct.anon* %zisofs731, i32 0, i32 0, !dbg !14573
  %433 = load i8, i8* %header_size732, align 8, !dbg !14573
  %434 = load i8*, i8** %bp.addr, align 8, !dbg !14574
  %arrayidx733 = getelementptr inbounds i8, i8* %434, i64 7, !dbg !14574
  store i8 %433, i8* %arrayidx733, align 1, !dbg !14575
  %435 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14576
  %zisofs734 = getelementptr inbounds %struct.isofile, %struct.isofile* %435, i32 0, i32 14, !dbg !14577
  %log2_bs = getelementptr inbounds %struct.anon, %struct.anon* %zisofs734, i32 0, i32 1, !dbg !14578
  %436 = load i8, i8* %log2_bs, align 1, !dbg !14578
  %437 = load i8*, i8** %bp.addr, align 8, !dbg !14579
  %arrayidx735 = getelementptr inbounds i8, i8* %437, i64 8, !dbg !14579
  store i8 %436, i8* %arrayidx735, align 1, !dbg !14580
  %438 = load i8*, i8** %bp.addr, align 8, !dbg !14581
  %add.ptr736 = getelementptr inbounds i8, i8* %438, i64 9, !dbg !14582
  %439 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !14583
  %zisofs737 = getelementptr inbounds %struct.isofile, %struct.isofile* %439, i32 0, i32 14, !dbg !14584
  %uncompressed_size = getelementptr inbounds %struct.anon, %struct.anon* %zisofs737, i32 0, i32 2, !dbg !14585
  %440 = load i32, i32* %uncompressed_size, align 4, !dbg !14585
  call void @set_num_733(i8* %add.ptr736, i32 %440), !dbg !14586
  %441 = load i32, i32* %length, align 4, !dbg !14587
  %442 = load i8*, i8** %bp.addr, align 8, !dbg !14588
  %idx.ext738 = sext i32 %441 to i64, !dbg !14588
  %add.ptr739 = getelementptr inbounds i8, i8* %442, i64 %idx.ext738, !dbg !14588
  store i8* %add.ptr739, i8** %bp.addr, align 8, !dbg !14588
  br label %if.end740, !dbg !14589

if.end740:                                        ; preds = %if.then723, %if.end720
  %443 = load i32, i32* %length, align 4, !dbg !14590
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %443), !dbg !14591
  br label %if.end741, !dbg !14592

if.end741:                                        ; preds = %if.end740, %if.end710
  %444 = load i32, i32* %t.addr, align 4, !dbg !14593
  %cmp742 = icmp eq i32 %444, 1, !dbg !14595
  br i1 %cmp742, label %land.lhs.true744, label %if.end755, !dbg !14596

land.lhs.true744:                                 ; preds = %if.end741
  %445 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14597
  %446 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14599
  %parent745 = getelementptr inbounds %struct.isoent, %struct.isoent* %446, i32 0, i32 2, !dbg !14600
  %447 = load %struct.isoent*, %struct.isoent** %parent745, align 8, !dbg !14600
  %cmp746 = icmp eq %struct.isoent* %445, %447, !dbg !14601
  br i1 %cmp746, label %if.then748, label %if.end755, !dbg !14602

if.then748:                                       ; preds = %land.lhs.true744
  store i32 28, i32* %length, align 4, !dbg !14603
  %448 = load i8*, i8** %bp.addr, align 8, !dbg !14605
  %cmp749 = icmp ne i8* %448, null, !dbg !14607
  br i1 %cmp749, label %if.then751, label %if.end754, !dbg !14608

if.then751:                                       ; preds = %if.then748
  %449 = load i8*, i8** %bp.addr, align 8, !dbg !14609
  %add.ptr752 = getelementptr inbounds i8, i8* %449, i64 1, !dbg !14610
  %450 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !14611
  %location_rrip_er = getelementptr inbounds %struct.iso9660, %struct.iso9660* %450, i32 0, i32 26, !dbg !14612
  %451 = load i32, i32* %location_rrip_er, align 8, !dbg !14612
  %call753 = call i32 @set_SUSP_CE(i8* %add.ptr752, i32 %451, i32 0, i32 237), !dbg !14613
  br label %if.end754, !dbg !14613

if.end754:                                        ; preds = %if.then751, %if.then748
  %452 = load i32, i32* %length, align 4, !dbg !14614
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %452), !dbg !14615
  br label %if.end755, !dbg !14616

if.end755:                                        ; preds = %if.end754, %land.lhs.true744, %if.end741
  call void @extra_close_record(%struct.ctl_extr_rec* %ctl, i32 0), !dbg !14617
  %dr_len756 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %ctl, i32 0, i32 5, !dbg !14618
  %453 = load i32, i32* %dr_len756, align 4, !dbg !14618
  ret i32 %453, !dbg !14619
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_be32enc(i8* %pp, i32 %u) #7 !dbg !803 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !14620, metadata !986), !dbg !14621
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !14622, metadata !986), !dbg !14623
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14624, metadata !986), !dbg !14625
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !14626
  store i8* %0, i8** %p, align 8, !dbg !14625
  %1 = load i32, i32* %u.addr, align 4, !dbg !14627
  %shr = lshr i32 %1, 24, !dbg !14628
  %and = and i32 %shr, 255, !dbg !14629
  %conv = trunc i32 %and to i8, !dbg !14630
  %2 = load i8*, i8** %p, align 8, !dbg !14631
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !14631
  store i8 %conv, i8* %arrayidx, align 1, !dbg !14632
  %3 = load i32, i32* %u.addr, align 4, !dbg !14633
  %shr1 = lshr i32 %3, 16, !dbg !14634
  %and2 = and i32 %shr1, 255, !dbg !14635
  %conv3 = trunc i32 %and2 to i8, !dbg !14636
  %4 = load i8*, i8** %p, align 8, !dbg !14637
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !14637
  store i8 %conv3, i8* %arrayidx4, align 1, !dbg !14638
  %5 = load i32, i32* %u.addr, align 4, !dbg !14639
  %shr5 = lshr i32 %5, 8, !dbg !14640
  %and6 = and i32 %shr5, 255, !dbg !14641
  %conv7 = trunc i32 %and6 to i8, !dbg !14642
  %6 = load i8*, i8** %p, align 8, !dbg !14643
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !14643
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !14644
  %7 = load i32, i32* %u.addr, align 4, !dbg !14645
  %and9 = and i32 %7, 255, !dbg !14646
  %conv10 = trunc i32 %and9 to i8, !dbg !14645
  %8 = load i8*, i8** %p, align 8, !dbg !14647
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i64 3, !dbg !14647
  store i8 %conv10, i8* %arrayidx11, align 1, !dbg !14648
  ret void, !dbg !14649
}

; Function Attrs: nounwind uwtable
define internal void @get_tmfromtime(%struct.tm* %tm, i64* %t) #0 !dbg !807 {
entry:
  %tm.addr = alloca %struct.tm*, align 8
  %t.addr = alloca i64*, align 8
  store %struct.tm* %tm, %struct.tm** %tm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tm** %tm.addr, metadata !14650, metadata !986), !dbg !14651
  store i64* %t, i64** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !14652, metadata !986), !dbg !14653
  call void @tzset() #8, !dbg !14654
  %0 = load i64*, i64** %t.addr, align 8, !dbg !14655
  %1 = load %struct.tm*, %struct.tm** %tm.addr, align 8, !dbg !14656
  %call = call %struct.tm* @localtime_r(i64* %0, %struct.tm* %1) #8, !dbg !14657
  ret void, !dbg !14658
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_712(i8* %p, i8 signext %value) #7 !dbg !825 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14659, metadata !986), !dbg !14660
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !14661, metadata !986), !dbg !14662
  %0 = load i8, i8* %value.addr, align 1, !dbg !14663
  %1 = load i8*, i8** %p.addr, align 8, !dbg !14664
  store i8 %0, i8* %1, align 1, !dbg !14665
  ret void, !dbg !14666
}

; Function Attrs: nounwind
declare void @tzset() #3

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @archive_le16enc(i8* %pp, i16 zeroext %u) #7 !dbg !831 {
entry:
  %pp.addr = alloca i8*, align 8
  %u.addr = alloca i16, align 2
  %p = alloca i8*, align 8
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !14667, metadata !986), !dbg !14668
  store i16 %u, i16* %u.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %u.addr, metadata !14669, metadata !986), !dbg !14670
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14671, metadata !986), !dbg !14672
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !14673
  store i8* %0, i8** %p, align 8, !dbg !14672
  %1 = load i16, i16* %u.addr, align 2, !dbg !14674
  %conv = zext i16 %1 to i32, !dbg !14674
  %and = and i32 %conv, 255, !dbg !14675
  %conv1 = trunc i32 %and to i8, !dbg !14674
  %2 = load i8*, i8** %p, align 8, !dbg !14676
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !14676
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !14677
  %3 = load i16, i16* %u.addr, align 2, !dbg !14678
  %conv2 = zext i16 %3 to i32, !dbg !14678
  %shr = ashr i32 %conv2, 8, !dbg !14679
  %and3 = and i32 %shr, 255, !dbg !14680
  %conv4 = trunc i32 %and3 to i8, !dbg !14681
  %4 = load i8*, i8** %p, align 8, !dbg !14682
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !14682
  store i8 %conv4, i8* %arrayidx5, align 1, !dbg !14683
  ret void, !dbg !14684
}

; Function Attrs: nounwind uwtable
define internal i8* @extra_open_record(i8* %bp, i32 %dr_len, %struct.isoent* %isoent, %struct.ctl_extr_rec* %ctl) #0 !dbg !835 {
entry:
  %bp.addr = alloca i8*, align 8
  %dr_len.addr = alloca i32, align 4
  %isoent.addr = alloca %struct.isoent*, align 8
  %ctl.addr = alloca %struct.ctl_extr_rec*, align 8
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !14685, metadata !986), !dbg !14686
  store i32 %dr_len, i32* %dr_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dr_len.addr, metadata !14687, metadata !986), !dbg !14688
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !14689, metadata !986), !dbg !14690
  store %struct.ctl_extr_rec* %ctl, %struct.ctl_extr_rec** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_extr_rec** %ctl.addr, metadata !14691, metadata !986), !dbg !14692
  %0 = load i8*, i8** %bp.addr, align 8, !dbg !14693
  %1 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14694
  %bp1 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %1, i32 0, i32 1, !dbg !14695
  store i8* %0, i8** %bp1, align 8, !dbg !14696
  %2 = load i8*, i8** %bp.addr, align 8, !dbg !14697
  %cmp = icmp ne i8* %2, null, !dbg !14699
  br i1 %cmp, label %if.then, label %if.end, !dbg !14700

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %dr_len.addr, align 4, !dbg !14701
  %4 = load i8*, i8** %bp.addr, align 8, !dbg !14702
  %idx.ext = sext i32 %3 to i64, !dbg !14702
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !14702
  store i8* %add.ptr, i8** %bp.addr, align 8, !dbg !14702
  br label %if.end, !dbg !14703

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14704
  %use_extr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %5, i32 0, i32 0, !dbg !14705
  store i32 0, i32* %use_extr, align 8, !dbg !14706
  %6 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14707
  %7 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14708
  %isoent2 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %7, i32 0, i32 2, !dbg !14709
  store %struct.isoent* %6, %struct.isoent** %isoent2, align 8, !dbg !14710
  %8 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14711
  %ce_ptr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %8, i32 0, i32 3, !dbg !14712
  store i8* null, i8** %ce_ptr, align 8, !dbg !14713
  %9 = load i32, i32* %dr_len.addr, align 4, !dbg !14714
  %10 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14715
  %dr_len3 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %10, i32 0, i32 5, !dbg !14716
  store i32 %9, i32* %dr_len3, align 4, !dbg !14717
  %11 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14718
  %cur_len = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %11, i32 0, i32 4, !dbg !14719
  store i32 %9, i32* %cur_len, align 8, !dbg !14720
  %12 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14721
  %limit = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %12, i32 0, i32 6, !dbg !14722
  store i32 226, i32* %limit, align 8, !dbg !14723
  %13 = load i8*, i8** %bp.addr, align 8, !dbg !14724
  ret i8* %13, !dbg !14725
}

; Function Attrs: nounwind uwtable
define internal void @extra_tell_used_size(%struct.ctl_extr_rec* %ctl, i32 %size) #0 !dbg !850 {
entry:
  %ctl.addr = alloca %struct.ctl_extr_rec*, align 8
  %size.addr = alloca i32, align 4
  %isoent = alloca %struct.isoent*, align 8
  %rec = alloca %struct.extr_rec*, align 8
  store %struct.ctl_extr_rec* %ctl, %struct.ctl_extr_rec** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_extr_rec** %ctl.addr, metadata !14726, metadata !986), !dbg !14727
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14728, metadata !986), !dbg !14729
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !14730, metadata !986), !dbg !14731
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %rec, metadata !14732, metadata !986), !dbg !14733
  %0 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14734
  %use_extr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %0, i32 0, i32 0, !dbg !14736
  %1 = load i32, i32* %use_extr, align 8, !dbg !14736
  %tobool = icmp ne i32 %1, 0, !dbg !14734
  br i1 %tobool, label %if.then, label %if.end3, !dbg !14737

if.then:                                          ; preds = %entry
  %2 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14738
  %isoent1 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %2, i32 0, i32 2, !dbg !14740
  %3 = load %struct.isoent*, %struct.isoent** %isoent1, align 8, !dbg !14740
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 2, !dbg !14741
  %4 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !14741
  store %struct.isoent* %4, %struct.isoent** %isoent, align 8, !dbg !14742
  %5 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !14743
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 21, !dbg !14744
  %current = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 2, !dbg !14745
  %6 = load %struct.extr_rec*, %struct.extr_rec** %current, align 8, !dbg !14745
  store %struct.extr_rec* %6, %struct.extr_rec** %rec, align 8, !dbg !14746
  %7 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14747
  %cmp = icmp ne %struct.extr_rec* %7, null, !dbg !14749
  br i1 %cmp, label %if.then2, label %if.end, !dbg !14750

if.then2:                                         ; preds = %if.then
  %8 = load i32, i32* %size.addr, align 4, !dbg !14751
  %9 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14752
  %offset = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %9, i32 0, i32 1, !dbg !14753
  %10 = load i32, i32* %offset, align 4, !dbg !14754
  %add = add nsw i32 %10, %8, !dbg !14754
  store i32 %add, i32* %offset, align 4, !dbg !14754
  br label %if.end, !dbg !14752

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !14755

if.end3:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %size.addr, align 4, !dbg !14756
  %12 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14757
  %cur_len = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %12, i32 0, i32 4, !dbg !14758
  %13 = load i32, i32* %cur_len, align 8, !dbg !14759
  %add4 = add nsw i32 %13, %11, !dbg !14759
  store i32 %add4, i32* %cur_len, align 8, !dbg !14759
  ret void, !dbg !14760
}

; Function Attrs: nounwind uwtable
define internal i8* @extra_next_record(%struct.ctl_extr_rec* %ctl, i32 %length) #0 !dbg !853 {
entry:
  %ctl.addr = alloca %struct.ctl_extr_rec*, align 8
  %length.addr = alloca i32, align 4
  %cur_len = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.ctl_extr_rec* %ctl, %struct.ctl_extr_rec** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_extr_rec** %ctl.addr, metadata !14761, metadata !986), !dbg !14762
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !14763, metadata !986), !dbg !14764
  call void @llvm.dbg.declare(metadata i32* %cur_len, metadata !14765, metadata !986), !dbg !14766
  %0 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14767
  %cur_len1 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %0, i32 0, i32 4, !dbg !14768
  %1 = load i32, i32* %cur_len1, align 8, !dbg !14768
  store i32 %1, i32* %cur_len, align 4, !dbg !14766
  %2 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14769
  call void @extra_close_record(%struct.ctl_extr_rec* %2, i32 28), !dbg !14770
  %3 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14771
  %use_extr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %3, i32 0, i32 0, !dbg !14772
  store i32 1, i32* %use_extr, align 8, !dbg !14773
  %4 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14774
  %bp = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %4, i32 0, i32 1, !dbg !14776
  %5 = load i8*, i8** %bp, align 8, !dbg !14776
  %cmp = icmp ne i8* %5, null, !dbg !14777
  br i1 %cmp, label %if.then, label %if.else, !dbg !14778

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14779, metadata !986), !dbg !14781
  %6 = load i32, i32* %cur_len, align 4, !dbg !14782
  %add = add nsw i32 %6, 1, !dbg !14783
  %idxprom = sext i32 %add to i64, !dbg !14784
  %7 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14784
  %bp2 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %7, i32 0, i32 1, !dbg !14785
  %8 = load i8*, i8** %bp2, align 8, !dbg !14785
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !14784
  %9 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14786
  %ce_ptr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %9, i32 0, i32 3, !dbg !14787
  store i8* %arrayidx, i8** %ce_ptr, align 8, !dbg !14788
  %10 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14789
  %isoent = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %10, i32 0, i32 2, !dbg !14790
  %11 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !14790
  %12 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14791
  %limit = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %12, i32 0, i32 6, !dbg !14792
  %13 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14793
  %extr_off = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %13, i32 0, i32 7, !dbg !14794
  %14 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14795
  %extr_loc = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %14, i32 0, i32 8, !dbg !14796
  %call = call i8* @extra_get_record(%struct.isoent* %11, i32* %limit, i32* %extr_off, i32* %extr_loc), !dbg !14797
  store i8* %call, i8** %p, align 8, !dbg !14798
  %15 = load i8*, i8** %p, align 8, !dbg !14799
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 -1, !dbg !14800
  %16 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14801
  %bp3 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %16, i32 0, i32 1, !dbg !14802
  store i8* %add.ptr, i8** %bp3, align 8, !dbg !14803
  br label %if.end, !dbg !14804

if.else:                                          ; preds = %entry
  %17 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14805
  %isoent4 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %17, i32 0, i32 2, !dbg !14806
  %18 = load %struct.isoent*, %struct.isoent** %isoent4, align 8, !dbg !14806
  %19 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14807
  %limit5 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %19, i32 0, i32 6, !dbg !14808
  %call6 = call i8* @extra_get_record(%struct.isoent* %18, i32* %limit5, i32* null, i32* null), !dbg !14809
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14810
  %cur_len7 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %20, i32 0, i32 4, !dbg !14811
  store i32 0, i32* %cur_len7, align 8, !dbg !14812
  %21 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14813
  %limit8 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %21, i32 0, i32 6, !dbg !14813
  %22 = load i32, i32* %limit8, align 8, !dbg !14813
  %23 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14813
  %cur_len9 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %23, i32 0, i32 4, !dbg !14813
  %24 = load i32, i32* %cur_len9, align 8, !dbg !14813
  %sub = sub nsw i32 %22, %24, !dbg !14813
  %25 = load i32, i32* %length.addr, align 4, !dbg !14815
  %cmp10 = icmp slt i32 %sub, %25, !dbg !14816
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !14817

if.then11:                                        ; preds = %if.end
  %26 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14818
  %27 = load i32, i32* %length.addr, align 4, !dbg !14819
  %call12 = call i8* @extra_next_record(%struct.ctl_extr_rec* %26, i32 %27), !dbg !14820
  br label %if.end13, !dbg !14821

if.end13:                                         ; preds = %if.then11, %if.end
  %28 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14822
  %bp14 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %28, i32 0, i32 1, !dbg !14823
  %29 = load i8*, i8** %bp14, align 8, !dbg !14823
  ret i8* %29, !dbg !14824
}

declare i32 @archive_entry_mode(%struct.archive_entry*) #2

declare i64 @archive_entry_uid(%struct.archive_entry*) #2

declare i64 @archive_entry_gid(%struct.archive_entry*) #2

declare i32 @archive_entry_birthtime_is_set(%struct.archive_entry*) #2

declare i64 @archive_entry_birthtime(%struct.archive_entry*) #2

declare i32 @archive_entry_atime_is_set(%struct.archive_entry*) #2

declare i32 @archive_entry_ctime_is_set(%struct.archive_entry*) #2

declare i64 @archive_entry_atime(%struct.archive_entry*) #2

declare i64 @archive_entry_ctime(%struct.archive_entry*) #2

declare i64 @archive_entry_rdev(%struct.archive_entry*) #2

; Function Attrs: nounwind uwtable
define internal i32 @set_SUSP_CE(i8* %p, i32 %location, i32 %offset, i32 %size) #0 !dbg !862 {
entry:
  %p.addr = alloca i8*, align 8
  %location.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %bp = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14825, metadata !986), !dbg !14826
  store i32 %location, i32* %location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %location.addr, metadata !14827, metadata !986), !dbg !14828
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14829, metadata !986), !dbg !14830
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14831, metadata !986), !dbg !14832
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !14833, metadata !986), !dbg !14834
  %0 = load i8*, i8** %p.addr, align 8, !dbg !14835
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !14836
  store i8* %add.ptr, i8** %bp, align 8, !dbg !14834
  %1 = load i8*, i8** %bp, align 8, !dbg !14837
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !14837
  store i8 67, i8* %arrayidx, align 1, !dbg !14838
  %2 = load i8*, i8** %bp, align 8, !dbg !14839
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 2, !dbg !14839
  store i8 69, i8* %arrayidx1, align 1, !dbg !14840
  %3 = load i8*, i8** %bp, align 8, !dbg !14841
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 3, !dbg !14841
  store i8 28, i8* %arrayidx2, align 1, !dbg !14842
  %4 = load i8*, i8** %bp, align 8, !dbg !14843
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 4, !dbg !14843
  store i8 1, i8* %arrayidx3, align 1, !dbg !14844
  %5 = load i8*, i8** %bp, align 8, !dbg !14845
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i64 5, !dbg !14846
  %6 = load i32, i32* %location.addr, align 4, !dbg !14847
  call void @set_num_733(i8* %add.ptr4, i32 %6), !dbg !14848
  %7 = load i8*, i8** %bp, align 8, !dbg !14849
  %add.ptr5 = getelementptr inbounds i8, i8* %7, i64 13, !dbg !14850
  %8 = load i32, i32* %offset.addr, align 4, !dbg !14851
  call void @set_num_733(i8* %add.ptr5, i32 %8), !dbg !14852
  %9 = load i8*, i8** %bp, align 8, !dbg !14853
  %add.ptr6 = getelementptr inbounds i8, i8* %9, i64 21, !dbg !14854
  %10 = load i32, i32* %size.addr, align 4, !dbg !14855
  call void @set_num_733(i8* %add.ptr6, i32 %10), !dbg !14856
  ret i32 28, !dbg !14857
}

; Function Attrs: nounwind uwtable
define internal void @extra_close_record(%struct.ctl_extr_rec* %ctl, i32 %ce_size) #0 !dbg !865 {
entry:
  %ctl.addr = alloca %struct.ctl_extr_rec*, align 8
  %ce_size.addr = alloca i32, align 4
  %padding = alloca i32, align 4
  store %struct.ctl_extr_rec* %ctl, %struct.ctl_extr_rec** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_extr_rec** %ctl.addr, metadata !14858, metadata !986), !dbg !14859
  store i32 %ce_size, i32* %ce_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ce_size.addr, metadata !14860, metadata !986), !dbg !14861
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !14862, metadata !986), !dbg !14863
  store i32 0, i32* %padding, align 4, !dbg !14863
  %0 = load i32, i32* %ce_size.addr, align 4, !dbg !14864
  %cmp = icmp sgt i32 %0, 0, !dbg !14866
  br i1 %cmp, label %if.then, label %if.end, !dbg !14867

if.then:                                          ; preds = %entry
  %1 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14868
  %2 = load i32, i32* %ce_size.addr, align 4, !dbg !14869
  call void @extra_tell_used_size(%struct.ctl_extr_rec* %1, i32 %2), !dbg !14870
  br label %if.end, !dbg !14870

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14871
  %cur_len = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %3, i32 0, i32 4, !dbg !14873
  %4 = load i32, i32* %cur_len, align 8, !dbg !14873
  %and = and i32 %4, 1, !dbg !14874
  %tobool = icmp ne i32 %and, 0, !dbg !14874
  br i1 %tobool, label %if.then1, label %if.end8, !dbg !14875

if.then1:                                         ; preds = %if.end
  %5 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14876
  %cur_len2 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %5, i32 0, i32 4, !dbg !14878
  %6 = load i32, i32* %cur_len2, align 8, !dbg !14879
  %inc = add nsw i32 %6, 1, !dbg !14879
  store i32 %inc, i32* %cur_len2, align 8, !dbg !14879
  %7 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14880
  %bp = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %7, i32 0, i32 1, !dbg !14882
  %8 = load i8*, i8** %bp, align 8, !dbg !14882
  %cmp3 = icmp ne i8* %8, null, !dbg !14883
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14884

if.then4:                                         ; preds = %if.then1
  %9 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14885
  %cur_len5 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %9, i32 0, i32 4, !dbg !14886
  %10 = load i32, i32* %cur_len5, align 8, !dbg !14886
  %idxprom = sext i32 %10 to i64, !dbg !14887
  %11 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14887
  %bp6 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %11, i32 0, i32 1, !dbg !14888
  %12 = load i8*, i8** %bp6, align 8, !dbg !14888
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %idxprom, !dbg !14887
  store i8 0, i8* %arrayidx, align 1, !dbg !14889
  br label %if.end7, !dbg !14887

if.end7:                                          ; preds = %if.then4, %if.then1
  store i32 1, i32* %padding, align 4, !dbg !14890
  br label %if.end8, !dbg !14891

if.end8:                                          ; preds = %if.end7, %if.end
  %13 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14892
  %use_extr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %13, i32 0, i32 0, !dbg !14894
  %14 = load i32, i32* %use_extr, align 8, !dbg !14894
  %tobool9 = icmp ne i32 %14, 0, !dbg !14892
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !14895

if.then10:                                        ; preds = %if.end8
  %15 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14896
  %ce_ptr = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %15, i32 0, i32 3, !dbg !14899
  %16 = load i8*, i8** %ce_ptr, align 8, !dbg !14899
  %cmp11 = icmp ne i8* %16, null, !dbg !14900
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !14901

if.then12:                                        ; preds = %if.then10
  %17 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14902
  %ce_ptr13 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %17, i32 0, i32 3, !dbg !14903
  %18 = load i8*, i8** %ce_ptr13, align 8, !dbg !14903
  %19 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14904
  %extr_loc = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %19, i32 0, i32 8, !dbg !14905
  %20 = load i32, i32* %extr_loc, align 8, !dbg !14905
  %21 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14906
  %extr_off = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %21, i32 0, i32 7, !dbg !14907
  %22 = load i32, i32* %extr_off, align 4, !dbg !14907
  %23 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14908
  %cur_len14 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %23, i32 0, i32 4, !dbg !14909
  %24 = load i32, i32* %cur_len14, align 8, !dbg !14909
  %25 = load i32, i32* %padding, align 4, !dbg !14910
  %sub = sub nsw i32 %24, %25, !dbg !14911
  %call = call i32 @set_SUSP_CE(i8* %18, i32 %20, i32 %22, i32 %sub), !dbg !14912
  br label %if.end15, !dbg !14912

if.end15:                                         ; preds = %if.then12, %if.then10
  br label %if.end17, !dbg !14913

if.else:                                          ; preds = %if.end8
  %26 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14914
  %cur_len16 = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %26, i32 0, i32 4, !dbg !14915
  %27 = load i32, i32* %cur_len16, align 8, !dbg !14915
  %28 = load %struct.ctl_extr_rec*, %struct.ctl_extr_rec** %ctl.addr, align 8, !dbg !14916
  %dr_len = getelementptr inbounds %struct.ctl_extr_rec, %struct.ctl_extr_rec* %28, i32 0, i32 5, !dbg !14917
  store i32 %27, i32* %dr_len, align 4, !dbg !14918
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end15
  ret void, !dbg !14919
}

; Function Attrs: nounwind uwtable
define internal i8* @extra_get_record(%struct.isoent* %isoent, i32* %space, i32* %off, i32* %loc) #0 !dbg !856 {
entry:
  %retval = alloca i8*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %space.addr = alloca i32*, align 8
  %off.addr = alloca i32*, align 8
  %loc.addr = alloca i32*, align 8
  %rec = alloca %struct.extr_rec*, align 8
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !14920, metadata !986), !dbg !14921
  store i32* %space, i32** %space.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %space.addr, metadata !14922, metadata !986), !dbg !14923
  store i32* %off, i32** %off.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %off.addr, metadata !14924, metadata !986), !dbg !14925
  store i32* %loc, i32** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %loc.addr, metadata !14926, metadata !986), !dbg !14927
  call void @llvm.dbg.declare(metadata %struct.extr_rec** %rec, metadata !14928, metadata !986), !dbg !14929
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14930
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 2, !dbg !14931
  %1 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !14931
  store %struct.isoent* %1, %struct.isoent** %isoent.addr, align 8, !dbg !14932
  %2 = load i32*, i32** %off.addr, align 8, !dbg !14933
  %cmp = icmp ne i32* %2, null, !dbg !14935
  br i1 %cmp, label %if.then, label %if.else, !dbg !14936

if.then:                                          ; preds = %entry
  %3 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14937
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 21, !dbg !14939
  %current = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 2, !dbg !14940
  %4 = load %struct.extr_rec*, %struct.extr_rec** %current, align 8, !dbg !14940
  store %struct.extr_rec* %4, %struct.extr_rec** %rec, align 8, !dbg !14941
  %5 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14942
  %offset = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %5, i32 0, i32 1, !dbg !14944
  %6 = load i32, i32* %offset, align 4, !dbg !14944
  %sub = sub nsw i32 2048, %6, !dbg !14945
  %cmp1 = icmp sgt i32 28, %sub, !dbg !14946
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14947

if.then2:                                         ; preds = %if.then
  %7 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14948
  %next = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %7, i32 0, i32 3, !dbg !14949
  %8 = load %struct.extr_rec*, %struct.extr_rec** %next, align 8, !dbg !14949
  store %struct.extr_rec* %8, %struct.extr_rec** %rec, align 8, !dbg !14950
  br label %if.end, !dbg !14951

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end27, !dbg !14952

if.else:                                          ; preds = %entry
  %9 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14953
  %call = call %struct.extr_rec* @extra_last_record(%struct.isoent* %9), !dbg !14955
  store %struct.extr_rec* %call, %struct.extr_rec** %rec, align 8, !dbg !14956
  %10 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14957
  %cmp3 = icmp eq %struct.extr_rec* %10, null, !dbg !14959
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !14960

lor.lhs.false:                                    ; preds = %if.else
  %11 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14961
  %offset4 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %11, i32 0, i32 1, !dbg !14962
  %12 = load i32, i32* %offset4, align 4, !dbg !14962
  %sub5 = sub nsw i32 2048, %12, !dbg !14963
  %cmp6 = icmp sgt i32 28, %sub5, !dbg !14964
  br i1 %cmp6, label %if.then7, label %if.end26, !dbg !14965

if.then7:                                         ; preds = %lor.lhs.false, %if.else
  %call8 = call noalias i8* @malloc(i64 2064) #8, !dbg !14967
  %13 = bitcast i8* %call8 to %struct.extr_rec*, !dbg !14967
  store %struct.extr_rec* %13, %struct.extr_rec** %rec, align 8, !dbg !14969
  %14 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14970
  %cmp9 = icmp eq %struct.extr_rec* %14, null, !dbg !14972
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !14973

if.then10:                                        ; preds = %if.then7
  store i8* null, i8** %retval, align 8, !dbg !14974
  br label %return, !dbg !14974

if.end11:                                         ; preds = %if.then7
  %15 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14975
  %location = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %15, i32 0, i32 0, !dbg !14976
  store i32 0, i32* %location, align 8, !dbg !14977
  %16 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14978
  %offset12 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %16, i32 0, i32 1, !dbg !14979
  store i32 0, i32* %offset12, align 4, !dbg !14980
  %17 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14981
  %next13 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %17, i32 0, i32 3, !dbg !14982
  store %struct.extr_rec* null, %struct.extr_rec** %next13, align 8, !dbg !14983
  %18 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14984
  %extr_rec_list14 = getelementptr inbounds %struct.isoent, %struct.isoent* %18, i32 0, i32 21, !dbg !14986
  %last = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list14, i32 0, i32 1, !dbg !14987
  %19 = load %struct.extr_rec**, %struct.extr_rec*** %last, align 8, !dbg !14987
  %cmp15 = icmp eq %struct.extr_rec** %19, null, !dbg !14988
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !14989

if.then16:                                        ; preds = %if.end11
  %20 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14990
  %extr_rec_list17 = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 21, !dbg !14991
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list17, i32 0, i32 0, !dbg !14992
  %21 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14993
  %extr_rec_list18 = getelementptr inbounds %struct.isoent, %struct.isoent* %21, i32 0, i32 21, !dbg !14994
  %last19 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list18, i32 0, i32 1, !dbg !14995
  store %struct.extr_rec** %first, %struct.extr_rec*** %last19, align 8, !dbg !14996
  br label %if.end20, !dbg !14993

if.end20:                                         ; preds = %if.then16, %if.end11
  %22 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !14997
  %23 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !14998
  %extr_rec_list21 = getelementptr inbounds %struct.isoent, %struct.isoent* %23, i32 0, i32 21, !dbg !14999
  %last22 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list21, i32 0, i32 1, !dbg !15000
  %24 = load %struct.extr_rec**, %struct.extr_rec*** %last22, align 8, !dbg !15000
  store %struct.extr_rec* %22, %struct.extr_rec** %24, align 8, !dbg !15001
  %25 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15002
  %next23 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %25, i32 0, i32 3, !dbg !15003
  %26 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15004
  %extr_rec_list24 = getelementptr inbounds %struct.isoent, %struct.isoent* %26, i32 0, i32 21, !dbg !15005
  %last25 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list24, i32 0, i32 1, !dbg !15006
  store %struct.extr_rec** %next23, %struct.extr_rec*** %last25, align 8, !dbg !15007
  br label %if.end26, !dbg !15008

if.end26:                                         ; preds = %if.end20, %lor.lhs.false
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  %27 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15009
  %offset28 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %27, i32 0, i32 1, !dbg !15010
  %28 = load i32, i32* %offset28, align 4, !dbg !15010
  %sub29 = sub nsw i32 2048, %28, !dbg !15011
  %sub30 = sub nsw i32 %sub29, 28, !dbg !15012
  %29 = load i32*, i32** %space.addr, align 8, !dbg !15013
  store i32 %sub30, i32* %29, align 4, !dbg !15014
  %30 = load i32*, i32** %space.addr, align 8, !dbg !15015
  %31 = load i32, i32* %30, align 4, !dbg !15017
  %and = and i32 %31, 1, !dbg !15018
  %tobool = icmp ne i32 %and, 0, !dbg !15018
  br i1 %tobool, label %if.then31, label %if.end33, !dbg !15019

if.then31:                                        ; preds = %if.end27
  %32 = load i32*, i32** %space.addr, align 8, !dbg !15020
  %33 = load i32, i32* %32, align 4, !dbg !15021
  %sub32 = sub nsw i32 %33, 1, !dbg !15021
  store i32 %sub32, i32* %32, align 4, !dbg !15021
  br label %if.end33, !dbg !15022

if.end33:                                         ; preds = %if.then31, %if.end27
  %34 = load i32*, i32** %off.addr, align 8, !dbg !15023
  %cmp34 = icmp ne i32* %34, null, !dbg !15025
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !15026

if.then35:                                        ; preds = %if.end33
  %35 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15027
  %offset36 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %35, i32 0, i32 1, !dbg !15028
  %36 = load i32, i32* %offset36, align 4, !dbg !15028
  %37 = load i32*, i32** %off.addr, align 8, !dbg !15029
  store i32 %36, i32* %37, align 4, !dbg !15030
  br label %if.end37, !dbg !15031

if.end37:                                         ; preds = %if.then35, %if.end33
  %38 = load i32*, i32** %loc.addr, align 8, !dbg !15032
  %cmp38 = icmp ne i32* %38, null, !dbg !15034
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !15035

if.then39:                                        ; preds = %if.end37
  %39 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15036
  %location40 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %39, i32 0, i32 0, !dbg !15037
  %40 = load i32, i32* %location40, align 8, !dbg !15037
  %41 = load i32*, i32** %loc.addr, align 8, !dbg !15038
  store i32 %40, i32* %41, align 4, !dbg !15039
  br label %if.end41, !dbg !15040

if.end41:                                         ; preds = %if.then39, %if.end37
  %42 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15041
  %43 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15042
  %extr_rec_list42 = getelementptr inbounds %struct.isoent, %struct.isoent* %43, i32 0, i32 21, !dbg !15043
  %current43 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list42, i32 0, i32 2, !dbg !15044
  store %struct.extr_rec* %42, %struct.extr_rec** %current43, align 8, !dbg !15045
  %44 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15046
  %offset44 = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %44, i32 0, i32 1, !dbg !15047
  %45 = load i32, i32* %offset44, align 4, !dbg !15047
  %idxprom = sext i32 %45 to i64, !dbg !15048
  %46 = load %struct.extr_rec*, %struct.extr_rec** %rec, align 8, !dbg !15048
  %buf = getelementptr inbounds %struct.extr_rec, %struct.extr_rec* %46, i32 0, i32 2, !dbg !15049
  %arrayidx = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i64 0, i64 %idxprom, !dbg !15048
  store i8* %arrayidx, i8** %retval, align 8, !dbg !15050
  br label %return, !dbg !15050

return:                                           ; preds = %if.end41, %if.then10
  %47 = load i8*, i8** %retval, align 8, !dbg !15051
  ret i8* %47, !dbg !15051
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.extr_rec* @extra_last_record(%struct.isoent* %isoent) #7 !dbg !859 {
entry:
  %retval = alloca %struct.extr_rec*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !15052, metadata !986), !dbg !15053
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15054
  %extr_rec_list = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 21, !dbg !15056
  %first = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list, i32 0, i32 0, !dbg !15057
  %1 = load %struct.extr_rec*, %struct.extr_rec** %first, align 8, !dbg !15057
  %cmp = icmp eq %struct.extr_rec* %1, null, !dbg !15058
  br i1 %cmp, label %if.then, label %if.end, !dbg !15059

if.then:                                          ; preds = %entry
  store %struct.extr_rec* null, %struct.extr_rec** %retval, align 8, !dbg !15060
  br label %return, !dbg !15060

if.end:                                           ; preds = %entry
  %2 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15061
  %extr_rec_list1 = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 21, !dbg !15062
  %last = getelementptr inbounds %struct.anon.3, %struct.anon.3* %extr_rec_list1, i32 0, i32 1, !dbg !15063
  %3 = load %struct.extr_rec**, %struct.extr_rec*** %last, align 8, !dbg !15063
  %4 = bitcast %struct.extr_rec** %3 to i8*, !dbg !15064
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 -2056, !dbg !15065
  %5 = bitcast i8* %add.ptr to %struct.extr_rec*, !dbg !15066
  store %struct.extr_rec* %5, %struct.extr_rec** %retval, align 8, !dbg !15067
  br label %return, !dbg !15067

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.extr_rec*, %struct.extr_rec** %retval, align 8, !dbg !15068
  ret %struct.extr_rec* %6, !dbg !15068
}

; Function Attrs: nounwind uwtable
define internal i64 @fd_boot_image_size(i32 %media_type) #0 !dbg !872 {
entry:
  %retval = alloca i64, align 8
  %media_type.addr = alloca i32, align 4
  store i32 %media_type, i32* %media_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %media_type.addr, metadata !15069, metadata !986), !dbg !15070
  %0 = load i32, i32* %media_type.addr, align 4, !dbg !15071
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !15072

sw.bb:                                            ; preds = %entry
  store i64 1228800, i64* %retval, align 8, !dbg !15073
  br label %return, !dbg !15073

sw.bb1:                                           ; preds = %entry
  store i64 1474560, i64* %retval, align 8, !dbg !15075
  br label %return, !dbg !15075

sw.bb2:                                           ; preds = %entry
  store i64 2949120, i64* %retval, align 8, !dbg !15076
  br label %return, !dbg !15076

sw.default:                                       ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !15077
  br label %return, !dbg !15077

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i64, i64* %retval, align 8, !dbg !15078
  ret i64 %1, !dbg !15078
}

; Function Attrs: nounwind uwtable
define internal void @_isoent_file_location(%struct.iso9660* %iso9660, %struct.isoent* %isoent, i32* %symlocation) #0 !dbg !875 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %symlocation.addr = alloca i32*, align 8
  %children = alloca %struct.isoent**, align 8
  %n = alloca i32, align 4
  %np = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !15079, metadata !986), !dbg !15080
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !15081, metadata !986), !dbg !15082
  store i32* %symlocation, i32** %symlocation.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %symlocation.addr, metadata !15083, metadata !986), !dbg !15084
  call void @llvm.dbg.declare(metadata %struct.isoent*** %children, metadata !15085, metadata !986), !dbg !15086
  call void @llvm.dbg.declare(metadata i32* %n, metadata !15087, metadata !986), !dbg !15088
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15089
  %children1 = getelementptr inbounds %struct.isoent, %struct.isoent* %0, i32 0, i32 3, !dbg !15091
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children1, i32 0, i32 2, !dbg !15092
  %1 = load i32, i32* %cnt, align 8, !dbg !15092
  %cmp = icmp eq i32 %1, 0, !dbg !15093
  br i1 %cmp, label %if.then, label %if.end, !dbg !15094

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !15095

if.end:                                           ; preds = %entry
  %2 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15096
  %children_sorted = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 6, !dbg !15097
  %3 = load %struct.isoent**, %struct.isoent*** %children_sorted, align 8, !dbg !15097
  store %struct.isoent** %3, %struct.isoent*** %children, align 8, !dbg !15098
  store i32 0, i32* %n, align 4, !dbg !15099
  br label %for.cond, !dbg !15101

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %n, align 4, !dbg !15102
  %5 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !15105
  %children2 = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 3, !dbg !15106
  %cnt3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children2, i32 0, i32 2, !dbg !15107
  %6 = load i32, i32* %cnt3, align 8, !dbg !15107
  %cmp4 = icmp slt i32 %4, %6, !dbg !15108
  br i1 %cmp4, label %for.body, label %for.end, !dbg !15109

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !15110, metadata !986), !dbg !15112
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !15113, metadata !986), !dbg !15114
  %7 = load i32, i32* %n, align 4, !dbg !15115
  %idxprom = sext i32 %7 to i64, !dbg !15116
  %8 = load %struct.isoent**, %struct.isoent*** %children, align 8, !dbg !15116
  %arrayidx = getelementptr inbounds %struct.isoent*, %struct.isoent** %8, i64 %idxprom, !dbg !15116
  %9 = load %struct.isoent*, %struct.isoent** %arrayidx, align 8, !dbg !15116
  store %struct.isoent* %9, %struct.isoent** %np, align 8, !dbg !15117
  %10 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !15118
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 22, !dbg !15120
  %bf.load = load i8, i8* %dir, align 8, !dbg !15120
  %bf.shl = shl i8 %bf.load, 6, !dbg !15120
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !15120
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !15120
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15118
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !15121

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !15122

if.end6:                                          ; preds = %for.body
  %11 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !15123
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !15125
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 36, !dbg !15126
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 3, !dbg !15127
  %13 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !15127
  %cmp7 = icmp eq %struct.isoent* %11, %13, !dbg !15128
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15129

if.then8:                                         ; preds = %if.end6
  br label %for.inc, !dbg !15130

if.end9:                                          ; preds = %if.end6
  %14 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !15131
  %file10 = getelementptr inbounds %struct.isoent, %struct.isoent* %14, i32 0, i32 1, !dbg !15132
  %15 = load %struct.isofile*, %struct.isofile** %file10, align 8, !dbg !15132
  store %struct.isofile* %15, %struct.isofile** %file, align 8, !dbg !15133
  %16 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15134
  %boot11 = getelementptr inbounds %struct.isofile, %struct.isofile* %16, i32 0, i32 13, !dbg !15136
  %17 = load i32, i32* %boot11, align 4, !dbg !15136
  %tobool12 = icmp ne i32 %17, 0, !dbg !15134
  br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !15137

lor.lhs.false:                                    ; preds = %if.end9
  %18 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15138
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %18, i32 0, i32 3, !dbg !15140
  %19 = load %struct.isofile*, %struct.isofile** %hardlink_target, align 8, !dbg !15140
  %cmp13 = icmp ne %struct.isofile* %19, null, !dbg !15141
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !15142

if.then14:                                        ; preds = %lor.lhs.false, %if.end9
  br label %for.inc, !dbg !15143

if.end15:                                         ; preds = %lor.lhs.false
  %20 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15144
  %entry16 = getelementptr inbounds %struct.isofile, %struct.isofile* %20, i32 0, i32 4, !dbg !15146
  %21 = load %struct.archive_entry*, %struct.archive_entry** %entry16, align 8, !dbg !15146
  %call = call i32 @archive_entry_filetype(%struct.archive_entry* %21), !dbg !15147
  %cmp17 = icmp eq i32 %call, 40960, !dbg !15148
  br i1 %cmp17, label %if.then20, label %lor.lhs.false18, !dbg !15149

lor.lhs.false18:                                  ; preds = %if.end15
  %22 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15150
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %22, i32 0, i32 10, !dbg !15151
  %size = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 1, !dbg !15152
  %23 = load i64, i64* %size, align 8, !dbg !15152
  %cmp19 = icmp eq i64 %23, 0, !dbg !15153
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !15154

if.then20:                                        ; preds = %lor.lhs.false18, %if.end15
  %24 = load i32*, i32** %symlocation.addr, align 8, !dbg !15156
  %25 = load i32, i32* %24, align 4, !dbg !15158
  %dec = add nsw i32 %25, -1, !dbg !15158
  store i32 %dec, i32* %24, align 4, !dbg !15158
  %26 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15159
  %content21 = getelementptr inbounds %struct.isofile, %struct.isofile* %26, i32 0, i32 10, !dbg !15160
  %location = getelementptr inbounds %struct.content, %struct.content* %content21, i32 0, i32 3, !dbg !15161
  store i32 %25, i32* %location, align 4, !dbg !15162
  br label %for.inc, !dbg !15163

if.end22:                                         ; preds = %lor.lhs.false18
  %27 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !15164
  %write_content = getelementptr inbounds %struct.isofile, %struct.isofile* %27, i32 0, i32 12, !dbg !15165
  store i32 1, i32* %write_content, align 8, !dbg !15166
  br label %for.inc, !dbg !15167

for.inc:                                          ; preds = %if.end22, %if.then20, %if.then14, %if.then8, %if.then5
  %28 = load i32, i32* %n, align 4, !dbg !15168
  %inc = add nsw i32 %28, 1, !dbg !15168
  store i32 %inc, i32* %n, align 4, !dbg !15168
  br label %for.cond, !dbg !15170

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !15171
}

; Function Attrs: nounwind uwtable
define internal void @set_VD_bp(i8* %bp, i32 %type, i8 zeroext %ver) #0 !dbg !880 {
entry:
  %bp.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %ver.addr = alloca i8, align 1
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !15172, metadata !986), !dbg !15173
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15174, metadata !986), !dbg !15175
  store i8 %ver, i8* %ver.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ver.addr, metadata !15176, metadata !986), !dbg !15177
  %0 = load i32, i32* %type.addr, align 4, !dbg !15178
  %conv = trunc i32 %0 to i8, !dbg !15179
  %1 = load i8*, i8** %bp.addr, align 8, !dbg !15180
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !15180
  store i8 %conv, i8* %arrayidx, align 1, !dbg !15181
  %2 = load i8*, i8** %bp.addr, align 8, !dbg !15182
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 2, !dbg !15183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i64 5, i32 1, i1 false), !dbg !15184
  %3 = load i8, i8* %ver.addr, align 1, !dbg !15185
  %4 = load i8*, i8** %bp.addr, align 8, !dbg !15186
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 7, !dbg !15186
  store i8 %3, i8* %arrayidx1, align 1, !dbg !15187
  ret void, !dbg !15188
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_unused_field_bp(i8* %bp, i32 %from, i32 %to) #7 !dbg !883 {
entry:
  %bp.addr = alloca i8*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !15189, metadata !986), !dbg !15190
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15191, metadata !986), !dbg !15192
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !15193, metadata !986), !dbg !15194
  %0 = load i8*, i8** %bp.addr, align 8, !dbg !15195
  %1 = load i32, i32* %from.addr, align 4, !dbg !15196
  %idx.ext = sext i32 %1 to i64, !dbg !15197
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !15197
  %2 = load i32, i32* %to.addr, align 4, !dbg !15198
  %3 = load i32, i32* %from.addr, align 4, !dbg !15199
  %sub = sub nsw i32 %2, %3, !dbg !15200
  %add = add nsw i32 %sub, 1, !dbg !15201
  %conv = sext i32 %add to i64, !dbg !15198
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv, i32 1, i1 false), !dbg !15202
  ret void, !dbg !15203
}

; Function Attrs: nounwind uwtable
define internal void @get_system_identitier(i8* %system_id, i64 %size) #0 !dbg !886 {
entry:
  %system_id.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %u = alloca %struct.utsname, align 1
  store i8* %system_id, i8** %system_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %system_id.addr, metadata !15204, metadata !986), !dbg !15205
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15206, metadata !986), !dbg !15207
  call void @llvm.dbg.declare(metadata %struct.utsname* %u, metadata !15208, metadata !986), !dbg !15221
  %call = call i32 @uname(%struct.utsname* %u) #8, !dbg !15222
  %0 = load i8*, i8** %system_id.addr, align 8, !dbg !15223
  %sysname = getelementptr inbounds %struct.utsname, %struct.utsname* %u, i32 0, i32 0, !dbg !15224
  %arraydecay = getelementptr inbounds [65 x i8], [65 x i8]* %sysname, i32 0, i32 0, !dbg !15225
  %1 = load i64, i64* %size.addr, align 8, !dbg !15226
  %sub = sub i64 %1, 1, !dbg !15227
  %call1 = call i8* @strncpy(i8* %0, i8* %arraydecay, i64 %sub) #8, !dbg !15228
  %2 = load i64, i64* %size.addr, align 8, !dbg !15229
  %sub2 = sub i64 %2, 1, !dbg !15230
  %3 = load i8*, i8** %system_id.addr, align 8, !dbg !15231
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub2, !dbg !15231
  store i8 0, i8* %arrayidx, align 1, !dbg !15232
  ret void, !dbg !15233
}

; Function Attrs: nounwind uwtable
define internal i32 @set_str_a_characters_bp(%struct.archive_write* %a, i8* %bp, i32 %from, i32 %to, i8* %s, i32 %vdc) #0 !dbg !889 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %bp.addr = alloca i8*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %vdc.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !15234, metadata !986), !dbg !15235
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !15236, metadata !986), !dbg !15237
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15238, metadata !986), !dbg !15239
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !15240, metadata !986), !dbg !15241
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15242, metadata !986), !dbg !15243
  store i32 %vdc, i32* %vdc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdc.addr, metadata !15244, metadata !986), !dbg !15245
  call void @llvm.dbg.declare(metadata i32* %r, metadata !15246, metadata !986), !dbg !15247
  %0 = load i32, i32* %vdc.addr, align 4, !dbg !15248
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb7
    i32 3, label %sw.bb7
  ], !dbg !15249

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %bp.addr, align 8, !dbg !15250
  %2 = load i32, i32* %from.addr, align 4, !dbg !15252
  %idx.ext = sext i32 %2 to i64, !dbg !15253
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !15253
  %3 = load i8*, i8** %s.addr, align 8, !dbg !15254
  %4 = load i32, i32* %to.addr, align 4, !dbg !15255
  %5 = load i32, i32* %from.addr, align 4, !dbg !15256
  %sub = sub nsw i32 %4, %5, !dbg !15257
  %add = add nsw i32 %sub, 1, !dbg !15258
  %conv = sext i32 %add to i64, !dbg !15255
  call void @set_str(i8* %add.ptr, i8* %3, i64 %conv, i8 signext 32, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @a_characters_map, i32 0, i32 0)), !dbg !15259
  store i32 0, i32* %r, align 4, !dbg !15260
  br label %sw.epilog, !dbg !15261

sw.bb1:                                           ; preds = %entry
  %6 = load i8*, i8** %bp.addr, align 8, !dbg !15262
  %7 = load i32, i32* %from.addr, align 4, !dbg !15263
  %idx.ext2 = sext i32 %7 to i64, !dbg !15264
  %add.ptr3 = getelementptr inbounds i8, i8* %6, i64 %idx.ext2, !dbg !15264
  %8 = load i8*, i8** %s.addr, align 8, !dbg !15265
  %9 = load i32, i32* %to.addr, align 4, !dbg !15266
  %10 = load i32, i32* %from.addr, align 4, !dbg !15267
  %sub4 = sub nsw i32 %9, %10, !dbg !15268
  %add5 = add nsw i32 %sub4, 1, !dbg !15269
  %conv6 = sext i32 %add5 to i64, !dbg !15266
  call void @set_str(i8* %add.ptr3, i8* %8, i64 %conv6, i8 signext 32, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @a1_characters_map, i32 0, i32 0)), !dbg !15270
  store i32 0, i32* %r, align 4, !dbg !15271
  br label %sw.epilog, !dbg !15272

sw.bb7:                                           ; preds = %entry, %entry
  %11 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15273
  %12 = load i8*, i8** %bp.addr, align 8, !dbg !15274
  %13 = load i32, i32* %from.addr, align 4, !dbg !15275
  %idx.ext8 = sext i32 %13 to i64, !dbg !15276
  %add.ptr9 = getelementptr inbounds i8, i8* %12, i64 %idx.ext8, !dbg !15276
  %14 = load i8*, i8** %s.addr, align 8, !dbg !15277
  %15 = load i32, i32* %to.addr, align 4, !dbg !15278
  %16 = load i32, i32* %from.addr, align 4, !dbg !15279
  %sub10 = sub nsw i32 %15, %16, !dbg !15280
  %add11 = add nsw i32 %sub10, 1, !dbg !15281
  %conv12 = sext i32 %add11 to i64, !dbg !15278
  %17 = load i32, i32* %vdc.addr, align 4, !dbg !15282
  %call = call i32 @set_str_utf16be(%struct.archive_write* %11, i8* %add.ptr9, i8* %14, i64 %conv12, i16 zeroext 32, i32 %17), !dbg !15283
  store i32 %call, i32* %r, align 4, !dbg !15284
  br label %sw.epilog, !dbg !15285

sw.default:                                       ; preds = %entry
  store i32 -30, i32* %r, align 4, !dbg !15286
  br label %sw.epilog, !dbg !15287

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb1, %sw.bb
  %18 = load i32, i32* %r, align 4, !dbg !15288
  ret i32 %18, !dbg !15289
}

; Function Attrs: nounwind uwtable
define internal i32 @set_str_d_characters_bp(%struct.archive_write* %a, i8* %bp, i32 %from, i32 %to, i8* %s, i32 %vdc) #0 !dbg !898 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %bp.addr = alloca i8*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %vdc.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !15290, metadata !986), !dbg !15291
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !15292, metadata !986), !dbg !15293
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15294, metadata !986), !dbg !15295
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !15296, metadata !986), !dbg !15297
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15298, metadata !986), !dbg !15299
  store i32 %vdc, i32* %vdc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdc.addr, metadata !15300, metadata !986), !dbg !15301
  call void @llvm.dbg.declare(metadata i32* %r, metadata !15302, metadata !986), !dbg !15303
  %0 = load i32, i32* %vdc.addr, align 4, !dbg !15304
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb7
    i32 3, label %sw.bb7
  ], !dbg !15305

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %bp.addr, align 8, !dbg !15306
  %2 = load i32, i32* %from.addr, align 4, !dbg !15308
  %idx.ext = sext i32 %2 to i64, !dbg !15309
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !15309
  %3 = load i8*, i8** %s.addr, align 8, !dbg !15310
  %4 = load i32, i32* %to.addr, align 4, !dbg !15311
  %5 = load i32, i32* %from.addr, align 4, !dbg !15312
  %sub = sub nsw i32 %4, %5, !dbg !15313
  %add = add nsw i32 %sub, 1, !dbg !15314
  %conv = sext i32 %add to i64, !dbg !15311
  call void @set_str(i8* %add.ptr, i8* %3, i64 %conv, i8 signext 32, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @d_characters_map, i32 0, i32 0)), !dbg !15315
  store i32 0, i32* %r, align 4, !dbg !15316
  br label %sw.epilog, !dbg !15317

sw.bb1:                                           ; preds = %entry
  %6 = load i8*, i8** %bp.addr, align 8, !dbg !15318
  %7 = load i32, i32* %from.addr, align 4, !dbg !15319
  %idx.ext2 = sext i32 %7 to i64, !dbg !15320
  %add.ptr3 = getelementptr inbounds i8, i8* %6, i64 %idx.ext2, !dbg !15320
  %8 = load i8*, i8** %s.addr, align 8, !dbg !15321
  %9 = load i32, i32* %to.addr, align 4, !dbg !15322
  %10 = load i32, i32* %from.addr, align 4, !dbg !15323
  %sub4 = sub nsw i32 %9, %10, !dbg !15324
  %add5 = add nsw i32 %sub4, 1, !dbg !15325
  %conv6 = sext i32 %add5 to i64, !dbg !15322
  call void @set_str(i8* %add.ptr3, i8* %8, i64 %conv6, i8 signext 32, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @d1_characters_map, i32 0, i32 0)), !dbg !15326
  store i32 0, i32* %r, align 4, !dbg !15327
  br label %sw.epilog, !dbg !15328

sw.bb7:                                           ; preds = %entry, %entry
  %11 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15329
  %12 = load i8*, i8** %bp.addr, align 8, !dbg !15330
  %13 = load i32, i32* %from.addr, align 4, !dbg !15331
  %idx.ext8 = sext i32 %13 to i64, !dbg !15332
  %add.ptr9 = getelementptr inbounds i8, i8* %12, i64 %idx.ext8, !dbg !15332
  %14 = load i8*, i8** %s.addr, align 8, !dbg !15333
  %15 = load i32, i32* %to.addr, align 4, !dbg !15334
  %16 = load i32, i32* %from.addr, align 4, !dbg !15335
  %sub10 = sub nsw i32 %15, %16, !dbg !15336
  %add11 = add nsw i32 %sub10, 1, !dbg !15337
  %conv12 = sext i32 %add11 to i64, !dbg !15334
  %17 = load i32, i32* %vdc.addr, align 4, !dbg !15338
  %call = call i32 @set_str_utf16be(%struct.archive_write* %11, i8* %add.ptr9, i8* %14, i64 %conv12, i16 zeroext 32, i32 %17), !dbg !15339
  store i32 %call, i32* %r, align 4, !dbg !15340
  br label %sw.epilog, !dbg !15341

sw.default:                                       ; preds = %entry
  store i32 -30, i32* %r, align 4, !dbg !15342
  br label %sw.epilog, !dbg !15343

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb1, %sw.bb
  %18 = load i32, i32* %r, align 4, !dbg !15344
  ret i32 %18, !dbg !15345
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_732(i8* %p, i32 %value) #7 !dbg !899 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15346, metadata !986), !dbg !15347
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !15348, metadata !986), !dbg !15349
  %0 = load i8*, i8** %p.addr, align 8, !dbg !15350
  %1 = load i32, i32* %value.addr, align 4, !dbg !15351
  call void @archive_be32enc(i8* %0, i32 %1), !dbg !15352
  ret void, !dbg !15353
}

; Function Attrs: nounwind uwtable
define internal i32 @set_file_identifier(i8* %bp, i32 %from, i32 %to, i32 %vdc, %struct.archive_write* %a, %struct.vdd* %vdd, %struct.archive_string* %id, i8* %label, i32 %leading_under, i32 %char_type) #0 !dbg !900 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca i8*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %vdc.addr = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %id.addr = alloca %struct.archive_string*, align 8
  %label.addr = alloca i8*, align 8
  %leading_under.addr = alloca i32, align 4
  %char_type.addr = alloca i32, align 4
  %identifier = alloca [256 x i8], align 16
  %isoent = alloca %struct.isoent*, align 8
  %ids = alloca i8*, align 8
  %len = alloca i64, align 8
  %r = alloca i32, align 4
  store i8* %bp, i8** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bp.addr, metadata !15354, metadata !986), !dbg !15355
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15356, metadata !986), !dbg !15357
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !15358, metadata !986), !dbg !15359
  store i32 %vdc, i32* %vdc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdc.addr, metadata !15360, metadata !986), !dbg !15361
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !15362, metadata !986), !dbg !15363
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !15364, metadata !986), !dbg !15365
  store %struct.archive_string* %id, %struct.archive_string** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string** %id.addr, metadata !15366, metadata !986), !dbg !15367
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !15368, metadata !986), !dbg !15369
  store i32 %leading_under, i32* %leading_under.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %leading_under.addr, metadata !15370, metadata !986), !dbg !15371
  store i32 %char_type, i32* %char_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %char_type.addr, metadata !15372, metadata !986), !dbg !15373
  call void @llvm.dbg.declare(metadata [256 x i8]* %identifier, metadata !15374, metadata !986), !dbg !15375
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent, metadata !15376, metadata !986), !dbg !15377
  call void @llvm.dbg.declare(metadata i8** %ids, metadata !15378, metadata !986), !dbg !15379
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15380, metadata !986), !dbg !15381
  call void @llvm.dbg.declare(metadata i32* %r, metadata !15382, metadata !986), !dbg !15383
  %0 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15384
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %0, i32 0, i32 1, !dbg !15386
  %1 = load i64, i64* %length, align 8, !dbg !15386
  %cmp = icmp ugt i64 %1, 0, !dbg !15387
  br i1 %cmp, label %land.lhs.true, label %if.else10, !dbg !15388

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %leading_under.addr, align 4, !dbg !15389
  %tobool = icmp ne i32 %2, 0, !dbg !15389
  br i1 %tobool, label %land.lhs.true1, label %if.else10, !dbg !15391

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15392
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %3, i32 0, i32 0, !dbg !15394
  %4 = load i8*, i8** %s, align 8, !dbg !15394
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !15392
  %5 = load i8, i8* %arrayidx, align 1, !dbg !15392
  %conv = sext i8 %5 to i32, !dbg !15392
  %cmp2 = icmp ne i32 %conv, 95, !dbg !15395
  br i1 %cmp2, label %if.then, label %if.else10, !dbg !15396

if.then:                                          ; preds = %land.lhs.true1
  %6 = load i32, i32* %char_type.addr, align 4, !dbg !15397
  %cmp4 = icmp eq i32 %6, 0, !dbg !15400
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !15401

if.then6:                                         ; preds = %if.then
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15402
  %8 = load i8*, i8** %bp.addr, align 8, !dbg !15403
  %9 = load i32, i32* %from.addr, align 4, !dbg !15404
  %10 = load i32, i32* %to.addr, align 4, !dbg !15405
  %11 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15406
  %s7 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %11, i32 0, i32 0, !dbg !15407
  %12 = load i8*, i8** %s7, align 8, !dbg !15407
  %13 = load i32, i32* %vdc.addr, align 4, !dbg !15408
  %call = call i32 @set_str_a_characters_bp(%struct.archive_write* %7, i8* %8, i32 %9, i32 %10, i8* %12, i32 %13), !dbg !15409
  store i32 %call, i32* %r, align 4, !dbg !15410
  br label %if.end, !dbg !15411

if.else:                                          ; preds = %if.then
  %14 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15412
  %15 = load i8*, i8** %bp.addr, align 8, !dbg !15413
  %16 = load i32, i32* %from.addr, align 4, !dbg !15414
  %17 = load i32, i32* %to.addr, align 4, !dbg !15415
  %18 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15416
  %s8 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %18, i32 0, i32 0, !dbg !15417
  %19 = load i8*, i8** %s8, align 8, !dbg !15417
  %20 = load i32, i32* %vdc.addr, align 4, !dbg !15418
  %call9 = call i32 @set_str_d_characters_bp(%struct.archive_write* %14, i8* %15, i32 %16, i32 %17, i8* %19, i32 %20), !dbg !15419
  store i32 %call9, i32* %r, align 4, !dbg !15420
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end65, !dbg !15421

if.else10:                                        ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %21 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15422
  %length11 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %21, i32 0, i32 1, !dbg !15425
  %22 = load i64, i64* %length11, align 8, !dbg !15425
  %cmp12 = icmp ugt i64 %22, 0, !dbg !15426
  br i1 %cmp12, label %if.then14, label %if.else56, !dbg !15422

if.then14:                                        ; preds = %if.else10
  %23 = load %struct.archive_string*, %struct.archive_string** %id.addr, align 8, !dbg !15427
  %s15 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %23, i32 0, i32 0, !dbg !15429
  %24 = load i8*, i8** %s15, align 8, !dbg !15429
  store i8* %24, i8** %ids, align 8, !dbg !15430
  %25 = load i32, i32* %leading_under.addr, align 4, !dbg !15431
  %tobool16 = icmp ne i32 %25, 0, !dbg !15431
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !15433

if.then17:                                        ; preds = %if.then14
  %26 = load i8*, i8** %ids, align 8, !dbg !15434
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1, !dbg !15434
  store i8* %incdec.ptr, i8** %ids, align 8, !dbg !15434
  br label %if.end18, !dbg !15435

if.end18:                                         ; preds = %if.then17, %if.then14
  %27 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15436
  %rootent = getelementptr inbounds %struct.vdd, %struct.vdd* %27, i32 0, i32 0, !dbg !15437
  %28 = load %struct.isoent*, %struct.isoent** %rootent, align 8, !dbg !15437
  %29 = load i8*, i8** %ids, align 8, !dbg !15438
  %call19 = call %struct.isoent* @isoent_find_entry(%struct.isoent* %28, i8* %29), !dbg !15439
  store %struct.isoent* %call19, %struct.isoent** %isoent, align 8, !dbg !15440
  %30 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !15441
  %cmp20 = icmp eq %struct.isoent* %30, null, !dbg !15443
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !15444

if.then22:                                        ; preds = %if.end18
  %31 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15445
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %31, i32 0, i32 0, !dbg !15447
  %32 = load i8*, i8** %label.addr, align 8, !dbg !15448
  %33 = load i8*, i8** %ids, align 8, !dbg !15449
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85, i32 0, i32 0), i8* %32, i8* %33), !dbg !15450
  store i32 -30, i32* %retval, align 4, !dbg !15451
  br label %return, !dbg !15451

if.end23:                                         ; preds = %if.end18
  %34 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !15452
  %ext_off = getelementptr inbounds %struct.isoent, %struct.isoent* %34, i32 0, i32 15, !dbg !15453
  %35 = load i32, i32* %ext_off, align 8, !dbg !15453
  %36 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !15454
  %ext_len = getelementptr inbounds %struct.isoent, %struct.isoent* %36, i32 0, i32 16, !dbg !15455
  %37 = load i32, i32* %ext_len, align 4, !dbg !15455
  %add = add nsw i32 %35, %37, !dbg !15456
  %conv24 = sext i32 %add to i64, !dbg !15452
  store i64 %conv24, i64* %len, align 8, !dbg !15457
  %38 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15458
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %38, i32 0, i32 1, !dbg !15460
  %39 = load i32, i32* %vdd_type, align 8, !dbg !15460
  %cmp25 = icmp eq i32 %39, 1, !dbg !15461
  br i1 %cmp25, label %if.then27, label %if.else32, !dbg !15462

if.then27:                                        ; preds = %if.end23
  %40 = load i64, i64* %len, align 8, !dbg !15463
  %cmp28 = icmp ugt i64 %40, 254, !dbg !15466
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !15467

if.then30:                                        ; preds = %if.then27
  store i64 254, i64* %len, align 8, !dbg !15468
  br label %if.end31, !dbg !15469

if.end31:                                         ; preds = %if.then30, %if.then27
  br label %if.end37, !dbg !15470

if.else32:                                        ; preds = %if.end23
  %41 = load i64, i64* %len, align 8, !dbg !15471
  %cmp33 = icmp ugt i64 %41, 255, !dbg !15474
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !15475

if.then35:                                        ; preds = %if.else32
  store i64 255, i64* %len, align 8, !dbg !15476
  br label %if.end36, !dbg !15477

if.end36:                                         ; preds = %if.then35, %if.else32
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end31
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i32 0, i32 0, !dbg !15478
  %42 = load %struct.isoent*, %struct.isoent** %isoent, align 8, !dbg !15479
  %identifier38 = getelementptr inbounds %struct.isoent, %struct.isoent* %42, i32 0, i32 14, !dbg !15480
  %43 = load i8*, i8** %identifier38, align 8, !dbg !15480
  %44 = load i64, i64* %len, align 8, !dbg !15481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %43, i64 %44, i32 1, i1 false), !dbg !15478
  %45 = load i64, i64* %len, align 8, !dbg !15482
  %arrayidx39 = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i64 0, i64 %45, !dbg !15483
  store i8 0, i8* %arrayidx39, align 1, !dbg !15484
  %46 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15485
  %vdd_type40 = getelementptr inbounds %struct.vdd, %struct.vdd* %46, i32 0, i32 1, !dbg !15487
  %47 = load i32, i32* %vdd_type40, align 8, !dbg !15487
  %cmp41 = icmp eq i32 %47, 1, !dbg !15488
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !15489

if.then43:                                        ; preds = %if.end37
  %48 = load i64, i64* %len, align 8, !dbg !15490
  %add44 = add i64 %48, 1, !dbg !15492
  %arrayidx45 = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i64 0, i64 %add44, !dbg !15493
  store i8 0, i8* %arrayidx45, align 1, !dbg !15494
  store i32 3, i32* %vdc.addr, align 4, !dbg !15495
  br label %if.end46, !dbg !15496

if.end46:                                         ; preds = %if.then43, %if.end37
  %49 = load i32, i32* %char_type.addr, align 4, !dbg !15497
  %cmp47 = icmp eq i32 %49, 0, !dbg !15499
  br i1 %cmp47, label %if.then49, label %if.else52, !dbg !15500

if.then49:                                        ; preds = %if.end46
  %50 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15501
  %51 = load i8*, i8** %bp.addr, align 8, !dbg !15502
  %52 = load i32, i32* %from.addr, align 4, !dbg !15503
  %53 = load i32, i32* %to.addr, align 4, !dbg !15504
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i32 0, i32 0, !dbg !15505
  %54 = load i32, i32* %vdc.addr, align 4, !dbg !15506
  %call51 = call i32 @set_str_a_characters_bp(%struct.archive_write* %50, i8* %51, i32 %52, i32 %53, i8* %arraydecay50, i32 %54), !dbg !15507
  store i32 %call51, i32* %r, align 4, !dbg !15508
  br label %if.end55, !dbg !15509

if.else52:                                        ; preds = %if.end46
  %55 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15510
  %56 = load i8*, i8** %bp.addr, align 8, !dbg !15511
  %57 = load i32, i32* %from.addr, align 4, !dbg !15512
  %58 = load i32, i32* %to.addr, align 4, !dbg !15513
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %identifier, i32 0, i32 0, !dbg !15514
  %59 = load i32, i32* %vdc.addr, align 4, !dbg !15515
  %call54 = call i32 @set_str_d_characters_bp(%struct.archive_write* %55, i8* %56, i32 %57, i32 %58, i8* %arraydecay53, i32 %59), !dbg !15516
  store i32 %call54, i32* %r, align 4, !dbg !15517
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then49
  br label %if.end64, !dbg !15518

if.else56:                                        ; preds = %if.else10
  %60 = load i32, i32* %char_type.addr, align 4, !dbg !15519
  %cmp57 = icmp eq i32 %60, 0, !dbg !15522
  br i1 %cmp57, label %if.then59, label %if.else61, !dbg !15523

if.then59:                                        ; preds = %if.else56
  %61 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15524
  %62 = load i8*, i8** %bp.addr, align 8, !dbg !15525
  %63 = load i32, i32* %from.addr, align 4, !dbg !15526
  %64 = load i32, i32* %to.addr, align 4, !dbg !15527
  %65 = load i32, i32* %vdc.addr, align 4, !dbg !15528
  %call60 = call i32 @set_str_a_characters_bp(%struct.archive_write* %61, i8* %62, i32 %63, i32 %64, i8* null, i32 %65), !dbg !15529
  store i32 %call60, i32* %r, align 4, !dbg !15530
  br label %if.end63, !dbg !15531

if.else61:                                        ; preds = %if.else56
  %66 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15532
  %67 = load i8*, i8** %bp.addr, align 8, !dbg !15533
  %68 = load i32, i32* %from.addr, align 4, !dbg !15534
  %69 = load i32, i32* %to.addr, align 4, !dbg !15535
  %70 = load i32, i32* %vdc.addr, align 4, !dbg !15536
  %call62 = call i32 @set_str_d_characters_bp(%struct.archive_write* %66, i8* %67, i32 %68, i32 %69, i8* null, i32 %70), !dbg !15537
  store i32 %call62, i32* %r, align 4, !dbg !15538
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then59
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end55
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end
  %71 = load i32, i32* %r, align 4, !dbg !15539
  store i32 %71, i32* %retval, align 4, !dbg !15540
  br label %return, !dbg !15540

return:                                           ; preds = %if.end65, %if.then22
  %72 = load i32, i32* %retval, align 4, !dbg !15541
  ret i32 %72, !dbg !15541
}

; Function Attrs: nounwind uwtable
define internal void @set_date_time(i8* %p, i64 %t) #0 !dbg !903 {
entry:
  %p.addr = alloca i8*, align 8
  %t.addr = alloca i64, align 8
  %tm = alloca %struct.tm, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15542, metadata !986), !dbg !15543
  store i64 %t, i64* %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %t.addr, metadata !15544, metadata !986), !dbg !15545
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !15546, metadata !986), !dbg !15547
  call void @get_tmfromtime(%struct.tm* %tm, i64* %t.addr), !dbg !15548
  %0 = load i8*, i8** %p.addr, align 8, !dbg !15549
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !15550
  %1 = load i32, i32* %tm_year, align 4, !dbg !15550
  %add = add nsw i32 %1, 1900, !dbg !15551
  call void @set_digit(i8* %0, i64 4, i32 %add), !dbg !15552
  %2 = load i8*, i8** %p.addr, align 8, !dbg !15553
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 4, !dbg !15554
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !15555
  %3 = load i32, i32* %tm_mon, align 8, !dbg !15555
  %add1 = add nsw i32 %3, 1, !dbg !15556
  call void @set_digit(i8* %add.ptr, i64 2, i32 %add1), !dbg !15557
  %4 = load i8*, i8** %p.addr, align 8, !dbg !15558
  %add.ptr2 = getelementptr inbounds i8, i8* %4, i64 6, !dbg !15559
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !15560
  %5 = load i32, i32* %tm_mday, align 4, !dbg !15560
  call void @set_digit(i8* %add.ptr2, i64 2, i32 %5), !dbg !15561
  %6 = load i8*, i8** %p.addr, align 8, !dbg !15562
  %add.ptr3 = getelementptr inbounds i8, i8* %6, i64 8, !dbg !15563
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !15564
  %7 = load i32, i32* %tm_hour, align 8, !dbg !15564
  call void @set_digit(i8* %add.ptr3, i64 2, i32 %7), !dbg !15565
  %8 = load i8*, i8** %p.addr, align 8, !dbg !15566
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 10, !dbg !15567
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !15568
  %9 = load i32, i32* %tm_min, align 4, !dbg !15568
  call void @set_digit(i8* %add.ptr4, i64 2, i32 %9), !dbg !15569
  %10 = load i8*, i8** %p.addr, align 8, !dbg !15570
  %add.ptr5 = getelementptr inbounds i8, i8* %10, i64 12, !dbg !15571
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !15572
  %11 = load i32, i32* %tm_sec, align 8, !dbg !15572
  call void @set_digit(i8* %add.ptr5, i64 2, i32 %11), !dbg !15573
  %12 = load i8*, i8** %p.addr, align 8, !dbg !15574
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 14, !dbg !15575
  call void @set_digit(i8* %add.ptr6, i64 2, i32 0), !dbg !15576
  %13 = load i8*, i8** %p.addr, align 8, !dbg !15577
  %add.ptr7 = getelementptr inbounds i8, i8* %13, i64 16, !dbg !15578
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 9, !dbg !15579
  %14 = load i64, i64* %tm_gmtoff, align 8, !dbg !15579
  %div = sdiv i64 %14, 900, !dbg !15580
  %conv = trunc i64 %div to i8, !dbg !15581
  call void @set_num_712(i8* %add.ptr7, i8 signext %conv), !dbg !15582
  ret void, !dbg !15583
}

; Function Attrs: nounwind uwtable
define internal void @set_date_time_null(i8* %p) #0 !dbg !907 {
entry:
  %p.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15584, metadata !986), !dbg !15585
  %0 = load i8*, i8** %p.addr, align 8, !dbg !15586
  call void @llvm.memset.p0i8.i64(i8* %0, i8 48, i64 16, i32 1, i1 false), !dbg !15587
  %1 = load i8*, i8** %p.addr, align 8, !dbg !15588
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 16, !dbg !15588
  store i8 0, i8* %arrayidx, align 1, !dbg !15589
  ret void, !dbg !15590
}

; Function Attrs: nounwind
declare i32 @uname(%struct.utsname*) #3

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal void @set_str(i8* %p, i8* %s, i64 %l, i8 signext %f, i8* %map) #0 !dbg !892 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %l.addr = alloca i64, align 8
  %f.addr = alloca i8, align 1
  %map.addr = alloca i8*, align 8
  %c = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15591, metadata !986), !dbg !15592
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15593, metadata !986), !dbg !15594
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !15595, metadata !986), !dbg !15596
  store i8 %f, i8* %f.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %f.addr, metadata !15597, metadata !986), !dbg !15598
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !15599, metadata !986), !dbg !15600
  call void @llvm.dbg.declare(metadata i8* %c, metadata !15601, metadata !986), !dbg !15602
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15603
  %cmp = icmp eq i8* %0, null, !dbg !15605
  br i1 %cmp, label %if.then, label %if.end, !dbg !15606

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8** %s.addr, align 8, !dbg !15607
  br label %if.end, !dbg !15608

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !15609

while.cond:                                       ; preds = %if.end22, %if.end
  %1 = load i8*, i8** %s.addr, align 8, !dbg !15610
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !15610
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !15610
  %2 = load i8, i8* %1, align 1, !dbg !15612
  store i8 %2, i8* %c, align 1, !dbg !15613
  %conv = zext i8 %2 to i32, !dbg !15614
  %cmp1 = icmp ne i32 %conv, 0, !dbg !15615
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !15616

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %l.addr, align 8, !dbg !15617
  %cmp3 = icmp ugt i64 %3, 0, !dbg !15619
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !15620

while.body:                                       ; preds = %land.end
  %5 = load i8, i8* %c, align 1, !dbg !15622
  %conv5 = zext i8 %5 to i32, !dbg !15622
  %cmp6 = icmp sge i32 %conv5, 128, !dbg !15625
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !15626

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !15627
  %idxprom = zext i8 %6 to i64, !dbg !15629
  %7 = load i8*, i8** %map.addr, align 8, !dbg !15629
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !15629
  %8 = load i8, i8* %arrayidx, align 1, !dbg !15629
  %conv8 = sext i8 %8 to i32, !dbg !15629
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !15630
  br i1 %cmp9, label %if.then11, label %if.end22, !dbg !15631

if.then11:                                        ; preds = %lor.lhs.false, %while.body
  %9 = load i8, i8* %c, align 1, !dbg !15632
  %conv12 = zext i8 %9 to i32, !dbg !15632
  %cmp13 = icmp sge i32 %conv12, 97, !dbg !15635
  br i1 %cmp13, label %land.lhs.true, label %if.else, !dbg !15636

land.lhs.true:                                    ; preds = %if.then11
  %10 = load i8, i8* %c, align 1, !dbg !15637
  %conv15 = zext i8 %10 to i32, !dbg !15637
  %cmp16 = icmp sle i32 %conv15, 122, !dbg !15639
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !15640

if.then18:                                        ; preds = %land.lhs.true
  %11 = load i8, i8* %c, align 1, !dbg !15641
  %conv19 = zext i8 %11 to i32, !dbg !15641
  %sub = sub nsw i32 %conv19, 32, !dbg !15641
  %conv20 = trunc i32 %sub to i8, !dbg !15641
  store i8 %conv20, i8* %c, align 1, !dbg !15641
  br label %if.end21, !dbg !15643

if.else:                                          ; preds = %land.lhs.true, %if.then11
  store i8 95, i8* %c, align 1, !dbg !15644
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  br label %if.end22, !dbg !15645

if.end22:                                         ; preds = %if.end21, %lor.lhs.false
  %12 = load i8, i8* %c, align 1, !dbg !15646
  %13 = load i8*, i8** %p.addr, align 8, !dbg !15647
  %incdec.ptr23 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !15647
  store i8* %incdec.ptr23, i8** %p.addr, align 8, !dbg !15647
  store i8 %12, i8* %13, align 1, !dbg !15648
  %14 = load i64, i64* %l.addr, align 8, !dbg !15649
  %dec = add i64 %14, -1, !dbg !15649
  store i64 %dec, i64* %l.addr, align 8, !dbg !15649
  br label %while.cond, !dbg !15650

while.end:                                        ; preds = %land.end
  %15 = load i64, i64* %l.addr, align 8, !dbg !15652
  %cmp24 = icmp ugt i64 %15, 0, !dbg !15654
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !15655

if.then26:                                        ; preds = %while.end
  %16 = load i8*, i8** %p.addr, align 8, !dbg !15656
  %17 = load i8, i8* %f.addr, align 1, !dbg !15657
  %conv27 = sext i8 %17 to i32, !dbg !15657
  %18 = trunc i32 %conv27 to i8, !dbg !15658
  %19 = load i64, i64* %l.addr, align 8, !dbg !15659
  call void @llvm.memset.p0i8.i64(i8* %16, i8 %18, i64 %19, i32 1, i1 false), !dbg !15658
  br label %if.end28, !dbg !15658

if.end28:                                         ; preds = %if.then26, %while.end
  ret void, !dbg !15660
}

; Function Attrs: nounwind uwtable
define internal i32 @set_str_utf16be(%struct.archive_write* %a, i8* %p, i8* %s, i64 %l, i16 zeroext %uf, i32 %vdc) #0 !dbg !895 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %l.addr = alloca i64, align 8
  %uf.addr = alloca i16, align 2
  %vdc.addr = alloca i32, align 4
  %size = alloca i64, align 8
  %i = alloca i64, align 8
  %onepad = alloca i32, align 4
  %iso9660 = alloca %struct.iso9660*, align 8
  %u16 = alloca i16*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !15661, metadata !986), !dbg !15662
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15663, metadata !986), !dbg !15664
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15665, metadata !986), !dbg !15666
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !15667, metadata !986), !dbg !15668
  store i16 %uf, i16* %uf.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %uf.addr, metadata !15669, metadata !986), !dbg !15670
  store i32 %vdc, i32* %vdc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdc.addr, metadata !15671, metadata !986), !dbg !15672
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15673, metadata !986), !dbg !15674
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15675, metadata !986), !dbg !15676
  call void @llvm.dbg.declare(metadata i32* %onepad, metadata !15677, metadata !986), !dbg !15678
  %0 = load i8*, i8** %s.addr, align 8, !dbg !15679
  %cmp = icmp eq i8* %0, null, !dbg !15681
  br i1 %cmp, label %if.then, label %if.end, !dbg !15682

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8** %s.addr, align 8, !dbg !15683
  br label %if.end, !dbg !15684

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %l.addr, align 8, !dbg !15685
  %and = and i64 %1, 1, !dbg !15687
  %tobool = icmp ne i64 %and, 0, !dbg !15687
  br i1 %tobool, label %if.then1, label %if.else, !dbg !15688

if.then1:                                         ; preds = %if.end
  store i32 1, i32* %onepad, align 4, !dbg !15689
  %2 = load i64, i64* %l.addr, align 8, !dbg !15691
  %and2 = and i64 %2, -2, !dbg !15691
  store i64 %and2, i64* %l.addr, align 8, !dbg !15691
  br label %if.end3, !dbg !15692

if.else:                                          ; preds = %if.end
  store i32 0, i32* %onepad, align 4, !dbg !15693
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1
  %3 = load i32, i32* %vdc.addr, align 4, !dbg !15694
  %cmp4 = icmp eq i32 %3, 2, !dbg !15696
  br i1 %cmp4, label %if.then5, label %if.else18, !dbg !15697

if.then5:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !15698, metadata !986), !dbg !15700
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15701
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %4, i32 0, i32 14, !dbg !15702
  %5 = load i8*, i8** %format_data, align 8, !dbg !15702
  %6 = bitcast i8* %5 to %struct.iso9660*, !dbg !15701
  store %struct.iso9660* %6, %struct.iso9660** %iso9660, align 8, !dbg !15700
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !15703
  %utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 7, !dbg !15705
  %8 = load i8*, i8** %s.addr, align 8, !dbg !15706
  %9 = load i8*, i8** %s.addr, align 8, !dbg !15707
  %call = call i64 @strlen(i8* %9) #9, !dbg !15708
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !15709
  %sconv_to_utf16be = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 9, !dbg !15710
  %11 = load %struct.archive_string_conv*, %struct.archive_string_conv** %sconv_to_utf16be, align 8, !dbg !15710
  %call6 = call i32 @archive_strncpy_l(%struct.archive_string* %utf16be, i8* %8, i64 %call, %struct.archive_string_conv* %11), !dbg !15711
  %cmp7 = icmp ne i32 %call6, 0, !dbg !15713
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !15714

land.lhs.true:                                    ; preds = %if.then5
  %call8 = call i32* @__errno_location() #1, !dbg !15715
  %12 = load i32, i32* %call8, align 4, !dbg !15715
  %cmp9 = icmp eq i32 %12, 12, !dbg !15717
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !15718

if.then10:                                        ; preds = %land.lhs.true
  %13 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15720
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %13, i32 0, i32 0, !dbg !15722
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0)), !dbg !15723
  store i32 -30, i32* %retval, align 4, !dbg !15724
  br label %return, !dbg !15724

if.end11:                                         ; preds = %land.lhs.true, %if.then5
  %14 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !15725
  %utf16be12 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %14, i32 0, i32 7, !dbg !15726
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %utf16be12, i32 0, i32 1, !dbg !15727
  %15 = load i64, i64* %length, align 8, !dbg !15727
  store i64 %15, i64* %size, align 8, !dbg !15728
  %16 = load i64, i64* %size, align 8, !dbg !15729
  %17 = load i64, i64* %l.addr, align 8, !dbg !15731
  %cmp13 = icmp ugt i64 %16, %17, !dbg !15732
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !15733

if.then14:                                        ; preds = %if.end11
  %18 = load i64, i64* %l.addr, align 8, !dbg !15734
  store i64 %18, i64* %size, align 8, !dbg !15735
  br label %if.end15, !dbg !15736

if.end15:                                         ; preds = %if.then14, %if.end11
  %19 = load i8*, i8** %p.addr, align 8, !dbg !15737
  %20 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !15738
  %utf16be16 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %20, i32 0, i32 7, !dbg !15739
  %s17 = getelementptr inbounds %struct.archive_string, %struct.archive_string* %utf16be16, i32 0, i32 0, !dbg !15740
  %21 = load i8*, i8** %s17, align 8, !dbg !15740
  %22 = load i64, i64* %size, align 8, !dbg !15741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %21, i64 %22, i32 1, i1 false), !dbg !15742
  br label %if.end23, !dbg !15743

if.else18:                                        ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i16** %u16, metadata !15744, metadata !986), !dbg !15746
  %23 = load i8*, i8** %s.addr, align 8, !dbg !15747
  %24 = bitcast i8* %23 to i16*, !dbg !15748
  store i16* %24, i16** %u16, align 8, !dbg !15746
  store i64 0, i64* %size, align 8, !dbg !15749
  br label %while.cond, !dbg !15750

while.cond:                                       ; preds = %while.body, %if.else18
  %25 = load i16*, i16** %u16, align 8, !dbg !15751
  %incdec.ptr = getelementptr inbounds i16, i16* %25, i32 1, !dbg !15751
  store i16* %incdec.ptr, i16** %u16, align 8, !dbg !15751
  %26 = load i16, i16* %25, align 2, !dbg !15753
  %tobool19 = icmp ne i16 %26, 0, !dbg !15754
  br i1 %tobool19, label %while.body, label %while.end, !dbg !15754

while.body:                                       ; preds = %while.cond
  %27 = load i64, i64* %size, align 8, !dbg !15755
  %add = add i64 %27, 2, !dbg !15755
  store i64 %add, i64* %size, align 8, !dbg !15755
  br label %while.cond, !dbg !15756

while.end:                                        ; preds = %while.cond
  %28 = load i64, i64* %size, align 8, !dbg !15758
  %29 = load i64, i64* %l.addr, align 8, !dbg !15760
  %cmp20 = icmp ugt i64 %28, %29, !dbg !15761
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !15762

if.then21:                                        ; preds = %while.end
  %30 = load i64, i64* %l.addr, align 8, !dbg !15763
  store i64 %30, i64* %size, align 8, !dbg !15764
  br label %if.end22, !dbg !15765

if.end22:                                         ; preds = %if.then21, %while.end
  %31 = load i8*, i8** %p.addr, align 8, !dbg !15766
  %32 = load i8*, i8** %s.addr, align 8, !dbg !15767
  %33 = load i64, i64* %size, align 8, !dbg !15768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 %33, i32 1, i1 false), !dbg !15769
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end15
  store i64 0, i64* %i, align 8, !dbg !15770
  br label %for.cond, !dbg !15772

for.cond:                                         ; preds = %for.inc, %if.end23
  %34 = load i64, i64* %i, align 8, !dbg !15773
  %35 = load i64, i64* %size, align 8, !dbg !15776
  %cmp24 = icmp ult i64 %34, %35, !dbg !15777
  br i1 %cmp24, label %for.body, label %for.end, !dbg !15778

for.body:                                         ; preds = %for.cond
  %36 = load i8*, i8** %p.addr, align 8, !dbg !15779
  %arrayidx = getelementptr inbounds i8, i8* %36, i64 0, !dbg !15779
  %37 = load i8, i8* %arrayidx, align 1, !dbg !15779
  %38 = load i8*, i8** %p.addr, align 8, !dbg !15782
  %arrayidx25 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !15782
  %39 = load i8, i8* %arrayidx25, align 1, !dbg !15782
  %call26 = call i32 @joliet_allowed_char(i8 zeroext %37, i8 zeroext %39), !dbg !15783
  %tobool27 = icmp ne i32 %call26, 0, !dbg !15783
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !15784

if.then28:                                        ; preds = %for.body
  %40 = load i8*, i8** %p.addr, align 8, !dbg !15785
  call void @archive_be16enc(i8* %40, i16 zeroext 95), !dbg !15786
  br label %if.end29, !dbg !15786

if.end29:                                         ; preds = %if.then28, %for.body
  br label %for.inc, !dbg !15787

for.inc:                                          ; preds = %if.end29
  %41 = load i64, i64* %i, align 8, !dbg !15788
  %add30 = add i64 %41, 2, !dbg !15788
  store i64 %add30, i64* %i, align 8, !dbg !15788
  %42 = load i8*, i8** %p.addr, align 8, !dbg !15790
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 2, !dbg !15790
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !15790
  br label %for.cond, !dbg !15791

for.end:                                          ; preds = %for.cond
  %43 = load i64, i64* %size, align 8, !dbg !15792
  %44 = load i64, i64* %l.addr, align 8, !dbg !15793
  %sub = sub i64 %44, %43, !dbg !15793
  store i64 %sub, i64* %l.addr, align 8, !dbg !15793
  br label %while.cond31, !dbg !15794

while.cond31:                                     ; preds = %while.body33, %for.end
  %45 = load i64, i64* %l.addr, align 8, !dbg !15795
  %cmp32 = icmp ugt i64 %45, 0, !dbg !15797
  br i1 %cmp32, label %while.body33, label %while.end36, !dbg !15798

while.body33:                                     ; preds = %while.cond31
  %46 = load i8*, i8** %p.addr, align 8, !dbg !15799
  %47 = load i16, i16* %uf.addr, align 2, !dbg !15801
  call void @archive_be16enc(i8* %46, i16 zeroext %47), !dbg !15802
  %48 = load i8*, i8** %p.addr, align 8, !dbg !15803
  %add.ptr34 = getelementptr inbounds i8, i8* %48, i64 2, !dbg !15803
  store i8* %add.ptr34, i8** %p.addr, align 8, !dbg !15803
  %49 = load i64, i64* %l.addr, align 8, !dbg !15804
  %sub35 = sub i64 %49, 2, !dbg !15804
  store i64 %sub35, i64* %l.addr, align 8, !dbg !15804
  br label %while.cond31, !dbg !15805

while.end36:                                      ; preds = %while.cond31
  %50 = load i32, i32* %onepad, align 4, !dbg !15807
  %tobool37 = icmp ne i32 %50, 0, !dbg !15807
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !15809

if.then38:                                        ; preds = %while.end36
  %51 = load i8*, i8** %p.addr, align 8, !dbg !15810
  store i8 0, i8* %51, align 1, !dbg !15811
  br label %if.end39, !dbg !15812

if.end39:                                         ; preds = %if.then38, %while.end36
  store i32 0, i32* %retval, align 4, !dbg !15813
  br label %return, !dbg !15813

return:                                           ; preds = %if.end39, %if.then10
  %52 = load i32, i32* %retval, align 4, !dbg !15814
  ret i32 %52, !dbg !15814
}

; Function Attrs: nounwind uwtable
define internal void @set_digit(i8* %p, i64 %s, i32 %value) #0 !dbg !904 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  %value.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15815, metadata !986), !dbg !15816
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !15817, metadata !986), !dbg !15818
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !15819, metadata !986), !dbg !15820
  br label %while.cond, !dbg !15821

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %s.addr, align 8, !dbg !15822
  %dec = add i64 %0, -1, !dbg !15822
  store i64 %dec, i64* %s.addr, align 8, !dbg !15822
  %tobool = icmp ne i64 %0, 0, !dbg !15824
  br i1 %tobool, label %while.body, label %while.end, !dbg !15824

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %value.addr, align 4, !dbg !15825
  %rem = srem i32 %1, 10, !dbg !15827
  %add = add nsw i32 48, %rem, !dbg !15828
  %conv = trunc i32 %add to i8, !dbg !15829
  %2 = load i64, i64* %s.addr, align 8, !dbg !15830
  %3 = load i8*, i8** %p.addr, align 8, !dbg !15831
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %2, !dbg !15831
  store i8 %conv, i8* %arrayidx, align 1, !dbg !15832
  %4 = load i32, i32* %value.addr, align 4, !dbg !15833
  %div = sdiv i32 %4, 10, !dbg !15833
  store i32 %div, i32* %value.addr, align 4, !dbg !15833
  br label %while.cond, !dbg !15834

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15836
}

; Function Attrs: nounwind
declare i8* @ctime_r(i64*, i8*) #3

declare void @archive_string_sprintf(%struct.archive_string*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @set_option_info(%struct.archive_string* %info, i32* %opt, i8* %key, i32 %type, ...) #0 !dbg !913 {
entry:
  %info.addr = alloca %struct.archive_string*, align 8
  %opt.addr = alloca i32*, align 8
  %key.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %prefix = alloca i8, align 1
  %s = alloca i8*, align 8
  %d = alloca i32, align 4
  store %struct.archive_string* %info, %struct.archive_string** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_string** %info.addr, metadata !15837, metadata !986), !dbg !15838
  store i32* %opt, i32** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %opt.addr, metadata !15839, metadata !986), !dbg !15840
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !15841, metadata !986), !dbg !15842
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15843, metadata !986), !dbg !15844
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !15845, metadata !986), !dbg !15860
  call void @llvm.dbg.declare(metadata i8* %prefix, metadata !15861, metadata !986), !dbg !15862
  call void @llvm.dbg.declare(metadata i8** %s, metadata !15863, metadata !986), !dbg !15864
  call void @llvm.dbg.declare(metadata i32* %d, metadata !15865, metadata !986), !dbg !15866
  %0 = load i32*, i32** %opt.addr, align 8, !dbg !15867
  %1 = load i32, i32* %0, align 4, !dbg !15868
  %cmp = icmp eq i32 %1, 0, !dbg !15869
  %cond = select i1 %cmp, i32 32, i32 44, !dbg !15870
  %conv = trunc i32 %cond to i8, !dbg !15870
  store i8 %conv, i8* %prefix, align 1, !dbg !15871
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15872
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !15872
  call void @llvm.va_start(i8* %arraydecay1), !dbg !15872
  %2 = load i32, i32* %type.addr, align 4, !dbg !15873
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb21
    i32 3, label %sw.bb35
  ], !dbg !15874

sw.bb:                                            ; preds = %entry
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15875
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !15875
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !15875
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !15875
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !15875

vaarg.in_reg:                                     ; preds = %sw.bb
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !15877
  %reg_save_area = load i8*, i8** %3, align 16, !dbg !15877
  %4 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !15877
  %5 = bitcast i8* %4 to i32*, !dbg !15877
  %6 = add i32 %gp_offset, 8, !dbg !15877
  store i32 %6, i32* %gp_offset_p, align 16, !dbg !15877
  br label %vaarg.end, !dbg !15877

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !15879
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !15879
  %7 = bitcast i8* %overflow_arg_area to i32*, !dbg !15879
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !15879
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !15879
  br label %vaarg.end, !dbg !15879

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %5, %vaarg.in_reg ], [ %7, %vaarg.in_mem ], !dbg !15881
  %8 = load i32, i32* %vaarg.addr, align 4, !dbg !15881
  store i32 %8, i32* %d, align 4, !dbg !15883
  %9 = load %struct.archive_string*, %struct.archive_string** %info.addr, align 8, !dbg !15884
  %10 = load i8, i8* %prefix, align 1, !dbg !15885
  %conv3 = sext i8 %10 to i32, !dbg !15885
  %11 = load i32, i32* %d, align 4, !dbg !15886
  %cmp4 = icmp eq i32 %11, 0, !dbg !15887
  %cond6 = select i1 %cmp4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), !dbg !15888
  %12 = load i8*, i8** %key.addr, align 8, !dbg !15889
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i32 %conv3, i8* %cond6, i8* %12), !dbg !15890
  br label %sw.epilog, !dbg !15891

sw.bb7:                                           ; preds = %entry
  %arraydecay8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15892
  %gp_offset_p9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay8, i32 0, i32 0, !dbg !15892
  %gp_offset10 = load i32, i32* %gp_offset_p9, align 16, !dbg !15892
  %fits_in_gp11 = icmp ule i32 %gp_offset10, 40, !dbg !15892
  br i1 %fits_in_gp11, label %vaarg.in_reg12, label %vaarg.in_mem14, !dbg !15892

vaarg.in_reg12:                                   ; preds = %sw.bb7
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay8, i32 0, i32 3, !dbg !15893
  %reg_save_area13 = load i8*, i8** %13, align 16, !dbg !15893
  %14 = getelementptr i8, i8* %reg_save_area13, i32 %gp_offset10, !dbg !15893
  %15 = bitcast i8* %14 to i8**, !dbg !15893
  %16 = add i32 %gp_offset10, 8, !dbg !15893
  store i32 %16, i32* %gp_offset_p9, align 16, !dbg !15893
  br label %vaarg.end18, !dbg !15893

vaarg.in_mem14:                                   ; preds = %sw.bb7
  %overflow_arg_area_p15 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay8, i32 0, i32 2, !dbg !15894
  %overflow_arg_area16 = load i8*, i8** %overflow_arg_area_p15, align 8, !dbg !15894
  %17 = bitcast i8* %overflow_arg_area16 to i8**, !dbg !15894
  %overflow_arg_area.next17 = getelementptr i8, i8* %overflow_arg_area16, i32 8, !dbg !15894
  store i8* %overflow_arg_area.next17, i8** %overflow_arg_area_p15, align 8, !dbg !15894
  br label %vaarg.end18, !dbg !15894

vaarg.end18:                                      ; preds = %vaarg.in_mem14, %vaarg.in_reg12
  %vaarg.addr19 = phi i8** [ %15, %vaarg.in_reg12 ], [ %17, %vaarg.in_mem14 ], !dbg !15895
  %18 = load i8*, i8** %vaarg.addr19, align 8, !dbg !15895
  store i8* %18, i8** %s, align 8, !dbg !15896
  %19 = load %struct.archive_string*, %struct.archive_string** %info.addr, align 8, !dbg !15897
  %20 = load i8, i8* %prefix, align 1, !dbg !15898
  %conv20 = sext i8 %20 to i32, !dbg !15898
  %21 = load i8*, i8** %key.addr, align 8, !dbg !15899
  %22 = load i8*, i8** %s, align 8, !dbg !15900
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), i32 %conv20, i8* %21, i8* %22), !dbg !15901
  br label %sw.epilog, !dbg !15902

sw.bb21:                                          ; preds = %entry
  %arraydecay22 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15903
  %gp_offset_p23 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay22, i32 0, i32 0, !dbg !15903
  %gp_offset24 = load i32, i32* %gp_offset_p23, align 16, !dbg !15903
  %fits_in_gp25 = icmp ule i32 %gp_offset24, 40, !dbg !15903
  br i1 %fits_in_gp25, label %vaarg.in_reg26, label %vaarg.in_mem28, !dbg !15903

vaarg.in_reg26:                                   ; preds = %sw.bb21
  %23 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay22, i32 0, i32 3, !dbg !15904
  %reg_save_area27 = load i8*, i8** %23, align 16, !dbg !15904
  %24 = getelementptr i8, i8* %reg_save_area27, i32 %gp_offset24, !dbg !15904
  %25 = bitcast i8* %24 to i32*, !dbg !15904
  %26 = add i32 %gp_offset24, 8, !dbg !15904
  store i32 %26, i32* %gp_offset_p23, align 16, !dbg !15904
  br label %vaarg.end32, !dbg !15904

vaarg.in_mem28:                                   ; preds = %sw.bb21
  %overflow_arg_area_p29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay22, i32 0, i32 2, !dbg !15905
  %overflow_arg_area30 = load i8*, i8** %overflow_arg_area_p29, align 8, !dbg !15905
  %27 = bitcast i8* %overflow_arg_area30 to i32*, !dbg !15905
  %overflow_arg_area.next31 = getelementptr i8, i8* %overflow_arg_area30, i32 8, !dbg !15905
  store i8* %overflow_arg_area.next31, i8** %overflow_arg_area_p29, align 8, !dbg !15905
  br label %vaarg.end32, !dbg !15905

vaarg.end32:                                      ; preds = %vaarg.in_mem28, %vaarg.in_reg26
  %vaarg.addr33 = phi i32* [ %25, %vaarg.in_reg26 ], [ %27, %vaarg.in_mem28 ], !dbg !15906
  %28 = load i32, i32* %vaarg.addr33, align 4, !dbg !15906
  store i32 %28, i32* %d, align 4, !dbg !15907
  %29 = load %struct.archive_string*, %struct.archive_string** %info.addr, align 8, !dbg !15908
  %30 = load i8, i8* %prefix, align 1, !dbg !15909
  %conv34 = sext i8 %30 to i32, !dbg !15909
  %31 = load i8*, i8** %key.addr, align 8, !dbg !15910
  %32 = load i32, i32* %d, align 4, !dbg !15911
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0), i32 %conv34, i8* %31, i32 %32), !dbg !15912
  br label %sw.epilog, !dbg !15913

sw.bb35:                                          ; preds = %entry
  %arraydecay36 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15914
  %gp_offset_p37 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay36, i32 0, i32 0, !dbg !15914
  %gp_offset38 = load i32, i32* %gp_offset_p37, align 16, !dbg !15914
  %fits_in_gp39 = icmp ule i32 %gp_offset38, 40, !dbg !15914
  br i1 %fits_in_gp39, label %vaarg.in_reg40, label %vaarg.in_mem42, !dbg !15914

vaarg.in_reg40:                                   ; preds = %sw.bb35
  %33 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay36, i32 0, i32 3, !dbg !15915
  %reg_save_area41 = load i8*, i8** %33, align 16, !dbg !15915
  %34 = getelementptr i8, i8* %reg_save_area41, i32 %gp_offset38, !dbg !15915
  %35 = bitcast i8* %34 to i32*, !dbg !15915
  %36 = add i32 %gp_offset38, 8, !dbg !15915
  store i32 %36, i32* %gp_offset_p37, align 16, !dbg !15915
  br label %vaarg.end46, !dbg !15915

vaarg.in_mem42:                                   ; preds = %sw.bb35
  %overflow_arg_area_p43 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay36, i32 0, i32 2, !dbg !15916
  %overflow_arg_area44 = load i8*, i8** %overflow_arg_area_p43, align 8, !dbg !15916
  %37 = bitcast i8* %overflow_arg_area44 to i32*, !dbg !15916
  %overflow_arg_area.next45 = getelementptr i8, i8* %overflow_arg_area44, i32 8, !dbg !15916
  store i8* %overflow_arg_area.next45, i8** %overflow_arg_area_p43, align 8, !dbg !15916
  br label %vaarg.end46, !dbg !15916

vaarg.end46:                                      ; preds = %vaarg.in_mem42, %vaarg.in_reg40
  %vaarg.addr47 = phi i32* [ %35, %vaarg.in_reg40 ], [ %37, %vaarg.in_mem42 ], !dbg !15917
  %38 = load i32, i32* %vaarg.addr47, align 4, !dbg !15917
  store i32 %38, i32* %d, align 4, !dbg !15918
  %39 = load %struct.archive_string*, %struct.archive_string** %info.addr, align 8, !dbg !15919
  %40 = load i8, i8* %prefix, align 1, !dbg !15920
  %conv48 = sext i8 %40 to i32, !dbg !15920
  %41 = load i8*, i8** %key.addr, align 8, !dbg !15921
  %42 = load i32, i32* %d, align 4, !dbg !15922
  call void (%struct.archive_string*, i8*, ...) @archive_string_sprintf(%struct.archive_string* %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i32 0, i32 0), i32 %conv48, i8* %41, i32 %42), !dbg !15923
  br label %sw.epilog, !dbg !15924

sw.epilog:                                        ; preds = %entry, %vaarg.end46, %vaarg.end32, %vaarg.end18, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !15925
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !15925
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !15925
  %43 = load i32*, i32** %opt.addr, align 8, !dbg !15926
  store i32 1, i32* %43, align 4, !dbg !15927
  ret void, !dbg !15928
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: nounwind uwtable
define internal i32 @_write_path_table(%struct.archive_write* %a, i32 %type_m, i32 %depth, %struct.vdd* %vdd) #0 !dbg !919 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %type_m.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %vdd.addr = alloca %struct.vdd*, align 8
  %bp = alloca i8*, align 8
  %wb = alloca i8*, align 8
  %ptbl = alloca %struct.isoent**, align 8
  %wbremaining = alloca i64, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %wsize = alloca i32, align 4
  %np = alloca %struct.isoent*, align 8
  %len = alloca i64, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !15929, metadata !986), !dbg !15930
  store i32 %type_m, i32* %type_m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type_m.addr, metadata !15931, metadata !986), !dbg !15932
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !15933, metadata !986), !dbg !15934
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !15935, metadata !986), !dbg !15936
  call void @llvm.dbg.declare(metadata i8** %bp, metadata !15937, metadata !986), !dbg !15938
  call void @llvm.dbg.declare(metadata i8** %wb, metadata !15939, metadata !986), !dbg !15940
  call void @llvm.dbg.declare(metadata %struct.isoent*** %ptbl, metadata !15941, metadata !986), !dbg !15942
  call void @llvm.dbg.declare(metadata i64* %wbremaining, metadata !15943, metadata !986), !dbg !15944
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15945, metadata !986), !dbg !15946
  call void @llvm.dbg.declare(metadata i32* %r, metadata !15947, metadata !986), !dbg !15948
  call void @llvm.dbg.declare(metadata i32* %wsize, metadata !15949, metadata !986), !dbg !15950
  %0 = load i32, i32* %depth.addr, align 4, !dbg !15951
  %idxprom = sext i32 %0 to i64, !dbg !15953
  %1 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15953
  %pathtbl = getelementptr inbounds %struct.vdd, %struct.vdd* %1, i32 0, i32 2, !dbg !15954
  %2 = load %struct.path_table*, %struct.path_table** %pathtbl, align 8, !dbg !15954
  %arrayidx = getelementptr inbounds %struct.path_table, %struct.path_table* %2, i64 %idxprom, !dbg !15953
  %cnt = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx, i32 0, i32 3, !dbg !15955
  %3 = load i32, i32* %cnt, align 8, !dbg !15955
  %cmp = icmp eq i32 %3, 0, !dbg !15956
  br i1 %cmp, label %if.then, label %if.end, !dbg !15957

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15958
  br label %return, !dbg !15958

if.end:                                           ; preds = %entry
  store i32 0, i32* %wsize, align 4, !dbg !15959
  %4 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15960
  %call = call i8* @wb_buffptr(%struct.archive_write* %4), !dbg !15961
  store i8* %call, i8** %wb, align 8, !dbg !15962
  %5 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !15963
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %5, i32 0, i32 14, !dbg !15963
  %6 = load i8*, i8** %format_data, align 8, !dbg !15963
  %7 = bitcast i8* %6 to %struct.iso9660*, !dbg !15963
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 31, !dbg !15963
  %8 = load i64, i64* %wbuff_remaining, align 8, !dbg !15963
  store i64 %8, i64* %wbremaining, align 8, !dbg !15964
  %9 = load i8*, i8** %wb, align 8, !dbg !15965
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !15966
  store i8* %add.ptr, i8** %bp, align 8, !dbg !15967
  %10 = load i32, i32* %depth.addr, align 4, !dbg !15968
  %idxprom1 = sext i32 %10 to i64, !dbg !15969
  %11 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15969
  %pathtbl2 = getelementptr inbounds %struct.vdd, %struct.vdd* %11, i32 0, i32 2, !dbg !15970
  %12 = load %struct.path_table*, %struct.path_table** %pathtbl2, align 8, !dbg !15970
  %arrayidx3 = getelementptr inbounds %struct.path_table, %struct.path_table* %12, i64 %idxprom1, !dbg !15969
  %sorted = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx3, i32 0, i32 2, !dbg !15971
  %13 = load %struct.isoent**, %struct.isoent*** %sorted, align 8, !dbg !15971
  store %struct.isoent** %13, %struct.isoent*** %ptbl, align 8, !dbg !15972
  store i32 0, i32* %i, align 4, !dbg !15973
  br label %for.cond, !dbg !15975

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !15976
  %15 = load i32, i32* %depth.addr, align 4, !dbg !15979
  %idxprom4 = sext i32 %15 to i64, !dbg !15980
  %16 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !15980
  %pathtbl5 = getelementptr inbounds %struct.vdd, %struct.vdd* %16, i32 0, i32 2, !dbg !15981
  %17 = load %struct.path_table*, %struct.path_table** %pathtbl5, align 8, !dbg !15981
  %arrayidx6 = getelementptr inbounds %struct.path_table, %struct.path_table* %17, i64 %idxprom4, !dbg !15980
  %cnt7 = getelementptr inbounds %struct.path_table, %struct.path_table* %arrayidx6, i32 0, i32 3, !dbg !15982
  %18 = load i32, i32* %cnt7, align 8, !dbg !15982
  %cmp8 = icmp slt i32 %14, %18, !dbg !15983
  br i1 %cmp8, label %for.body, label %for.end, !dbg !15984

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !15985, metadata !986), !dbg !15987
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15988, metadata !986), !dbg !15989
  %19 = load i32, i32* %i, align 4, !dbg !15990
  %idxprom9 = sext i32 %19 to i64, !dbg !15991
  %20 = load %struct.isoent**, %struct.isoent*** %ptbl, align 8, !dbg !15991
  %arrayidx10 = getelementptr inbounds %struct.isoent*, %struct.isoent** %20, i64 %idxprom9, !dbg !15991
  %21 = load %struct.isoent*, %struct.isoent** %arrayidx10, align 8, !dbg !15991
  store %struct.isoent* %21, %struct.isoent** %np, align 8, !dbg !15992
  %22 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !15993
  %identifier = getelementptr inbounds %struct.isoent, %struct.isoent* %22, i32 0, i32 14, !dbg !15995
  %23 = load i8*, i8** %identifier, align 8, !dbg !15995
  %cmp11 = icmp eq i8* %23, null, !dbg !15996
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !15997

if.then12:                                        ; preds = %for.body
  store i64 1, i64* %len, align 8, !dbg !15998
  br label %if.end13, !dbg !15999

if.else:                                          ; preds = %for.body
  %24 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16000
  %id_len = getelementptr inbounds %struct.isoent, %struct.isoent* %24, i32 0, i32 17, !dbg !16001
  %25 = load i32, i32* %id_len, align 8, !dbg !16001
  %conv = sext i32 %25 to i64, !dbg !16000
  store i64 %conv, i64* %len, align 8, !dbg !16002
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %26 = load i64, i64* %wbremaining, align 8, !dbg !16003
  %27 = load i8*, i8** %bp, align 8, !dbg !16005
  %add.ptr14 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !16006
  %28 = load i8*, i8** %wb, align 8, !dbg !16007
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr14 to i64, !dbg !16008
  %sub.ptr.rhs.cast = ptrtoint i8* %28 to i64, !dbg !16008
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16008
  %sub = sub i64 %26, %sub.ptr.sub, !dbg !16009
  %29 = load i64, i64* %len, align 8, !dbg !16010
  %add = add i64 %29, 1, !dbg !16011
  %add15 = add i64 %add, 8, !dbg !16012
  %cmp16 = icmp ult i64 %sub, %add15, !dbg !16013
  br i1 %cmp16, label %if.then18, label %if.end32, !dbg !16014

if.then18:                                        ; preds = %if.end13
  %30 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16015
  %31 = load i8*, i8** %bp, align 8, !dbg !16017
  %add.ptr19 = getelementptr inbounds i8, i8* %31, i64 1, !dbg !16018
  %32 = load i8*, i8** %wb, align 8, !dbg !16019
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr19 to i64, !dbg !16020
  %sub.ptr.rhs.cast21 = ptrtoint i8* %32 to i64, !dbg !16020
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21, !dbg !16020
  %call23 = call i32 @wb_consume(%struct.archive_write* %30, i64 %sub.ptr.sub22), !dbg !16021
  store i32 %call23, i32* %r, align 4, !dbg !16022
  %33 = load i32, i32* %r, align 4, !dbg !16023
  %cmp24 = icmp slt i32 %33, 0, !dbg !16025
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !16026

if.then26:                                        ; preds = %if.then18
  %34 = load i32, i32* %r, align 4, !dbg !16027
  store i32 %34, i32* %retval, align 4, !dbg !16028
  br label %return, !dbg !16028

if.end27:                                         ; preds = %if.then18
  %35 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16029
  %call28 = call i8* @wb_buffptr(%struct.archive_write* %35), !dbg !16030
  store i8* %call28, i8** %wb, align 8, !dbg !16031
  %36 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16032
  %format_data29 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %36, i32 0, i32 14, !dbg !16032
  %37 = load i8*, i8** %format_data29, align 8, !dbg !16032
  %38 = bitcast i8* %37 to %struct.iso9660*, !dbg !16032
  %wbuff_remaining30 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %38, i32 0, i32 31, !dbg !16032
  %39 = load i64, i64* %wbuff_remaining30, align 8, !dbg !16032
  store i64 %39, i64* %wbremaining, align 8, !dbg !16033
  %40 = load i8*, i8** %wb, align 8, !dbg !16034
  %add.ptr31 = getelementptr inbounds i8, i8* %40, i64 -1, !dbg !16035
  store i8* %add.ptr31, i8** %bp, align 8, !dbg !16036
  br label %if.end32, !dbg !16037

if.end32:                                         ; preds = %if.end27, %if.end13
  %41 = load i8*, i8** %bp, align 8, !dbg !16038
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !16039
  %42 = load i64, i64* %len, align 8, !dbg !16040
  %conv34 = trunc i64 %42 to i8, !dbg !16041
  call void @set_num_711(i8* %add.ptr33, i8 zeroext %conv34), !dbg !16042
  %43 = load i8*, i8** %bp, align 8, !dbg !16043
  %add.ptr35 = getelementptr inbounds i8, i8* %43, i64 2, !dbg !16044
  call void @set_num_711(i8* %add.ptr35, i8 zeroext 0), !dbg !16045
  %44 = load i32, i32* %type_m.addr, align 4, !dbg !16046
  %tobool = icmp ne i32 %44, 0, !dbg !16046
  br i1 %tobool, label %if.then36, label %if.else38, !dbg !16048

if.then36:                                        ; preds = %if.end32
  %45 = load i8*, i8** %bp, align 8, !dbg !16049
  %add.ptr37 = getelementptr inbounds i8, i8* %45, i64 3, !dbg !16050
  %46 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16051
  %dir_location = getelementptr inbounds %struct.isoent, %struct.isoent* %46, i32 0, i32 12, !dbg !16052
  %47 = load i32, i32* %dir_location, align 4, !dbg !16052
  call void @set_num_732(i8* %add.ptr37, i32 %47), !dbg !16053
  br label %if.end41, !dbg !16053

if.else38:                                        ; preds = %if.end32
  %48 = load i8*, i8** %bp, align 8, !dbg !16054
  %add.ptr39 = getelementptr inbounds i8, i8* %48, i64 3, !dbg !16055
  %49 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16056
  %dir_location40 = getelementptr inbounds %struct.isoent, %struct.isoent* %49, i32 0, i32 12, !dbg !16057
  %50 = load i32, i32* %dir_location40, align 4, !dbg !16057
  call void @set_num_731(i8* %add.ptr39, i32 %50), !dbg !16058
  br label %if.end41

if.end41:                                         ; preds = %if.else38, %if.then36
  %51 = load i32, i32* %type_m.addr, align 4, !dbg !16059
  %tobool42 = icmp ne i32 %51, 0, !dbg !16059
  br i1 %tobool42, label %if.then43, label %if.else46, !dbg !16061

if.then43:                                        ; preds = %if.end41
  %52 = load i8*, i8** %bp, align 8, !dbg !16062
  %add.ptr44 = getelementptr inbounds i8, i8* %52, i64 7, !dbg !16063
  %53 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16064
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %53, i32 0, i32 2, !dbg !16065
  %54 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !16065
  %dir_number = getelementptr inbounds %struct.isoent, %struct.isoent* %54, i32 0, i32 10, !dbg !16066
  %55 = load i32, i32* %dir_number, align 8, !dbg !16066
  %conv45 = trunc i32 %55 to i16, !dbg !16064
  call void @set_num_722(i8* %add.ptr44, i16 zeroext %conv45), !dbg !16067
  br label %if.end51, !dbg !16067

if.else46:                                        ; preds = %if.end41
  %56 = load i8*, i8** %bp, align 8, !dbg !16068
  %add.ptr47 = getelementptr inbounds i8, i8* %56, i64 7, !dbg !16069
  %57 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16070
  %parent48 = getelementptr inbounds %struct.isoent, %struct.isoent* %57, i32 0, i32 2, !dbg !16071
  %58 = load %struct.isoent*, %struct.isoent** %parent48, align 8, !dbg !16071
  %dir_number49 = getelementptr inbounds %struct.isoent, %struct.isoent* %58, i32 0, i32 10, !dbg !16072
  %59 = load i32, i32* %dir_number49, align 8, !dbg !16072
  %conv50 = trunc i32 %59 to i16, !dbg !16070
  call void @set_num_721(i8* %add.ptr47, i16 zeroext %conv50), !dbg !16073
  br label %if.end51

if.end51:                                         ; preds = %if.else46, %if.then43
  %60 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16074
  %identifier52 = getelementptr inbounds %struct.isoent, %struct.isoent* %60, i32 0, i32 14, !dbg !16076
  %61 = load i8*, i8** %identifier52, align 8, !dbg !16076
  %cmp53 = icmp eq i8* %61, null, !dbg !16077
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !16078

if.then55:                                        ; preds = %if.end51
  %62 = load i8*, i8** %bp, align 8, !dbg !16079
  %arrayidx56 = getelementptr inbounds i8, i8* %62, i64 9, !dbg !16079
  store i8 0, i8* %arrayidx56, align 1, !dbg !16080
  br label %if.end60, !dbg !16079

if.else57:                                        ; preds = %if.end51
  %63 = load i8*, i8** %bp, align 8, !dbg !16081
  %arrayidx58 = getelementptr inbounds i8, i8* %63, i64 9, !dbg !16081
  %64 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16082
  %identifier59 = getelementptr inbounds %struct.isoent, %struct.isoent* %64, i32 0, i32 14, !dbg !16083
  %65 = load i8*, i8** %identifier59, align 8, !dbg !16083
  %66 = load i64, i64* %len, align 8, !dbg !16084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx58, i8* %65, i64 %66, i32 1, i1 false), !dbg !16085
  br label %if.end60

if.end60:                                         ; preds = %if.else57, %if.then55
  %67 = load i64, i64* %len, align 8, !dbg !16086
  %and = and i64 %67, 1, !dbg !16088
  %tobool61 = icmp ne i64 %and, 0, !dbg !16088
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !16089

if.then62:                                        ; preds = %if.end60
  %68 = load i64, i64* %len, align 8, !dbg !16090
  %add63 = add i64 9, %68, !dbg !16092
  %69 = load i8*, i8** %bp, align 8, !dbg !16093
  %arrayidx64 = getelementptr inbounds i8, i8* %69, i64 %add63, !dbg !16093
  store i8 0, i8* %arrayidx64, align 1, !dbg !16094
  %70 = load i64, i64* %len, align 8, !dbg !16095
  %inc = add i64 %70, 1, !dbg !16095
  store i64 %inc, i64* %len, align 8, !dbg !16095
  br label %if.end65, !dbg !16096

if.end65:                                         ; preds = %if.then62, %if.end60
  %71 = load i64, i64* %len, align 8, !dbg !16097
  %conv66 = trunc i64 %71 to i32, !dbg !16098
  %add67 = add nsw i32 8, %conv66, !dbg !16099
  %72 = load i32, i32* %wsize, align 4, !dbg !16100
  %add68 = add nsw i32 %72, %add67, !dbg !16100
  store i32 %add68, i32* %wsize, align 4, !dbg !16100
  %73 = load i64, i64* %len, align 8, !dbg !16101
  %add69 = add i64 8, %73, !dbg !16102
  %74 = load i8*, i8** %bp, align 8, !dbg !16103
  %add.ptr70 = getelementptr inbounds i8, i8* %74, i64 %add69, !dbg !16103
  store i8* %add.ptr70, i8** %bp, align 8, !dbg !16103
  br label %for.inc, !dbg !16104

for.inc:                                          ; preds = %if.end65
  %75 = load i32, i32* %i, align 4, !dbg !16105
  %inc71 = add nsw i32 %75, 1, !dbg !16105
  store i32 %inc71, i32* %i, align 4, !dbg !16105
  br label %for.cond, !dbg !16107

for.end:                                          ; preds = %for.cond
  %76 = load i8*, i8** %bp, align 8, !dbg !16108
  %add.ptr72 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !16110
  %77 = load i8*, i8** %wb, align 8, !dbg !16111
  %cmp73 = icmp ugt i8* %add.ptr72, %77, !dbg !16112
  br i1 %cmp73, label %if.then75, label %if.end85, !dbg !16113

if.then75:                                        ; preds = %for.end
  %78 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16114
  %79 = load i8*, i8** %bp, align 8, !dbg !16116
  %add.ptr76 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !16117
  %80 = load i8*, i8** %wb, align 8, !dbg !16118
  %sub.ptr.lhs.cast77 = ptrtoint i8* %add.ptr76 to i64, !dbg !16119
  %sub.ptr.rhs.cast78 = ptrtoint i8* %80 to i64, !dbg !16119
  %sub.ptr.sub79 = sub i64 %sub.ptr.lhs.cast77, %sub.ptr.rhs.cast78, !dbg !16119
  %call80 = call i32 @wb_consume(%struct.archive_write* %78, i64 %sub.ptr.sub79), !dbg !16120
  store i32 %call80, i32* %r, align 4, !dbg !16121
  %81 = load i32, i32* %r, align 4, !dbg !16122
  %cmp81 = icmp slt i32 %81, 0, !dbg !16124
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !16125

if.then83:                                        ; preds = %if.then75
  %82 = load i32, i32* %r, align 4, !dbg !16126
  store i32 %82, i32* %retval, align 4, !dbg !16127
  br label %return, !dbg !16127

if.end84:                                         ; preds = %if.then75
  br label %if.end85, !dbg !16128

if.end85:                                         ; preds = %if.end84, %for.end
  %83 = load i32, i32* %wsize, align 4, !dbg !16129
  store i32 %83, i32* %retval, align 4, !dbg !16130
  br label %return, !dbg !16130

return:                                           ; preds = %if.end85, %if.then83, %if.then26, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !16131
  ret i32 %84, !dbg !16131
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_722(i8* %p, i16 zeroext %value) #7 !dbg !922 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16132, metadata !986), !dbg !16133
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !16134, metadata !986), !dbg !16135
  %0 = load i8*, i8** %p.addr, align 8, !dbg !16136
  %1 = load i16, i16* %value.addr, align 2, !dbg !16137
  call void @archive_be16enc(i8* %0, i16 zeroext %1), !dbg !16138
  ret void, !dbg !16139
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_num_721(i8* %p, i16 zeroext %value) #7 !dbg !923 {
entry:
  %p.addr = alloca i8*, align 8
  %value.addr = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16140, metadata !986), !dbg !16141
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !16142, metadata !986), !dbg !16143
  %0 = load i8*, i8** %p.addr, align 8, !dbg !16144
  %1 = load i16, i16* %value.addr, align 2, !dbg !16145
  call void @archive_le16enc(i8* %0, i16 zeroext %1), !dbg !16146
  ret void, !dbg !16147
}

; Function Attrs: nounwind uwtable
define internal i32 @_write_directory_descriptors(%struct.archive_write* %a, %struct.vdd* %vdd, %struct.isoent* %isoent, i32 %depth) #0 !dbg !925 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %vdd.addr = alloca %struct.vdd*, align 8
  %isoent.addr = alloca %struct.isoent*, align 8
  %depth.addr = alloca i32, align 4
  %iso9660 = alloca %struct.iso9660*, align 8
  %enttbl = alloca %struct.isoent**, align 8
  %p = alloca i8*, align 8
  %wb = alloca i8*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %dr_l = alloca i32, align 4
  %np = alloca %struct.isoent*, align 8
  %file = alloca %struct.isofile*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !16148, metadata !986), !dbg !16149
  store %struct.vdd* %vdd, %struct.vdd** %vdd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vdd** %vdd.addr, metadata !16150, metadata !986), !dbg !16151
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !16152, metadata !986), !dbg !16153
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !16154, metadata !986), !dbg !16155
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !16156, metadata !986), !dbg !16157
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16158
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !16159
  %1 = load i8*, i8** %format_data, align 8, !dbg !16159
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !16158
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !16157
  call void @llvm.dbg.declare(metadata %struct.isoent*** %enttbl, metadata !16160, metadata !986), !dbg !16161
  call void @llvm.dbg.declare(metadata i8** %p, metadata !16162, metadata !986), !dbg !16163
  call void @llvm.dbg.declare(metadata i8** %wb, metadata !16164, metadata !986), !dbg !16165
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16166, metadata !986), !dbg !16167
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16168, metadata !986), !dbg !16169
  call void @llvm.dbg.declare(metadata i32* %dr_l, metadata !16170, metadata !986), !dbg !16171
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16172
  %call = call i8* @wb_buffptr(%struct.archive_write* %3), !dbg !16173
  store i8* %call, i8** %wb, align 8, !dbg !16174
  store i8* %call, i8** %p, align 8, !dbg !16175
  %4 = load i8*, i8** %p, align 8, !dbg !16176
  %5 = load i8*, i8** %p, align 8, !dbg !16177
  %6 = load i8*, i8** %wb, align 8, !dbg !16177
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !16177
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !16177
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16177
  %sub = sub nsw i64 2048, %sub.ptr.sub, !dbg !16177
  %7 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16178
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16179
  %9 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16180
  %vdd_type = getelementptr inbounds %struct.vdd, %struct.vdd* %9, i32 0, i32 1, !dbg !16181
  %10 = load i32, i32* %vdd_type, align 8, !dbg !16181
  %call1 = call i32 @set_directory_record(i8* %4, i64 %sub, %struct.isoent* %7, %struct.iso9660* %8, i32 1, i32 %10), !dbg !16182
  %11 = load i8*, i8** %p, align 8, !dbg !16183
  %idx.ext = sext i32 %call1 to i64, !dbg !16183
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !16183
  store i8* %add.ptr, i8** %p, align 8, !dbg !16183
  %12 = load i8*, i8** %p, align 8, !dbg !16184
  %13 = load i8*, i8** %p, align 8, !dbg !16185
  %14 = load i8*, i8** %wb, align 8, !dbg !16185
  %sub.ptr.lhs.cast2 = ptrtoint i8* %13 to i64, !dbg !16185
  %sub.ptr.rhs.cast3 = ptrtoint i8* %14 to i64, !dbg !16185
  %sub.ptr.sub4 = sub i64 %sub.ptr.lhs.cast2, %sub.ptr.rhs.cast3, !dbg !16185
  %sub5 = sub nsw i64 2048, %sub.ptr.sub4, !dbg !16185
  %15 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16186
  %16 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16187
  %17 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16188
  %vdd_type6 = getelementptr inbounds %struct.vdd, %struct.vdd* %17, i32 0, i32 1, !dbg !16189
  %18 = load i32, i32* %vdd_type6, align 8, !dbg !16189
  %call7 = call i32 @set_directory_record(i8* %12, i64 %sub5, %struct.isoent* %15, %struct.iso9660* %16, i32 2, i32 %18), !dbg !16190
  %19 = load i8*, i8** %p, align 8, !dbg !16191
  %idx.ext8 = sext i32 %call7 to i64, !dbg !16191
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !16191
  store i8* %add.ptr9, i8** %p, align 8, !dbg !16191
  %20 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16192
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %20, i32 0, i32 3, !dbg !16194
  %cnt = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 2, !dbg !16195
  %21 = load i32, i32* %cnt, align 8, !dbg !16195
  %cmp = icmp sle i32 %21, 0, !dbg !16196
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16197

lor.lhs.false:                                    ; preds = %entry
  %22 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16198
  %vdd_type10 = getelementptr inbounds %struct.vdd, %struct.vdd* %22, i32 0, i32 1, !dbg !16200
  %23 = load i32, i32* %vdd_type10, align 8, !dbg !16200
  %cmp11 = icmp ne i32 %23, 1, !dbg !16201
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !16202

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16203
  %opt = getelementptr inbounds %struct.iso9660, %struct.iso9660* %24, i32 0, i32 37, !dbg !16204
  %25 = bitcast %struct.iso_option* %opt to i32*, !dbg !16205
  %bf.load = load i32, i32* %25, align 8, !dbg !16205
  %bf.lshr = lshr i32 %bf.load, 23, !dbg !16205
  %bf.clear = and i32 %bf.lshr, 3, !dbg !16205
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !16203
  br i1 %tobool, label %if.end, label %land.lhs.true12, !dbg !16206

land.lhs.true12:                                  ; preds = %land.lhs.true
  %26 = load i32, i32* %depth.addr, align 4, !dbg !16207
  %add = add nsw i32 %26, 1, !dbg !16208
  %27 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16209
  %max_depth = getelementptr inbounds %struct.vdd, %struct.vdd* %27, i32 0, i32 3, !dbg !16210
  %28 = load i32, i32* %max_depth, align 8, !dbg !16210
  %cmp13 = icmp sge i32 %add, %28, !dbg !16211
  br i1 %cmp13, label %if.then, label %if.end, !dbg !16212

if.then:                                          ; preds = %land.lhs.true12, %entry
  %29 = load i8*, i8** %p, align 8, !dbg !16214
  %30 = load i8*, i8** %p, align 8, !dbg !16216
  %31 = load i8*, i8** %wb, align 8, !dbg !16216
  %sub.ptr.lhs.cast14 = ptrtoint i8* %30 to i64, !dbg !16216
  %sub.ptr.rhs.cast15 = ptrtoint i8* %31 to i64, !dbg !16216
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !16216
  %sub17 = sub nsw i64 2048, %sub.ptr.sub16, !dbg !16216
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 %sub17, i32 1, i1 false), !dbg !16217
  %32 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16218
  %call18 = call i32 @wb_consume(%struct.archive_write* %32, i64 2048), !dbg !16219
  store i32 %call18, i32* %retval, align 4, !dbg !16220
  br label %return, !dbg !16220

if.end:                                           ; preds = %land.lhs.true12, %land.lhs.true, %lor.lhs.false
  %33 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16221
  %children_sorted = getelementptr inbounds %struct.isoent, %struct.isoent* %33, i32 0, i32 6, !dbg !16222
  %34 = load %struct.isoent**, %struct.isoent*** %children_sorted, align 8, !dbg !16222
  store %struct.isoent** %34, %struct.isoent*** %enttbl, align 8, !dbg !16223
  store i32 0, i32* %i, align 4, !dbg !16224
  br label %for.cond, !dbg !16226

for.cond:                                         ; preds = %for.inc, %if.end
  %35 = load i32, i32* %i, align 4, !dbg !16227
  %36 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16230
  %children19 = getelementptr inbounds %struct.isoent, %struct.isoent* %36, i32 0, i32 3, !dbg !16231
  %cnt20 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children19, i32 0, i32 2, !dbg !16232
  %37 = load i32, i32* %cnt20, align 8, !dbg !16232
  %cmp21 = icmp slt i32 %35, %37, !dbg !16233
  br i1 %cmp21, label %for.body, label %for.end, !dbg !16234

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !16235, metadata !986), !dbg !16237
  %38 = load i32, i32* %i, align 4, !dbg !16238
  %idxprom = sext i32 %38 to i64, !dbg !16239
  %39 = load %struct.isoent**, %struct.isoent*** %enttbl, align 8, !dbg !16239
  %arrayidx = getelementptr inbounds %struct.isoent*, %struct.isoent** %39, i64 %idxprom, !dbg !16239
  %40 = load %struct.isoent*, %struct.isoent** %arrayidx, align 8, !dbg !16239
  store %struct.isoent* %40, %struct.isoent** %np, align 8, !dbg !16237
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !16240, metadata !986), !dbg !16241
  %41 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16242
  %file22 = getelementptr inbounds %struct.isoent, %struct.isoent* %41, i32 0, i32 1, !dbg !16243
  %42 = load %struct.isofile*, %struct.isofile** %file22, align 8, !dbg !16243
  store %struct.isofile* %42, %struct.isofile** %file, align 8, !dbg !16241
  %43 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16244
  %hardlink_target = getelementptr inbounds %struct.isofile, %struct.isofile* %43, i32 0, i32 3, !dbg !16246
  %44 = load %struct.isofile*, %struct.isofile** %hardlink_target, align 8, !dbg !16246
  %cmp23 = icmp ne %struct.isofile* %44, null, !dbg !16247
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !16248

if.then24:                                        ; preds = %for.body
  %45 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16249
  %hardlink_target25 = getelementptr inbounds %struct.isofile, %struct.isofile* %45, i32 0, i32 3, !dbg !16250
  %46 = load %struct.isofile*, %struct.isofile** %hardlink_target25, align 8, !dbg !16250
  store %struct.isofile* %46, %struct.isofile** %file, align 8, !dbg !16251
  br label %if.end26, !dbg !16252

if.end26:                                         ; preds = %if.then24, %for.body
  %47 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16253
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %47, i32 0, i32 10, !dbg !16254
  %48 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16255
  %cur_content = getelementptr inbounds %struct.isofile, %struct.isofile* %48, i32 0, i32 11, !dbg !16256
  store %struct.content* %content, %struct.content** %cur_content, align 8, !dbg !16257
  br label %do.body, !dbg !16258

do.body:                                          ; preds = %do.cond, %if.end26
  %49 = load i8*, i8** %p, align 8, !dbg !16259
  %50 = load i8*, i8** %p, align 8, !dbg !16261
  %51 = load i8*, i8** %wb, align 8, !dbg !16261
  %sub.ptr.lhs.cast27 = ptrtoint i8* %50 to i64, !dbg !16261
  %sub.ptr.rhs.cast28 = ptrtoint i8* %51 to i64, !dbg !16261
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !16261
  %sub30 = sub nsw i64 2048, %sub.ptr.sub29, !dbg !16261
  %52 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16262
  %53 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16263
  %54 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16264
  %vdd_type31 = getelementptr inbounds %struct.vdd, %struct.vdd* %54, i32 0, i32 1, !dbg !16265
  %55 = load i32, i32* %vdd_type31, align 8, !dbg !16265
  %call32 = call i32 @set_directory_record(i8* %49, i64 %sub30, %struct.isoent* %52, %struct.iso9660* %53, i32 3, i32 %55), !dbg !16266
  store i32 %call32, i32* %dr_l, align 4, !dbg !16267
  %56 = load i32, i32* %dr_l, align 4, !dbg !16268
  %cmp33 = icmp eq i32 %56, 0, !dbg !16270
  br i1 %cmp33, label %if.then34, label %if.end50, !dbg !16271

if.then34:                                        ; preds = %do.body
  %57 = load i8*, i8** %p, align 8, !dbg !16272
  %58 = load i8*, i8** %p, align 8, !dbg !16274
  %59 = load i8*, i8** %wb, align 8, !dbg !16274
  %sub.ptr.lhs.cast35 = ptrtoint i8* %58 to i64, !dbg !16274
  %sub.ptr.rhs.cast36 = ptrtoint i8* %59 to i64, !dbg !16274
  %sub.ptr.sub37 = sub i64 %sub.ptr.lhs.cast35, %sub.ptr.rhs.cast36, !dbg !16274
  %sub38 = sub nsw i64 2048, %sub.ptr.sub37, !dbg !16274
  call void @llvm.memset.p0i8.i64(i8* %57, i8 0, i64 %sub38, i32 1, i1 false), !dbg !16275
  %60 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16276
  %call39 = call i32 @wb_consume(%struct.archive_write* %60, i64 2048), !dbg !16277
  store i32 %call39, i32* %r, align 4, !dbg !16278
  %61 = load i32, i32* %r, align 4, !dbg !16279
  %cmp40 = icmp slt i32 %61, 0, !dbg !16281
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !16282

if.then41:                                        ; preds = %if.then34
  %62 = load i32, i32* %r, align 4, !dbg !16283
  store i32 %62, i32* %retval, align 4, !dbg !16284
  br label %return, !dbg !16284

if.end42:                                         ; preds = %if.then34
  %63 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16285
  %call43 = call i8* @wb_buffptr(%struct.archive_write* %63), !dbg !16286
  store i8* %call43, i8** %wb, align 8, !dbg !16287
  store i8* %call43, i8** %p, align 8, !dbg !16288
  %64 = load i8*, i8** %p, align 8, !dbg !16289
  %65 = load i8*, i8** %p, align 8, !dbg !16290
  %66 = load i8*, i8** %wb, align 8, !dbg !16290
  %sub.ptr.lhs.cast44 = ptrtoint i8* %65 to i64, !dbg !16290
  %sub.ptr.rhs.cast45 = ptrtoint i8* %66 to i64, !dbg !16290
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45, !dbg !16290
  %sub47 = sub nsw i64 2048, %sub.ptr.sub46, !dbg !16290
  %67 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16291
  %68 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16292
  %69 = load %struct.vdd*, %struct.vdd** %vdd.addr, align 8, !dbg !16293
  %vdd_type48 = getelementptr inbounds %struct.vdd, %struct.vdd* %69, i32 0, i32 1, !dbg !16294
  %70 = load i32, i32* %vdd_type48, align 8, !dbg !16294
  %call49 = call i32 @set_directory_record(i8* %64, i64 %sub47, %struct.isoent* %67, %struct.iso9660* %68, i32 3, i32 %70), !dbg !16295
  store i32 %call49, i32* %dr_l, align 4, !dbg !16296
  br label %if.end50, !dbg !16297

if.end50:                                         ; preds = %if.end42, %do.body
  %71 = load i32, i32* %dr_l, align 4, !dbg !16298
  %72 = load i8*, i8** %p, align 8, !dbg !16299
  %idx.ext51 = sext i32 %71 to i64, !dbg !16299
  %add.ptr52 = getelementptr inbounds i8, i8* %72, i64 %idx.ext51, !dbg !16299
  store i8* %add.ptr52, i8** %p, align 8, !dbg !16299
  %73 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16300
  %cur_content53 = getelementptr inbounds %struct.isofile, %struct.isofile* %73, i32 0, i32 11, !dbg !16301
  %74 = load %struct.content*, %struct.content** %cur_content53, align 8, !dbg !16301
  %next = getelementptr inbounds %struct.content, %struct.content* %74, i32 0, i32 4, !dbg !16302
  %75 = load %struct.content*, %struct.content** %next, align 8, !dbg !16302
  %76 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16303
  %cur_content54 = getelementptr inbounds %struct.isofile, %struct.isofile* %76, i32 0, i32 11, !dbg !16304
  store %struct.content* %75, %struct.content** %cur_content54, align 8, !dbg !16305
  br label %do.cond, !dbg !16306

do.cond:                                          ; preds = %if.end50
  %77 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16307
  %cur_content55 = getelementptr inbounds %struct.isofile, %struct.isofile* %77, i32 0, i32 11, !dbg !16309
  %78 = load %struct.content*, %struct.content** %cur_content55, align 8, !dbg !16309
  %cmp56 = icmp ne %struct.content* %78, null, !dbg !16310
  br i1 %cmp56, label %do.body, label %do.end, !dbg !16311

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !16312

for.inc:                                          ; preds = %do.end
  %79 = load i32, i32* %i, align 4, !dbg !16313
  %inc = add nsw i32 %79, 1, !dbg !16313
  store i32 %inc, i32* %i, align 4, !dbg !16313
  br label %for.cond, !dbg !16315

for.end:                                          ; preds = %for.cond
  %80 = load i8*, i8** %p, align 8, !dbg !16316
  %81 = load i8*, i8** %p, align 8, !dbg !16317
  %82 = load i8*, i8** %wb, align 8, !dbg !16317
  %sub.ptr.lhs.cast57 = ptrtoint i8* %81 to i64, !dbg !16317
  %sub.ptr.rhs.cast58 = ptrtoint i8* %82 to i64, !dbg !16317
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58, !dbg !16317
  %sub60 = sub nsw i64 2048, %sub.ptr.sub59, !dbg !16317
  call void @llvm.memset.p0i8.i64(i8* %80, i8 0, i64 %sub60, i32 1, i1 false), !dbg !16318
  %83 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16319
  %call61 = call i32 @wb_consume(%struct.archive_write* %83, i64 2048), !dbg !16320
  store i32 %call61, i32* %retval, align 4, !dbg !16321
  br label %return, !dbg !16321

return:                                           ; preds = %for.end, %if.then41, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !16322
  ret i32 %84, !dbg !16322
}

; Function Attrs: nounwind uwtable
define internal i32 @make_boot_catalog(%struct.archive_write* %a) #0 !dbg !930 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %block = alloca i8*, align 8
  %p = alloca i8*, align 8
  %sum = alloca i16, align 2
  %wp = alloca i16*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !16323, metadata !986), !dbg !16324
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !16325, metadata !986), !dbg !16326
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16327
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !16328
  %1 = load i8*, i8** %format_data, align 8, !dbg !16328
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !16327
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !16326
  call void @llvm.dbg.declare(metadata i8** %block, metadata !16329, metadata !986), !dbg !16330
  call void @llvm.dbg.declare(metadata i8** %p, metadata !16331, metadata !986), !dbg !16332
  call void @llvm.dbg.declare(metadata i16* %sum, metadata !16333, metadata !986), !dbg !16334
  call void @llvm.dbg.declare(metadata i16** %wp, metadata !16335, metadata !986), !dbg !16336
  %3 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16337
  %call = call i8* @wb_buffptr(%struct.archive_write* %3), !dbg !16338
  store i8* %call, i8** %block, align 8, !dbg !16339
  %4 = load i8*, i8** %block, align 8, !dbg !16340
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 2048, i32 1, i1 false), !dbg !16341
  %5 = load i8*, i8** %block, align 8, !dbg !16342
  store i8* %5, i8** %p, align 8, !dbg !16343
  %6 = load i8*, i8** %p, align 8, !dbg !16344
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !16344
  store i8 1, i8* %arrayidx, align 1, !dbg !16345
  %7 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16346
  %el_torito = getelementptr inbounds %struct.iso9660, %struct.iso9660* %7, i32 0, i32 36, !dbg !16347
  %platform_id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito, i32 0, i32 4, !dbg !16348
  %8 = load i8, i8* %platform_id, align 8, !dbg !16348
  %9 = load i8*, i8** %p, align 8, !dbg !16349
  %arrayidx1 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !16349
  store i8 %8, i8* %arrayidx1, align 1, !dbg !16350
  %10 = load i8*, i8** %p, align 8, !dbg !16351
  %arrayidx2 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !16351
  store i8 0, i8* %arrayidx2, align 1, !dbg !16352
  %11 = load i8*, i8** %p, align 8, !dbg !16353
  %arrayidx3 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !16353
  store i8 0, i8* %arrayidx3, align 1, !dbg !16354
  %12 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16355
  %el_torito4 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %12, i32 0, i32 36, !dbg !16355
  %id = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito4, i32 0, i32 5, !dbg !16355
  %length = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id, i32 0, i32 1, !dbg !16355
  %13 = load i64, i64* %length, align 8, !dbg !16355
  %cmp = icmp ugt i64 %13, 0, !dbg !16357
  br i1 %cmp, label %if.then, label %if.end, !dbg !16358

if.then:                                          ; preds = %entry
  %14 = load i8*, i8** %p, align 8, !dbg !16359
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 4, !dbg !16360
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16361
  %el_torito5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 36, !dbg !16362
  %id6 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito5, i32 0, i32 5, !dbg !16363
  %s = getelementptr inbounds %struct.archive_string, %struct.archive_string* %id6, i32 0, i32 0, !dbg !16364
  %16 = load i8*, i8** %s, align 8, !dbg !16364
  %call7 = call i8* @strncpy(i8* %add.ptr, i8* %16, i64 23) #8, !dbg !16365
  br label %if.end, !dbg !16365

if.end:                                           ; preds = %if.then, %entry
  %17 = load i8*, i8** %p, align 8, !dbg !16366
  %arrayidx8 = getelementptr inbounds i8, i8* %17, i64 27, !dbg !16366
  store i8 0, i8* %arrayidx8, align 1, !dbg !16367
  %18 = load i8*, i8** %p, align 8, !dbg !16368
  %arrayidx9 = getelementptr inbounds i8, i8* %18, i64 29, !dbg !16368
  store i8 0, i8* %arrayidx9, align 1, !dbg !16369
  %19 = load i8*, i8** %p, align 8, !dbg !16370
  %arrayidx10 = getelementptr inbounds i8, i8* %19, i64 28, !dbg !16370
  store i8 0, i8* %arrayidx10, align 1, !dbg !16371
  %20 = load i8*, i8** %p, align 8, !dbg !16372
  %arrayidx11 = getelementptr inbounds i8, i8* %20, i64 30, !dbg !16372
  store i8 85, i8* %arrayidx11, align 1, !dbg !16373
  %21 = load i8*, i8** %p, align 8, !dbg !16374
  %arrayidx12 = getelementptr inbounds i8, i8* %21, i64 31, !dbg !16374
  store i8 -86, i8* %arrayidx12, align 1, !dbg !16375
  store i16 0, i16* %sum, align 2, !dbg !16376
  %22 = load i8*, i8** %block, align 8, !dbg !16377
  %23 = bitcast i8* %22 to i16*, !dbg !16378
  store i16* %23, i16** %wp, align 8, !dbg !16379
  br label %while.cond, !dbg !16380

while.cond:                                       ; preds = %while.body, %if.end
  %24 = load i16*, i16** %wp, align 8, !dbg !16381
  %25 = load i8*, i8** %block, align 8, !dbg !16383
  %arrayidx13 = getelementptr inbounds i8, i8* %25, i64 32, !dbg !16383
  %26 = bitcast i8* %arrayidx13 to i16*, !dbg !16384
  %cmp14 = icmp ult i16* %24, %26, !dbg !16385
  br i1 %cmp14, label %while.body, label %while.end, !dbg !16386

while.body:                                       ; preds = %while.cond
  %27 = load i16*, i16** %wp, align 8, !dbg !16387
  %incdec.ptr = getelementptr inbounds i16, i16* %27, i32 1, !dbg !16387
  store i16* %incdec.ptr, i16** %wp, align 8, !dbg !16387
  %28 = bitcast i16* %27 to i8*, !dbg !16388
  %call15 = call zeroext i16 @archive_le16dec(i8* %28), !dbg !16389
  %conv = zext i16 %call15 to i32, !dbg !16389
  %29 = load i16, i16* %sum, align 2, !dbg !16390
  %conv16 = zext i16 %29 to i32, !dbg !16390
  %add = add nsw i32 %conv16, %conv, !dbg !16390
  %conv17 = trunc i32 %add to i16, !dbg !16390
  store i16 %conv17, i16* %sum, align 2, !dbg !16390
  br label %while.cond, !dbg !16391

while.end:                                        ; preds = %while.cond
  %30 = load i8*, i8** %block, align 8, !dbg !16393
  %arrayidx18 = getelementptr inbounds i8, i8* %30, i64 28, !dbg !16393
  %31 = load i16, i16* %sum, align 2, !dbg !16394
  %conv19 = zext i16 %31 to i32, !dbg !16394
  %neg = xor i32 %conv19, -1, !dbg !16395
  %add20 = add nsw i32 %neg, 1, !dbg !16396
  %conv21 = trunc i32 %add20 to i16, !dbg !16397
  call void @set_num_721(i8* %arrayidx18, i16 zeroext %conv21), !dbg !16398
  %32 = load i8*, i8** %block, align 8, !dbg !16399
  %arrayidx22 = getelementptr inbounds i8, i8* %32, i64 32, !dbg !16399
  store i8* %arrayidx22, i8** %p, align 8, !dbg !16400
  %33 = load i8*, i8** %p, align 8, !dbg !16401
  %arrayidx23 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !16401
  store i8 -120, i8* %arrayidx23, align 1, !dbg !16402
  %34 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16403
  %el_torito24 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %34, i32 0, i32 36, !dbg !16404
  %media_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito24, i32 0, i32 6, !dbg !16405
  %35 = load i8, i8* %media_type, align 8, !dbg !16405
  %36 = load i8*, i8** %p, align 8, !dbg !16406
  %arrayidx25 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !16406
  store i8 %35, i8* %arrayidx25, align 1, !dbg !16407
  %37 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16408
  %el_torito26 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %37, i32 0, i32 36, !dbg !16410
  %media_type27 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito26, i32 0, i32 6, !dbg !16411
  %38 = load i8, i8* %media_type27, align 8, !dbg !16411
  %conv28 = zext i8 %38 to i32, !dbg !16408
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !16412
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !16413

if.then31:                                        ; preds = %while.end
  %39 = load i8*, i8** %p, align 8, !dbg !16414
  %arrayidx32 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !16414
  %40 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16415
  %el_torito33 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %40, i32 0, i32 36, !dbg !16416
  %boot_load_seg = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito33, i32 0, i32 8, !dbg !16417
  %41 = load i16, i16* %boot_load_seg, align 2, !dbg !16417
  call void @set_num_721(i8* %arrayidx32, i16 zeroext %41), !dbg !16418
  br label %if.end35, !dbg !16418

if.else:                                          ; preds = %while.end
  %42 = load i8*, i8** %p, align 8, !dbg !16419
  %arrayidx34 = getelementptr inbounds i8, i8* %42, i64 2, !dbg !16419
  call void @set_num_721(i8* %arrayidx34, i16 zeroext 0), !dbg !16420
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then31
  %43 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16421
  %el_torito36 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %43, i32 0, i32 36, !dbg !16422
  %system_type = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito36, i32 0, i32 7, !dbg !16423
  %44 = load i8, i8* %system_type, align 1, !dbg !16423
  %45 = load i8*, i8** %p, align 8, !dbg !16424
  %arrayidx37 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !16424
  store i8 %44, i8* %arrayidx37, align 1, !dbg !16425
  %46 = load i8*, i8** %p, align 8, !dbg !16426
  %arrayidx38 = getelementptr inbounds i8, i8* %46, i64 5, !dbg !16426
  store i8 0, i8* %arrayidx38, align 1, !dbg !16427
  %47 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16428
  %el_torito39 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %47, i32 0, i32 36, !dbg !16430
  %media_type40 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito39, i32 0, i32 6, !dbg !16431
  %48 = load i8, i8* %media_type40, align 8, !dbg !16431
  %conv41 = zext i8 %48 to i32, !dbg !16428
  %cmp42 = icmp eq i32 %conv41, 0, !dbg !16432
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !16433

if.then44:                                        ; preds = %if.end35
  %49 = load i8*, i8** %p, align 8, !dbg !16434
  %arrayidx45 = getelementptr inbounds i8, i8* %49, i64 6, !dbg !16434
  %50 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16435
  %el_torito46 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %50, i32 0, i32 36, !dbg !16436
  %boot_load_size = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito46, i32 0, i32 9, !dbg !16437
  %51 = load i16, i16* %boot_load_size, align 4, !dbg !16437
  call void @set_num_721(i8* %arrayidx45, i16 zeroext %51), !dbg !16438
  br label %if.end49, !dbg !16438

if.else47:                                        ; preds = %if.end35
  %52 = load i8*, i8** %p, align 8, !dbg !16439
  %arrayidx48 = getelementptr inbounds i8, i8* %52, i64 6, !dbg !16439
  call void @set_num_721(i8* %arrayidx48, i16 zeroext 1), !dbg !16440
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.then44
  %53 = load i8*, i8** %p, align 8, !dbg !16441
  %arrayidx50 = getelementptr inbounds i8, i8* %53, i64 8, !dbg !16441
  %54 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16442
  %el_torito51 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %54, i32 0, i32 36, !dbg !16443
  %boot = getelementptr inbounds %struct.anon.7, %struct.anon.7* %el_torito51, i32 0, i32 3, !dbg !16444
  %55 = load %struct.isoent*, %struct.isoent** %boot, align 8, !dbg !16444
  %file = getelementptr inbounds %struct.isoent, %struct.isoent* %55, i32 0, i32 1, !dbg !16445
  %56 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16445
  %content = getelementptr inbounds %struct.isofile, %struct.isofile* %56, i32 0, i32 10, !dbg !16446
  %location = getelementptr inbounds %struct.content, %struct.content* %content, i32 0, i32 3, !dbg !16447
  %57 = load i32, i32* %location, align 4, !dbg !16447
  call void @set_num_731(i8* %arrayidx50, i32 %57), !dbg !16448
  %58 = load i8*, i8** %p, align 8, !dbg !16449
  %arrayidx52 = getelementptr inbounds i8, i8* %58, i64 12, !dbg !16449
  call void @llvm.memset.p0i8.i64(i8* %arrayidx52, i8 0, i64 20, i32 1, i1 false), !dbg !16450
  %59 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16451
  %call53 = call i32 @wb_consume(%struct.archive_write* %59, i64 2048), !dbg !16452
  ret i32 %call53, !dbg !16453
}

; Function Attrs: nounwind uwtable
define internal i32 @write_file_contents(%struct.archive_write* %a, i64 %offset, i64 %size) #0 !dbg !934 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.archive_write*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %r = alloca i32, align 4
  %rsize = alloca i64, align 8
  %rs = alloca i64, align 8
  %wb = alloca i8*, align 8
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !16454, metadata !986), !dbg !16455
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !16456, metadata !986), !dbg !16457
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16458, metadata !986), !dbg !16459
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !16460, metadata !986), !dbg !16461
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16462
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !16463
  %1 = load i8*, i8** %format_data, align 8, !dbg !16463
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !16462
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !16461
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16464, metadata !986), !dbg !16465
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16466
  %temp_fd = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 1, !dbg !16467
  %4 = load i32, i32* %temp_fd, align 8, !dbg !16467
  %5 = load i64, i64* %offset.addr, align 8, !dbg !16468
  %call = call i64 @lseek(i32 %4, i64 %5, i32 0) #8, !dbg !16469
  br label %while.cond, !dbg !16470

while.cond:                                       ; preds = %if.end12, %entry
  %6 = load i64, i64* %size.addr, align 8, !dbg !16471
  %tobool = icmp ne i64 %6, 0, !dbg !16473
  br i1 %tobool, label %while.body, label %while.end, !dbg !16473

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !16474, metadata !986), !dbg !16476
  call void @llvm.dbg.declare(metadata i64* %rs, metadata !16477, metadata !986), !dbg !16478
  call void @llvm.dbg.declare(metadata i8** %wb, metadata !16479, metadata !986), !dbg !16480
  %7 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16481
  %call1 = call i8* @wb_buffptr(%struct.archive_write* %7), !dbg !16482
  store i8* %call1, i8** %wb, align 8, !dbg !16483
  %8 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16484
  %format_data2 = getelementptr inbounds %struct.archive_write, %struct.archive_write* %8, i32 0, i32 14, !dbg !16484
  %9 = load i8*, i8** %format_data2, align 8, !dbg !16484
  %10 = bitcast i8* %9 to %struct.iso9660*, !dbg !16484
  %wbuff_remaining = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 31, !dbg !16484
  %11 = load i64, i64* %wbuff_remaining, align 8, !dbg !16484
  store i64 %11, i64* %rsize, align 8, !dbg !16485
  %12 = load i64, i64* %rsize, align 8, !dbg !16486
  %13 = load i64, i64* %size.addr, align 8, !dbg !16488
  %cmp = icmp ugt i64 %12, %13, !dbg !16489
  br i1 %cmp, label %if.then, label %if.end, !dbg !16490

if.then:                                          ; preds = %while.body
  %14 = load i64, i64* %size.addr, align 8, !dbg !16491
  store i64 %14, i64* %rsize, align 8, !dbg !16492
  br label %if.end, !dbg !16493

if.end:                                           ; preds = %if.then, %while.body
  %15 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16494
  %temp_fd3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %15, i32 0, i32 1, !dbg !16495
  %16 = load i32, i32* %temp_fd3, align 8, !dbg !16495
  %17 = load i8*, i8** %wb, align 8, !dbg !16496
  %18 = load i64, i64* %rsize, align 8, !dbg !16497
  %call4 = call i64 @read(i32 %16, i8* %17, i64 %18), !dbg !16498
  store i64 %call4, i64* %rs, align 8, !dbg !16499
  %19 = load i64, i64* %rs, align 8, !dbg !16500
  %cmp5 = icmp sle i64 %19, 0, !dbg !16502
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !16503

if.then6:                                         ; preds = %if.end
  %20 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16504
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %20, i32 0, i32 0, !dbg !16506
  %call7 = call i32* @__errno_location() #1, !dbg !16507
  %21 = load i32, i32* %call7, align 4, !dbg !16507
  %22 = load i64, i64* %rs, align 8, !dbg !16508
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i32 0, i32 0), i64 %22), !dbg !16509
  store i32 -30, i32* %retval, align 4, !dbg !16511
  br label %return, !dbg !16511

if.end8:                                          ; preds = %if.end
  %23 = load i64, i64* %rs, align 8, !dbg !16512
  %24 = load i64, i64* %size.addr, align 8, !dbg !16513
  %sub = sub nsw i64 %24, %23, !dbg !16513
  store i64 %sub, i64* %size.addr, align 8, !dbg !16513
  %25 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16514
  %26 = load i64, i64* %rs, align 8, !dbg !16515
  %call9 = call i32 @wb_consume(%struct.archive_write* %25, i64 %26), !dbg !16516
  store i32 %call9, i32* %r, align 4, !dbg !16517
  %27 = load i32, i32* %r, align 4, !dbg !16518
  %cmp10 = icmp slt i32 %27, 0, !dbg !16520
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16521

if.then11:                                        ; preds = %if.end8
  %28 = load i32, i32* %r, align 4, !dbg !16522
  store i32 %28, i32* %retval, align 4, !dbg !16523
  br label %return, !dbg !16523

if.end12:                                         ; preds = %if.end8
  br label %while.cond, !dbg !16524

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !16526
  br label %return, !dbg !16526

return:                                           ; preds = %while.end, %if.then11, %if.then6
  %29 = load i32, i32* %retval, align 4, !dbg !16527
  ret i32 %29, !dbg !16527
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @archive_le16dec(i8* %pp) #7 !dbg !931 {
entry:
  %pp.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %p1 = alloca i32, align 4
  %p0 = alloca i32, align 4
  store i8* %pp, i8** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pp.addr, metadata !16528, metadata !986), !dbg !16529
  call void @llvm.dbg.declare(metadata i8** %p, metadata !16530, metadata !986), !dbg !16531
  %0 = load i8*, i8** %pp.addr, align 8, !dbg !16532
  store i8* %0, i8** %p, align 8, !dbg !16531
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !16533, metadata !986), !dbg !16534
  %1 = load i8*, i8** %p, align 8, !dbg !16535
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 1, !dbg !16535
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16535
  %conv = zext i8 %2 to i32, !dbg !16535
  store i32 %conv, i32* %p1, align 4, !dbg !16534
  call void @llvm.dbg.declare(metadata i32* %p0, metadata !16536, metadata !986), !dbg !16537
  %3 = load i8*, i8** %p, align 8, !dbg !16538
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !16538
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !16538
  %conv2 = zext i8 %4 to i32, !dbg !16538
  store i32 %conv2, i32* %p0, align 4, !dbg !16537
  %5 = load i32, i32* %p1, align 4, !dbg !16539
  %shl = shl i32 %5, 8, !dbg !16540
  %6 = load i32, i32* %p0, align 4, !dbg !16541
  %or = or i32 %shl, %6, !dbg !16542
  %conv3 = trunc i32 %or to i16, !dbg !16543
  ret i16 %conv3, !dbg !16544
}

declare i32 @close(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @zisofs_free(%struct.archive_write* %a) #0 !dbg !938 {
entry:
  %a.addr = alloca %struct.archive_write*, align 8
  %iso9660 = alloca %struct.iso9660*, align 8
  %ret = alloca i32, align 4
  store %struct.archive_write* %a, %struct.archive_write** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_write** %a.addr, metadata !16545, metadata !986), !dbg !16546
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660, metadata !16547, metadata !986), !dbg !16548
  %0 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16549
  %format_data = getelementptr inbounds %struct.archive_write, %struct.archive_write* %0, i32 0, i32 14, !dbg !16550
  %1 = load i8*, i8** %format_data, align 8, !dbg !16550
  %2 = bitcast i8* %1 to %struct.iso9660*, !dbg !16549
  store %struct.iso9660* %2, %struct.iso9660** %iso9660, align 8, !dbg !16548
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16551, metadata !986), !dbg !16552
  store i32 0, i32* %ret, align 4, !dbg !16552
  %3 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16553
  %zisofs = getelementptr inbounds %struct.iso9660, %struct.iso9660* %3, i32 0, i32 27, !dbg !16554
  %block_pointers = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs, i32 0, i32 3, !dbg !16555
  %4 = load i32*, i32** %block_pointers, align 8, !dbg !16555
  %5 = bitcast i32* %4 to i8*, !dbg !16553
  call void @free(i8* %5) #8, !dbg !16556
  %6 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16557
  %zisofs1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %6, i32 0, i32 27, !dbg !16559
  %stream_valid = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs1, i32 0, i32 10, !dbg !16560
  %7 = load i32, i32* %stream_valid, align 8, !dbg !16560
  %tobool = icmp ne i32 %7, 0, !dbg !16557
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !16561

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16562
  %zisofs2 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %8, i32 0, i32 27, !dbg !16563
  %stream = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs2, i32 0, i32 9, !dbg !16564
  %call = call i32 @cm_zlib_deflateEnd(%struct.z_stream_s* %stream), !dbg !16565
  %cmp = icmp ne i32 %call, 0, !dbg !16566
  br i1 %cmp, label %if.then, label %if.end, !dbg !16567

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.archive_write*, %struct.archive_write** %a.addr, align 8, !dbg !16569
  %archive = getelementptr inbounds %struct.archive_write, %struct.archive_write* %9, i32 0, i32 0, !dbg !16571
  call void (%struct.archive*, i32, i8*, ...) @archive_set_error(%struct.archive* %archive, i32 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i32 0, i32 0)), !dbg !16572
  store i32 -30, i32* %ret, align 4, !dbg !16573
  br label %if.end, !dbg !16574

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16575
  %zisofs3 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %10, i32 0, i32 27, !dbg !16576
  %block_pointers4 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs3, i32 0, i32 3, !dbg !16577
  store i32* null, i32** %block_pointers4, align 8, !dbg !16578
  %11 = load %struct.iso9660*, %struct.iso9660** %iso9660, align 8, !dbg !16579
  %zisofs5 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %11, i32 0, i32 27, !dbg !16580
  %stream_valid6 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %zisofs5, i32 0, i32 10, !dbg !16581
  store i32 0, i32* %stream_valid6, align 8, !dbg !16582
  %12 = load i32, i32* %ret, align 4, !dbg !16583
  ret i32 %12, !dbg !16584
}

; Function Attrs: nounwind uwtable
define internal void @isoent_free_all(%struct.isoent* %isoent) #0 !dbg !939 {
entry:
  %isoent.addr = alloca %struct.isoent*, align 8
  %np = alloca %struct.isoent*, align 8
  %np_temp = alloca %struct.isoent*, align 8
  store %struct.isoent* %isoent, %struct.isoent** %isoent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isoent** %isoent.addr, metadata !16585, metadata !986), !dbg !16586
  call void @llvm.dbg.declare(metadata %struct.isoent** %np, metadata !16587, metadata !986), !dbg !16588
  call void @llvm.dbg.declare(metadata %struct.isoent** %np_temp, metadata !16589, metadata !986), !dbg !16590
  %0 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16591
  %cmp = icmp eq %struct.isoent* %0, null, !dbg !16593
  br i1 %cmp, label %if.then, label %if.end, !dbg !16594

if.then:                                          ; preds = %entry
  br label %return, !dbg !16595

if.end:                                           ; preds = %entry
  %1 = load %struct.isoent*, %struct.isoent** %isoent.addr, align 8, !dbg !16596
  store %struct.isoent* %1, %struct.isoent** %np, align 8, !dbg !16597
  br label %for.cond, !dbg !16598

for.cond:                                         ; preds = %for.end, %if.then3, %if.end
  %2 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16599
  %dir = getelementptr inbounds %struct.isoent, %struct.isoent* %2, i32 0, i32 22, !dbg !16604
  %bf.load = load i8, i8* %dir, align 8, !dbg !16604
  %bf.shl = shl i8 %bf.load, 6, !dbg !16604
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !16604
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !16604
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !16599
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !16605

if.then1:                                         ; preds = %for.cond
  %3 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16606
  %children = getelementptr inbounds %struct.isoent, %struct.isoent* %3, i32 0, i32 3, !dbg !16609
  %first = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children, i32 0, i32 0, !dbg !16610
  %4 = load %struct.isoent*, %struct.isoent** %first, align 8, !dbg !16610
  %cmp2 = icmp ne %struct.isoent* %4, null, !dbg !16611
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !16612

if.then3:                                         ; preds = %if.then1
  %5 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16613
  %children4 = getelementptr inbounds %struct.isoent, %struct.isoent* %5, i32 0, i32 3, !dbg !16615
  %first5 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %children4, i32 0, i32 0, !dbg !16616
  %6 = load %struct.isoent*, %struct.isoent** %first5, align 8, !dbg !16616
  store %struct.isoent* %6, %struct.isoent** %np, align 8, !dbg !16617
  br label %for.cond, !dbg !16618

if.end6:                                          ; preds = %if.then1
  br label %if.end7, !dbg !16619

if.end7:                                          ; preds = %if.end6, %for.cond
  br label %for.cond8, !dbg !16620

for.cond8:                                        ; preds = %if.end15, %if.end7
  %7 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16621
  store %struct.isoent* %7, %struct.isoent** %np_temp, align 8, !dbg !16625
  %8 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16626
  %chnext = getelementptr inbounds %struct.isoent, %struct.isoent* %8, i32 0, i32 7, !dbg !16628
  %9 = load %struct.isoent*, %struct.isoent** %chnext, align 8, !dbg !16628
  %cmp9 = icmp eq %struct.isoent* %9, null, !dbg !16629
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !16630

if.then10:                                        ; preds = %for.cond8
  %10 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16631
  %parent = getelementptr inbounds %struct.isoent, %struct.isoent* %10, i32 0, i32 2, !dbg !16633
  %11 = load %struct.isoent*, %struct.isoent** %parent, align 8, !dbg !16633
  store %struct.isoent* %11, %struct.isoent** %np, align 8, !dbg !16634
  %12 = load %struct.isoent*, %struct.isoent** %np_temp, align 8, !dbg !16635
  call void @_isoent_free(%struct.isoent* %12), !dbg !16636
  %13 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16637
  %14 = load %struct.isoent*, %struct.isoent** %np_temp, align 8, !dbg !16639
  %cmp11 = icmp eq %struct.isoent* %13, %14, !dbg !16640
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !16641

if.then12:                                        ; preds = %if.then10
  br label %return, !dbg !16642

if.end13:                                         ; preds = %if.then10
  br label %if.end15, !dbg !16643

if.else:                                          ; preds = %for.cond8
  %15 = load %struct.isoent*, %struct.isoent** %np, align 8, !dbg !16644
  %chnext14 = getelementptr inbounds %struct.isoent, %struct.isoent* %15, i32 0, i32 7, !dbg !16646
  %16 = load %struct.isoent*, %struct.isoent** %chnext14, align 8, !dbg !16646
  store %struct.isoent* %16, %struct.isoent** %np, align 8, !dbg !16647
  %17 = load %struct.isoent*, %struct.isoent** %np_temp, align 8, !dbg !16648
  call void @_isoent_free(%struct.isoent* %17), !dbg !16649
  br label %for.end, !dbg !16650

if.end15:                                         ; preds = %if.end13
  br label %for.cond8, !dbg !16651

for.end:                                          ; preds = %if.else
  br label %for.cond, !dbg !16653

return:                                           ; preds = %if.then12, %if.then
  ret void, !dbg !16655
}

; Function Attrs: nounwind uwtable
define internal void @isofile_free_all_entries(%struct.iso9660* %iso9660) #0 !dbg !940 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %file = alloca %struct.isofile*, align 8
  %file_next = alloca %struct.isofile*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !16656, metadata !986), !dbg !16657
  call void @llvm.dbg.declare(metadata %struct.isofile** %file, metadata !16658, metadata !986), !dbg !16659
  call void @llvm.dbg.declare(metadata %struct.isofile** %file_next, metadata !16660, metadata !986), !dbg !16661
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !16662
  %all_file_list = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 11, !dbg !16663
  %first = getelementptr inbounds %struct.anon.4, %struct.anon.4* %all_file_list, i32 0, i32 0, !dbg !16664
  %1 = load %struct.isofile*, %struct.isofile** %first, align 8, !dbg !16664
  store %struct.isofile* %1, %struct.isofile** %file, align 8, !dbg !16665
  br label %while.cond, !dbg !16666

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16667
  %cmp = icmp ne %struct.isofile* %2, null, !dbg !16669
  br i1 %cmp, label %while.body, label %while.end, !dbg !16670

while.body:                                       ; preds = %while.cond
  %3 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16671
  %allnext = getelementptr inbounds %struct.isofile, %struct.isofile* %3, i32 0, i32 0, !dbg !16673
  %4 = load %struct.isofile*, %struct.isofile** %allnext, align 8, !dbg !16673
  store %struct.isofile* %4, %struct.isofile** %file_next, align 8, !dbg !16674
  %5 = load %struct.isofile*, %struct.isofile** %file, align 8, !dbg !16675
  call void @isofile_free(%struct.isofile* %5), !dbg !16676
  %6 = load %struct.isofile*, %struct.isofile** %file_next, align 8, !dbg !16677
  store %struct.isofile* %6, %struct.isofile** %file, align 8, !dbg !16678
  br label %while.cond, !dbg !16679

while.end:                                        ; preds = %while.cond
  ret void, !dbg !16681
}

; Function Attrs: nounwind uwtable
define internal void @isofile_free_hardlinks(%struct.iso9660* %iso9660) #0 !dbg !941 {
entry:
  %iso9660.addr = alloca %struct.iso9660*, align 8
  %n = alloca %struct.archive_rb_node*, align 8
  %next = alloca %struct.archive_rb_node*, align 8
  store %struct.iso9660* %iso9660, %struct.iso9660** %iso9660.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iso9660** %iso9660.addr, metadata !16682, metadata !986), !dbg !16683
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n, metadata !16684, metadata !986), !dbg !16685
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %next, metadata !16686, metadata !986), !dbg !16687
  %0 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !16688
  %hardlink_rbtree = getelementptr inbounds %struct.iso9660, %struct.iso9660* %0, i32 0, i32 13, !dbg !16688
  %call = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %hardlink_rbtree, %struct.archive_rb_node* null, i32 0), !dbg !16688
  store %struct.archive_rb_node* %call, %struct.archive_rb_node** %n, align 8, !dbg !16690
  br label %for.cond, !dbg !16691

for.cond:                                         ; preds = %for.body, %entry
  %1 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !16692
  %tobool = icmp ne %struct.archive_rb_node* %1, null, !dbg !16695
  br i1 %tobool, label %for.body, label %for.end, !dbg !16695

for.body:                                         ; preds = %for.cond
  %2 = load %struct.iso9660*, %struct.iso9660** %iso9660.addr, align 8, !dbg !16696
  %hardlink_rbtree1 = getelementptr inbounds %struct.iso9660, %struct.iso9660* %2, i32 0, i32 13, !dbg !16698
  %3 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !16699
  %call2 = call %struct.archive_rb_node* @__archive_rb_tree_iterate(%struct.archive_rb_tree* %hardlink_rbtree1, %struct.archive_rb_node* %3, i32 1), !dbg !16700
  store %struct.archive_rb_node* %call2, %struct.archive_rb_node** %next, align 8, !dbg !16701
  %4 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n, align 8, !dbg !16702
  %5 = bitcast %struct.archive_rb_node* %4 to i8*, !dbg !16702
  call void @free(i8* %5) #8, !dbg !16703
  %6 = load %struct.archive_rb_node*, %struct.archive_rb_node** %next, align 8, !dbg !16704
  store %struct.archive_rb_node* %6, %struct.archive_rb_node** %n, align 8, !dbg !16705
  br label %for.cond, !dbg !16706

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16708
}

declare i32 @cm_zlib_deflateEnd(%struct.z_stream_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @isofile_hd_cmp_node(%struct.archive_rb_node* %n1, %struct.archive_rb_node* %n2) #0 !dbg !945 {
entry:
  %n1.addr = alloca %struct.archive_rb_node*, align 8
  %n2.addr = alloca %struct.archive_rb_node*, align 8
  %h1 = alloca %struct.hardlink*, align 8
  %h2 = alloca %struct.hardlink*, align 8
  store %struct.archive_rb_node* %n1, %struct.archive_rb_node** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n1.addr, metadata !16709, metadata !986), !dbg !16710
  store %struct.archive_rb_node* %n2, %struct.archive_rb_node** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n2.addr, metadata !16711, metadata !986), !dbg !16712
  call void @llvm.dbg.declare(metadata %struct.hardlink** %h1, metadata !16713, metadata !986), !dbg !16714
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n1.addr, align 8, !dbg !16715
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.hardlink*, !dbg !16716
  store %struct.hardlink* %1, %struct.hardlink** %h1, align 8, !dbg !16714
  call void @llvm.dbg.declare(metadata %struct.hardlink** %h2, metadata !16717, metadata !986), !dbg !16718
  %2 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n2.addr, align 8, !dbg !16719
  %3 = bitcast %struct.archive_rb_node* %2 to %struct.hardlink*, !dbg !16720
  store %struct.hardlink* %3, %struct.hardlink** %h2, align 8, !dbg !16718
  %4 = load %struct.hardlink*, %struct.hardlink** %h1, align 8, !dbg !16721
  %file_list = getelementptr inbounds %struct.hardlink, %struct.hardlink* %4, i32 0, i32 2, !dbg !16722
  %first = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list, i32 0, i32 0, !dbg !16723
  %5 = load %struct.isofile*, %struct.isofile** %first, align 8, !dbg !16723
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %5, i32 0, i32 4, !dbg !16724
  %6 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !16724
  %call = call i8* @archive_entry_pathname(%struct.archive_entry* %6), !dbg !16725
  %7 = load %struct.hardlink*, %struct.hardlink** %h2, align 8, !dbg !16726
  %file_list2 = getelementptr inbounds %struct.hardlink, %struct.hardlink* %7, i32 0, i32 2, !dbg !16727
  %first3 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list2, i32 0, i32 0, !dbg !16728
  %8 = load %struct.isofile*, %struct.isofile** %first3, align 8, !dbg !16728
  %entry4 = getelementptr inbounds %struct.isofile, %struct.isofile* %8, i32 0, i32 4, !dbg !16729
  %9 = load %struct.archive_entry*, %struct.archive_entry** %entry4, align 8, !dbg !16729
  %call5 = call i8* @archive_entry_pathname(%struct.archive_entry* %9), !dbg !16730
  %call6 = call i32 @strcmp(i8* %call, i8* %call5) #9, !dbg !16731
  ret i32 %call6, !dbg !16732
}

; Function Attrs: nounwind uwtable
define internal i32 @isofile_hd_cmp_key(%struct.archive_rb_node* %n, i8* %key) #0 !dbg !946 {
entry:
  %n.addr = alloca %struct.archive_rb_node*, align 8
  %key.addr = alloca i8*, align 8
  %h = alloca %struct.hardlink*, align 8
  store %struct.archive_rb_node* %n, %struct.archive_rb_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.archive_rb_node** %n.addr, metadata !16733, metadata !986), !dbg !16734
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !16735, metadata !986), !dbg !16736
  call void @llvm.dbg.declare(metadata %struct.hardlink** %h, metadata !16737, metadata !986), !dbg !16738
  %0 = load %struct.archive_rb_node*, %struct.archive_rb_node** %n.addr, align 8, !dbg !16739
  %1 = bitcast %struct.archive_rb_node* %0 to %struct.hardlink*, !dbg !16740
  store %struct.hardlink* %1, %struct.hardlink** %h, align 8, !dbg !16738
  %2 = load %struct.hardlink*, %struct.hardlink** %h, align 8, !dbg !16741
  %file_list = getelementptr inbounds %struct.hardlink, %struct.hardlink* %2, i32 0, i32 2, !dbg !16742
  %first = getelementptr inbounds %struct.anon.8, %struct.anon.8* %file_list, i32 0, i32 0, !dbg !16743
  %3 = load %struct.isofile*, %struct.isofile** %first, align 8, !dbg !16743
  %entry1 = getelementptr inbounds %struct.isofile, %struct.isofile* %3, i32 0, i32 4, !dbg !16744
  %4 = load %struct.archive_entry*, %struct.archive_entry** %entry1, align 8, !dbg !16744
  %call = call i8* @archive_entry_pathname(%struct.archive_entry* %4), !dbg !16745
  %5 = load i8*, i8** %key.addr, align 8, !dbg !16746
  %call2 = call i32 @strcmp(i8* %call, i8* %5) #9, !dbg !16747
  ret i32 %call2, !dbg !16749
}

declare void @archive_entry_unset_mtime(%struct.archive_entry*) #2

declare void @archive_entry_unset_atime(%struct.archive_entry*) #2

declare void @archive_entry_unset_ctime(%struct.archive_entry*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!982, !983}
!llvm.ident = !{!984}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !366, subprograms: !568, globals: !950)
!1 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!2 = !{!3, !60, !65, !338, !344, !350, !356, !360}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !4, file: !1, line: 197, size: 32, align: 32, elements: !56)
!4 = !DICompositeType(tag: DW_TAG_structure_type, name: "isofile", file: !1, line: 160, size: 1600, align: 64, elements: !5)
!5 = !{!6, !8, !9, !10, !11, !15, !27, !28, !29, !30, !32, !46, !47, !48, !49}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "allnext", scope: !4, file: !1, line: 162, baseType: !7, size: 64, align: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "datanext", scope: !4, file: !1, line: 163, baseType: !7, size: 64, align: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "hlnext", scope: !4, file: !1, line: 165, baseType: !7, size: 64, align: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "hardlink_target", scope: !4, file: !1, line: 166, baseType: !7, size: 64, align: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4, file: !1, line: 168, baseType: !12, size: 64, align: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_entry", file: !14, line: 180, flags: DIFlagFwdDecl)
!14 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!15 = !DIDerivedType(tag: DW_TAG_member, name: "parentdir", scope: !4, file: !1, line: 173, baseType: !16, size: 192, align: 64, offset: 320)
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string", file: !17, line: 58, size: 192, align: 64, elements: !18)
!17 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_string.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!18 = !{!19, !22, !26}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !16, file: !17, line: 59, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !16, file: !17, line: 60, baseType: !23, size: 64, align: 64, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !24, line: 62, baseType: !25)
!24 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!25 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !16, file: !17, line: 61, baseType: !23, size: 64, align: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !4, file: !1, line: 174, baseType: !16, size: 192, align: 64, offset: 512)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "basename_utf16", scope: !4, file: !1, line: 175, baseType: !16, size: 192, align: 64, offset: 704)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4, file: !1, line: 176, baseType: !16, size: 192, align: 64, offset: 896)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "dircnt", scope: !4, file: !1, line: 177, baseType: !31, size: 32, align: 32, offset: 1088)
!31 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !4, file: !1, line: 194, baseType: !33, size: 256, align: 64, offset: 1152)
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: "content", file: !1, line: 183, size: 256, align: 64, elements: !34)
!34 = !{!35, !39, !40, !41, !44}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "offset_of_temp", scope: !33, file: !1, line: 184, baseType: !36, size: 64, align: 64)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !37, line: 40, baseType: !38)
!37 = !DIFile(filename: "/usr/include/stdint.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!38 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !33, file: !1, line: 185, baseType: !36, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !33, file: !1, line: 186, baseType: !31, size: 32, align: 32, offset: 128)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !33, file: !1, line: 187, baseType: !42, size: 32, align: 32, offset: 160)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !37, line: 51, baseType: !43)
!43 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !33, file: !1, line: 193, baseType: !45, size: 64, align: 64, offset: 192)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "cur_content", scope: !4, file: !1, line: 194, baseType: !45, size: 64, align: 64, offset: 1408)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "write_content", scope: !4, file: !1, line: 195, baseType: !31, size: 32, align: 32, offset: 1472)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "boot", scope: !4, file: !1, line: 201, baseType: !3, size: 32, align: 32, offset: 1504)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "zisofs", scope: !4, file: !1, line: 210, baseType: !50, size: 64, align: 32, offset: 1536)
!50 = !DICompositeType(tag: DW_TAG_structure_type, scope: !4, file: !1, line: 206, size: 64, align: 32, elements: !51)
!51 = !{!52, !54, !55}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !50, file: !1, line: 207, baseType: !53, size: 8, align: 8)
!53 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "log2_bs", scope: !50, file: !1, line: 208, baseType: !53, size: 8, align: 8, offset: 8)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_size", scope: !50, file: !1, line: 209, baseType: !42, size: 32, align: 32, offset: 32)
!56 = !{!57, !58, !59}
!57 = !DIEnumerator(name: "NO", value: 0)
!58 = !DIEnumerator(name: "BOOT_CATALOG", value: 1)
!59 = !DIEnumerator(name: "BOOT_IMAGE", value: 2)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vdd_type", file: !1, line: 720, size: 32, align: 32, elements: !61)
!61 = !{!62, !63, !64}
!62 = !DIEnumerator(name: "VDD_PRIMARY", value: 0)
!63 = !DIEnumerator(name: "VDD_JOLIET", value: 1)
!64 = !DIEnumerator(name: "VDD_ENHANCED", value: 2)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !66, file: !1, line: 799, size: 32, align: 32, elements: !335)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "iso9660", file: !1, line: 679, size: 531392, align: 64, elements: !67)
!67 = !{!68, !73, !74, !75, !170, !171, !173, !174, !175, !176, !180, !181, !187, !192, !193, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !284, !285, !286, !290, !291, !292, !293, !294, !295, !310}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "birth_time", scope: !66, file: !1, line: 681, baseType: !69, size: 64, align: 64)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !70, line: 75, baseType: !71)
!70 = !DIFile(filename: "/usr/include/time.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !72, line: 139, baseType: !38)
!72 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!73 = !DIDerivedType(tag: DW_TAG_member, name: "temp_fd", scope: !66, file: !1, line: 684, baseType: !31, size: 32, align: 32, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "cur_file", scope: !66, file: !1, line: 686, baseType: !7, size: 64, align: 64, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dirent", scope: !66, file: !1, line: 687, baseType: !76, size: 64, align: 64, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "isoent", file: !1, line: 213, size: 1920, align: 64, elements: !78)
!78 = !{!79, !90, !91, !92, !99, !124, !130, !131, !132, !133, !134, !135, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !168, !169}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !77, file: !1, line: 215, baseType: !80, size: 192, align: 64)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_node", file: !81, line: 34, size: 192, align: 64, elements: !82)
!81 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_rb.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!82 = !{!83, !88}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "rb_nodes", scope: !80, file: !81, line: 35, baseType: !84, size: 128, align: 64)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 128, align: 64, elements: !86)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!86 = !{!87}
!87 = !DISubrange(count: 2)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "rb_info", scope: !80, file: !81, line: 41, baseType: !89, size: 64, align: 64, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !37, line: 122, baseType: !25)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !77, file: !1, line: 217, baseType: !7, size: 64, align: 64, offset: 192)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !77, file: !1, line: 219, baseType: !76, size: 64, align: 64, offset: 256)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !77, file: !1, line: 225, baseType: !93, size: 192, align: 64, offset: 320)
!93 = !DICompositeType(tag: DW_TAG_structure_type, scope: !77, file: !1, line: 221, size: 192, align: 64, elements: !94)
!94 = !{!95, !96, !98}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !93, file: !1, line: 222, baseType: !76, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !93, file: !1, line: 223, baseType: !97, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !93, file: !1, line: 224, baseType: !31, size: 32, align: 32, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "rbtree", scope: !77, file: !1, line: 226, baseType: !100, size: 128, align: 64, offset: 512)
!100 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_tree", file: !81, line: 80, size: 128, align: 64, elements: !101)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "rbt_root", scope: !100, file: !81, line: 81, baseType: !85, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "rbt_ops", scope: !100, file: !81, line: 82, baseType: !104, size: 64, align: 64, offset: 64)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!106 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_rb_tree_ops", file: !81, line: 75, size: 128, align: 64, elements: !107)
!107 = !{!108, !116}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "rbto_compare_nodes", scope: !106, file: !81, line: 76, baseType: !109, size: 64, align: 64)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_rbto_compare_nodes_fn", file: !81, line: 70, baseType: !110)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64, align: 64)
!112 = !DISubroutineType(types: !113)
!113 = !{!31, !114, !114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64, align: 64)
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "rbto_compare_key", scope: !106, file: !81, line: 77, baseType: !117, size: 64, align: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_rbto_compare_key_fn", file: !81, line: 72, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DISubroutineType(types: !121)
!121 = !{!31, !114, !122}
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !77, file: !1, line: 233, baseType: !125, size: 192, align: 64, offset: 640)
!125 = !DICompositeType(tag: DW_TAG_structure_type, scope: !77, file: !1, line: 229, size: 192, align: 64, elements: !126)
!126 = !{!127, !128, !129}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !125, file: !1, line: 230, baseType: !76, size: 64, align: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !125, file: !1, line: 231, baseType: !97, size: 64, align: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !125, file: !1, line: 232, baseType: !31, size: 32, align: 32, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "children_sorted", scope: !77, file: !1, line: 235, baseType: !97, size: 64, align: 64, offset: 832)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "chnext", scope: !77, file: !1, line: 237, baseType: !76, size: 64, align: 64, offset: 896)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "drnext", scope: !77, file: !1, line: 238, baseType: !76, size: 64, align: 64, offset: 960)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "ptnext", scope: !77, file: !1, line: 239, baseType: !76, size: 64, align: 64, offset: 1024)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "dir_number", scope: !77, file: !1, line: 244, baseType: !31, size: 32, align: 32, offset: 1088)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "dr_len", scope: !77, file: !1, line: 250, baseType: !136, size: 128, align: 32, offset: 1120)
!136 = !DICompositeType(tag: DW_TAG_structure_type, scope: !77, file: !1, line: 245, size: 128, align: 32, elements: !137)
!137 = !{!138, !139, !140, !141}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !136, file: !1, line: 246, baseType: !31, size: 32, align: 32)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !136, file: !1, line: 247, baseType: !31, size: 32, align: 32, offset: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !136, file: !1, line: 248, baseType: !31, size: 32, align: 32, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "normal", scope: !136, file: !1, line: 249, baseType: !31, size: 32, align: 32, offset: 96)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "dir_location", scope: !77, file: !1, line: 251, baseType: !42, size: 32, align: 32, offset: 1248)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "dir_block", scope: !77, file: !1, line: 252, baseType: !31, size: 32, align: 32, offset: 1280)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !77, file: !1, line: 267, baseType: !20, size: 64, align: 64, offset: 1344)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "ext_off", scope: !77, file: !1, line: 268, baseType: !31, size: 32, align: 32, offset: 1408)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "ext_len", scope: !77, file: !1, line: 269, baseType: !31, size: 32, align: 32, offset: 1440)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !77, file: !1, line: 270, baseType: !31, size: 32, align: 32, offset: 1472)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "mb_len", scope: !77, file: !1, line: 271, baseType: !31, size: 32, align: 32, offset: 1504)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "rr_parent", scope: !77, file: !1, line: 277, baseType: !76, size: 64, align: 64, offset: 1536)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "rr_child", scope: !77, file: !1, line: 278, baseType: !76, size: 64, align: 64, offset: 1600)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "extr_rec_list", scope: !77, file: !1, line: 290, baseType: !152, size: 192, align: 64, offset: 1664)
!152 = !DICompositeType(tag: DW_TAG_structure_type, scope: !77, file: !1, line: 286, size: 192, align: 64, elements: !153)
!153 = !{!154, !165, !167}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !152, file: !1, line: 287, baseType: !155, size: 64, align: 64)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64, align: 64)
!156 = !DICompositeType(tag: DW_TAG_structure_type, name: "extr_rec", file: !1, line: 125, size: 16512, align: 64, elements: !157)
!157 = !{!158, !159, !160, !164}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !156, file: !1, line: 126, baseType: !31, size: 32, align: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !156, file: !1, line: 127, baseType: !31, size: 32, align: 32, offset: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !156, file: !1, line: 128, baseType: !161, size: 16384, align: 8, offset: 64)
!161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 16384, align: 8, elements: !162)
!162 = !{!163}
!163 = !DISubrange(count: 2048)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !156, file: !1, line: 129, baseType: !155, size: 64, align: 64, offset: 16448)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !152, file: !1, line: 288, baseType: !166, size: 64, align: 64, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !152, file: !1, line: 289, baseType: !155, size: 64, align: 64, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "virtual", scope: !77, file: !1, line: 292, baseType: !31, size: 1, align: 32, offset: 1856)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !77, file: !1, line: 297, baseType: !31, size: 1, align: 32, offset: 1857)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dirstr", scope: !66, file: !1, line: 688, baseType: !16, size: 192, align: 64, offset: 256)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_remaining", scope: !66, file: !1, line: 689, baseType: !172, size: 64, align: 64, offset: 448)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !37, line: 55, baseType: !25)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "need_multi_extent", scope: !66, file: !1, line: 690, baseType: !31, size: 32, align: 32, offset: 512)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "utf16be", scope: !66, file: !1, line: 693, baseType: !16, size: 192, align: 64, offset: 576)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "mbs", scope: !66, file: !1, line: 694, baseType: !16, size: 192, align: 64, offset: 768)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_to_utf16be", scope: !66, file: !1, line: 696, baseType: !177, size: 64, align: 64, offset: 960)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_string_conv", file: !179, line: 36, flags: DIFlagFwdDecl)
!179 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_entry_locale.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sconv_from_utf16be", scope: !66, file: !1, line: 697, baseType: !177, size: 64, align: 64, offset: 1024)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "all_file_list", scope: !66, file: !1, line: 703, baseType: !182, size: 128, align: 64, offset: 1088)
!182 = !DICompositeType(tag: DW_TAG_structure_type, scope: !66, file: !1, line: 700, size: 128, align: 64, elements: !183)
!183 = !{!184, !185}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !182, file: !1, line: 701, baseType: !7, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !182, file: !1, line: 702, baseType: !186, size: 64, align: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "data_file_list", scope: !66, file: !1, line: 711, baseType: !188, size: 128, align: 64, offset: 1216)
!188 = !DICompositeType(tag: DW_TAG_structure_type, scope: !66, file: !1, line: 708, size: 128, align: 64, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !188, file: !1, line: 709, baseType: !7, size: 64, align: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !188, file: !1, line: 710, baseType: !186, size: 64, align: 64, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "hardlink_rbtree", scope: !66, file: !1, line: 714, baseType: !100, size: 128, align: 64, offset: 1344)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !66, file: !1, line: 739, baseType: !194, size: 384, align: 64, offset: 1472)
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdd", file: !1, line: 717, size: 384, align: 64, elements: !195)
!195 = !{!196, !197, !198, !206, !207, !208, !209, !210, !211}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "rootent", scope: !194, file: !1, line: 719, baseType: !76, size: 64, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "vdd_type", scope: !194, file: !1, line: 724, baseType: !60, size: 32, align: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "pathtbl", scope: !194, file: !1, line: 731, baseType: !199, size: 64, align: 64, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!200 = !DICompositeType(tag: DW_TAG_structure_type, name: "path_table", file: !1, line: 726, size: 256, align: 64, elements: !201)
!201 = !{!202, !203, !204, !205}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !200, file: !1, line: 727, baseType: !76, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !200, file: !1, line: 728, baseType: !97, size: 64, align: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sorted", scope: !200, file: !1, line: 729, baseType: !97, size: 64, align: 64, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !200, file: !1, line: 730, baseType: !31, size: 32, align: 32, offset: 192)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !194, file: !1, line: 732, baseType: !31, size: 32, align: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "path_table_block", scope: !194, file: !1, line: 734, baseType: !31, size: 32, align: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "path_table_size", scope: !194, file: !1, line: 735, baseType: !31, size: 32, align: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "location_type_L_path_table", scope: !194, file: !1, line: 736, baseType: !31, size: 32, align: 32, offset: 288)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "location_type_M_path_table", scope: !194, file: !1, line: 737, baseType: !31, size: 32, align: 32, offset: 320)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "total_dir_block", scope: !194, file: !1, line: 738, baseType: !31, size: 32, align: 32, offset: 352)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "joliet", scope: !66, file: !1, line: 739, baseType: !194, size: 384, align: 64, offset: 1856)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "volume_space_size", scope: !66, file: !1, line: 742, baseType: !31, size: 32, align: 32, offset: 2240)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "volume_sequence_number", scope: !66, file: !1, line: 743, baseType: !31, size: 32, align: 32, offset: 2272)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "total_file_block", scope: !66, file: !1, line: 744, baseType: !31, size: 32, align: 32, offset: 2304)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "volume_identifier", scope: !66, file: !1, line: 745, baseType: !16, size: 192, align: 64, offset: 2368)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "publisher_identifier", scope: !66, file: !1, line: 746, baseType: !16, size: 192, align: 64, offset: 2560)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "data_preparer_identifier", scope: !66, file: !1, line: 747, baseType: !16, size: 192, align: 64, offset: 2752)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "application_identifier", scope: !66, file: !1, line: 748, baseType: !16, size: 192, align: 64, offset: 2944)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "copyright_file_identifier", scope: !66, file: !1, line: 749, baseType: !16, size: 192, align: 64, offset: 3136)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_file_identifier", scope: !66, file: !1, line: 750, baseType: !16, size: 192, align: 64, offset: 3328)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "bibliographic_file_identifier", scope: !66, file: !1, line: 751, baseType: !16, size: 192, align: 64, offset: 3520)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "location_rrip_er", scope: !66, file: !1, line: 754, baseType: !31, size: 32, align: 32, offset: 3712)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "zisofs", scope: !66, file: !1, line: 787, baseType: !225, size: 1984, align: 64, offset: 3776)
!225 = !DICompositeType(tag: DW_TAG_structure_type, scope: !66, file: !1, line: 757, size: 1984, align: 64, elements: !226)
!226 = !{!227, !228, !229, !230, !234, !235, !237, !238, !239, !240, !241, !242, !281, !282, !283}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "detect_magic", scope: !225, file: !1, line: 758, baseType: !31, size: 1, align: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "making", scope: !225, file: !1, line: 759, baseType: !31, size: 1, align: 32, offset: 1)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "allzero", scope: !225, file: !1, line: 760, baseType: !31, size: 1, align: 32, offset: 2)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "magic_buffer", scope: !225, file: !1, line: 761, baseType: !231, size: 512, align: 8, offset: 8)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 512, align: 8, elements: !232)
!232 = !{!233}
!233 = !DISubrange(count: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "magic_cnt", scope: !225, file: !1, line: 762, baseType: !31, size: 32, align: 32, offset: 544)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers", scope: !225, file: !1, line: 775, baseType: !236, size: 64, align: 64, offset: 576)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_allocated", scope: !225, file: !1, line: 776, baseType: !23, size: 64, align: 64, offset: 640)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_cnt", scope: !225, file: !1, line: 777, baseType: !31, size: 32, align: 32, offset: 704)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_idx", scope: !225, file: !1, line: 778, baseType: !31, size: 32, align: 32, offset: 736)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "total_size", scope: !225, file: !1, line: 779, baseType: !36, size: 64, align: 64, offset: 768)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "block_offset", scope: !225, file: !1, line: 780, baseType: !36, size: 64, align: 64, offset: 832)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !225, file: !1, line: 782, baseType: !243, size: 896, align: 64, offset: 896)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !244, line: 101, baseType: !245)
!244 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zlib.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !244, line: 82, size: 896, align: 64, elements: !246)
!246 = !{!247, !252, !254, !256, !257, !258, !259, !260, !265, !272, !277, !278, !279, !280}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !245, file: !244, line: 83, baseType: !248, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !250, line: 276, baseType: !251)
!250 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmzlib/zconf.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !250, line: 267, baseType: !53)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !245, file: !244, line: 84, baseType: !253, size: 32, align: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !250, line: 269, baseType: !43)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !245, file: !244, line: 85, baseType: !255, size: 64, align: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !250, line: 270, baseType: !25)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !245, file: !244, line: 87, baseType: !248, size: 64, align: 64, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !245, file: !244, line: 88, baseType: !253, size: 32, align: 32, offset: 256)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !245, file: !244, line: 89, baseType: !255, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !245, file: !244, line: 91, baseType: !20, size: 64, align: 64, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !245, file: !244, line: 92, baseType: !261, size: 64, align: 64, offset: 448)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64, align: 64)
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !244, line: 1346, size: 32, align: 32, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !262, file: !244, line: 1346, baseType: !31, size: 32, align: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !245, file: !244, line: 94, baseType: !266, size: 64, align: 64, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !244, line: 77, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{!270, !270, !253, !253}
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !250, line: 285, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !245, file: !244, line: 95, baseType: !273, size: 64, align: 64, offset: 576)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !244, line: 78, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !270, !270}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !245, file: !244, line: 96, baseType: !270, size: 64, align: 64, offset: 640)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !245, file: !244, line: 98, baseType: !31, size: 32, align: 32, offset: 704)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !245, file: !244, line: 99, baseType: !255, size: 64, align: 64, offset: 768)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !245, file: !244, line: 100, baseType: !255, size: 64, align: 64, offset: 832)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "stream_valid", scope: !225, file: !1, line: 783, baseType: !31, size: 32, align: 32, offset: 1792)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "remaining", scope: !225, file: !1, line: 784, baseType: !36, size: 64, align: 64, offset: 1856)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !225, file: !1, line: 785, baseType: !31, size: 32, align: 32, offset: 1920)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "directories_too_deep", scope: !66, file: !1, line: 789, baseType: !76, size: 64, align: 64, offset: 5760)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "dircnt_max", scope: !66, file: !1, line: 790, baseType: !31, size: 32, align: 32, offset: 5824)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff", scope: !66, file: !1, line: 797, baseType: !287, size: 524288, align: 8, offset: 5856)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 524288, align: 8, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 65536)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff_remaining", scope: !66, file: !1, line: 798, baseType: !23, size: 64, align: 64, offset: 530176)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff_type", scope: !66, file: !1, line: 802, baseType: !65, size: 32, align: 32, offset: 530240)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff_offset", scope: !66, file: !1, line: 803, baseType: !36, size: 64, align: 64, offset: 530304)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff_written", scope: !66, file: !1, line: 804, baseType: !36, size: 64, align: 64, offset: 530368)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "wbuff_tail", scope: !66, file: !1, line: 805, baseType: !36, size: 64, align: 64, offset: 530432)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "el_torito", scope: !66, file: !1, line: 831, baseType: !296, size: 832, align: 64, offset: 530496)
!296 = !DICompositeType(tag: DW_TAG_structure_type, scope: !66, file: !1, line: 808, size: 832, align: 64, elements: !297)
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306, !309}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "catalog_filename", scope: !296, file: !1, line: 810, baseType: !16, size: 192, align: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "catalog", scope: !296, file: !1, line: 811, baseType: !76, size: 64, align: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "boot_filename", scope: !296, file: !1, line: 813, baseType: !16, size: 192, align: 64, offset: 256)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "boot", scope: !296, file: !1, line: 814, baseType: !76, size: 64, align: 64, offset: 448)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !296, file: !1, line: 816, baseType: !53, size: 8, align: 8, offset: 512)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !296, file: !1, line: 820, baseType: !16, size: 192, align: 64, offset: 576)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "media_type", scope: !296, file: !1, line: 821, baseType: !53, size: 8, align: 8, offset: 768)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "system_type", scope: !296, file: !1, line: 827, baseType: !53, size: 8, align: 8, offset: 776)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "boot_load_seg", scope: !296, file: !1, line: 828, baseType: !307, size: 16, align: 16, offset: 784)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !37, line: 49, baseType: !308)
!308 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "boot_load_size", scope: !296, file: !1, line: 829, baseType: !307, size: 16, align: 16, offset: 800)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !66, file: !1, line: 833, baseType: !311, size: 32, align: 32, offset: 531328)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "iso_option", file: !1, line: 312, size: 32, align: 32, elements: !312)
!312 = !{!313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_file", scope: !311, file: !1, line: 323, baseType: !43, size: 1, align: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "application_id", scope: !311, file: !1, line: 340, baseType: !43, size: 1, align: 32, offset: 1)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "allow_vernum", scope: !311, file: !1, line: 353, baseType: !43, size: 1, align: 32, offset: 2)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "biblio_file", scope: !311, file: !1, line: 366, baseType: !43, size: 1, align: 32, offset: 3)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "boot", scope: !311, file: !1, line: 379, baseType: !43, size: 1, align: 32, offset: 4)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "boot_catalog", scope: !311, file: !1, line: 390, baseType: !43, size: 1, align: 32, offset: 5)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "boot_info_table", scope: !311, file: !1, line: 404, baseType: !43, size: 1, align: 32, offset: 6)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "boot_load_seg", scope: !311, file: !1, line: 416, baseType: !43, size: 1, align: 32, offset: 7)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "boot_load_size", scope: !311, file: !1, line: 428, baseType: !43, size: 1, align: 32, offset: 8)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "boot_type", scope: !311, file: !1, line: 452, baseType: !43, size: 2, align: 32, offset: 9)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !311, file: !1, line: 467, baseType: !43, size: 1, align: 32, offset: 11)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "copyright_file", scope: !311, file: !1, line: 480, baseType: !43, size: 1, align: 32, offset: 12)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !311, file: !1, line: 492, baseType: !43, size: 1, align: 32, offset: 13)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "iso_level", scope: !311, file: !1, line: 534, baseType: !43, size: 3, align: 32, offset: 14)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "joliet", scope: !311, file: !1, line: 555, baseType: !43, size: 2, align: 32, offset: 17)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !311, file: !1, line: 570, baseType: !43, size: 1, align: 32, offset: 19)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "limit_dirs", scope: !311, file: !1, line: 584, baseType: !43, size: 1, align: 32, offset: 20)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !311, file: !1, line: 595, baseType: !43, size: 1, align: 32, offset: 21)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "publisher", scope: !311, file: !1, line: 610, baseType: !43, size: 1, align: 32, offset: 22)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !311, file: !1, line: 636, baseType: !43, size: 2, align: 32, offset: 23)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "volume_id", scope: !311, file: !1, line: 650, baseType: !43, size: 1, align: 32, offset: 25)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "zisofs", scope: !311, file: !1, line: 672, baseType: !43, size: 1, align: 32, offset: 26)
!335 = !{!336, !337}
!336 = !DIEnumerator(name: "WB_TO_STREAM", value: 0)
!337 = !DIEnumerator(name: "WB_TO_TEMP", value: 1)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dir_rec_type", file: !1, line: 849, size: 32, align: 32, elements: !339)
!339 = !{!340, !341, !342, !343}
!340 = !DIEnumerator(name: "DIR_REC_VD", value: 0)
!341 = !DIEnumerator(name: "DIR_REC_SELF", value: 1)
!342 = !DIEnumerator(name: "DIR_REC_PARENT", value: 2)
!343 = !DIEnumerator(name: "DIR_REC_NORMAL", value: 3)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "VD_type", file: !1, line: 839, size: 32, align: 32, elements: !345)
!345 = !{!346, !347, !348, !349}
!346 = !DIEnumerator(name: "VDT_BOOT_RECORD", value: 0)
!347 = !DIEnumerator(name: "VDT_PRIMARY", value: 1)
!348 = !DIEnumerator(name: "VDT_SUPPLEMENTARY", value: 2)
!349 = !DIEnumerator(name: "VDT_TERMINATOR", value: 255)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vdc", file: !1, line: 859, size: 32, align: 32, elements: !351)
!351 = !{!352, !353, !354, !355}
!352 = !DIEnumerator(name: "VDC_STD", value: 0)
!353 = !DIEnumerator(name: "VDC_LOWERCASE", value: 1)
!354 = !DIEnumerator(name: "VDC_UCS2", value: 2)
!355 = !DIEnumerator(name: "VDC_UCS2_DIRECT", value: 3)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "char_type", file: !1, line: 898, size: 32, align: 32, elements: !357)
!357 = !{!358, !359}
!358 = !DIEnumerator(name: "A_CHAR", value: 0)
!359 = !DIEnumerator(name: "D_CHAR", value: 1)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "keytype", file: !1, line: 4004, size: 32, align: 32, elements: !361)
!361 = !{!362, !363, !364, !365}
!362 = !DIEnumerator(name: "KEY_FLG", value: 0)
!363 = !DIEnumerator(name: "KEY_STR", value: 1)
!364 = !DIEnumerator(name: "KEY_INT", value: 2)
!365 = !DIEnumerator(name: "KEY_HEX", value: 3)
!366 = !{!367, !271, !307, !528, !530, !531, !429, !76, !85, !31, !533, !42, !23, !543, !453, !544, !122, !36, !253, !248, !89, !396, !20, !545, !551, !53, !557, !562, !21, !172, !155, !563, !565, !566}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64, align: 64)
!368 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_write", file: !369, line: 72, size: 2816, align: 64, elements: !370)
!369 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_write_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!370 = !{!371, !449, !450, !451, !452, !455, !456, !461, !467, !470, !471, !472, !473, !499, !500, !501, !502, !506, !510, !511, !515, !519, !520, !521, !522, !527}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !368, file: !369, line: 73, baseType: !372, size: 1280, align: 64)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive", file: !373, line: 89, size: 1280, align: 64, elements: !374)
!373 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_private.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!374 = !{!375, !376, !377, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !372, file: !373, line: 96, baseType: !43, size: 32, align: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !372, file: !373, line: 97, baseType: !43, size: 32, align: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !372, file: !373, line: 103, baseType: !378, size: 64, align: 64, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64, align: 64)
!379 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_vtable", file: !373, line: 63, size: 832, align: 64, elements: !380)
!380 = !{!381, !386, !387, !391, !392, !399, !403, !408, !409, !416, !417, !421, !425}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "archive_close", scope: !379, file: !373, line: 64, baseType: !382, size: 64, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64, align: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{!31, !385}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "archive_free", scope: !379, file: !373, line: 65, baseType: !382, size: 64, align: 64, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_header", scope: !379, file: !373, line: 66, baseType: !388, size: 64, align: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{!31, !385, !12}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_finish_entry", scope: !379, file: !373, line: 68, baseType: !382, size: 64, align: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data", scope: !379, file: !373, line: 69, baseType: !393, size: 64, align: 64, offset: 256)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!396, !385, !122, !23}
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !397, line: 109, baseType: !398)
!397 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !72, line: 172, baseType: !38)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "archive_write_data_block", scope: !379, file: !373, line: 71, baseType: !400, size: 64, align: 64, offset: 320)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64, align: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!396, !385, !122, !23, !36}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header", scope: !379, file: !373, line: 74, baseType: !404, size: 64, align: 64, offset: 384)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!31, !385, !407}
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_next_header2", scope: !379, file: !373, line: 76, baseType: !388, size: 64, align: 64, offset: 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "archive_read_data_block", scope: !379, file: !373, line: 78, baseType: !410, size: 64, align: 64, offset: 512)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64, align: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{!31, !385, !413, !414, !415}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64, align: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_count", scope: !379, file: !373, line: 81, baseType: !382, size: 64, align: 64, offset: 576)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_bytes", scope: !379, file: !373, line: 82, baseType: !418, size: 64, align: 64, offset: 640)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{!36, !385, !31}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_code", scope: !379, file: !373, line: 83, baseType: !422, size: 64, align: 64, offset: 704)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64, align: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!31, !385, !31}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "archive_filter_name", scope: !379, file: !373, line: 84, baseType: !426, size: 64, align: 64, offset: 768)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64, align: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!429, !385, !31}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64, align: 64)
!430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format", scope: !372, file: !373, line: 105, baseType: !31, size: 32, align: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "archive_format_name", scope: !372, file: !373, line: 106, baseType: !429, size: 64, align: 64, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "compression_code", scope: !372, file: !373, line: 108, baseType: !31, size: 32, align: 32, offset: 256)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "compression_name", scope: !372, file: !373, line: 109, baseType: !429, size: 64, align: 64, offset: 320)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "file_count", scope: !372, file: !373, line: 112, baseType: !31, size: 32, align: 32, offset: 384)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "archive_error_number", scope: !372, file: !373, line: 114, baseType: !31, size: 32, align: 32, offset: 416)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !372, file: !373, line: 115, baseType: !429, size: 64, align: 64, offset: 448)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "error_string", scope: !372, file: !373, line: 116, baseType: !16, size: 192, align: 64, offset: 512)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "current_code", scope: !372, file: !373, line: 118, baseType: !20, size: 64, align: 64, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "current_codepage", scope: !372, file: !373, line: 119, baseType: !43, size: 32, align: 32, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "current_oemcp", scope: !372, file: !373, line: 120, baseType: !43, size: 32, align: 32, offset: 800)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "sconv", scope: !372, file: !373, line: 121, baseType: !177, size: 64, align: 64, offset: 832)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_block", scope: !372, file: !373, line: 127, baseType: !429, size: 64, align: 64, offset: 896)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_offset", scope: !372, file: !373, line: 128, baseType: !36, size: 64, align: 64, offset: 960)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_output_offset", scope: !372, file: !373, line: 129, baseType: !36, size: 64, align: 64, offset: 1024)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_remaining", scope: !372, file: !373, line: 130, baseType: !23, size: 64, align: 64, offset: 1088)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_is_posix_read", scope: !372, file: !373, line: 137, baseType: !21, size: 8, align: 8, offset: 1152)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_requested", scope: !372, file: !373, line: 138, baseType: !23, size: 64, align: 64, offset: 1216)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_set", scope: !368, file: !369, line: 76, baseType: !31, size: 32, align: 32, offset: 1280)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_dev", scope: !368, file: !369, line: 77, baseType: !36, size: 64, align: 64, offset: 1344)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "skip_file_ino", scope: !368, file: !369, line: 78, baseType: !36, size: 64, align: 64, offset: 1408)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "nulls", scope: !368, file: !369, line: 81, baseType: !453, size: 64, align: 64, offset: 1472)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "null_length", scope: !368, file: !369, line: 82, baseType: !23, size: 64, align: 64, offset: 1536)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "client_opener", scope: !368, file: !369, line: 85, baseType: !457, size: 64, align: 64, offset: 1600)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64, align: 64)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_open_callback", file: !14, line: 241, baseType: !459)
!459 = !DISubroutineType(types: !460)
!460 = !{!31, !385, !271}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "client_writer", scope: !368, file: !369, line: 86, baseType: !462, size: 64, align: 64, offset: 1664)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_write_callback", file: !14, line: 237, baseType: !464)
!464 = !DISubroutineType(types: !465)
!465 = !{!466, !385, !271, !122, !23}
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "la_ssize_t", file: !14, line: 95, baseType: !396)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "client_closer", scope: !368, file: !369, line: 87, baseType: !468, size: 64, align: 64, offset: 1728)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64, align: 64)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_close_callback", file: !14, line: 243, baseType: !459)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !368, file: !369, line: 88, baseType: !271, size: 64, align: 64, offset: 1792)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_per_block", scope: !368, file: !369, line: 96, baseType: !31, size: 32, align: 32, offset: 1856)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_in_last_block", scope: !368, file: !369, line: 97, baseType: !31, size: 32, align: 32, offset: 1888)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "filter_first", scope: !368, file: !369, line: 102, baseType: !474, size: 64, align: 64, offset: 1920)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64, align: 64)
!475 = !DICompositeType(tag: DW_TAG_structure_type, name: "archive_write_filter", file: !369, line: 43, size: 768, align: 64, elements: !476)
!476 = !{!477, !478, !479, !480, !484, !488, !492, !493, !494, !495, !496, !497, !498}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_written", scope: !475, file: !369, line: 44, baseType: !36, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "archive", scope: !475, file: !369, line: 45, baseType: !385, size: 64, align: 64, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "next_filter", scope: !475, file: !369, line: 46, baseType: !474, size: 64, align: 64, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !475, file: !369, line: 47, baseType: !481, size: 64, align: 64, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64, align: 64)
!482 = !DISubroutineType(types: !483)
!483 = !{!31, !474, !429, !429}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !475, file: !369, line: 49, baseType: !485, size: 64, align: 64, offset: 256)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64, align: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!31, !474}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !475, file: !369, line: 50, baseType: !489, size: 64, align: 64, offset: 320)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64, align: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!31, !474, !122, !23}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !475, file: !369, line: 51, baseType: !485, size: 64, align: 64, offset: 384)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !475, file: !369, line: 52, baseType: !485, size: 64, align: 64, offset: 448)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !475, file: !369, line: 53, baseType: !271, size: 64, align: 64, offset: 512)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !475, file: !369, line: 54, baseType: !429, size: 64, align: 64, offset: 576)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !475, file: !369, line: 55, baseType: !31, size: 32, align: 32, offset: 640)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_per_block", scope: !475, file: !369, line: 56, baseType: !31, size: 32, align: 32, offset: 672)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_in_last_block", scope: !475, file: !369, line: 57, baseType: !31, size: 32, align: 32, offset: 704)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "filter_last", scope: !368, file: !369, line: 103, baseType: !474, size: 64, align: 64, offset: 1984)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "format_data", scope: !368, file: !369, line: 109, baseType: !271, size: 64, align: 64, offset: 2048)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "format_name", scope: !368, file: !369, line: 110, baseType: !429, size: 64, align: 64, offset: 2112)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "format_init", scope: !368, file: !369, line: 111, baseType: !503, size: 64, align: 64, offset: 2176)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64, align: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!31, !367}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "format_options", scope: !368, file: !369, line: 112, baseType: !507, size: 64, align: 64, offset: 2240)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64, align: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!31, !367, !429, !429}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "format_finish_entry", scope: !368, file: !369, line: 114, baseType: !503, size: 64, align: 64, offset: 2304)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "format_write_header", scope: !368, file: !369, line: 115, baseType: !512, size: 64, align: 64, offset: 2368)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64, align: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!31, !367, !12}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "format_write_data", scope: !368, file: !369, line: 117, baseType: !516, size: 64, align: 64, offset: 2432)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64, align: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!396, !367, !122, !23}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "format_close", scope: !368, file: !369, line: 119, baseType: !503, size: 64, align: 64, offset: 2496)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "format_free", scope: !368, file: !369, line: 120, baseType: !503, size: 64, align: 64, offset: 2560)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase", scope: !368, file: !369, line: 126, baseType: !20, size: 64, align: 64, offset: 2624)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase_callback", scope: !368, file: !369, line: 127, baseType: !523, size: 64, align: 64, offset: 2688)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "archive_passphrase_callback", file: !14, line: 256, baseType: !525)
!525 = !DISubroutineType(types: !526)
!526 = !{!429, !385, !271}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "passphrase_client_data", scope: !368, file: !369, line: 128, baseType: !271, size: 64, align: 64, offset: 2752)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !397, line: 70, baseType: !529)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !72, line: 129, baseType: !43)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64, align: 64)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "hardlink", file: !1, line: 300, size: 384, align: 64, elements: !535)
!535 = !{!536, !537, !538}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !534, file: !1, line: 301, baseType: !80, size: 192, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !534, file: !1, line: 302, baseType: !31, size: 32, align: 32, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "file_list", scope: !534, file: !1, line: 306, baseType: !539, size: 128, align: 64, offset: 256)
!539 = !DICompositeType(tag: DW_TAG_structure_type, scope: !534, file: !1, line: 303, size: 128, align: 64, elements: !540)
!540 = !{!541, !542}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !539, file: !1, line: 304, baseType: !7, size: 64, align: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !539, file: !1, line: 305, baseType: !186, size: 64, align: 64, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !37, line: 134, baseType: !38)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !547)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "idrent", file: !1, line: 871, size: 512, align: 64, elements: !548)
!548 = !{!549, !550, !552, !553, !554, !555, !556}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !547, file: !1, line: 872, baseType: !80, size: 192, align: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "wnext", scope: !547, file: !1, line: 874, baseType: !551, size: 64, align: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !547, file: !1, line: 875, baseType: !551, size: 64, align: 64, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "isoent", scope: !547, file: !1, line: 877, baseType: !76, size: 64, align: 64, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !547, file: !1, line: 878, baseType: !31, size: 32, align: 32, offset: 384)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "noff", scope: !547, file: !1, line: 879, baseType: !31, size: 32, align: 32, offset: 416)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "rename_num", scope: !547, file: !1, line: 880, baseType: !31, size: 32, align: 32, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !558, line: 742, baseType: !559)
!558 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64, align: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!31, !122, !122}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64, align: 64)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64, align: 64)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !307)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64, align: 64)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!568 = !{!569, !571, !572, !576, !580, !581, !584, !587, !590, !593, !596, !597, !598, !601, !604, !607, !610, !613, !614, !615, !616, !619, !622, !623, !624, !627, !631, !632, !633, !636, !639, !640, !643, !644, !645, !646, !647, !650, !651, !652, !655, !656, !657, !676, !677, !678, !681, !684, !685, !689, !692, !695, !696, !699, !700, !703, !706, !709, !712, !734, !737, !740, !741, !744, !745, !748, !751, !754, !757, !760, !766, !769, !770, !771, !772, !773, !774, !775, !776, !779, !782, !783, !784, !787, !790, !793, !796, !799, !802, !803, !804, !807, !825, !828, !831, !832, !835, !850, !853, !856, !859, !862, !865, !866, !869, !872, !875, !878, !879, !880, !883, !886, !889, !892, !895, !898, !899, !900, !903, !904, !907, !910, !911, !912, !913, !916, !919, !922, !923, !924, !925, !928, !929, !930, !931, !934, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947}
!569 = distinct !DISubprogram(name: "archive_write_set_format_iso9660", scope: !1, file: !1, line: 1051, type: !383, isLocal: false, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!570 = !{}
!571 = distinct !DISubprogram(name: "iso9660_options", scope: !1, file: !1, line: 1251, type: !508, isLocal: true, isDefinition: true, scopeLine: 1252, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!572 = distinct !DISubprogram(name: "get_str_opt", scope: !1, file: !1, line: 1190, type: !573, isLocal: true, isDefinition: true, scopeLine: 1192, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!573 = !DISubroutineType(types: !574)
!574 = !{!31, !367, !575, !23, !429, !429}
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!576 = distinct !DISubprogram(name: "get_num_opt", scope: !1, file: !1, line: 1205, type: !577, isLocal: true, isDefinition: true, scopeLine: 1207, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!577 = !DISubroutineType(types: !578)
!578 = !{!31, !367, !579, !31, !31, !429, !429}
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!580 = distinct !DISubprogram(name: "iso9660_write_header", scope: !1, file: !1, line: 1522, type: !513, isLocal: true, isDefinition: true, scopeLine: 1523, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!581 = distinct !DISubprogram(name: "isofile_new", scope: !1, file: !1, line: 4626, type: !582, isLocal: true, isDefinition: true, scopeLine: 4627, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!582 = !DISubroutineType(types: !583)
!583 = !{!7, !367, !12}
!584 = distinct !DISubprogram(name: "isofile_gen_utility_names", scope: !1, file: !1, line: 4711, type: !585, isLocal: true, isDefinition: true, scopeLine: 4712, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!585 = !DISubroutineType(types: !586)
!586 = !{!31, !367, !7}
!587 = distinct !DISubprogram(name: "isofile_free", scope: !1, file: !1, line: 4652, type: !588, isLocal: true, isDefinition: true, scopeLine: 4653, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !7}
!590 = distinct !DISubprogram(name: "isofile_add_entry", scope: !1, file: !1, line: 4589, type: !591, isLocal: true, isDefinition: true, scopeLine: 4590, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!591 = !DISubroutineType(types: !592)
!592 = !{null, !530, !7}
!593 = distinct !DISubprogram(name: "isoent_new", scope: !1, file: !1, line: 5108, type: !594, isLocal: true, isDefinition: true, scopeLine: 5109, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!594 = !DISubroutineType(types: !595)
!595 = !{!76, !7}
!596 = distinct !DISubprogram(name: "isoent_cmp_node", scope: !1, file: !1, line: 5221, type: !112, isLocal: true, isDefinition: true, scopeLine: 5223, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!597 = distinct !DISubprogram(name: "isoent_cmp_key", scope: !1, file: !1, line: 5231, type: !120, isLocal: true, isDefinition: true, scopeLine: 5232, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!598 = distinct !DISubprogram(name: "isoent_tree", scope: !1, file: !1, line: 5550, type: !599, isLocal: true, isDefinition: true, scopeLine: 5551, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!599 = !DISubroutineType(types: !600)
!600 = !{!31, !367, !97}
!601 = distinct !DISubprogram(name: "isoent_add_child_tail", scope: !1, file: !1, line: 5264, type: !602, isLocal: true, isDefinition: true, scopeLine: 5265, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!602 = !DISubroutineType(types: !603)
!603 = !{!31, !76, !76}
!604 = distinct !DISubprogram(name: "get_path_component", scope: !1, file: !1, line: 5527, type: !605, isLocal: true, isDefinition: true, scopeLine: 5528, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!605 = !DISubroutineType(types: !606)
!606 = !{!31, !20, !23, !429}
!607 = distinct !DISubprogram(name: "_isoent_free", scope: !1, file: !1, line: 5140, type: !608, isLocal: true, isDefinition: true, scopeLine: 5141, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!608 = !DISubroutineType(types: !609)
!609 = !{null, !76}
!610 = distinct !DISubprogram(name: "isoent_find_child", scope: !1, file: !1, line: 5733, type: !611, isLocal: true, isDefinition: true, scopeLine: 5734, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!611 = !DISubroutineType(types: !612)
!612 = !{!76, !76, !429}
!613 = distinct !DISubprogram(name: "isofile_register_hardlink", scope: !1, file: !1, line: 4998, type: !585, isLocal: true, isDefinition: true, scopeLine: 4999, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!614 = distinct !DISubprogram(name: "zisofs_init", scope: !1, file: !1, line: 7416, type: !585, isLocal: true, isDefinition: true, scopeLine: 7417, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!615 = distinct !DISubprogram(name: "zisofs_init_zstream", scope: !1, file: !1, line: 7374, type: !504, isLocal: true, isDefinition: true, scopeLine: 7375, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!616 = distinct !DISubprogram(name: "write_null", scope: !1, file: !1, line: 3725, type: !617, isLocal: true, isDefinition: true, scopeLine: 3726, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!617 = !DISubroutineType(types: !618)
!618 = !{!31, !367, !23}
!619 = distinct !DISubprogram(name: "wb_buffptr", scope: !1, file: !1, line: 3612, type: !620, isLocal: true, isDefinition: true, scopeLine: 3613, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!620 = !DISubroutineType(types: !621)
!621 = !{!544, !367}
!622 = distinct !DISubprogram(name: "wb_consume", scope: !1, file: !1, line: 3646, type: !617, isLocal: true, isDefinition: true, scopeLine: 3647, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!623 = distinct !DISubprogram(name: "wb_write_out", scope: !1, file: !1, line: 3621, type: !504, isLocal: true, isDefinition: true, scopeLine: 3622, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!624 = distinct !DISubprogram(name: "write_to_temp", scope: !1, file: !1, line: 1640, type: !625, isLocal: true, isDefinition: true, scopeLine: 1641, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!625 = !DISubroutineType(types: !626)
!626 = !{!31, !367, !122, !23}
!627 = distinct !DISubprogram(name: "archive_le32enc", scope: !628, file: !628, line: 177, type: !629, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!628 = !DIFile(filename: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive/archive_endian.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!629 = !DISubroutineType(types: !630)
!630 = !{null, !271, !42}
!631 = distinct !DISubprogram(name: "iso9660_write_data", scope: !1, file: !1, line: 1789, type: !517, isLocal: true, isDefinition: true, scopeLine: 1790, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!632 = distinct !DISubprogram(name: "write_iso9660_data", scope: !1, file: !1, line: 1710, type: !517, isLocal: true, isDefinition: true, scopeLine: 1711, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!633 = distinct !DISubprogram(name: "zisofs_detect_magic", scope: !1, file: !1, line: 7505, type: !634, isLocal: true, isDefinition: true, scopeLine: 7506, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !367, !122, !23}
!636 = distinct !DISubprogram(name: "archive_le32dec", scope: !628, file: !628, line: 115, type: !637, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!637 = !DISubroutineType(types: !638)
!638 = !{!42, !122}
!639 = distinct !DISubprogram(name: "zisofs_write_to_temp", scope: !1, file: !1, line: 7597, type: !625, isLocal: true, isDefinition: true, scopeLine: 7598, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!640 = distinct !DISubprogram(name: "wb_set_offset", scope: !1, file: !1, line: 3667, type: !641, isLocal: true, isDefinition: true, scopeLine: 3668, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!641 = !DISubroutineType(types: !642)
!642 = !{!31, !367, !36}
!643 = distinct !DISubprogram(name: "wb_write_to_temp", scope: !1, file: !1, line: 1661, type: !625, isLocal: true, isDefinition: true, scopeLine: 1662, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!644 = distinct !DISubprogram(name: "wb_write_padding_to_temp", scope: !1, file: !1, line: 1696, type: !641, isLocal: true, isDefinition: true, scopeLine: 1697, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!645 = distinct !DISubprogram(name: "iso9660_finish_entry", scope: !1, file: !1, line: 1810, type: !504, isLocal: true, isDefinition: true, scopeLine: 1811, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!646 = distinct !DISubprogram(name: "zisofs_finish_entry", scope: !1, file: !1, line: 7710, type: !504, isLocal: true, isDefinition: true, scopeLine: 7711, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!647 = distinct !DISubprogram(name: "set_num_731", scope: !1, file: !1, line: 2460, type: !648, isLocal: true, isDefinition: true, scopeLine: 2461, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !544, !42}
!650 = distinct !DISubprogram(name: "isofile_add_data_file", scope: !1, file: !1, line: 4617, type: !591, isLocal: true, isDefinition: true, scopeLine: 4618, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!651 = distinct !DISubprogram(name: "iso9660_close", scope: !1, file: !1, line: 1852, type: !504, isLocal: true, isDefinition: true, scopeLine: 1853, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!652 = distinct !DISubprogram(name: "isoent_find_out_boot_file", scope: !1, file: !1, line: 7088, type: !653, isLocal: true, isDefinition: true, scopeLine: 7089, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!653 = !DISubroutineType(types: !654)
!654 = !{!31, !367, !76}
!655 = distinct !DISubprogram(name: "isoent_find_entry", scope: !1, file: !1, line: 5747, type: !611, isLocal: true, isDefinition: true, scopeLine: 5748, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!656 = distinct !DISubprogram(name: "zisofs_rewind_boot_file", scope: !1, file: !1, line: 8020, type: !504, isLocal: true, isDefinition: true, scopeLine: 8021, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!657 = distinct !DISubprogram(name: "zisofs_extract", scope: !1, file: !1, line: 7900, type: !658, isLocal: true, isDefinition: true, scopeLine: 7902, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!658 = !DISubroutineType(types: !659)
!659 = !{!396, !367, !660, !453, !23}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64, align: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "zisofs_extract", file: !1, line: 7799, size: 1536, align: 64, elements: !662)
!662 = !{!663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pz_log2_bs", scope: !661, file: !1, line: 7800, baseType: !31, size: 32, align: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "pz_uncompressed_size", scope: !661, file: !1, line: 7801, baseType: !172, size: 64, align: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "uncompressed_buffer_size", scope: !661, file: !1, line: 7802, baseType: !23, size: 64, align: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !661, file: !1, line: 7804, baseType: !31, size: 1, align: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "header_passed", scope: !661, file: !1, line: 7805, baseType: !31, size: 1, align: 32, offset: 193)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "pz_offset", scope: !661, file: !1, line: 7807, baseType: !42, size: 32, align: 32, offset: 224)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers", scope: !661, file: !1, line: 7808, baseType: !544, size: 64, align: 64, offset: 256)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_size", scope: !661, file: !1, line: 7809, baseType: !23, size: 64, align: 64, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "block_pointers_avail", scope: !661, file: !1, line: 7810, baseType: !23, size: 64, align: 64, offset: 384)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "block_off", scope: !661, file: !1, line: 7811, baseType: !23, size: 64, align: 64, offset: 448)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "block_avail", scope: !661, file: !1, line: 7812, baseType: !42, size: 32, align: 32, offset: 512)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !661, file: !1, line: 7814, baseType: !243, size: 896, align: 64, offset: 576)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "stream_valid", scope: !661, file: !1, line: 7815, baseType: !31, size: 32, align: 32, offset: 1472)
!676 = distinct !DISubprogram(name: "zisofs_extract_init", scope: !1, file: !1, line: 7819, type: !658, isLocal: true, isDefinition: true, scopeLine: 7821, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!677 = distinct !DISubprogram(name: "isoent_create_boot_catalog", scope: !1, file: !1, line: 7106, type: !653, isLocal: true, isDefinition: true, scopeLine: 7107, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!678 = distinct !DISubprogram(name: "isoent_clone_tree", scope: !1, file: !1, line: 5315, type: !679, isLocal: true, isDefinition: true, scopeLine: 5317, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!679 = !DISubroutineType(types: !680)
!680 = !{!31, !367, !97, !76}
!681 = distinct !DISubprogram(name: "isoent_clone", scope: !1, file: !1, line: 5134, type: !682, isLocal: true, isDefinition: true, scopeLine: 5135, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!682 = !DISubroutineType(types: !683)
!683 = !{!76, !76}
!684 = distinct !DISubprogram(name: "isoent_make_path_table", scope: !1, file: !1, line: 6987, type: !504, isLocal: true, isDefinition: true, scopeLine: 6988, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!685 = distinct !DISubprogram(name: "isoent_alloc_path_table", scope: !1, file: !1, line: 6962, type: !686, isLocal: true, isDefinition: true, scopeLine: 6964, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!686 = !DISubroutineType(types: !687)
!687 = !{!31, !367, !688, !31}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!689 = distinct !DISubprogram(name: "isoent_collect_dirs", scope: !1, file: !1, line: 6622, type: !690, isLocal: true, isDefinition: true, scopeLine: 6623, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!690 = !DISubroutineType(types: !691)
!691 = !{!31, !688, !76, !31}
!692 = distinct !DISubprogram(name: "path_table_add_entry", scope: !1, file: !1, line: 6888, type: !693, isLocal: true, isDefinition: true, scopeLine: 6889, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!693 = !DISubroutineType(types: !694)
!694 = !{null, !199, !76}
!695 = distinct !DISubprogram(name: "isoent_rr_move", scope: !1, file: !1, line: 6740, type: !504, isLocal: true, isDefinition: true, scopeLine: 6741, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!696 = distinct !DISubprogram(name: "isoent_remove_child", scope: !1, file: !1, line: 5288, type: !697, isLocal: true, isDefinition: true, scopeLine: 5289, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !76, !76}
!699 = distinct !DISubprogram(name: "isoent_add_child_head", scope: !1, file: !1, line: 5239, type: !602, isLocal: true, isDefinition: true, scopeLine: 5240, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!700 = distinct !DISubprogram(name: "path_table_last_entry", scope: !1, file: !1, line: 6897, type: !701, isLocal: true, isDefinition: true, scopeLine: 6898, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!701 = !DISubroutineType(types: !702)
!702 = !{!76, !199}
!703 = distinct !DISubprogram(name: "isoent_rr_move_dir", scope: !1, file: !1, line: 6659, type: !704, isLocal: true, isDefinition: true, scopeLine: 6661, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!704 = !DISubroutineType(types: !705)
!705 = !{!31, !367, !97, !76, !97}
!706 = distinct !DISubprogram(name: "isofile_connect_hardlink_files", scope: !1, file: !1, line: 5043, type: !707, isLocal: true, isDefinition: true, scopeLine: 5044, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !530}
!709 = distinct !DISubprogram(name: "isoent_traverse_tree", scope: !1, file: !1, line: 6549, type: !710, isLocal: true, isDefinition: true, scopeLine: 6550, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!710 = !DISubroutineType(types: !711)
!711 = !{!31, !367, !688}
!712 = distinct !DISubprogram(name: "idr_init", scope: !1, file: !1, line: 5807, type: !713, isLocal: true, isDefinition: true, scopeLine: 5808, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !530, !688, !715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64, align: 64)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1, line: 870, size: 1472, align: 64, elements: !717)
!717 = !{!718, !719, !720, !726, !727, !728, !729, !730}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "idrent_pool", scope: !716, file: !1, line: 881, baseType: !551, size: 64, align: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "rbtree", scope: !716, file: !1, line: 883, baseType: !100, size: 128, align: 64, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !716, file: !1, line: 888, baseType: !721, size: 128, align: 64, offset: 192)
!721 = !DICompositeType(tag: DW_TAG_structure_type, scope: !716, file: !1, line: 885, size: 128, align: 64, elements: !722)
!722 = !{!723, !724}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !721, file: !1, line: 886, baseType: !551, size: 64, align: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !721, file: !1, line: 887, baseType: !725, size: 64, align: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64, align: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "pool_size", scope: !716, file: !1, line: 890, baseType: !31, size: 32, align: 32, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "pool_idx", scope: !716, file: !1, line: 891, baseType: !31, size: 32, align: 32, offset: 352)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "num_size", scope: !716, file: !1, line: 892, baseType: !31, size: 32, align: 32, offset: 384)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "null_size", scope: !716, file: !1, line: 893, baseType: !31, size: 32, align: 32, offset: 416)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "char_map", scope: !716, file: !1, line: 895, baseType: !731, size: 1024, align: 8, offset: 448)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 1024, align: 8, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 128)
!734 = distinct !DISubprogram(name: "idr_relaxed_filenames", scope: !1, file: !1, line: 5791, type: !735, isLocal: true, isDefinition: true, scopeLine: 5792, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !20}
!737 = distinct !DISubprogram(name: "isoent_gen_joliet_identifier", scope: !1, file: !1, line: 6224, type: !738, isLocal: true, isDefinition: true, scopeLine: 6226, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!738 = !DISubroutineType(types: !739)
!739 = !{!31, !367, !76, !715}
!740 = distinct !DISubprogram(name: "isoent_cmp_node_joliet", scope: !1, file: !1, line: 6504, type: !112, isLocal: true, isDefinition: true, scopeLine: 6506, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!741 = distinct !DISubprogram(name: "isoent_cmp_joliet_identifier", scope: !1, file: !1, line: 6436, type: !742, isLocal: true, isDefinition: true, scopeLine: 6437, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!742 = !DISubroutineType(types: !743)
!743 = !{!31, !531, !531}
!744 = distinct !DISubprogram(name: "isoent_cmp_key_joliet", scope: !1, file: !1, line: 6514, type: !120, isLocal: true, isDefinition: true, scopeLine: 6515, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!745 = distinct !DISubprogram(name: "idr_start", scope: !1, file: !1, line: 5854, type: !746, isLocal: true, isDefinition: true, scopeLine: 5856, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!746 = !DISubroutineType(types: !747)
!747 = !{!31, !367, !715, !31, !31, !31, !31, !104}
!748 = distinct !DISubprogram(name: "idr_ensure_poolsize", scope: !1, file: !1, line: 5831, type: !749, isLocal: true, isDefinition: true, scopeLine: 5833, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!749 = !DISubroutineType(types: !750)
!750 = !{!31, !367, !715, !31}
!751 = distinct !DISubprogram(name: "joliet_allowed_char", scope: !1, file: !1, line: 2212, type: !752, isLocal: true, isDefinition: true, scopeLine: 2213, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!752 = !DISubroutineType(types: !753)
!753 = !{!31, !53, !53}
!754 = distinct !DISubprogram(name: "archive_be16enc", scope: !628, file: !628, line: 139, type: !755, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!755 = !DISubroutineType(types: !756)
!756 = !{null, !271, !307}
!757 = distinct !DISubprogram(name: "idr_register", scope: !1, file: !1, line: 5874, type: !758, isLocal: true, isDefinition: true, scopeLine: 5875, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !715, !76, !31, !31}
!760 = distinct !DISubprogram(name: "idr_resolve", scope: !1, file: !1, line: 5915, type: !761, isLocal: true, isDefinition: true, scopeLine: 5916, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!761 = !DISubroutineType(types: !762)
!762 = !{null, !715, !763}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64, align: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !544, !31}
!766 = distinct !DISubprogram(name: "idr_extend_identifier", scope: !1, file: !1, line: 5898, type: !767, isLocal: true, isDefinition: true, scopeLine: 5899, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !551, !31, !31}
!769 = distinct !DISubprogram(name: "idr_set_num_beutf16", scope: !1, file: !1, line: 5949, type: !764, isLocal: true, isDefinition: true, scopeLine: 5950, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!770 = distinct !DISubprogram(name: "isoent_gen_iso9660_identifier", scope: !1, file: !1, line: 5974, type: !738, isLocal: true, isDefinition: true, scopeLine: 5976, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!771 = distinct !DISubprogram(name: "isoent_cmp_node_iso9660", scope: !1, file: !1, line: 6417, type: !112, isLocal: true, isDefinition: true, scopeLine: 6419, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!772 = distinct !DISubprogram(name: "isoent_cmp_iso9660_identifier", scope: !1, file: !1, line: 6345, type: !742, isLocal: true, isDefinition: true, scopeLine: 6346, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!773 = distinct !DISubprogram(name: "isoent_cmp_key_iso9660", scope: !1, file: !1, line: 6427, type: !120, isLocal: true, isDefinition: true, scopeLine: 6428, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!774 = distinct !DISubprogram(name: "idr_set_num", scope: !1, file: !1, line: 5931, type: !764, isLocal: true, isDefinition: true, scopeLine: 5932, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!775 = distinct !DISubprogram(name: "isoent_make_sorted_files", scope: !1, file: !1, line: 6523, type: !738, isLocal: true, isDefinition: true, scopeLine: 6525, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!776 = distinct !DISubprogram(name: "idr_cleanup", scope: !1, file: !1, line: 5825, type: !777, isLocal: true, isDefinition: true, scopeLine: 5826, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !715}
!779 = distinct !DISubprogram(name: "isoent_make_path_table_2", scope: !1, file: !1, line: 6910, type: !780, isLocal: true, isDefinition: true, scopeLine: 6912, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!780 = !DISubroutineType(types: !781)
!781 = !{!31, !367, !688, !31, !579}
!782 = distinct !DISubprogram(name: "_compare_path_table", scope: !1, file: !1, line: 6806, type: !560, isLocal: true, isDefinition: true, scopeLine: 6807, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!783 = distinct !DISubprogram(name: "_compare_path_table_joliet", scope: !1, file: !1, line: 6848, type: !560, isLocal: true, isDefinition: true, scopeLine: 6849, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!784 = distinct !DISubprogram(name: "calculate_path_table_size", scope: !1, file: !1, line: 4203, type: !785, isLocal: true, isDefinition: true, scopeLine: 4204, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !688}
!787 = distinct !DISubprogram(name: "isoent_setup_directory_location", scope: !1, file: !1, line: 5359, type: !788, isLocal: true, isDefinition: true, scopeLine: 5361, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!788 = !DISubroutineType(types: !789)
!789 = !{null, !530, !31, !688}
!790 = distinct !DISubprogram(name: "calculate_directory_descriptors", scope: !1, file: !1, line: 4329, type: !791, isLocal: true, isDefinition: true, scopeLine: 4331, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!791 = !DISubroutineType(types: !792)
!792 = !{!31, !530, !688, !76, !31}
!793 = distinct !DISubprogram(name: "get_dir_rec_size", scope: !1, file: !1, line: 3597, type: !794, isLocal: true, isDefinition: true, scopeLine: 3599, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!794 = !DISubroutineType(types: !795)
!795 = !{!31, !530, !76, !338, !60}
!796 = distinct !DISubprogram(name: "set_directory_record", scope: !1, file: !1, line: 3437, type: !797, isLocal: true, isDefinition: true, scopeLine: 3440, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!797 = !DISubroutineType(types: !798)
!798 = !{!31, !544, !23, !76, !530, !338, !60}
!799 = distinct !DISubprogram(name: "set_num_711", scope: !1, file: !1, line: 2409, type: !800, isLocal: true, isDefinition: true, scopeLine: 2410, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!800 = !DISubroutineType(types: !801)
!801 = !{null, !544, !53}
!802 = distinct !DISubprogram(name: "set_num_733", scope: !1, file: !1, line: 2480, type: !648, isLocal: true, isDefinition: true, scopeLine: 2481, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!803 = distinct !DISubprogram(name: "archive_be32enc", scope: !628, file: !628, line: 148, type: !629, isLocal: true, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!804 = distinct !DISubprogram(name: "set_time_915", scope: !1, file: !1, line: 2562, type: !805, isLocal: true, isDefinition: true, scopeLine: 2563, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !544, !69}
!807 = distinct !DISubprogram(name: "get_tmfromtime", scope: !1, file: !1, line: 2521, type: !808, isLocal: true, isDefinition: true, scopeLine: 2522, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!808 = !DISubroutineType(types: !809)
!809 = !{null, !810, !824}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64, align: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !70, line: 133, size: 448, align: 64, elements: !812)
!812 = !{!813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !811, file: !70, line: 135, baseType: !31, size: 32, align: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !811, file: !70, line: 136, baseType: !31, size: 32, align: 32, offset: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !811, file: !70, line: 137, baseType: !31, size: 32, align: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !811, file: !70, line: 138, baseType: !31, size: 32, align: 32, offset: 96)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !811, file: !70, line: 139, baseType: !31, size: 32, align: 32, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !811, file: !70, line: 140, baseType: !31, size: 32, align: 32, offset: 160)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !811, file: !70, line: 141, baseType: !31, size: 32, align: 32, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !811, file: !70, line: 142, baseType: !31, size: 32, align: 32, offset: 224)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !811, file: !70, line: 143, baseType: !31, size: 32, align: 32, offset: 256)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !811, file: !70, line: 146, baseType: !38, size: 64, align: 64, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !811, file: !70, line: 147, baseType: !429, size: 64, align: 64, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64, align: 64)
!825 = distinct !DISubprogram(name: "set_num_712", scope: !1, file: !1, line: 2419, type: !826, isLocal: true, isDefinition: true, scopeLine: 2420, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!826 = !DISubroutineType(types: !827)
!827 = !{null, !544, !21}
!828 = distinct !DISubprogram(name: "set_num_723", scope: !1, file: !1, line: 2449, type: !829, isLocal: true, isDefinition: true, scopeLine: 2450, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !544, !307}
!831 = distinct !DISubprogram(name: "archive_le16enc", scope: !628, file: !628, line: 168, type: !755, isLocal: true, isDefinition: true, scopeLine: 169, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!832 = distinct !DISubprogram(name: "set_directory_record_rr", scope: !1, file: !1, line: 2786, type: !833, isLocal: true, isDefinition: true, scopeLine: 2788, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!833 = !DISubroutineType(types: !834)
!834 = !{!31, !544, !31, !76, !530, !338}
!835 = distinct !DISubprogram(name: "extra_open_record", scope: !1, file: !1, line: 2618, type: !836, isLocal: true, isDefinition: true, scopeLine: 2620, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!836 = !DISubroutineType(types: !837)
!837 = !{!544, !544, !31, !76, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64, align: 64)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_extr_rec", file: !1, line: 132, size: 448, align: 64, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848, !849}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "use_extr", scope: !839, file: !1, line: 133, baseType: !31, size: 32, align: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !839, file: !1, line: 134, baseType: !544, size: 64, align: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "isoent", scope: !839, file: !1, line: 135, baseType: !76, size: 64, align: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ce_ptr", scope: !839, file: !1, line: 136, baseType: !544, size: 64, align: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "cur_len", scope: !839, file: !1, line: 137, baseType: !31, size: 32, align: 32, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "dr_len", scope: !839, file: !1, line: 138, baseType: !31, size: 32, align: 32, offset: 288)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !839, file: !1, line: 139, baseType: !31, size: 32, align: 32, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "extr_off", scope: !839, file: !1, line: 140, baseType: !31, size: 32, align: 32, offset: 352)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "extr_loc", scope: !839, file: !1, line: 141, baseType: !31, size: 32, align: 32, offset: 384)
!850 = distinct !DISubprogram(name: "extra_tell_used_size", scope: !1, file: !1, line: 2750, type: !851, isLocal: true, isDefinition: true, scopeLine: 2751, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!851 = !DISubroutineType(types: !852)
!852 = !{null, !838, !31}
!853 = distinct !DISubprogram(name: "extra_next_record", scope: !1, file: !1, line: 2658, type: !854, isLocal: true, isDefinition: true, scopeLine: 2659, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!854 = !DISubroutineType(types: !855)
!855 = !{!544, !838, !31}
!856 = distinct !DISubprogram(name: "extra_get_record", scope: !1, file: !1, line: 2701, type: !857, isLocal: true, isDefinition: true, scopeLine: 2702, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!857 = !DISubroutineType(types: !858)
!858 = !{!544, !76, !579, !579, !579}
!859 = distinct !DISubprogram(name: "extra_last_record", scope: !1, file: !1, line: 2691, type: !860, isLocal: true, isDefinition: true, scopeLine: 2692, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!860 = !DISubroutineType(types: !861)
!861 = !{!155, !76}
!862 = distinct !DISubprogram(name: "set_SUSP_CE", scope: !1, file: !1, line: 2581, type: !863, isLocal: true, isDefinition: true, scopeLine: 2582, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!863 = !DISubroutineType(types: !864)
!864 = !{!31, !544, !31, !31, !31}
!865 = distinct !DISubprogram(name: "extra_close_record", scope: !1, file: !1, line: 2634, type: !851, isLocal: true, isDefinition: true, scopeLine: 2635, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!866 = distinct !DISubprogram(name: "extra_setup_location", scope: !1, file: !1, line: 2765, type: !867, isLocal: true, isDefinition: true, scopeLine: 2766, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!867 = !DISubroutineType(types: !868)
!868 = !{!31, !76, !31}
!869 = distinct !DISubprogram(name: "isoent_setup_file_location", scope: !1, file: !1, line: 5440, type: !870, isLocal: true, isDefinition: true, scopeLine: 5441, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !530, !31}
!872 = distinct !DISubprogram(name: "fd_boot_image_size", scope: !1, file: !1, line: 7228, type: !873, isLocal: true, isDefinition: true, scopeLine: 7229, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!873 = !DISubroutineType(types: !874)
!874 = !{!23, !31}
!875 = distinct !DISubprogram(name: "_isoent_file_location", scope: !1, file: !1, line: 5400, type: !876, isLocal: true, isDefinition: true, scopeLine: 5402, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !530, !76, !579}
!878 = distinct !DISubprogram(name: "setup_boot_information", scope: !1, file: !1, line: 7313, type: !504, isLocal: true, isDefinition: true, scopeLine: 7314, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!879 = distinct !DISubprogram(name: "write_VD", scope: !1, file: !1, line: 3834, type: !710, isLocal: true, isDefinition: true, scopeLine: 3835, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!880 = distinct !DISubprogram(name: "set_VD_bp", scope: !1, file: !1, line: 2387, type: !881, isLocal: true, isDefinition: true, scopeLine: 2388, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !544, !344, !53}
!883 = distinct !DISubprogram(name: "set_unused_field_bp", scope: !1, file: !1, line: 2399, type: !884, isLocal: true, isDefinition: true, scopeLine: 2400, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!884 = !DISubroutineType(types: !885)
!885 = !{null, !544, !31, !31}
!886 = distinct !DISubprogram(name: "get_system_identitier", scope: !1, file: !1, line: 2169, type: !887, isLocal: true, isDefinition: true, scopeLine: 2170, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!887 = !DISubroutineType(types: !888)
!888 = !{null, !20, !23}
!889 = distinct !DISubprogram(name: "set_str_a_characters_bp", scope: !1, file: !1, line: 2331, type: !890, isLocal: true, isDefinition: true, scopeLine: 2333, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!890 = !DISubroutineType(types: !891)
!891 = !{!31, !367, !544, !31, !31, !429, !350}
!892 = distinct !DISubprogram(name: "set_str", scope: !1, file: !1, line: 2186, type: !893, isLocal: true, isDefinition: true, scopeLine: 2187, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !544, !429, !23, !21, !429}
!895 = distinct !DISubprogram(name: "set_str_utf16be", scope: !1, file: !1, line: 2232, type: !896, isLocal: true, isDefinition: true, scopeLine: 2234, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!896 = !DISubroutineType(types: !897)
!897 = !{!31, !367, !544, !429, !23, !307, !350}
!898 = distinct !DISubprogram(name: "set_str_d_characters_bp", scope: !1, file: !1, line: 2359, type: !890, isLocal: true, isDefinition: true, scopeLine: 2361, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!899 = distinct !DISubprogram(name: "set_num_732", scope: !1, file: !1, line: 2470, type: !648, isLocal: true, isDefinition: true, scopeLine: 2471, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!900 = distinct !DISubprogram(name: "set_file_identifier", scope: !1, file: !1, line: 3775, type: !901, isLocal: true, isDefinition: true, scopeLine: 3778, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!901 = !DISubroutineType(types: !902)
!902 = !{!31, !544, !31, !31, !350, !367, !688, !575, !429, !31, !356}
!903 = distinct !DISubprogram(name: "set_date_time", scope: !1, file: !1, line: 2539, type: !805, isLocal: true, isDefinition: true, scopeLine: 2540, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!904 = distinct !DISubprogram(name: "set_digit", scope: !1, file: !1, line: 2487, type: !905, isLocal: true, isDefinition: true, scopeLine: 2488, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !544, !23, !31}
!907 = distinct !DISubprogram(name: "set_date_time_null", scope: !1, file: !1, line: 2555, type: !908, isLocal: true, isDefinition: true, scopeLine: 2556, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !544}
!910 = distinct !DISubprogram(name: "write_VD_boot_record", scope: !1, file: !1, line: 3981, type: !504, isLocal: true, isDefinition: true, scopeLine: 3982, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!911 = distinct !DISubprogram(name: "write_VD_terminator", scope: !1, file: !1, line: 3763, type: !504, isLocal: true, isDefinition: true, scopeLine: 3764, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!912 = distinct !DISubprogram(name: "write_information_block", scope: !1, file: !1, line: 4052, type: !504, isLocal: true, isDefinition: true, scopeLine: 4053, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!913 = distinct !DISubprogram(name: "set_option_info", scope: !1, file: !1, line: 4011, type: !914, isLocal: true, isDefinition: true, scopeLine: 4013, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !575, !579, !429, !360, null}
!916 = distinct !DISubprogram(name: "write_path_table", scope: !1, file: !1, line: 4307, type: !917, isLocal: true, isDefinition: true, scopeLine: 4308, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!917 = !DISubroutineType(types: !918)
!918 = !{!31, !367, !31, !688}
!919 = distinct !DISubprogram(name: "_write_path_table", scope: !1, file: !1, line: 4238, type: !920, isLocal: true, isDefinition: true, scopeLine: 4240, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!920 = !DISubroutineType(types: !921)
!921 = !{!31, !367, !31, !31, !688}
!922 = distinct !DISubprogram(name: "set_num_722", scope: !1, file: !1, line: 2439, type: !829, isLocal: true, isDefinition: true, scopeLine: 2440, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!923 = distinct !DISubprogram(name: "set_num_721", scope: !1, file: !1, line: 2429, type: !829, isLocal: true, isDefinition: true, scopeLine: 2430, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!924 = distinct !DISubprogram(name: "write_directory_descriptors", scope: !1, file: !1, line: 4422, type: !710, isLocal: true, isDefinition: true, scopeLine: 4423, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!925 = distinct !DISubprogram(name: "_write_directory_descriptors", scope: !1, file: !1, line: 4369, type: !926, isLocal: true, isDefinition: true, scopeLine: 4371, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!926 = !DISubroutineType(types: !927)
!927 = !{!31, !367, !688, !76, !31}
!928 = distinct !DISubprogram(name: "write_rr_ER", scope: !1, file: !1, line: 4180, type: !504, isLocal: true, isDefinition: true, scopeLine: 4181, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!929 = distinct !DISubprogram(name: "write_file_descriptors", scope: !1, file: !1, line: 4511, type: !504, isLocal: true, isDefinition: true, scopeLine: 4512, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!930 = distinct !DISubprogram(name: "make_boot_catalog", scope: !1, file: !1, line: 7246, type: !504, isLocal: true, isDefinition: true, scopeLine: 7247, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!931 = distinct !DISubprogram(name: "archive_le16dec", scope: !628, file: !628, line: 101, type: !932, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!932 = !DISubroutineType(types: !933)
!933 = !{!307, !122}
!934 = distinct !DISubprogram(name: "write_file_contents", scope: !1, file: !1, line: 4480, type: !935, isLocal: true, isDefinition: true, scopeLine: 4481, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!935 = !DISubroutineType(types: !936)
!936 = !{!31, !367, !36, !36}
!937 = distinct !DISubprogram(name: "iso9660_free", scope: !1, file: !1, line: 2114, type: !504, isLocal: true, isDefinition: true, scopeLine: 2115, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!938 = distinct !DISubprogram(name: "zisofs_free", scope: !1, file: !1, line: 7782, type: !504, isLocal: true, isDefinition: true, scopeLine: 7783, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!939 = distinct !DISubprogram(name: "isoent_free_all", scope: !1, file: !1, line: 5156, type: !608, isLocal: true, isDefinition: true, scopeLine: 5157, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!940 = distinct !DISubprogram(name: "isofile_free_all_entries", scope: !1, file: !1, line: 4597, type: !707, isLocal: true, isDefinition: true, scopeLine: 4598, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!941 = distinct !DISubprogram(name: "isofile_free_hardlinks", scope: !1, file: !1, line: 5095, type: !707, isLocal: true, isDefinition: true, scopeLine: 5096, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!942 = distinct !DISubprogram(name: "isofile_init_entry_list", scope: !1, file: !1, line: 4582, type: !707, isLocal: true, isDefinition: true, scopeLine: 4583, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!943 = distinct !DISubprogram(name: "isofile_init_entry_data_file_list", scope: !1, file: !1, line: 4610, type: !707, isLocal: true, isDefinition: true, scopeLine: 4611, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!944 = distinct !DISubprogram(name: "isofile_init_hardlinks", scope: !1, file: !1, line: 5085, type: !707, isLocal: true, isDefinition: true, scopeLine: 5086, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!945 = distinct !DISubprogram(name: "isofile_hd_cmp_node", scope: !1, file: !1, line: 5065, type: !112, isLocal: true, isDefinition: true, scopeLine: 5067, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!946 = distinct !DISubprogram(name: "isofile_hd_cmp_key", scope: !1, file: !1, line: 5076, type: !120, isLocal: true, isDefinition: true, scopeLine: 5077, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!947 = distinct !DISubprogram(name: "isoent_create_virtual_dir", scope: !1, file: !1, line: 5189, type: !948, isLocal: true, isDefinition: true, scopeLine: 5190, flags: DIFlagPrototyped, isOptimized: false, variables: !570)
!948 = !DISubroutineType(types: !949)
!949 = !{!76, !367, !530, !429}
!950 = !{!951, !952, !956, !958, !959, !960, !964, !965, !967, !968, !969, !973, !977, !981}
!951 = !DIGlobalVariable(name: "rb_ops", scope: !593, file: !1, line: 5111, type: !105, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @isoent_new.rb_ops)
!952 = !DIGlobalVariable(name: "zisofs_magic", scope: !0, file: !1, line: 114, type: !953, isLocal: true, isDefinition: true, variable: [8 x i8]* @zisofs_magic)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 64, align: 8, elements: !954)
!954 = !{!955}
!955 = !DISubrange(count: 8)
!956 = !DIGlobalVariable(name: "d_characters_map", scope: !0, file: !1, line: 2306, type: !957, isLocal: true, isDefinition: true, variable: [128 x i8]* @d_characters_map)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 1024, align: 8, elements: !732)
!958 = !DIGlobalVariable(name: "d1_characters_map", scope: !0, file: !1, line: 2318, type: !957, isLocal: true, isDefinition: true, variable: [128 x i8]* @d1_characters_map)
!959 = !DIGlobalVariable(name: "rb_ops", scope: !737, file: !1, line: 6233, type: !105, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @isoent_gen_joliet_identifier.rb_ops)
!960 = !DIGlobalVariable(name: "xdig", scope: !769, file: !1, line: 5951, type: !961, isLocal: true, isDefinition: true, variable: [36 x i16]* @idr_set_num_beutf16.xdig)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !564, size: 576, align: 16, elements: !962)
!962 = !{!963}
!963 = !DISubrange(count: 36)
!964 = !DIGlobalVariable(name: "rb_ops", scope: !770, file: !1, line: 5984, type: !105, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @isoent_gen_iso9660_identifier.rb_ops)
!965 = !DIGlobalVariable(name: "xdig", scope: !774, file: !1, line: 5933, type: !966, isLocal: true, isDefinition: true, variable: [36 x i8]* @idr_set_num.xdig)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 288, align: 8, elements: !962)
!967 = !DIGlobalVariable(name: "a_characters_map", scope: !0, file: !1, line: 2282, type: !957, isLocal: true, isDefinition: true, variable: [128 x i8]* @a_characters_map)
!968 = !DIGlobalVariable(name: "a1_characters_map", scope: !0, file: !1, line: 2294, type: !957, isLocal: true, isDefinition: true, variable: [128 x i8]* @a1_characters_map)
!969 = !DIGlobalVariable(name: "rrip_identifier", scope: !0, file: !1, line: 99, type: !970, isLocal: true, isDefinition: true, variable: [11 x i8]* @rrip_identifier)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 88, align: 8, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 11)
!973 = !DIGlobalVariable(name: "rrip_descriptor", scope: !0, file: !1, line: 101, type: !974, isLocal: true, isDefinition: true, variable: [85 x i8]* @rrip_descriptor)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 680, align: 8, elements: !975)
!975 = !{!976}
!976 = !DISubrange(count: 85)
!977 = !DIGlobalVariable(name: "rrip_source", scope: !0, file: !1, line: 104, type: !978, isLocal: true, isDefinition: true, variable: [136 x i8]* @rrip_source)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 1088, align: 8, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 136)
!981 = !DIGlobalVariable(name: "rb_ops", scope: !944, file: !1, line: 5087, type: !105, isLocal: true, isDefinition: true, variable: %struct.archive_rb_tree_ops* @isofile_init_hardlinks.rb_ops)
!982 = !{i32 2, !"Dwarf Version", i32 4}
!983 = !{i32 2, !"Debug Info Version", i32 3}
!984 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!985 = !DILocalVariable(name: "_a", arg: 1, scope: !569, file: !1, line: 1051, type: !385)
!986 = !DIExpression()
!987 = !DILocation(line: 1051, column: 50, scope: !569)
!988 = !DILocalVariable(name: "a", scope: !569, file: !1, line: 1053, type: !367)
!989 = !DILocation(line: 1053, column: 24, scope: !569)
!990 = !DILocation(line: 1053, column: 52, scope: !569)
!991 = !DILocation(line: 1053, column: 28, scope: !569)
!992 = !DILocalVariable(name: "iso9660", scope: !569, file: !1, line: 1054, type: !530)
!993 = !DILocation(line: 1054, column: 18, scope: !569)
!994 = !DILocation(line: 1056, column: 2, scope: !569)
!995 = !DILocalVariable(name: "magic_test", scope: !996, file: !1, line: 1056, type: !31)
!996 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1056, column: 2)
!997 = !DILocation(line: 1056, column: 2, scope: !996)
!998 = !DILocation(line: 1056, column: 2, scope: !999)
!999 = !DILexicalBlockFile(scope: !996, file: !1, discriminator: 1)
!1000 = !DILocation(line: 1056, column: 2, scope: !1001)
!1001 = !DILexicalBlockFile(scope: !1002, file: !1, discriminator: 2)
!1002 = distinct !DILexicalBlock(scope: !996, file: !1, line: 1056, column: 2)
!1003 = !DILocation(line: 1056, column: 2, scope: !1004)
!1004 = !DILexicalBlockFile(scope: !996, file: !1, discriminator: 3)
!1005 = !DILocation(line: 1060, column: 6, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1060, column: 6)
!1007 = !DILocation(line: 1060, column: 9, scope: !1006)
!1008 = !DILocation(line: 1060, column: 21, scope: !1006)
!1009 = !DILocation(line: 1060, column: 6, scope: !569)
!1010 = !DILocation(line: 1061, column: 4, scope: !1006)
!1011 = !DILocation(line: 1061, column: 7, scope: !1006)
!1012 = !DILocation(line: 1061, column: 20, scope: !1006)
!1013 = !DILocation(line: 1061, column: 3, scope: !1006)
!1014 = !DILocation(line: 1063, column: 12, scope: !569)
!1015 = !DILocation(line: 1063, column: 10, scope: !569)
!1016 = !DILocation(line: 1064, column: 6, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1064, column: 6)
!1018 = !DILocation(line: 1064, column: 14, scope: !1017)
!1019 = !DILocation(line: 1064, column: 6, scope: !569)
!1020 = !DILocation(line: 1065, column: 22, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !1017, file: !1, line: 1064, column: 23)
!1022 = !DILocation(line: 1065, column: 25, scope: !1021)
!1023 = !DILocation(line: 1065, column: 3, scope: !1021)
!1024 = !DILocation(line: 1067, column: 3, scope: !1021)
!1025 = !DILocation(line: 1069, column: 2, scope: !569)
!1026 = !DILocation(line: 1069, column: 11, scope: !569)
!1027 = !DILocation(line: 1069, column: 22, scope: !569)
!1028 = !DILocation(line: 1070, column: 2, scope: !569)
!1029 = !DILocation(line: 1070, column: 11, scope: !569)
!1030 = !DILocation(line: 1070, column: 19, scope: !569)
!1031 = !DILocation(line: 1071, column: 2, scope: !569)
!1032 = !DILocation(line: 1071, column: 11, scope: !569)
!1033 = !DILocation(line: 1071, column: 20, scope: !569)
!1034 = !DILocation(line: 1072, column: 2, scope: !569)
!1035 = !DILocation(line: 1072, column: 11, scope: !569)
!1036 = !DILocation(line: 1072, column: 19, scope: !569)
!1037 = !DILocation(line: 1072, column: 29, scope: !569)
!1038 = !DILocation(line: 1073, column: 2, scope: !569)
!1039 = !DILocation(line: 1073, column: 11, scope: !569)
!1040 = !DILocation(line: 1073, column: 19, scope: !569)
!1041 = !DILocation(line: 1073, column: 28, scope: !569)
!1042 = !DILocation(line: 1074, column: 2, scope: !569)
!1043 = !DILocation(line: 1074, column: 11, scope: !569)
!1044 = !DILocation(line: 1074, column: 19, scope: !569)
!1045 = !DILocation(line: 1074, column: 27, scope: !569)
!1046 = !DILocation(line: 1075, column: 2, scope: !569)
!1047 = !DILocation(line: 1075, column: 11, scope: !569)
!1048 = !DILocation(line: 1075, column: 18, scope: !569)
!1049 = !DILocation(line: 1075, column: 26, scope: !569)
!1050 = !DILocation(line: 1076, column: 2, scope: !569)
!1051 = !DILocation(line: 1076, column: 11, scope: !569)
!1052 = !DILocation(line: 1076, column: 18, scope: !569)
!1053 = !DILocation(line: 1076, column: 28, scope: !569)
!1054 = !DILocation(line: 1077, column: 2, scope: !569)
!1055 = !DILocation(line: 1077, column: 11, scope: !569)
!1056 = !DILocation(line: 1077, column: 18, scope: !569)
!1057 = !DILocation(line: 1077, column: 27, scope: !569)
!1058 = !DILocation(line: 1078, column: 2, scope: !569)
!1059 = !DILocation(line: 1078, column: 11, scope: !569)
!1060 = !DILocation(line: 1078, column: 18, scope: !569)
!1061 = !DILocation(line: 1078, column: 26, scope: !569)
!1062 = !DILocation(line: 1079, column: 26, scope: !569)
!1063 = !DILocation(line: 1079, column: 2, scope: !569)
!1064 = !DILocation(line: 1080, column: 36, scope: !569)
!1065 = !DILocation(line: 1080, column: 2, scope: !569)
!1066 = !DILocation(line: 1081, column: 25, scope: !569)
!1067 = !DILocation(line: 1081, column: 2, scope: !569)
!1068 = !DILocation(line: 1082, column: 2, scope: !569)
!1069 = !DILocation(line: 1082, column: 11, scope: !569)
!1070 = !DILocation(line: 1082, column: 32, scope: !569)
!1071 = !DILocation(line: 1083, column: 2, scope: !569)
!1072 = !DILocation(line: 1083, column: 11, scope: !569)
!1073 = !DILocation(line: 1083, column: 22, scope: !569)
!1074 = !DILocation(line: 1084, column: 2, scope: !569)
!1075 = !DILocation(line: 1084, column: 11, scope: !569)
!1076 = !DILocation(line: 1084, column: 27, scope: !569)
!1077 = !DILocation(line: 1085, column: 2, scope: !569)
!1078 = !DILocation(line: 1085, column: 11, scope: !569)
!1079 = !DILocation(line: 1085, column: 22, scope: !569)
!1080 = !DILocation(line: 1086, column: 2, scope: !569)
!1081 = !DILocation(line: 1086, column: 11, scope: !569)
!1082 = !DILocation(line: 1086, column: 24, scope: !569)
!1083 = !DILocation(line: 1087, column: 2, scope: !569)
!1084 = !DILocation(line: 1087, column: 11, scope: !569)
!1085 = !DILocation(line: 1087, column: 25, scope: !569)
!1086 = !DILocation(line: 1088, column: 2, scope: !569)
!1087 = !DILocation(line: 1088, column: 11, scope: !569)
!1088 = !DILocation(line: 1088, column: 22, scope: !569)
!1089 = !DILocation(line: 1089, column: 2, scope: !569)
!1090 = !DILocation(line: 1089, column: 2, scope: !1091)
!1091 = !DILexicalBlockFile(scope: !1092, file: !1, discriminator: 1)
!1092 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1089, column: 2)
!1093 = !DILocation(line: 1090, column: 2, scope: !569)
!1094 = !DILocation(line: 1090, column: 2, scope: !1095)
!1095 = !DILexicalBlockFile(scope: !1096, file: !1, discriminator: 1)
!1096 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1090, column: 2)
!1097 = !DILocation(line: 1095, column: 2, scope: !569)
!1098 = !DILocation(line: 1095, column: 2, scope: !1099)
!1099 = !DILexicalBlockFile(scope: !1100, file: !1, discriminator: 1)
!1100 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1095, column: 2)
!1101 = !DILocation(line: 1096, column: 2, scope: !569)
!1102 = !DILocation(line: 1097, column: 2, scope: !569)
!1103 = !DILocation(line: 1097, column: 2, scope: !1104)
!1104 = !DILexicalBlockFile(scope: !1105, file: !1, discriminator: 1)
!1105 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1097, column: 2)
!1106 = !DILocation(line: 1098, column: 2, scope: !569)
!1107 = !DILocation(line: 1098, column: 2, scope: !1108)
!1108 = !DILexicalBlockFile(scope: !1109, file: !1, discriminator: 1)
!1109 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1098, column: 2)
!1110 = !DILocation(line: 1099, column: 2, scope: !569)
!1111 = !DILocation(line: 1099, column: 2, scope: !1112)
!1112 = !DILexicalBlockFile(scope: !1113, file: !1, discriminator: 1)
!1113 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1099, column: 2)
!1114 = !DILocation(line: 1100, column: 2, scope: !569)
!1115 = !DILocation(line: 1100, column: 2, scope: !1116)
!1116 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 4)
!1117 = !DILocation(line: 1100, column: 2, scope: !1118)
!1118 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 1)
!1119 = !DILocation(line: 1100, column: 2, scope: !1120)
!1120 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 2)
!1121 = !DILocation(line: 1100, column: 2, scope: !1122)
!1122 = !DILexicalBlockFile(scope: !1120, file: !1, discriminator: 5)
!1123 = !DILocation(line: 1100, column: 2, scope: !1124)
!1124 = !DILexicalBlockFile(scope: !569, file: !1, discriminator: 3)
!1125 = !DILocation(line: 1102, column: 2, scope: !569)
!1126 = !DILocation(line: 1102, column: 2, scope: !1127)
!1127 = !DILexicalBlockFile(scope: !1128, file: !1, discriminator: 1)
!1128 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1102, column: 2)
!1129 = !DILocation(line: 1103, column: 2, scope: !569)
!1130 = !DILocation(line: 1103, column: 2, scope: !1131)
!1131 = !DILexicalBlockFile(scope: !1132, file: !1, discriminator: 1)
!1132 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1103, column: 2)
!1133 = !DILocation(line: 1104, column: 2, scope: !569)
!1134 = !DILocation(line: 1104, column: 2, scope: !1135)
!1135 = !DILexicalBlockFile(scope: !1136, file: !1, discriminator: 1)
!1136 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1104, column: 2)
!1137 = !DILocation(line: 1109, column: 2, scope: !569)
!1138 = !DILocation(line: 1109, column: 2, scope: !1139)
!1139 = !DILexicalBlockFile(scope: !1140, file: !1, discriminator: 1)
!1140 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1109, column: 2)
!1141 = !DILocation(line: 1110, column: 2, scope: !569)
!1142 = !DILocation(line: 1110, column: 11, scope: !569)
!1143 = !DILocation(line: 1110, column: 21, scope: !569)
!1144 = !DILocation(line: 1110, column: 29, scope: !569)
!1145 = !DILocation(line: 1112, column: 2, scope: !569)
!1146 = !DILocation(line: 1114, column: 2, scope: !569)
!1147 = !DILocation(line: 1114, column: 2, scope: !1148)
!1148 = !DILexicalBlockFile(scope: !1149, file: !1, discriminator: 1)
!1149 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1114, column: 2)
!1150 = !DILocation(line: 1115, column: 2, scope: !569)
!1151 = !DILocation(line: 1115, column: 11, scope: !569)
!1152 = !DILocation(line: 1115, column: 21, scope: !569)
!1153 = !DILocation(line: 1115, column: 26, scope: !569)
!1154 = !DILocation(line: 1116, column: 2, scope: !569)
!1155 = !DILocation(line: 1116, column: 11, scope: !569)
!1156 = !DILocation(line: 1116, column: 21, scope: !569)
!1157 = !DILocation(line: 1116, column: 33, scope: !569)
!1158 = !DILocation(line: 1117, column: 2, scope: !569)
!1159 = !DILocation(line: 1117, column: 2, scope: !1160)
!1160 = !DILexicalBlockFile(scope: !1161, file: !1, discriminator: 1)
!1161 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1117, column: 2)
!1162 = !DILocation(line: 1118, column: 2, scope: !569)
!1163 = !DILocation(line: 1118, column: 11, scope: !569)
!1164 = !DILocation(line: 1118, column: 21, scope: !569)
!1165 = !DILocation(line: 1118, column: 35, scope: !569)
!1166 = !DILocation(line: 1119, column: 2, scope: !569)
!1167 = !DILocation(line: 1119, column: 11, scope: !569)
!1168 = !DILocation(line: 1119, column: 21, scope: !569)
!1169 = !DILocation(line: 1119, column: 36, scope: !569)
!1170 = !DILocation(line: 1125, column: 2, scope: !569)
!1171 = !DILocation(line: 1125, column: 11, scope: !569)
!1172 = !DILocation(line: 1125, column: 18, scope: !569)
!1173 = !DILocation(line: 1125, column: 33, scope: !569)
!1174 = !DILocation(line: 1126, column: 2, scope: !569)
!1175 = !DILocation(line: 1126, column: 11, scope: !569)
!1176 = !DILocation(line: 1126, column: 18, scope: !569)
!1177 = !DILocation(line: 1126, column: 43, scope: !569)
!1178 = !DILocation(line: 1127, column: 2, scope: !569)
!1179 = !DILocation(line: 1127, column: 11, scope: !569)
!1180 = !DILocation(line: 1127, column: 18, scope: !569)
!1181 = !DILocation(line: 1127, column: 31, scope: !569)
!1182 = !DILocation(line: 1128, column: 2, scope: !569)
!1183 = !DILocation(line: 1128, column: 11, scope: !569)
!1184 = !DILocation(line: 1128, column: 18, scope: !569)
!1185 = !DILocation(line: 1128, column: 36, scope: !569)
!1186 = !DILocation(line: 1129, column: 11, scope: !569)
!1187 = !DILocation(line: 1129, column: 20, scope: !569)
!1188 = !DILocation(line: 1129, column: 27, scope: !569)
!1189 = !DILocation(line: 1129, column: 2, scope: !569)
!1190 = !DILocation(line: 1136, column: 2, scope: !569)
!1191 = !DILocation(line: 1136, column: 11, scope: !569)
!1192 = !DILocation(line: 1136, column: 15, scope: !569)
!1193 = !DILocation(line: 1136, column: 29, scope: !569)
!1194 = !DILocation(line: 1137, column: 2, scope: !569)
!1195 = !DILocation(line: 1137, column: 11, scope: !569)
!1196 = !DILocation(line: 1137, column: 15, scope: !569)
!1197 = !DILocation(line: 1137, column: 30, scope: !569)
!1198 = !DILocation(line: 1138, column: 2, scope: !569)
!1199 = !DILocation(line: 1138, column: 11, scope: !569)
!1200 = !DILocation(line: 1138, column: 15, scope: !569)
!1201 = !DILocation(line: 1138, column: 28, scope: !569)
!1202 = !DILocation(line: 1139, column: 2, scope: !569)
!1203 = !DILocation(line: 1139, column: 11, scope: !569)
!1204 = !DILocation(line: 1139, column: 15, scope: !569)
!1205 = !DILocation(line: 1139, column: 27, scope: !569)
!1206 = !DILocation(line: 1140, column: 2, scope: !569)
!1207 = !DILocation(line: 1140, column: 11, scope: !569)
!1208 = !DILocation(line: 1140, column: 15, scope: !569)
!1209 = !DILocation(line: 1140, column: 20, scope: !569)
!1210 = !DILocation(line: 1141, column: 2, scope: !569)
!1211 = !DILocation(line: 1141, column: 11, scope: !569)
!1212 = !DILocation(line: 1141, column: 15, scope: !569)
!1213 = !DILocation(line: 1141, column: 28, scope: !569)
!1214 = !DILocation(line: 1142, column: 2, scope: !569)
!1215 = !DILocation(line: 1142, column: 11, scope: !569)
!1216 = !DILocation(line: 1142, column: 15, scope: !569)
!1217 = !DILocation(line: 1142, column: 31, scope: !569)
!1218 = !DILocation(line: 1143, column: 2, scope: !569)
!1219 = !DILocation(line: 1143, column: 11, scope: !569)
!1220 = !DILocation(line: 1143, column: 15, scope: !569)
!1221 = !DILocation(line: 1143, column: 29, scope: !569)
!1222 = !DILocation(line: 1144, column: 2, scope: !569)
!1223 = !DILocation(line: 1144, column: 11, scope: !569)
!1224 = !DILocation(line: 1144, column: 15, scope: !569)
!1225 = !DILocation(line: 1144, column: 30, scope: !569)
!1226 = !DILocation(line: 1145, column: 2, scope: !569)
!1227 = !DILocation(line: 1145, column: 11, scope: !569)
!1228 = !DILocation(line: 1145, column: 15, scope: !569)
!1229 = !DILocation(line: 1145, column: 25, scope: !569)
!1230 = !DILocation(line: 1146, column: 2, scope: !569)
!1231 = !DILocation(line: 1146, column: 11, scope: !569)
!1232 = !DILocation(line: 1146, column: 15, scope: !569)
!1233 = !DILocation(line: 1146, column: 33, scope: !569)
!1234 = !DILocation(line: 1147, column: 2, scope: !569)
!1235 = !DILocation(line: 1147, column: 11, scope: !569)
!1236 = !DILocation(line: 1147, column: 15, scope: !569)
!1237 = !DILocation(line: 1147, column: 30, scope: !569)
!1238 = !DILocation(line: 1148, column: 2, scope: !569)
!1239 = !DILocation(line: 1148, column: 11, scope: !569)
!1240 = !DILocation(line: 1148, column: 15, scope: !569)
!1241 = !DILocation(line: 1148, column: 25, scope: !569)
!1242 = !DILocation(line: 1149, column: 2, scope: !569)
!1243 = !DILocation(line: 1149, column: 11, scope: !569)
!1244 = !DILocation(line: 1149, column: 15, scope: !569)
!1245 = !DILocation(line: 1149, column: 22, scope: !569)
!1246 = !DILocation(line: 1150, column: 2, scope: !569)
!1247 = !DILocation(line: 1150, column: 11, scope: !569)
!1248 = !DILocation(line: 1150, column: 15, scope: !569)
!1249 = !DILocation(line: 1150, column: 27, scope: !569)
!1250 = !DILocation(line: 1151, column: 2, scope: !569)
!1251 = !DILocation(line: 1151, column: 11, scope: !569)
!1252 = !DILocation(line: 1151, column: 15, scope: !569)
!1253 = !DILocation(line: 1151, column: 26, scope: !569)
!1254 = !DILocation(line: 1152, column: 2, scope: !569)
!1255 = !DILocation(line: 1152, column: 11, scope: !569)
!1256 = !DILocation(line: 1152, column: 15, scope: !569)
!1257 = !DILocation(line: 1152, column: 19, scope: !569)
!1258 = !DILocation(line: 1153, column: 2, scope: !569)
!1259 = !DILocation(line: 1153, column: 11, scope: !569)
!1260 = !DILocation(line: 1153, column: 15, scope: !569)
!1261 = !DILocation(line: 1153, column: 25, scope: !569)
!1262 = !DILocation(line: 1154, column: 2, scope: !569)
!1263 = !DILocation(line: 1154, column: 11, scope: !569)
!1264 = !DILocation(line: 1154, column: 15, scope: !569)
!1265 = !DILocation(line: 1154, column: 18, scope: !569)
!1266 = !DILocation(line: 1155, column: 2, scope: !569)
!1267 = !DILocation(line: 1155, column: 11, scope: !569)
!1268 = !DILocation(line: 1155, column: 15, scope: !569)
!1269 = !DILocation(line: 1155, column: 25, scope: !569)
!1270 = !DILocation(line: 1156, column: 2, scope: !569)
!1271 = !DILocation(line: 1156, column: 11, scope: !569)
!1272 = !DILocation(line: 1156, column: 15, scope: !569)
!1273 = !DILocation(line: 1156, column: 22, scope: !569)
!1274 = !DILocation(line: 1160, column: 32, scope: !569)
!1275 = !DILocation(line: 1160, column: 35, scope: !569)
!1276 = !DILocation(line: 1160, column: 6, scope: !569)
!1277 = !DILocation(line: 1159, column: 2, scope: !569)
!1278 = !DILocation(line: 1159, column: 11, scope: !569)
!1279 = !DILocation(line: 1159, column: 19, scope: !569)
!1280 = !DILocation(line: 1159, column: 27, scope: !569)
!1281 = !DILocation(line: 1161, column: 6, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1161, column: 6)
!1283 = !DILocation(line: 1161, column: 15, scope: !1282)
!1284 = !DILocation(line: 1161, column: 23, scope: !1282)
!1285 = !DILocation(line: 1161, column: 31, scope: !1282)
!1286 = !DILocation(line: 1161, column: 6, scope: !569)
!1287 = !DILocation(line: 1162, column: 8, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1282, file: !1, line: 1161, column: 40)
!1289 = !DILocation(line: 1162, column: 3, scope: !1288)
!1290 = !DILocation(line: 1163, column: 22, scope: !1288)
!1291 = !DILocation(line: 1163, column: 25, scope: !1288)
!1292 = !DILocation(line: 1163, column: 3, scope: !1288)
!1293 = !DILocation(line: 1165, column: 3, scope: !1288)
!1294 = !DILocation(line: 1167, column: 37, scope: !569)
!1295 = !DILocation(line: 1167, column: 46, scope: !569)
!1296 = !DILocation(line: 1167, column: 54, scope: !569)
!1297 = !DILocation(line: 1167, column: 2, scope: !569)
!1298 = !DILocation(line: 1167, column: 11, scope: !569)
!1299 = !DILocation(line: 1167, column: 19, scope: !569)
!1300 = !DILocation(line: 1167, column: 28, scope: !569)
!1301 = !DILocation(line: 1167, column: 35, scope: !569)
!1302 = !DILocation(line: 1168, column: 24, scope: !569)
!1303 = !DILocation(line: 1168, column: 33, scope: !569)
!1304 = !DILocation(line: 1168, column: 41, scope: !569)
!1305 = !DILocation(line: 1168, column: 2, scope: !569)
!1306 = !DILocation(line: 1168, column: 11, scope: !569)
!1307 = !DILocation(line: 1168, column: 22, scope: !569)
!1308 = !DILocation(line: 1169, column: 2, scope: !569)
!1309 = !DILocation(line: 1169, column: 2, scope: !1310)
!1310 = !DILexicalBlockFile(scope: !1311, file: !1, discriminator: 1)
!1311 = distinct !DILexicalBlock(scope: !569, file: !1, line: 1169, column: 2)
!1312 = !DILocation(line: 1170, column: 26, scope: !569)
!1313 = !DILocation(line: 1170, column: 35, scope: !569)
!1314 = !DILocation(line: 1170, column: 2, scope: !569)
!1315 = !DILocation(line: 1171, column: 2, scope: !569)
!1316 = !DILocation(line: 1171, column: 11, scope: !569)
!1317 = !DILocation(line: 1171, column: 22, scope: !569)
!1318 = !DILocation(line: 1171, column: 27, scope: !569)
!1319 = !DILocation(line: 1172, column: 2, scope: !569)
!1320 = !DILocation(line: 1172, column: 11, scope: !569)
!1321 = !DILocation(line: 1172, column: 28, scope: !569)
!1322 = !DILocation(line: 1173, column: 2, scope: !569)
!1323 = !DILocation(line: 1173, column: 11, scope: !569)
!1324 = !DILocation(line: 1173, column: 30, scope: !569)
!1325 = !DILocation(line: 1175, column: 19, scope: !569)
!1326 = !DILocation(line: 1175, column: 2, scope: !569)
!1327 = !DILocation(line: 1175, column: 5, scope: !569)
!1328 = !DILocation(line: 1175, column: 17, scope: !569)
!1329 = !DILocation(line: 1176, column: 2, scope: !569)
!1330 = !DILocation(line: 1176, column: 5, scope: !569)
!1331 = !DILocation(line: 1176, column: 17, scope: !569)
!1332 = !DILocation(line: 1177, column: 2, scope: !569)
!1333 = !DILocation(line: 1177, column: 5, scope: !569)
!1334 = !DILocation(line: 1177, column: 20, scope: !569)
!1335 = !DILocation(line: 1178, column: 2, scope: !569)
!1336 = !DILocation(line: 1178, column: 5, scope: !569)
!1337 = !DILocation(line: 1178, column: 25, scope: !569)
!1338 = !DILocation(line: 1179, column: 2, scope: !569)
!1339 = !DILocation(line: 1179, column: 5, scope: !569)
!1340 = !DILocation(line: 1179, column: 23, scope: !569)
!1341 = !DILocation(line: 1180, column: 2, scope: !569)
!1342 = !DILocation(line: 1180, column: 5, scope: !569)
!1343 = !DILocation(line: 1180, column: 25, scope: !569)
!1344 = !DILocation(line: 1181, column: 2, scope: !569)
!1345 = !DILocation(line: 1181, column: 5, scope: !569)
!1346 = !DILocation(line: 1181, column: 18, scope: !569)
!1347 = !DILocation(line: 1182, column: 2, scope: !569)
!1348 = !DILocation(line: 1182, column: 5, scope: !569)
!1349 = !DILocation(line: 1182, column: 17, scope: !569)
!1350 = !DILocation(line: 1183, column: 2, scope: !569)
!1351 = !DILocation(line: 1183, column: 5, scope: !569)
!1352 = !DILocation(line: 1183, column: 13, scope: !569)
!1353 = !DILocation(line: 1183, column: 28, scope: !569)
!1354 = !DILocation(line: 1184, column: 2, scope: !569)
!1355 = !DILocation(line: 1184, column: 5, scope: !569)
!1356 = !DILocation(line: 1184, column: 13, scope: !569)
!1357 = !DILocation(line: 1184, column: 33, scope: !569)
!1358 = !DILocation(line: 1186, column: 2, scope: !569)
!1359 = !DILocation(line: 1187, column: 1, scope: !569)
!1360 = !DILocalVariable(name: "iso9660", arg: 1, scope: !942, file: !1, line: 4582, type: !530)
!1361 = !DILocation(line: 4582, column: 41, scope: !942)
!1362 = !DILocation(line: 4584, column: 2, scope: !942)
!1363 = !DILocation(line: 4584, column: 11, scope: !942)
!1364 = !DILocation(line: 4584, column: 25, scope: !942)
!1365 = !DILocation(line: 4584, column: 31, scope: !942)
!1366 = !DILocation(line: 4585, column: 34, scope: !942)
!1367 = !DILocation(line: 4585, column: 43, scope: !942)
!1368 = !DILocation(line: 4585, column: 57, scope: !942)
!1369 = !DILocation(line: 4585, column: 2, scope: !942)
!1370 = !DILocation(line: 4585, column: 11, scope: !942)
!1371 = !DILocation(line: 4585, column: 25, scope: !942)
!1372 = !DILocation(line: 4585, column: 30, scope: !942)
!1373 = !DILocation(line: 4586, column: 1, scope: !942)
!1374 = !DILocalVariable(name: "iso9660", arg: 1, scope: !943, file: !1, line: 4610, type: !530)
!1375 = !DILocation(line: 4610, column: 51, scope: !943)
!1376 = !DILocation(line: 4612, column: 2, scope: !943)
!1377 = !DILocation(line: 4612, column: 11, scope: !943)
!1378 = !DILocation(line: 4612, column: 26, scope: !943)
!1379 = !DILocation(line: 4612, column: 32, scope: !943)
!1380 = !DILocation(line: 4613, column: 35, scope: !943)
!1381 = !DILocation(line: 4613, column: 44, scope: !943)
!1382 = !DILocation(line: 4613, column: 59, scope: !943)
!1383 = !DILocation(line: 4613, column: 2, scope: !943)
!1384 = !DILocation(line: 4613, column: 11, scope: !943)
!1385 = !DILocation(line: 4613, column: 26, scope: !943)
!1386 = !DILocation(line: 4613, column: 31, scope: !943)
!1387 = !DILocation(line: 4614, column: 1, scope: !943)
!1388 = !DILocalVariable(name: "iso9660", arg: 1, scope: !944, file: !1, line: 5085, type: !530)
!1389 = !DILocation(line: 5085, column: 40, scope: !944)
!1390 = !DILocation(line: 5091, column: 27, scope: !944)
!1391 = !DILocation(line: 5091, column: 36, scope: !944)
!1392 = !DILocation(line: 5091, column: 2, scope: !944)
!1393 = !DILocation(line: 5092, column: 1, scope: !944)
!1394 = !DILocalVariable(name: "a", arg: 1, scope: !947, file: !1, line: 5189, type: !367)
!1395 = !DILocation(line: 5189, column: 49, scope: !947)
!1396 = !DILocalVariable(name: "iso9660", arg: 2, scope: !947, file: !1, line: 5189, type: !530)
!1397 = !DILocation(line: 5189, column: 68, scope: !947)
!1398 = !DILocalVariable(name: "pathname", arg: 3, scope: !947, file: !1, line: 5189, type: !429)
!1399 = !DILocation(line: 5189, column: 89, scope: !947)
!1400 = !DILocalVariable(name: "file", scope: !947, file: !1, line: 5191, type: !7)
!1401 = !DILocation(line: 5191, column: 18, scope: !947)
!1402 = !DILocalVariable(name: "isoent", scope: !947, file: !1, line: 5192, type: !76)
!1403 = !DILocation(line: 5192, column: 17, scope: !947)
!1404 = !DILocation(line: 5194, column: 21, scope: !947)
!1405 = !DILocation(line: 5194, column: 9, scope: !947)
!1406 = !DILocation(line: 5194, column: 7, scope: !947)
!1407 = !DILocation(line: 5195, column: 6, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !947, file: !1, line: 5195, column: 6)
!1409 = !DILocation(line: 5195, column: 11, scope: !1408)
!1410 = !DILocation(line: 5195, column: 6, scope: !947)
!1411 = !DILocation(line: 5196, column: 3, scope: !1408)
!1412 = !DILocation(line: 5197, column: 29, scope: !947)
!1413 = !DILocation(line: 5197, column: 35, scope: !947)
!1414 = !DILocation(line: 5197, column: 42, scope: !947)
!1415 = !DILocation(line: 5197, column: 2, scope: !947)
!1416 = !DILocation(line: 5198, column: 28, scope: !947)
!1417 = !DILocation(line: 5198, column: 34, scope: !947)
!1418 = !DILocation(line: 5198, column: 2, scope: !947)
!1419 = !DILocation(line: 5199, column: 28, scope: !947)
!1420 = !DILocation(line: 5199, column: 34, scope: !947)
!1421 = !DILocation(line: 5199, column: 2, scope: !947)
!1422 = !DILocation(line: 5200, column: 28, scope: !947)
!1423 = !DILocation(line: 5200, column: 34, scope: !947)
!1424 = !DILocation(line: 5200, column: 2, scope: !947)
!1425 = !DILocation(line: 5201, column: 24, scope: !947)
!1426 = !DILocation(line: 5201, column: 30, scope: !947)
!1427 = !DILocation(line: 5201, column: 37, scope: !947)
!1428 = !DILocation(line: 5201, column: 2, scope: !1429)
!1429 = !DILexicalBlockFile(scope: !947, file: !1, discriminator: 1)
!1430 = !DILocation(line: 5202, column: 24, scope: !947)
!1431 = !DILocation(line: 5202, column: 30, scope: !947)
!1432 = !DILocation(line: 5202, column: 37, scope: !947)
!1433 = !DILocation(line: 5202, column: 2, scope: !1429)
!1434 = !DILocation(line: 5203, column: 25, scope: !947)
!1435 = !DILocation(line: 5203, column: 31, scope: !947)
!1436 = !DILocation(line: 5203, column: 2, scope: !947)
!1437 = !DILocation(line: 5204, column: 26, scope: !947)
!1438 = !DILocation(line: 5204, column: 32, scope: !947)
!1439 = !DILocation(line: 5204, column: 2, scope: !947)
!1440 = !DILocation(line: 5205, column: 32, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !947, file: !1, line: 5205, column: 6)
!1442 = !DILocation(line: 5205, column: 35, scope: !1441)
!1443 = !DILocation(line: 5205, column: 6, scope: !1441)
!1444 = !DILocation(line: 5205, column: 41, scope: !1441)
!1445 = !DILocation(line: 5205, column: 6, scope: !947)
!1446 = !DILocation(line: 5206, column: 16, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1441, file: !1, line: 5205, column: 57)
!1448 = !DILocation(line: 5206, column: 3, scope: !1447)
!1449 = !DILocation(line: 5207, column: 3, scope: !1447)
!1450 = !DILocation(line: 5209, column: 20, scope: !947)
!1451 = !DILocation(line: 5209, column: 29, scope: !947)
!1452 = !DILocation(line: 5209, column: 2, scope: !947)
!1453 = !DILocation(line: 5211, column: 22, scope: !947)
!1454 = !DILocation(line: 5211, column: 11, scope: !947)
!1455 = !DILocation(line: 5211, column: 9, scope: !947)
!1456 = !DILocation(line: 5212, column: 6, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !947, file: !1, line: 5212, column: 6)
!1458 = !DILocation(line: 5212, column: 13, scope: !1457)
!1459 = !DILocation(line: 5212, column: 6, scope: !947)
!1460 = !DILocation(line: 5213, column: 3, scope: !1457)
!1461 = !DILocation(line: 5214, column: 2, scope: !947)
!1462 = !DILocation(line: 5214, column: 10, scope: !947)
!1463 = !DILocation(line: 5214, column: 14, scope: !947)
!1464 = !DILocation(line: 5215, column: 2, scope: !947)
!1465 = !DILocation(line: 5215, column: 10, scope: !947)
!1466 = !DILocation(line: 5215, column: 18, scope: !947)
!1467 = !DILocation(line: 5217, column: 10, scope: !947)
!1468 = !DILocation(line: 5217, column: 2, scope: !947)
!1469 = !DILocation(line: 5218, column: 1, scope: !947)
!1470 = !DILocalVariable(name: "a", arg: 1, scope: !571, file: !1, line: 1251, type: !367)
!1471 = !DILocation(line: 1251, column: 39, scope: !571)
!1472 = !DILocalVariable(name: "key", arg: 2, scope: !571, file: !1, line: 1251, type: !429)
!1473 = !DILocation(line: 1251, column: 54, scope: !571)
!1474 = !DILocalVariable(name: "value", arg: 3, scope: !571, file: !1, line: 1251, type: !429)
!1475 = !DILocation(line: 1251, column: 71, scope: !571)
!1476 = !DILocalVariable(name: "iso9660", scope: !571, file: !1, line: 1253, type: !530)
!1477 = !DILocation(line: 1253, column: 18, scope: !571)
!1478 = !DILocation(line: 1253, column: 28, scope: !571)
!1479 = !DILocation(line: 1253, column: 31, scope: !571)
!1480 = !DILocalVariable(name: "p", scope: !571, file: !1, line: 1254, type: !429)
!1481 = !DILocation(line: 1254, column: 14, scope: !571)
!1482 = !DILocalVariable(name: "r", scope: !571, file: !1, line: 1255, type: !31)
!1483 = !DILocation(line: 1255, column: 6, scope: !571)
!1484 = !DILocation(line: 1257, column: 10, scope: !571)
!1485 = !DILocation(line: 1257, column: 2, scope: !571)
!1486 = !DILocation(line: 1259, column: 14, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1259, column: 7)
!1488 = distinct !DILexicalBlock(scope: !571, file: !1, line: 1257, column: 18)
!1489 = !DILocation(line: 1259, column: 7, scope: !1487)
!1490 = !DILocation(line: 1259, column: 36, scope: !1487)
!1491 = !DILocation(line: 1259, column: 7, scope: !1488)
!1492 = !DILocation(line: 1260, column: 20, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 1259, column: 42)
!1494 = !DILocation(line: 1261, column: 10, scope: !1493)
!1495 = !DILocation(line: 1261, column: 19, scope: !1493)
!1496 = !DILocation(line: 1262, column: 28, scope: !1493)
!1497 = !DILocation(line: 1262, column: 33, scope: !1493)
!1498 = !DILocation(line: 1260, column: 8, scope: !1493)
!1499 = !DILocation(line: 1260, column: 6, scope: !1493)
!1500 = !DILocation(line: 1263, column: 33, scope: !1493)
!1501 = !DILocation(line: 1263, column: 35, scope: !1493)
!1502 = !DILocation(line: 1263, column: 4, scope: !1493)
!1503 = !DILocation(line: 1263, column: 13, scope: !1493)
!1504 = !DILocation(line: 1263, column: 17, scope: !1493)
!1505 = !DILocation(line: 1263, column: 31, scope: !1493)
!1506 = !DILocation(line: 1264, column: 12, scope: !1493)
!1507 = !DILocation(line: 1264, column: 4, scope: !1493)
!1508 = !DILocation(line: 1266, column: 14, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1266, column: 7)
!1510 = !DILocation(line: 1266, column: 7, scope: !1509)
!1511 = !DILocation(line: 1266, column: 37, scope: !1509)
!1512 = !DILocation(line: 1266, column: 7, scope: !1488)
!1513 = !DILocation(line: 1267, column: 20, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 1266, column: 43)
!1515 = !DILocation(line: 1268, column: 10, scope: !1514)
!1516 = !DILocation(line: 1268, column: 19, scope: !1514)
!1517 = !DILocation(line: 1269, column: 37, scope: !1514)
!1518 = !DILocation(line: 1269, column: 42, scope: !1514)
!1519 = !DILocation(line: 1267, column: 8, scope: !1514)
!1520 = !DILocation(line: 1267, column: 6, scope: !1514)
!1521 = !DILocation(line: 1270, column: 34, scope: !1514)
!1522 = !DILocation(line: 1270, column: 36, scope: !1514)
!1523 = !DILocation(line: 1270, column: 4, scope: !1514)
!1524 = !DILocation(line: 1270, column: 13, scope: !1514)
!1525 = !DILocation(line: 1270, column: 17, scope: !1514)
!1526 = !DILocation(line: 1270, column: 32, scope: !1514)
!1527 = !DILocation(line: 1271, column: 12, scope: !1514)
!1528 = !DILocation(line: 1271, column: 4, scope: !1514)
!1529 = !DILocation(line: 1273, column: 14, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1273, column: 7)
!1531 = !DILocation(line: 1273, column: 7, scope: !1530)
!1532 = !DILocation(line: 1273, column: 35, scope: !1530)
!1533 = !DILocation(line: 1273, column: 7, scope: !1488)
!1534 = !DILocation(line: 1274, column: 32, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1530, file: !1, line: 1273, column: 41)
!1536 = !DILocation(line: 1274, column: 38, scope: !1535)
!1537 = !DILocation(line: 1274, column: 4, scope: !1535)
!1538 = !DILocation(line: 1274, column: 13, scope: !1535)
!1539 = !DILocation(line: 1274, column: 17, scope: !1535)
!1540 = !DILocation(line: 1274, column: 30, scope: !1535)
!1541 = !DILocation(line: 1275, column: 4, scope: !1535)
!1542 = !DILocation(line: 1277, column: 3, scope: !1488)
!1543 = !DILocation(line: 1279, column: 14, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1279, column: 7)
!1545 = !DILocation(line: 1279, column: 7, scope: !1544)
!1546 = !DILocation(line: 1279, column: 34, scope: !1544)
!1547 = !DILocation(line: 1279, column: 7, scope: !1488)
!1548 = !DILocation(line: 1280, column: 20, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1544, file: !1, line: 1279, column: 40)
!1550 = !DILocation(line: 1281, column: 10, scope: !1549)
!1551 = !DILocation(line: 1281, column: 19, scope: !1549)
!1552 = !DILocation(line: 1282, column: 26, scope: !1549)
!1553 = !DILocation(line: 1282, column: 31, scope: !1549)
!1554 = !DILocation(line: 1280, column: 8, scope: !1549)
!1555 = !DILocation(line: 1280, column: 6, scope: !1549)
!1556 = !DILocation(line: 1283, column: 31, scope: !1549)
!1557 = !DILocation(line: 1283, column: 33, scope: !1549)
!1558 = !DILocation(line: 1283, column: 4, scope: !1549)
!1559 = !DILocation(line: 1283, column: 13, scope: !1549)
!1560 = !DILocation(line: 1283, column: 17, scope: !1549)
!1561 = !DILocation(line: 1283, column: 29, scope: !1549)
!1562 = !DILocation(line: 1284, column: 12, scope: !1549)
!1563 = !DILocation(line: 1284, column: 4, scope: !1549)
!1564 = !DILocation(line: 1286, column: 14, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1286, column: 7)
!1566 = !DILocation(line: 1286, column: 7, scope: !1565)
!1567 = !DILocation(line: 1286, column: 27, scope: !1565)
!1568 = !DILocation(line: 1286, column: 7, scope: !1488)
!1569 = !DILocation(line: 1287, column: 8, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !1, line: 1287, column: 8)
!1571 = distinct !DILexicalBlock(scope: !1565, file: !1, line: 1286, column: 33)
!1572 = !DILocation(line: 1287, column: 14, scope: !1570)
!1573 = !DILocation(line: 1287, column: 8, scope: !1571)
!1574 = !DILocation(line: 1288, column: 5, scope: !1570)
!1575 = !DILocation(line: 1288, column: 14, scope: !1570)
!1576 = !DILocation(line: 1288, column: 18, scope: !1570)
!1577 = !DILocation(line: 1288, column: 23, scope: !1570)
!1578 = !DILocation(line: 1290, column: 5, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1570, file: !1, line: 1289, column: 9)
!1580 = !DILocation(line: 1290, column: 14, scope: !1579)
!1581 = !DILocation(line: 1290, column: 18, scope: !1579)
!1582 = !DILocation(line: 1290, column: 23, scope: !1579)
!1583 = !DILocation(line: 1291, column: 5, scope: !1579)
!1584 = !DILocation(line: 1291, column: 5, scope: !1585)
!1585 = !DILexicalBlockFile(scope: !1579, file: !1, discriminator: 1)
!1586 = !DILocation(line: 1291, column: 5, scope: !1587)
!1587 = !DILexicalBlockFile(scope: !1579, file: !1, discriminator: 2)
!1588 = !DILocation(line: 1291, column: 5, scope: !1589)
!1589 = !DILexicalBlockFile(scope: !1579, file: !1, discriminator: 3)
!1590 = !DILocation(line: 1295, column: 4, scope: !1571)
!1591 = !DILocation(line: 1297, column: 14, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1297, column: 7)
!1593 = !DILocation(line: 1297, column: 7, scope: !1592)
!1594 = !DILocation(line: 1297, column: 35, scope: !1592)
!1595 = !DILocation(line: 1297, column: 7, scope: !1488)
!1596 = !DILocation(line: 1298, column: 20, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1592, file: !1, line: 1297, column: 41)
!1598 = !DILocation(line: 1299, column: 10, scope: !1597)
!1599 = !DILocation(line: 1299, column: 19, scope: !1597)
!1600 = !DILocation(line: 1299, column: 29, scope: !1597)
!1601 = !DILocation(line: 1300, column: 14, scope: !1597)
!1602 = !DILocation(line: 1300, column: 19, scope: !1597)
!1603 = !DILocation(line: 1298, column: 8, scope: !1597)
!1604 = !DILocation(line: 1298, column: 6, scope: !1597)
!1605 = !DILocation(line: 1301, column: 32, scope: !1597)
!1606 = !DILocation(line: 1301, column: 34, scope: !1597)
!1607 = !DILocation(line: 1301, column: 4, scope: !1597)
!1608 = !DILocation(line: 1301, column: 13, scope: !1597)
!1609 = !DILocation(line: 1301, column: 17, scope: !1597)
!1610 = !DILocation(line: 1301, column: 30, scope: !1597)
!1611 = !DILocation(line: 1302, column: 12, scope: !1597)
!1612 = !DILocation(line: 1302, column: 4, scope: !1597)
!1613 = !DILocation(line: 1304, column: 14, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1304, column: 7)
!1615 = !DILocation(line: 1304, column: 7, scope: !1614)
!1616 = !DILocation(line: 1304, column: 38, scope: !1614)
!1617 = !DILocation(line: 1304, column: 7, scope: !1488)
!1618 = !DILocation(line: 1305, column: 35, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1614, file: !1, line: 1304, column: 44)
!1620 = !DILocation(line: 1305, column: 41, scope: !1619)
!1621 = !DILocation(line: 1305, column: 4, scope: !1619)
!1622 = !DILocation(line: 1305, column: 13, scope: !1619)
!1623 = !DILocation(line: 1305, column: 17, scope: !1619)
!1624 = !DILocation(line: 1305, column: 33, scope: !1619)
!1625 = !DILocation(line: 1306, column: 4, scope: !1619)
!1626 = !DILocation(line: 1308, column: 14, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1308, column: 7)
!1628 = !DILocation(line: 1308, column: 7, scope: !1627)
!1629 = !DILocation(line: 1308, column: 36, scope: !1627)
!1630 = !DILocation(line: 1308, column: 7, scope: !1488)
!1631 = !DILocalVariable(name: "seg", scope: !1632, file: !1, line: 1309, type: !42)
!1632 = distinct !DILexicalBlock(scope: !1627, file: !1, line: 1308, column: 42)
!1633 = !DILocation(line: 1309, column: 13, scope: !1632)
!1634 = !DILocation(line: 1311, column: 4, scope: !1632)
!1635 = !DILocation(line: 1311, column: 13, scope: !1632)
!1636 = !DILocation(line: 1311, column: 17, scope: !1632)
!1637 = !DILocation(line: 1311, column: 31, scope: !1632)
!1638 = !DILocation(line: 1312, column: 8, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 1312, column: 8)
!1640 = !DILocation(line: 1312, column: 14, scope: !1639)
!1641 = !DILocation(line: 1312, column: 8, scope: !1632)
!1642 = !DILocation(line: 1313, column: 5, scope: !1639)
!1643 = !DILocation(line: 1314, column: 8, scope: !1632)
!1644 = !DILocation(line: 1315, column: 8, scope: !1632)
!1645 = !DILocation(line: 1315, column: 6, scope: !1632)
!1646 = !DILocation(line: 1316, column: 8, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 1316, column: 8)
!1648 = !DILocation(line: 1316, column: 13, scope: !1647)
!1649 = !DILocation(line: 1316, column: 20, scope: !1647)
!1650 = !DILocation(line: 1316, column: 24, scope: !1651)
!1651 = !DILexicalBlockFile(scope: !1647, file: !1, discriminator: 1)
!1652 = !DILocation(line: 1316, column: 29, scope: !1651)
!1653 = !DILocation(line: 1316, column: 36, scope: !1651)
!1654 = !DILocation(line: 1316, column: 39, scope: !1655)
!1655 = !DILexicalBlockFile(scope: !1647, file: !1, discriminator: 2)
!1656 = !DILocation(line: 1316, column: 44, scope: !1655)
!1657 = !DILocation(line: 1316, column: 8, scope: !1655)
!1658 = !DILocation(line: 1317, column: 7, scope: !1647)
!1659 = !DILocation(line: 1317, column: 5, scope: !1647)
!1660 = !DILocation(line: 1318, column: 4, scope: !1632)
!1661 = !DILocation(line: 1318, column: 12, scope: !1662)
!1662 = !DILexicalBlockFile(scope: !1632, file: !1, discriminator: 1)
!1663 = !DILocation(line: 1318, column: 11, scope: !1662)
!1664 = !DILocation(line: 1318, column: 4, scope: !1662)
!1665 = !DILocation(line: 1319, column: 9, scope: !1666)
!1666 = distinct !DILexicalBlock(scope: !1667, file: !1, line: 1319, column: 9)
!1667 = distinct !DILexicalBlock(scope: !1632, file: !1, line: 1318, column: 15)
!1668 = !DILocation(line: 1319, column: 9, scope: !1667)
!1669 = !DILocation(line: 1320, column: 10, scope: !1666)
!1670 = !DILocation(line: 1320, column: 6, scope: !1666)
!1671 = !DILocation(line: 1321, column: 10, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1667, file: !1, line: 1321, column: 9)
!1673 = !DILocation(line: 1321, column: 9, scope: !1672)
!1674 = !DILocation(line: 1321, column: 12, scope: !1672)
!1675 = !DILocation(line: 1321, column: 19, scope: !1672)
!1676 = !DILocation(line: 1321, column: 23, scope: !1677)
!1677 = !DILexicalBlockFile(scope: !1672, file: !1, discriminator: 1)
!1678 = !DILocation(line: 1321, column: 22, scope: !1677)
!1679 = !DILocation(line: 1321, column: 25, scope: !1677)
!1680 = !DILocation(line: 1321, column: 9, scope: !1677)
!1681 = !DILocation(line: 1322, column: 14, scope: !1672)
!1682 = !DILocation(line: 1322, column: 13, scope: !1672)
!1683 = !DILocation(line: 1322, column: 16, scope: !1672)
!1684 = !DILocation(line: 1322, column: 22, scope: !1672)
!1685 = !DILocation(line: 1322, column: 10, scope: !1672)
!1686 = !DILocation(line: 1322, column: 6, scope: !1672)
!1687 = !DILocation(line: 1323, column: 15, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 1323, column: 14)
!1689 = !DILocation(line: 1323, column: 14, scope: !1688)
!1690 = !DILocation(line: 1323, column: 17, scope: !1688)
!1691 = !DILocation(line: 1323, column: 24, scope: !1688)
!1692 = !DILocation(line: 1323, column: 28, scope: !1693)
!1693 = !DILexicalBlockFile(scope: !1688, file: !1, discriminator: 1)
!1694 = !DILocation(line: 1323, column: 27, scope: !1693)
!1695 = !DILocation(line: 1323, column: 30, scope: !1693)
!1696 = !DILocation(line: 1323, column: 14, scope: !1693)
!1697 = !DILocation(line: 1324, column: 14, scope: !1688)
!1698 = !DILocation(line: 1324, column: 13, scope: !1688)
!1699 = !DILocation(line: 1324, column: 16, scope: !1688)
!1700 = !DILocation(line: 1324, column: 22, scope: !1688)
!1701 = !DILocation(line: 1324, column: 10, scope: !1688)
!1702 = !DILocation(line: 1324, column: 6, scope: !1688)
!1703 = !DILocation(line: 1325, column: 15, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 1325, column: 14)
!1705 = !DILocation(line: 1325, column: 14, scope: !1704)
!1706 = !DILocation(line: 1325, column: 17, scope: !1704)
!1707 = !DILocation(line: 1325, column: 24, scope: !1704)
!1708 = !DILocation(line: 1325, column: 28, scope: !1709)
!1709 = !DILexicalBlockFile(scope: !1704, file: !1, discriminator: 1)
!1710 = !DILocation(line: 1325, column: 27, scope: !1709)
!1711 = !DILocation(line: 1325, column: 30, scope: !1709)
!1712 = !DILocation(line: 1325, column: 14, scope: !1709)
!1713 = !DILocation(line: 1326, column: 14, scope: !1704)
!1714 = !DILocation(line: 1326, column: 13, scope: !1704)
!1715 = !DILocation(line: 1326, column: 16, scope: !1704)
!1716 = !DILocation(line: 1326, column: 10, scope: !1704)
!1717 = !DILocation(line: 1326, column: 6, scope: !1704)
!1718 = !DILocation(line: 1328, column: 6, scope: !1704)
!1719 = !DILocation(line: 1329, column: 9, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1667, file: !1, line: 1329, column: 9)
!1721 = !DILocation(line: 1329, column: 13, scope: !1720)
!1722 = !DILocation(line: 1329, column: 9, scope: !1667)
!1723 = !DILocation(line: 1330, column: 25, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1720, file: !1, line: 1329, column: 23)
!1725 = !DILocation(line: 1330, column: 28, scope: !1724)
!1726 = !DILocation(line: 1333, column: 27, scope: !1724)
!1727 = !DILocation(line: 1330, column: 6, scope: !1724)
!1728 = !DILocation(line: 1334, column: 6, scope: !1724)
!1729 = !DILocation(line: 1336, column: 6, scope: !1667)
!1730 = !DILocation(line: 1318, column: 4, scope: !1731)
!1731 = !DILexicalBlockFile(scope: !1632, file: !1, discriminator: 2)
!1732 = !DILocation(line: 1338, column: 49, scope: !1632)
!1733 = !DILocation(line: 1338, column: 39, scope: !1632)
!1734 = !DILocation(line: 1338, column: 4, scope: !1632)
!1735 = !DILocation(line: 1338, column: 13, scope: !1632)
!1736 = !DILocation(line: 1338, column: 23, scope: !1632)
!1737 = !DILocation(line: 1338, column: 37, scope: !1632)
!1738 = !DILocation(line: 1339, column: 4, scope: !1632)
!1739 = !DILocation(line: 1339, column: 13, scope: !1632)
!1740 = !DILocation(line: 1339, column: 17, scope: !1632)
!1741 = !DILocation(line: 1339, column: 31, scope: !1632)
!1742 = !DILocation(line: 1340, column: 4, scope: !1632)
!1743 = !DILocation(line: 1342, column: 14, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1342, column: 7)
!1745 = !DILocation(line: 1342, column: 7, scope: !1744)
!1746 = !DILocation(line: 1342, column: 37, scope: !1744)
!1747 = !DILocation(line: 1342, column: 7, scope: !1488)
!1748 = !DILocalVariable(name: "num", scope: !1749, file: !1, line: 1343, type: !31)
!1749 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 1342, column: 43)
!1750 = !DILocation(line: 1343, column: 8, scope: !1749)
!1751 = !DILocation(line: 1344, column: 20, scope: !1749)
!1752 = !DILocation(line: 1344, column: 40, scope: !1749)
!1753 = !DILocation(line: 1344, column: 45, scope: !1749)
!1754 = !DILocation(line: 1344, column: 8, scope: !1749)
!1755 = !DILocation(line: 1344, column: 6, scope: !1749)
!1756 = !DILocation(line: 1345, column: 34, scope: !1749)
!1757 = !DILocation(line: 1345, column: 36, scope: !1749)
!1758 = !DILocation(line: 1345, column: 4, scope: !1749)
!1759 = !DILocation(line: 1345, column: 13, scope: !1749)
!1760 = !DILocation(line: 1345, column: 17, scope: !1749)
!1761 = !DILocation(line: 1345, column: 32, scope: !1749)
!1762 = !DILocation(line: 1346, column: 8, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1749, file: !1, line: 1346, column: 8)
!1764 = !DILocation(line: 1346, column: 10, scope: !1763)
!1765 = !DILocation(line: 1346, column: 8, scope: !1749)
!1766 = !DILocation(line: 1347, column: 5, scope: !1763)
!1767 = !DILocation(line: 1348, column: 50, scope: !1749)
!1768 = !DILocation(line: 1348, column: 40, scope: !1749)
!1769 = !DILocation(line: 1348, column: 4, scope: !1749)
!1770 = !DILocation(line: 1348, column: 13, scope: !1749)
!1771 = !DILocation(line: 1348, column: 23, scope: !1749)
!1772 = !DILocation(line: 1348, column: 38, scope: !1749)
!1773 = !DILocation(line: 1349, column: 4, scope: !1749)
!1774 = !DILocation(line: 1351, column: 14, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1351, column: 7)
!1776 = !DILocation(line: 1351, column: 7, scope: !1775)
!1777 = !DILocation(line: 1351, column: 32, scope: !1775)
!1778 = !DILocation(line: 1351, column: 7, scope: !1488)
!1779 = !DILocation(line: 1352, column: 8, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 1352, column: 8)
!1781 = distinct !DILexicalBlock(scope: !1775, file: !1, line: 1351, column: 38)
!1782 = !DILocation(line: 1352, column: 14, scope: !1780)
!1783 = !DILocation(line: 1352, column: 8, scope: !1781)
!1784 = !DILocation(line: 1353, column: 5, scope: !1780)
!1785 = !DILocation(line: 1354, column: 15, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1781, file: !1, line: 1354, column: 8)
!1787 = !DILocation(line: 1354, column: 8, scope: !1786)
!1788 = !DILocation(line: 1354, column: 38, scope: !1786)
!1789 = !DILocation(line: 1354, column: 8, scope: !1781)
!1790 = !DILocation(line: 1355, column: 5, scope: !1786)
!1791 = !DILocation(line: 1355, column: 14, scope: !1786)
!1792 = !DILocation(line: 1355, column: 18, scope: !1786)
!1793 = !DILocation(line: 1355, column: 28, scope: !1786)
!1794 = !DILocation(line: 1356, column: 20, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1786, file: !1, line: 1356, column: 13)
!1796 = !DILocation(line: 1356, column: 13, scope: !1795)
!1797 = !DILocation(line: 1356, column: 33, scope: !1795)
!1798 = !DILocation(line: 1356, column: 13, scope: !1786)
!1799 = !DILocation(line: 1357, column: 5, scope: !1795)
!1800 = !DILocation(line: 1357, column: 14, scope: !1795)
!1801 = !DILocation(line: 1357, column: 18, scope: !1795)
!1802 = !DILocation(line: 1357, column: 28, scope: !1795)
!1803 = !DILocation(line: 1358, column: 20, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1795, file: !1, line: 1358, column: 13)
!1805 = !DILocation(line: 1358, column: 13, scope: !1804)
!1806 = !DILocation(line: 1358, column: 40, scope: !1804)
!1807 = !DILocation(line: 1358, column: 13, scope: !1795)
!1808 = !DILocation(line: 1359, column: 5, scope: !1804)
!1809 = !DILocation(line: 1359, column: 14, scope: !1804)
!1810 = !DILocation(line: 1359, column: 18, scope: !1804)
!1811 = !DILocation(line: 1359, column: 28, scope: !1804)
!1812 = !DILocation(line: 1361, column: 5, scope: !1804)
!1813 = !DILocation(line: 1362, column: 4, scope: !1781)
!1814 = !DILocation(line: 1364, column: 3, scope: !1488)
!1815 = !DILocation(line: 1366, column: 14, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1366, column: 7)
!1817 = !DILocation(line: 1366, column: 7, scope: !1816)
!1818 = !DILocation(line: 1366, column: 40, scope: !1816)
!1819 = !DILocation(line: 1366, column: 7, scope: !1488)
!1820 = !DILocation(line: 1368, column: 8, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1822, file: !1, line: 1368, column: 8)
!1822 = distinct !DILexicalBlock(scope: !1816, file: !1, line: 1366, column: 46)
!1823 = !DILocation(line: 1368, column: 14, scope: !1821)
!1824 = !DILocation(line: 1368, column: 22, scope: !1821)
!1825 = !DILocation(line: 1369, column: 10, scope: !1821)
!1826 = !DILocation(line: 1369, column: 19, scope: !1821)
!1827 = !DILocation(line: 1369, column: 26, scope: !1821)
!1828 = !DILocation(line: 1369, column: 29, scope: !1829)
!1829 = !DILexicalBlockFile(scope: !1821, file: !1, discriminator: 1)
!1830 = !DILocation(line: 1369, column: 38, scope: !1829)
!1831 = !DILocation(line: 1369, column: 46, scope: !1829)
!1832 = !DILocation(line: 1370, column: 8, scope: !1821)
!1833 = !DILocation(line: 1370, column: 17, scope: !1821)
!1834 = !DILocation(line: 1368, column: 8, scope: !1835)
!1835 = !DILexicalBlockFile(scope: !1822, file: !1, discriminator: 1)
!1836 = !DILocation(line: 1371, column: 5, scope: !1821)
!1837 = !DILocation(line: 1372, column: 54, scope: !1822)
!1838 = !DILocation(line: 1372, column: 63, scope: !1822)
!1839 = !DILocation(line: 1372, column: 18, scope: !1822)
!1840 = !DILocation(line: 1372, column: 27, scope: !1822)
!1841 = !DILocation(line: 1372, column: 34, scope: !1822)
!1842 = !DILocation(line: 1372, column: 52, scope: !1822)
!1843 = !DILocation(line: 1373, column: 4, scope: !1822)
!1844 = !DILocation(line: 1373, column: 13, scope: !1822)
!1845 = !DILocation(line: 1373, column: 17, scope: !1822)
!1846 = !DILocation(line: 1373, column: 35, scope: !1822)
!1847 = !DILocation(line: 1374, column: 18, scope: !1822)
!1848 = !DILocation(line: 1383, column: 14, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1383, column: 7)
!1850 = !DILocation(line: 1383, column: 7, scope: !1849)
!1851 = !DILocation(line: 1383, column: 37, scope: !1849)
!1852 = !DILocation(line: 1383, column: 7, scope: !1488)
!1853 = !DILocation(line: 1384, column: 20, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1849, file: !1, line: 1383, column: 43)
!1855 = !DILocation(line: 1385, column: 10, scope: !1854)
!1856 = !DILocation(line: 1385, column: 19, scope: !1854)
!1857 = !DILocation(line: 1386, column: 29, scope: !1854)
!1858 = !DILocation(line: 1386, column: 34, scope: !1854)
!1859 = !DILocation(line: 1384, column: 8, scope: !1854)
!1860 = !DILocation(line: 1384, column: 6, scope: !1854)
!1861 = !DILocation(line: 1387, column: 34, scope: !1854)
!1862 = !DILocation(line: 1387, column: 36, scope: !1854)
!1863 = !DILocation(line: 1387, column: 4, scope: !1854)
!1864 = !DILocation(line: 1387, column: 13, scope: !1854)
!1865 = !DILocation(line: 1387, column: 17, scope: !1854)
!1866 = !DILocation(line: 1387, column: 32, scope: !1854)
!1867 = !DILocation(line: 1388, column: 12, scope: !1854)
!1868 = !DILocation(line: 1388, column: 4, scope: !1854)
!1869 = !DILocation(line: 1419, column: 3, scope: !1488)
!1870 = !DILocation(line: 1421, column: 14, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1421, column: 7)
!1872 = !DILocation(line: 1421, column: 7, scope: !1871)
!1873 = !DILocation(line: 1421, column: 32, scope: !1871)
!1874 = !DILocation(line: 1421, column: 7, scope: !1488)
!1875 = !DILocation(line: 1422, column: 8, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1877, file: !1, line: 1422, column: 8)
!1877 = distinct !DILexicalBlock(scope: !1871, file: !1, line: 1421, column: 38)
!1878 = !DILocation(line: 1422, column: 14, scope: !1876)
!1879 = !DILocation(line: 1422, column: 22, scope: !1876)
!1880 = !DILocation(line: 1422, column: 25, scope: !1881)
!1881 = !DILexicalBlockFile(scope: !1876, file: !1, discriminator: 1)
!1882 = !DILocation(line: 1422, column: 34, scope: !1881)
!1883 = !DILocation(line: 1422, column: 42, scope: !1881)
!1884 = !DILocation(line: 1423, column: 9, scope: !1876)
!1885 = !DILocation(line: 1423, column: 18, scope: !1876)
!1886 = !DILocation(line: 1423, column: 25, scope: !1876)
!1887 = !DILocation(line: 1423, column: 28, scope: !1881)
!1888 = !DILocation(line: 1423, column: 37, scope: !1881)
!1889 = !DILocation(line: 1422, column: 8, scope: !1890)
!1890 = !DILexicalBlockFile(scope: !1877, file: !1, discriminator: 2)
!1891 = !DILocation(line: 1424, column: 30, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1876, file: !1, line: 1423, column: 46)
!1893 = !DILocation(line: 1424, column: 38, scope: !1892)
!1894 = !DILocation(line: 1424, column: 5, scope: !1892)
!1895 = !DILocation(line: 1424, column: 14, scope: !1892)
!1896 = !DILocation(line: 1424, column: 18, scope: !1892)
!1897 = !DILocation(line: 1424, column: 28, scope: !1892)
!1898 = !DILocation(line: 1425, column: 5, scope: !1892)
!1899 = !DILocation(line: 1427, column: 4, scope: !1877)
!1900 = !DILocation(line: 1429, column: 3, scope: !1488)
!1901 = !DILocation(line: 1431, column: 14, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1431, column: 7)
!1903 = !DILocation(line: 1431, column: 7, scope: !1902)
!1904 = !DILocation(line: 1431, column: 29, scope: !1902)
!1905 = !DILocation(line: 1431, column: 7, scope: !1488)
!1906 = !DILocation(line: 1432, column: 8, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 1432, column: 8)
!1908 = distinct !DILexicalBlock(scope: !1902, file: !1, line: 1431, column: 35)
!1909 = !DILocation(line: 1432, column: 14, scope: !1907)
!1910 = !DILocation(line: 1432, column: 8, scope: !1908)
!1911 = !DILocation(line: 1433, column: 5, scope: !1907)
!1912 = !DILocation(line: 1433, column: 14, scope: !1907)
!1913 = !DILocation(line: 1433, column: 18, scope: !1907)
!1914 = !DILocation(line: 1433, column: 25, scope: !1907)
!1915 = !DILocation(line: 1434, column: 20, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1907, file: !1, line: 1434, column: 13)
!1917 = !DILocation(line: 1434, column: 13, scope: !1916)
!1918 = !DILocation(line: 1434, column: 32, scope: !1916)
!1919 = !DILocation(line: 1434, column: 13, scope: !1907)
!1920 = !DILocation(line: 1435, column: 5, scope: !1916)
!1921 = !DILocation(line: 1435, column: 14, scope: !1916)
!1922 = !DILocation(line: 1435, column: 18, scope: !1916)
!1923 = !DILocation(line: 1435, column: 25, scope: !1916)
!1924 = !DILocation(line: 1436, column: 20, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 1436, column: 13)
!1926 = !DILocation(line: 1436, column: 13, scope: !1925)
!1927 = !DILocation(line: 1436, column: 35, scope: !1925)
!1928 = !DILocation(line: 1436, column: 13, scope: !1916)
!1929 = !DILocation(line: 1437, column: 5, scope: !1925)
!1930 = !DILocation(line: 1437, column: 14, scope: !1925)
!1931 = !DILocation(line: 1437, column: 18, scope: !1925)
!1932 = !DILocation(line: 1437, column: 25, scope: !1925)
!1933 = !DILocation(line: 1439, column: 5, scope: !1925)
!1934 = !DILocation(line: 1440, column: 4, scope: !1908)
!1935 = !DILocation(line: 1442, column: 3, scope: !1488)
!1936 = !DILocation(line: 1444, column: 14, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1444, column: 7)
!1938 = !DILocation(line: 1444, column: 7, scope: !1937)
!1939 = !DILocation(line: 1444, column: 34, scope: !1937)
!1940 = !DILocation(line: 1444, column: 7, scope: !1488)
!1941 = !DILocation(line: 1445, column: 31, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1937, file: !1, line: 1444, column: 40)
!1943 = !DILocation(line: 1445, column: 37, scope: !1942)
!1944 = !DILocation(line: 1445, column: 4, scope: !1942)
!1945 = !DILocation(line: 1445, column: 13, scope: !1942)
!1946 = !DILocation(line: 1445, column: 17, scope: !1942)
!1947 = !DILocation(line: 1445, column: 29, scope: !1942)
!1948 = !DILocation(line: 1446, column: 4, scope: !1942)
!1949 = !DILocation(line: 1448, column: 14, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1448, column: 7)
!1951 = !DILocation(line: 1448, column: 7, scope: !1950)
!1952 = !DILocation(line: 1448, column: 33, scope: !1950)
!1953 = !DILocation(line: 1448, column: 7, scope: !1488)
!1954 = !DILocation(line: 1449, column: 30, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1950, file: !1, line: 1448, column: 39)
!1956 = !DILocation(line: 1449, column: 36, scope: !1955)
!1957 = !DILocation(line: 1449, column: 4, scope: !1955)
!1958 = !DILocation(line: 1449, column: 13, scope: !1955)
!1959 = !DILocation(line: 1449, column: 17, scope: !1955)
!1960 = !DILocation(line: 1449, column: 28, scope: !1955)
!1961 = !DILocation(line: 1450, column: 4, scope: !1955)
!1962 = !DILocation(line: 1452, column: 3, scope: !1488)
!1963 = !DILocation(line: 1454, column: 14, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1454, column: 7)
!1965 = !DILocation(line: 1454, column: 7, scope: !1964)
!1966 = !DILocation(line: 1454, column: 26, scope: !1964)
!1967 = !DILocation(line: 1454, column: 7, scope: !1488)
!1968 = !DILocation(line: 1455, column: 23, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1964, file: !1, line: 1454, column: 32)
!1970 = !DILocation(line: 1455, column: 29, scope: !1969)
!1971 = !DILocation(line: 1455, column: 4, scope: !1969)
!1972 = !DILocation(line: 1455, column: 13, scope: !1969)
!1973 = !DILocation(line: 1455, column: 17, scope: !1969)
!1974 = !DILocation(line: 1455, column: 21, scope: !1969)
!1975 = !DILocation(line: 1456, column: 4, scope: !1969)
!1976 = !DILocation(line: 1458, column: 14, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1458, column: 7)
!1978 = !DILocation(line: 1458, column: 7, scope: !1977)
!1979 = !DILocation(line: 1458, column: 32, scope: !1977)
!1980 = !DILocation(line: 1458, column: 7, scope: !1488)
!1981 = !DILocation(line: 1459, column: 20, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1977, file: !1, line: 1458, column: 38)
!1983 = !DILocation(line: 1460, column: 10, scope: !1982)
!1984 = !DILocation(line: 1460, column: 19, scope: !1982)
!1985 = !DILocation(line: 1461, column: 35, scope: !1982)
!1986 = !DILocation(line: 1461, column: 40, scope: !1982)
!1987 = !DILocation(line: 1459, column: 8, scope: !1982)
!1988 = !DILocation(line: 1459, column: 6, scope: !1982)
!1989 = !DILocation(line: 1462, column: 29, scope: !1982)
!1990 = !DILocation(line: 1462, column: 31, scope: !1982)
!1991 = !DILocation(line: 1462, column: 4, scope: !1982)
!1992 = !DILocation(line: 1462, column: 13, scope: !1982)
!1993 = !DILocation(line: 1462, column: 17, scope: !1982)
!1994 = !DILocation(line: 1462, column: 27, scope: !1982)
!1995 = !DILocation(line: 1463, column: 12, scope: !1982)
!1996 = !DILocation(line: 1463, column: 4, scope: !1982)
!1997 = !DILocation(line: 1465, column: 3, scope: !1488)
!1998 = !DILocation(line: 1467, column: 14, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1467, column: 7)
!2000 = !DILocation(line: 1467, column: 7, scope: !1999)
!2001 = !DILocation(line: 1467, column: 32, scope: !1999)
!2002 = !DILocation(line: 1467, column: 37, scope: !1999)
!2003 = !DILocation(line: 1468, column: 14, scope: !1999)
!2004 = !DILocation(line: 1468, column: 7, scope: !1999)
!2005 = !DILocation(line: 1468, column: 32, scope: !1999)
!2006 = !DILocation(line: 1467, column: 7, scope: !2007)
!2007 = !DILexicalBlockFile(scope: !1488, file: !1, discriminator: 1)
!2008 = !DILocation(line: 1469, column: 8, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !1, line: 1469, column: 8)
!2010 = distinct !DILexicalBlock(scope: !1999, file: !1, line: 1468, column: 38)
!2011 = !DILocation(line: 1469, column: 14, scope: !2009)
!2012 = !DILocation(line: 1469, column: 8, scope: !2010)
!2013 = !DILocation(line: 1470, column: 5, scope: !2009)
!2014 = !DILocation(line: 1470, column: 14, scope: !2009)
!2015 = !DILocation(line: 1470, column: 18, scope: !2009)
!2016 = !DILocation(line: 1470, column: 21, scope: !2009)
!2017 = !DILocation(line: 1471, column: 20, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2009, file: !1, line: 1471, column: 13)
!2019 = !DILocation(line: 1471, column: 13, scope: !2018)
!2020 = !DILocation(line: 1471, column: 32, scope: !2018)
!2021 = !DILocation(line: 1471, column: 13, scope: !2009)
!2022 = !DILocation(line: 1472, column: 5, scope: !2018)
!2023 = !DILocation(line: 1472, column: 14, scope: !2018)
!2024 = !DILocation(line: 1472, column: 18, scope: !2018)
!2025 = !DILocation(line: 1472, column: 21, scope: !2018)
!2026 = !DILocation(line: 1473, column: 20, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2018, file: !1, line: 1473, column: 13)
!2028 = !DILocation(line: 1473, column: 13, scope: !2027)
!2029 = !DILocation(line: 1473, column: 37, scope: !2027)
!2030 = !DILocation(line: 1473, column: 13, scope: !2018)
!2031 = !DILocation(line: 1474, column: 5, scope: !2027)
!2032 = !DILocation(line: 1474, column: 14, scope: !2027)
!2033 = !DILocation(line: 1474, column: 18, scope: !2027)
!2034 = !DILocation(line: 1474, column: 21, scope: !2027)
!2035 = !DILocation(line: 1475, column: 20, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2027, file: !1, line: 1475, column: 13)
!2037 = !DILocation(line: 1475, column: 13, scope: !2036)
!2038 = !DILocation(line: 1475, column: 37, scope: !2036)
!2039 = !DILocation(line: 1475, column: 13, scope: !2027)
!2040 = !DILocation(line: 1476, column: 5, scope: !2036)
!2041 = !DILocation(line: 1476, column: 14, scope: !2036)
!2042 = !DILocation(line: 1476, column: 18, scope: !2036)
!2043 = !DILocation(line: 1476, column: 21, scope: !2036)
!2044 = !DILocation(line: 1478, column: 5, scope: !2036)
!2045 = !DILocation(line: 1479, column: 4, scope: !2010)
!2046 = !DILocation(line: 1481, column: 3, scope: !1488)
!2047 = !DILocation(line: 1483, column: 14, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1483, column: 7)
!2049 = !DILocation(line: 1483, column: 7, scope: !2048)
!2050 = !DILocation(line: 1483, column: 32, scope: !2048)
!2051 = !DILocation(line: 1483, column: 7, scope: !1488)
!2052 = !DILocation(line: 1484, column: 20, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2048, file: !1, line: 1483, column: 38)
!2054 = !DILocation(line: 1484, column: 25, scope: !2053)
!2055 = !DILocation(line: 1484, column: 34, scope: !2053)
!2056 = !DILocation(line: 1485, column: 32, scope: !2053)
!2057 = !DILocation(line: 1485, column: 37, scope: !2053)
!2058 = !DILocation(line: 1484, column: 8, scope: !2053)
!2059 = !DILocation(line: 1484, column: 6, scope: !2053)
!2060 = !DILocation(line: 1486, column: 29, scope: !2053)
!2061 = !DILocation(line: 1486, column: 31, scope: !2053)
!2062 = !DILocation(line: 1486, column: 4, scope: !2053)
!2063 = !DILocation(line: 1486, column: 13, scope: !2053)
!2064 = !DILocation(line: 1486, column: 17, scope: !2053)
!2065 = !DILocation(line: 1486, column: 27, scope: !2053)
!2066 = !DILocation(line: 1487, column: 12, scope: !2053)
!2067 = !DILocation(line: 1487, column: 4, scope: !2053)
!2068 = !DILocation(line: 1489, column: 3, scope: !1488)
!2069 = !DILocation(line: 1491, column: 14, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1491, column: 7)
!2071 = !DILocation(line: 1491, column: 7, scope: !2070)
!2072 = !DILocation(line: 1491, column: 29, scope: !2070)
!2073 = !DILocation(line: 1491, column: 7, scope: !1488)
!2074 = !DILocation(line: 1492, column: 8, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !1, line: 1492, column: 8)
!2076 = distinct !DILexicalBlock(scope: !2070, file: !1, line: 1491, column: 35)
!2077 = !DILocation(line: 1492, column: 14, scope: !2075)
!2078 = !DILocation(line: 1492, column: 8, scope: !2076)
!2079 = !DILocation(line: 1493, column: 5, scope: !2075)
!2080 = !DILocation(line: 1493, column: 14, scope: !2075)
!2081 = !DILocation(line: 1493, column: 18, scope: !2075)
!2082 = !DILocation(line: 1493, column: 25, scope: !2075)
!2083 = !DILocation(line: 1496, column: 5, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 1494, column: 9)
!2085 = !DILocation(line: 1496, column: 14, scope: !2084)
!2086 = !DILocation(line: 1496, column: 18, scope: !2084)
!2087 = !DILocation(line: 1496, column: 25, scope: !2084)
!2088 = !DILocation(line: 1505, column: 4, scope: !2076)
!2089 = !DILocation(line: 1507, column: 3, scope: !1488)
!2090 = !DILocation(line: 1513, column: 2, scope: !571)
!2091 = !DILocation(line: 1516, column: 21, scope: !571)
!2092 = !DILocation(line: 1516, column: 24, scope: !571)
!2093 = !DILocation(line: 1517, column: 41, scope: !571)
!2094 = !DILocation(line: 1516, column: 2, scope: !571)
!2095 = !DILocation(line: 1518, column: 2, scope: !571)
!2096 = !DILocation(line: 1519, column: 1, scope: !571)
!2097 = !DILocalVariable(name: "a", arg: 1, scope: !580, file: !1, line: 1522, type: !367)
!2098 = !DILocation(line: 1522, column: 44, scope: !580)
!2099 = !DILocalVariable(name: "entry", arg: 2, scope: !580, file: !1, line: 1522, type: !12)
!2100 = !DILocation(line: 1522, column: 69, scope: !580)
!2101 = !DILocalVariable(name: "iso9660", scope: !580, file: !1, line: 1524, type: !530)
!2102 = !DILocation(line: 1524, column: 18, scope: !580)
!2103 = !DILocalVariable(name: "file", scope: !580, file: !1, line: 1525, type: !7)
!2104 = !DILocation(line: 1525, column: 18, scope: !580)
!2105 = !DILocalVariable(name: "isoent", scope: !580, file: !1, line: 1526, type: !76)
!2106 = !DILocation(line: 1526, column: 17, scope: !580)
!2107 = !DILocalVariable(name: "r", scope: !580, file: !1, line: 1527, type: !31)
!2108 = !DILocation(line: 1527, column: 6, scope: !580)
!2109 = !DILocalVariable(name: "ret", scope: !580, file: !1, line: 1527, type: !31)
!2110 = !DILocation(line: 1527, column: 9, scope: !580)
!2111 = !DILocation(line: 1529, column: 12, scope: !580)
!2112 = !DILocation(line: 1529, column: 15, scope: !580)
!2113 = !DILocation(line: 1529, column: 10, scope: !580)
!2114 = !DILocation(line: 1531, column: 2, scope: !580)
!2115 = !DILocation(line: 1531, column: 11, scope: !580)
!2116 = !DILocation(line: 1531, column: 20, scope: !580)
!2117 = !DILocation(line: 1532, column: 2, scope: !580)
!2118 = !DILocation(line: 1532, column: 11, scope: !580)
!2119 = !DILocation(line: 1532, column: 27, scope: !580)
!2120 = !DILocation(line: 1533, column: 2, scope: !580)
!2121 = !DILocation(line: 1533, column: 11, scope: !580)
!2122 = !DILocation(line: 1533, column: 29, scope: !580)
!2123 = !DILocation(line: 1534, column: 29, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1534, column: 6)
!2125 = !DILocation(line: 1534, column: 6, scope: !2124)
!2126 = !DILocation(line: 1534, column: 36, scope: !2124)
!2127 = !DILocation(line: 1535, column: 6, scope: !2124)
!2128 = !DILocation(line: 1535, column: 9, scope: !2129)
!2129 = !DILexicalBlockFile(scope: !2124, file: !1, discriminator: 1)
!2130 = !DILocation(line: 1535, column: 18, scope: !2129)
!2131 = !DILocation(line: 1535, column: 22, scope: !2129)
!2132 = !DILocation(line: 1535, column: 25, scope: !2129)
!2133 = !DILocation(line: 1534, column: 6, scope: !2134)
!2134 = !DILexicalBlockFile(scope: !580, file: !1, discriminator: 1)
!2135 = !DILocation(line: 1536, column: 22, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2124, file: !1, line: 1535, column: 45)
!2137 = !DILocation(line: 1536, column: 25, scope: !2136)
!2138 = !DILocation(line: 1536, column: 3, scope: !2136)
!2139 = !DILocation(line: 1538, column: 3, scope: !2136)
!2140 = !DILocation(line: 1538, column: 12, scope: !2136)
!2141 = !DILocation(line: 1538, column: 21, scope: !2136)
!2142 = !DILocation(line: 1539, column: 3, scope: !2136)
!2143 = !DILocation(line: 1541, column: 29, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1541, column: 6)
!2145 = !DILocation(line: 1541, column: 6, scope: !2144)
!2146 = !DILocation(line: 1541, column: 36, scope: !2144)
!2147 = !DILocation(line: 1541, column: 48, scope: !2144)
!2148 = !DILocation(line: 1542, column: 25, scope: !2144)
!2149 = !DILocation(line: 1542, column: 6, scope: !2144)
!2150 = !DILocation(line: 1542, column: 32, scope: !2144)
!2151 = !DILocation(line: 1541, column: 6, scope: !2134)
!2152 = !DILocation(line: 1543, column: 7, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 1543, column: 7)
!2154 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1542, column: 54)
!2155 = !DILocation(line: 1543, column: 16, scope: !2153)
!2156 = !DILocation(line: 1543, column: 20, scope: !2153)
!2157 = !DILocation(line: 1543, column: 30, scope: !2153)
!2158 = !DILocation(line: 1543, column: 7, scope: !2154)
!2159 = !DILocation(line: 1544, column: 23, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2153, file: !1, line: 1543, column: 35)
!2161 = !DILocation(line: 1544, column: 26, scope: !2160)
!2162 = !DILocation(line: 1544, column: 4, scope: !2160)
!2163 = !DILocation(line: 1549, column: 5, scope: !2160)
!2164 = !DILocation(line: 1549, column: 14, scope: !2160)
!2165 = !DILocation(line: 1549, column: 23, scope: !2160)
!2166 = !DILocation(line: 1550, column: 4, scope: !2160)
!2167 = !DILocation(line: 1552, column: 3, scope: !2154)
!2168 = !DILocation(line: 1552, column: 12, scope: !2154)
!2169 = !DILocation(line: 1552, column: 30, scope: !2154)
!2170 = !DILocation(line: 1553, column: 2, scope: !2154)
!2171 = !DILocation(line: 1555, column: 21, scope: !580)
!2172 = !DILocation(line: 1555, column: 24, scope: !580)
!2173 = !DILocation(line: 1555, column: 9, scope: !580)
!2174 = !DILocation(line: 1555, column: 7, scope: !580)
!2175 = !DILocation(line: 1556, column: 6, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1556, column: 6)
!2177 = !DILocation(line: 1556, column: 11, scope: !2176)
!2178 = !DILocation(line: 1556, column: 6, scope: !580)
!2179 = !DILocation(line: 1557, column: 22, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 1556, column: 20)
!2181 = !DILocation(line: 1557, column: 25, scope: !2180)
!2182 = !DILocation(line: 1557, column: 3, scope: !2180)
!2183 = !DILocation(line: 1559, column: 3, scope: !2180)
!2184 = !DILocation(line: 1561, column: 32, scope: !580)
!2185 = !DILocation(line: 1561, column: 35, scope: !580)
!2186 = !DILocation(line: 1561, column: 6, scope: !580)
!2187 = !DILocation(line: 1561, column: 4, scope: !580)
!2188 = !DILocation(line: 1562, column: 6, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1562, column: 6)
!2190 = !DILocation(line: 1562, column: 8, scope: !2189)
!2191 = !DILocation(line: 1562, column: 6, scope: !580)
!2192 = !DILocation(line: 1563, column: 16, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 1562, column: 24)
!2194 = !DILocation(line: 1563, column: 3, scope: !2193)
!2195 = !DILocation(line: 1564, column: 11, scope: !2193)
!2196 = !DILocation(line: 1564, column: 3, scope: !2193)
!2197 = !DILocation(line: 1566, column: 11, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 1566, column: 11)
!2199 = !DILocation(line: 1566, column: 15, scope: !2198)
!2200 = !DILocation(line: 1566, column: 13, scope: !2198)
!2201 = !DILocation(line: 1566, column: 11, scope: !2189)
!2202 = !DILocation(line: 1567, column: 9, scope: !2198)
!2203 = !DILocation(line: 1567, column: 7, scope: !2198)
!2204 = !DILocation(line: 1567, column: 3, scope: !2198)
!2205 = !DILocation(line: 1573, column: 6, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1573, column: 6)
!2207 = !DILocation(line: 1573, column: 41, scope: !2206)
!2208 = !DILocation(line: 1573, column: 46, scope: !2206)
!2209 = !DILocation(line: 1574, column: 6, scope: !2206)
!2210 = !DILocation(line: 1574, column: 40, scope: !2206)
!2211 = !DILocation(line: 1573, column: 6, scope: !2134)
!2212 = !DILocation(line: 1575, column: 16, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2206, file: !1, line: 1574, column: 46)
!2214 = !DILocation(line: 1575, column: 3, scope: !2213)
!2215 = !DILocation(line: 1576, column: 11, scope: !2213)
!2216 = !DILocation(line: 1576, column: 3, scope: !2213)
!2217 = !DILocation(line: 1579, column: 20, scope: !580)
!2218 = !DILocation(line: 1579, column: 29, scope: !580)
!2219 = !DILocation(line: 1579, column: 2, scope: !580)
!2220 = !DILocation(line: 1580, column: 22, scope: !580)
!2221 = !DILocation(line: 1580, column: 11, scope: !580)
!2222 = !DILocation(line: 1580, column: 9, scope: !580)
!2223 = !DILocation(line: 1581, column: 6, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1581, column: 6)
!2225 = !DILocation(line: 1581, column: 13, scope: !2224)
!2226 = !DILocation(line: 1581, column: 6, scope: !580)
!2227 = !DILocation(line: 1582, column: 22, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2224, file: !1, line: 1581, column: 22)
!2229 = !DILocation(line: 1582, column: 25, scope: !2228)
!2230 = !DILocation(line: 1582, column: 3, scope: !2228)
!2231 = !DILocation(line: 1584, column: 3, scope: !2228)
!2232 = !DILocation(line: 1586, column: 6, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1586, column: 6)
!2234 = !DILocation(line: 1586, column: 14, scope: !2233)
!2235 = !DILocation(line: 1586, column: 20, scope: !2233)
!2236 = !DILocation(line: 1586, column: 29, scope: !2233)
!2237 = !DILocation(line: 1586, column: 38, scope: !2233)
!2238 = !DILocation(line: 1586, column: 27, scope: !2233)
!2239 = !DILocation(line: 1586, column: 6, scope: !580)
!2240 = !DILocation(line: 1587, column: 25, scope: !2233)
!2241 = !DILocation(line: 1587, column: 33, scope: !2233)
!2242 = !DILocation(line: 1587, column: 39, scope: !2233)
!2243 = !DILocation(line: 1587, column: 3, scope: !2233)
!2244 = !DILocation(line: 1587, column: 12, scope: !2233)
!2245 = !DILocation(line: 1587, column: 23, scope: !2233)
!2246 = !DILocation(line: 1590, column: 18, scope: !580)
!2247 = !DILocation(line: 1590, column: 6, scope: !580)
!2248 = !DILocation(line: 1590, column: 4, scope: !580)
!2249 = !DILocation(line: 1591, column: 6, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1591, column: 6)
!2251 = !DILocation(line: 1591, column: 8, scope: !2250)
!2252 = !DILocation(line: 1591, column: 6, scope: !580)
!2253 = !DILocation(line: 1592, column: 11, scope: !2250)
!2254 = !DILocation(line: 1592, column: 3, scope: !2250)
!2255 = !DILocation(line: 1597, column: 6, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1597, column: 6)
!2257 = !DILocation(line: 1597, column: 14, scope: !2256)
!2258 = !DILocation(line: 1597, column: 22, scope: !2256)
!2259 = !DILocation(line: 1597, column: 19, scope: !2256)
!2260 = !DILocation(line: 1597, column: 6, scope: !580)
!2261 = !DILocation(line: 1598, column: 3, scope: !2256)
!2262 = !DILocation(line: 1602, column: 29, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1602, column: 6)
!2264 = !DILocation(line: 1602, column: 35, scope: !2263)
!2265 = !DILocation(line: 1602, column: 6, scope: !2263)
!2266 = !DILocation(line: 1602, column: 42, scope: !2263)
!2267 = !DILocation(line: 1602, column: 6, scope: !580)
!2268 = !DILocation(line: 1603, column: 11, scope: !2263)
!2269 = !DILocation(line: 1603, column: 3, scope: !2263)
!2270 = !DILocation(line: 1608, column: 22, scope: !580)
!2271 = !DILocation(line: 1608, column: 2, scope: !580)
!2272 = !DILocation(line: 1608, column: 11, scope: !580)
!2273 = !DILocation(line: 1608, column: 20, scope: !580)
!2274 = !DILocation(line: 1610, column: 26, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1610, column: 6)
!2276 = !DILocation(line: 1610, column: 32, scope: !2275)
!2277 = !DILocation(line: 1610, column: 6, scope: !2275)
!2278 = !DILocation(line: 1610, column: 39, scope: !2275)
!2279 = !DILocation(line: 1610, column: 6, scope: !580)
!2280 = !DILocation(line: 1611, column: 33, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2275, file: !1, line: 1610, column: 44)
!2282 = !DILocation(line: 1611, column: 36, scope: !2281)
!2283 = !DILocation(line: 1611, column: 7, scope: !2281)
!2284 = !DILocation(line: 1611, column: 5, scope: !2281)
!2285 = !DILocation(line: 1612, column: 7, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2281, file: !1, line: 1612, column: 7)
!2287 = !DILocation(line: 1612, column: 9, scope: !2286)
!2288 = !DILocation(line: 1612, column: 7, scope: !2281)
!2289 = !DILocation(line: 1613, column: 4, scope: !2286)
!2290 = !DILocation(line: 1614, column: 2, scope: !2281)
!2291 = !DILocation(line: 1619, column: 6, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1619, column: 6)
!2293 = !DILocation(line: 1619, column: 15, scope: !2292)
!2294 = !DILocation(line: 1619, column: 23, scope: !2292)
!2295 = !DILocation(line: 1619, column: 6, scope: !580)
!2296 = !DILocation(line: 1620, column: 22, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2292, file: !1, line: 1619, column: 28)
!2298 = !DILocation(line: 1620, column: 3, scope: !2297)
!2299 = !DILocation(line: 1620, column: 12, scope: !2297)
!2300 = !DILocation(line: 1620, column: 20, scope: !2297)
!2301 = !DILocation(line: 1621, column: 7, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2297, file: !1, line: 1621, column: 7)
!2303 = !DILocation(line: 1621, column: 16, scope: !2302)
!2304 = !DILocation(line: 1621, column: 24, scope: !2302)
!2305 = !DILocation(line: 1621, column: 7, scope: !2297)
!2306 = !DILocation(line: 1622, column: 23, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2302, file: !1, line: 1621, column: 29)
!2308 = !DILocation(line: 1622, column: 26, scope: !2307)
!2309 = !DILocation(line: 1622, column: 35, scope: !2307)
!2310 = !DILocation(line: 1622, column: 4, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2307, file: !1, discriminator: 1)
!2312 = !DILocation(line: 1624, column: 4, scope: !2307)
!2313 = !DILocation(line: 1626, column: 2, scope: !2297)
!2314 = !DILocation(line: 1629, column: 33, scope: !580)
!2315 = !DILocation(line: 1629, column: 2, scope: !580)
!2316 = !DILocation(line: 1629, column: 8, scope: !580)
!2317 = !DILocation(line: 1629, column: 16, scope: !580)
!2318 = !DILocation(line: 1629, column: 31, scope: !580)
!2319 = !DILocation(line: 1630, column: 24, scope: !580)
!2320 = !DILocation(line: 1630, column: 30, scope: !580)
!2321 = !DILocation(line: 1630, column: 2, scope: !580)
!2322 = !DILocation(line: 1630, column: 8, scope: !580)
!2323 = !DILocation(line: 1630, column: 20, scope: !580)
!2324 = !DILocation(line: 1631, column: 18, scope: !580)
!2325 = !DILocation(line: 1631, column: 21, scope: !580)
!2326 = !DILocation(line: 1631, column: 6, scope: !580)
!2327 = !DILocation(line: 1631, column: 4, scope: !580)
!2328 = !DILocation(line: 1632, column: 6, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !580, file: !1, line: 1632, column: 6)
!2330 = !DILocation(line: 1632, column: 10, scope: !2329)
!2331 = !DILocation(line: 1632, column: 8, scope: !2329)
!2332 = !DILocation(line: 1632, column: 6, scope: !580)
!2333 = !DILocation(line: 1633, column: 9, scope: !2329)
!2334 = !DILocation(line: 1633, column: 7, scope: !2329)
!2335 = !DILocation(line: 1633, column: 3, scope: !2329)
!2336 = !DILocation(line: 1634, column: 49, scope: !580)
!2337 = !DILocation(line: 1634, column: 55, scope: !580)
!2338 = !DILocation(line: 1634, column: 30, scope: !580)
!2339 = !DILocation(line: 1634, column: 2, scope: !580)
!2340 = !DILocation(line: 1634, column: 11, scope: !580)
!2341 = !DILocation(line: 1634, column: 27, scope: !580)
!2342 = !DILocation(line: 1636, column: 10, scope: !580)
!2343 = !DILocation(line: 1636, column: 2, scope: !580)
!2344 = !DILocation(line: 1637, column: 1, scope: !580)
!2345 = !DILocalVariable(name: "a", arg: 1, scope: !631, file: !1, line: 1789, type: !367)
!2346 = !DILocation(line: 1789, column: 42, scope: !631)
!2347 = !DILocalVariable(name: "buff", arg: 2, scope: !631, file: !1, line: 1789, type: !122)
!2348 = !DILocation(line: 1789, column: 57, scope: !631)
!2349 = !DILocalVariable(name: "s", arg: 3, scope: !631, file: !1, line: 1789, type: !23)
!2350 = !DILocation(line: 1789, column: 70, scope: !631)
!2351 = !DILocalVariable(name: "iso9660", scope: !631, file: !1, line: 1791, type: !530)
!2352 = !DILocation(line: 1791, column: 18, scope: !631)
!2353 = !DILocation(line: 1791, column: 28, scope: !631)
!2354 = !DILocation(line: 1791, column: 31, scope: !631)
!2355 = !DILocalVariable(name: "r", scope: !631, file: !1, line: 1792, type: !396)
!2356 = !DILocation(line: 1792, column: 10, scope: !631)
!2357 = !DILocation(line: 1794, column: 6, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !631, file: !1, line: 1794, column: 6)
!2359 = !DILocation(line: 1794, column: 15, scope: !2358)
!2360 = !DILocation(line: 1794, column: 24, scope: !2358)
!2361 = !DILocation(line: 1794, column: 6, scope: !631)
!2362 = !DILocation(line: 1795, column: 3, scope: !2358)
!2363 = !DILocation(line: 1796, column: 29, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !631, file: !1, line: 1796, column: 6)
!2365 = !DILocation(line: 1796, column: 38, scope: !2364)
!2366 = !DILocation(line: 1796, column: 48, scope: !2364)
!2367 = !DILocation(line: 1796, column: 6, scope: !2364)
!2368 = !DILocation(line: 1796, column: 55, scope: !2364)
!2369 = !DILocation(line: 1796, column: 6, scope: !631)
!2370 = !DILocation(line: 1797, column: 3, scope: !2364)
!2371 = !DILocation(line: 1798, column: 6, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !631, file: !1, line: 1798, column: 6)
!2373 = !DILocation(line: 1798, column: 10, scope: !2372)
!2374 = !DILocation(line: 1798, column: 19, scope: !2372)
!2375 = !DILocation(line: 1798, column: 8, scope: !2372)
!2376 = !DILocation(line: 1798, column: 6, scope: !631)
!2377 = !DILocation(line: 1799, column: 15, scope: !2372)
!2378 = !DILocation(line: 1799, column: 24, scope: !2372)
!2379 = !DILocation(line: 1799, column: 5, scope: !2372)
!2380 = !DILocation(line: 1799, column: 3, scope: !2372)
!2381 = !DILocation(line: 1800, column: 6, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !631, file: !1, line: 1800, column: 6)
!2383 = !DILocation(line: 1800, column: 8, scope: !2382)
!2384 = !DILocation(line: 1800, column: 6, scope: !631)
!2385 = !DILocation(line: 1801, column: 3, scope: !2382)
!2386 = !DILocation(line: 1803, column: 25, scope: !631)
!2387 = !DILocation(line: 1803, column: 28, scope: !631)
!2388 = !DILocation(line: 1803, column: 34, scope: !631)
!2389 = !DILocation(line: 1803, column: 6, scope: !631)
!2390 = !DILocation(line: 1803, column: 4, scope: !631)
!2391 = !DILocation(line: 1804, column: 6, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !631, file: !1, line: 1804, column: 6)
!2393 = !DILocation(line: 1804, column: 8, scope: !2392)
!2394 = !DILocation(line: 1804, column: 6, scope: !631)
!2395 = !DILocation(line: 1805, column: 31, scope: !2392)
!2396 = !DILocation(line: 1805, column: 3, scope: !2392)
!2397 = !DILocation(line: 1805, column: 12, scope: !2392)
!2398 = !DILocation(line: 1805, column: 28, scope: !2392)
!2399 = !DILocation(line: 1806, column: 10, scope: !631)
!2400 = !DILocation(line: 1806, column: 2, scope: !631)
!2401 = !DILocation(line: 1807, column: 1, scope: !631)
!2402 = !DILocalVariable(name: "a", arg: 1, scope: !645, file: !1, line: 1810, type: !367)
!2403 = !DILocation(line: 1810, column: 44, scope: !645)
!2404 = !DILocalVariable(name: "iso9660", scope: !645, file: !1, line: 1812, type: !530)
!2405 = !DILocation(line: 1812, column: 18, scope: !645)
!2406 = !DILocation(line: 1812, column: 28, scope: !645)
!2407 = !DILocation(line: 1812, column: 31, scope: !645)
!2408 = !DILocation(line: 1814, column: 6, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1814, column: 6)
!2410 = !DILocation(line: 1814, column: 15, scope: !2409)
!2411 = !DILocation(line: 1814, column: 24, scope: !2409)
!2412 = !DILocation(line: 1814, column: 6, scope: !645)
!2413 = !DILocation(line: 1815, column: 3, scope: !2409)
!2414 = !DILocation(line: 1816, column: 29, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1816, column: 6)
!2416 = !DILocation(line: 1816, column: 38, scope: !2415)
!2417 = !DILocation(line: 1816, column: 48, scope: !2415)
!2418 = !DILocation(line: 1816, column: 6, scope: !2415)
!2419 = !DILocation(line: 1816, column: 55, scope: !2415)
!2420 = !DILocation(line: 1816, column: 6, scope: !645)
!2421 = !DILocation(line: 1817, column: 3, scope: !2415)
!2422 = !DILocation(line: 1818, column: 6, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1818, column: 6)
!2424 = !DILocation(line: 1818, column: 15, scope: !2423)
!2425 = !DILocation(line: 1818, column: 25, scope: !2423)
!2426 = !DILocation(line: 1818, column: 33, scope: !2423)
!2427 = !DILocation(line: 1818, column: 38, scope: !2423)
!2428 = !DILocation(line: 1818, column: 6, scope: !645)
!2429 = !DILocation(line: 1819, column: 3, scope: !2423)
!2430 = !DILocation(line: 1822, column: 2, scope: !645)
!2431 = !DILocation(line: 1822, column: 9, scope: !2432)
!2432 = !DILexicalBlockFile(scope: !645, file: !1, discriminator: 1)
!2433 = !DILocation(line: 1822, column: 18, scope: !2432)
!2434 = !DILocation(line: 1822, column: 34, scope: !2432)
!2435 = !DILocation(line: 1822, column: 2, scope: !2432)
!2436 = !DILocalVariable(name: "s", scope: !2437, file: !1, line: 1823, type: !23)
!2437 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1822, column: 39)
!2438 = !DILocation(line: 1823, column: 10, scope: !2437)
!2439 = !DILocation(line: 1825, column: 8, scope: !2437)
!2440 = !DILocation(line: 1825, column: 17, scope: !2437)
!2441 = !DILocation(line: 1825, column: 35, scope: !2437)
!2442 = !DILocation(line: 1825, column: 38, scope: !2437)
!2443 = !DILocation(line: 1825, column: 33, scope: !2437)
!2444 = !DILocation(line: 1825, column: 7, scope: !2437)
!2445 = !DILocation(line: 1826, column: 7, scope: !2437)
!2446 = !DILocation(line: 1826, column: 10, scope: !2437)
!2447 = !DILocation(line: 1825, column: 7, scope: !2448)
!2448 = !DILexicalBlockFile(scope: !2437, file: !1, discriminator: 1)
!2449 = !DILocation(line: 1826, column: 31, scope: !2448)
!2450 = !DILocation(line: 1826, column: 40, scope: !2448)
!2451 = !DILocation(line: 1825, column: 7, scope: !2452)
!2452 = !DILexicalBlockFile(scope: !2437, file: !1, discriminator: 2)
!2453 = !DILocation(line: 1825, column: 7, scope: !2454)
!2454 = !DILexicalBlockFile(scope: !2437, file: !1, discriminator: 3)
!2455 = !DILocation(line: 1825, column: 5, scope: !2454)
!2456 = !DILocation(line: 1827, column: 26, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2437, file: !1, line: 1827, column: 7)
!2458 = !DILocation(line: 1827, column: 29, scope: !2457)
!2459 = !DILocation(line: 1827, column: 32, scope: !2457)
!2460 = !DILocation(line: 1827, column: 39, scope: !2457)
!2461 = !DILocation(line: 1827, column: 7, scope: !2457)
!2462 = !DILocation(line: 1827, column: 42, scope: !2457)
!2463 = !DILocation(line: 1827, column: 7, scope: !2437)
!2464 = !DILocation(line: 1828, column: 4, scope: !2457)
!2465 = !DILocation(line: 1829, column: 31, scope: !2437)
!2466 = !DILocation(line: 1829, column: 3, scope: !2437)
!2467 = !DILocation(line: 1829, column: 12, scope: !2437)
!2468 = !DILocation(line: 1829, column: 28, scope: !2437)
!2469 = !DILocation(line: 1822, column: 2, scope: !2470)
!2470 = !DILexicalBlockFile(scope: !645, file: !1, discriminator: 2)
!2471 = !DILocation(line: 1832, column: 6, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1832, column: 6)
!2473 = !DILocation(line: 1832, column: 15, scope: !2472)
!2474 = !DILocation(line: 1832, column: 22, scope: !2472)
!2475 = !DILocation(line: 1832, column: 29, scope: !2472)
!2476 = !DILocation(line: 1832, column: 52, scope: !2477)
!2477 = !DILexicalBlockFile(scope: !2472, file: !1, discriminator: 1)
!2478 = !DILocation(line: 1832, column: 32, scope: !2477)
!2479 = !DILocation(line: 1832, column: 55, scope: !2477)
!2480 = !DILocation(line: 1832, column: 6, scope: !2477)
!2481 = !DILocation(line: 1833, column: 3, scope: !2472)
!2482 = !DILocation(line: 1836, column: 31, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !645, file: !1, line: 1836, column: 6)
!2484 = !DILocation(line: 1836, column: 34, scope: !2483)
!2485 = !DILocation(line: 1836, column: 43, scope: !2483)
!2486 = !DILocation(line: 1836, column: 53, scope: !2483)
!2487 = !DILocation(line: 1836, column: 66, scope: !2483)
!2488 = !DILocation(line: 1836, column: 6, scope: !2483)
!2489 = !DILocation(line: 1837, column: 6, scope: !2483)
!2490 = !DILocation(line: 1836, column: 6, scope: !645)
!2491 = !DILocation(line: 1838, column: 3, scope: !2483)
!2492 = !DILocation(line: 1842, column: 8, scope: !645)
!2493 = !DILocation(line: 1842, column: 17, scope: !645)
!2494 = !DILocation(line: 1842, column: 27, scope: !645)
!2495 = !DILocation(line: 1842, column: 40, scope: !645)
!2496 = !DILocation(line: 1843, column: 7, scope: !645)
!2497 = !DILocation(line: 1843, column: 28, scope: !645)
!2498 = !DILocation(line: 1843, column: 32, scope: !645)
!2499 = !DILocation(line: 1841, column: 43, scope: !645)
!2500 = !DILocation(line: 1841, column: 2, scope: !645)
!2501 = !DILocation(line: 1841, column: 11, scope: !645)
!2502 = !DILocation(line: 1841, column: 21, scope: !645)
!2503 = !DILocation(line: 1841, column: 34, scope: !645)
!2504 = !DILocation(line: 1841, column: 41, scope: !645)
!2505 = !DILocation(line: 1846, column: 24, scope: !645)
!2506 = !DILocation(line: 1846, column: 33, scope: !645)
!2507 = !DILocation(line: 1846, column: 42, scope: !645)
!2508 = !DILocation(line: 1846, column: 2, scope: !645)
!2509 = !DILocation(line: 1848, column: 2, scope: !645)
!2510 = !DILocation(line: 1849, column: 1, scope: !645)
!2511 = !DILocalVariable(name: "a", arg: 1, scope: !651, file: !1, line: 1852, type: !367)
!2512 = !DILocation(line: 1852, column: 37, scope: !651)
!2513 = !DILocalVariable(name: "iso9660", scope: !651, file: !1, line: 1854, type: !530)
!2514 = !DILocation(line: 1854, column: 18, scope: !651)
!2515 = !DILocalVariable(name: "ret", scope: !651, file: !1, line: 1855, type: !31)
!2516 = !DILocation(line: 1855, column: 6, scope: !651)
!2517 = !DILocalVariable(name: "blocks", scope: !651, file: !1, line: 1855, type: !31)
!2518 = !DILocation(line: 1855, column: 11, scope: !651)
!2519 = !DILocation(line: 1857, column: 12, scope: !651)
!2520 = !DILocation(line: 1857, column: 15, scope: !651)
!2521 = !DILocation(line: 1857, column: 10, scope: !651)
!2522 = !DILocation(line: 1862, column: 6, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1862, column: 6)
!2524 = !DILocation(line: 1862, column: 22, scope: !2523)
!2525 = !DILocation(line: 1862, column: 6, scope: !651)
!2526 = !DILocation(line: 1863, column: 22, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 1862, column: 27)
!2528 = !DILocation(line: 1863, column: 9, scope: !2527)
!2529 = !DILocation(line: 1863, column: 7, scope: !2527)
!2530 = !DILocation(line: 1864, column: 7, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2527, file: !1, line: 1864, column: 7)
!2532 = !DILocation(line: 1864, column: 11, scope: !2531)
!2533 = !DILocation(line: 1864, column: 7, scope: !2527)
!2534 = !DILocation(line: 1865, column: 12, scope: !2531)
!2535 = !DILocation(line: 1865, column: 4, scope: !2531)
!2536 = !DILocation(line: 1866, column: 2, scope: !2527)
!2537 = !DILocation(line: 1874, column: 10, scope: !651)
!2538 = !DILocation(line: 1874, column: 19, scope: !651)
!2539 = !DILocation(line: 1874, column: 3, scope: !651)
!2540 = !DILocation(line: 1879, column: 6, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1879, column: 6)
!2542 = !DILocation(line: 1879, column: 15, scope: !2541)
!2543 = !DILocation(line: 1879, column: 19, scope: !2541)
!2544 = !DILocation(line: 1879, column: 6, scope: !651)
!2545 = !DILocation(line: 1881, column: 35, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2541, file: !1, line: 1879, column: 25)
!2547 = !DILocation(line: 1881, column: 38, scope: !2546)
!2548 = !DILocation(line: 1881, column: 47, scope: !2546)
!2549 = !DILocation(line: 1881, column: 55, scope: !2546)
!2550 = !DILocation(line: 1881, column: 9, scope: !2546)
!2551 = !DILocation(line: 1881, column: 7, scope: !2546)
!2552 = !DILocation(line: 1882, column: 7, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2546, file: !1, line: 1882, column: 7)
!2554 = !DILocation(line: 1882, column: 11, scope: !2553)
!2555 = !DILocation(line: 1882, column: 7, scope: !2546)
!2556 = !DILocation(line: 1883, column: 12, scope: !2553)
!2557 = !DILocation(line: 1883, column: 4, scope: !2553)
!2558 = !DILocation(line: 1886, column: 33, scope: !2546)
!2559 = !DILocation(line: 1886, column: 9, scope: !2546)
!2560 = !DILocation(line: 1886, column: 7, scope: !2546)
!2561 = !DILocation(line: 1887, column: 7, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2546, file: !1, line: 1887, column: 7)
!2563 = !DILocation(line: 1887, column: 11, scope: !2562)
!2564 = !DILocation(line: 1887, column: 7, scope: !2546)
!2565 = !DILocation(line: 1888, column: 12, scope: !2562)
!2566 = !DILocation(line: 1888, column: 4, scope: !2562)
!2567 = !DILocation(line: 1890, column: 7, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2546, file: !1, line: 1890, column: 7)
!2569 = !DILocation(line: 1890, column: 23, scope: !2568)
!2570 = !DILocation(line: 1890, column: 7, scope: !2546)
!2571 = !DILocation(line: 1891, column: 23, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !1, line: 1890, column: 28)
!2573 = !DILocation(line: 1891, column: 10, scope: !2572)
!2574 = !DILocation(line: 1891, column: 8, scope: !2572)
!2575 = !DILocation(line: 1892, column: 8, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2572, file: !1, line: 1892, column: 8)
!2577 = !DILocation(line: 1892, column: 12, scope: !2576)
!2578 = !DILocation(line: 1892, column: 8, scope: !2572)
!2579 = !DILocation(line: 1893, column: 13, scope: !2576)
!2580 = !DILocation(line: 1893, column: 5, scope: !2576)
!2581 = !DILocation(line: 1894, column: 3, scope: !2572)
!2582 = !DILocation(line: 1896, column: 36, scope: !2546)
!2583 = !DILocation(line: 1896, column: 39, scope: !2546)
!2584 = !DILocation(line: 1896, column: 48, scope: !2546)
!2585 = !DILocation(line: 1896, column: 56, scope: !2546)
!2586 = !DILocation(line: 1896, column: 9, scope: !2546)
!2587 = !DILocation(line: 1896, column: 7, scope: !2546)
!2588 = !DILocation(line: 1897, column: 7, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2546, file: !1, line: 1897, column: 7)
!2590 = !DILocation(line: 1897, column: 11, scope: !2589)
!2591 = !DILocation(line: 1897, column: 7, scope: !2546)
!2592 = !DILocation(line: 1898, column: 12, scope: !2589)
!2593 = !DILocation(line: 1898, column: 4, scope: !2589)
!2594 = !DILocation(line: 1899, column: 2, scope: !2546)
!2595 = !DILocation(line: 1904, column: 6, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1904, column: 6)
!2597 = !DILocation(line: 1904, column: 15, scope: !2596)
!2598 = !DILocation(line: 1904, column: 19, scope: !2596)
!2599 = !DILocation(line: 1904, column: 6, scope: !651)
!2600 = !DILocation(line: 1906, column: 27, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2596, file: !1, line: 1904, column: 27)
!2602 = !DILocation(line: 1906, column: 32, scope: !2601)
!2603 = !DILocation(line: 1906, column: 41, scope: !2601)
!2604 = !DILocation(line: 1906, column: 48, scope: !2601)
!2605 = !DILocation(line: 1907, column: 7, scope: !2601)
!2606 = !DILocation(line: 1907, column: 16, scope: !2601)
!2607 = !DILocation(line: 1907, column: 24, scope: !2601)
!2608 = !DILocation(line: 1906, column: 9, scope: !2601)
!2609 = !DILocation(line: 1906, column: 7, scope: !2601)
!2610 = !DILocation(line: 1908, column: 7, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2601, file: !1, line: 1908, column: 7)
!2612 = !DILocation(line: 1908, column: 11, scope: !2611)
!2613 = !DILocation(line: 1908, column: 7, scope: !2601)
!2614 = !DILocation(line: 1909, column: 12, scope: !2611)
!2615 = !DILocation(line: 1909, column: 4, scope: !2611)
!2616 = !DILocation(line: 1913, column: 7, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2601, file: !1, line: 1913, column: 7)
!2618 = !DILocation(line: 1913, column: 16, scope: !2617)
!2619 = !DILocation(line: 1913, column: 33, scope: !2617)
!2620 = !DILocation(line: 1913, column: 7, scope: !2601)
!2621 = !DILocation(line: 1916, column: 7, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2617, file: !1, line: 1913, column: 42)
!2623 = !DILocation(line: 1916, column: 10, scope: !2622)
!2624 = !DILocation(line: 1915, column: 8, scope: !2622)
!2625 = !DILocation(line: 1914, column: 4, scope: !2622)
!2626 = !DILocation(line: 1914, column: 13, scope: !2622)
!2627 = !DILocation(line: 1914, column: 30, scope: !2622)
!2628 = !DILocation(line: 1917, column: 8, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 1917, column: 8)
!2630 = !DILocation(line: 1917, column: 17, scope: !2629)
!2631 = !DILocation(line: 1917, column: 34, scope: !2629)
!2632 = !DILocation(line: 1917, column: 8, scope: !2622)
!2633 = !DILocation(line: 1919, column: 5, scope: !2629)
!2634 = !DILocation(line: 1922, column: 7, scope: !2622)
!2635 = !DILocation(line: 1922, column: 10, scope: !2622)
!2636 = !DILocation(line: 1921, column: 8, scope: !2622)
!2637 = !DILocation(line: 1920, column: 4, scope: !2622)
!2638 = !DILocation(line: 1920, column: 13, scope: !2622)
!2639 = !DILocation(line: 1920, column: 32, scope: !2622)
!2640 = !DILocation(line: 1923, column: 8, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 1923, column: 8)
!2642 = !DILocation(line: 1923, column: 17, scope: !2641)
!2643 = !DILocation(line: 1923, column: 36, scope: !2641)
!2644 = !DILocation(line: 1923, column: 8, scope: !2622)
!2645 = !DILocation(line: 1925, column: 5, scope: !2641)
!2646 = !DILocation(line: 1926, column: 3, scope: !2622)
!2647 = !DILocation(line: 1927, column: 2, scope: !2601)
!2648 = !DILocation(line: 1932, column: 31, scope: !651)
!2649 = !DILocation(line: 1932, column: 8, scope: !651)
!2650 = !DILocation(line: 1932, column: 6, scope: !651)
!2651 = !DILocation(line: 1933, column: 6, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1933, column: 6)
!2653 = !DILocation(line: 1933, column: 10, scope: !2652)
!2654 = !DILocation(line: 1933, column: 6, scope: !651)
!2655 = !DILocation(line: 1934, column: 11, scope: !2652)
!2656 = !DILocation(line: 1934, column: 3, scope: !2652)
!2657 = !DILocation(line: 1940, column: 9, scope: !651)
!2658 = !DILocation(line: 1944, column: 6, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1944, column: 6)
!2660 = !DILocation(line: 1944, column: 15, scope: !2659)
!2661 = !DILocation(line: 1944, column: 19, scope: !2659)
!2662 = !DILocation(line: 1944, column: 6, scope: !651)
!2663 = !DILocation(line: 1945, column: 10, scope: !2659)
!2664 = !DILocation(line: 1945, column: 3, scope: !2659)
!2665 = !DILocation(line: 1946, column: 6, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1946, column: 6)
!2667 = !DILocation(line: 1946, column: 15, scope: !2666)
!2668 = !DILocation(line: 1946, column: 19, scope: !2666)
!2669 = !DILocation(line: 1946, column: 6, scope: !651)
!2670 = !DILocation(line: 1947, column: 10, scope: !2666)
!2671 = !DILocation(line: 1947, column: 3, scope: !2666)
!2672 = !DILocation(line: 1948, column: 6, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1948, column: 6)
!2674 = !DILocation(line: 1948, column: 15, scope: !2673)
!2675 = !DILocation(line: 1948, column: 19, scope: !2673)
!2676 = !DILocation(line: 1948, column: 29, scope: !2673)
!2677 = !DILocation(line: 1948, column: 6, scope: !651)
!2678 = !DILocation(line: 1949, column: 10, scope: !2673)
!2679 = !DILocation(line: 1949, column: 3, scope: !2673)
!2680 = !DILocation(line: 1952, column: 48, scope: !651)
!2681 = !DILocation(line: 1952, column: 2, scope: !651)
!2682 = !DILocation(line: 1952, column: 11, scope: !651)
!2683 = !DILocation(line: 1952, column: 19, scope: !651)
!2684 = !DILocation(line: 1952, column: 46, scope: !651)
!2685 = !DILocation(line: 1953, column: 12, scope: !651)
!2686 = !DILocation(line: 1953, column: 21, scope: !651)
!2687 = !DILocation(line: 1953, column: 29, scope: !651)
!2688 = !DILocation(line: 1953, column: 9, scope: !651)
!2689 = !DILocation(line: 1954, column: 48, scope: !651)
!2690 = !DILocation(line: 1954, column: 2, scope: !651)
!2691 = !DILocation(line: 1954, column: 11, scope: !651)
!2692 = !DILocation(line: 1954, column: 19, scope: !651)
!2693 = !DILocation(line: 1954, column: 46, scope: !651)
!2694 = !DILocation(line: 1955, column: 12, scope: !651)
!2695 = !DILocation(line: 1955, column: 21, scope: !651)
!2696 = !DILocation(line: 1955, column: 29, scope: !651)
!2697 = !DILocation(line: 1955, column: 9, scope: !651)
!2698 = !DILocation(line: 1956, column: 6, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1956, column: 6)
!2700 = !DILocation(line: 1956, column: 15, scope: !2699)
!2701 = !DILocation(line: 1956, column: 19, scope: !2699)
!2702 = !DILocation(line: 1956, column: 6, scope: !651)
!2703 = !DILocation(line: 1957, column: 48, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 1956, column: 27)
!2705 = !DILocation(line: 1957, column: 3, scope: !2704)
!2706 = !DILocation(line: 1957, column: 12, scope: !2704)
!2707 = !DILocation(line: 1957, column: 19, scope: !2704)
!2708 = !DILocation(line: 1957, column: 46, scope: !2704)
!2709 = !DILocation(line: 1958, column: 13, scope: !2704)
!2710 = !DILocation(line: 1958, column: 22, scope: !2704)
!2711 = !DILocation(line: 1958, column: 29, scope: !2704)
!2712 = !DILocation(line: 1958, column: 10, scope: !2704)
!2713 = !DILocation(line: 1959, column: 48, scope: !2704)
!2714 = !DILocation(line: 1959, column: 3, scope: !2704)
!2715 = !DILocation(line: 1959, column: 12, scope: !2704)
!2716 = !DILocation(line: 1959, column: 19, scope: !2704)
!2717 = !DILocation(line: 1959, column: 46, scope: !2704)
!2718 = !DILocation(line: 1960, column: 13, scope: !2704)
!2719 = !DILocation(line: 1960, column: 22, scope: !2704)
!2720 = !DILocation(line: 1960, column: 29, scope: !2704)
!2721 = !DILocation(line: 1960, column: 10, scope: !2704)
!2722 = !DILocation(line: 1961, column: 2, scope: !2704)
!2723 = !DILocation(line: 1964, column: 34, scope: !651)
!2724 = !DILocation(line: 1964, column: 43, scope: !651)
!2725 = !DILocation(line: 1965, column: 8, scope: !651)
!2726 = !DILocation(line: 1965, column: 17, scope: !651)
!2727 = !DILocation(line: 1964, column: 2, scope: !651)
!2728 = !DILocation(line: 1966, column: 12, scope: !651)
!2729 = !DILocation(line: 1966, column: 21, scope: !651)
!2730 = !DILocation(line: 1966, column: 29, scope: !651)
!2731 = !DILocation(line: 1966, column: 9, scope: !651)
!2732 = !DILocation(line: 1967, column: 6, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1967, column: 6)
!2734 = !DILocation(line: 1967, column: 15, scope: !2733)
!2735 = !DILocation(line: 1967, column: 19, scope: !2733)
!2736 = !DILocation(line: 1967, column: 6, scope: !651)
!2737 = !DILocation(line: 1968, column: 35, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2733, file: !1, line: 1967, column: 27)
!2739 = !DILocation(line: 1968, column: 44, scope: !2738)
!2740 = !DILocation(line: 1969, column: 9, scope: !2738)
!2741 = !DILocation(line: 1969, column: 18, scope: !2738)
!2742 = !DILocation(line: 1968, column: 3, scope: !2738)
!2743 = !DILocation(line: 1970, column: 13, scope: !2738)
!2744 = !DILocation(line: 1970, column: 22, scope: !2738)
!2745 = !DILocation(line: 1970, column: 29, scope: !2738)
!2746 = !DILocation(line: 1970, column: 10, scope: !2738)
!2747 = !DILocation(line: 1971, column: 2, scope: !2738)
!2748 = !DILocation(line: 1973, column: 6, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1973, column: 6)
!2750 = !DILocation(line: 1973, column: 15, scope: !2749)
!2751 = !DILocation(line: 1973, column: 19, scope: !2749)
!2752 = !DILocation(line: 1973, column: 6, scope: !651)
!2753 = !DILocation(line: 1974, column: 31, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2749, file: !1, line: 1973, column: 23)
!2755 = !DILocation(line: 1974, column: 3, scope: !2754)
!2756 = !DILocation(line: 1974, column: 12, scope: !2754)
!2757 = !DILocation(line: 1974, column: 29, scope: !2754)
!2758 = !DILocation(line: 1975, column: 10, scope: !2754)
!2759 = !DILocation(line: 1976, column: 2, scope: !2754)
!2760 = !DILocation(line: 1979, column: 30, scope: !651)
!2761 = !DILocation(line: 1979, column: 39, scope: !651)
!2762 = !DILocation(line: 1979, column: 3, scope: !651)
!2763 = !DILocation(line: 1980, column: 12, scope: !651)
!2764 = !DILocation(line: 1980, column: 21, scope: !651)
!2765 = !DILocation(line: 1980, column: 9, scope: !651)
!2766 = !DILocation(line: 1981, column: 6, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1981, column: 6)
!2768 = !DILocation(line: 1981, column: 15, scope: !2767)
!2769 = !DILocation(line: 1981, column: 19, scope: !2767)
!2770 = !DILocation(line: 1981, column: 24, scope: !2767)
!2771 = !DILocation(line: 1981, column: 27, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !2767, file: !1, discriminator: 1)
!2773 = !DILocation(line: 1981, column: 36, scope: !2772)
!2774 = !DILocation(line: 1981, column: 40, scope: !2772)
!2775 = !DILocation(line: 1981, column: 6, scope: !2772)
!2776 = !DILocation(line: 1982, column: 32, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2767, file: !1, line: 1981, column: 57)
!2778 = !DILocation(line: 1982, column: 9, scope: !2777)
!2779 = !DILocation(line: 1982, column: 7, scope: !2777)
!2780 = !DILocation(line: 1983, column: 7, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2777, file: !1, line: 1983, column: 7)
!2782 = !DILocation(line: 1983, column: 11, scope: !2781)
!2783 = !DILocation(line: 1983, column: 7, scope: !2777)
!2784 = !DILocation(line: 1984, column: 12, scope: !2781)
!2785 = !DILocation(line: 1984, column: 4, scope: !2781)
!2786 = !DILocation(line: 1985, column: 2, scope: !2777)
!2787 = !DILocation(line: 1988, column: 31, scope: !651)
!2788 = !DILocation(line: 1988, column: 2, scope: !651)
!2789 = !DILocation(line: 1988, column: 11, scope: !651)
!2790 = !DILocation(line: 1988, column: 29, scope: !651)
!2791 = !DILocation(line: 1989, column: 6, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !651, file: !1, line: 1989, column: 6)
!2793 = !DILocation(line: 1989, column: 15, scope: !2792)
!2794 = !DILocation(line: 1989, column: 19, scope: !2792)
!2795 = !DILocation(line: 1989, column: 6, scope: !651)
!2796 = !DILocation(line: 1990, column: 3, scope: !2792)
!2797 = !DILocation(line: 1990, column: 12, scope: !2792)
!2798 = !DILocation(line: 1990, column: 30, scope: !2792)
!2799 = !DILocation(line: 1991, column: 2, scope: !651)
!2800 = !DILocation(line: 1991, column: 11, scope: !651)
!2801 = !DILocation(line: 1991, column: 34, scope: !651)
!2802 = !DILocation(line: 1999, column: 2, scope: !651)
!2803 = !DILocation(line: 1999, column: 11, scope: !651)
!2804 = !DILocation(line: 1999, column: 27, scope: !651)
!2805 = !DILocation(line: 2000, column: 2, scope: !651)
!2806 = !DILocation(line: 2000, column: 11, scope: !651)
!2807 = !DILocation(line: 2000, column: 22, scope: !651)
!2808 = !DILocation(line: 2001, column: 2, scope: !651)
!2809 = !DILocation(line: 2001, column: 11, scope: !651)
!2810 = !DILocation(line: 2001, column: 24, scope: !651)
!2811 = !DILocation(line: 2002, column: 2, scope: !651)
!2812 = !DILocation(line: 2002, column: 11, scope: !651)
!2813 = !DILocation(line: 2002, column: 25, scope: !651)
!2814 = !DILocation(line: 2003, column: 2, scope: !651)
!2815 = !DILocation(line: 2003, column: 11, scope: !651)
!2816 = !DILocation(line: 2003, column: 22, scope: !651)
!2817 = !DILocation(line: 2006, column: 19, scope: !651)
!2818 = !DILocation(line: 2006, column: 8, scope: !651)
!2819 = !DILocation(line: 2006, column: 6, scope: !651)
!2820 = !DILocation(line: 2007, column: 6, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2007, column: 6)
!2822 = !DILocation(line: 2007, column: 10, scope: !2821)
!2823 = !DILocation(line: 2007, column: 6, scope: !651)
!2824 = !DILocation(line: 2008, column: 3, scope: !2821)
!2825 = !DILocation(line: 2011, column: 17, scope: !651)
!2826 = !DILocation(line: 2011, column: 22, scope: !651)
!2827 = !DILocation(line: 2011, column: 31, scope: !651)
!2828 = !DILocation(line: 2011, column: 8, scope: !651)
!2829 = !DILocation(line: 2011, column: 6, scope: !651)
!2830 = !DILocation(line: 2012, column: 6, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2012, column: 6)
!2832 = !DILocation(line: 2012, column: 10, scope: !2831)
!2833 = !DILocation(line: 2012, column: 6, scope: !651)
!2834 = !DILocation(line: 2013, column: 3, scope: !2831)
!2835 = !DILocation(line: 2015, column: 6, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2015, column: 6)
!2837 = !DILocation(line: 2015, column: 15, scope: !2836)
!2838 = !DILocation(line: 2015, column: 19, scope: !2836)
!2839 = !DILocation(line: 2015, column: 6, scope: !651)
!2840 = !DILocation(line: 2017, column: 30, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2836, file: !1, line: 2015, column: 25)
!2842 = !DILocation(line: 2017, column: 9, scope: !2841)
!2843 = !DILocation(line: 2017, column: 7, scope: !2841)
!2844 = !DILocation(line: 2018, column: 7, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2841, file: !1, line: 2018, column: 7)
!2846 = !DILocation(line: 2018, column: 11, scope: !2845)
!2847 = !DILocation(line: 2018, column: 7, scope: !2841)
!2848 = !DILocation(line: 2019, column: 4, scope: !2845)
!2849 = !DILocation(line: 2020, column: 2, scope: !2841)
!2850 = !DILocation(line: 2022, column: 6, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2022, column: 6)
!2852 = !DILocation(line: 2022, column: 15, scope: !2851)
!2853 = !DILocation(line: 2022, column: 19, scope: !2851)
!2854 = !DILocation(line: 2022, column: 29, scope: !2851)
!2855 = !DILocation(line: 2022, column: 6, scope: !651)
!2856 = !DILocation(line: 2024, column: 3, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 2022, column: 35)
!2858 = !DILocation(line: 2024, column: 12, scope: !2857)
!2859 = !DILocation(line: 2024, column: 20, scope: !2857)
!2860 = !DILocation(line: 2024, column: 29, scope: !2857)
!2861 = !DILocation(line: 2025, column: 18, scope: !2857)
!2862 = !DILocation(line: 2025, column: 23, scope: !2857)
!2863 = !DILocation(line: 2025, column: 32, scope: !2857)
!2864 = !DILocation(line: 2025, column: 9, scope: !2857)
!2865 = !DILocation(line: 2025, column: 7, scope: !2857)
!2866 = !DILocation(line: 2026, column: 3, scope: !2857)
!2867 = !DILocation(line: 2026, column: 12, scope: !2857)
!2868 = !DILocation(line: 2026, column: 20, scope: !2857)
!2869 = !DILocation(line: 2026, column: 29, scope: !2857)
!2870 = !DILocation(line: 2027, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2857, file: !1, line: 2027, column: 7)
!2872 = !DILocation(line: 2027, column: 11, scope: !2871)
!2873 = !DILocation(line: 2027, column: 7, scope: !2857)
!2874 = !DILocation(line: 2028, column: 4, scope: !2871)
!2875 = !DILocation(line: 2029, column: 2, scope: !2857)
!2876 = !DILocation(line: 2031, column: 6, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2031, column: 6)
!2878 = !DILocation(line: 2031, column: 15, scope: !2877)
!2879 = !DILocation(line: 2031, column: 19, scope: !2877)
!2880 = !DILocation(line: 2031, column: 6, scope: !651)
!2881 = !DILocation(line: 2032, column: 18, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 2031, column: 27)
!2883 = !DILocation(line: 2032, column: 23, scope: !2882)
!2884 = !DILocation(line: 2032, column: 32, scope: !2882)
!2885 = !DILocation(line: 2032, column: 9, scope: !2882)
!2886 = !DILocation(line: 2032, column: 7, scope: !2882)
!2887 = !DILocation(line: 2033, column: 7, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 2033, column: 7)
!2889 = !DILocation(line: 2033, column: 11, scope: !2888)
!2890 = !DILocation(line: 2033, column: 7, scope: !2882)
!2891 = !DILocation(line: 2034, column: 4, scope: !2888)
!2892 = !DILocation(line: 2035, column: 2, scope: !2882)
!2893 = !DILocation(line: 2038, column: 28, scope: !651)
!2894 = !DILocation(line: 2038, column: 8, scope: !651)
!2895 = !DILocation(line: 2038, column: 6, scope: !651)
!2896 = !DILocation(line: 2039, column: 6, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2039, column: 6)
!2898 = !DILocation(line: 2039, column: 10, scope: !2897)
!2899 = !DILocation(line: 2039, column: 6, scope: !651)
!2900 = !DILocation(line: 2040, column: 3, scope: !2897)
!2901 = !DILocation(line: 2043, column: 32, scope: !651)
!2902 = !DILocation(line: 2043, column: 8, scope: !651)
!2903 = !DILocation(line: 2043, column: 6, scope: !651)
!2904 = !DILocation(line: 2044, column: 6, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2044, column: 6)
!2906 = !DILocation(line: 2044, column: 10, scope: !2905)
!2907 = !DILocation(line: 2044, column: 6, scope: !651)
!2908 = !DILocation(line: 2045, column: 3, scope: !2905)
!2909 = !DILocation(line: 2048, column: 25, scope: !651)
!2910 = !DILocation(line: 2048, column: 33, scope: !651)
!2911 = !DILocation(line: 2048, column: 42, scope: !651)
!2912 = !DILocation(line: 2048, column: 8, scope: !651)
!2913 = !DILocation(line: 2048, column: 6, scope: !651)
!2914 = !DILocation(line: 2049, column: 6, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2049, column: 6)
!2916 = !DILocation(line: 2049, column: 10, scope: !2915)
!2917 = !DILocation(line: 2049, column: 6, scope: !651)
!2918 = !DILocation(line: 2050, column: 3, scope: !2915)
!2919 = !DILocation(line: 2053, column: 25, scope: !651)
!2920 = !DILocation(line: 2053, column: 33, scope: !651)
!2921 = !DILocation(line: 2053, column: 42, scope: !651)
!2922 = !DILocation(line: 2053, column: 8, scope: !651)
!2923 = !DILocation(line: 2053, column: 6, scope: !651)
!2924 = !DILocation(line: 2054, column: 6, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2054, column: 6)
!2926 = !DILocation(line: 2054, column: 10, scope: !2925)
!2927 = !DILocation(line: 2054, column: 6, scope: !651)
!2928 = !DILocation(line: 2055, column: 3, scope: !2925)
!2929 = !DILocation(line: 2057, column: 6, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2057, column: 6)
!2931 = !DILocation(line: 2057, column: 15, scope: !2930)
!2932 = !DILocation(line: 2057, column: 19, scope: !2930)
!2933 = !DILocation(line: 2057, column: 6, scope: !651)
!2934 = !DILocation(line: 2059, column: 26, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2930, file: !1, line: 2057, column: 27)
!2936 = !DILocation(line: 2059, column: 34, scope: !2935)
!2937 = !DILocation(line: 2059, column: 43, scope: !2935)
!2938 = !DILocation(line: 2059, column: 9, scope: !2935)
!2939 = !DILocation(line: 2059, column: 7, scope: !2935)
!2940 = !DILocation(line: 2060, column: 7, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2935, file: !1, line: 2060, column: 7)
!2942 = !DILocation(line: 2060, column: 11, scope: !2941)
!2943 = !DILocation(line: 2060, column: 7, scope: !2935)
!2944 = !DILocation(line: 2061, column: 4, scope: !2941)
!2945 = !DILocation(line: 2064, column: 26, scope: !2935)
!2946 = !DILocation(line: 2064, column: 34, scope: !2935)
!2947 = !DILocation(line: 2064, column: 43, scope: !2935)
!2948 = !DILocation(line: 2064, column: 9, scope: !2935)
!2949 = !DILocation(line: 2064, column: 7, scope: !2935)
!2950 = !DILocation(line: 2065, column: 7, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2935, file: !1, line: 2065, column: 7)
!2952 = !DILocation(line: 2065, column: 11, scope: !2951)
!2953 = !DILocation(line: 2065, column: 7, scope: !2935)
!2954 = !DILocation(line: 2066, column: 4, scope: !2951)
!2955 = !DILocation(line: 2067, column: 2, scope: !2935)
!2956 = !DILocation(line: 2070, column: 36, scope: !651)
!2957 = !DILocation(line: 2070, column: 41, scope: !651)
!2958 = !DILocation(line: 2070, column: 50, scope: !651)
!2959 = !DILocation(line: 2070, column: 8, scope: !651)
!2960 = !DILocation(line: 2070, column: 6, scope: !651)
!2961 = !DILocation(line: 2071, column: 6, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2071, column: 6)
!2963 = !DILocation(line: 2071, column: 10, scope: !2962)
!2964 = !DILocation(line: 2071, column: 6, scope: !651)
!2965 = !DILocation(line: 2072, column: 3, scope: !2962)
!2966 = !DILocation(line: 2074, column: 6, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2074, column: 6)
!2968 = !DILocation(line: 2074, column: 15, scope: !2967)
!2969 = !DILocation(line: 2074, column: 19, scope: !2967)
!2970 = !DILocation(line: 2074, column: 6, scope: !651)
!2971 = !DILocation(line: 2075, column: 37, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2967, file: !1, line: 2074, column: 27)
!2973 = !DILocation(line: 2075, column: 42, scope: !2972)
!2974 = !DILocation(line: 2075, column: 51, scope: !2972)
!2975 = !DILocation(line: 2075, column: 9, scope: !2972)
!2976 = !DILocation(line: 2075, column: 7, scope: !2972)
!2977 = !DILocation(line: 2076, column: 7, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 2076, column: 7)
!2979 = !DILocation(line: 2076, column: 11, scope: !2978)
!2980 = !DILocation(line: 2076, column: 7, scope: !2972)
!2981 = !DILocation(line: 2077, column: 4, scope: !2978)
!2982 = !DILocation(line: 2078, column: 2, scope: !2972)
!2983 = !DILocation(line: 2080, column: 6, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2080, column: 6)
!2985 = !DILocation(line: 2080, column: 15, scope: !2984)
!2986 = !DILocation(line: 2080, column: 19, scope: !2984)
!2987 = !DILocation(line: 2080, column: 6, scope: !651)
!2988 = !DILocation(line: 2082, column: 21, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2080, column: 23)
!2990 = !DILocation(line: 2082, column: 9, scope: !2989)
!2991 = !DILocation(line: 2082, column: 7, scope: !2989)
!2992 = !DILocation(line: 2083, column: 7, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 2083, column: 7)
!2994 = !DILocation(line: 2083, column: 11, scope: !2993)
!2995 = !DILocation(line: 2083, column: 7, scope: !2989)
!2996 = !DILocation(line: 2084, column: 4, scope: !2993)
!2997 = !DILocation(line: 2085, column: 2, scope: !2989)
!2998 = !DILocation(line: 2088, column: 31, scope: !651)
!2999 = !DILocation(line: 2088, column: 8, scope: !651)
!3000 = !DILocation(line: 2088, column: 6, scope: !651)
!3001 = !DILocation(line: 2089, column: 6, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2089, column: 6)
!3003 = !DILocation(line: 2089, column: 10, scope: !3002)
!3004 = !DILocation(line: 2089, column: 6, scope: !651)
!3005 = !DILocation(line: 2090, column: 3, scope: !3002)
!3006 = !DILocation(line: 2093, column: 6, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2093, column: 6)
!3008 = !DILocation(line: 2093, column: 15, scope: !3007)
!3009 = !DILocation(line: 2093, column: 19, scope: !3007)
!3010 = !DILocation(line: 2093, column: 6, scope: !651)
!3011 = !DILocation(line: 2094, column: 20, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 2093, column: 24)
!3013 = !DILocation(line: 2094, column: 9, scope: !3012)
!3014 = !DILocation(line: 2094, column: 7, scope: !3012)
!3015 = !DILocation(line: 2095, column: 7, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 2095, column: 7)
!3017 = !DILocation(line: 2095, column: 11, scope: !3016)
!3018 = !DILocation(line: 2095, column: 7, scope: !3012)
!3019 = !DILocation(line: 2096, column: 4, scope: !3016)
!3020 = !DILocation(line: 2097, column: 2, scope: !3012)
!3021 = !DILocation(line: 2099, column: 6, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !651, file: !1, line: 2099, column: 6)
!3023 = !DILocation(line: 2099, column: 15, scope: !3022)
!3024 = !DILocation(line: 2099, column: 36, scope: !3022)
!3025 = !DILocation(line: 2099, column: 6, scope: !651)
!3026 = !DILocation(line: 2100, column: 22, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3022, file: !1, line: 2099, column: 45)
!3028 = !DILocation(line: 2100, column: 25, scope: !3027)
!3029 = !DILocation(line: 2103, column: 4, scope: !3027)
!3030 = !DILocation(line: 2103, column: 13, scope: !3027)
!3031 = !DILocation(line: 2103, column: 35, scope: !3027)
!3032 = !DILocation(line: 2103, column: 41, scope: !3027)
!3033 = !DILocation(line: 2102, column: 7, scope: !3027)
!3034 = !DILocation(line: 2100, column: 3, scope: !3027)
!3035 = !DILocation(line: 2104, column: 3, scope: !3027)
!3036 = !DILocation(line: 2108, column: 21, scope: !651)
!3037 = !DILocation(line: 2108, column: 8, scope: !651)
!3038 = !DILocation(line: 2108, column: 6, scope: !651)
!3039 = !DILocation(line: 2110, column: 10, scope: !651)
!3040 = !DILocation(line: 2110, column: 2, scope: !651)
!3041 = !DILocation(line: 2111, column: 1, scope: !651)
!3042 = !DILocalVariable(name: "a", arg: 1, scope: !937, file: !1, line: 2114, type: !367)
!3043 = !DILocation(line: 2114, column: 36, scope: !937)
!3044 = !DILocalVariable(name: "iso9660", scope: !937, file: !1, line: 2116, type: !530)
!3045 = !DILocation(line: 2116, column: 18, scope: !937)
!3046 = !DILocalVariable(name: "i", scope: !937, file: !1, line: 2117, type: !31)
!3047 = !DILocation(line: 2117, column: 6, scope: !937)
!3048 = !DILocalVariable(name: "ret", scope: !937, file: !1, line: 2117, type: !31)
!3049 = !DILocation(line: 2117, column: 9, scope: !937)
!3050 = !DILocation(line: 2119, column: 12, scope: !937)
!3051 = !DILocation(line: 2119, column: 15, scope: !937)
!3052 = !DILocation(line: 2119, column: 10, scope: !937)
!3053 = !DILocation(line: 2122, column: 6, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !937, file: !1, line: 2122, column: 6)
!3055 = !DILocation(line: 2122, column: 15, scope: !3054)
!3056 = !DILocation(line: 2122, column: 23, scope: !3054)
!3057 = !DILocation(line: 2122, column: 6, scope: !937)
!3058 = !DILocation(line: 2123, column: 9, scope: !3054)
!3059 = !DILocation(line: 2123, column: 18, scope: !3054)
!3060 = !DILocation(line: 2123, column: 3, scope: !3054)
!3061 = !DILocation(line: 2126, column: 20, scope: !937)
!3062 = !DILocation(line: 2126, column: 8, scope: !937)
!3063 = !DILocation(line: 2126, column: 6, scope: !937)
!3064 = !DILocation(line: 2129, column: 18, scope: !937)
!3065 = !DILocation(line: 2129, column: 27, scope: !937)
!3066 = !DILocation(line: 2129, column: 35, scope: !937)
!3067 = !DILocation(line: 2129, column: 2, scope: !937)
!3068 = !DILocation(line: 2130, column: 9, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !937, file: !1, line: 2130, column: 2)
!3070 = !DILocation(line: 2130, column: 7, scope: !3069)
!3071 = !DILocation(line: 2130, column: 14, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3073, file: !1, discriminator: 1)
!3073 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 2130, column: 2)
!3074 = !DILocation(line: 2130, column: 18, scope: !3072)
!3075 = !DILocation(line: 2130, column: 27, scope: !3072)
!3076 = !DILocation(line: 2130, column: 35, scope: !3072)
!3077 = !DILocation(line: 2130, column: 16, scope: !3072)
!3078 = !DILocation(line: 2130, column: 2, scope: !3072)
!3079 = !DILocation(line: 2131, column: 33, scope: !3073)
!3080 = !DILocation(line: 2131, column: 8, scope: !3073)
!3081 = !DILocation(line: 2131, column: 17, scope: !3073)
!3082 = !DILocation(line: 2131, column: 25, scope: !3073)
!3083 = !DILocation(line: 2131, column: 36, scope: !3073)
!3084 = !DILocation(line: 2131, column: 3, scope: !3073)
!3085 = !DILocation(line: 2130, column: 47, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !3073, file: !1, discriminator: 2)
!3087 = !DILocation(line: 2130, column: 2, scope: !3086)
!3088 = !DILocation(line: 2132, column: 7, scope: !937)
!3089 = !DILocation(line: 2132, column: 16, scope: !937)
!3090 = !DILocation(line: 2132, column: 24, scope: !937)
!3091 = !DILocation(line: 2132, column: 2, scope: !937)
!3092 = !DILocation(line: 2134, column: 6, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !937, file: !1, line: 2134, column: 6)
!3094 = !DILocation(line: 2134, column: 15, scope: !3093)
!3095 = !DILocation(line: 2134, column: 19, scope: !3093)
!3096 = !DILocation(line: 2134, column: 6, scope: !937)
!3097 = !DILocation(line: 2135, column: 19, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 2134, column: 27)
!3099 = !DILocation(line: 2135, column: 28, scope: !3098)
!3100 = !DILocation(line: 2135, column: 35, scope: !3098)
!3101 = !DILocation(line: 2135, column: 3, scope: !3098)
!3102 = !DILocation(line: 2136, column: 10, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 2136, column: 3)
!3104 = !DILocation(line: 2136, column: 8, scope: !3103)
!3105 = !DILocation(line: 2136, column: 15, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !3107, file: !1, discriminator: 1)
!3107 = distinct !DILexicalBlock(scope: !3103, file: !1, line: 2136, column: 3)
!3108 = !DILocation(line: 2136, column: 19, scope: !3106)
!3109 = !DILocation(line: 2136, column: 28, scope: !3106)
!3110 = !DILocation(line: 2136, column: 35, scope: !3106)
!3111 = !DILocation(line: 2136, column: 17, scope: !3106)
!3112 = !DILocation(line: 2136, column: 3, scope: !3106)
!3113 = !DILocation(line: 2137, column: 33, scope: !3107)
!3114 = !DILocation(line: 2137, column: 9, scope: !3107)
!3115 = !DILocation(line: 2137, column: 18, scope: !3107)
!3116 = !DILocation(line: 2137, column: 25, scope: !3107)
!3117 = !DILocation(line: 2137, column: 36, scope: !3107)
!3118 = !DILocation(line: 2137, column: 4, scope: !3107)
!3119 = !DILocation(line: 2136, column: 47, scope: !3120)
!3120 = !DILexicalBlockFile(scope: !3107, file: !1, discriminator: 2)
!3121 = !DILocation(line: 2136, column: 3, scope: !3120)
!3122 = !DILocation(line: 2138, column: 8, scope: !3098)
!3123 = !DILocation(line: 2138, column: 17, scope: !3098)
!3124 = !DILocation(line: 2138, column: 24, scope: !3098)
!3125 = !DILocation(line: 2138, column: 3, scope: !3098)
!3126 = !DILocation(line: 2139, column: 2, scope: !3098)
!3127 = !DILocation(line: 2142, column: 27, scope: !937)
!3128 = !DILocation(line: 2142, column: 2, scope: !937)
!3129 = !DILocation(line: 2143, column: 25, scope: !937)
!3130 = !DILocation(line: 2143, column: 2, scope: !937)
!3131 = !DILocation(line: 2145, column: 24, scope: !937)
!3132 = !DILocation(line: 2145, column: 33, scope: !937)
!3133 = !DILocation(line: 2145, column: 2, scope: !937)
!3134 = !DILocation(line: 2146, column: 24, scope: !937)
!3135 = !DILocation(line: 2146, column: 33, scope: !937)
!3136 = !DILocation(line: 2146, column: 2, scope: !937)
!3137 = !DILocation(line: 2147, column: 24, scope: !937)
!3138 = !DILocation(line: 2147, column: 33, scope: !937)
!3139 = !DILocation(line: 2147, column: 2, scope: !937)
!3140 = !DILocation(line: 2148, column: 24, scope: !937)
!3141 = !DILocation(line: 2148, column: 33, scope: !937)
!3142 = !DILocation(line: 2148, column: 2, scope: !937)
!3143 = !DILocation(line: 2149, column: 24, scope: !937)
!3144 = !DILocation(line: 2149, column: 33, scope: !937)
!3145 = !DILocation(line: 2149, column: 2, scope: !937)
!3146 = !DILocation(line: 2150, column: 24, scope: !937)
!3147 = !DILocation(line: 2150, column: 33, scope: !937)
!3148 = !DILocation(line: 2150, column: 2, scope: !937)
!3149 = !DILocation(line: 2151, column: 24, scope: !937)
!3150 = !DILocation(line: 2151, column: 33, scope: !937)
!3151 = !DILocation(line: 2151, column: 2, scope: !937)
!3152 = !DILocation(line: 2152, column: 24, scope: !937)
!3153 = !DILocation(line: 2152, column: 33, scope: !937)
!3154 = !DILocation(line: 2152, column: 2, scope: !937)
!3155 = !DILocation(line: 2153, column: 24, scope: !937)
!3156 = !DILocation(line: 2153, column: 33, scope: !937)
!3157 = !DILocation(line: 2153, column: 43, scope: !937)
!3158 = !DILocation(line: 2153, column: 2, scope: !937)
!3159 = !DILocation(line: 2154, column: 24, scope: !937)
!3160 = !DILocation(line: 2154, column: 33, scope: !937)
!3161 = !DILocation(line: 2154, column: 43, scope: !937)
!3162 = !DILocation(line: 2154, column: 2, scope: !937)
!3163 = !DILocation(line: 2155, column: 24, scope: !937)
!3164 = !DILocation(line: 2155, column: 33, scope: !937)
!3165 = !DILocation(line: 2155, column: 43, scope: !937)
!3166 = !DILocation(line: 2155, column: 2, scope: !937)
!3167 = !DILocation(line: 2156, column: 24, scope: !937)
!3168 = !DILocation(line: 2156, column: 33, scope: !937)
!3169 = !DILocation(line: 2156, column: 2, scope: !937)
!3170 = !DILocation(line: 2157, column: 24, scope: !937)
!3171 = !DILocation(line: 2157, column: 33, scope: !937)
!3172 = !DILocation(line: 2157, column: 2, scope: !937)
!3173 = !DILocation(line: 2159, column: 7, scope: !937)
!3174 = !DILocation(line: 2159, column: 2, scope: !937)
!3175 = !DILocation(line: 2160, column: 2, scope: !937)
!3176 = !DILocation(line: 2160, column: 5, scope: !937)
!3177 = !DILocation(line: 2160, column: 17, scope: !937)
!3178 = !DILocation(line: 2162, column: 10, scope: !937)
!3179 = !DILocation(line: 2162, column: 2, scope: !937)
!3180 = !DILocalVariable(name: "a", arg: 1, scope: !572, file: !1, line: 1190, type: !367)
!3181 = !DILocation(line: 1190, column: 35, scope: !572)
!3182 = !DILocalVariable(name: "s", arg: 2, scope: !572, file: !1, line: 1190, type: !575)
!3183 = !DILocation(line: 1190, column: 61, scope: !572)
!3184 = !DILocalVariable(name: "maxsize", arg: 3, scope: !572, file: !1, line: 1191, type: !23)
!3185 = !DILocation(line: 1191, column: 12, scope: !572)
!3186 = !DILocalVariable(name: "key", arg: 4, scope: !572, file: !1, line: 1191, type: !429)
!3187 = !DILocation(line: 1191, column: 33, scope: !572)
!3188 = !DILocalVariable(name: "value", arg: 5, scope: !572, file: !1, line: 1191, type: !429)
!3189 = !DILocation(line: 1191, column: 50, scope: !572)
!3190 = !DILocation(line: 1194, column: 13, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !572, file: !1, line: 1194, column: 6)
!3192 = !DILocation(line: 1194, column: 6, scope: !3191)
!3193 = !DILocation(line: 1194, column: 22, scope: !3191)
!3194 = !DILocation(line: 1194, column: 20, scope: !3191)
!3195 = !DILocation(line: 1194, column: 6, scope: !572)
!3196 = !DILocation(line: 1195, column: 22, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3191, file: !1, line: 1194, column: 31)
!3198 = !DILocation(line: 1195, column: 25, scope: !3197)
!3199 = !DILocation(line: 1197, column: 28, scope: !3197)
!3200 = !DILocation(line: 1197, column: 37, scope: !3197)
!3201 = !DILocation(line: 1195, column: 3, scope: !3197)
!3202 = !DILocation(line: 1198, column: 3, scope: !3197)
!3203 = !DILocation(line: 1200, column: 2, scope: !572)
!3204 = !DILocation(line: 1200, column: 2, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !572, file: !1, discriminator: 1)
!3206 = !DILocation(line: 1200, column: 2, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !572, file: !1, discriminator: 2)
!3208 = !DILocation(line: 1200, column: 2, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !572, file: !1, discriminator: 3)
!3210 = !DILocation(line: 1201, column: 2, scope: !572)
!3211 = !DILocation(line: 1202, column: 1, scope: !572)
!3212 = !DILocalVariable(name: "a", arg: 1, scope: !576, file: !1, line: 1205, type: !367)
!3213 = !DILocation(line: 1205, column: 35, scope: !576)
!3214 = !DILocalVariable(name: "num", arg: 2, scope: !576, file: !1, line: 1205, type: !579)
!3215 = !DILocation(line: 1205, column: 43, scope: !576)
!3216 = !DILocalVariable(name: "high", arg: 3, scope: !576, file: !1, line: 1205, type: !31)
!3217 = !DILocation(line: 1205, column: 52, scope: !576)
!3218 = !DILocalVariable(name: "low", arg: 4, scope: !576, file: !1, line: 1205, type: !31)
!3219 = !DILocation(line: 1205, column: 62, scope: !576)
!3220 = !DILocalVariable(name: "key", arg: 5, scope: !576, file: !1, line: 1206, type: !429)
!3221 = !DILocation(line: 1206, column: 17, scope: !576)
!3222 = !DILocalVariable(name: "value", arg: 6, scope: !576, file: !1, line: 1206, type: !429)
!3223 = !DILocation(line: 1206, column: 34, scope: !576)
!3224 = !DILocalVariable(name: "p", scope: !576, file: !1, line: 1208, type: !429)
!3225 = !DILocation(line: 1208, column: 14, scope: !576)
!3226 = !DILocation(line: 1208, column: 18, scope: !576)
!3227 = !DILocalVariable(name: "data", scope: !576, file: !1, line: 1209, type: !31)
!3228 = !DILocation(line: 1209, column: 6, scope: !576)
!3229 = !DILocalVariable(name: "neg", scope: !576, file: !1, line: 1210, type: !31)
!3230 = !DILocation(line: 1210, column: 6, scope: !576)
!3231 = !DILocation(line: 1212, column: 6, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1212, column: 6)
!3233 = !DILocation(line: 1212, column: 8, scope: !3232)
!3234 = !DILocation(line: 1212, column: 6, scope: !576)
!3235 = !DILocation(line: 1213, column: 22, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3232, file: !1, line: 1212, column: 17)
!3237 = !DILocation(line: 1213, column: 25, scope: !3236)
!3238 = !DILocation(line: 1214, column: 49, scope: !3236)
!3239 = !DILocation(line: 1213, column: 3, scope: !3236)
!3240 = !DILocation(line: 1215, column: 3, scope: !3236)
!3241 = !DILocation(line: 1217, column: 7, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1217, column: 6)
!3243 = !DILocation(line: 1217, column: 6, scope: !3242)
!3244 = !DILocation(line: 1217, column: 9, scope: !3242)
!3245 = !DILocation(line: 1217, column: 6, scope: !576)
!3246 = !DILocation(line: 1218, column: 7, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3242, file: !1, line: 1217, column: 17)
!3248 = !DILocation(line: 1219, column: 4, scope: !3247)
!3249 = !DILocation(line: 1220, column: 2, scope: !3247)
!3250 = !DILocation(line: 1221, column: 2, scope: !576)
!3251 = !DILocation(line: 1221, column: 10, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !576, file: !1, discriminator: 1)
!3253 = !DILocation(line: 1221, column: 9, scope: !3252)
!3254 = !DILocation(line: 1221, column: 2, scope: !3252)
!3255 = !DILocation(line: 1222, column: 8, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !1, line: 1222, column: 7)
!3257 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1221, column: 13)
!3258 = !DILocation(line: 1222, column: 7, scope: !3256)
!3259 = !DILocation(line: 1222, column: 10, scope: !3256)
!3260 = !DILocation(line: 1222, column: 17, scope: !3256)
!3261 = !DILocation(line: 1222, column: 21, scope: !3262)
!3262 = !DILexicalBlockFile(scope: !3256, file: !1, discriminator: 1)
!3263 = !DILocation(line: 1222, column: 20, scope: !3262)
!3264 = !DILocation(line: 1222, column: 23, scope: !3262)
!3265 = !DILocation(line: 1222, column: 7, scope: !3262)
!3266 = !DILocation(line: 1223, column: 11, scope: !3256)
!3267 = !DILocation(line: 1223, column: 16, scope: !3256)
!3268 = !DILocation(line: 1223, column: 24, scope: !3256)
!3269 = !DILocation(line: 1223, column: 23, scope: !3256)
!3270 = !DILocation(line: 1223, column: 21, scope: !3256)
!3271 = !DILocation(line: 1223, column: 26, scope: !3256)
!3272 = !DILocation(line: 1223, column: 9, scope: !3256)
!3273 = !DILocation(line: 1223, column: 4, scope: !3256)
!3274 = !DILocation(line: 1225, column: 23, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3256, file: !1, line: 1224, column: 8)
!3276 = !DILocation(line: 1225, column: 26, scope: !3275)
!3277 = !DILocation(line: 1226, column: 43, scope: !3275)
!3278 = !DILocation(line: 1225, column: 4, scope: !3275)
!3279 = !DILocation(line: 1227, column: 4, scope: !3275)
!3280 = !DILocation(line: 1229, column: 7, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3257, file: !1, line: 1229, column: 7)
!3282 = !DILocation(line: 1229, column: 14, scope: !3281)
!3283 = !DILocation(line: 1229, column: 12, scope: !3281)
!3284 = !DILocation(line: 1229, column: 7, scope: !3257)
!3285 = !DILocation(line: 1230, column: 23, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !1, line: 1229, column: 20)
!3287 = !DILocation(line: 1230, column: 26, scope: !3286)
!3288 = !DILocation(line: 1232, column: 25, scope: !3286)
!3289 = !DILocation(line: 1232, column: 31, scope: !3286)
!3290 = !DILocation(line: 1230, column: 4, scope: !3286)
!3291 = !DILocation(line: 1233, column: 4, scope: !3286)
!3292 = !DILocation(line: 1235, column: 7, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3257, file: !1, line: 1235, column: 7)
!3294 = !DILocation(line: 1235, column: 14, scope: !3293)
!3295 = !DILocation(line: 1235, column: 12, scope: !3293)
!3296 = !DILocation(line: 1235, column: 7, scope: !3257)
!3297 = !DILocation(line: 1236, column: 23, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3293, file: !1, line: 1235, column: 19)
!3299 = !DILocation(line: 1236, column: 26, scope: !3298)
!3300 = !DILocation(line: 1238, column: 25, scope: !3298)
!3301 = !DILocation(line: 1238, column: 30, scope: !3298)
!3302 = !DILocation(line: 1236, column: 4, scope: !3298)
!3303 = !DILocation(line: 1239, column: 4, scope: !3298)
!3304 = !DILocation(line: 1241, column: 4, scope: !3257)
!3305 = !DILocation(line: 1221, column: 2, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !576, file: !1, discriminator: 2)
!3307 = !DILocation(line: 1243, column: 6, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !576, file: !1, line: 1243, column: 6)
!3309 = !DILocation(line: 1243, column: 6, scope: !576)
!3310 = !DILocation(line: 1244, column: 8, scope: !3308)
!3311 = !DILocation(line: 1244, column: 3, scope: !3308)
!3312 = !DILocation(line: 1245, column: 9, scope: !576)
!3313 = !DILocation(line: 1245, column: 3, scope: !576)
!3314 = !DILocation(line: 1245, column: 7, scope: !576)
!3315 = !DILocation(line: 1247, column: 2, scope: !576)
!3316 = !DILocation(line: 1248, column: 1, scope: !576)
!3317 = !DILocalVariable(name: "a", arg: 1, scope: !581, file: !1, line: 4626, type: !367)
!3318 = !DILocation(line: 4626, column: 35, scope: !581)
!3319 = !DILocalVariable(name: "entry", arg: 2, scope: !581, file: !1, line: 4626, type: !12)
!3320 = !DILocation(line: 4626, column: 60, scope: !581)
!3321 = !DILocalVariable(name: "file", scope: !581, file: !1, line: 4628, type: !7)
!3322 = !DILocation(line: 4628, column: 18, scope: !581)
!3323 = !DILocation(line: 4630, column: 9, scope: !581)
!3324 = !DILocation(line: 4630, column: 7, scope: !581)
!3325 = !DILocation(line: 4631, column: 6, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4631, column: 6)
!3327 = !DILocation(line: 4631, column: 11, scope: !3326)
!3328 = !DILocation(line: 4631, column: 6, scope: !581)
!3329 = !DILocation(line: 4632, column: 3, scope: !3326)
!3330 = !DILocation(line: 4634, column: 6, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4634, column: 6)
!3332 = !DILocation(line: 4634, column: 12, scope: !3331)
!3333 = !DILocation(line: 4634, column: 6, scope: !581)
!3334 = !DILocation(line: 4635, column: 37, scope: !3331)
!3335 = !DILocation(line: 4635, column: 17, scope: !3331)
!3336 = !DILocation(line: 4635, column: 3, scope: !3331)
!3337 = !DILocation(line: 4635, column: 9, scope: !3331)
!3338 = !DILocation(line: 4635, column: 15, scope: !3331)
!3339 = !DILocation(line: 4637, column: 37, scope: !3331)
!3340 = !DILocation(line: 4637, column: 40, scope: !3331)
!3341 = !DILocation(line: 4637, column: 17, scope: !3331)
!3342 = !DILocation(line: 4637, column: 3, scope: !3331)
!3343 = !DILocation(line: 4637, column: 9, scope: !3331)
!3344 = !DILocation(line: 4637, column: 15, scope: !3331)
!3345 = !DILocation(line: 4638, column: 6, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4638, column: 6)
!3347 = !DILocation(line: 4638, column: 12, scope: !3346)
!3348 = !DILocation(line: 4638, column: 18, scope: !3346)
!3349 = !DILocation(line: 4638, column: 6, scope: !581)
!3350 = !DILocation(line: 4639, column: 8, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3346, file: !1, line: 4638, column: 27)
!3352 = !DILocation(line: 4639, column: 3, scope: !3351)
!3353 = !DILocation(line: 4640, column: 3, scope: !3351)
!3354 = !DILocation(line: 4642, column: 2, scope: !581)
!3355 = !DILocation(line: 4642, column: 2, scope: !3356)
!3356 = !DILexicalBlockFile(scope: !3357, file: !1, discriminator: 1)
!3357 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4642, column: 2)
!3358 = !DILocation(line: 4643, column: 2, scope: !581)
!3359 = !DILocation(line: 4643, column: 2, scope: !3360)
!3360 = !DILexicalBlockFile(scope: !3361, file: !1, discriminator: 1)
!3361 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4643, column: 2)
!3362 = !DILocation(line: 4644, column: 2, scope: !581)
!3363 = !DILocation(line: 4644, column: 2, scope: !3364)
!3364 = !DILexicalBlockFile(scope: !3365, file: !1, discriminator: 1)
!3365 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4644, column: 2)
!3366 = !DILocation(line: 4645, column: 2, scope: !581)
!3367 = !DILocation(line: 4645, column: 2, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3369, file: !1, discriminator: 1)
!3369 = distinct !DILexicalBlock(scope: !581, file: !1, line: 4645, column: 2)
!3370 = !DILocation(line: 4646, column: 24, scope: !581)
!3371 = !DILocation(line: 4646, column: 30, scope: !581)
!3372 = !DILocation(line: 4646, column: 2, scope: !581)
!3373 = !DILocation(line: 4646, column: 8, scope: !581)
!3374 = !DILocation(line: 4646, column: 20, scope: !581)
!3375 = !DILocation(line: 4648, column: 10, scope: !581)
!3376 = !DILocation(line: 4648, column: 2, scope: !581)
!3377 = !DILocation(line: 4649, column: 1, scope: !581)
!3378 = !DILocalVariable(name: "a", arg: 1, scope: !584, file: !1, line: 4711, type: !367)
!3379 = !DILocation(line: 4711, column: 49, scope: !584)
!3380 = !DILocalVariable(name: "file", arg: 2, scope: !584, file: !1, line: 4711, type: !7)
!3381 = !DILocation(line: 4711, column: 68, scope: !584)
!3382 = !DILocalVariable(name: "iso9660", scope: !584, file: !1, line: 4713, type: !530)
!3383 = !DILocation(line: 4713, column: 18, scope: !584)
!3384 = !DILocalVariable(name: "pathname", scope: !584, file: !1, line: 4714, type: !429)
!3385 = !DILocation(line: 4714, column: 14, scope: !584)
!3386 = !DILocalVariable(name: "p", scope: !584, file: !1, line: 4715, type: !20)
!3387 = !DILocation(line: 4715, column: 8, scope: !584)
!3388 = !DILocalVariable(name: "dirname", scope: !584, file: !1, line: 4715, type: !20)
!3389 = !DILocation(line: 4715, column: 12, scope: !584)
!3390 = !DILocalVariable(name: "slash", scope: !584, file: !1, line: 4715, type: !20)
!3391 = !DILocation(line: 4715, column: 22, scope: !584)
!3392 = !DILocalVariable(name: "len", scope: !584, file: !1, line: 4716, type: !23)
!3393 = !DILocation(line: 4716, column: 9, scope: !584)
!3394 = !DILocalVariable(name: "ret", scope: !584, file: !1, line: 4717, type: !31)
!3395 = !DILocation(line: 4717, column: 6, scope: !584)
!3396 = !DILocation(line: 4719, column: 12, scope: !584)
!3397 = !DILocation(line: 4719, column: 15, scope: !584)
!3398 = !DILocation(line: 4719, column: 10, scope: !584)
!3399 = !DILocation(line: 4721, column: 2, scope: !584)
!3400 = !DILocation(line: 4722, column: 2, scope: !584)
!3401 = !DILocation(line: 4723, column: 2, scope: !584)
!3402 = !DILocation(line: 4724, column: 2, scope: !584)
!3403 = !DILocation(line: 4726, column: 37, scope: !584)
!3404 = !DILocation(line: 4726, column: 43, scope: !584)
!3405 = !DILocation(line: 4726, column: 14, scope: !584)
!3406 = !DILocation(line: 4726, column: 11, scope: !584)
!3407 = !DILocation(line: 4727, column: 6, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4727, column: 6)
!3409 = !DILocation(line: 4727, column: 15, scope: !3408)
!3410 = !DILocation(line: 4727, column: 23, scope: !3408)
!3411 = !DILocation(line: 4727, column: 26, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3408, file: !1, discriminator: 1)
!3413 = !DILocation(line: 4727, column: 38, scope: !3412)
!3414 = !DILocation(line: 4727, column: 6, scope: !3412)
!3415 = !DILocation(line: 4728, column: 3, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3408, file: !1, line: 4727, column: 47)
!3417 = !DILocation(line: 4728, column: 9, scope: !3416)
!3418 = !DILocation(line: 4728, column: 16, scope: !3416)
!3419 = !DILocation(line: 4729, column: 11, scope: !3416)
!3420 = !DILocation(line: 4729, column: 3, scope: !3416)
!3421 = !DILocation(line: 4735, column: 6, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4735, column: 6)
!3423 = !DILocation(line: 4735, column: 15, scope: !3422)
!3424 = !DILocation(line: 4735, column: 19, scope: !3422)
!3425 = !DILocation(line: 4735, column: 6, scope: !584)
!3426 = !DILocalVariable(name: "u16", scope: !3427, file: !1, line: 4736, type: !429)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !1, line: 4735, column: 27)
!3428 = !DILocation(line: 4736, column: 15, scope: !3427)
!3429 = !DILocalVariable(name: "ulast", scope: !3427, file: !1, line: 4736, type: !429)
!3430 = !DILocation(line: 4736, column: 21, scope: !3427)
!3431 = !DILocalVariable(name: "u16len", scope: !3427, file: !1, line: 4737, type: !23)
!3432 = !DILocation(line: 4737, column: 10, scope: !3427)
!3433 = !DILocalVariable(name: "ulen_last", scope: !3427, file: !1, line: 4737, type: !23)
!3434 = !DILocation(line: 4737, column: 18, scope: !3427)
!3435 = !DILocation(line: 4739, column: 7, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 4739, column: 7)
!3437 = !DILocation(line: 4739, column: 16, scope: !3436)
!3438 = !DILocation(line: 4739, column: 33, scope: !3436)
!3439 = !DILocation(line: 4739, column: 7, scope: !3427)
!3440 = !DILocation(line: 4742, column: 7, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 4739, column: 42)
!3442 = !DILocation(line: 4742, column: 10, scope: !3441)
!3443 = !DILocation(line: 4741, column: 8, scope: !3441)
!3444 = !DILocation(line: 4740, column: 4, scope: !3441)
!3445 = !DILocation(line: 4740, column: 13, scope: !3441)
!3446 = !DILocation(line: 4740, column: 30, scope: !3441)
!3447 = !DILocation(line: 4743, column: 8, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3441, file: !1, line: 4743, column: 8)
!3449 = !DILocation(line: 4743, column: 17, scope: !3448)
!3450 = !DILocation(line: 4743, column: 34, scope: !3448)
!3451 = !DILocation(line: 4743, column: 8, scope: !3441)
!3452 = !DILocation(line: 4745, column: 5, scope: !3448)
!3453 = !DILocation(line: 4748, column: 7, scope: !3441)
!3454 = !DILocation(line: 4748, column: 10, scope: !3441)
!3455 = !DILocation(line: 4747, column: 8, scope: !3441)
!3456 = !DILocation(line: 4746, column: 4, scope: !3441)
!3457 = !DILocation(line: 4746, column: 13, scope: !3441)
!3458 = !DILocation(line: 4746, column: 32, scope: !3441)
!3459 = !DILocation(line: 4749, column: 8, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3441, file: !1, line: 4749, column: 8)
!3461 = !DILocation(line: 4749, column: 17, scope: !3460)
!3462 = !DILocation(line: 4749, column: 36, scope: !3460)
!3463 = !DILocation(line: 4749, column: 8, scope: !3441)
!3464 = !DILocation(line: 4751, column: 5, scope: !3460)
!3465 = !DILocation(line: 4752, column: 3, scope: !3441)
!3466 = !DILocation(line: 4757, column: 36, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 4757, column: 7)
!3468 = !DILocation(line: 4757, column: 42, scope: !3467)
!3469 = !DILocation(line: 4758, column: 7, scope: !3467)
!3470 = !DILocation(line: 4758, column: 16, scope: !3467)
!3471 = !DILocation(line: 4757, column: 11, scope: !3467)
!3472 = !DILocation(line: 4757, column: 9, scope: !3467)
!3473 = !DILocation(line: 4757, column: 7, scope: !3427)
!3474 = !DILocation(line: 4759, column: 8, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !1, line: 4759, column: 8)
!3476 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 4758, column: 35)
!3477 = !DILocation(line: 4759, column: 14, scope: !3475)
!3478 = !DILocation(line: 4759, column: 8, scope: !3476)
!3479 = !DILocation(line: 4760, column: 24, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3475, file: !1, line: 4759, column: 25)
!3481 = !DILocation(line: 4760, column: 27, scope: !3480)
!3482 = !DILocation(line: 4760, column: 5, scope: !3480)
!3483 = !DILocation(line: 4762, column: 5, scope: !3480)
!3484 = !DILocation(line: 4764, column: 23, scope: !3476)
!3485 = !DILocation(line: 4764, column: 26, scope: !3476)
!3486 = !DILocation(line: 4764, column: 4, scope: !3476)
!3487 = !DILocation(line: 4767, column: 8, scope: !3476)
!3488 = !DILocation(line: 4768, column: 3, scope: !3476)
!3489 = !DILocation(line: 4774, column: 3, scope: !3427)
!3490 = !DILocation(line: 4774, column: 10, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !3427, file: !1, discriminator: 1)
!3492 = !DILocation(line: 4774, column: 17, scope: !3491)
!3493 = !DILocation(line: 4774, column: 3, scope: !3491)
!3494 = !DILocation(line: 4779, column: 12, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !1, line: 4779, column: 8)
!3496 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 4774, column: 23)
!3497 = !DILocation(line: 4779, column: 18, scope: !3495)
!3498 = !DILocation(line: 4779, column: 8, scope: !3495)
!3499 = !DILocation(line: 4779, column: 22, scope: !3495)
!3500 = !DILocation(line: 4779, column: 27, scope: !3495)
!3501 = !DILocation(line: 4779, column: 34, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3495, file: !1, discriminator: 1)
!3503 = !DILocation(line: 4779, column: 40, scope: !3502)
!3504 = !DILocation(line: 4779, column: 30, scope: !3502)
!3505 = !DILocation(line: 4779, column: 44, scope: !3502)
!3506 = !DILocation(line: 4779, column: 8, scope: !3502)
!3507 = !DILocation(line: 4782, column: 12, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3495, file: !1, line: 4781, column: 4)
!3509 = !DILocation(line: 4783, column: 4, scope: !3508)
!3510 = !DILocation(line: 4784, column: 5, scope: !3495)
!3511 = !DILocation(line: 4774, column: 3, scope: !3512)
!3512 = !DILexicalBlockFile(scope: !3427, file: !1, discriminator: 2)
!3513 = !DILocation(line: 4790, column: 11, scope: !3427)
!3514 = !DILocation(line: 4790, column: 9, scope: !3427)
!3515 = !DILocation(line: 4791, column: 10, scope: !3427)
!3516 = !DILocation(line: 4792, column: 15, scope: !3427)
!3517 = !DILocation(line: 4792, column: 13, scope: !3427)
!3518 = !DILocation(line: 4793, column: 3, scope: !3427)
!3519 = !DILocation(line: 4793, column: 10, scope: !3491)
!3520 = !DILocation(line: 4793, column: 17, scope: !3491)
!3521 = !DILocation(line: 4793, column: 3, scope: !3491)
!3522 = !DILocation(line: 4797, column: 8, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !1, line: 4797, column: 8)
!3524 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 4793, column: 22)
!3525 = !DILocation(line: 4797, column: 15, scope: !3523)
!3526 = !DILocation(line: 4797, column: 20, scope: !3523)
!3527 = !DILocation(line: 4797, column: 23, scope: !3528)
!3528 = !DILexicalBlockFile(scope: !3523, file: !1, discriminator: 1)
!3529 = !DILocation(line: 4797, column: 30, scope: !3528)
!3530 = !DILocation(line: 4797, column: 8, scope: !3528)
!3531 = !DILocation(line: 4800, column: 13, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3523, file: !1, line: 4799, column: 4)
!3533 = !DILocation(line: 4800, column: 17, scope: !3532)
!3534 = !DILocation(line: 4800, column: 11, scope: !3532)
!3535 = !DILocation(line: 4801, column: 17, scope: !3532)
!3536 = !DILocation(line: 4801, column: 24, scope: !3532)
!3537 = !DILocation(line: 4801, column: 15, scope: !3532)
!3538 = !DILocation(line: 4802, column: 4, scope: !3532)
!3539 = !DILocation(line: 4803, column: 8, scope: !3524)
!3540 = !DILocation(line: 4804, column: 11, scope: !3524)
!3541 = !DILocation(line: 4793, column: 3, scope: !3512)
!3542 = !DILocation(line: 4806, column: 13, scope: !3427)
!3543 = !DILocation(line: 4807, column: 31, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3427, file: !1, line: 4807, column: 7)
!3545 = !DILocation(line: 4807, column: 37, scope: !3544)
!3546 = !DILocation(line: 4808, column: 7, scope: !3544)
!3547 = !DILocation(line: 4807, column: 7, scope: !3544)
!3548 = !DILocation(line: 4808, column: 18, scope: !3544)
!3549 = !DILocation(line: 4807, column: 7, scope: !3427)
!3550 = !DILocation(line: 4809, column: 23, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 4808, column: 27)
!3552 = !DILocation(line: 4809, column: 26, scope: !3551)
!3553 = !DILocation(line: 4809, column: 4, scope: !3551)
!3554 = !DILocation(line: 4811, column: 4, scope: !3551)
!3555 = !DILocation(line: 4817, column: 10, scope: !3427)
!3556 = !DILocation(line: 4817, column: 16, scope: !3427)
!3557 = !DILocation(line: 4817, column: 31, scope: !3427)
!3558 = !DILocation(line: 4817, column: 34, scope: !3427)
!3559 = !DILocation(line: 4817, column: 41, scope: !3427)
!3560 = !DILocation(line: 4817, column: 3, scope: !3427)
!3561 = !DILocation(line: 4818, column: 33, scope: !3427)
!3562 = !DILocation(line: 4818, column: 3, scope: !3427)
!3563 = !DILocation(line: 4818, column: 9, scope: !3427)
!3564 = !DILocation(line: 4818, column: 24, scope: !3427)
!3565 = !DILocation(line: 4818, column: 31, scope: !3427)
!3566 = !DILocation(line: 4819, column: 2, scope: !3427)
!3567 = !DILocation(line: 4821, column: 2, scope: !584)
!3568 = !DILocation(line: 4821, column: 2, scope: !3569)
!3569 = !DILexicalBlockFile(scope: !584, file: !1, discriminator: 1)
!3570 = !DILocation(line: 4821, column: 2, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !584, file: !1, discriminator: 2)
!3572 = !DILocation(line: 4821, column: 2, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !584, file: !1, discriminator: 3)
!3574 = !DILocation(line: 4848, column: 8, scope: !584)
!3575 = !DILocation(line: 4848, column: 14, scope: !584)
!3576 = !DILocation(line: 4848, column: 24, scope: !584)
!3577 = !DILocation(line: 4848, column: 6, scope: !584)
!3578 = !DILocation(line: 4849, column: 16, scope: !584)
!3579 = !DILocation(line: 4849, column: 22, scope: !584)
!3580 = !DILocation(line: 4849, column: 32, scope: !584)
!3581 = !DILocation(line: 4849, column: 14, scope: !584)
!3582 = !DILocation(line: 4849, column: 4, scope: !584)
!3583 = !DILocation(line: 4854, column: 2, scope: !584)
!3584 = !DILocation(line: 4854, column: 10, scope: !3569)
!3585 = !DILocation(line: 4854, column: 9, scope: !3569)
!3586 = !DILocation(line: 4854, column: 2, scope: !3569)
!3587 = !DILocation(line: 4855, column: 7, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !1, line: 4855, column: 7)
!3589 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4854, column: 13)
!3590 = !DILocation(line: 4855, column: 12, scope: !3588)
!3591 = !DILocation(line: 4855, column: 7, scope: !3589)
!3592 = !DILocation(line: 4856, column: 5, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 4855, column: 20)
!3594 = !DILocation(line: 4857, column: 7, scope: !3593)
!3595 = !DILocation(line: 4858, column: 3, scope: !3593)
!3596 = !DILocation(line: 4858, column: 14, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3598, file: !1, discriminator: 1)
!3598 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 4858, column: 14)
!3599 = !DILocation(line: 4858, column: 19, scope: !3597)
!3600 = !DILocation(line: 4859, column: 4, scope: !3598)
!3601 = !DILocation(line: 4860, column: 12, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3598, file: !1, line: 4860, column: 12)
!3603 = !DILocation(line: 4860, column: 17, scope: !3602)
!3604 = !DILocation(line: 4860, column: 24, scope: !3602)
!3605 = !DILocation(line: 4860, column: 27, scope: !3606)
!3606 = !DILexicalBlockFile(scope: !3602, file: !1, discriminator: 1)
!3607 = !DILocation(line: 4860, column: 32, scope: !3606)
!3608 = !DILocation(line: 4860, column: 12, scope: !3606)
!3609 = !DILocation(line: 4861, column: 6, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 4860, column: 40)
!3611 = !DILocation(line: 4862, column: 8, scope: !3610)
!3612 = !DILocation(line: 4863, column: 3, scope: !3610)
!3613 = !DILocation(line: 4863, column: 14, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3615, file: !1, discriminator: 1)
!3615 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 4863, column: 14)
!3616 = !DILocation(line: 4863, column: 19, scope: !3614)
!3617 = !DILocation(line: 4863, column: 26, scope: !3614)
!3618 = !DILocation(line: 4863, column: 30, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3615, file: !1, discriminator: 2)
!3620 = !DILocation(line: 4863, column: 35, scope: !3619)
!3621 = !DILocation(line: 4863, column: 42, scope: !3619)
!3622 = !DILocation(line: 4863, column: 45, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !3615, file: !1, discriminator: 3)
!3624 = !DILocation(line: 4863, column: 50, scope: !3623)
!3625 = !DILocation(line: 4863, column: 14, scope: !3623)
!3626 = !DILocation(line: 4864, column: 6, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 4863, column: 60)
!3628 = !DILocation(line: 4865, column: 8, scope: !3627)
!3629 = !DILocation(line: 4866, column: 3, scope: !3627)
!3630 = !DILocation(line: 4866, column: 14, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3632, file: !1, discriminator: 1)
!3632 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 4866, column: 14)
!3633 = !DILocation(line: 4866, column: 19, scope: !3631)
!3634 = !DILocation(line: 4867, column: 5, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3632, file: !1, line: 4866, column: 28)
!3636 = !DILocation(line: 4868, column: 7, scope: !3635)
!3637 = !DILocation(line: 4869, column: 3, scope: !3635)
!3638 = !DILocation(line: 4870, column: 4, scope: !3632)
!3639 = !DILocation(line: 4854, column: 2, scope: !3571)
!3640 = !DILocation(line: 4872, column: 6, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4872, column: 6)
!3642 = !DILocation(line: 4872, column: 11, scope: !3641)
!3643 = !DILocation(line: 4872, column: 8, scope: !3641)
!3644 = !DILocation(line: 4872, column: 6, scope: !584)
!3645 = !DILocation(line: 4873, column: 11, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3641, file: !1, line: 4872, column: 20)
!3647 = !DILocation(line: 4873, column: 20, scope: !3646)
!3648 = !DILocation(line: 4873, column: 23, scope: !3646)
!3649 = !DILocation(line: 4873, column: 26, scope: !3646)
!3650 = !DILocation(line: 4873, column: 3, scope: !3646)
!3651 = !DILocation(line: 4874, column: 7, scope: !3646)
!3652 = !DILocation(line: 4874, column: 5, scope: !3646)
!3653 = !DILocation(line: 4875, column: 2, scope: !3646)
!3654 = !DILocation(line: 4879, column: 2, scope: !584)
!3655 = !DILocation(line: 4879, column: 9, scope: !3569)
!3656 = !DILocation(line: 4879, column: 13, scope: !3569)
!3657 = !DILocation(line: 4879, column: 2, scope: !3569)
!3658 = !DILocalVariable(name: "ll", scope: !3659, file: !1, line: 4880, type: !23)
!3659 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4879, column: 18)
!3660 = !DILocation(line: 4880, column: 10, scope: !3659)
!3661 = !DILocation(line: 4880, column: 15, scope: !3659)
!3662 = !DILocation(line: 4882, column: 7, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !1, line: 4882, column: 7)
!3664 = !DILocation(line: 4882, column: 11, scope: !3663)
!3665 = !DILocation(line: 4882, column: 15, scope: !3663)
!3666 = !DILocation(line: 4882, column: 20, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !3663, file: !1, discriminator: 1)
!3668 = !DILocation(line: 4882, column: 23, scope: !3667)
!3669 = !DILocation(line: 4882, column: 18, scope: !3667)
!3670 = !DILocation(line: 4882, column: 27, scope: !3667)
!3671 = !DILocation(line: 4882, column: 7, scope: !3667)
!3672 = !DILocation(line: 4883, column: 6, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3663, file: !1, line: 4882, column: 35)
!3674 = !DILocation(line: 4883, column: 9, scope: !3673)
!3675 = !DILocation(line: 4883, column: 4, scope: !3673)
!3676 = !DILocation(line: 4883, column: 13, scope: !3673)
!3677 = !DILocation(line: 4884, column: 7, scope: !3673)
!3678 = !DILocation(line: 4885, column: 3, scope: !3673)
!3679 = !DILocation(line: 4886, column: 7, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3659, file: !1, line: 4886, column: 7)
!3681 = !DILocation(line: 4886, column: 11, scope: !3680)
!3682 = !DILocation(line: 4886, column: 15, scope: !3680)
!3683 = !DILocation(line: 4886, column: 20, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !3680, file: !1, discriminator: 1)
!3685 = !DILocation(line: 4886, column: 23, scope: !3684)
!3686 = !DILocation(line: 4886, column: 18, scope: !3684)
!3687 = !DILocation(line: 4886, column: 27, scope: !3684)
!3688 = !DILocation(line: 4886, column: 34, scope: !3684)
!3689 = !DILocation(line: 4886, column: 39, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3680, file: !1, discriminator: 2)
!3691 = !DILocation(line: 4886, column: 42, scope: !3690)
!3692 = !DILocation(line: 4886, column: 37, scope: !3690)
!3693 = !DILocation(line: 4886, column: 46, scope: !3690)
!3694 = !DILocation(line: 4886, column: 7, scope: !3690)
!3695 = !DILocation(line: 4887, column: 6, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3680, file: !1, line: 4886, column: 54)
!3697 = !DILocation(line: 4887, column: 9, scope: !3696)
!3698 = !DILocation(line: 4887, column: 4, scope: !3696)
!3699 = !DILocation(line: 4887, column: 13, scope: !3696)
!3700 = !DILocation(line: 4888, column: 8, scope: !3696)
!3701 = !DILocation(line: 4889, column: 3, scope: !3696)
!3702 = !DILocation(line: 4890, column: 7, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3659, file: !1, line: 4890, column: 7)
!3704 = !DILocation(line: 4890, column: 11, scope: !3703)
!3705 = !DILocation(line: 4890, column: 15, scope: !3703)
!3706 = !DILocation(line: 4890, column: 20, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3703, file: !1, discriminator: 1)
!3708 = !DILocation(line: 4890, column: 23, scope: !3707)
!3709 = !DILocation(line: 4890, column: 18, scope: !3707)
!3710 = !DILocation(line: 4890, column: 27, scope: !3707)
!3711 = !DILocation(line: 4890, column: 34, scope: !3707)
!3712 = !DILocation(line: 4890, column: 39, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3703, file: !1, discriminator: 2)
!3714 = !DILocation(line: 4890, column: 42, scope: !3713)
!3715 = !DILocation(line: 4890, column: 37, scope: !3713)
!3716 = !DILocation(line: 4890, column: 46, scope: !3713)
!3717 = !DILocation(line: 4890, column: 53, scope: !3713)
!3718 = !DILocation(line: 4891, column: 9, scope: !3703)
!3719 = !DILocation(line: 4891, column: 12, scope: !3703)
!3720 = !DILocation(line: 4891, column: 7, scope: !3703)
!3721 = !DILocation(line: 4891, column: 16, scope: !3703)
!3722 = !DILocation(line: 4890, column: 7, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3659, file: !1, discriminator: 3)
!3724 = !DILocation(line: 4892, column: 6, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3703, file: !1, line: 4891, column: 24)
!3726 = !DILocation(line: 4892, column: 9, scope: !3725)
!3727 = !DILocation(line: 4892, column: 4, scope: !3725)
!3728 = !DILocation(line: 4892, column: 13, scope: !3725)
!3729 = !DILocation(line: 4893, column: 8, scope: !3725)
!3730 = !DILocation(line: 4894, column: 3, scope: !3725)
!3731 = !DILocation(line: 4895, column: 7, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3659, file: !1, line: 4895, column: 7)
!3733 = !DILocation(line: 4895, column: 13, scope: !3732)
!3734 = !DILocation(line: 4895, column: 10, scope: !3732)
!3735 = !DILocation(line: 4895, column: 7, scope: !3659)
!3736 = !DILocation(line: 4896, column: 4, scope: !3732)
!3737 = !DILocation(line: 4879, column: 2, scope: !3571)
!3738 = !DILocation(line: 4898, column: 2, scope: !584)
!3739 = !DILocation(line: 4898, column: 10, scope: !3569)
!3740 = !DILocation(line: 4898, column: 9, scope: !3569)
!3741 = !DILocation(line: 4898, column: 2, scope: !3569)
!3742 = !DILocation(line: 4899, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !1, line: 4899, column: 7)
!3744 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4898, column: 13)
!3745 = !DILocation(line: 4899, column: 12, scope: !3743)
!3746 = !DILocation(line: 4899, column: 7, scope: !3744)
!3747 = !DILocation(line: 4900, column: 8, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 4900, column: 8)
!3749 = distinct !DILexicalBlock(scope: !3743, file: !1, line: 4899, column: 20)
!3750 = !DILocation(line: 4900, column: 13, scope: !3748)
!3751 = !DILocation(line: 4900, column: 8, scope: !3749)
!3752 = !DILocation(line: 4902, column: 12, scope: !3748)
!3753 = !DILocation(line: 4902, column: 15, scope: !3748)
!3754 = !DILocation(line: 4902, column: 16, scope: !3748)
!3755 = !DILocation(line: 4902, column: 5, scope: !3748)
!3756 = !DILocation(line: 4903, column: 13, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 4903, column: 13)
!3758 = !DILocation(line: 4903, column: 18, scope: !3757)
!3759 = !DILocation(line: 4903, column: 25, scope: !3757)
!3760 = !DILocation(line: 4903, column: 28, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !3757, file: !1, discriminator: 1)
!3762 = !DILocation(line: 4903, column: 33, scope: !3761)
!3763 = !DILocation(line: 4903, column: 13, scope: !3761)
!3764 = !DILocation(line: 4905, column: 12, scope: !3757)
!3765 = !DILocation(line: 4905, column: 15, scope: !3757)
!3766 = !DILocation(line: 4905, column: 16, scope: !3757)
!3767 = !DILocation(line: 4905, column: 5, scope: !3757)
!3768 = !DILocation(line: 4906, column: 13, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3757, file: !1, line: 4906, column: 13)
!3770 = !DILocation(line: 4906, column: 18, scope: !3769)
!3771 = !DILocation(line: 4906, column: 25, scope: !3769)
!3772 = !DILocation(line: 4906, column: 28, scope: !3773)
!3773 = !DILexicalBlockFile(scope: !3769, file: !1, discriminator: 1)
!3774 = !DILocation(line: 4906, column: 33, scope: !3773)
!3775 = !DILocation(line: 4906, column: 40, scope: !3773)
!3776 = !DILocation(line: 4906, column: 43, scope: !3777)
!3777 = !DILexicalBlockFile(scope: !3769, file: !1, discriminator: 2)
!3778 = !DILocation(line: 4906, column: 48, scope: !3777)
!3779 = !DILocation(line: 4906, column: 13, scope: !3777)
!3780 = !DILocalVariable(name: "rp", scope: !3781, file: !1, line: 4910, type: !20)
!3781 = distinct !DILexicalBlock(scope: !3769, file: !1, line: 4906, column: 56)
!3782 = !DILocation(line: 4910, column: 11, scope: !3781)
!3783 = !DILocation(line: 4910, column: 16, scope: !3781)
!3784 = !DILocation(line: 4910, column: 18, scope: !3781)
!3785 = !DILocation(line: 4911, column: 5, scope: !3781)
!3786 = !DILocation(line: 4911, column: 12, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3781, file: !1, discriminator: 1)
!3788 = !DILocation(line: 4911, column: 18, scope: !3787)
!3789 = !DILocation(line: 4911, column: 15, scope: !3787)
!3790 = !DILocation(line: 4911, column: 5, scope: !3787)
!3791 = !DILocation(line: 4912, column: 11, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 4912, column: 10)
!3793 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 4911, column: 27)
!3794 = !DILocation(line: 4912, column: 10, scope: !3792)
!3795 = !DILocation(line: 4912, column: 14, scope: !3792)
!3796 = !DILocation(line: 4912, column: 10, scope: !3793)
!3797 = !DILocation(line: 4913, column: 7, scope: !3792)
!3798 = !DILocation(line: 4914, column: 6, scope: !3793)
!3799 = !DILocation(line: 4911, column: 5, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3781, file: !1, discriminator: 2)
!3801 = !DILocation(line: 4916, column: 9, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 4916, column: 9)
!3803 = !DILocation(line: 4916, column: 14, scope: !3802)
!3804 = !DILocation(line: 4916, column: 12, scope: !3802)
!3805 = !DILocation(line: 4916, column: 9, scope: !3781)
!3806 = !DILocation(line: 4917, column: 13, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3802, file: !1, line: 4916, column: 23)
!3808 = !DILocation(line: 4917, column: 17, scope: !3807)
!3809 = !DILocation(line: 4917, column: 18, scope: !3807)
!3810 = !DILocation(line: 4917, column: 6, scope: !3807)
!3811 = !DILocation(line: 4918, column: 10, scope: !3807)
!3812 = !DILocation(line: 4918, column: 8, scope: !3807)
!3813 = !DILocation(line: 4919, column: 5, scope: !3807)
!3814 = !DILocation(line: 4920, column: 13, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3802, file: !1, line: 4919, column: 12)
!3816 = !DILocation(line: 4920, column: 22, scope: !3815)
!3817 = !DILocation(line: 4920, column: 23, scope: !3815)
!3818 = !DILocation(line: 4920, column: 6, scope: !3815)
!3819 = !DILocation(line: 4921, column: 10, scope: !3815)
!3820 = !DILocation(line: 4921, column: 8, scope: !3815)
!3821 = !DILocation(line: 4923, column: 4, scope: !3781)
!3822 = !DILocation(line: 4924, column: 6, scope: !3769)
!3823 = !DILocation(line: 4925, column: 3, scope: !3749)
!3824 = !DILocation(line: 4926, column: 5, scope: !3743)
!3825 = !DILocation(line: 4898, column: 2, scope: !3571)
!3826 = !DILocation(line: 4928, column: 6, scope: !584)
!3827 = !DILocation(line: 4928, column: 4, scope: !584)
!3828 = !DILocation(line: 4929, column: 15, scope: !584)
!3829 = !DILocation(line: 4929, column: 8, scope: !584)
!3830 = !DILocation(line: 4929, column: 6, scope: !584)
!3831 = !DILocation(line: 4931, column: 29, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4931, column: 6)
!3833 = !DILocation(line: 4931, column: 35, scope: !3832)
!3834 = !DILocation(line: 4931, column: 6, scope: !3832)
!3835 = !DILocation(line: 4931, column: 42, scope: !3832)
!3836 = !DILocation(line: 4931, column: 6, scope: !584)
!3837 = !DILocation(line: 4933, column: 36, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 4931, column: 55)
!3839 = !DILocation(line: 4933, column: 42, scope: !3838)
!3840 = !DILocation(line: 4933, column: 14, scope: !3838)
!3841 = !DILocation(line: 4933, column: 12, scope: !3838)
!3842 = !DILocation(line: 4934, column: 3, scope: !3838)
!3843 = !DILocation(line: 4934, column: 3, scope: !3844)
!3844 = !DILexicalBlockFile(scope: !3838, file: !1, discriminator: 1)
!3845 = !DILocation(line: 4934, column: 3, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3838, file: !1, discriminator: 2)
!3847 = !DILocation(line: 4934, column: 3, scope: !3848)
!3848 = !DILexicalBlockFile(scope: !3838, file: !1, discriminator: 3)
!3849 = !DILocation(line: 4963, column: 2, scope: !3838)
!3850 = !DILocation(line: 4969, column: 8, scope: !584)
!3851 = !DILocation(line: 4970, column: 2, scope: !584)
!3852 = !DILocation(line: 4970, column: 8, scope: !584)
!3853 = !DILocation(line: 4970, column: 15, scope: !584)
!3854 = !DILocation(line: 4971, column: 2, scope: !584)
!3855 = !DILocation(line: 4971, column: 10, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3857, file: !1, discriminator: 1)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !1, line: 4971, column: 2)
!3858 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4971, column: 2)
!3859 = !DILocation(line: 4971, column: 9, scope: !3856)
!3860 = !DILocation(line: 4971, column: 12, scope: !3856)
!3861 = !DILocation(line: 4971, column: 2, scope: !3856)
!3862 = !DILocation(line: 4972, column: 8, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3857, file: !1, line: 4972, column: 7)
!3864 = !DILocation(line: 4972, column: 7, scope: !3863)
!3865 = !DILocation(line: 4972, column: 10, scope: !3863)
!3866 = !DILocation(line: 4972, column: 7, scope: !3857)
!3867 = !DILocation(line: 4973, column: 12, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3863, file: !1, line: 4972, column: 18)
!3869 = !DILocation(line: 4973, column: 10, scope: !3868)
!3870 = !DILocation(line: 4974, column: 4, scope: !3868)
!3871 = !DILocation(line: 4974, column: 10, scope: !3868)
!3872 = !DILocation(line: 4974, column: 16, scope: !3868)
!3873 = !DILocation(line: 4975, column: 3, scope: !3868)
!3874 = !DILocation(line: 4972, column: 13, scope: !3875)
!3875 = !DILexicalBlockFile(scope: !3863, file: !1, discriminator: 1)
!3876 = !DILocation(line: 4971, column: 22, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !3857, file: !1, discriminator: 2)
!3878 = !DILocation(line: 4971, column: 2, scope: !3877)
!3879 = !DILocation(line: 4976, column: 6, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4976, column: 6)
!3881 = !DILocation(line: 4976, column: 12, scope: !3880)
!3882 = !DILocation(line: 4976, column: 6, scope: !584)
!3883 = !DILocation(line: 4978, column: 28, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 4976, column: 21)
!3885 = !DILocation(line: 4978, column: 3, scope: !3884)
!3886 = !DILocation(line: 4978, column: 9, scope: !3884)
!3887 = !DILocation(line: 4978, column: 19, scope: !3884)
!3888 = !DILocation(line: 4978, column: 26, scope: !3884)
!3889 = !DILocation(line: 4979, column: 3, scope: !3884)
!3890 = !DILocation(line: 4980, column: 3, scope: !3884)
!3891 = !DILocation(line: 4981, column: 4, scope: !3884)
!3892 = !DILocation(line: 4981, column: 10, scope: !3884)
!3893 = !DILocation(line: 4981, column: 20, scope: !3884)
!3894 = !DILocation(line: 4981, column: 22, scope: !3884)
!3895 = !DILocation(line: 4982, column: 11, scope: !3884)
!3896 = !DILocation(line: 4982, column: 3, scope: !3884)
!3897 = !DILocation(line: 4986, column: 3, scope: !584)
!3898 = !DILocation(line: 4986, column: 10, scope: !584)
!3899 = !DILocation(line: 4987, column: 27, scope: !584)
!3900 = !DILocation(line: 4987, column: 35, scope: !584)
!3901 = !DILocation(line: 4987, column: 33, scope: !584)
!3902 = !DILocation(line: 4987, column: 2, scope: !584)
!3903 = !DILocation(line: 4987, column: 8, scope: !584)
!3904 = !DILocation(line: 4987, column: 18, scope: !584)
!3905 = !DILocation(line: 4987, column: 25, scope: !584)
!3906 = !DILocation(line: 4988, column: 2, scope: !584)
!3907 = !DILocation(line: 4988, column: 2, scope: !3569)
!3908 = !DILocation(line: 4988, column: 2, scope: !3571)
!3909 = !DILocation(line: 4988, column: 2, scope: !3573)
!3910 = !DILocation(line: 4989, column: 29, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !584, file: !1, line: 4989, column: 6)
!3912 = !DILocation(line: 4989, column: 35, scope: !3911)
!3913 = !DILocation(line: 4989, column: 6, scope: !3911)
!3914 = !DILocation(line: 4989, column: 42, scope: !3911)
!3915 = !DILocation(line: 4989, column: 6, scope: !584)
!3916 = !DILocation(line: 4990, column: 3, scope: !3911)
!3917 = !DILocation(line: 4990, column: 9, scope: !3911)
!3918 = !DILocation(line: 4990, column: 16, scope: !3911)
!3919 = !DILocation(line: 4991, column: 10, scope: !584)
!3920 = !DILocation(line: 4991, column: 2, scope: !584)
!3921 = !DILocation(line: 4992, column: 1, scope: !584)
!3922 = !DILocalVariable(name: "file", arg: 1, scope: !587, file: !1, line: 4652, type: !7)
!3923 = !DILocation(line: 4652, column: 30, scope: !587)
!3924 = !DILocalVariable(name: "con", scope: !587, file: !1, line: 4654, type: !45)
!3925 = !DILocation(line: 4654, column: 18, scope: !587)
!3926 = !DILocalVariable(name: "tmp", scope: !587, file: !1, line: 4654, type: !45)
!3927 = !DILocation(line: 4654, column: 24, scope: !587)
!3928 = !DILocation(line: 4656, column: 8, scope: !587)
!3929 = !DILocation(line: 4656, column: 14, scope: !587)
!3930 = !DILocation(line: 4656, column: 22, scope: !587)
!3931 = !DILocation(line: 4656, column: 6, scope: !587)
!3932 = !DILocation(line: 4657, column: 2, scope: !587)
!3933 = !DILocation(line: 4657, column: 9, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !587, file: !1, discriminator: 1)
!3935 = !DILocation(line: 4657, column: 13, scope: !3934)
!3936 = !DILocation(line: 4657, column: 2, scope: !3934)
!3937 = !DILocation(line: 4658, column: 9, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !587, file: !1, line: 4657, column: 22)
!3939 = !DILocation(line: 4658, column: 7, scope: !3938)
!3940 = !DILocation(line: 4659, column: 9, scope: !3938)
!3941 = !DILocation(line: 4659, column: 14, scope: !3938)
!3942 = !DILocation(line: 4659, column: 7, scope: !3938)
!3943 = !DILocation(line: 4660, column: 8, scope: !3938)
!3944 = !DILocation(line: 4660, column: 3, scope: !3938)
!3945 = !DILocation(line: 4657, column: 2, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !587, file: !1, discriminator: 2)
!3947 = !DILocation(line: 4662, column: 21, scope: !587)
!3948 = !DILocation(line: 4662, column: 27, scope: !587)
!3949 = !DILocation(line: 4662, column: 2, scope: !587)
!3950 = !DILocation(line: 4663, column: 24, scope: !587)
!3951 = !DILocation(line: 4663, column: 30, scope: !587)
!3952 = !DILocation(line: 4663, column: 2, scope: !587)
!3953 = !DILocation(line: 4664, column: 24, scope: !587)
!3954 = !DILocation(line: 4664, column: 30, scope: !587)
!3955 = !DILocation(line: 4664, column: 2, scope: !587)
!3956 = !DILocation(line: 4665, column: 24, scope: !587)
!3957 = !DILocation(line: 4665, column: 30, scope: !587)
!3958 = !DILocation(line: 4665, column: 2, scope: !587)
!3959 = !DILocation(line: 4666, column: 24, scope: !587)
!3960 = !DILocation(line: 4666, column: 30, scope: !587)
!3961 = !DILocation(line: 4666, column: 2, scope: !587)
!3962 = !DILocation(line: 4667, column: 7, scope: !587)
!3963 = !DILocation(line: 4667, column: 2, scope: !587)
!3964 = !DILocation(line: 4668, column: 1, scope: !587)
!3965 = !DILocalVariable(name: "iso9660", arg: 1, scope: !590, file: !1, line: 4589, type: !530)
!3966 = !DILocation(line: 4589, column: 35, scope: !590)
!3967 = !DILocalVariable(name: "file", arg: 2, scope: !590, file: !1, line: 4589, type: !7)
!3968 = !DILocation(line: 4589, column: 60, scope: !590)
!3969 = !DILocation(line: 4591, column: 2, scope: !590)
!3970 = !DILocation(line: 4591, column: 8, scope: !590)
!3971 = !DILocation(line: 4591, column: 16, scope: !590)
!3972 = !DILocation(line: 4592, column: 33, scope: !590)
!3973 = !DILocation(line: 4592, column: 3, scope: !590)
!3974 = !DILocation(line: 4592, column: 12, scope: !590)
!3975 = !DILocation(line: 4592, column: 26, scope: !590)
!3976 = !DILocation(line: 4592, column: 31, scope: !590)
!3977 = !DILocation(line: 4593, column: 34, scope: !590)
!3978 = !DILocation(line: 4593, column: 40, scope: !590)
!3979 = !DILocation(line: 4593, column: 2, scope: !590)
!3980 = !DILocation(line: 4593, column: 11, scope: !590)
!3981 = !DILocation(line: 4593, column: 25, scope: !590)
!3982 = !DILocation(line: 4593, column: 30, scope: !590)
!3983 = !DILocation(line: 4594, column: 1, scope: !590)
!3984 = !DILocalVariable(name: "file", arg: 1, scope: !593, file: !1, line: 5108, type: !7)
!3985 = !DILocation(line: 5108, column: 28, scope: !593)
!3986 = !DILocalVariable(name: "isoent", scope: !593, file: !1, line: 5110, type: !76)
!3987 = !DILocation(line: 5110, column: 17, scope: !593)
!3988 = !DILocation(line: 5115, column: 11, scope: !593)
!3989 = !DILocation(line: 5115, column: 9, scope: !593)
!3990 = !DILocation(line: 5116, column: 6, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !593, file: !1, line: 5116, column: 6)
!3992 = !DILocation(line: 5116, column: 13, scope: !3991)
!3993 = !DILocation(line: 5116, column: 6, scope: !593)
!3994 = !DILocation(line: 5117, column: 3, scope: !3991)
!3995 = !DILocation(line: 5118, column: 17, scope: !593)
!3996 = !DILocation(line: 5118, column: 2, scope: !593)
!3997 = !DILocation(line: 5118, column: 10, scope: !593)
!3998 = !DILocation(line: 5118, column: 15, scope: !593)
!3999 = !DILocation(line: 5119, column: 2, scope: !593)
!4000 = !DILocation(line: 5119, column: 10, scope: !593)
!4001 = !DILocation(line: 5119, column: 19, scope: !593)
!4002 = !DILocation(line: 5119, column: 25, scope: !593)
!4003 = !DILocation(line: 5120, column: 28, scope: !593)
!4004 = !DILocation(line: 5120, column: 36, scope: !593)
!4005 = !DILocation(line: 5120, column: 45, scope: !593)
!4006 = !DILocation(line: 5120, column: 2, scope: !593)
!4007 = !DILocation(line: 5120, column: 10, scope: !593)
!4008 = !DILocation(line: 5120, column: 19, scope: !593)
!4009 = !DILocation(line: 5120, column: 24, scope: !593)
!4010 = !DILocation(line: 5121, column: 27, scope: !593)
!4011 = !DILocation(line: 5121, column: 35, scope: !593)
!4012 = !DILocation(line: 5121, column: 2, scope: !593)
!4013 = !DILocation(line: 5122, column: 2, scope: !593)
!4014 = !DILocation(line: 5122, column: 10, scope: !593)
!4015 = !DILocation(line: 5122, column: 18, scope: !593)
!4016 = !DILocation(line: 5122, column: 24, scope: !593)
!4017 = !DILocation(line: 5123, column: 27, scope: !593)
!4018 = !DILocation(line: 5123, column: 35, scope: !593)
!4019 = !DILocation(line: 5123, column: 43, scope: !593)
!4020 = !DILocation(line: 5123, column: 2, scope: !593)
!4021 = !DILocation(line: 5123, column: 10, scope: !593)
!4022 = !DILocation(line: 5123, column: 18, scope: !593)
!4023 = !DILocation(line: 5123, column: 23, scope: !593)
!4024 = !DILocation(line: 5124, column: 2, scope: !593)
!4025 = !DILocation(line: 5124, column: 10, scope: !593)
!4026 = !DILocation(line: 5124, column: 24, scope: !593)
!4027 = !DILocation(line: 5124, column: 30, scope: !593)
!4028 = !DILocation(line: 5125, column: 33, scope: !593)
!4029 = !DILocation(line: 5125, column: 41, scope: !593)
!4030 = !DILocation(line: 5125, column: 55, scope: !593)
!4031 = !DILocation(line: 5125, column: 2, scope: !593)
!4032 = !DILocation(line: 5125, column: 10, scope: !593)
!4033 = !DILocation(line: 5125, column: 24, scope: !593)
!4034 = !DILocation(line: 5125, column: 29, scope: !593)
!4035 = !DILocation(line: 5126, column: 2, scope: !593)
!4036 = !DILocation(line: 5126, column: 10, scope: !593)
!4037 = !DILocation(line: 5126, column: 24, scope: !593)
!4038 = !DILocation(line: 5126, column: 32, scope: !593)
!4039 = !DILocation(line: 5127, column: 29, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !593, file: !1, line: 5127, column: 6)
!4041 = !DILocation(line: 5127, column: 35, scope: !4040)
!4042 = !DILocation(line: 5127, column: 6, scope: !4040)
!4043 = !DILocation(line: 5127, column: 42, scope: !4040)
!4044 = !DILocation(line: 5127, column: 6, scope: !593)
!4045 = !DILocation(line: 5128, column: 3, scope: !4040)
!4046 = !DILocation(line: 5128, column: 11, scope: !4040)
!4047 = !DILocation(line: 5128, column: 15, scope: !4040)
!4048 = !DILocation(line: 5130, column: 10, scope: !593)
!4049 = !DILocation(line: 5130, column: 2, scope: !593)
!4050 = !DILocation(line: 5131, column: 1, scope: !593)
!4051 = !DILocalVariable(name: "a", arg: 1, scope: !598, file: !1, line: 5550, type: !367)
!4052 = !DILocation(line: 5550, column: 35, scope: !598)
!4053 = !DILocalVariable(name: "isoentpp", arg: 2, scope: !598, file: !1, line: 5550, type: !97)
!4054 = !DILocation(line: 5550, column: 54, scope: !598)
!4055 = !DILocalVariable(name: "name", scope: !598, file: !1, line: 5555, type: !4056)
!4056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2048, align: 8, elements: !4057)
!4057 = !{!4058}
!4058 = !DISubrange(count: 256)
!4059 = !DILocation(line: 5555, column: 7, scope: !598)
!4060 = !DILocalVariable(name: "iso9660", scope: !598, file: !1, line: 5559, type: !530)
!4061 = !DILocation(line: 5559, column: 18, scope: !598)
!4062 = !DILocation(line: 5559, column: 28, scope: !598)
!4063 = !DILocation(line: 5559, column: 31, scope: !598)
!4064 = !DILocalVariable(name: "dent", scope: !598, file: !1, line: 5560, type: !76)
!4065 = !DILocation(line: 5560, column: 17, scope: !598)
!4066 = !DILocalVariable(name: "isoent", scope: !598, file: !1, line: 5560, type: !76)
!4067 = !DILocation(line: 5560, column: 24, scope: !598)
!4068 = !DILocalVariable(name: "np", scope: !598, file: !1, line: 5560, type: !76)
!4069 = !DILocation(line: 5560, column: 33, scope: !598)
!4070 = !DILocalVariable(name: "f1", scope: !598, file: !1, line: 5561, type: !7)
!4071 = !DILocation(line: 5561, column: 18, scope: !598)
!4072 = !DILocalVariable(name: "f2", scope: !598, file: !1, line: 5561, type: !7)
!4073 = !DILocation(line: 5561, column: 23, scope: !598)
!4074 = !DILocalVariable(name: "fn", scope: !598, file: !1, line: 5562, type: !429)
!4075 = !DILocation(line: 5562, column: 14, scope: !598)
!4076 = !DILocalVariable(name: "p", scope: !598, file: !1, line: 5562, type: !429)
!4077 = !DILocation(line: 5562, column: 19, scope: !598)
!4078 = !DILocalVariable(name: "l", scope: !598, file: !1, line: 5563, type: !31)
!4079 = !DILocation(line: 5563, column: 6, scope: !598)
!4080 = !DILocation(line: 5565, column: 12, scope: !598)
!4081 = !DILocation(line: 5565, column: 11, scope: !598)
!4082 = !DILocation(line: 5565, column: 9, scope: !598)
!4083 = !DILocation(line: 5566, column: 9, scope: !598)
!4084 = !DILocation(line: 5566, column: 18, scope: !598)
!4085 = !DILocation(line: 5566, column: 26, scope: !598)
!4086 = !DILocation(line: 5566, column: 7, scope: !598)
!4087 = !DILocation(line: 5567, column: 6, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !598, file: !1, line: 5567, column: 6)
!4089 = !DILocation(line: 5567, column: 14, scope: !4088)
!4090 = !DILocation(line: 5567, column: 20, scope: !4088)
!4091 = !DILocation(line: 5567, column: 30, scope: !4088)
!4092 = !DILocation(line: 5567, column: 37, scope: !4088)
!4093 = !DILocation(line: 5567, column: 6, scope: !598)
!4094 = !DILocation(line: 5568, column: 12, scope: !4088)
!4095 = !DILocation(line: 5568, column: 20, scope: !4088)
!4096 = !DILocation(line: 5568, column: 26, scope: !4088)
!4097 = !DILocation(line: 5568, column: 36, scope: !4088)
!4098 = !DILocation(line: 5568, column: 10, scope: !4088)
!4099 = !DILocation(line: 5568, column: 6, scope: !4088)
!4100 = !DILocation(line: 5568, column: 3, scope: !4088)
!4101 = !DILocation(line: 5570, column: 10, scope: !4088)
!4102 = !DILocation(line: 5570, column: 6, scope: !4088)
!4103 = !DILocation(line: 5577, column: 6, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !598, file: !1, line: 5577, column: 6)
!4105 = !DILocation(line: 5578, column: 11, scope: !4104)
!4106 = !DILocation(line: 5578, column: 8, scope: !4104)
!4107 = !DILocation(line: 5578, column: 54, scope: !4104)
!4108 = !DILocation(line: 5579, column: 13, scope: !4104)
!4109 = !DILocation(line: 5579, column: 22, scope: !4104)
!4110 = !DILocation(line: 5579, column: 33, scope: !4104)
!4111 = !DILocation(line: 5579, column: 36, scope: !4104)
!4112 = !DILocation(line: 5579, column: 6, scope: !4104)
!4113 = !DILocation(line: 5579, column: 40, scope: !4104)
!4114 = !DILocation(line: 5577, column: 6, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !598, file: !1, discriminator: 1)
!4116 = !DILocation(line: 5580, column: 30, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !1, line: 5580, column: 7)
!4118 = distinct !DILexicalBlock(scope: !4104, file: !1, line: 5579, column: 46)
!4119 = !DILocation(line: 5580, column: 39, scope: !4117)
!4120 = !DILocation(line: 5580, column: 51, scope: !4117)
!4121 = !DILocation(line: 5580, column: 8, scope: !4117)
!4122 = !DILocation(line: 5580, column: 7, scope: !4118)
!4123 = !DILocation(line: 5582, column: 10, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4117, file: !1, line: 5580, column: 60)
!4125 = !DILocation(line: 5582, column: 19, scope: !4124)
!4126 = !DILocation(line: 5582, column: 31, scope: !4124)
!4127 = !DILocation(line: 5583, column: 8, scope: !4124)
!4128 = !DILocation(line: 5583, column: 16, scope: !4124)
!4129 = !DILocation(line: 5583, column: 22, scope: !4124)
!4130 = !DILocation(line: 5583, column: 31, scope: !4124)
!4131 = !DILocation(line: 5581, column: 26, scope: !4124)
!4132 = !DILocation(line: 5581, column: 9, scope: !4124)
!4133 = !DILocation(line: 5581, column: 7, scope: !4124)
!4134 = !DILocation(line: 5584, column: 4, scope: !4124)
!4135 = !DILocation(line: 5586, column: 3, scope: !4118)
!4136 = !DILocation(line: 5589, column: 2, scope: !598)
!4137 = !DILocation(line: 5590, column: 26, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !1, line: 5589, column: 11)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !1, line: 5589, column: 2)
!4140 = distinct !DILexicalBlock(scope: !598, file: !1, line: 5589, column: 2)
!4141 = !DILocation(line: 5590, column: 46, scope: !4138)
!4142 = !DILocation(line: 5590, column: 7, scope: !4138)
!4143 = !DILocation(line: 5590, column: 5, scope: !4138)
!4144 = !DILocation(line: 5591, column: 7, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 5591, column: 7)
!4146 = !DILocation(line: 5591, column: 9, scope: !4145)
!4147 = !DILocation(line: 5591, column: 7, scope: !4138)
!4148 = !DILocation(line: 5592, column: 7, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4145, file: !1, line: 5591, column: 15)
!4150 = !DILocation(line: 5593, column: 4, scope: !4149)
!4151 = !DILocation(line: 5595, column: 7, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 5595, column: 7)
!4153 = !DILocation(line: 5595, column: 9, scope: !4152)
!4154 = !DILocation(line: 5595, column: 7, scope: !4138)
!4155 = !DILocation(line: 5596, column: 23, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4152, file: !1, line: 5595, column: 14)
!4157 = !DILocation(line: 5596, column: 26, scope: !4156)
!4158 = !DILocation(line: 5596, column: 4, scope: !4156)
!4159 = !DILocation(line: 5599, column: 17, scope: !4156)
!4160 = !DILocation(line: 5599, column: 4, scope: !4156)
!4161 = !DILocation(line: 5600, column: 4, scope: !4156)
!4162 = !DILocation(line: 5603, column: 26, scope: !4138)
!4163 = !DILocation(line: 5603, column: 32, scope: !4138)
!4164 = !DILocation(line: 5603, column: 8, scope: !4138)
!4165 = !DILocation(line: 5603, column: 6, scope: !4138)
!4166 = !DILocation(line: 5604, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 5604, column: 7)
!4168 = !DILocation(line: 5604, column: 10, scope: !4167)
!4169 = !DILocation(line: 5604, column: 18, scope: !4167)
!4170 = !DILocation(line: 5604, column: 21, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4167, file: !1, discriminator: 1)
!4172 = !DILocation(line: 5604, column: 27, scope: !4171)
!4173 = !DILocation(line: 5604, column: 7, scope: !4171)
!4174 = !DILocation(line: 5605, column: 4, scope: !4167)
!4175 = !DILocation(line: 5608, column: 8, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 5608, column: 7)
!4177 = !DILocation(line: 5608, column: 12, scope: !4176)
!4178 = !DILocation(line: 5608, column: 7, scope: !4138)
!4179 = !DILocation(line: 5610, column: 23, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 5608, column: 17)
!4181 = !DILocation(line: 5610, column: 26, scope: !4180)
!4182 = !DILocation(line: 5613, column: 31, scope: !4180)
!4183 = !DILocation(line: 5613, column: 35, scope: !4180)
!4184 = !DILocation(line: 5613, column: 41, scope: !4180)
!4185 = !DILocation(line: 5613, column: 8, scope: !4180)
!4186 = !DILocation(line: 5614, column: 31, scope: !4180)
!4187 = !DILocation(line: 5614, column: 39, scope: !4180)
!4188 = !DILocation(line: 5614, column: 45, scope: !4180)
!4189 = !DILocation(line: 5614, column: 8, scope: !4180)
!4190 = !DILocation(line: 5610, column: 4, scope: !4180)
!4191 = !DILocation(line: 5615, column: 17, scope: !4180)
!4192 = !DILocation(line: 5615, column: 4, scope: !4180)
!4193 = !DILocation(line: 5616, column: 5, scope: !4180)
!4194 = !DILocation(line: 5616, column: 14, scope: !4180)
!4195 = !DILocation(line: 5617, column: 4, scope: !4180)
!4196 = !DILocation(line: 5619, column: 9, scope: !4138)
!4197 = !DILocation(line: 5619, column: 6, scope: !4138)
!4198 = !DILocation(line: 5620, column: 7, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 5620, column: 7)
!4200 = !DILocation(line: 5620, column: 13, scope: !4199)
!4201 = !DILocation(line: 5620, column: 7, scope: !4138)
!4202 = !DILocation(line: 5621, column: 6, scope: !4199)
!4203 = !DILocation(line: 5621, column: 4, scope: !4199)
!4204 = !DILocation(line: 5622, column: 10, scope: !4138)
!4205 = !DILocation(line: 5622, column: 8, scope: !4138)
!4206 = !DILocation(line: 5589, column: 2, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !4139, file: !1, discriminator: 1)
!4208 = !DILocation(line: 5624, column: 6, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !598, file: !1, line: 5624, column: 6)
!4210 = !DILocation(line: 5624, column: 9, scope: !4209)
!4211 = !DILocation(line: 5624, column: 6, scope: !598)
!4212 = !DILocation(line: 5628, column: 3, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 5624, column: 18)
!4214 = !DILocation(line: 5628, column: 10, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !4213, file: !1, discriminator: 1)
!4216 = !DILocation(line: 5628, column: 16, scope: !4215)
!4217 = !DILocation(line: 5628, column: 3, scope: !4215)
!4218 = !DILocalVariable(name: "vp", scope: !4219, file: !1, line: 5629, type: !76)
!4219 = distinct !DILexicalBlock(scope: !4213, file: !1, line: 5628, column: 25)
!4220 = !DILocation(line: 5629, column: 19, scope: !4219)
!4221 = !DILocalVariable(name: "as", scope: !4219, file: !1, line: 5630, type: !16)
!4222 = !DILocation(line: 5630, column: 26, scope: !4219)
!4223 = !DILocation(line: 5632, column: 4, scope: !4219)
!4224 = !DILocation(line: 5632, column: 4, scope: !4225)
!4225 = !DILexicalBlockFile(scope: !4226, file: !1, discriminator: 1)
!4226 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5632, column: 4)
!4227 = !DILocation(line: 5633, column: 25, scope: !4219)
!4228 = !DILocation(line: 5633, column: 28, scope: !4219)
!4229 = !DILocation(line: 5633, column: 33, scope: !4219)
!4230 = !DILocation(line: 5633, column: 31, scope: !4219)
!4231 = !DILocation(line: 5633, column: 37, scope: !4219)
!4232 = !DILocation(line: 5633, column: 35, scope: !4219)
!4233 = !DILocation(line: 5633, column: 4, scope: !4219)
!4234 = !DILocation(line: 5634, column: 16, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5634, column: 8)
!4236 = !DILocation(line: 5634, column: 22, scope: !4235)
!4237 = !DILocation(line: 5634, column: 11, scope: !4235)
!4238 = !DILocation(line: 5634, column: 8, scope: !4235)
!4239 = !DILocation(line: 5634, column: 26, scope: !4235)
!4240 = !DILocation(line: 5634, column: 8, scope: !4219)
!4241 = !DILocation(line: 5635, column: 13, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4235, file: !1, line: 5634, column: 34)
!4243 = !DILocation(line: 5635, column: 19, scope: !4242)
!4244 = !DILocation(line: 5635, column: 8, scope: !4242)
!4245 = !DILocation(line: 5635, column: 5, scope: !4242)
!4246 = !DILocation(line: 5635, column: 23, scope: !4242)
!4247 = !DILocation(line: 5636, column: 8, scope: !4242)
!4248 = !DILocation(line: 5636, column: 14, scope: !4242)
!4249 = !DILocation(line: 5637, column: 4, scope: !4242)
!4250 = !DILocation(line: 5638, column: 35, scope: !4219)
!4251 = !DILocation(line: 5638, column: 38, scope: !4219)
!4252 = !DILocation(line: 5638, column: 50, scope: !4219)
!4253 = !DILocation(line: 5638, column: 9, scope: !4219)
!4254 = !DILocation(line: 5638, column: 7, scope: !4219)
!4255 = !DILocation(line: 5639, column: 8, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5639, column: 8)
!4257 = !DILocation(line: 5639, column: 11, scope: !4256)
!4258 = !DILocation(line: 5639, column: 8, scope: !4219)
!4259 = !DILocation(line: 5640, column: 5, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 5639, column: 20)
!4261 = !DILocation(line: 5641, column: 24, scope: !4260)
!4262 = !DILocation(line: 5641, column: 27, scope: !4260)
!4263 = !DILocation(line: 5641, column: 5, scope: !4260)
!4264 = !DILocation(line: 5643, column: 18, scope: !4260)
!4265 = !DILocation(line: 5643, column: 5, scope: !4260)
!4266 = !DILocation(line: 5644, column: 6, scope: !4260)
!4267 = !DILocation(line: 5644, column: 15, scope: !4260)
!4268 = !DILocation(line: 5645, column: 5, scope: !4260)
!4269 = !DILocation(line: 5647, column: 4, scope: !4219)
!4270 = !DILocation(line: 5649, column: 8, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5649, column: 8)
!4272 = !DILocation(line: 5649, column: 12, scope: !4271)
!4273 = !DILocation(line: 5649, column: 18, scope: !4271)
!4274 = !DILocation(line: 5649, column: 27, scope: !4271)
!4275 = !DILocation(line: 5649, column: 36, scope: !4271)
!4276 = !DILocation(line: 5649, column: 25, scope: !4271)
!4277 = !DILocation(line: 5649, column: 8, scope: !4219)
!4278 = !DILocation(line: 5650, column: 27, scope: !4271)
!4279 = !DILocation(line: 5650, column: 31, scope: !4271)
!4280 = !DILocation(line: 5650, column: 37, scope: !4271)
!4281 = !DILocation(line: 5650, column: 5, scope: !4271)
!4282 = !DILocation(line: 5650, column: 14, scope: !4271)
!4283 = !DILocation(line: 5650, column: 25, scope: !4271)
!4284 = !DILocation(line: 5651, column: 26, scope: !4219)
!4285 = !DILocation(line: 5651, column: 32, scope: !4219)
!4286 = !DILocation(line: 5651, column: 4, scope: !4219)
!4287 = !DILocation(line: 5652, column: 9, scope: !4219)
!4288 = !DILocation(line: 5652, column: 7, scope: !4219)
!4289 = !DILocation(line: 5654, column: 10, scope: !4219)
!4290 = !DILocation(line: 5654, column: 7, scope: !4219)
!4291 = !DILocation(line: 5655, column: 8, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5655, column: 8)
!4293 = !DILocation(line: 5655, column: 14, scope: !4292)
!4294 = !DILocation(line: 5655, column: 8, scope: !4219)
!4295 = !DILocation(line: 5656, column: 7, scope: !4292)
!4296 = !DILocation(line: 5656, column: 5, scope: !4292)
!4297 = !DILocation(line: 5657, column: 27, scope: !4219)
!4298 = !DILocation(line: 5657, column: 47, scope: !4219)
!4299 = !DILocation(line: 5657, column: 8, scope: !4219)
!4300 = !DILocation(line: 5657, column: 6, scope: !4219)
!4301 = !DILocation(line: 5658, column: 8, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4219, file: !1, line: 5658, column: 8)
!4303 = !DILocation(line: 5658, column: 10, scope: !4302)
!4304 = !DILocation(line: 5658, column: 8, scope: !4219)
!4305 = !DILocation(line: 5659, column: 5, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4302, file: !1, line: 5658, column: 15)
!4307 = !DILocation(line: 5660, column: 24, scope: !4306)
!4308 = !DILocation(line: 5660, column: 27, scope: !4306)
!4309 = !DILocation(line: 5660, column: 5, scope: !4306)
!4310 = !DILocation(line: 5663, column: 18, scope: !4306)
!4311 = !DILocation(line: 5663, column: 5, scope: !4306)
!4312 = !DILocation(line: 5664, column: 6, scope: !4306)
!4313 = !DILocation(line: 5664, column: 15, scope: !4306)
!4314 = !DILocation(line: 5665, column: 5, scope: !4306)
!4315 = !DILocation(line: 5667, column: 11, scope: !4219)
!4316 = !DILocation(line: 5667, column: 9, scope: !4219)
!4317 = !DILocation(line: 5628, column: 3, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4213, file: !1, discriminator: 2)
!4319 = !DILocation(line: 5672, column: 25, scope: !4213)
!4320 = !DILocation(line: 5672, column: 3, scope: !4213)
!4321 = !DILocation(line: 5672, column: 12, scope: !4213)
!4322 = !DILocation(line: 5672, column: 23, scope: !4213)
!4323 = !DILocation(line: 5673, column: 3, scope: !4213)
!4324 = !DILocation(line: 5674, column: 27, scope: !4213)
!4325 = !DILocation(line: 5674, column: 36, scope: !4213)
!4326 = !DILocation(line: 5675, column: 7, scope: !4213)
!4327 = !DILocation(line: 5676, column: 7, scope: !4213)
!4328 = !DILocation(line: 5675, column: 48, scope: !4213)
!4329 = !DILocation(line: 5676, column: 47, scope: !4213)
!4330 = !DILocation(line: 5674, column: 3, scope: !4213)
!4331 = !DILocation(line: 5677, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4213, file: !1, line: 5677, column: 7)
!4333 = !DILocation(line: 5678, column: 7, scope: !4332)
!4334 = !DILocation(line: 5677, column: 48, scope: !4332)
!4335 = !DILocation(line: 5678, column: 47, scope: !4332)
!4336 = !DILocation(line: 5677, column: 7, scope: !4213)
!4337 = !DILocation(line: 5679, column: 4, scope: !4332)
!4338 = !DILocation(line: 5679, column: 13, scope: !4332)
!4339 = !DILocation(line: 5679, column: 24, scope: !4332)
!4340 = !DILocation(line: 5679, column: 29, scope: !4332)
!4341 = !DILocation(line: 5681, column: 8, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !1, line: 5681, column: 8)
!4343 = distinct !DILexicalBlock(scope: !4332, file: !1, line: 5680, column: 8)
!4344 = !DILocation(line: 5681, column: 49, scope: !4342)
!4345 = !DILocation(line: 5681, column: 8, scope: !4343)
!4346 = !DILocation(line: 5682, column: 5, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4342, file: !1, line: 5681, column: 54)
!4348 = !DILocation(line: 5684, column: 30, scope: !4347)
!4349 = !DILocation(line: 5684, column: 39, scope: !4347)
!4350 = !DILocation(line: 5684, column: 5, scope: !4347)
!4351 = !DILocation(line: 5685, column: 4, scope: !4347)
!4352 = !DILocation(line: 5686, column: 28, scope: !4343)
!4353 = !DILocation(line: 5686, column: 37, scope: !4343)
!4354 = !DILocation(line: 5687, column: 10, scope: !4343)
!4355 = !DILocation(line: 5687, column: 16, scope: !4343)
!4356 = !DILocation(line: 5687, column: 22, scope: !4343)
!4357 = !DILocation(line: 5686, column: 4, scope: !4343)
!4358 = !DILocation(line: 5690, column: 30, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4213, file: !1, line: 5690, column: 7)
!4360 = !DILocation(line: 5690, column: 36, scope: !4359)
!4361 = !DILocation(line: 5690, column: 8, scope: !4359)
!4362 = !DILocation(line: 5690, column: 7, scope: !4213)
!4363 = !DILocation(line: 5692, column: 10, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4359, file: !1, line: 5690, column: 45)
!4365 = !DILocation(line: 5692, column: 16, scope: !4364)
!4366 = !DILocation(line: 5692, column: 25, scope: !4364)
!4367 = !DILocation(line: 5692, column: 33, scope: !4364)
!4368 = !DILocation(line: 5692, column: 39, scope: !4364)
!4369 = !DILocation(line: 5692, column: 48, scope: !4364)
!4370 = !DILocation(line: 5691, column: 26, scope: !4364)
!4371 = !DILocation(line: 5691, column: 9, scope: !4364)
!4372 = !DILocation(line: 5691, column: 7, scope: !4364)
!4373 = !DILocation(line: 5693, column: 4, scope: !4364)
!4374 = !DILocation(line: 5695, column: 3, scope: !4213)
!4375 = !DILocation(line: 5624, column: 12, scope: !4376)
!4376 = !DILexicalBlockFile(scope: !4209, file: !1, discriminator: 1)
!4377 = !DILocation(line: 5703, column: 7, scope: !598)
!4378 = !DILocation(line: 5703, column: 11, scope: !598)
!4379 = !DILocation(line: 5703, column: 5, scope: !598)
!4380 = !DILocation(line: 5704, column: 7, scope: !598)
!4381 = !DILocation(line: 5704, column: 15, scope: !598)
!4382 = !DILocation(line: 5704, column: 5, scope: !598)
!4383 = !DILocation(line: 5708, column: 29, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !598, file: !1, line: 5708, column: 6)
!4385 = !DILocation(line: 5708, column: 33, scope: !4384)
!4386 = !DILocation(line: 5708, column: 6, scope: !4384)
!4387 = !DILocation(line: 5709, column: 29, scope: !4384)
!4388 = !DILocation(line: 5709, column: 33, scope: !4384)
!4389 = !DILocation(line: 5709, column: 6, scope: !4384)
!4390 = !DILocation(line: 5708, column: 40, scope: !4384)
!4391 = !DILocation(line: 5708, column: 6, scope: !598)
!4392 = !DILocation(line: 5710, column: 22, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4384, file: !1, line: 5709, column: 41)
!4394 = !DILocation(line: 5710, column: 25, scope: !4393)
!4395 = !DILocation(line: 5713, column: 30, scope: !4393)
!4396 = !DILocation(line: 5713, column: 34, scope: !4393)
!4397 = !DILocation(line: 5713, column: 7, scope: !4393)
!4398 = !DILocation(line: 5710, column: 3, scope: !4393)
!4399 = !DILocation(line: 5714, column: 16, scope: !4393)
!4400 = !DILocation(line: 5714, column: 3, scope: !4393)
!4401 = !DILocation(line: 5715, column: 4, scope: !4393)
!4402 = !DILocation(line: 5715, column: 13, scope: !4393)
!4403 = !DILocation(line: 5716, column: 3, scope: !4393)
!4404 = !DILocation(line: 5720, column: 13, scope: !598)
!4405 = !DILocation(line: 5720, column: 2, scope: !598)
!4406 = !DILocation(line: 5720, column: 6, scope: !598)
!4407 = !DILocation(line: 5720, column: 11, scope: !598)
!4408 = !DILocation(line: 5721, column: 17, scope: !598)
!4409 = !DILocation(line: 5721, column: 2, scope: !598)
!4410 = !DILocation(line: 5721, column: 10, scope: !598)
!4411 = !DILocation(line: 5721, column: 15, scope: !598)
!4412 = !DILocation(line: 5722, column: 2, scope: !598)
!4413 = !DILocation(line: 5722, column: 6, scope: !598)
!4414 = !DILocation(line: 5722, column: 14, scope: !598)
!4415 = !DILocation(line: 5724, column: 15, scope: !598)
!4416 = !DILocation(line: 5724, column: 2, scope: !598)
!4417 = !DILocation(line: 5725, column: 14, scope: !598)
!4418 = !DILocation(line: 5725, column: 3, scope: !598)
!4419 = !DILocation(line: 5725, column: 12, scope: !598)
!4420 = !DILocation(line: 5726, column: 2, scope: !598)
!4421 = !DILocation(line: 5727, column: 1, scope: !598)
!4422 = !DILocalVariable(name: "a", arg: 1, scope: !613, file: !1, line: 4998, type: !367)
!4423 = !DILocation(line: 4998, column: 49, scope: !613)
!4424 = !DILocalVariable(name: "file", arg: 2, scope: !613, file: !1, line: 4998, type: !7)
!4425 = !DILocation(line: 4998, column: 68, scope: !613)
!4426 = !DILocalVariable(name: "iso9660", scope: !613, file: !1, line: 5000, type: !530)
!4427 = !DILocation(line: 5000, column: 18, scope: !613)
!4428 = !DILocation(line: 5000, column: 28, scope: !613)
!4429 = !DILocation(line: 5000, column: 31, scope: !613)
!4430 = !DILocalVariable(name: "hl", scope: !613, file: !1, line: 5001, type: !533)
!4431 = !DILocation(line: 5001, column: 19, scope: !613)
!4432 = !DILocalVariable(name: "pathname", scope: !613, file: !1, line: 5002, type: !429)
!4433 = !DILocation(line: 5002, column: 14, scope: !613)
!4434 = !DILocation(line: 5004, column: 26, scope: !613)
!4435 = !DILocation(line: 5004, column: 32, scope: !613)
!4436 = !DILocation(line: 5004, column: 2, scope: !613)
!4437 = !DILocation(line: 5005, column: 36, scope: !613)
!4438 = !DILocation(line: 5005, column: 42, scope: !613)
!4439 = !DILocation(line: 5005, column: 13, scope: !613)
!4440 = !DILocation(line: 5005, column: 11, scope: !613)
!4441 = !DILocation(line: 5006, column: 6, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !613, file: !1, line: 5006, column: 6)
!4443 = !DILocation(line: 5006, column: 15, scope: !4442)
!4444 = !DILocation(line: 5006, column: 6, scope: !613)
!4445 = !DILocation(line: 5008, column: 8, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 5006, column: 24)
!4447 = !DILocation(line: 5008, column: 6, scope: !4446)
!4448 = !DILocation(line: 5009, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 5009, column: 7)
!4450 = !DILocation(line: 5009, column: 10, scope: !4449)
!4451 = !DILocation(line: 5009, column: 7, scope: !4446)
!4452 = !DILocation(line: 5010, column: 23, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !1, line: 5009, column: 19)
!4454 = !DILocation(line: 5010, column: 26, scope: !4453)
!4455 = !DILocation(line: 5010, column: 4, scope: !4453)
!4456 = !DILocation(line: 5012, column: 4, scope: !4453)
!4457 = !DILocation(line: 5014, column: 3, scope: !4446)
!4458 = !DILocation(line: 5014, column: 7, scope: !4446)
!4459 = !DILocation(line: 5014, column: 13, scope: !4446)
!4460 = !DILocation(line: 5016, column: 3, scope: !4446)
!4461 = !DILocation(line: 5016, column: 9, scope: !4446)
!4462 = !DILocation(line: 5016, column: 16, scope: !4446)
!4463 = !DILocation(line: 5017, column: 25, scope: !4446)
!4464 = !DILocation(line: 5017, column: 3, scope: !4446)
!4465 = !DILocation(line: 5017, column: 7, scope: !4446)
!4466 = !DILocation(line: 5017, column: 17, scope: !4446)
!4467 = !DILocation(line: 5017, column: 23, scope: !4446)
!4468 = !DILocation(line: 5018, column: 26, scope: !4446)
!4469 = !DILocation(line: 5018, column: 32, scope: !4446)
!4470 = !DILocation(line: 5018, column: 3, scope: !4446)
!4471 = !DILocation(line: 5018, column: 7, scope: !4446)
!4472 = !DILocation(line: 5018, column: 17, scope: !4446)
!4473 = !DILocation(line: 5018, column: 22, scope: !4446)
!4474 = !DILocation(line: 5019, column: 35, scope: !4446)
!4475 = !DILocation(line: 5019, column: 44, scope: !4446)
!4476 = !DILocation(line: 5020, column: 33, scope: !4446)
!4477 = !DILocation(line: 5020, column: 7, scope: !4446)
!4478 = !DILocation(line: 5019, column: 3, scope: !4446)
!4479 = !DILocation(line: 5021, column: 2, scope: !4446)
!4480 = !DILocation(line: 5023, column: 9, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 5021, column: 9)
!4482 = !DILocation(line: 5023, column: 18, scope: !4481)
!4483 = !DILocation(line: 5023, column: 36, scope: !4481)
!4484 = !DILocation(line: 5022, column: 27, scope: !4481)
!4485 = !DILocation(line: 5022, column: 8, scope: !4481)
!4486 = !DILocation(line: 5022, column: 6, scope: !4481)
!4487 = !DILocation(line: 5024, column: 7, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4481, file: !1, line: 5024, column: 7)
!4489 = !DILocation(line: 5024, column: 10, scope: !4488)
!4490 = !DILocation(line: 5024, column: 7, scope: !4481)
!4491 = !DILocation(line: 5026, column: 4, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4488, file: !1, line: 5024, column: 19)
!4493 = !DILocation(line: 5026, column: 10, scope: !4492)
!4494 = !DILocation(line: 5026, column: 17, scope: !4492)
!4495 = !DILocation(line: 5027, column: 26, scope: !4492)
!4496 = !DILocation(line: 5027, column: 5, scope: !4492)
!4497 = !DILocation(line: 5027, column: 9, scope: !4492)
!4498 = !DILocation(line: 5027, column: 19, scope: !4492)
!4499 = !DILocation(line: 5027, column: 24, scope: !4492)
!4500 = !DILocation(line: 5028, column: 27, scope: !4492)
!4501 = !DILocation(line: 5028, column: 33, scope: !4492)
!4502 = !DILocation(line: 5028, column: 4, scope: !4492)
!4503 = !DILocation(line: 5028, column: 8, scope: !4492)
!4504 = !DILocation(line: 5028, column: 18, scope: !4492)
!4505 = !DILocation(line: 5028, column: 23, scope: !4492)
!4506 = !DILocation(line: 5029, column: 4, scope: !4492)
!4507 = !DILocation(line: 5029, column: 8, scope: !4492)
!4508 = !DILocation(line: 5029, column: 13, scope: !4492)
!4509 = !DILocation(line: 5030, column: 3, scope: !4492)
!4510 = !DILocation(line: 5031, column: 28, scope: !4481)
!4511 = !DILocation(line: 5031, column: 34, scope: !4481)
!4512 = !DILocation(line: 5031, column: 3, scope: !4481)
!4513 = !DILocation(line: 5034, column: 2, scope: !613)
!4514 = !DILocation(line: 5035, column: 1, scope: !613)
!4515 = !DILocalVariable(name: "a", arg: 1, scope: !614, file: !1, line: 7416, type: !367)
!4516 = !DILocation(line: 7416, column: 35, scope: !614)
!4517 = !DILocalVariable(name: "file", arg: 2, scope: !614, file: !1, line: 7416, type: !7)
!4518 = !DILocation(line: 7416, column: 55, scope: !614)
!4519 = !DILocalVariable(name: "iso9660", scope: !614, file: !1, line: 7418, type: !530)
!4520 = !DILocation(line: 7418, column: 18, scope: !614)
!4521 = !DILocation(line: 7418, column: 28, scope: !614)
!4522 = !DILocation(line: 7418, column: 31, scope: !614)
!4523 = !DILocalVariable(name: "tsize", scope: !614, file: !1, line: 7420, type: !172)
!4524 = !DILocation(line: 7420, column: 11, scope: !614)
!4525 = !DILocalVariable(name: "_ceil", scope: !614, file: !1, line: 7421, type: !23)
!4526 = !DILocation(line: 7421, column: 9, scope: !614)
!4527 = !DILocalVariable(name: "bpsize", scope: !614, file: !1, line: 7421, type: !23)
!4528 = !DILocation(line: 7421, column: 16, scope: !614)
!4529 = !DILocalVariable(name: "r", scope: !614, file: !1, line: 7422, type: !31)
!4530 = !DILocation(line: 7422, column: 6, scope: !614)
!4531 = !DILocation(line: 7425, column: 2, scope: !614)
!4532 = !DILocation(line: 7425, column: 11, scope: !614)
!4533 = !DILocation(line: 7425, column: 18, scope: !614)
!4534 = !DILocation(line: 7425, column: 31, scope: !614)
!4535 = !DILocation(line: 7426, column: 2, scope: !614)
!4536 = !DILocation(line: 7426, column: 11, scope: !614)
!4537 = !DILocation(line: 7426, column: 18, scope: !614)
!4538 = !DILocation(line: 7426, column: 25, scope: !614)
!4539 = !DILocation(line: 7428, column: 7, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7428, column: 6)
!4541 = !DILocation(line: 7428, column: 16, scope: !4540)
!4542 = !DILocation(line: 7428, column: 20, scope: !4540)
!4543 = !DILocation(line: 7428, column: 23, scope: !4540)
!4544 = !DILocation(line: 7428, column: 27, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !4540, file: !1, discriminator: 1)
!4546 = !DILocation(line: 7428, column: 36, scope: !4545)
!4547 = !DILocation(line: 7428, column: 40, scope: !4545)
!4548 = !DILocation(line: 7428, column: 6, scope: !4545)
!4549 = !DILocation(line: 7429, column: 3, scope: !4540)
!4550 = !DILocation(line: 7431, column: 25, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7431, column: 6)
!4552 = !DILocation(line: 7431, column: 31, scope: !4551)
!4553 = !DILocation(line: 7431, column: 6, scope: !4551)
!4554 = !DILocation(line: 7431, column: 38, scope: !4551)
!4555 = !DILocation(line: 7431, column: 44, scope: !4551)
!4556 = !DILocation(line: 7432, column: 25, scope: !4551)
!4557 = !DILocation(line: 7432, column: 31, scope: !4551)
!4558 = !DILocation(line: 7432, column: 6, scope: !4551)
!4559 = !DILocation(line: 7432, column: 38, scope: !4551)
!4560 = !DILocation(line: 7431, column: 6, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !614, file: !1, discriminator: 1)
!4562 = !DILocation(line: 7434, column: 3, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4551, file: !1, line: 7432, column: 59)
!4564 = !DILocation(line: 7434, column: 12, scope: !4563)
!4565 = !DILocation(line: 7434, column: 19, scope: !4563)
!4566 = !DILocation(line: 7434, column: 32, scope: !4563)
!4567 = !DILocation(line: 7435, column: 3, scope: !4563)
!4568 = !DILocation(line: 7435, column: 12, scope: !4563)
!4569 = !DILocation(line: 7435, column: 19, scope: !4563)
!4570 = !DILocation(line: 7435, column: 29, scope: !4563)
!4571 = !DILocation(line: 7436, column: 2, scope: !4563)
!4572 = !DILocation(line: 7437, column: 7, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7437, column: 6)
!4574 = !DILocation(line: 7437, column: 16, scope: !4573)
!4575 = !DILocation(line: 7437, column: 23, scope: !4573)
!4576 = !DILocation(line: 7437, column: 6, scope: !614)
!4577 = !DILocation(line: 7438, column: 3, scope: !4573)
!4578 = !DILocation(line: 7445, column: 25, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7445, column: 6)
!4580 = !DILocation(line: 7445, column: 31, scope: !4579)
!4581 = !DILocation(line: 7445, column: 6, scope: !4579)
!4582 = !DILocation(line: 7445, column: 38, scope: !4579)
!4583 = !DILocation(line: 7445, column: 6, scope: !614)
!4584 = !DILocation(line: 7446, column: 3, scope: !4579)
!4585 = !DILocation(line: 7449, column: 26, scope: !614)
!4586 = !DILocation(line: 7449, column: 6, scope: !614)
!4587 = !DILocation(line: 7449, column: 4, scope: !614)
!4588 = !DILocation(line: 7450, column: 6, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7450, column: 6)
!4590 = !DILocation(line: 7450, column: 8, scope: !4589)
!4591 = !DILocation(line: 7450, column: 6, scope: !614)
!4592 = !DILocation(line: 7451, column: 3, scope: !4589)
!4593 = !DILocation(line: 7454, column: 2, scope: !614)
!4594 = !DILocation(line: 7454, column: 8, scope: !614)
!4595 = !DILocation(line: 7454, column: 15, scope: !614)
!4596 = !DILocation(line: 7454, column: 27, scope: !614)
!4597 = !DILocation(line: 7455, column: 2, scope: !614)
!4598 = !DILocation(line: 7455, column: 8, scope: !614)
!4599 = !DILocation(line: 7455, column: 15, scope: !614)
!4600 = !DILocation(line: 7455, column: 23, scope: !614)
!4601 = !DILocation(line: 7457, column: 32, scope: !614)
!4602 = !DILocation(line: 7457, column: 38, scope: !614)
!4603 = !DILocation(line: 7457, column: 13, scope: !614)
!4604 = !DILocation(line: 7457, column: 3, scope: !614)
!4605 = !DILocation(line: 7456, column: 2, scope: !614)
!4606 = !DILocation(line: 7456, column: 8, scope: !614)
!4607 = !DILocation(line: 7456, column: 15, scope: !614)
!4608 = !DILocation(line: 7456, column: 33, scope: !614)
!4609 = !DILocation(line: 7460, column: 11, scope: !614)
!4610 = !DILocation(line: 7460, column: 17, scope: !614)
!4611 = !DILocation(line: 7460, column: 24, scope: !614)
!4612 = !DILocation(line: 7460, column: 42, scope: !614)
!4613 = !DILocation(line: 7460, column: 58, scope: !614)
!4614 = !DILocation(line: 7461, column: 6, scope: !614)
!4615 = !DILocation(line: 7461, column: 12, scope: !614)
!4616 = !DILocation(line: 7461, column: 19, scope: !614)
!4617 = !DILocation(line: 7461, column: 3, scope: !614)
!4618 = !DILocation(line: 7460, column: 8, scope: !614)
!4619 = !DILocation(line: 7462, column: 44, scope: !614)
!4620 = !DILocation(line: 7462, column: 39, scope: !614)
!4621 = !DILocation(line: 7462, column: 50, scope: !614)
!4622 = !DILocation(line: 7462, column: 2, scope: !614)
!4623 = !DILocation(line: 7462, column: 11, scope: !614)
!4624 = !DILocation(line: 7462, column: 18, scope: !614)
!4625 = !DILocation(line: 7462, column: 37, scope: !614)
!4626 = !DILocation(line: 7463, column: 2, scope: !614)
!4627 = !DILocation(line: 7463, column: 11, scope: !614)
!4628 = !DILocation(line: 7463, column: 18, scope: !614)
!4629 = !DILocation(line: 7463, column: 37, scope: !614)
!4630 = !DILocation(line: 7466, column: 11, scope: !614)
!4631 = !DILocation(line: 7466, column: 20, scope: !614)
!4632 = !DILocation(line: 7466, column: 27, scope: !614)
!4633 = !DILocation(line: 7466, column: 46, scope: !614)
!4634 = !DILocation(line: 7466, column: 9, scope: !614)
!4635 = !DILocation(line: 7468, column: 6, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7468, column: 6)
!4637 = !DILocation(line: 7468, column: 15, scope: !4636)
!4638 = !DILocation(line: 7468, column: 22, scope: !4636)
!4639 = !DILocation(line: 7468, column: 49, scope: !4636)
!4640 = !DILocation(line: 7468, column: 47, scope: !4636)
!4641 = !DILocation(line: 7468, column: 6, scope: !614)
!4642 = !DILocation(line: 7469, column: 8, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4636, file: !1, line: 7468, column: 57)
!4644 = !DILocation(line: 7469, column: 17, scope: !4643)
!4645 = !DILocation(line: 7469, column: 24, scope: !4643)
!4646 = !DILocation(line: 7469, column: 3, scope: !4643)
!4647 = !DILocation(line: 7470, column: 43, scope: !4643)
!4648 = !DILocation(line: 7470, column: 36, scope: !4643)
!4649 = !DILocation(line: 7470, column: 3, scope: !4643)
!4650 = !DILocation(line: 7470, column: 12, scope: !4643)
!4651 = !DILocation(line: 7470, column: 19, scope: !4643)
!4652 = !DILocation(line: 7470, column: 34, scope: !4643)
!4653 = !DILocation(line: 7471, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4643, file: !1, line: 7471, column: 7)
!4655 = !DILocation(line: 7471, column: 16, scope: !4654)
!4656 = !DILocation(line: 7471, column: 23, scope: !4654)
!4657 = !DILocation(line: 7471, column: 38, scope: !4654)
!4658 = !DILocation(line: 7471, column: 7, scope: !4643)
!4659 = !DILocation(line: 7472, column: 23, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4654, file: !1, line: 7471, column: 47)
!4661 = !DILocation(line: 7472, column: 26, scope: !4660)
!4662 = !DILocation(line: 7472, column: 4, scope: !4660)
!4663 = !DILocation(line: 7474, column: 4, scope: !4660)
!4664 = !DILocation(line: 7476, column: 46, scope: !4643)
!4665 = !DILocation(line: 7476, column: 3, scope: !4643)
!4666 = !DILocation(line: 7476, column: 12, scope: !4643)
!4667 = !DILocation(line: 7476, column: 19, scope: !4643)
!4668 = !DILocation(line: 7476, column: 44, scope: !4643)
!4669 = !DILocation(line: 7477, column: 2, scope: !4643)
!4670 = !DILocation(line: 7484, column: 27, scope: !614)
!4671 = !DILocation(line: 7484, column: 25, scope: !614)
!4672 = !DILocation(line: 7484, column: 8, scope: !614)
!4673 = !DILocation(line: 7485, column: 17, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !614, file: !1, line: 7485, column: 6)
!4675 = !DILocation(line: 7485, column: 28, scope: !4674)
!4676 = !DILocation(line: 7485, column: 6, scope: !4674)
!4677 = !DILocation(line: 7485, column: 35, scope: !4674)
!4678 = !DILocation(line: 7485, column: 6, scope: !614)
!4679 = !DILocation(line: 7486, column: 3, scope: !4674)
!4680 = !DILocation(line: 7491, column: 20, scope: !614)
!4681 = !DILocation(line: 7491, column: 29, scope: !614)
!4682 = !DILocation(line: 7491, column: 36, scope: !614)
!4683 = !DILocation(line: 7491, column: 18, scope: !614)
!4684 = !DILocation(line: 7492, column: 13, scope: !614)
!4685 = !DILocation(line: 7492, column: 3, scope: !614)
!4686 = !DILocation(line: 7491, column: 2, scope: !614)
!4687 = !DILocation(line: 7493, column: 30, scope: !614)
!4688 = !DILocation(line: 7493, column: 36, scope: !614)
!4689 = !DILocation(line: 7493, column: 43, scope: !614)
!4690 = !DILocation(line: 7493, column: 2, scope: !614)
!4691 = !DILocation(line: 7493, column: 11, scope: !614)
!4692 = !DILocation(line: 7493, column: 18, scope: !614)
!4693 = !DILocation(line: 7493, column: 28, scope: !614)
!4694 = !DILocation(line: 7494, column: 2, scope: !614)
!4695 = !DILocation(line: 7494, column: 11, scope: !614)
!4696 = !DILocation(line: 7494, column: 18, scope: !614)
!4697 = !DILocation(line: 7494, column: 25, scope: !614)
!4698 = !DILocation(line: 7495, column: 2, scope: !614)
!4699 = !DILocation(line: 7495, column: 11, scope: !614)
!4700 = !DILocation(line: 7495, column: 18, scope: !614)
!4701 = !DILocation(line: 7495, column: 26, scope: !614)
!4702 = !DILocation(line: 7496, column: 33, scope: !614)
!4703 = !DILocation(line: 7496, column: 2, scope: !614)
!4704 = !DILocation(line: 7496, column: 11, scope: !614)
!4705 = !DILocation(line: 7496, column: 18, scope: !614)
!4706 = !DILocation(line: 7496, column: 31, scope: !614)
!4707 = !DILocation(line: 7497, column: 31, scope: !614)
!4708 = !DILocation(line: 7497, column: 2, scope: !614)
!4709 = !DILocation(line: 7497, column: 11, scope: !614)
!4710 = !DILocation(line: 7497, column: 18, scope: !614)
!4711 = !DILocation(line: 7497, column: 29, scope: !614)
!4712 = !DILocation(line: 7498, column: 41, scope: !614)
!4713 = !DILocation(line: 7498, column: 2, scope: !614)
!4714 = !DILocation(line: 7498, column: 11, scope: !614)
!4715 = !DILocation(line: 7498, column: 21, scope: !614)
!4716 = !DILocation(line: 7498, column: 34, scope: !614)
!4717 = !DILocation(line: 7498, column: 39, scope: !614)
!4718 = !DILocation(line: 7501, column: 2, scope: !614)
!4719 = !DILocation(line: 7502, column: 1, scope: !614)
!4720 = !DILocalVariable(name: "n1", arg: 1, scope: !596, file: !1, line: 5221, type: !114)
!4721 = !DILocation(line: 5221, column: 47, scope: !596)
!4722 = !DILocalVariable(name: "n2", arg: 2, scope: !596, file: !1, line: 5222, type: !114)
!4723 = !DILocation(line: 5222, column: 35, scope: !596)
!4724 = !DILocalVariable(name: "e1", scope: !596, file: !1, line: 5224, type: !531)
!4725 = !DILocation(line: 5224, column: 23, scope: !596)
!4726 = !DILocation(line: 5224, column: 51, scope: !596)
!4727 = !DILocation(line: 5224, column: 28, scope: !596)
!4728 = !DILocalVariable(name: "e2", scope: !596, file: !1, line: 5225, type: !531)
!4729 = !DILocation(line: 5225, column: 23, scope: !596)
!4730 = !DILocation(line: 5225, column: 51, scope: !596)
!4731 = !DILocation(line: 5225, column: 28, scope: !596)
!4732 = !DILocation(line: 5227, column: 17, scope: !596)
!4733 = !DILocation(line: 5227, column: 21, scope: !596)
!4734 = !DILocation(line: 5227, column: 27, scope: !596)
!4735 = !DILocation(line: 5227, column: 36, scope: !596)
!4736 = !DILocation(line: 5227, column: 39, scope: !596)
!4737 = !DILocation(line: 5227, column: 43, scope: !596)
!4738 = !DILocation(line: 5227, column: 49, scope: !596)
!4739 = !DILocation(line: 5227, column: 58, scope: !596)
!4740 = !DILocation(line: 5227, column: 10, scope: !596)
!4741 = !DILocation(line: 5227, column: 2, scope: !596)
!4742 = !DILocalVariable(name: "n", arg: 1, scope: !597, file: !1, line: 5231, type: !114)
!4743 = !DILocation(line: 5231, column: 46, scope: !597)
!4744 = !DILocalVariable(name: "key", arg: 2, scope: !597, file: !1, line: 5231, type: !122)
!4745 = !DILocation(line: 5231, column: 61, scope: !597)
!4746 = !DILocalVariable(name: "e", scope: !597, file: !1, line: 5233, type: !531)
!4747 = !DILocation(line: 5233, column: 23, scope: !597)
!4748 = !DILocation(line: 5233, column: 50, scope: !597)
!4749 = !DILocation(line: 5233, column: 27, scope: !597)
!4750 = !DILocation(line: 5235, column: 17, scope: !597)
!4751 = !DILocation(line: 5235, column: 20, scope: !597)
!4752 = !DILocation(line: 5235, column: 26, scope: !597)
!4753 = !DILocation(line: 5235, column: 35, scope: !597)
!4754 = !DILocation(line: 5235, column: 52, scope: !597)
!4755 = !DILocation(line: 5235, column: 10, scope: !597)
!4756 = !DILocation(line: 5235, column: 2, scope: !597)
!4757 = !DILocalVariable(name: "parent", arg: 1, scope: !601, file: !1, line: 5264, type: !76)
!4758 = !DILocation(line: 5264, column: 38, scope: !601)
!4759 = !DILocalVariable(name: "child", arg: 2, scope: !601, file: !1, line: 5264, type: !76)
!4760 = !DILocation(line: 5264, column: 61, scope: !601)
!4761 = !DILocation(line: 5268, column: 8, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !601, file: !1, line: 5267, column: 6)
!4763 = !DILocation(line: 5268, column: 16, scope: !4762)
!4764 = !DILocation(line: 5268, column: 51, scope: !4762)
!4765 = !DILocation(line: 5268, column: 25, scope: !4762)
!4766 = !DILocation(line: 5267, column: 7, scope: !4762)
!4767 = !DILocation(line: 5267, column: 6, scope: !601)
!4768 = !DILocation(line: 5269, column: 3, scope: !4762)
!4769 = !DILocation(line: 5270, column: 2, scope: !601)
!4770 = !DILocation(line: 5270, column: 9, scope: !601)
!4771 = !DILocation(line: 5270, column: 16, scope: !601)
!4772 = !DILocation(line: 5271, column: 27, scope: !601)
!4773 = !DILocation(line: 5271, column: 3, scope: !601)
!4774 = !DILocation(line: 5271, column: 11, scope: !601)
!4775 = !DILocation(line: 5271, column: 20, scope: !601)
!4776 = !DILocation(line: 5271, column: 25, scope: !601)
!4777 = !DILocation(line: 5272, column: 28, scope: !601)
!4778 = !DILocation(line: 5272, column: 35, scope: !601)
!4779 = !DILocation(line: 5272, column: 2, scope: !601)
!4780 = !DILocation(line: 5272, column: 10, scope: !601)
!4781 = !DILocation(line: 5272, column: 19, scope: !601)
!4782 = !DILocation(line: 5272, column: 24, scope: !601)
!4783 = !DILocation(line: 5273, column: 2, scope: !601)
!4784 = !DILocation(line: 5273, column: 10, scope: !601)
!4785 = !DILocation(line: 5273, column: 19, scope: !601)
!4786 = !DILocation(line: 5273, column: 22, scope: !601)
!4787 = !DILocation(line: 5274, column: 18, scope: !601)
!4788 = !DILocation(line: 5274, column: 2, scope: !601)
!4789 = !DILocation(line: 5274, column: 9, scope: !601)
!4790 = !DILocation(line: 5274, column: 16, scope: !601)
!4791 = !DILocation(line: 5277, column: 2, scope: !601)
!4792 = !DILocation(line: 5277, column: 9, scope: !601)
!4793 = !DILocation(line: 5277, column: 16, scope: !601)
!4794 = !DILocation(line: 5278, column: 6, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !601, file: !1, line: 5278, column: 6)
!4796 = !DILocation(line: 5278, column: 13, scope: !4795)
!4797 = !DILocation(line: 5278, column: 6, scope: !601)
!4798 = !DILocation(line: 5279, column: 27, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 5278, column: 18)
!4800 = !DILocation(line: 5279, column: 4, scope: !4799)
!4801 = !DILocation(line: 5279, column: 12, scope: !4799)
!4802 = !DILocation(line: 5279, column: 20, scope: !4799)
!4803 = !DILocation(line: 5279, column: 25, scope: !4799)
!4804 = !DILocation(line: 5280, column: 28, scope: !4799)
!4805 = !DILocation(line: 5280, column: 35, scope: !4799)
!4806 = !DILocation(line: 5280, column: 3, scope: !4799)
!4807 = !DILocation(line: 5280, column: 11, scope: !4799)
!4808 = !DILocation(line: 5280, column: 19, scope: !4799)
!4809 = !DILocation(line: 5280, column: 24, scope: !4799)
!4810 = !DILocation(line: 5281, column: 3, scope: !4799)
!4811 = !DILocation(line: 5281, column: 11, scope: !4799)
!4812 = !DILocation(line: 5281, column: 19, scope: !4799)
!4813 = !DILocation(line: 5281, column: 22, scope: !4799)
!4814 = !DILocation(line: 5282, column: 19, scope: !4799)
!4815 = !DILocation(line: 5282, column: 3, scope: !4799)
!4816 = !DILocation(line: 5282, column: 10, scope: !4799)
!4817 = !DILocation(line: 5282, column: 17, scope: !4799)
!4818 = !DILocation(line: 5283, column: 2, scope: !4799)
!4819 = !DILocation(line: 5284, column: 2, scope: !601)
!4820 = !DILocation(line: 5285, column: 1, scope: !601)
!4821 = !DILocalVariable(name: "name", arg: 1, scope: !604, file: !1, line: 5527, type: !20)
!4822 = !DILocation(line: 5527, column: 26, scope: !604)
!4823 = !DILocalVariable(name: "n", arg: 2, scope: !604, file: !1, line: 5527, type: !23)
!4824 = !DILocation(line: 5527, column: 39, scope: !604)
!4825 = !DILocalVariable(name: "fn", arg: 3, scope: !604, file: !1, line: 5527, type: !429)
!4826 = !DILocation(line: 5527, column: 54, scope: !604)
!4827 = !DILocalVariable(name: "p", scope: !604, file: !1, line: 5529, type: !20)
!4828 = !DILocation(line: 5529, column: 8, scope: !604)
!4829 = !DILocalVariable(name: "l", scope: !604, file: !1, line: 5530, type: !23)
!4830 = !DILocation(line: 5530, column: 9, scope: !604)
!4831 = !DILocation(line: 5532, column: 13, scope: !604)
!4832 = !DILocation(line: 5532, column: 6, scope: !604)
!4833 = !DILocation(line: 5532, column: 4, scope: !604)
!4834 = !DILocation(line: 5533, column: 6, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !604, file: !1, line: 5533, column: 6)
!4836 = !DILocation(line: 5533, column: 8, scope: !4835)
!4837 = !DILocation(line: 5533, column: 6, scope: !604)
!4838 = !DILocation(line: 5534, column: 19, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !1, line: 5534, column: 7)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !1, line: 5533, column: 17)
!4841 = !DILocation(line: 5534, column: 12, scope: !4839)
!4842 = !DILocation(line: 5534, column: 10, scope: !4839)
!4843 = !DILocation(line: 5534, column: 24, scope: !4839)
!4844 = !DILocation(line: 5534, column: 7, scope: !4840)
!4845 = !DILocation(line: 5535, column: 4, scope: !4839)
!4846 = !DILocation(line: 5536, column: 2, scope: !4840)
!4847 = !DILocation(line: 5537, column: 7, scope: !4835)
!4848 = !DILocation(line: 5537, column: 11, scope: !4835)
!4849 = !DILocation(line: 5537, column: 9, scope: !4835)
!4850 = !DILocation(line: 5537, column: 5, scope: !4835)
!4851 = !DILocation(line: 5538, column: 6, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !604, file: !1, line: 5538, column: 6)
!4853 = !DILocation(line: 5538, column: 10, scope: !4852)
!4854 = !DILocation(line: 5538, column: 12, scope: !4852)
!4855 = !DILocation(line: 5538, column: 8, scope: !4852)
!4856 = !DILocation(line: 5538, column: 6, scope: !604)
!4857 = !DILocation(line: 5539, column: 3, scope: !4852)
!4858 = !DILocation(line: 5540, column: 9, scope: !604)
!4859 = !DILocation(line: 5540, column: 15, scope: !604)
!4860 = !DILocation(line: 5540, column: 19, scope: !604)
!4861 = !DILocation(line: 5540, column: 2, scope: !604)
!4862 = !DILocation(line: 5541, column: 7, scope: !604)
!4863 = !DILocation(line: 5541, column: 2, scope: !604)
!4864 = !DILocation(line: 5541, column: 10, scope: !604)
!4865 = !DILocation(line: 5543, column: 15, scope: !604)
!4866 = !DILocation(line: 5543, column: 10, scope: !604)
!4867 = !DILocation(line: 5543, column: 2, scope: !604)
!4868 = !DILocation(line: 5544, column: 1, scope: !604)
!4869 = !DILocalVariable(name: "isoent", arg: 1, scope: !607, file: !1, line: 5140, type: !76)
!4870 = !DILocation(line: 5140, column: 29, scope: !607)
!4871 = !DILocalVariable(name: "er", scope: !607, file: !1, line: 5142, type: !155)
!4872 = !DILocation(line: 5142, column: 19, scope: !607)
!4873 = !DILocalVariable(name: "er_next", scope: !607, file: !1, line: 5142, type: !155)
!4874 = !DILocation(line: 5142, column: 24, scope: !607)
!4875 = !DILocation(line: 5144, column: 7, scope: !607)
!4876 = !DILocation(line: 5144, column: 15, scope: !607)
!4877 = !DILocation(line: 5144, column: 2, scope: !607)
!4878 = !DILocation(line: 5145, column: 7, scope: !607)
!4879 = !DILocation(line: 5145, column: 15, scope: !607)
!4880 = !DILocation(line: 5145, column: 2, scope: !607)
!4881 = !DILocation(line: 5146, column: 7, scope: !607)
!4882 = !DILocation(line: 5146, column: 15, scope: !607)
!4883 = !DILocation(line: 5146, column: 29, scope: !607)
!4884 = !DILocation(line: 5146, column: 5, scope: !607)
!4885 = !DILocation(line: 5147, column: 2, scope: !607)
!4886 = !DILocation(line: 5147, column: 9, scope: !4887)
!4887 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 1)
!4888 = !DILocation(line: 5147, column: 12, scope: !4887)
!4889 = !DILocation(line: 5147, column: 2, scope: !4887)
!4890 = !DILocation(line: 5148, column: 13, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !607, file: !1, line: 5147, column: 21)
!4892 = !DILocation(line: 5148, column: 17, scope: !4891)
!4893 = !DILocation(line: 5148, column: 11, scope: !4891)
!4894 = !DILocation(line: 5149, column: 8, scope: !4891)
!4895 = !DILocation(line: 5149, column: 3, scope: !4891)
!4896 = !DILocation(line: 5150, column: 8, scope: !4891)
!4897 = !DILocation(line: 5150, column: 6, scope: !4891)
!4898 = !DILocation(line: 5147, column: 2, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !607, file: !1, discriminator: 2)
!4900 = !DILocation(line: 5152, column: 7, scope: !607)
!4901 = !DILocation(line: 5152, column: 2, scope: !607)
!4902 = !DILocation(line: 5153, column: 1, scope: !607)
!4903 = !DILocalVariable(name: "isoent", arg: 1, scope: !610, file: !1, line: 5733, type: !76)
!4904 = !DILocation(line: 5733, column: 34, scope: !610)
!4905 = !DILocalVariable(name: "child_name", arg: 2, scope: !610, file: !1, line: 5733, type: !429)
!4906 = !DILocation(line: 5733, column: 54, scope: !610)
!4907 = !DILocalVariable(name: "np", scope: !610, file: !1, line: 5735, type: !76)
!4908 = !DILocation(line: 5735, column: 17, scope: !610)
!4909 = !DILocation(line: 5738, column: 8, scope: !610)
!4910 = !DILocation(line: 5738, column: 16, scope: !610)
!4911 = !DILocation(line: 5738, column: 25, scope: !610)
!4912 = !DILocation(line: 5737, column: 24, scope: !610)
!4913 = !DILocation(line: 5737, column: 7, scope: !610)
!4914 = !DILocation(line: 5737, column: 5, scope: !610)
!4915 = !DILocation(line: 5739, column: 10, scope: !610)
!4916 = !DILocation(line: 5739, column: 2, scope: !610)
!4917 = !DILocalVariable(name: "a", arg: 1, scope: !615, file: !1, line: 7374, type: !367)
!4918 = !DILocation(line: 7374, column: 43, scope: !615)
!4919 = !DILocalVariable(name: "iso9660", scope: !615, file: !1, line: 7376, type: !530)
!4920 = !DILocation(line: 7376, column: 18, scope: !615)
!4921 = !DILocation(line: 7376, column: 28, scope: !615)
!4922 = !DILocation(line: 7376, column: 31, scope: !615)
!4923 = !DILocalVariable(name: "r", scope: !615, file: !1, line: 7377, type: !31)
!4924 = !DILocation(line: 7377, column: 6, scope: !615)
!4925 = !DILocation(line: 7379, column: 2, scope: !615)
!4926 = !DILocation(line: 7379, column: 11, scope: !615)
!4927 = !DILocation(line: 7379, column: 18, scope: !615)
!4928 = !DILocation(line: 7379, column: 25, scope: !615)
!4929 = !DILocation(line: 7379, column: 33, scope: !615)
!4930 = !DILocation(line: 7380, column: 2, scope: !615)
!4931 = !DILocation(line: 7380, column: 11, scope: !615)
!4932 = !DILocation(line: 7380, column: 18, scope: !615)
!4933 = !DILocation(line: 7380, column: 25, scope: !615)
!4934 = !DILocation(line: 7380, column: 34, scope: !615)
!4935 = !DILocation(line: 7381, column: 2, scope: !615)
!4936 = !DILocation(line: 7381, column: 11, scope: !615)
!4937 = !DILocation(line: 7381, column: 18, scope: !615)
!4938 = !DILocation(line: 7381, column: 25, scope: !615)
!4939 = !DILocation(line: 7381, column: 34, scope: !615)
!4940 = !DILocation(line: 7382, column: 2, scope: !615)
!4941 = !DILocation(line: 7382, column: 11, scope: !615)
!4942 = !DILocation(line: 7382, column: 18, scope: !615)
!4943 = !DILocation(line: 7382, column: 25, scope: !615)
!4944 = !DILocation(line: 7382, column: 35, scope: !615)
!4945 = !DILocation(line: 7383, column: 6, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !615, file: !1, line: 7383, column: 6)
!4947 = !DILocation(line: 7383, column: 15, scope: !4946)
!4948 = !DILocation(line: 7383, column: 22, scope: !4946)
!4949 = !DILocation(line: 7383, column: 6, scope: !615)
!4950 = !DILocation(line: 7384, column: 22, scope: !4946)
!4951 = !DILocation(line: 7384, column: 31, scope: !4946)
!4952 = !DILocation(line: 7384, column: 38, scope: !4946)
!4953 = !DILocation(line: 7384, column: 7, scope: !4946)
!4954 = !DILocation(line: 7384, column: 5, scope: !4946)
!4955 = !DILocation(line: 7384, column: 3, scope: !4946)
!4956 = !DILocation(line: 7386, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4946, file: !1, line: 7385, column: 7)
!4958 = !DILocation(line: 7386, column: 5, scope: !4957)
!4959 = !DILocation(line: 7388, column: 3, scope: !4957)
!4960 = !DILocation(line: 7388, column: 12, scope: !4957)
!4961 = !DILocation(line: 7388, column: 19, scope: !4957)
!4962 = !DILocation(line: 7388, column: 32, scope: !4957)
!4963 = !DILocation(line: 7390, column: 10, scope: !615)
!4964 = !DILocation(line: 7390, column: 2, scope: !615)
!4965 = !DILocation(line: 7392, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !615, file: !1, line: 7390, column: 13)
!4967 = !DILocation(line: 7392, column: 3, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !4966, file: !1, discriminator: 1)
!4969 = !DILocation(line: 7395, column: 22, scope: !4966)
!4970 = !DILocation(line: 7395, column: 25, scope: !4966)
!4971 = !DILocation(line: 7395, column: 3, scope: !4966)
!4972 = !DILocation(line: 7398, column: 3, scope: !4966)
!4973 = !DILocation(line: 7400, column: 22, scope: !4966)
!4974 = !DILocation(line: 7400, column: 25, scope: !4966)
!4975 = !DILocation(line: 7400, column: 3, scope: !4966)
!4976 = !DILocation(line: 7403, column: 3, scope: !4966)
!4977 = !DILocation(line: 7405, column: 22, scope: !4966)
!4978 = !DILocation(line: 7405, column: 25, scope: !4966)
!4979 = !DILocation(line: 7405, column: 3, scope: !4966)
!4980 = !DILocation(line: 7408, column: 3, scope: !4966)
!4981 = !DILocation(line: 7410, column: 2, scope: !615)
!4982 = !DILocation(line: 7411, column: 1, scope: !615)
!4983 = !DILocalVariable(name: "a", arg: 1, scope: !616, file: !1, line: 3725, type: !367)
!4984 = !DILocation(line: 3725, column: 34, scope: !616)
!4985 = !DILocalVariable(name: "size", arg: 2, scope: !616, file: !1, line: 3725, type: !23)
!4986 = !DILocation(line: 3725, column: 44, scope: !616)
!4987 = !DILocalVariable(name: "remaining", scope: !616, file: !1, line: 3727, type: !23)
!4988 = !DILocation(line: 3727, column: 9, scope: !616)
!4989 = !DILocalVariable(name: "p", scope: !616, file: !1, line: 3728, type: !544)
!4990 = !DILocation(line: 3728, column: 17, scope: !616)
!4991 = !DILocalVariable(name: "old", scope: !616, file: !1, line: 3728, type: !544)
!4992 = !DILocation(line: 3728, column: 21, scope: !616)
!4993 = !DILocalVariable(name: "r", scope: !616, file: !1, line: 3729, type: !31)
!4994 = !DILocation(line: 3729, column: 6, scope: !616)
!4995 = !DILocation(line: 3731, column: 14, scope: !616)
!4996 = !DILocation(line: 3731, column: 12, scope: !616)
!4997 = !DILocation(line: 3732, column: 17, scope: !616)
!4998 = !DILocation(line: 3732, column: 6, scope: !616)
!4999 = !DILocation(line: 3732, column: 4, scope: !616)
!5000 = !DILocation(line: 3733, column: 6, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !616, file: !1, line: 3733, column: 6)
!5002 = !DILocation(line: 3733, column: 14, scope: !5001)
!5003 = !DILocation(line: 3733, column: 11, scope: !5001)
!5004 = !DILocation(line: 3733, column: 6, scope: !616)
!5005 = !DILocation(line: 3734, column: 10, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 3733, column: 25)
!5007 = !DILocation(line: 3734, column: 16, scope: !5006)
!5008 = !DILocation(line: 3734, column: 3, scope: !5006)
!5009 = !DILocation(line: 3735, column: 22, scope: !5006)
!5010 = !DILocation(line: 3735, column: 25, scope: !5006)
!5011 = !DILocation(line: 3735, column: 11, scope: !5006)
!5012 = !DILocation(line: 3735, column: 3, scope: !5006)
!5013 = !DILocation(line: 3737, column: 9, scope: !616)
!5014 = !DILocation(line: 3737, column: 15, scope: !616)
!5015 = !DILocation(line: 3737, column: 2, scope: !616)
!5016 = !DILocation(line: 3738, column: 17, scope: !616)
!5017 = !DILocation(line: 3738, column: 20, scope: !616)
!5018 = !DILocation(line: 3738, column: 6, scope: !616)
!5019 = !DILocation(line: 3738, column: 4, scope: !616)
!5020 = !DILocation(line: 3739, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !616, file: !1, line: 3739, column: 6)
!5022 = !DILocation(line: 3739, column: 8, scope: !5021)
!5023 = !DILocation(line: 3739, column: 6, scope: !616)
!5024 = !DILocation(line: 3740, column: 11, scope: !5021)
!5025 = !DILocation(line: 3740, column: 3, scope: !5021)
!5026 = !DILocation(line: 3741, column: 10, scope: !616)
!5027 = !DILocation(line: 3741, column: 7, scope: !616)
!5028 = !DILocation(line: 3742, column: 8, scope: !616)
!5029 = !DILocation(line: 3742, column: 6, scope: !616)
!5030 = !DILocation(line: 3743, column: 17, scope: !616)
!5031 = !DILocation(line: 3743, column: 6, scope: !616)
!5032 = !DILocation(line: 3743, column: 4, scope: !616)
!5033 = !DILocation(line: 3744, column: 9, scope: !616)
!5034 = !DILocation(line: 3744, column: 15, scope: !616)
!5035 = !DILocation(line: 3744, column: 21, scope: !616)
!5036 = !DILocation(line: 3744, column: 19, scope: !616)
!5037 = !DILocation(line: 3744, column: 2, scope: !616)
!5038 = !DILocation(line: 3745, column: 14, scope: !616)
!5039 = !DILocation(line: 3745, column: 12, scope: !616)
!5040 = !DILocation(line: 3746, column: 2, scope: !616)
!5041 = !DILocation(line: 3746, column: 9, scope: !5042)
!5042 = !DILexicalBlockFile(scope: !616, file: !1, discriminator: 1)
!5043 = !DILocation(line: 3746, column: 2, scope: !5042)
!5044 = !DILocalVariable(name: "wsize", scope: !5045, file: !1, line: 3747, type: !23)
!5045 = distinct !DILexicalBlock(scope: !616, file: !1, line: 3746, column: 15)
!5046 = !DILocation(line: 3747, column: 10, scope: !5045)
!5047 = !DILocation(line: 3747, column: 18, scope: !5045)
!5048 = !DILocation(line: 3749, column: 7, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 3749, column: 7)
!5050 = !DILocation(line: 3749, column: 15, scope: !5049)
!5051 = !DILocation(line: 3749, column: 13, scope: !5049)
!5052 = !DILocation(line: 3749, column: 7, scope: !5045)
!5053 = !DILocation(line: 3750, column: 12, scope: !5049)
!5054 = !DILocation(line: 3750, column: 10, scope: !5049)
!5055 = !DILocation(line: 3750, column: 4, scope: !5049)
!5056 = !DILocation(line: 3751, column: 18, scope: !5045)
!5057 = !DILocation(line: 3751, column: 21, scope: !5045)
!5058 = !DILocation(line: 3751, column: 7, scope: !5045)
!5059 = !DILocation(line: 3751, column: 5, scope: !5045)
!5060 = !DILocation(line: 3752, column: 7, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 3752, column: 7)
!5062 = !DILocation(line: 3752, column: 9, scope: !5061)
!5063 = !DILocation(line: 3752, column: 7, scope: !5045)
!5064 = !DILocation(line: 3753, column: 12, scope: !5061)
!5065 = !DILocation(line: 3753, column: 4, scope: !5061)
!5066 = !DILocation(line: 3754, column: 11, scope: !5045)
!5067 = !DILocation(line: 3754, column: 8, scope: !5045)
!5068 = !DILocation(line: 3746, column: 2, scope: !5069)
!5069 = !DILexicalBlockFile(scope: !616, file: !1, discriminator: 2)
!5070 = !DILocation(line: 3756, column: 2, scope: !616)
!5071 = !DILocation(line: 3757, column: 1, scope: !616)
!5072 = !DILocalVariable(name: "pp", arg: 1, scope: !627, file: !628, line: 177, type: !271)
!5073 = !DILocation(line: 177, column: 23, scope: !627)
!5074 = !DILocalVariable(name: "u", arg: 2, scope: !627, file: !628, line: 177, type: !42)
!5075 = !DILocation(line: 177, column: 36, scope: !627)
!5076 = !DILocalVariable(name: "p", scope: !627, file: !628, line: 179, type: !544)
!5077 = !DILocation(line: 179, column: 17, scope: !627)
!5078 = !DILocation(line: 179, column: 38, scope: !627)
!5079 = !DILocation(line: 181, column: 9, scope: !627)
!5080 = !DILocation(line: 181, column: 11, scope: !627)
!5081 = !DILocation(line: 181, column: 2, scope: !627)
!5082 = !DILocation(line: 181, column: 7, scope: !627)
!5083 = !DILocation(line: 182, column: 10, scope: !627)
!5084 = !DILocation(line: 182, column: 12, scope: !627)
!5085 = !DILocation(line: 182, column: 18, scope: !627)
!5086 = !DILocation(line: 182, column: 9, scope: !627)
!5087 = !DILocation(line: 182, column: 2, scope: !627)
!5088 = !DILocation(line: 182, column: 7, scope: !627)
!5089 = !DILocation(line: 183, column: 10, scope: !627)
!5090 = !DILocation(line: 183, column: 12, scope: !627)
!5091 = !DILocation(line: 183, column: 19, scope: !627)
!5092 = !DILocation(line: 183, column: 9, scope: !627)
!5093 = !DILocation(line: 183, column: 2, scope: !627)
!5094 = !DILocation(line: 183, column: 7, scope: !627)
!5095 = !DILocation(line: 184, column: 10, scope: !627)
!5096 = !DILocation(line: 184, column: 12, scope: !627)
!5097 = !DILocation(line: 184, column: 19, scope: !627)
!5098 = !DILocation(line: 184, column: 9, scope: !627)
!5099 = !DILocation(line: 184, column: 2, scope: !627)
!5100 = !DILocation(line: 184, column: 7, scope: !627)
!5101 = !DILocation(line: 185, column: 1, scope: !627)
!5102 = !DILocalVariable(name: "a", arg: 1, scope: !619, file: !1, line: 3612, type: !367)
!5103 = !DILocation(line: 3612, column: 34, scope: !619)
!5104 = !DILocalVariable(name: "iso9660", scope: !619, file: !1, line: 3614, type: !530)
!5105 = !DILocation(line: 3614, column: 18, scope: !619)
!5106 = !DILocation(line: 3614, column: 46, scope: !619)
!5107 = !DILocation(line: 3614, column: 49, scope: !619)
!5108 = !DILocation(line: 3614, column: 28, scope: !619)
!5109 = !DILocation(line: 3617, column: 5, scope: !619)
!5110 = !DILocation(line: 3617, column: 14, scope: !619)
!5111 = !DILocation(line: 3617, column: 3, scope: !619)
!5112 = !DILocation(line: 3616, column: 12, scope: !619)
!5113 = !DILocation(line: 3616, column: 21, scope: !619)
!5114 = !DILocation(line: 3616, column: 2, scope: !619)
!5115 = !DILocalVariable(name: "a", arg: 1, scope: !622, file: !1, line: 3646, type: !367)
!5116 = !DILocation(line: 3646, column: 34, scope: !622)
!5117 = !DILocalVariable(name: "size", arg: 2, scope: !622, file: !1, line: 3646, type: !23)
!5118 = !DILocation(line: 3646, column: 44, scope: !622)
!5119 = !DILocalVariable(name: "iso9660", scope: !622, file: !1, line: 3648, type: !530)
!5120 = !DILocation(line: 3648, column: 18, scope: !622)
!5121 = !DILocation(line: 3648, column: 46, scope: !622)
!5122 = !DILocation(line: 3648, column: 49, scope: !622)
!5123 = !DILocation(line: 3648, column: 28, scope: !622)
!5124 = !DILocation(line: 3650, column: 6, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !622, file: !1, line: 3650, column: 6)
!5126 = !DILocation(line: 3650, column: 13, scope: !5125)
!5127 = !DILocation(line: 3650, column: 22, scope: !5125)
!5128 = !DILocation(line: 3650, column: 11, scope: !5125)
!5129 = !DILocation(line: 3650, column: 38, scope: !5125)
!5130 = !DILocation(line: 3651, column: 6, scope: !5125)
!5131 = !DILocation(line: 3651, column: 15, scope: !5125)
!5132 = !DILocation(line: 3651, column: 31, scope: !5125)
!5133 = !DILocation(line: 3650, column: 6, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !622, file: !1, discriminator: 1)
!5135 = !DILocation(line: 3652, column: 22, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5125, file: !1, line: 3651, column: 37)
!5137 = !DILocation(line: 3652, column: 25, scope: !5136)
!5138 = !DILocation(line: 3655, column: 17, scope: !5136)
!5139 = !DILocation(line: 3655, column: 33, scope: !5136)
!5140 = !DILocation(line: 3655, column: 42, scope: !5136)
!5141 = !DILocation(line: 3652, column: 3, scope: !5136)
!5142 = !DILocation(line: 3656, column: 3, scope: !5136)
!5143 = !DILocation(line: 3658, column: 30, scope: !622)
!5144 = !DILocation(line: 3658, column: 2, scope: !622)
!5145 = !DILocation(line: 3658, column: 11, scope: !622)
!5146 = !DILocation(line: 3658, column: 27, scope: !622)
!5147 = !DILocation(line: 3659, column: 6, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !622, file: !1, line: 3659, column: 6)
!5149 = !DILocation(line: 3659, column: 15, scope: !5148)
!5150 = !DILocation(line: 3659, column: 31, scope: !5148)
!5151 = !DILocation(line: 3659, column: 6, scope: !622)
!5152 = !DILocation(line: 3660, column: 24, scope: !5148)
!5153 = !DILocation(line: 3660, column: 11, scope: !5148)
!5154 = !DILocation(line: 3660, column: 3, scope: !5148)
!5155 = !DILocation(line: 3661, column: 2, scope: !622)
!5156 = !DILocation(line: 3662, column: 1, scope: !622)
!5157 = !DILocalVariable(name: "a", arg: 1, scope: !623, file: !1, line: 3621, type: !367)
!5158 = !DILocation(line: 3621, column: 36, scope: !623)
!5159 = !DILocalVariable(name: "iso9660", scope: !623, file: !1, line: 3623, type: !530)
!5160 = !DILocation(line: 3623, column: 18, scope: !623)
!5161 = !DILocation(line: 3623, column: 46, scope: !623)
!5162 = !DILocation(line: 3623, column: 49, scope: !623)
!5163 = !DILocation(line: 3623, column: 28, scope: !623)
!5164 = !DILocalVariable(name: "wsize", scope: !623, file: !1, line: 3624, type: !23)
!5165 = !DILocation(line: 3624, column: 9, scope: !623)
!5166 = !DILocalVariable(name: "nw", scope: !623, file: !1, line: 3624, type: !23)
!5167 = !DILocation(line: 3624, column: 16, scope: !623)
!5168 = !DILocalVariable(name: "r", scope: !623, file: !1, line: 3625, type: !31)
!5169 = !DILocation(line: 3625, column: 6, scope: !623)
!5170 = !DILocation(line: 3627, column: 35, scope: !623)
!5171 = !DILocation(line: 3627, column: 44, scope: !623)
!5172 = !DILocation(line: 3627, column: 33, scope: !623)
!5173 = !DILocation(line: 3627, column: 8, scope: !623)
!5174 = !DILocation(line: 3628, column: 7, scope: !623)
!5175 = !DILocation(line: 3628, column: 13, scope: !623)
!5176 = !DILocation(line: 3628, column: 5, scope: !623)
!5177 = !DILocation(line: 3629, column: 6, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !623, file: !1, line: 3629, column: 6)
!5179 = !DILocation(line: 3629, column: 15, scope: !5178)
!5180 = !DILocation(line: 3629, column: 26, scope: !5178)
!5181 = !DILocation(line: 3629, column: 6, scope: !623)
!5182 = !DILocation(line: 3630, column: 30, scope: !5178)
!5183 = !DILocation(line: 3630, column: 33, scope: !5178)
!5184 = !DILocation(line: 3630, column: 42, scope: !5178)
!5185 = !DILocation(line: 3630, column: 49, scope: !5178)
!5186 = !DILocation(line: 3630, column: 57, scope: !5178)
!5187 = !DILocation(line: 3630, column: 55, scope: !5178)
!5188 = !DILocation(line: 3630, column: 7, scope: !5178)
!5189 = !DILocation(line: 3630, column: 5, scope: !5178)
!5190 = !DILocation(line: 3630, column: 3, scope: !5178)
!5191 = !DILocation(line: 3632, column: 21, scope: !5178)
!5192 = !DILocation(line: 3632, column: 24, scope: !5178)
!5193 = !DILocation(line: 3632, column: 33, scope: !5178)
!5194 = !DILocation(line: 3632, column: 40, scope: !5178)
!5195 = !DILocation(line: 3632, column: 48, scope: !5178)
!5196 = !DILocation(line: 3632, column: 46, scope: !5178)
!5197 = !DILocation(line: 3632, column: 7, scope: !5178)
!5198 = !DILocation(line: 3632, column: 5, scope: !5178)
!5199 = !DILocation(line: 3634, column: 27, scope: !623)
!5200 = !DILocation(line: 3634, column: 35, scope: !623)
!5201 = !DILocation(line: 3634, column: 33, scope: !623)
!5202 = !DILocation(line: 3634, column: 2, scope: !623)
!5203 = !DILocation(line: 3634, column: 11, scope: !623)
!5204 = !DILocation(line: 3634, column: 24, scope: !623)
!5205 = !DILocation(line: 3635, column: 6, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !623, file: !1, line: 3635, column: 6)
!5207 = !DILocation(line: 3635, column: 15, scope: !5206)
!5208 = !DILocation(line: 3635, column: 30, scope: !5206)
!5209 = !DILocation(line: 3635, column: 39, scope: !5206)
!5210 = !DILocation(line: 3635, column: 28, scope: !5206)
!5211 = !DILocation(line: 3635, column: 6, scope: !623)
!5212 = !DILocation(line: 3636, column: 28, scope: !5206)
!5213 = !DILocation(line: 3636, column: 37, scope: !5206)
!5214 = !DILocation(line: 3636, column: 3, scope: !5206)
!5215 = !DILocation(line: 3636, column: 12, scope: !5206)
!5216 = !DILocation(line: 3636, column: 26, scope: !5206)
!5217 = !DILocation(line: 3637, column: 2, scope: !623)
!5218 = !DILocation(line: 3637, column: 11, scope: !623)
!5219 = !DILocation(line: 3637, column: 27, scope: !623)
!5220 = !DILocation(line: 3638, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !623, file: !1, line: 3638, column: 6)
!5222 = !DILocation(line: 3638, column: 6, scope: !623)
!5223 = !DILocation(line: 3639, column: 31, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 3638, column: 10)
!5225 = !DILocation(line: 3639, column: 3, scope: !5224)
!5226 = !DILocation(line: 3639, column: 12, scope: !5224)
!5227 = !DILocation(line: 3639, column: 28, scope: !5224)
!5228 = !DILocation(line: 3640, column: 11, scope: !5224)
!5229 = !DILocation(line: 3640, column: 20, scope: !5224)
!5230 = !DILocation(line: 3640, column: 3, scope: !5224)
!5231 = !DILocation(line: 3640, column: 27, scope: !5224)
!5232 = !DILocation(line: 3640, column: 36, scope: !5224)
!5233 = !DILocation(line: 3640, column: 44, scope: !5224)
!5234 = !DILocation(line: 3640, column: 42, scope: !5224)
!5235 = !DILocation(line: 3640, column: 52, scope: !5224)
!5236 = !DILocation(line: 3640, column: 50, scope: !5224)
!5237 = !DILocation(line: 3640, column: 56, scope: !5224)
!5238 = !DILocation(line: 3641, column: 2, scope: !5224)
!5239 = !DILocation(line: 3642, column: 10, scope: !623)
!5240 = !DILocation(line: 3642, column: 2, scope: !623)
!5241 = !DILocalVariable(name: "a", arg: 1, scope: !624, file: !1, line: 1640, type: !367)
!5242 = !DILocation(line: 1640, column: 37, scope: !624)
!5243 = !DILocalVariable(name: "buff", arg: 2, scope: !624, file: !1, line: 1640, type: !122)
!5244 = !DILocation(line: 1640, column: 52, scope: !624)
!5245 = !DILocalVariable(name: "s", arg: 3, scope: !624, file: !1, line: 1640, type: !23)
!5246 = !DILocation(line: 1640, column: 65, scope: !624)
!5247 = !DILocalVariable(name: "iso9660", scope: !624, file: !1, line: 1642, type: !530)
!5248 = !DILocation(line: 1642, column: 18, scope: !624)
!5249 = !DILocation(line: 1642, column: 28, scope: !624)
!5250 = !DILocation(line: 1642, column: 31, scope: !624)
!5251 = !DILocalVariable(name: "written", scope: !624, file: !1, line: 1643, type: !396)
!5252 = !DILocation(line: 1643, column: 10, scope: !624)
!5253 = !DILocalVariable(name: "b", scope: !624, file: !1, line: 1644, type: !453)
!5254 = !DILocation(line: 1644, column: 23, scope: !624)
!5255 = !DILocation(line: 1646, column: 29, scope: !624)
!5256 = !DILocation(line: 1646, column: 4, scope: !624)
!5257 = !DILocation(line: 1647, column: 2, scope: !624)
!5258 = !DILocation(line: 1647, column: 9, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !624, file: !1, discriminator: 1)
!5260 = !DILocation(line: 1647, column: 2, scope: !5259)
!5261 = !DILocation(line: 1648, column: 19, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !624, file: !1, line: 1647, column: 12)
!5263 = !DILocation(line: 1648, column: 28, scope: !5262)
!5264 = !DILocation(line: 1648, column: 37, scope: !5262)
!5265 = !DILocation(line: 1648, column: 40, scope: !5262)
!5266 = !DILocation(line: 1648, column: 13, scope: !5262)
!5267 = !DILocation(line: 1648, column: 11, scope: !5262)
!5268 = !DILocation(line: 1649, column: 7, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5262, file: !1, line: 1649, column: 7)
!5270 = !DILocation(line: 1649, column: 15, scope: !5269)
!5271 = !DILocation(line: 1649, column: 7, scope: !5262)
!5272 = !DILocation(line: 1650, column: 23, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !1, line: 1649, column: 20)
!5274 = !DILocation(line: 1650, column: 26, scope: !5273)
!5275 = !DILocation(line: 1650, column: 35, scope: !5273)
!5276 = !DILocation(line: 1650, column: 4, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5273, file: !1, discriminator: 1)
!5278 = !DILocation(line: 1652, column: 4, scope: !5273)
!5279 = !DILocation(line: 1654, column: 8, scope: !5262)
!5280 = !DILocation(line: 1654, column: 5, scope: !5262)
!5281 = !DILocation(line: 1655, column: 8, scope: !5262)
!5282 = !DILocation(line: 1655, column: 5, scope: !5262)
!5283 = !DILocation(line: 1647, column: 2, scope: !5284)
!5284 = !DILexicalBlockFile(scope: !624, file: !1, discriminator: 2)
!5285 = !DILocation(line: 1657, column: 2, scope: !624)
!5286 = !DILocation(line: 1658, column: 1, scope: !624)
!5287 = !DILocalVariable(name: "a", arg: 1, scope: !632, file: !1, line: 1710, type: !367)
!5288 = !DILocation(line: 1710, column: 42, scope: !632)
!5289 = !DILocalVariable(name: "buff", arg: 2, scope: !632, file: !1, line: 1710, type: !122)
!5290 = !DILocation(line: 1710, column: 57, scope: !632)
!5291 = !DILocalVariable(name: "s", arg: 3, scope: !632, file: !1, line: 1710, type: !23)
!5292 = !DILocation(line: 1710, column: 70, scope: !632)
!5293 = !DILocalVariable(name: "iso9660", scope: !632, file: !1, line: 1712, type: !530)
!5294 = !DILocation(line: 1712, column: 18, scope: !632)
!5295 = !DILocation(line: 1712, column: 28, scope: !632)
!5296 = !DILocation(line: 1712, column: 31, scope: !632)
!5297 = !DILocalVariable(name: "ws", scope: !632, file: !1, line: 1713, type: !23)
!5298 = !DILocation(line: 1713, column: 9, scope: !632)
!5299 = !DILocation(line: 1715, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !632, file: !1, line: 1715, column: 6)
!5301 = !DILocation(line: 1715, column: 15, scope: !5300)
!5302 = !DILocation(line: 1715, column: 23, scope: !5300)
!5303 = !DILocation(line: 1715, column: 6, scope: !632)
!5304 = !DILocation(line: 1716, column: 22, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5300, file: !1, line: 1715, column: 28)
!5306 = !DILocation(line: 1716, column: 25, scope: !5305)
!5307 = !DILocation(line: 1716, column: 3, scope: !5305)
!5308 = !DILocation(line: 1718, column: 3, scope: !5305)
!5309 = !DILocation(line: 1721, column: 7, scope: !632)
!5310 = !DILocation(line: 1721, column: 5, scope: !632)
!5311 = !DILocation(line: 1722, column: 6, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !632, file: !1, line: 1722, column: 6)
!5313 = !DILocation(line: 1722, column: 15, scope: !5312)
!5314 = !DILocation(line: 1722, column: 33, scope: !5312)
!5315 = !DILocation(line: 1723, column: 7, scope: !5312)
!5316 = !DILocation(line: 1723, column: 16, scope: !5312)
!5317 = !DILocation(line: 1723, column: 26, scope: !5312)
!5318 = !DILocation(line: 1723, column: 39, scope: !5312)
!5319 = !DILocation(line: 1723, column: 46, scope: !5312)
!5320 = !DILocation(line: 1723, column: 44, scope: !5312)
!5321 = !DILocation(line: 1723, column: 50, scope: !5312)
!5322 = !DILocation(line: 1722, column: 6, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !632, file: !1, discriminator: 1)
!5324 = !DILocalVariable(name: "con", scope: !5325, file: !1, line: 1725, type: !45)
!5325 = distinct !DILexicalBlock(scope: !5312, file: !1, line: 1724, column: 50)
!5326 = !DILocation(line: 1725, column: 19, scope: !5325)
!5327 = !DILocalVariable(name: "ts", scope: !5325, file: !1, line: 1726, type: !23)
!5328 = !DILocation(line: 1726, column: 10, scope: !5325)
!5329 = !DILocation(line: 1729, column: 7, scope: !5325)
!5330 = !DILocation(line: 1729, column: 16, scope: !5325)
!5331 = !DILocation(line: 1729, column: 26, scope: !5325)
!5332 = !DILocation(line: 1729, column: 39, scope: !5325)
!5333 = !DILocation(line: 1728, column: 56, scope: !5325)
!5334 = !DILocation(line: 1728, column: 6, scope: !5325)
!5335 = !DILocation(line: 1731, column: 7, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1731, column: 7)
!5337 = !DILocation(line: 1731, column: 16, scope: !5336)
!5338 = !DILocation(line: 1731, column: 23, scope: !5336)
!5339 = !DILocation(line: 1731, column: 7, scope: !5325)
!5340 = !DILocation(line: 1732, column: 24, scope: !5336)
!5341 = !DILocation(line: 1732, column: 27, scope: !5336)
!5342 = !DILocation(line: 1732, column: 33, scope: !5336)
!5343 = !DILocation(line: 1732, column: 4, scope: !5336)
!5344 = !DILocation(line: 1734, column: 7, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1734, column: 7)
!5346 = !DILocation(line: 1734, column: 16, scope: !5345)
!5347 = !DILocation(line: 1734, column: 23, scope: !5345)
!5348 = !DILocation(line: 1734, column: 7, scope: !5325)
!5349 = !DILocation(line: 1735, column: 29, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !1, line: 1735, column: 8)
!5351 = distinct !DILexicalBlock(scope: !5345, file: !1, line: 1734, column: 31)
!5352 = !DILocation(line: 1735, column: 32, scope: !5350)
!5353 = !DILocation(line: 1735, column: 38, scope: !5350)
!5354 = !DILocation(line: 1735, column: 8, scope: !5350)
!5355 = !DILocation(line: 1735, column: 42, scope: !5350)
!5356 = !DILocation(line: 1735, column: 8, scope: !5351)
!5357 = !DILocation(line: 1736, column: 5, scope: !5350)
!5358 = !DILocation(line: 1737, column: 3, scope: !5351)
!5359 = !DILocation(line: 1738, column: 25, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5361, file: !1, line: 1738, column: 8)
!5361 = distinct !DILexicalBlock(scope: !5345, file: !1, line: 1737, column: 10)
!5362 = !DILocation(line: 1738, column: 28, scope: !5360)
!5363 = !DILocation(line: 1738, column: 34, scope: !5360)
!5364 = !DILocation(line: 1738, column: 8, scope: !5360)
!5365 = !DILocation(line: 1738, column: 38, scope: !5360)
!5366 = !DILocation(line: 1738, column: 8, scope: !5361)
!5367 = !DILocation(line: 1739, column: 5, scope: !5360)
!5368 = !DILocation(line: 1740, column: 44, scope: !5361)
!5369 = !DILocation(line: 1740, column: 4, scope: !5361)
!5370 = !DILocation(line: 1740, column: 13, scope: !5361)
!5371 = !DILocation(line: 1740, column: 23, scope: !5361)
!5372 = !DILocation(line: 1740, column: 36, scope: !5361)
!5373 = !DILocation(line: 1740, column: 41, scope: !5361)
!5374 = !DILocation(line: 1744, column: 32, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1744, column: 7)
!5376 = !DILocation(line: 1745, column: 7, scope: !5375)
!5377 = !DILocation(line: 1745, column: 16, scope: !5375)
!5378 = !DILocation(line: 1745, column: 26, scope: !5375)
!5379 = !DILocation(line: 1745, column: 39, scope: !5375)
!5380 = !DILocation(line: 1744, column: 7, scope: !5375)
!5381 = !DILocation(line: 1745, column: 45, scope: !5375)
!5382 = !DILocation(line: 1744, column: 7, scope: !5325)
!5383 = !DILocation(line: 1746, column: 4, scope: !5375)
!5384 = !DILocation(line: 1750, column: 9, scope: !5325)
!5385 = !DILocation(line: 1750, column: 18, scope: !5325)
!5386 = !DILocation(line: 1750, column: 28, scope: !5325)
!5387 = !DILocation(line: 1750, column: 41, scope: !5325)
!5388 = !DILocation(line: 1751, column: 8, scope: !5325)
!5389 = !DILocation(line: 1751, column: 29, scope: !5325)
!5390 = !DILocation(line: 1751, column: 33, scope: !5325)
!5391 = !DILocation(line: 1749, column: 44, scope: !5325)
!5392 = !DILocation(line: 1749, column: 3, scope: !5325)
!5393 = !DILocation(line: 1749, column: 12, scope: !5325)
!5394 = !DILocation(line: 1749, column: 22, scope: !5325)
!5395 = !DILocation(line: 1749, column: 35, scope: !5325)
!5396 = !DILocation(line: 1749, column: 42, scope: !5325)
!5397 = !DILocation(line: 1756, column: 9, scope: !5325)
!5398 = !DILocation(line: 1756, column: 6, scope: !5325)
!5399 = !DILocation(line: 1757, column: 49, scope: !5325)
!5400 = !DILocation(line: 1757, column: 57, scope: !5325)
!5401 = !DILocation(line: 1757, column: 55, scope: !5325)
!5402 = !DILocation(line: 1757, column: 8, scope: !5325)
!5403 = !DILocation(line: 1759, column: 9, scope: !5325)
!5404 = !DILocation(line: 1759, column: 7, scope: !5325)
!5405 = !DILocation(line: 1760, column: 7, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5325, file: !1, line: 1760, column: 7)
!5407 = !DILocation(line: 1760, column: 11, scope: !5406)
!5408 = !DILocation(line: 1760, column: 7, scope: !5325)
!5409 = !DILocation(line: 1761, column: 23, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !1, line: 1760, column: 20)
!5411 = !DILocation(line: 1761, column: 26, scope: !5410)
!5412 = !DILocation(line: 1761, column: 4, scope: !5410)
!5413 = !DILocation(line: 1763, column: 4, scope: !5410)
!5414 = !DILocation(line: 1765, column: 25, scope: !5325)
!5415 = !DILocation(line: 1765, column: 3, scope: !5325)
!5416 = !DILocation(line: 1765, column: 8, scope: !5325)
!5417 = !DILocation(line: 1765, column: 23, scope: !5325)
!5418 = !DILocation(line: 1766, column: 42, scope: !5325)
!5419 = !DILocation(line: 1766, column: 3, scope: !5325)
!5420 = !DILocation(line: 1766, column: 12, scope: !5325)
!5421 = !DILocation(line: 1766, column: 22, scope: !5325)
!5422 = !DILocation(line: 1766, column: 35, scope: !5325)
!5423 = !DILocation(line: 1766, column: 40, scope: !5325)
!5424 = !DILocation(line: 1767, column: 36, scope: !5325)
!5425 = !DILocation(line: 1767, column: 3, scope: !5325)
!5426 = !DILocation(line: 1767, column: 12, scope: !5325)
!5427 = !DILocation(line: 1767, column: 22, scope: !5325)
!5428 = !DILocation(line: 1767, column: 34, scope: !5325)
!5429 = !DILocation(line: 1769, column: 3, scope: !5325)
!5430 = !DILocation(line: 1769, column: 12, scope: !5325)
!5431 = !DILocation(line: 1769, column: 19, scope: !5325)
!5432 = !DILocation(line: 1769, column: 32, scope: !5325)
!5433 = !DILocation(line: 1771, column: 2, scope: !5325)
!5434 = !DILocation(line: 1773, column: 6, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !632, file: !1, line: 1773, column: 6)
!5436 = !DILocation(line: 1773, column: 15, scope: !5435)
!5437 = !DILocation(line: 1773, column: 22, scope: !5435)
!5438 = !DILocation(line: 1773, column: 6, scope: !632)
!5439 = !DILocation(line: 1774, column: 23, scope: !5435)
!5440 = !DILocation(line: 1774, column: 26, scope: !5435)
!5441 = !DILocation(line: 1774, column: 32, scope: !5435)
!5442 = !DILocation(line: 1774, column: 3, scope: !5435)
!5443 = !DILocation(line: 1776, column: 6, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !632, file: !1, line: 1776, column: 6)
!5445 = !DILocation(line: 1776, column: 15, scope: !5444)
!5446 = !DILocation(line: 1776, column: 22, scope: !5444)
!5447 = !DILocation(line: 1776, column: 6, scope: !632)
!5448 = !DILocation(line: 1777, column: 28, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !1, line: 1777, column: 7)
!5450 = distinct !DILexicalBlock(scope: !5444, file: !1, line: 1776, column: 30)
!5451 = !DILocation(line: 1777, column: 31, scope: !5449)
!5452 = !DILocation(line: 1777, column: 37, scope: !5449)
!5453 = !DILocation(line: 1777, column: 7, scope: !5449)
!5454 = !DILocation(line: 1777, column: 41, scope: !5449)
!5455 = !DILocation(line: 1777, column: 7, scope: !5450)
!5456 = !DILocation(line: 1778, column: 4, scope: !5449)
!5457 = !DILocation(line: 1779, column: 2, scope: !5450)
!5458 = !DILocation(line: 1780, column: 24, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !1, line: 1780, column: 7)
!5460 = distinct !DILexicalBlock(scope: !5444, file: !1, line: 1779, column: 9)
!5461 = !DILocation(line: 1780, column: 27, scope: !5459)
!5462 = !DILocation(line: 1780, column: 33, scope: !5459)
!5463 = !DILocation(line: 1780, column: 7, scope: !5459)
!5464 = !DILocation(line: 1780, column: 37, scope: !5459)
!5465 = !DILocation(line: 1780, column: 7, scope: !5460)
!5466 = !DILocation(line: 1781, column: 4, scope: !5459)
!5467 = !DILocation(line: 1782, column: 43, scope: !5460)
!5468 = !DILocation(line: 1782, column: 3, scope: !5460)
!5469 = !DILocation(line: 1782, column: 12, scope: !5460)
!5470 = !DILocation(line: 1782, column: 22, scope: !5460)
!5471 = !DILocation(line: 1782, column: 35, scope: !5460)
!5472 = !DILocation(line: 1782, column: 40, scope: !5460)
!5473 = !DILocation(line: 1785, column: 10, scope: !632)
!5474 = !DILocation(line: 1785, column: 2, scope: !632)
!5475 = !DILocation(line: 1786, column: 1, scope: !632)
!5476 = !DILocalVariable(name: "a", arg: 1, scope: !633, file: !1, line: 7505, type: !367)
!5477 = !DILocation(line: 7505, column: 43, scope: !633)
!5478 = !DILocalVariable(name: "buff", arg: 2, scope: !633, file: !1, line: 7505, type: !122)
!5479 = !DILocation(line: 7505, column: 58, scope: !633)
!5480 = !DILocalVariable(name: "s", arg: 3, scope: !633, file: !1, line: 7505, type: !23)
!5481 = !DILocation(line: 7505, column: 71, scope: !633)
!5482 = !DILocalVariable(name: "iso9660", scope: !633, file: !1, line: 7507, type: !530)
!5483 = !DILocation(line: 7507, column: 18, scope: !633)
!5484 = !DILocation(line: 7507, column: 28, scope: !633)
!5485 = !DILocation(line: 7507, column: 31, scope: !633)
!5486 = !DILocalVariable(name: "file", scope: !633, file: !1, line: 7508, type: !7)
!5487 = !DILocation(line: 7508, column: 18, scope: !633)
!5488 = !DILocation(line: 7508, column: 25, scope: !633)
!5489 = !DILocation(line: 7508, column: 34, scope: !633)
!5490 = !DILocalVariable(name: "p", scope: !633, file: !1, line: 7509, type: !453)
!5491 = !DILocation(line: 7509, column: 23, scope: !633)
!5492 = !DILocalVariable(name: "endp", scope: !633, file: !1, line: 7509, type: !453)
!5493 = !DILocation(line: 7509, column: 27, scope: !633)
!5494 = !DILocalVariable(name: "magic_buff", scope: !633, file: !1, line: 7510, type: !453)
!5495 = !DILocation(line: 7510, column: 23, scope: !633)
!5496 = !DILocalVariable(name: "uncompressed_size", scope: !633, file: !1, line: 7511, type: !42)
!5497 = !DILocation(line: 7511, column: 11, scope: !633)
!5498 = !DILocalVariable(name: "header_size", scope: !633, file: !1, line: 7512, type: !53)
!5499 = !DILocation(line: 7512, column: 16, scope: !633)
!5500 = !DILocalVariable(name: "log2_bs", scope: !633, file: !1, line: 7513, type: !53)
!5501 = !DILocation(line: 7513, column: 16, scope: !633)
!5502 = !DILocalVariable(name: "_ceil", scope: !633, file: !1, line: 7514, type: !23)
!5503 = !DILocation(line: 7514, column: 9, scope: !633)
!5504 = !DILocalVariable(name: "doff", scope: !633, file: !1, line: 7514, type: !23)
!5505 = !DILocation(line: 7514, column: 16, scope: !633)
!5506 = !DILocalVariable(name: "bst", scope: !633, file: !1, line: 7515, type: !42)
!5507 = !DILocation(line: 7515, column: 11, scope: !633)
!5508 = !DILocalVariable(name: "bed", scope: !633, file: !1, line: 7515, type: !42)
!5509 = !DILocation(line: 7515, column: 16, scope: !633)
!5510 = !DILocalVariable(name: "magic_max", scope: !633, file: !1, line: 7516, type: !31)
!5511 = !DILocation(line: 7516, column: 6, scope: !633)
!5512 = !DILocalVariable(name: "entry_size", scope: !633, file: !1, line: 7517, type: !36)
!5513 = !DILocation(line: 7517, column: 10, scope: !633)
!5514 = !DILocation(line: 7519, column: 34, scope: !633)
!5515 = !DILocation(line: 7519, column: 40, scope: !633)
!5516 = !DILocation(line: 7519, column: 15, scope: !633)
!5517 = !DILocation(line: 7519, column: 13, scope: !633)
!5518 = !DILocation(line: 7520, column: 54, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7520, column: 6)
!5520 = !DILocation(line: 7520, column: 52, scope: !5519)
!5521 = !DILocation(line: 7520, column: 6, scope: !633)
!5522 = !DILocation(line: 7521, column: 20, scope: !5519)
!5523 = !DILocation(line: 7521, column: 15, scope: !5519)
!5524 = !DILocation(line: 7521, column: 13, scope: !5519)
!5525 = !DILocation(line: 7521, column: 3, scope: !5519)
!5526 = !DILocation(line: 7523, column: 13, scope: !5519)
!5527 = !DILocation(line: 7525, column: 6, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7525, column: 6)
!5529 = !DILocation(line: 7525, column: 15, scope: !5528)
!5530 = !DILocation(line: 7525, column: 22, scope: !5528)
!5531 = !DILocation(line: 7525, column: 32, scope: !5528)
!5532 = !DILocation(line: 7525, column: 37, scope: !5528)
!5533 = !DILocation(line: 7525, column: 40, scope: !5534)
!5534 = !DILexicalBlockFile(scope: !5528, file: !1, discriminator: 1)
!5535 = !DILocation(line: 7525, column: 53, scope: !5534)
!5536 = !DILocation(line: 7525, column: 45, scope: !5534)
!5537 = !DILocation(line: 7525, column: 42, scope: !5534)
!5538 = !DILocation(line: 7525, column: 6, scope: !5534)
!5539 = !DILocation(line: 7527, column: 16, scope: !5528)
!5540 = !DILocation(line: 7527, column: 14, scope: !5528)
!5541 = !DILocation(line: 7527, column: 3, scope: !5528)
!5542 = !DILocation(line: 7529, column: 7, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !1, line: 7529, column: 7)
!5544 = distinct !DILexicalBlock(scope: !5528, file: !1, line: 7528, column: 7)
!5545 = !DILocation(line: 7529, column: 16, scope: !5543)
!5546 = !DILocation(line: 7529, column: 23, scope: !5543)
!5547 = !DILocation(line: 7529, column: 35, scope: !5543)
!5548 = !DILocation(line: 7529, column: 33, scope: !5543)
!5549 = !DILocation(line: 7529, column: 7, scope: !5544)
!5550 = !DILocalVariable(name: "l", scope: !5551, file: !1, line: 7530, type: !23)
!5551 = distinct !DILexicalBlock(scope: !5543, file: !1, line: 7529, column: 46)
!5552 = !DILocation(line: 7530, column: 11, scope: !5551)
!5553 = !DILocation(line: 7533, column: 10, scope: !5551)
!5554 = !DILocation(line: 7533, column: 19, scope: !5551)
!5555 = !DILocation(line: 7533, column: 26, scope: !5551)
!5556 = !DILocation(line: 7533, column: 8, scope: !5551)
!5557 = !DILocation(line: 7532, column: 6, scope: !5551)
!5558 = !DILocation(line: 7534, column: 8, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5551, file: !1, line: 7534, column: 8)
!5560 = !DILocation(line: 7534, column: 12, scope: !5559)
!5561 = !DILocation(line: 7534, column: 10, scope: !5559)
!5562 = !DILocation(line: 7534, column: 8, scope: !5551)
!5563 = !DILocation(line: 7535, column: 9, scope: !5559)
!5564 = !DILocation(line: 7535, column: 7, scope: !5559)
!5565 = !DILocation(line: 7535, column: 5, scope: !5559)
!5566 = !DILocation(line: 7536, column: 11, scope: !5551)
!5567 = !DILocation(line: 7536, column: 20, scope: !5551)
!5568 = !DILocation(line: 7536, column: 27, scope: !5551)
!5569 = !DILocation(line: 7537, column: 10, scope: !5551)
!5570 = !DILocation(line: 7537, column: 19, scope: !5551)
!5571 = !DILocation(line: 7537, column: 26, scope: !5551)
!5572 = !DILocation(line: 7537, column: 8, scope: !5551)
!5573 = !DILocation(line: 7537, column: 37, scope: !5551)
!5574 = !DILocation(line: 7537, column: 43, scope: !5551)
!5575 = !DILocation(line: 7536, column: 4, scope: !5551)
!5576 = !DILocation(line: 7538, column: 38, scope: !5551)
!5577 = !DILocation(line: 7538, column: 33, scope: !5551)
!5578 = !DILocation(line: 7538, column: 4, scope: !5551)
!5579 = !DILocation(line: 7538, column: 13, scope: !5551)
!5580 = !DILocation(line: 7538, column: 20, scope: !5551)
!5581 = !DILocation(line: 7538, column: 30, scope: !5551)
!5582 = !DILocation(line: 7539, column: 8, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5551, file: !1, line: 7539, column: 8)
!5584 = !DILocation(line: 7539, column: 17, scope: !5583)
!5585 = !DILocation(line: 7539, column: 24, scope: !5583)
!5586 = !DILocation(line: 7539, column: 36, scope: !5583)
!5587 = !DILocation(line: 7539, column: 34, scope: !5583)
!5588 = !DILocation(line: 7539, column: 8, scope: !5551)
!5589 = !DILocation(line: 7540, column: 5, scope: !5583)
!5590 = !DILocation(line: 7541, column: 3, scope: !5551)
!5591 = !DILocation(line: 7542, column: 16, scope: !5544)
!5592 = !DILocation(line: 7542, column: 25, scope: !5544)
!5593 = !DILocation(line: 7542, column: 32, scope: !5544)
!5594 = !DILocation(line: 7542, column: 14, scope: !5544)
!5595 = !DILocation(line: 7544, column: 2, scope: !633)
!5596 = !DILocation(line: 7544, column: 11, scope: !633)
!5597 = !DILocation(line: 7544, column: 18, scope: !633)
!5598 = !DILocation(line: 7544, column: 31, scope: !633)
!5599 = !DILocation(line: 7545, column: 6, scope: !633)
!5600 = !DILocation(line: 7545, column: 4, scope: !633)
!5601 = !DILocation(line: 7548, column: 13, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7548, column: 6)
!5603 = !DILocation(line: 7548, column: 6, scope: !5602)
!5604 = !DILocation(line: 7548, column: 52, scope: !5602)
!5605 = !DILocation(line: 7548, column: 6, scope: !633)
!5606 = !DILocation(line: 7550, column: 3, scope: !5602)
!5607 = !DILocation(line: 7551, column: 4, scope: !633)
!5608 = !DILocation(line: 7554, column: 38, scope: !633)
!5609 = !DILocation(line: 7554, column: 22, scope: !633)
!5610 = !DILocation(line: 7554, column: 20, scope: !633)
!5611 = !DILocation(line: 7555, column: 16, scope: !633)
!5612 = !DILocation(line: 7555, column: 14, scope: !633)
!5613 = !DILocation(line: 7556, column: 12, scope: !633)
!5614 = !DILocation(line: 7556, column: 10, scope: !633)
!5615 = !DILocation(line: 7557, column: 6, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7557, column: 6)
!5617 = !DILocation(line: 7557, column: 24, scope: !5616)
!5618 = !DILocation(line: 7557, column: 29, scope: !5616)
!5619 = !DILocation(line: 7557, column: 32, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5616, file: !1, discriminator: 1)
!5621 = !DILocation(line: 7557, column: 44, scope: !5620)
!5622 = !DILocation(line: 7557, column: 49, scope: !5620)
!5623 = !DILocation(line: 7558, column: 6, scope: !5616)
!5624 = !DILocation(line: 7558, column: 14, scope: !5616)
!5625 = !DILocation(line: 7558, column: 19, scope: !5616)
!5626 = !DILocation(line: 7558, column: 22, scope: !5620)
!5627 = !DILocation(line: 7558, column: 30, scope: !5620)
!5628 = !DILocation(line: 7557, column: 6, scope: !5629)
!5629 = !DILexicalBlockFile(scope: !633, file: !1, discriminator: 2)
!5630 = !DILocation(line: 7559, column: 3, scope: !5616)
!5631 = !DILocation(line: 7562, column: 11, scope: !633)
!5632 = !DILocation(line: 7563, column: 36, scope: !633)
!5633 = !DILocation(line: 7563, column: 33, scope: !633)
!5634 = !DILocation(line: 7562, column: 29, scope: !633)
!5635 = !DILocation(line: 7563, column: 45, scope: !633)
!5636 = !DILocation(line: 7563, column: 52, scope: !633)
!5637 = !DILocation(line: 7563, column: 49, scope: !633)
!5638 = !DILocation(line: 7562, column: 8, scope: !633)
!5639 = !DILocation(line: 7564, column: 10, scope: !633)
!5640 = !DILocation(line: 7564, column: 16, scope: !633)
!5641 = !DILocation(line: 7564, column: 21, scope: !633)
!5642 = !DILocation(line: 7564, column: 25, scope: !633)
!5643 = !DILocation(line: 7564, column: 7, scope: !633)
!5644 = !DILocation(line: 7565, column: 6, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7565, column: 6)
!5646 = !DILocation(line: 7565, column: 28, scope: !5645)
!5647 = !DILocation(line: 7565, column: 17, scope: !5645)
!5648 = !DILocation(line: 7565, column: 6, scope: !633)
!5649 = !DILocation(line: 7566, column: 3, scope: !5645)
!5650 = !DILocation(line: 7569, column: 6, scope: !633)
!5651 = !DILocation(line: 7569, column: 17, scope: !633)
!5652 = !DILocation(line: 7569, column: 4, scope: !633)
!5653 = !DILocation(line: 7570, column: 9, scope: !633)
!5654 = !DILocation(line: 7570, column: 22, scope: !633)
!5655 = !DILocation(line: 7570, column: 20, scope: !633)
!5656 = !DILocation(line: 7570, column: 7, scope: !633)
!5657 = !DILocation(line: 7571, column: 2, scope: !633)
!5658 = !DILocation(line: 7571, column: 9, scope: !5659)
!5659 = !DILexicalBlockFile(scope: !633, file: !1, discriminator: 1)
!5660 = !DILocation(line: 7571, column: 15, scope: !5659)
!5661 = !DILocation(line: 7571, column: 18, scope: !5629)
!5662 = !DILocation(line: 7571, column: 20, scope: !5629)
!5663 = !DILocation(line: 7571, column: 27, scope: !5629)
!5664 = !DILocation(line: 7571, column: 24, scope: !5629)
!5665 = !DILocation(line: 7571, column: 2, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !633, file: !1, discriminator: 3)
!5667 = !DILocation(line: 7572, column: 25, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !633, file: !1, line: 7571, column: 33)
!5669 = !DILocation(line: 7572, column: 9, scope: !5668)
!5670 = !DILocation(line: 7572, column: 7, scope: !5668)
!5671 = !DILocation(line: 7573, column: 7, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !1, line: 7573, column: 7)
!5673 = !DILocation(line: 7573, column: 14, scope: !5672)
!5674 = !DILocation(line: 7573, column: 11, scope: !5672)
!5675 = !DILocation(line: 7573, column: 7, scope: !5668)
!5676 = !DILocation(line: 7574, column: 4, scope: !5672)
!5677 = !DILocation(line: 7575, column: 5, scope: !5668)
!5678 = !DILocation(line: 7576, column: 25, scope: !5668)
!5679 = !DILocation(line: 7576, column: 9, scope: !5668)
!5680 = !DILocation(line: 7576, column: 7, scope: !5668)
!5681 = !DILocation(line: 7577, column: 7, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5668, file: !1, line: 7577, column: 7)
!5683 = !DILocation(line: 7577, column: 13, scope: !5682)
!5684 = !DILocation(line: 7577, column: 11, scope: !5682)
!5685 = !DILocation(line: 7577, column: 17, scope: !5682)
!5686 = !DILocation(line: 7577, column: 20, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !5682, file: !1, discriminator: 1)
!5688 = !DILocation(line: 7577, column: 26, scope: !5687)
!5689 = !DILocation(line: 7577, column: 24, scope: !5687)
!5690 = !DILocation(line: 7577, column: 7, scope: !5687)
!5691 = !DILocation(line: 7578, column: 4, scope: !5682)
!5692 = !DILocation(line: 7579, column: 11, scope: !5668)
!5693 = !DILocation(line: 7579, column: 17, scope: !5668)
!5694 = !DILocation(line: 7579, column: 15, scope: !5668)
!5695 = !DILocation(line: 7579, column: 8, scope: !5668)
!5696 = !DILocation(line: 7580, column: 8, scope: !5668)
!5697 = !DILocation(line: 7571, column: 2, scope: !5698)
!5698 = !DILexicalBlockFile(scope: !633, file: !1, discriminator: 4)
!5699 = !DILocation(line: 7583, column: 35, scope: !633)
!5700 = !DILocation(line: 7583, column: 2, scope: !633)
!5701 = !DILocation(line: 7583, column: 8, scope: !633)
!5702 = !DILocation(line: 7583, column: 15, scope: !633)
!5703 = !DILocation(line: 7583, column: 33, scope: !633)
!5704 = !DILocation(line: 7584, column: 29, scope: !633)
!5705 = !DILocation(line: 7584, column: 2, scope: !633)
!5706 = !DILocation(line: 7584, column: 8, scope: !633)
!5707 = !DILocation(line: 7584, column: 15, scope: !633)
!5708 = !DILocation(line: 7584, column: 27, scope: !633)
!5709 = !DILocation(line: 7585, column: 25, scope: !633)
!5710 = !DILocation(line: 7585, column: 2, scope: !633)
!5711 = !DILocation(line: 7585, column: 8, scope: !633)
!5712 = !DILocation(line: 7585, column: 15, scope: !633)
!5713 = !DILocation(line: 7585, column: 23, scope: !633)
!5714 = !DILocation(line: 7588, column: 2, scope: !633)
!5715 = !DILocation(line: 7588, column: 11, scope: !633)
!5716 = !DILocation(line: 7588, column: 18, scope: !633)
!5717 = !DILocation(line: 7588, column: 25, scope: !633)
!5718 = !DILocation(line: 7589, column: 1, scope: !633)
!5719 = !DILocation(line: 7589, column: 1, scope: !5659)
!5720 = !DILocalVariable(name: "a", arg: 1, scope: !639, file: !1, line: 7597, type: !367)
!5721 = !DILocation(line: 7597, column: 44, scope: !639)
!5722 = !DILocalVariable(name: "buff", arg: 2, scope: !639, file: !1, line: 7597, type: !122)
!5723 = !DILocation(line: 7597, column: 59, scope: !639)
!5724 = !DILocalVariable(name: "s", arg: 3, scope: !639, file: !1, line: 7597, type: !23)
!5725 = !DILocation(line: 7597, column: 72, scope: !639)
!5726 = !DILocalVariable(name: "iso9660", scope: !639, file: !1, line: 7599, type: !530)
!5727 = !DILocation(line: 7599, column: 18, scope: !639)
!5728 = !DILocation(line: 7599, column: 28, scope: !639)
!5729 = !DILocation(line: 7599, column: 31, scope: !639)
!5730 = !DILocalVariable(name: "file", scope: !639, file: !1, line: 7600, type: !7)
!5731 = !DILocation(line: 7600, column: 18, scope: !639)
!5732 = !DILocation(line: 7600, column: 25, scope: !639)
!5733 = !DILocation(line: 7600, column: 34, scope: !639)
!5734 = !DILocalVariable(name: "b", scope: !639, file: !1, line: 7601, type: !453)
!5735 = !DILocation(line: 7601, column: 23, scope: !639)
!5736 = !DILocalVariable(name: "zstrm", scope: !639, file: !1, line: 7602, type: !5737)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!5738 = !DILocation(line: 7602, column: 12, scope: !639)
!5739 = !DILocalVariable(name: "avail", scope: !639, file: !1, line: 7603, type: !23)
!5740 = !DILocation(line: 7603, column: 9, scope: !639)
!5741 = !DILocalVariable(name: "csize", scope: !639, file: !1, line: 7603, type: !23)
!5742 = !DILocation(line: 7603, column: 16, scope: !639)
!5743 = !DILocalVariable(name: "flush", scope: !639, file: !1, line: 7604, type: !31)
!5744 = !DILocation(line: 7604, column: 6, scope: !639)
!5745 = !DILocalVariable(name: "r", scope: !639, file: !1, line: 7604, type: !31)
!5746 = !DILocation(line: 7604, column: 13, scope: !639)
!5747 = !DILocation(line: 7606, column: 12, scope: !639)
!5748 = !DILocation(line: 7606, column: 21, scope: !639)
!5749 = !DILocation(line: 7606, column: 28, scope: !639)
!5750 = !DILocation(line: 7606, column: 8, scope: !639)
!5751 = !DILocation(line: 7607, column: 31, scope: !639)
!5752 = !DILocation(line: 7607, column: 20, scope: !639)
!5753 = !DILocation(line: 7607, column: 2, scope: !639)
!5754 = !DILocation(line: 7607, column: 9, scope: !639)
!5755 = !DILocation(line: 7607, column: 18, scope: !639)
!5756 = !DILocation(line: 7608, column: 27, scope: !639)
!5757 = !DILocation(line: 7608, column: 21, scope: !639)
!5758 = !DILocation(line: 7608, column: 2, scope: !639)
!5759 = !DILocation(line: 7608, column: 9, scope: !639)
!5760 = !DILocation(line: 7608, column: 19, scope: !639)
!5761 = !DILocation(line: 7609, column: 29, scope: !639)
!5762 = !DILocation(line: 7609, column: 4, scope: !639)
!5763 = !DILocation(line: 7610, column: 2, scope: !639)
!5764 = !DILocation(line: 7611, column: 27, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !639, file: !1, line: 7610, column: 5)
!5766 = !DILocation(line: 7611, column: 34, scope: !5765)
!5767 = !DILocation(line: 7611, column: 25, scope: !5765)
!5768 = !DILocation(line: 7611, column: 9, scope: !5765)
!5769 = !DILocation(line: 7612, column: 7, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7612, column: 7)
!5771 = !DILocation(line: 7612, column: 11, scope: !5770)
!5772 = !DILocation(line: 7612, column: 9, scope: !5770)
!5773 = !DILocation(line: 7612, column: 7, scope: !5765)
!5774 = !DILocation(line: 7613, column: 12, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5770, file: !1, line: 7612, column: 18)
!5776 = !DILocation(line: 7613, column: 10, scope: !5775)
!5777 = !DILocation(line: 7614, column: 10, scope: !5775)
!5778 = !DILocation(line: 7615, column: 3, scope: !5775)
!5779 = !DILocation(line: 7616, column: 10, scope: !5770)
!5780 = !DILocation(line: 7617, column: 32, scope: !5765)
!5781 = !DILocation(line: 7617, column: 3, scope: !5765)
!5782 = !DILocation(line: 7617, column: 12, scope: !5765)
!5783 = !DILocation(line: 7617, column: 19, scope: !5765)
!5784 = !DILocation(line: 7617, column: 29, scope: !5765)
!5785 = !DILocation(line: 7618, column: 7, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7618, column: 7)
!5787 = !DILocation(line: 7618, column: 16, scope: !5786)
!5788 = !DILocation(line: 7618, column: 23, scope: !5786)
!5789 = !DILocation(line: 7618, column: 33, scope: !5786)
!5790 = !DILocation(line: 7618, column: 7, scope: !5765)
!5791 = !DILocation(line: 7619, column: 10, scope: !5786)
!5792 = !DILocation(line: 7619, column: 4, scope: !5786)
!5793 = !DILocation(line: 7621, column: 54, scope: !5765)
!5794 = !DILocation(line: 7621, column: 29, scope: !5765)
!5795 = !DILocation(line: 7621, column: 20, scope: !5765)
!5796 = !DILocation(line: 7621, column: 3, scope: !5765)
!5797 = !DILocation(line: 7621, column: 10, scope: !5765)
!5798 = !DILocation(line: 7621, column: 18, scope: !5765)
!5799 = !DILocation(line: 7622, column: 27, scope: !5765)
!5800 = !DILocation(line: 7622, column: 21, scope: !5765)
!5801 = !DILocation(line: 7622, column: 3, scope: !5765)
!5802 = !DILocation(line: 7622, column: 10, scope: !5765)
!5803 = !DILocation(line: 7622, column: 19, scope: !5765)
!5804 = !DILocation(line: 7627, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7627, column: 7)
!5806 = !DILocation(line: 7627, column: 16, scope: !5805)
!5807 = !DILocation(line: 7627, column: 23, scope: !5805)
!5808 = !DILocation(line: 7627, column: 7, scope: !5765)
!5809 = !DILocalVariable(name: "nonzero", scope: !5810, file: !1, line: 7628, type: !453)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !1, line: 7627, column: 32)
!5811 = !DILocation(line: 7628, column: 25, scope: !5810)
!5812 = !DILocation(line: 7628, column: 35, scope: !5810)
!5813 = !DILocalVariable(name: "nonzeroend", scope: !5810, file: !1, line: 7629, type: !453)
!5814 = !DILocation(line: 7629, column: 25, scope: !5810)
!5815 = !DILocation(line: 7629, column: 38, scope: !5810)
!5816 = !DILocation(line: 7629, column: 42, scope: !5810)
!5817 = !DILocation(line: 7629, column: 40, scope: !5810)
!5818 = !DILocation(line: 7631, column: 4, scope: !5810)
!5819 = !DILocation(line: 7631, column: 11, scope: !5820)
!5820 = !DILexicalBlockFile(scope: !5810, file: !1, discriminator: 1)
!5821 = !DILocation(line: 7631, column: 21, scope: !5820)
!5822 = !DILocation(line: 7631, column: 19, scope: !5820)
!5823 = !DILocation(line: 7631, column: 4, scope: !5820)
!5824 = !DILocation(line: 7632, column: 17, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5810, file: !1, line: 7632, column: 9)
!5826 = !DILocation(line: 7632, column: 9, scope: !5825)
!5827 = !DILocation(line: 7632, column: 9, scope: !5810)
!5828 = !DILocation(line: 7633, column: 6, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !1, line: 7632, column: 21)
!5830 = !DILocation(line: 7633, column: 15, scope: !5829)
!5831 = !DILocation(line: 7633, column: 22, scope: !5829)
!5832 = !DILocation(line: 7633, column: 30, scope: !5829)
!5833 = !DILocation(line: 7634, column: 6, scope: !5829)
!5834 = !DILocation(line: 7631, column: 4, scope: !5835)
!5835 = !DILexicalBlockFile(scope: !5810, file: !1, discriminator: 2)
!5836 = !DILocation(line: 7636, column: 3, scope: !5810)
!5837 = !DILocation(line: 7637, column: 8, scope: !5765)
!5838 = !DILocation(line: 7637, column: 5, scope: !5765)
!5839 = !DILocation(line: 7638, column: 8, scope: !5765)
!5840 = !DILocation(line: 7638, column: 5, scope: !5765)
!5841 = !DILocation(line: 7644, column: 7, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7644, column: 7)
!5843 = !DILocation(line: 7644, column: 13, scope: !5842)
!5844 = !DILocation(line: 7644, column: 25, scope: !5842)
!5845 = !DILocation(line: 7644, column: 28, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5842, file: !1, discriminator: 1)
!5847 = !DILocation(line: 7644, column: 37, scope: !5846)
!5848 = !DILocation(line: 7644, column: 44, scope: !5846)
!5849 = !DILocation(line: 7644, column: 52, scope: !5846)
!5850 = !DILocation(line: 7645, column: 7, scope: !5842)
!5851 = !DILocation(line: 7645, column: 15, scope: !5842)
!5852 = !DILocation(line: 7645, column: 22, scope: !5842)
!5853 = !DILocation(line: 7645, column: 13, scope: !5842)
!5854 = !DILocation(line: 7645, column: 31, scope: !5842)
!5855 = !DILocation(line: 7644, column: 7, scope: !5856)
!5856 = !DILexicalBlockFile(scope: !5765, file: !1, discriminator: 2)
!5857 = !DILocation(line: 7646, column: 8, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 7646, column: 8)
!5859 = distinct !DILexicalBlock(scope: !5842, file: !1, line: 7645, column: 49)
!5860 = !DILocation(line: 7646, column: 17, scope: !5858)
!5861 = !DILocation(line: 7646, column: 24, scope: !5858)
!5862 = !DILocation(line: 7647, column: 8, scope: !5858)
!5863 = !DILocation(line: 7647, column: 14, scope: !5858)
!5864 = !DILocation(line: 7647, column: 27, scope: !5858)
!5865 = !DILocation(line: 7646, column: 37, scope: !5858)
!5866 = !DILocation(line: 7646, column: 8, scope: !5859)
!5867 = !DILocalVariable(name: "diff", scope: !5868, file: !1, line: 7648, type: !36)
!5868 = distinct !DILexicalBlock(scope: !5858, file: !1, line: 7647, column: 33)
!5869 = !DILocation(line: 7648, column: 13, scope: !5868)
!5870 = !DILocation(line: 7650, column: 23, scope: !5868)
!5871 = !DILocation(line: 7651, column: 9, scope: !5868)
!5872 = !DILocation(line: 7651, column: 15, scope: !5868)
!5873 = !DILocation(line: 7651, column: 28, scope: !5868)
!5874 = !DILocation(line: 7652, column: 13, scope: !5868)
!5875 = !DILocation(line: 7652, column: 22, scope: !5868)
!5876 = !DILocation(line: 7652, column: 29, scope: !5868)
!5877 = !DILocation(line: 7651, column: 43, scope: !5868)
!5878 = !DILocation(line: 7650, column: 9, scope: !5868)
!5879 = !DILocation(line: 7650, column: 7, scope: !5868)
!5880 = !DILocation(line: 7653, column: 9, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5868, file: !1, line: 7653, column: 9)
!5882 = !DILocation(line: 7653, column: 11, scope: !5881)
!5883 = !DILocation(line: 7653, column: 9, scope: !5868)
!5884 = !DILocation(line: 7654, column: 14, scope: !5881)
!5885 = !DILocation(line: 7654, column: 6, scope: !5881)
!5886 = !DILocation(line: 7655, column: 12, scope: !5868)
!5887 = !DILocation(line: 7655, column: 18, scope: !5868)
!5888 = !DILocation(line: 7655, column: 31, scope: !5868)
!5889 = !DILocation(line: 7656, column: 9, scope: !5868)
!5890 = !DILocation(line: 7656, column: 18, scope: !5868)
!5891 = !DILocation(line: 7656, column: 25, scope: !5868)
!5892 = !DILocation(line: 7655, column: 36, scope: !5868)
!5893 = !DILocation(line: 7655, column: 10, scope: !5868)
!5894 = !DILocation(line: 7657, column: 32, scope: !5868)
!5895 = !DILocation(line: 7657, column: 5, scope: !5868)
!5896 = !DILocation(line: 7657, column: 11, scope: !5868)
!5897 = !DILocation(line: 7657, column: 24, scope: !5868)
!5898 = !DILocation(line: 7657, column: 29, scope: !5868)
!5899 = !DILocation(line: 7658, column: 35, scope: !5868)
!5900 = !DILocation(line: 7658, column: 5, scope: !5868)
!5901 = !DILocation(line: 7658, column: 14, scope: !5868)
!5902 = !DILocation(line: 7658, column: 21, scope: !5868)
!5903 = !DILocation(line: 7658, column: 32, scope: !5868)
!5904 = !DILocation(line: 7659, column: 4, scope: !5868)
!5905 = !DILocation(line: 7660, column: 4, scope: !5859)
!5906 = !DILocation(line: 7660, column: 11, scope: !5859)
!5907 = !DILocation(line: 7660, column: 20, scope: !5859)
!5908 = !DILocation(line: 7661, column: 3, scope: !5859)
!5909 = !DILocation(line: 7666, column: 3, scope: !5765)
!5910 = !DILocation(line: 7666, column: 10, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5765, file: !1, discriminator: 1)
!5912 = !DILocation(line: 7666, column: 17, scope: !5911)
!5913 = !DILocation(line: 7666, column: 26, scope: !5911)
!5914 = !DILocation(line: 7666, column: 3, scope: !5911)
!5915 = !DILocation(line: 7667, column: 12, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7666, column: 31)
!5917 = !DILocation(line: 7667, column: 19, scope: !5916)
!5918 = !DILocation(line: 7667, column: 10, scope: !5916)
!5919 = !DILocation(line: 7668, column: 16, scope: !5916)
!5920 = !DILocation(line: 7668, column: 23, scope: !5916)
!5921 = !DILocation(line: 7668, column: 8, scope: !5916)
!5922 = !DILocation(line: 7668, column: 6, scope: !5916)
!5923 = !DILocation(line: 7669, column: 12, scope: !5916)
!5924 = !DILocation(line: 7669, column: 4, scope: !5916)
!5925 = !DILocation(line: 7672, column: 13, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5916, file: !1, line: 7669, column: 15)
!5927 = !DILocation(line: 7672, column: 20, scope: !5926)
!5928 = !DILocation(line: 7672, column: 32, scope: !5926)
!5929 = !DILocation(line: 7672, column: 30, scope: !5926)
!5930 = !DILocation(line: 7672, column: 11, scope: !5926)
!5931 = !DILocation(line: 7673, column: 20, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5926, file: !1, line: 7673, column: 9)
!5933 = !DILocation(line: 7673, column: 23, scope: !5932)
!5934 = !DILocation(line: 7673, column: 9, scope: !5932)
!5935 = !DILocation(line: 7673, column: 30, scope: !5932)
!5936 = !DILocation(line: 7673, column: 9, scope: !5926)
!5937 = !DILocation(line: 7674, column: 6, scope: !5932)
!5938 = !DILocation(line: 7675, column: 35, scope: !5926)
!5939 = !DILocation(line: 7675, column: 5, scope: !5926)
!5940 = !DILocation(line: 7675, column: 14, scope: !5926)
!5941 = !DILocation(line: 7675, column: 21, scope: !5926)
!5942 = !DILocation(line: 7675, column: 32, scope: !5926)
!5943 = !DILocation(line: 7676, column: 45, scope: !5926)
!5944 = !DILocation(line: 7676, column: 5, scope: !5926)
!5945 = !DILocation(line: 7676, column: 14, scope: !5926)
!5946 = !DILocation(line: 7676, column: 24, scope: !5926)
!5947 = !DILocation(line: 7676, column: 37, scope: !5926)
!5948 = !DILocation(line: 7676, column: 42, scope: !5926)
!5949 = !DILocation(line: 7677, column: 34, scope: !5926)
!5950 = !DILocation(line: 7677, column: 23, scope: !5926)
!5951 = !DILocation(line: 7677, column: 5, scope: !5926)
!5952 = !DILocation(line: 7677, column: 12, scope: !5926)
!5953 = !DILocation(line: 7677, column: 21, scope: !5926)
!5954 = !DILocation(line: 7678, column: 30, scope: !5926)
!5955 = !DILocation(line: 7678, column: 24, scope: !5926)
!5956 = !DILocation(line: 7678, column: 5, scope: !5926)
!5957 = !DILocation(line: 7678, column: 12, scope: !5926)
!5958 = !DILocation(line: 7678, column: 22, scope: !5926)
!5959 = !DILocation(line: 7679, column: 5, scope: !5926)
!5960 = !DILocation(line: 7681, column: 24, scope: !5926)
!5961 = !DILocation(line: 7681, column: 27, scope: !5926)
!5962 = !DILocation(line: 7685, column: 9, scope: !5926)
!5963 = !DILocation(line: 7681, column: 5, scope: !5926)
!5964 = !DILocation(line: 7686, column: 5, scope: !5926)
!5965 = !DILocation(line: 7666, column: 3, scope: !5856)
!5966 = !DILocation(line: 7690, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 7690, column: 7)
!5968 = !DILocation(line: 7690, column: 13, scope: !5967)
!5969 = !DILocation(line: 7690, column: 7, scope: !5765)
!5970 = !DILocation(line: 7694, column: 4, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !1, line: 7690, column: 26)
!5972 = !DILocation(line: 7694, column: 13, scope: !5971)
!5973 = !DILocation(line: 7694, column: 20, scope: !5971)
!5974 = !DILocation(line: 7694, column: 39, scope: !5971)
!5975 = !DILocation(line: 7696, column: 8, scope: !5971)
!5976 = !DILocation(line: 7696, column: 17, scope: !5971)
!5977 = !DILocation(line: 7696, column: 24, scope: !5971)
!5978 = !DILocation(line: 7695, column: 22, scope: !5971)
!5979 = !DILocation(line: 7695, column: 31, scope: !5971)
!5980 = !DILocation(line: 7695, column: 38, scope: !5971)
!5981 = !DILocation(line: 7695, column: 20, scope: !5971)
!5982 = !DILocation(line: 7697, column: 15, scope: !5971)
!5983 = !DILocation(line: 7697, column: 24, scope: !5971)
!5984 = !DILocation(line: 7697, column: 31, scope: !5971)
!5985 = !DILocation(line: 7697, column: 5, scope: !5971)
!5986 = !DILocation(line: 7695, column: 4, scope: !5971)
!5987 = !DILocation(line: 7698, column: 28, scope: !5971)
!5988 = !DILocation(line: 7698, column: 8, scope: !5971)
!5989 = !DILocation(line: 7698, column: 6, scope: !5971)
!5990 = !DILocation(line: 7699, column: 8, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5971, file: !1, line: 7699, column: 8)
!5992 = !DILocation(line: 7699, column: 10, scope: !5991)
!5993 = !DILocation(line: 7699, column: 8, scope: !5971)
!5994 = !DILocation(line: 7700, column: 5, scope: !5991)
!5995 = !DILocation(line: 7701, column: 4, scope: !5971)
!5996 = !DILocation(line: 7701, column: 13, scope: !5971)
!5997 = !DILocation(line: 7701, column: 20, scope: !5971)
!5998 = !DILocation(line: 7701, column: 28, scope: !5971)
!5999 = !DILocation(line: 7702, column: 35, scope: !5971)
!6000 = !DILocation(line: 7702, column: 41, scope: !5971)
!6001 = !DILocation(line: 7702, column: 54, scope: !5971)
!6002 = !DILocation(line: 7702, column: 4, scope: !5971)
!6003 = !DILocation(line: 7702, column: 13, scope: !5971)
!6004 = !DILocation(line: 7702, column: 20, scope: !5971)
!6005 = !DILocation(line: 7702, column: 33, scope: !5971)
!6006 = !DILocation(line: 7703, column: 3, scope: !5971)
!6007 = !DILocation(line: 7704, column: 2, scope: !5765)
!6008 = !DILocation(line: 7704, column: 11, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !639, file: !1, discriminator: 1)
!6010 = !DILocation(line: 7704, column: 2, scope: !6009)
!6011 = !DILocation(line: 7706, column: 2, scope: !639)
!6012 = !DILocation(line: 7707, column: 1, scope: !639)
!6013 = !DILocalVariable(name: "a", arg: 1, scope: !643, file: !1, line: 1661, type: !367)
!6014 = !DILocation(line: 1661, column: 40, scope: !643)
!6015 = !DILocalVariable(name: "buff", arg: 2, scope: !643, file: !1, line: 1661, type: !122)
!6016 = !DILocation(line: 1661, column: 55, scope: !643)
!6017 = !DILocalVariable(name: "s", arg: 3, scope: !643, file: !1, line: 1661, type: !23)
!6018 = !DILocation(line: 1661, column: 68, scope: !643)
!6019 = !DILocalVariable(name: "xp", scope: !643, file: !1, line: 1663, type: !429)
!6020 = !DILocation(line: 1663, column: 14, scope: !643)
!6021 = !DILocation(line: 1663, column: 19, scope: !643)
!6022 = !DILocalVariable(name: "xs", scope: !643, file: !1, line: 1664, type: !23)
!6023 = !DILocation(line: 1664, column: 9, scope: !643)
!6024 = !DILocation(line: 1664, column: 14, scope: !643)
!6025 = !DILocation(line: 1671, column: 6, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !643, file: !1, line: 1671, column: 6)
!6027 = !DILocation(line: 1671, column: 22, scope: !6026)
!6028 = !DILocation(line: 1671, column: 38, scope: !6026)
!6029 = !DILocation(line: 1671, column: 41, scope: !6030)
!6030 = !DILexicalBlockFile(scope: !6026, file: !1, discriminator: 1)
!6031 = !DILocation(line: 1671, column: 43, scope: !6030)
!6032 = !DILocation(line: 1671, column: 6, scope: !6030)
!6033 = !DILocalVariable(name: "iso9660", scope: !6034, file: !1, line: 1672, type: !530)
!6034 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 1671, column: 58)
!6035 = !DILocation(line: 1672, column: 19, scope: !6034)
!6036 = !DILocation(line: 1672, column: 47, scope: !6034)
!6037 = !DILocation(line: 1672, column: 50, scope: !6034)
!6038 = !DILocation(line: 1672, column: 29, scope: !6034)
!6039 = !DILocation(line: 1673, column: 8, scope: !6034)
!6040 = !DILocation(line: 1673, column: 10, scope: !6034)
!6041 = !DILocation(line: 1673, column: 6, scope: !6034)
!6042 = !DILocation(line: 1674, column: 28, scope: !6034)
!6043 = !DILocation(line: 1674, column: 32, scope: !6034)
!6044 = !DILocation(line: 1674, column: 30, scope: !6034)
!6045 = !DILocation(line: 1674, column: 3, scope: !6034)
!6046 = !DILocation(line: 1674, column: 12, scope: !6034)
!6047 = !DILocation(line: 1674, column: 25, scope: !6034)
!6048 = !DILocation(line: 1675, column: 21, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6034, file: !1, line: 1675, column: 7)
!6050 = !DILocation(line: 1675, column: 24, scope: !6049)
!6051 = !DILocation(line: 1675, column: 30, scope: !6049)
!6052 = !DILocation(line: 1675, column: 34, scope: !6049)
!6053 = !DILocation(line: 1675, column: 32, scope: !6049)
!6054 = !DILocation(line: 1675, column: 7, scope: !6049)
!6055 = !DILocation(line: 1675, column: 38, scope: !6049)
!6056 = !DILocation(line: 1675, column: 7, scope: !6034)
!6057 = !DILocation(line: 1676, column: 4, scope: !6049)
!6058 = !DILocation(line: 1677, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6034, file: !1, line: 1677, column: 7)
!6060 = !DILocation(line: 1677, column: 10, scope: !6059)
!6061 = !DILocation(line: 1677, column: 7, scope: !6034)
!6062 = !DILocation(line: 1678, column: 4, scope: !6059)
!6063 = !DILocation(line: 1679, column: 9, scope: !6034)
!6064 = !DILocation(line: 1679, column: 13, scope: !6034)
!6065 = !DILocation(line: 1679, column: 11, scope: !6034)
!6066 = !DILocation(line: 1679, column: 6, scope: !6034)
!6067 = !DILocation(line: 1680, column: 2, scope: !6034)
!6068 = !DILocation(line: 1682, column: 2, scope: !643)
!6069 = !DILocation(line: 1682, column: 9, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !643, file: !1, discriminator: 1)
!6071 = !DILocation(line: 1682, column: 2, scope: !6070)
!6072 = !DILocalVariable(name: "size", scope: !6073, file: !1, line: 1683, type: !23)
!6073 = distinct !DILexicalBlock(scope: !643, file: !1, line: 1682, column: 13)
!6074 = !DILocation(line: 1683, column: 10, scope: !6073)
!6075 = !DILocation(line: 1683, column: 17, scope: !6073)
!6076 = !DILocation(line: 1684, column: 7, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6073, file: !1, line: 1684, column: 7)
!6078 = !DILocation(line: 1684, column: 14, scope: !6077)
!6079 = !DILocation(line: 1684, column: 12, scope: !6077)
!6080 = !DILocation(line: 1684, column: 7, scope: !6073)
!6081 = !DILocation(line: 1685, column: 11, scope: !6077)
!6082 = !DILocation(line: 1685, column: 9, scope: !6077)
!6083 = !DILocation(line: 1685, column: 4, scope: !6077)
!6084 = !DILocation(line: 1686, column: 21, scope: !6073)
!6085 = !DILocation(line: 1686, column: 10, scope: !6073)
!6086 = !DILocation(line: 1686, column: 25, scope: !6073)
!6087 = !DILocation(line: 1686, column: 29, scope: !6073)
!6088 = !DILocation(line: 1686, column: 3, scope: !6089)
!6089 = !DILexicalBlockFile(scope: !6073, file: !1, discriminator: 1)
!6090 = !DILocation(line: 1687, column: 18, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6073, file: !1, line: 1687, column: 7)
!6092 = !DILocation(line: 1687, column: 21, scope: !6091)
!6093 = !DILocation(line: 1687, column: 7, scope: !6091)
!6094 = !DILocation(line: 1687, column: 27, scope: !6091)
!6095 = !DILocation(line: 1687, column: 7, scope: !6073)
!6096 = !DILocation(line: 1688, column: 4, scope: !6091)
!6097 = !DILocation(line: 1689, column: 9, scope: !6073)
!6098 = !DILocation(line: 1689, column: 6, scope: !6073)
!6099 = !DILocation(line: 1690, column: 9, scope: !6073)
!6100 = !DILocation(line: 1690, column: 6, scope: !6073)
!6101 = !DILocation(line: 1682, column: 2, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !643, file: !1, discriminator: 2)
!6103 = !DILocation(line: 1692, column: 2, scope: !643)
!6104 = !DILocation(line: 1693, column: 1, scope: !643)
!6105 = !DILocalVariable(name: "a", arg: 1, scope: !644, file: !1, line: 1696, type: !367)
!6106 = !DILocation(line: 1696, column: 48, scope: !644)
!6107 = !DILocalVariable(name: "csize", arg: 2, scope: !644, file: !1, line: 1696, type: !36)
!6108 = !DILocation(line: 1696, column: 59, scope: !644)
!6109 = !DILocalVariable(name: "ns", scope: !644, file: !1, line: 1698, type: !23)
!6110 = !DILocation(line: 1698, column: 9, scope: !644)
!6111 = !DILocalVariable(name: "ret", scope: !644, file: !1, line: 1699, type: !31)
!6112 = !DILocation(line: 1699, column: 6, scope: !644)
!6113 = !DILocation(line: 1701, column: 16, scope: !644)
!6114 = !DILocation(line: 1701, column: 22, scope: !644)
!6115 = !DILocation(line: 1701, column: 5, scope: !644)
!6116 = !DILocation(line: 1702, column: 6, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !644, file: !1, line: 1702, column: 6)
!6118 = !DILocation(line: 1702, column: 9, scope: !6117)
!6119 = !DILocation(line: 1702, column: 6, scope: !644)
!6120 = !DILocation(line: 1703, column: 20, scope: !6117)
!6121 = !DILocation(line: 1703, column: 44, scope: !6117)
!6122 = !DILocation(line: 1703, column: 42, scope: !6117)
!6123 = !DILocation(line: 1703, column: 9, scope: !6117)
!6124 = !DILocation(line: 1703, column: 7, scope: !6117)
!6125 = !DILocation(line: 1703, column: 3, scope: !6117)
!6126 = !DILocation(line: 1705, column: 7, scope: !6117)
!6127 = !DILocation(line: 1706, column: 10, scope: !644)
!6128 = !DILocation(line: 1706, column: 2, scope: !644)
!6129 = !DILocalVariable(name: "pp", arg: 1, scope: !636, file: !628, line: 115, type: !122)
!6130 = !DILocation(line: 115, column: 29, scope: !636)
!6131 = !DILocalVariable(name: "p", scope: !636, file: !628, line: 117, type: !453)
!6132 = !DILocation(line: 117, column: 23, scope: !636)
!6133 = !DILocation(line: 117, column: 50, scope: !636)
!6134 = !DILocalVariable(name: "p3", scope: !636, file: !628, line: 122, type: !43)
!6135 = !DILocation(line: 122, column: 15, scope: !636)
!6136 = !DILocation(line: 122, column: 20, scope: !636)
!6137 = !DILocalVariable(name: "p2", scope: !636, file: !628, line: 123, type: !43)
!6138 = !DILocation(line: 123, column: 15, scope: !636)
!6139 = !DILocation(line: 123, column: 20, scope: !636)
!6140 = !DILocalVariable(name: "p1", scope: !636, file: !628, line: 124, type: !43)
!6141 = !DILocation(line: 124, column: 15, scope: !636)
!6142 = !DILocation(line: 124, column: 20, scope: !636)
!6143 = !DILocalVariable(name: "p0", scope: !636, file: !628, line: 125, type: !43)
!6144 = !DILocation(line: 125, column: 15, scope: !636)
!6145 = !DILocation(line: 125, column: 20, scope: !636)
!6146 = !DILocation(line: 127, column: 11, scope: !636)
!6147 = !DILocation(line: 127, column: 14, scope: !636)
!6148 = !DILocation(line: 127, column: 24, scope: !636)
!6149 = !DILocation(line: 127, column: 27, scope: !636)
!6150 = !DILocation(line: 127, column: 21, scope: !636)
!6151 = !DILocation(line: 127, column: 37, scope: !636)
!6152 = !DILocation(line: 127, column: 40, scope: !636)
!6153 = !DILocation(line: 127, column: 34, scope: !636)
!6154 = !DILocation(line: 127, column: 48, scope: !636)
!6155 = !DILocation(line: 127, column: 46, scope: !636)
!6156 = !DILocation(line: 127, column: 2, scope: !636)
!6157 = !DILocalVariable(name: "a", arg: 1, scope: !640, file: !1, line: 3667, type: !367)
!6158 = !DILocation(line: 3667, column: 37, scope: !640)
!6159 = !DILocalVariable(name: "off", arg: 2, scope: !640, file: !1, line: 3667, type: !36)
!6160 = !DILocation(line: 3667, column: 48, scope: !640)
!6161 = !DILocalVariable(name: "iso9660", scope: !640, file: !1, line: 3669, type: !530)
!6162 = !DILocation(line: 3669, column: 18, scope: !640)
!6163 = !DILocation(line: 3669, column: 46, scope: !640)
!6164 = !DILocation(line: 3669, column: 49, scope: !640)
!6165 = !DILocation(line: 3669, column: 28, scope: !640)
!6166 = !DILocalVariable(name: "used", scope: !640, file: !1, line: 3670, type: !36)
!6167 = !DILocation(line: 3670, column: 10, scope: !640)
!6168 = !DILocalVariable(name: "ext_bytes", scope: !640, file: !1, line: 3670, type: !36)
!6169 = !DILocation(line: 3670, column: 16, scope: !640)
!6170 = !DILocation(line: 3672, column: 6, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !640, file: !1, line: 3672, column: 6)
!6172 = !DILocation(line: 3672, column: 15, scope: !6171)
!6173 = !DILocation(line: 3672, column: 26, scope: !6171)
!6174 = !DILocation(line: 3672, column: 6, scope: !640)
!6175 = !DILocation(line: 3673, column: 22, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !1, line: 3672, column: 41)
!6177 = !DILocation(line: 3673, column: 25, scope: !6176)
!6178 = !DILocation(line: 3673, column: 3, scope: !6176)
!6179 = !DILocation(line: 3675, column: 3, scope: !6176)
!6180 = !DILocation(line: 3678, column: 34, scope: !640)
!6181 = !DILocation(line: 3678, column: 43, scope: !640)
!6182 = !DILocation(line: 3678, column: 32, scope: !640)
!6183 = !DILocation(line: 3678, column: 7, scope: !640)
!6184 = !DILocation(line: 3679, column: 6, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !640, file: !1, line: 3679, column: 6)
!6186 = !DILocation(line: 3679, column: 15, scope: !6185)
!6187 = !DILocation(line: 3679, column: 30, scope: !6185)
!6188 = !DILocation(line: 3679, column: 28, scope: !6185)
!6189 = !DILocation(line: 3679, column: 37, scope: !6185)
!6190 = !DILocation(line: 3679, column: 46, scope: !6185)
!6191 = !DILocation(line: 3679, column: 35, scope: !6185)
!6192 = !DILocation(line: 3679, column: 6, scope: !640)
!6193 = !DILocation(line: 3680, column: 25, scope: !6185)
!6194 = !DILocation(line: 3680, column: 34, scope: !6185)
!6195 = !DILocation(line: 3680, column: 49, scope: !6185)
!6196 = !DILocation(line: 3680, column: 47, scope: !6185)
!6197 = !DILocation(line: 3680, column: 3, scope: !6185)
!6198 = !DILocation(line: 3680, column: 12, scope: !6185)
!6199 = !DILocation(line: 3680, column: 23, scope: !6185)
!6200 = !DILocation(line: 3681, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !640, file: !1, line: 3681, column: 6)
!6202 = !DILocation(line: 3681, column: 15, scope: !6201)
!6203 = !DILocation(line: 3681, column: 30, scope: !6201)
!6204 = !DILocation(line: 3681, column: 39, scope: !6201)
!6205 = !DILocation(line: 3681, column: 28, scope: !6201)
!6206 = !DILocation(line: 3681, column: 6, scope: !640)
!6207 = !DILocation(line: 3682, column: 7, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !1, line: 3682, column: 7)
!6209 = distinct !DILexicalBlock(scope: !6201, file: !1, line: 3681, column: 54)
!6210 = !DILocation(line: 3682, column: 12, scope: !6208)
!6211 = !DILocation(line: 3682, column: 16, scope: !6208)
!6212 = !DILocation(line: 3683, column: 21, scope: !6208)
!6213 = !DILocation(line: 3683, column: 24, scope: !6208)
!6214 = !DILocation(line: 3683, column: 33, scope: !6208)
!6215 = !DILocation(line: 3683, column: 48, scope: !6208)
!6216 = !DILocation(line: 3683, column: 7, scope: !6208)
!6217 = !DILocation(line: 3683, column: 54, scope: !6208)
!6218 = !DILocation(line: 3682, column: 7, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !6209, file: !1, discriminator: 1)
!6220 = !DILocation(line: 3684, column: 4, scope: !6208)
!6221 = !DILocation(line: 3685, column: 27, scope: !6209)
!6222 = !DILocation(line: 3685, column: 36, scope: !6209)
!6223 = !DILocation(line: 3685, column: 3, scope: !6209)
!6224 = !DILocation(line: 3685, column: 12, scope: !6209)
!6225 = !DILocation(line: 3685, column: 25, scope: !6209)
!6226 = !DILocation(line: 3686, column: 9, scope: !6209)
!6227 = !DILocation(line: 3686, column: 18, scope: !6209)
!6228 = !DILocation(line: 3686, column: 27, scope: !6209)
!6229 = !DILocation(line: 3686, column: 36, scope: !6209)
!6230 = !DILocation(line: 3686, column: 3, scope: !6209)
!6231 = !DILocation(line: 3687, column: 3, scope: !6209)
!6232 = !DILocation(line: 3687, column: 12, scope: !6209)
!6233 = !DILocation(line: 3687, column: 28, scope: !6209)
!6234 = !DILocation(line: 3688, column: 8, scope: !6209)
!6235 = !DILocation(line: 3689, column: 2, scope: !6209)
!6236 = !DILocation(line: 3690, column: 6, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !640, file: !1, line: 3690, column: 6)
!6238 = !DILocation(line: 3690, column: 12, scope: !6237)
!6239 = !DILocation(line: 3690, column: 21, scope: !6237)
!6240 = !DILocation(line: 3690, column: 10, scope: !6237)
!6241 = !DILocation(line: 3690, column: 6, scope: !640)
!6242 = !DILocation(line: 3694, column: 7, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 3694, column: 7)
!6244 = distinct !DILexicalBlock(scope: !6237, file: !1, line: 3690, column: 35)
!6245 = !DILocation(line: 3694, column: 12, scope: !6243)
!6246 = !DILocation(line: 3694, column: 7, scope: !6244)
!6247 = !DILocation(line: 3695, column: 21, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !1, line: 3695, column: 8)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !1, line: 3694, column: 17)
!6250 = !DILocation(line: 3695, column: 8, scope: !6248)
!6251 = !DILocation(line: 3695, column: 24, scope: !6248)
!6252 = !DILocation(line: 3695, column: 8, scope: !6249)
!6253 = !DILocation(line: 3696, column: 5, scope: !6248)
!6254 = !DILocation(line: 3697, column: 3, scope: !6249)
!6255 = !DILocation(line: 3698, column: 9, scope: !6244)
!6256 = !DILocation(line: 3698, column: 18, scope: !6244)
!6257 = !DILocation(line: 3698, column: 27, scope: !6244)
!6258 = !DILocation(line: 3698, column: 3, scope: !6244)
!6259 = !DILocation(line: 3699, column: 27, scope: !6244)
!6260 = !DILocation(line: 3699, column: 3, scope: !6244)
!6261 = !DILocation(line: 3699, column: 12, scope: !6244)
!6262 = !DILocation(line: 3699, column: 25, scope: !6244)
!6263 = !DILocation(line: 3700, column: 3, scope: !6244)
!6264 = !DILocation(line: 3700, column: 12, scope: !6244)
!6265 = !DILocation(line: 3700, column: 28, scope: !6244)
!6266 = !DILocation(line: 3701, column: 2, scope: !6244)
!6267 = !DILocation(line: 3701, column: 13, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6269, file: !1, discriminator: 1)
!6269 = distinct !DILexicalBlock(scope: !6237, file: !1, line: 3701, column: 13)
!6270 = !DILocation(line: 3701, column: 20, scope: !6268)
!6271 = !DILocation(line: 3701, column: 29, scope: !6268)
!6272 = !DILocation(line: 3701, column: 17, scope: !6268)
!6273 = !DILocation(line: 3703, column: 34, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 3701, column: 41)
!6275 = !DILocation(line: 3703, column: 40, scope: !6274)
!6276 = !DILocation(line: 3703, column: 49, scope: !6274)
!6277 = !DILocation(line: 3703, column: 38, scope: !6274)
!6278 = !DILocation(line: 3703, column: 31, scope: !6274)
!6279 = !DILocation(line: 3702, column: 3, scope: !6274)
!6280 = !DILocation(line: 3702, column: 12, scope: !6274)
!6281 = !DILocation(line: 3702, column: 28, scope: !6274)
!6282 = !DILocation(line: 3704, column: 2, scope: !6274)
!6283 = !DILocation(line: 3705, column: 15, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 3704, column: 9)
!6285 = !DILocation(line: 3705, column: 21, scope: !6284)
!6286 = !DILocation(line: 3705, column: 30, scope: !6284)
!6287 = !DILocation(line: 3705, column: 19, scope: !6284)
!6288 = !DILocation(line: 3705, column: 13, scope: !6284)
!6289 = !DILocation(line: 3707, column: 9, scope: !6284)
!6290 = !DILocation(line: 3707, column: 18, scope: !6284)
!6291 = !DILocation(line: 3707, column: 31, scope: !6284)
!6292 = !DILocation(line: 3707, column: 40, scope: !6284)
!6293 = !DILocation(line: 3707, column: 29, scope: !6284)
!6294 = !DILocation(line: 3707, column: 6, scope: !6284)
!6295 = !DILocation(line: 3706, column: 3, scope: !6284)
!6296 = !DILocation(line: 3706, column: 12, scope: !6284)
!6297 = !DILocation(line: 3706, column: 28, scope: !6284)
!6298 = !DILocation(line: 3708, column: 3, scope: !6284)
!6299 = !DILocation(line: 3708, column: 10, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6284, file: !1, discriminator: 1)
!6301 = !DILocation(line: 3708, column: 32, scope: !6300)
!6302 = !DILocation(line: 3708, column: 41, scope: !6300)
!6303 = !DILocation(line: 3708, column: 20, scope: !6300)
!6304 = !DILocation(line: 3708, column: 3, scope: !6300)
!6305 = !DILocation(line: 3709, column: 19, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !1, line: 3709, column: 8)
!6307 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3708, column: 58)
!6308 = !DILocation(line: 3709, column: 30, scope: !6306)
!6309 = !DILocation(line: 3709, column: 39, scope: !6306)
!6310 = !DILocation(line: 3709, column: 8, scope: !6306)
!6311 = !DILocation(line: 3710, column: 8, scope: !6306)
!6312 = !DILocation(line: 3709, column: 8, scope: !6307)
!6313 = !DILocation(line: 3711, column: 5, scope: !6306)
!6314 = !DILocation(line: 3712, column: 17, scope: !6307)
!6315 = !DILocation(line: 3712, column: 26, scope: !6307)
!6316 = !DILocation(line: 3712, column: 14, scope: !6307)
!6317 = !DILocation(line: 3708, column: 3, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !6284, file: !1, discriminator: 2)
!6319 = !DILocation(line: 3714, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 3714, column: 7)
!6321 = !DILocation(line: 3714, column: 17, scope: !6320)
!6322 = !DILocation(line: 3714, column: 7, scope: !6284)
!6323 = !DILocation(line: 3715, column: 19, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !1, line: 3715, column: 8)
!6325 = distinct !DILexicalBlock(scope: !6320, file: !1, line: 3714, column: 22)
!6326 = !DILocation(line: 3715, column: 30, scope: !6324)
!6327 = !DILocation(line: 3715, column: 8, scope: !6324)
!6328 = !DILocation(line: 3715, column: 41, scope: !6324)
!6329 = !DILocation(line: 3715, column: 8, scope: !6325)
!6330 = !DILocation(line: 3716, column: 5, scope: !6324)
!6331 = !DILocation(line: 3717, column: 3, scope: !6325)
!6332 = !DILocation(line: 3719, column: 2, scope: !640)
!6333 = !DILocation(line: 3720, column: 1, scope: !640)
!6334 = !DILocalVariable(name: "a", arg: 1, scope: !646, file: !1, line: 7710, type: !367)
!6335 = !DILocation(line: 7710, column: 43, scope: !646)
!6336 = !DILocalVariable(name: "iso9660", scope: !646, file: !1, line: 7712, type: !530)
!6337 = !DILocation(line: 7712, column: 18, scope: !646)
!6338 = !DILocation(line: 7712, column: 28, scope: !646)
!6339 = !DILocation(line: 7712, column: 31, scope: !646)
!6340 = !DILocalVariable(name: "file", scope: !646, file: !1, line: 7713, type: !7)
!6341 = !DILocation(line: 7713, column: 18, scope: !646)
!6342 = !DILocation(line: 7713, column: 25, scope: !646)
!6343 = !DILocation(line: 7713, column: 34, scope: !646)
!6344 = !DILocalVariable(name: "buff", scope: !646, file: !1, line: 7714, type: !6345)
!6345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 128, align: 8, elements: !6346)
!6346 = !{!6347}
!6347 = !DISubrange(count: 16)
!6348 = !DILocation(line: 7714, column: 16, scope: !646)
!6349 = !DILocalVariable(name: "s", scope: !646, file: !1, line: 7715, type: !23)
!6350 = !DILocation(line: 7715, column: 9, scope: !646)
!6351 = !DILocalVariable(name: "tail", scope: !646, file: !1, line: 7716, type: !36)
!6352 = !DILocation(line: 7716, column: 10, scope: !646)
!6353 = !DILocation(line: 7719, column: 25, scope: !646)
!6354 = !DILocation(line: 7719, column: 31, scope: !646)
!6355 = !DILocation(line: 7719, column: 38, scope: !646)
!6356 = !DILocation(line: 7719, column: 47, scope: !646)
!6357 = !DILocation(line: 7719, column: 54, scope: !646)
!6358 = !DILocation(line: 7719, column: 2, scope: !646)
!6359 = !DILocation(line: 7724, column: 9, scope: !646)
!6360 = !DILocation(line: 7724, column: 7, scope: !646)
!6361 = !DILocation(line: 7753, column: 2, scope: !646)
!6362 = !DILocation(line: 7754, column: 14, scope: !646)
!6363 = !DILocation(line: 7754, column: 18, scope: !646)
!6364 = !DILocation(line: 7754, column: 22, scope: !646)
!6365 = !DILocation(line: 7754, column: 28, scope: !646)
!6366 = !DILocation(line: 7754, column: 35, scope: !646)
!6367 = !DILocation(line: 7754, column: 2, scope: !646)
!6368 = !DILocation(line: 7755, column: 13, scope: !646)
!6369 = !DILocation(line: 7755, column: 19, scope: !646)
!6370 = !DILocation(line: 7755, column: 26, scope: !646)
!6371 = !DILocation(line: 7755, column: 2, scope: !646)
!6372 = !DILocation(line: 7755, column: 11, scope: !646)
!6373 = !DILocation(line: 7756, column: 13, scope: !646)
!6374 = !DILocation(line: 7756, column: 19, scope: !646)
!6375 = !DILocation(line: 7756, column: 26, scope: !646)
!6376 = !DILocation(line: 7756, column: 2, scope: !646)
!6377 = !DILocation(line: 7756, column: 11, scope: !646)
!6378 = !DILocation(line: 7757, column: 13, scope: !646)
!6379 = !DILocation(line: 7757, column: 22, scope: !646)
!6380 = !DILocation(line: 7757, column: 2, scope: !646)
!6381 = !DILocation(line: 7757, column: 11, scope: !646)
!6382 = !DILocation(line: 7760, column: 16, scope: !646)
!6383 = !DILocation(line: 7760, column: 19, scope: !646)
!6384 = !DILocation(line: 7760, column: 25, scope: !646)
!6385 = !DILocation(line: 7760, column: 33, scope: !646)
!6386 = !DILocation(line: 7760, column: 2, scope: !646)
!6387 = !DILocation(line: 7763, column: 23, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !646, file: !1, line: 7763, column: 6)
!6389 = !DILocation(line: 7763, column: 26, scope: !6388)
!6390 = !DILocation(line: 7763, column: 6, scope: !6388)
!6391 = !DILocation(line: 7763, column: 36, scope: !6388)
!6392 = !DILocation(line: 7763, column: 6, scope: !646)
!6393 = !DILocation(line: 7764, column: 3, scope: !6388)
!6394 = !DILocation(line: 7769, column: 6, scope: !646)
!6395 = !DILocation(line: 7769, column: 15, scope: !646)
!6396 = !DILocation(line: 7769, column: 22, scope: !646)
!6397 = !DILocation(line: 7769, column: 41, scope: !646)
!6398 = !DILocation(line: 7769, column: 4, scope: !646)
!6399 = !DILocation(line: 7771, column: 23, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !646, file: !1, line: 7771, column: 6)
!6401 = !DILocation(line: 7771, column: 26, scope: !6400)
!6402 = !DILocation(line: 7771, column: 35, scope: !6400)
!6403 = !DILocation(line: 7771, column: 42, scope: !6400)
!6404 = !DILocation(line: 7771, column: 58, scope: !6400)
!6405 = !DILocation(line: 7771, column: 6, scope: !6400)
!6406 = !DILocation(line: 7772, column: 6, scope: !6400)
!6407 = !DILocation(line: 7771, column: 6, scope: !646)
!6408 = !DILocation(line: 7773, column: 3, scope: !6400)
!6409 = !DILocation(line: 7776, column: 16, scope: !646)
!6410 = !DILocation(line: 7776, column: 19, scope: !646)
!6411 = !DILocation(line: 7776, column: 2, scope: !646)
!6412 = !DILocation(line: 7778, column: 2, scope: !646)
!6413 = !DILocation(line: 7779, column: 1, scope: !646)
!6414 = !DILocalVariable(name: "iso9660", arg: 1, scope: !650, file: !1, line: 4617, type: !530)
!6415 = !DILocation(line: 4617, column: 39, scope: !650)
!6416 = !DILocalVariable(name: "file", arg: 2, scope: !650, file: !1, line: 4617, type: !7)
!6417 = !DILocation(line: 4617, column: 64, scope: !650)
!6418 = !DILocation(line: 4619, column: 2, scope: !650)
!6419 = !DILocation(line: 4619, column: 8, scope: !650)
!6420 = !DILocation(line: 4619, column: 17, scope: !650)
!6421 = !DILocation(line: 4620, column: 34, scope: !650)
!6422 = !DILocation(line: 4620, column: 3, scope: !650)
!6423 = !DILocation(line: 4620, column: 12, scope: !650)
!6424 = !DILocation(line: 4620, column: 27, scope: !650)
!6425 = !DILocation(line: 4620, column: 32, scope: !650)
!6426 = !DILocation(line: 4621, column: 35, scope: !650)
!6427 = !DILocation(line: 4621, column: 41, scope: !650)
!6428 = !DILocation(line: 4621, column: 2, scope: !650)
!6429 = !DILocation(line: 4621, column: 11, scope: !650)
!6430 = !DILocation(line: 4621, column: 26, scope: !650)
!6431 = !DILocation(line: 4621, column: 31, scope: !650)
!6432 = !DILocation(line: 4622, column: 1, scope: !650)
!6433 = !DILocalVariable(name: "p", arg: 1, scope: !647, file: !1, line: 2460, type: !544)
!6434 = !DILocation(line: 2460, column: 28, scope: !647)
!6435 = !DILocalVariable(name: "value", arg: 2, scope: !647, file: !1, line: 2460, type: !42)
!6436 = !DILocation(line: 2460, column: 40, scope: !647)
!6437 = !DILocation(line: 2462, column: 18, scope: !647)
!6438 = !DILocation(line: 2462, column: 21, scope: !647)
!6439 = !DILocation(line: 2462, column: 2, scope: !647)
!6440 = !DILocation(line: 2463, column: 1, scope: !647)
!6441 = !DILocalVariable(name: "a", arg: 1, scope: !652, file: !1, line: 7088, type: !367)
!6442 = !DILocation(line: 7088, column: 49, scope: !652)
!6443 = !DILocalVariable(name: "rootent", arg: 2, scope: !652, file: !1, line: 7088, type: !76)
!6444 = !DILocation(line: 7088, column: 67, scope: !652)
!6445 = !DILocalVariable(name: "iso9660", scope: !652, file: !1, line: 7090, type: !530)
!6446 = !DILocation(line: 7090, column: 18, scope: !652)
!6447 = !DILocation(line: 7090, column: 28, scope: !652)
!6448 = !DILocation(line: 7090, column: 31, scope: !652)
!6449 = !DILocation(line: 7093, column: 46, scope: !652)
!6450 = !DILocation(line: 7094, column: 6, scope: !652)
!6451 = !DILocation(line: 7094, column: 15, scope: !652)
!6452 = !DILocation(line: 7094, column: 25, scope: !652)
!6453 = !DILocation(line: 7094, column: 39, scope: !652)
!6454 = !DILocation(line: 7093, column: 28, scope: !652)
!6455 = !DILocation(line: 7093, column: 2, scope: !652)
!6456 = !DILocation(line: 7093, column: 11, scope: !652)
!6457 = !DILocation(line: 7093, column: 21, scope: !652)
!6458 = !DILocation(line: 7093, column: 26, scope: !652)
!6459 = !DILocation(line: 7095, column: 6, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !652, file: !1, line: 7095, column: 6)
!6461 = !DILocation(line: 7095, column: 15, scope: !6460)
!6462 = !DILocation(line: 7095, column: 25, scope: !6460)
!6463 = !DILocation(line: 7095, column: 30, scope: !6460)
!6464 = !DILocation(line: 7095, column: 6, scope: !652)
!6465 = !DILocation(line: 7096, column: 22, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6460, file: !1, line: 7095, column: 39)
!6467 = !DILocation(line: 7096, column: 25, scope: !6466)
!6468 = !DILocation(line: 7098, column: 7, scope: !6466)
!6469 = !DILocation(line: 7098, column: 16, scope: !6466)
!6470 = !DILocation(line: 7098, column: 26, scope: !6466)
!6471 = !DILocation(line: 7098, column: 40, scope: !6466)
!6472 = !DILocation(line: 7096, column: 3, scope: !6466)
!6473 = !DILocation(line: 7099, column: 3, scope: !6466)
!6474 = !DILocation(line: 7101, column: 2, scope: !652)
!6475 = !DILocation(line: 7101, column: 11, scope: !652)
!6476 = !DILocation(line: 7101, column: 21, scope: !652)
!6477 = !DILocation(line: 7101, column: 27, scope: !652)
!6478 = !DILocation(line: 7101, column: 33, scope: !652)
!6479 = !DILocation(line: 7101, column: 38, scope: !652)
!6480 = !DILocation(line: 7102, column: 2, scope: !652)
!6481 = !DILocation(line: 7103, column: 1, scope: !652)
!6482 = !DILocalVariable(name: "a", arg: 1, scope: !656, file: !1, line: 8020, type: !367)
!6483 = !DILocation(line: 8020, column: 47, scope: !656)
!6484 = !DILocalVariable(name: "iso9660", scope: !656, file: !1, line: 8022, type: !530)
!6485 = !DILocation(line: 8022, column: 18, scope: !656)
!6486 = !DILocation(line: 8022, column: 28, scope: !656)
!6487 = !DILocation(line: 8022, column: 31, scope: !656)
!6488 = !DILocalVariable(name: "file", scope: !656, file: !1, line: 8023, type: !7)
!6489 = !DILocation(line: 8023, column: 18, scope: !656)
!6490 = !DILocalVariable(name: "rbuff", scope: !656, file: !1, line: 8024, type: !544)
!6491 = !DILocation(line: 8024, column: 17, scope: !656)
!6492 = !DILocalVariable(name: "r", scope: !656, file: !1, line: 8025, type: !396)
!6493 = !DILocation(line: 8025, column: 10, scope: !656)
!6494 = !DILocalVariable(name: "remaining", scope: !656, file: !1, line: 8026, type: !23)
!6495 = !DILocation(line: 8026, column: 9, scope: !656)
!6496 = !DILocalVariable(name: "rbuff_size", scope: !656, file: !1, line: 8026, type: !23)
!6497 = !DILocation(line: 8026, column: 20, scope: !656)
!6498 = !DILocalVariable(name: "zext", scope: !656, file: !1, line: 8027, type: !661)
!6499 = !DILocation(line: 8027, column: 24, scope: !656)
!6500 = !DILocalVariable(name: "read_offset", scope: !656, file: !1, line: 8028, type: !36)
!6501 = !DILocation(line: 8028, column: 10, scope: !656)
!6502 = !DILocalVariable(name: "write_offset", scope: !656, file: !1, line: 8028, type: !36)
!6503 = !DILocation(line: 8028, column: 23, scope: !656)
!6504 = !DILocalVariable(name: "new_offset", scope: !656, file: !1, line: 8028, type: !36)
!6505 = !DILocation(line: 8028, column: 37, scope: !656)
!6506 = !DILocalVariable(name: "fd", scope: !656, file: !1, line: 8029, type: !31)
!6507 = !DILocation(line: 8029, column: 6, scope: !656)
!6508 = !DILocalVariable(name: "ret", scope: !656, file: !1, line: 8029, type: !31)
!6509 = !DILocation(line: 8029, column: 10, scope: !656)
!6510 = !DILocation(line: 8031, column: 9, scope: !656)
!6511 = !DILocation(line: 8031, column: 18, scope: !656)
!6512 = !DILocation(line: 8031, column: 28, scope: !656)
!6513 = !DILocation(line: 8031, column: 34, scope: !656)
!6514 = !DILocation(line: 8031, column: 7, scope: !656)
!6515 = !DILocation(line: 8036, column: 6, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8036, column: 6)
!6517 = !DILocation(line: 8036, column: 12, scope: !6516)
!6518 = !DILocation(line: 8036, column: 19, scope: !6516)
!6519 = !DILocation(line: 8036, column: 31, scope: !6516)
!6520 = !DILocation(line: 8036, column: 6, scope: !656)
!6521 = !DILocation(line: 8037, column: 3, scope: !6516)
!6522 = !DILocation(line: 8042, column: 2, scope: !656)
!6523 = !DILocation(line: 8043, column: 30, scope: !656)
!6524 = !DILocation(line: 8043, column: 36, scope: !656)
!6525 = !DILocation(line: 8043, column: 43, scope: !656)
!6526 = !DILocation(line: 8043, column: 7, scope: !656)
!6527 = !DILocation(line: 8043, column: 28, scope: !656)
!6528 = !DILocation(line: 8044, column: 20, scope: !656)
!6529 = !DILocation(line: 8044, column: 26, scope: !656)
!6530 = !DILocation(line: 8044, column: 33, scope: !656)
!6531 = !DILocation(line: 8044, column: 7, scope: !656)
!6532 = !DILocation(line: 8044, column: 18, scope: !656)
!6533 = !DILocation(line: 8046, column: 7, scope: !656)
!6534 = !DILocation(line: 8046, column: 16, scope: !656)
!6535 = !DILocation(line: 8046, column: 5, scope: !656)
!6536 = !DILocation(line: 8047, column: 15, scope: !656)
!6537 = !DILocation(line: 8047, column: 13, scope: !656)
!6538 = !DILocation(line: 8048, column: 16, scope: !656)
!6539 = !DILocation(line: 8048, column: 22, scope: !656)
!6540 = !DILocation(line: 8048, column: 30, scope: !656)
!6541 = !DILocation(line: 8048, column: 14, scope: !656)
!6542 = !DILocation(line: 8049, column: 22, scope: !656)
!6543 = !DILocation(line: 8049, column: 28, scope: !656)
!6544 = !DILocation(line: 8049, column: 36, scope: !656)
!6545 = !DILocation(line: 8049, column: 12, scope: !656)
!6546 = !DILocation(line: 8050, column: 6, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8050, column: 6)
!6548 = !DILocation(line: 8050, column: 16, scope: !6547)
!6549 = !DILocation(line: 8050, column: 6, scope: !656)
!6550 = !DILocation(line: 8051, column: 14, scope: !6547)
!6551 = !DILocation(line: 8051, column: 3, scope: !6547)
!6552 = !DILocation(line: 8053, column: 16, scope: !6547)
!6553 = !DILocation(line: 8053, column: 14, scope: !6547)
!6554 = !DILocation(line: 8055, column: 17, scope: !656)
!6555 = !DILocation(line: 8055, column: 10, scope: !656)
!6556 = !DILocation(line: 8055, column: 8, scope: !656)
!6557 = !DILocation(line: 8056, column: 6, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8056, column: 6)
!6559 = !DILocation(line: 8056, column: 12, scope: !6558)
!6560 = !DILocation(line: 8056, column: 6, scope: !656)
!6561 = !DILocation(line: 8057, column: 22, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6558, file: !1, line: 8056, column: 21)
!6563 = !DILocation(line: 8057, column: 25, scope: !6562)
!6564 = !DILocation(line: 8057, column: 3, scope: !6562)
!6565 = !DILocation(line: 8058, column: 3, scope: !6562)
!6566 = !DILocation(line: 8060, column: 2, scope: !656)
!6567 = !DILocation(line: 8060, column: 9, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !656, file: !1, discriminator: 1)
!6569 = !DILocation(line: 8060, column: 2, scope: !6568)
!6570 = !DILocalVariable(name: "rsize", scope: !6571, file: !1, line: 8061, type: !23)
!6571 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8060, column: 20)
!6572 = !DILocation(line: 8061, column: 10, scope: !6571)
!6573 = !DILocalVariable(name: "rs", scope: !6571, file: !1, line: 8062, type: !396)
!6574 = !DILocation(line: 8062, column: 11, scope: !6571)
!6575 = !DILocation(line: 8065, column: 24, scope: !6571)
!6576 = !DILocation(line: 8065, column: 18, scope: !6571)
!6577 = !DILocation(line: 8065, column: 16, scope: !6571)
!6578 = !DILocation(line: 8068, column: 9, scope: !6571)
!6579 = !DILocation(line: 8068, column: 13, scope: !6571)
!6580 = !DILocation(line: 8068, column: 3, scope: !6571)
!6581 = !DILocation(line: 8070, column: 11, scope: !6571)
!6582 = !DILocation(line: 8070, column: 9, scope: !6571)
!6583 = !DILocation(line: 8071, column: 7, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 8071, column: 7)
!6585 = !DILocation(line: 8071, column: 15, scope: !6584)
!6586 = !DILocation(line: 8071, column: 13, scope: !6584)
!6587 = !DILocation(line: 8071, column: 7, scope: !6571)
!6588 = !DILocation(line: 8072, column: 12, scope: !6584)
!6589 = !DILocation(line: 8072, column: 10, scope: !6584)
!6590 = !DILocation(line: 8072, column: 4, scope: !6584)
!6591 = !DILocation(line: 8073, column: 13, scope: !6571)
!6592 = !DILocation(line: 8073, column: 22, scope: !6571)
!6593 = !DILocation(line: 8073, column: 31, scope: !6571)
!6594 = !DILocation(line: 8073, column: 38, scope: !6571)
!6595 = !DILocation(line: 8073, column: 8, scope: !6571)
!6596 = !DILocation(line: 8073, column: 6, scope: !6571)
!6597 = !DILocation(line: 8074, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 8074, column: 7)
!6599 = !DILocation(line: 8074, column: 10, scope: !6598)
!6600 = !DILocation(line: 8074, column: 7, scope: !6571)
!6601 = !DILocation(line: 8075, column: 23, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !1, line: 8074, column: 16)
!6603 = !DILocation(line: 8075, column: 26, scope: !6602)
!6604 = !DILocation(line: 8075, column: 35, scope: !6602)
!6605 = !DILocation(line: 8076, column: 52, scope: !6602)
!6606 = !DILocation(line: 8075, column: 4, scope: !6607)
!6607 = !DILexicalBlockFile(scope: !6602, file: !1, discriminator: 1)
!6608 = !DILocation(line: 8077, column: 8, scope: !6602)
!6609 = !DILocation(line: 8078, column: 4, scope: !6602)
!6610 = !DILocation(line: 8080, column: 16, scope: !6571)
!6611 = !DILocation(line: 8080, column: 13, scope: !6571)
!6612 = !DILocation(line: 8081, column: 18, scope: !6571)
!6613 = !DILocation(line: 8081, column: 15, scope: !6571)
!6614 = !DILocation(line: 8084, column: 9, scope: !6571)
!6615 = !DILocation(line: 8084, column: 13, scope: !6571)
!6616 = !DILocation(line: 8084, column: 3, scope: !6571)
!6617 = !DILocation(line: 8086, column: 22, scope: !6571)
!6618 = !DILocation(line: 8086, column: 32, scope: !6571)
!6619 = !DILocation(line: 8086, column: 39, scope: !6571)
!6620 = !DILocation(line: 8086, column: 7, scope: !6571)
!6621 = !DILocation(line: 8086, column: 5, scope: !6571)
!6622 = !DILocation(line: 8087, column: 7, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 8087, column: 7)
!6624 = !DILocation(line: 8087, column: 9, scope: !6623)
!6625 = !DILocation(line: 8087, column: 7, scope: !6571)
!6626 = !DILocation(line: 8088, column: 15, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6623, file: !1, line: 8087, column: 14)
!6628 = !DILocation(line: 8088, column: 10, scope: !6627)
!6629 = !DILocation(line: 8088, column: 8, scope: !6627)
!6630 = !DILocation(line: 8089, column: 4, scope: !6627)
!6631 = !DILocation(line: 8060, column: 2, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !656, file: !1, discriminator: 2)
!6633 = !DILocation(line: 8093, column: 6, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8093, column: 6)
!6635 = !DILocation(line: 8093, column: 10, scope: !6634)
!6636 = !DILocation(line: 8093, column: 6, scope: !656)
!6637 = !DILocation(line: 8098, column: 34, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 8093, column: 25)
!6639 = !DILocation(line: 8098, column: 3, scope: !6638)
!6640 = !DILocation(line: 8098, column: 9, scope: !6638)
!6641 = !DILocation(line: 8098, column: 17, scope: !6638)
!6642 = !DILocation(line: 8098, column: 32, scope: !6638)
!6643 = !DILocation(line: 8099, column: 24, scope: !6638)
!6644 = !DILocation(line: 8099, column: 30, scope: !6638)
!6645 = !DILocation(line: 8099, column: 37, scope: !6638)
!6646 = !DILocation(line: 8099, column: 3, scope: !6638)
!6647 = !DILocation(line: 8099, column: 9, scope: !6638)
!6648 = !DILocation(line: 8099, column: 17, scope: !6638)
!6649 = !DILocation(line: 8099, column: 22, scope: !6638)
!6650 = !DILocation(line: 8100, column: 26, scope: !6638)
!6651 = !DILocation(line: 8100, column: 32, scope: !6638)
!6652 = !DILocation(line: 8100, column: 39, scope: !6638)
!6653 = !DILocation(line: 8100, column: 45, scope: !6638)
!6654 = !DILocation(line: 8100, column: 53, scope: !6638)
!6655 = !DILocation(line: 8100, column: 3, scope: !6638)
!6656 = !DILocation(line: 8102, column: 3, scope: !6638)
!6657 = !DILocation(line: 8102, column: 9, scope: !6638)
!6658 = !DILocation(line: 8102, column: 16, scope: !6638)
!6659 = !DILocation(line: 8102, column: 28, scope: !6638)
!6660 = !DILocation(line: 8103, column: 3, scope: !6638)
!6661 = !DILocation(line: 8103, column: 9, scope: !6638)
!6662 = !DILocation(line: 8103, column: 16, scope: !6638)
!6663 = !DILocation(line: 8103, column: 24, scope: !6638)
!6664 = !DILocation(line: 8104, column: 3, scope: !6638)
!6665 = !DILocation(line: 8104, column: 9, scope: !6638)
!6666 = !DILocation(line: 8104, column: 16, scope: !6638)
!6667 = !DILocation(line: 8104, column: 34, scope: !6638)
!6668 = !DILocation(line: 8105, column: 32, scope: !6638)
!6669 = !DILocation(line: 8105, column: 35, scope: !6638)
!6670 = !DILocation(line: 8105, column: 41, scope: !6638)
!6671 = !DILocation(line: 8105, column: 49, scope: !6638)
!6672 = !DILocation(line: 8105, column: 7, scope: !6638)
!6673 = !DILocation(line: 8105, column: 5, scope: !6638)
!6674 = !DILocation(line: 8106, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6638, file: !1, line: 8106, column: 7)
!6676 = !DILocation(line: 8106, column: 9, scope: !6675)
!6677 = !DILocation(line: 8106, column: 7, scope: !6638)
!6678 = !DILocation(line: 8107, column: 8, scope: !6675)
!6679 = !DILocation(line: 8107, column: 4, scope: !6675)
!6680 = !DILocation(line: 8108, column: 2, scope: !6638)
!6681 = !DILocation(line: 8113, column: 7, scope: !656)
!6682 = !DILocation(line: 8113, column: 2, scope: !656)
!6683 = !DILocation(line: 8114, column: 12, scope: !656)
!6684 = !DILocation(line: 8114, column: 2, scope: !656)
!6685 = !DILocation(line: 8115, column: 11, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !656, file: !1, line: 8115, column: 6)
!6687 = !DILocation(line: 8115, column: 6, scope: !6686)
!6688 = !DILocation(line: 8115, column: 24, scope: !6686)
!6689 = !DILocation(line: 8115, column: 45, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !6686, file: !1, discriminator: 1)
!6691 = !DILocation(line: 8115, column: 27, scope: !6690)
!6692 = !DILocation(line: 8115, column: 54, scope: !6690)
!6693 = !DILocation(line: 8115, column: 6, scope: !6690)
!6694 = !DILocation(line: 8116, column: 29, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6686, file: !1, line: 8115, column: 63)
!6696 = !DILocation(line: 8116, column: 32, scope: !6695)
!6697 = !DILocation(line: 8116, column: 10, scope: !6695)
!6698 = !DILocation(line: 8118, column: 7, scope: !6695)
!6699 = !DILocation(line: 8119, column: 2, scope: !6695)
!6700 = !DILocation(line: 8121, column: 10, scope: !656)
!6701 = !DILocation(line: 8121, column: 2, scope: !656)
!6702 = !DILocation(line: 8122, column: 1, scope: !656)
!6703 = !DILocalVariable(name: "a", arg: 1, scope: !677, file: !1, line: 7106, type: !367)
!6704 = !DILocation(line: 7106, column: 50, scope: !677)
!6705 = !DILocalVariable(name: "rootent", arg: 2, scope: !677, file: !1, line: 7106, type: !76)
!6706 = !DILocation(line: 7106, column: 68, scope: !677)
!6707 = !DILocalVariable(name: "iso9660", scope: !677, file: !1, line: 7108, type: !530)
!6708 = !DILocation(line: 7108, column: 18, scope: !677)
!6709 = !DILocation(line: 7108, column: 28, scope: !677)
!6710 = !DILocation(line: 7108, column: 31, scope: !677)
!6711 = !DILocalVariable(name: "file", scope: !677, file: !1, line: 7109, type: !7)
!6712 = !DILocation(line: 7109, column: 18, scope: !677)
!6713 = !DILocalVariable(name: "isoent", scope: !677, file: !1, line: 7110, type: !76)
!6714 = !DILocation(line: 7110, column: 17, scope: !677)
!6715 = !DILocalVariable(name: "entry", scope: !677, file: !1, line: 7111, type: !12)
!6716 = !DILocation(line: 7111, column: 24, scope: !677)
!6717 = !DILocation(line: 7113, column: 8, scope: !677)
!6718 = !DILocation(line: 7117, column: 21, scope: !677)
!6719 = !DILocation(line: 7117, column: 9, scope: !677)
!6720 = !DILocation(line: 7117, column: 7, scope: !677)
!6721 = !DILocation(line: 7118, column: 6, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7118, column: 6)
!6723 = !DILocation(line: 7118, column: 11, scope: !6722)
!6724 = !DILocation(line: 7118, column: 6, scope: !677)
!6725 = !DILocation(line: 7119, column: 22, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6722, file: !1, line: 7118, column: 20)
!6727 = !DILocation(line: 7119, column: 25, scope: !6726)
!6728 = !DILocation(line: 7119, column: 3, scope: !6726)
!6729 = !DILocation(line: 7121, column: 3, scope: !6726)
!6730 = !DILocation(line: 7123, column: 29, scope: !677)
!6731 = !DILocation(line: 7123, column: 35, scope: !677)
!6732 = !DILocation(line: 7124, column: 6, scope: !677)
!6733 = !DILocation(line: 7124, column: 15, scope: !677)
!6734 = !DILocation(line: 7124, column: 25, scope: !677)
!6735 = !DILocation(line: 7124, column: 42, scope: !677)
!6736 = !DILocation(line: 7123, column: 2, scope: !677)
!6737 = !DILocation(line: 7125, column: 25, scope: !677)
!6738 = !DILocation(line: 7125, column: 31, scope: !677)
!6739 = !DILocation(line: 7125, column: 2, scope: !677)
!6740 = !DILocation(line: 7126, column: 26, scope: !677)
!6741 = !DILocation(line: 7126, column: 32, scope: !677)
!6742 = !DILocation(line: 7126, column: 39, scope: !677)
!6743 = !DILocation(line: 7126, column: 48, scope: !677)
!6744 = !DILocation(line: 7126, column: 2, scope: !677)
!6745 = !DILocation(line: 7127, column: 26, scope: !677)
!6746 = !DILocation(line: 7127, column: 32, scope: !677)
!6747 = !DILocation(line: 7127, column: 39, scope: !677)
!6748 = !DILocation(line: 7127, column: 48, scope: !677)
!6749 = !DILocation(line: 7127, column: 2, scope: !677)
!6750 = !DILocation(line: 7128, column: 26, scope: !677)
!6751 = !DILocation(line: 7128, column: 32, scope: !677)
!6752 = !DILocation(line: 7128, column: 39, scope: !677)
!6753 = !DILocation(line: 7128, column: 48, scope: !677)
!6754 = !DILocation(line: 7128, column: 2, scope: !677)
!6755 = !DILocation(line: 7129, column: 24, scope: !677)
!6756 = !DILocation(line: 7129, column: 30, scope: !677)
!6757 = !DILocation(line: 7129, column: 37, scope: !677)
!6758 = !DILocation(line: 7129, column: 2, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !677, file: !1, discriminator: 1)
!6760 = !DILocation(line: 7130, column: 24, scope: !677)
!6761 = !DILocation(line: 7130, column: 30, scope: !677)
!6762 = !DILocation(line: 7130, column: 37, scope: !677)
!6763 = !DILocation(line: 7130, column: 2, scope: !6759)
!6764 = !DILocation(line: 7131, column: 25, scope: !677)
!6765 = !DILocation(line: 7131, column: 31, scope: !677)
!6766 = !DILocation(line: 7131, column: 2, scope: !677)
!6767 = !DILocation(line: 7132, column: 26, scope: !677)
!6768 = !DILocation(line: 7132, column: 32, scope: !677)
!6769 = !DILocation(line: 7132, column: 2, scope: !677)
!6770 = !DILocation(line: 7134, column: 32, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7134, column: 6)
!6772 = !DILocation(line: 7134, column: 35, scope: !6771)
!6773 = !DILocation(line: 7134, column: 6, scope: !6771)
!6774 = !DILocation(line: 7134, column: 41, scope: !6771)
!6775 = !DILocation(line: 7134, column: 6, scope: !677)
!6776 = !DILocation(line: 7135, column: 16, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6771, file: !1, line: 7134, column: 57)
!6778 = !DILocation(line: 7135, column: 3, scope: !6777)
!6779 = !DILocation(line: 7136, column: 3, scope: !6777)
!6780 = !DILocation(line: 7138, column: 2, scope: !677)
!6781 = !DILocation(line: 7138, column: 8, scope: !677)
!6782 = !DILocation(line: 7138, column: 13, scope: !677)
!6783 = !DILocation(line: 7139, column: 2, scope: !677)
!6784 = !DILocation(line: 7139, column: 8, scope: !677)
!6785 = !DILocation(line: 7139, column: 16, scope: !677)
!6786 = !DILocation(line: 7139, column: 21, scope: !677)
!6787 = !DILocation(line: 7140, column: 20, scope: !677)
!6788 = !DILocation(line: 7140, column: 29, scope: !677)
!6789 = !DILocation(line: 7140, column: 2, scope: !677)
!6790 = !DILocation(line: 7142, column: 22, scope: !677)
!6791 = !DILocation(line: 7142, column: 11, scope: !677)
!6792 = !DILocation(line: 7142, column: 9, scope: !677)
!6793 = !DILocation(line: 7143, column: 6, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7143, column: 6)
!6795 = !DILocation(line: 7143, column: 13, scope: !6794)
!6796 = !DILocation(line: 7143, column: 6, scope: !677)
!6797 = !DILocation(line: 7144, column: 22, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6794, file: !1, line: 7143, column: 22)
!6799 = !DILocation(line: 7144, column: 25, scope: !6798)
!6800 = !DILocation(line: 7144, column: 3, scope: !6798)
!6801 = !DILocation(line: 7146, column: 3, scope: !6798)
!6802 = !DILocation(line: 7148, column: 2, scope: !677)
!6803 = !DILocation(line: 7148, column: 10, scope: !677)
!6804 = !DILocation(line: 7148, column: 18, scope: !677)
!6805 = !DILocation(line: 7151, column: 18, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7151, column: 6)
!6807 = !DILocation(line: 7151, column: 6, scope: !6806)
!6808 = !DILocation(line: 7151, column: 30, scope: !6806)
!6809 = !DILocation(line: 7151, column: 6, scope: !677)
!6810 = !DILocation(line: 7152, column: 3, scope: !6806)
!6811 = !DILocation(line: 7154, column: 31, scope: !677)
!6812 = !DILocation(line: 7154, column: 2, scope: !677)
!6813 = !DILocation(line: 7154, column: 11, scope: !677)
!6814 = !DILocation(line: 7154, column: 21, scope: !677)
!6815 = !DILocation(line: 7154, column: 29, scope: !677)
!6816 = !DILocation(line: 7158, column: 10, scope: !677)
!6817 = !DILocation(line: 7158, column: 19, scope: !677)
!6818 = !DILocation(line: 7158, column: 23, scope: !677)
!6819 = !DILocation(line: 7158, column: 2, scope: !677)
!6820 = !DILocation(line: 7158, column: 34, scope: !6759)
!6821 = !DILocation(line: 7162, column: 11, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7158, column: 34)
!6823 = !DILocation(line: 7162, column: 20, scope: !6822)
!6824 = !DILocation(line: 7162, column: 30, scope: !6822)
!6825 = !DILocation(line: 7162, column: 36, scope: !6822)
!6826 = !DILocation(line: 7162, column: 42, scope: !6822)
!6827 = !DILocation(line: 7162, column: 9, scope: !6822)
!6828 = !DILocation(line: 7163, column: 26, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 7163, column: 7)
!6830 = !DILocation(line: 7163, column: 7, scope: !6829)
!6831 = !DILocation(line: 7163, column: 33, scope: !6829)
!6832 = !DILocation(line: 7163, column: 7, scope: !6822)
!6833 = !DILocation(line: 7164, column: 4, scope: !6829)
!6834 = !DILocation(line: 7164, column: 13, scope: !6829)
!6835 = !DILocation(line: 7164, column: 23, scope: !6829)
!6836 = !DILocation(line: 7164, column: 34, scope: !6829)
!6837 = !DILocation(line: 7166, column: 31, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6829, file: !1, line: 7166, column: 12)
!6839 = !DILocation(line: 7166, column: 12, scope: !6838)
!6840 = !DILocation(line: 7166, column: 38, scope: !6838)
!6841 = !DILocation(line: 7166, column: 12, scope: !6829)
!6842 = !DILocation(line: 7167, column: 4, scope: !6838)
!6843 = !DILocation(line: 7167, column: 13, scope: !6838)
!6844 = !DILocation(line: 7167, column: 23, scope: !6838)
!6845 = !DILocation(line: 7167, column: 34, scope: !6838)
!6846 = !DILocation(line: 7169, column: 31, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 7169, column: 12)
!6848 = !DILocation(line: 7169, column: 12, scope: !6847)
!6849 = !DILocation(line: 7169, column: 38, scope: !6847)
!6850 = !DILocation(line: 7169, column: 12, scope: !6838)
!6851 = !DILocation(line: 7170, column: 4, scope: !6847)
!6852 = !DILocation(line: 7170, column: 13, scope: !6847)
!6853 = !DILocation(line: 7170, column: 23, scope: !6847)
!6854 = !DILocation(line: 7170, column: 34, scope: !6847)
!6855 = !DILocation(line: 7175, column: 4, scope: !6847)
!6856 = !DILocation(line: 7175, column: 13, scope: !6847)
!6857 = !DILocation(line: 7175, column: 23, scope: !6847)
!6858 = !DILocation(line: 7175, column: 34, scope: !6847)
!6859 = !DILocation(line: 7177, column: 3, scope: !6822)
!6860 = !DILocation(line: 7179, column: 3, scope: !6822)
!6861 = !DILocation(line: 7179, column: 12, scope: !6822)
!6862 = !DILocation(line: 7179, column: 22, scope: !6822)
!6863 = !DILocation(line: 7179, column: 33, scope: !6822)
!6864 = !DILocation(line: 7180, column: 3, scope: !6822)
!6865 = !DILocation(line: 7182, column: 3, scope: !6822)
!6866 = !DILocation(line: 7182, column: 12, scope: !6822)
!6867 = !DILocation(line: 7182, column: 22, scope: !6822)
!6868 = !DILocation(line: 7182, column: 33, scope: !6822)
!6869 = !DILocation(line: 7183, column: 3, scope: !6822)
!6870 = !DILocation(line: 7185, column: 11, scope: !6822)
!6871 = !DILocation(line: 7185, column: 20, scope: !6822)
!6872 = !DILocation(line: 7185, column: 30, scope: !6822)
!6873 = !DILocation(line: 7185, column: 36, scope: !6822)
!6874 = !DILocation(line: 7185, column: 42, scope: !6822)
!6875 = !DILocation(line: 7185, column: 9, scope: !6822)
!6876 = !DILocation(line: 7186, column: 26, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 7186, column: 7)
!6878 = !DILocation(line: 7186, column: 7, scope: !6877)
!6879 = !DILocation(line: 7186, column: 33, scope: !6877)
!6880 = !DILocation(line: 7186, column: 7, scope: !6822)
!6881 = !DILocation(line: 7187, column: 4, scope: !6877)
!6882 = !DILocation(line: 7187, column: 13, scope: !6877)
!6883 = !DILocation(line: 7187, column: 23, scope: !6877)
!6884 = !DILocation(line: 7187, column: 34, scope: !6877)
!6885 = !DILocation(line: 7189, column: 31, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6877, file: !1, line: 7189, column: 12)
!6887 = !DILocation(line: 7189, column: 12, scope: !6886)
!6888 = !DILocation(line: 7189, column: 38, scope: !6886)
!6889 = !DILocation(line: 7189, column: 12, scope: !6877)
!6890 = !DILocation(line: 7190, column: 4, scope: !6886)
!6891 = !DILocation(line: 7190, column: 13, scope: !6886)
!6892 = !DILocation(line: 7190, column: 23, scope: !6886)
!6893 = !DILocation(line: 7190, column: 34, scope: !6886)
!6894 = !DILocation(line: 7192, column: 31, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6886, file: !1, line: 7192, column: 12)
!6896 = !DILocation(line: 7192, column: 12, scope: !6895)
!6897 = !DILocation(line: 7192, column: 38, scope: !6895)
!6898 = !DILocation(line: 7192, column: 12, scope: !6886)
!6899 = !DILocation(line: 7193, column: 4, scope: !6895)
!6900 = !DILocation(line: 7193, column: 13, scope: !6895)
!6901 = !DILocation(line: 7193, column: 23, scope: !6895)
!6902 = !DILocation(line: 7193, column: 34, scope: !6895)
!6903 = !DILocation(line: 7196, column: 23, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !1, line: 7195, column: 8)
!6905 = !DILocation(line: 7196, column: 26, scope: !6904)
!6906 = !DILocation(line: 7199, column: 8, scope: !6904)
!6907 = !DILocation(line: 7199, column: 17, scope: !6904)
!6908 = !DILocation(line: 7199, column: 27, scope: !6904)
!6909 = !DILocation(line: 7199, column: 41, scope: !6904)
!6910 = !DILocation(line: 7196, column: 4, scope: !6904)
!6911 = !DILocation(line: 7200, column: 4, scope: !6904)
!6912 = !DILocation(line: 7202, column: 3, scope: !6822)
!6913 = !DILocation(line: 7210, column: 2, scope: !677)
!6914 = !DILocation(line: 7210, column: 11, scope: !677)
!6915 = !DILocation(line: 7210, column: 21, scope: !677)
!6916 = !DILocation(line: 7210, column: 33, scope: !677)
!6917 = !DILocation(line: 7215, column: 6, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !677, file: !1, line: 7215, column: 6)
!6919 = !DILocation(line: 7215, column: 15, scope: !6918)
!6920 = !DILocation(line: 7215, column: 19, scope: !6918)
!6921 = !DILocation(line: 7215, column: 6, scope: !677)
!6922 = !DILocation(line: 7216, column: 3, scope: !6918)
!6923 = !DILocation(line: 7220, column: 2, scope: !677)
!6924 = !DILocation(line: 7221, column: 1, scope: !677)
!6925 = !DILocalVariable(name: "a", arg: 1, scope: !678, file: !1, line: 5315, type: !367)
!6926 = !DILocation(line: 5315, column: 41, scope: !678)
!6927 = !DILocalVariable(name: "nroot", arg: 2, scope: !678, file: !1, line: 5315, type: !97)
!6928 = !DILocation(line: 5315, column: 60, scope: !678)
!6929 = !DILocalVariable(name: "root", arg: 3, scope: !678, file: !1, line: 5316, type: !76)
!6930 = !DILocation(line: 5316, column: 20, scope: !678)
!6931 = !DILocalVariable(name: "np", scope: !678, file: !1, line: 5318, type: !76)
!6932 = !DILocation(line: 5318, column: 17, scope: !678)
!6933 = !DILocalVariable(name: "xroot", scope: !678, file: !1, line: 5318, type: !76)
!6934 = !DILocation(line: 5318, column: 22, scope: !678)
!6935 = !DILocalVariable(name: "newent", scope: !678, file: !1, line: 5318, type: !76)
!6936 = !DILocation(line: 5318, column: 30, scope: !678)
!6937 = !DILocation(line: 5320, column: 7, scope: !678)
!6938 = !DILocation(line: 5320, column: 5, scope: !678)
!6939 = !DILocation(line: 5321, column: 8, scope: !678)
!6940 = !DILocation(line: 5322, column: 2, scope: !678)
!6941 = !DILocation(line: 5323, column: 25, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !678, file: !1, line: 5322, column: 5)
!6943 = !DILocation(line: 5323, column: 12, scope: !6942)
!6944 = !DILocation(line: 5323, column: 10, scope: !6942)
!6945 = !DILocation(line: 5324, column: 7, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 5324, column: 7)
!6947 = !DILocation(line: 5324, column: 14, scope: !6946)
!6948 = !DILocation(line: 5324, column: 7, scope: !6942)
!6949 = !DILocation(line: 5325, column: 23, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6946, file: !1, line: 5324, column: 23)
!6951 = !DILocation(line: 5325, column: 26, scope: !6950)
!6952 = !DILocation(line: 5325, column: 4, scope: !6950)
!6953 = !DILocation(line: 5327, column: 4, scope: !6950)
!6954 = !DILocation(line: 5329, column: 7, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 5329, column: 7)
!6956 = !DILocation(line: 5329, column: 13, scope: !6955)
!6957 = !DILocation(line: 5329, column: 7, scope: !6942)
!6958 = !DILocation(line: 5330, column: 21, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !1, line: 5329, column: 22)
!6960 = !DILocation(line: 5330, column: 19, scope: !6959)
!6961 = !DILocation(line: 5330, column: 5, scope: !6959)
!6962 = !DILocation(line: 5330, column: 11, scope: !6959)
!6963 = !DILocation(line: 5331, column: 21, scope: !6959)
!6964 = !DILocation(line: 5331, column: 4, scope: !6959)
!6965 = !DILocation(line: 5331, column: 12, scope: !6959)
!6966 = !DILocation(line: 5331, column: 19, scope: !6959)
!6967 = !DILocation(line: 5332, column: 3, scope: !6959)
!6968 = !DILocation(line: 5333, column: 26, scope: !6955)
!6969 = !DILocation(line: 5333, column: 33, scope: !6955)
!6970 = !DILocation(line: 5333, column: 4, scope: !6955)
!6971 = !DILocation(line: 5334, column: 7, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 5334, column: 7)
!6973 = !DILocation(line: 5334, column: 11, scope: !6972)
!6974 = !DILocation(line: 5334, column: 15, scope: !6972)
!6975 = !DILocation(line: 5334, column: 18, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6972, file: !1, discriminator: 1)
!6977 = !DILocation(line: 5334, column: 22, scope: !6976)
!6978 = !DILocation(line: 5334, column: 31, scope: !6976)
!6979 = !DILocation(line: 5334, column: 37, scope: !6976)
!6980 = !DILocation(line: 5334, column: 7, scope: !6976)
!6981 = !DILocation(line: 5336, column: 9, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6972, file: !1, line: 5334, column: 46)
!6983 = !DILocation(line: 5336, column: 13, scope: !6982)
!6984 = !DILocation(line: 5336, column: 22, scope: !6982)
!6985 = !DILocation(line: 5336, column: 7, scope: !6982)
!6986 = !DILocation(line: 5337, column: 12, scope: !6982)
!6987 = !DILocation(line: 5337, column: 10, scope: !6982)
!6988 = !DILocation(line: 5338, column: 4, scope: !6982)
!6989 = !DILocation(line: 5340, column: 3, scope: !6942)
!6990 = !DILocation(line: 5340, column: 10, scope: !6991)
!6991 = !DILexicalBlockFile(scope: !6942, file: !1, discriminator: 1)
!6992 = !DILocation(line: 5340, column: 16, scope: !6991)
!6993 = !DILocation(line: 5340, column: 20, scope: !6991)
!6994 = !DILocation(line: 5340, column: 13, scope: !6991)
!6995 = !DILocation(line: 5340, column: 3, scope: !6991)
!6996 = !DILocation(line: 5341, column: 8, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 5341, column: 8)
!6998 = distinct !DILexicalBlock(scope: !6942, file: !1, line: 5340, column: 28)
!6999 = !DILocation(line: 5341, column: 12, scope: !6997)
!7000 = !DILocation(line: 5341, column: 19, scope: !6997)
!7001 = !DILocation(line: 5341, column: 8, scope: !6998)
!7002 = !DILocation(line: 5343, column: 10, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6997, file: !1, line: 5341, column: 28)
!7004 = !DILocation(line: 5343, column: 14, scope: !7003)
!7005 = !DILocation(line: 5343, column: 8, scope: !7003)
!7006 = !DILocation(line: 5344, column: 13, scope: !7003)
!7007 = !DILocation(line: 5344, column: 20, scope: !7003)
!7008 = !DILocation(line: 5344, column: 11, scope: !7003)
!7009 = !DILocation(line: 5345, column: 4, scope: !7003)
!7010 = !DILocation(line: 5346, column: 10, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6997, file: !1, line: 5345, column: 11)
!7012 = !DILocation(line: 5346, column: 14, scope: !7011)
!7013 = !DILocation(line: 5346, column: 8, scope: !7011)
!7014 = !DILocation(line: 5347, column: 5, scope: !7011)
!7015 = !DILocation(line: 5340, column: 3, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !6942, file: !1, discriminator: 2)
!7017 = !DILocation(line: 5350, column: 2, scope: !6942)
!7018 = !DILocation(line: 5350, column: 11, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !678, file: !1, discriminator: 1)
!7020 = !DILocation(line: 5350, column: 17, scope: !7019)
!7021 = !DILocation(line: 5350, column: 21, scope: !7019)
!7022 = !DILocation(line: 5350, column: 14, scope: !7019)
!7023 = !DILocation(line: 5350, column: 2, scope: !7019)
!7024 = !DILocation(line: 5352, column: 2, scope: !678)
!7025 = !DILocation(line: 5353, column: 1, scope: !678)
!7026 = !DILocalVariable(name: "a", arg: 1, scope: !684, file: !1, line: 6987, type: !367)
!7027 = !DILocation(line: 6987, column: 46, scope: !684)
!7028 = !DILocalVariable(name: "iso9660", scope: !684, file: !1, line: 6989, type: !530)
!7029 = !DILocation(line: 6989, column: 18, scope: !684)
!7030 = !DILocation(line: 6989, column: 28, scope: !684)
!7031 = !DILocation(line: 6989, column: 31, scope: !684)
!7032 = !DILocalVariable(name: "depth", scope: !684, file: !1, line: 6990, type: !31)
!7033 = !DILocation(line: 6990, column: 6, scope: !684)
!7034 = !DILocalVariable(name: "r", scope: !684, file: !1, line: 6990, type: !31)
!7035 = !DILocation(line: 6990, column: 13, scope: !684)
!7036 = !DILocalVariable(name: "dir_number", scope: !684, file: !1, line: 6991, type: !31)
!7037 = !DILocation(line: 6991, column: 6, scope: !684)
!7038 = !DILocation(line: 6996, column: 6, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !684, file: !1, line: 6996, column: 6)
!7040 = !DILocation(line: 6996, column: 15, scope: !7039)
!7041 = !DILocation(line: 6996, column: 26, scope: !7039)
!7042 = !DILocation(line: 6996, column: 39, scope: !7039)
!7043 = !DILocation(line: 6997, column: 8, scope: !7039)
!7044 = !DILocation(line: 6997, column: 17, scope: !7039)
!7045 = !DILocation(line: 6997, column: 21, scope: !7039)
!7046 = !DILocation(line: 6997, column: 33, scope: !7039)
!7047 = !DILocation(line: 6997, column: 36, scope: !7048)
!7048 = !DILexicalBlockFile(scope: !7039, file: !1, discriminator: 1)
!7049 = !DILocation(line: 6997, column: 45, scope: !7048)
!7050 = !DILocation(line: 6997, column: 49, scope: !7048)
!7051 = !DILocation(line: 6997, column: 59, scope: !7048)
!7052 = !DILocation(line: 6996, column: 6, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !684, file: !1, discriminator: 1)
!7054 = !DILocation(line: 6998, column: 31, scope: !7039)
!7055 = !DILocation(line: 6998, column: 36, scope: !7039)
!7056 = !DILocation(line: 6998, column: 45, scope: !7039)
!7057 = !DILocation(line: 6999, column: 7, scope: !7039)
!7058 = !DILocation(line: 6999, column: 16, scope: !7039)
!7059 = !DILocation(line: 6999, column: 27, scope: !7039)
!7060 = !DILocation(line: 6998, column: 7, scope: !7039)
!7061 = !DILocation(line: 6998, column: 5, scope: !7039)
!7062 = !DILocation(line: 6998, column: 3, scope: !7039)
!7063 = !DILocation(line: 7003, column: 31, scope: !7039)
!7064 = !DILocation(line: 7003, column: 36, scope: !7039)
!7065 = !DILocation(line: 7003, column: 45, scope: !7039)
!7066 = !DILocation(line: 7003, column: 7, scope: !7039)
!7067 = !DILocation(line: 7003, column: 5, scope: !7039)
!7068 = !DILocation(line: 7005, column: 6, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7005, column: 6)
!7070 = !DILocation(line: 7005, column: 8, scope: !7069)
!7071 = !DILocation(line: 7005, column: 6, scope: !684)
!7072 = !DILocation(line: 7006, column: 11, scope: !7069)
!7073 = !DILocation(line: 7006, column: 3, scope: !7069)
!7074 = !DILocation(line: 7007, column: 6, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7007, column: 6)
!7076 = !DILocation(line: 7007, column: 15, scope: !7075)
!7077 = !DILocation(line: 7007, column: 19, scope: !7075)
!7078 = !DILocation(line: 7007, column: 6, scope: !684)
!7079 = !DILocation(line: 7008, column: 31, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !1, line: 7007, column: 27)
!7081 = !DILocation(line: 7008, column: 36, scope: !7080)
!7082 = !DILocation(line: 7008, column: 45, scope: !7080)
!7083 = !DILocation(line: 7009, column: 7, scope: !7080)
!7084 = !DILocation(line: 7009, column: 16, scope: !7080)
!7085 = !DILocation(line: 7009, column: 27, scope: !7080)
!7086 = !DILocation(line: 7008, column: 7, scope: !7080)
!7087 = !DILocation(line: 7008, column: 5, scope: !7080)
!7088 = !DILocation(line: 7010, column: 7, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7080, file: !1, line: 7010, column: 7)
!7090 = !DILocation(line: 7010, column: 9, scope: !7089)
!7091 = !DILocation(line: 7010, column: 7, scope: !7080)
!7092 = !DILocation(line: 7011, column: 12, scope: !7089)
!7093 = !DILocation(line: 7011, column: 4, scope: !7089)
!7094 = !DILocation(line: 7012, column: 2, scope: !7080)
!7095 = !DILocation(line: 7017, column: 24, scope: !684)
!7096 = !DILocation(line: 7017, column: 33, scope: !684)
!7097 = !DILocation(line: 7017, column: 2, scope: !684)
!7098 = !DILocation(line: 7018, column: 6, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7018, column: 6)
!7100 = !DILocation(line: 7018, column: 15, scope: !7099)
!7101 = !DILocation(line: 7018, column: 19, scope: !7099)
!7102 = !DILocation(line: 7018, column: 6, scope: !684)
!7103 = !DILocation(line: 7019, column: 25, scope: !7099)
!7104 = !DILocation(line: 7019, column: 34, scope: !7099)
!7105 = !DILocation(line: 7019, column: 3, scope: !7099)
!7106 = !DILocation(line: 7023, column: 6, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7023, column: 6)
!7108 = !DILocation(line: 7023, column: 15, scope: !7107)
!7109 = !DILocation(line: 7023, column: 19, scope: !7107)
!7110 = !DILocation(line: 7023, column: 6, scope: !684)
!7111 = !DILocation(line: 7024, column: 22, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7107, file: !1, line: 7023, column: 23)
!7113 = !DILocation(line: 7024, column: 7, scope: !7112)
!7114 = !DILocation(line: 7024, column: 5, scope: !7112)
!7115 = !DILocation(line: 7025, column: 7, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7112, file: !1, line: 7025, column: 7)
!7117 = !DILocation(line: 7025, column: 9, scope: !7116)
!7118 = !DILocation(line: 7025, column: 7, scope: !7112)
!7119 = !DILocation(line: 7026, column: 12, scope: !7116)
!7120 = !DILocation(line: 7026, column: 4, scope: !7116)
!7121 = !DILocation(line: 7027, column: 2, scope: !7112)
!7122 = !DILocation(line: 7030, column: 33, scope: !684)
!7123 = !DILocation(line: 7030, column: 2, scope: !684)
!7124 = !DILocation(line: 7038, column: 27, scope: !684)
!7125 = !DILocation(line: 7038, column: 32, scope: !684)
!7126 = !DILocation(line: 7038, column: 41, scope: !684)
!7127 = !DILocation(line: 7038, column: 6, scope: !684)
!7128 = !DILocation(line: 7038, column: 4, scope: !684)
!7129 = !DILocation(line: 7039, column: 6, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7039, column: 6)
!7131 = !DILocation(line: 7039, column: 8, scope: !7130)
!7132 = !DILocation(line: 7039, column: 6, scope: !684)
!7133 = !DILocation(line: 7040, column: 11, scope: !7130)
!7134 = !DILocation(line: 7040, column: 3, scope: !7130)
!7135 = !DILocation(line: 7041, column: 6, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7041, column: 6)
!7137 = !DILocation(line: 7041, column: 15, scope: !7136)
!7138 = !DILocation(line: 7041, column: 19, scope: !7136)
!7139 = !DILocation(line: 7041, column: 6, scope: !684)
!7140 = !DILocation(line: 7042, column: 28, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7136, file: !1, line: 7041, column: 27)
!7142 = !DILocation(line: 7042, column: 33, scope: !7141)
!7143 = !DILocation(line: 7042, column: 42, scope: !7141)
!7144 = !DILocation(line: 7042, column: 7, scope: !7141)
!7145 = !DILocation(line: 7042, column: 5, scope: !7141)
!7146 = !DILocation(line: 7043, column: 7, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7141, file: !1, line: 7043, column: 7)
!7148 = !DILocation(line: 7043, column: 9, scope: !7147)
!7149 = !DILocation(line: 7043, column: 7, scope: !7141)
!7150 = !DILocation(line: 7044, column: 12, scope: !7147)
!7151 = !DILocation(line: 7044, column: 4, scope: !7147)
!7152 = !DILocation(line: 7045, column: 2, scope: !7141)
!7153 = !DILocation(line: 7051, column: 13, scope: !684)
!7154 = !DILocation(line: 7052, column: 13, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7052, column: 2)
!7156 = !DILocation(line: 7052, column: 7, scope: !7155)
!7157 = !DILocation(line: 7052, column: 18, scope: !7158)
!7158 = !DILexicalBlockFile(scope: !7159, file: !1, discriminator: 1)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !1, line: 7052, column: 2)
!7160 = !DILocation(line: 7052, column: 26, scope: !7158)
!7161 = !DILocation(line: 7052, column: 35, scope: !7158)
!7162 = !DILocation(line: 7052, column: 43, scope: !7158)
!7163 = !DILocation(line: 7052, column: 24, scope: !7158)
!7164 = !DILocation(line: 7052, column: 2, scope: !7158)
!7165 = !DILocation(line: 7053, column: 32, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7159, file: !1, line: 7052, column: 63)
!7167 = !DILocation(line: 7053, column: 37, scope: !7166)
!7168 = !DILocation(line: 7053, column: 46, scope: !7166)
!7169 = !DILocation(line: 7054, column: 7, scope: !7166)
!7170 = !DILocation(line: 7053, column: 7, scope: !7166)
!7171 = !DILocation(line: 7053, column: 5, scope: !7166)
!7172 = !DILocation(line: 7055, column: 7, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7166, file: !1, line: 7055, column: 7)
!7174 = !DILocation(line: 7055, column: 9, scope: !7173)
!7175 = !DILocation(line: 7055, column: 7, scope: !7166)
!7176 = !DILocation(line: 7056, column: 12, scope: !7173)
!7177 = !DILocation(line: 7056, column: 4, scope: !7173)
!7178 = !DILocation(line: 7057, column: 2, scope: !7166)
!7179 = !DILocation(line: 7052, column: 59, scope: !7180)
!7180 = !DILexicalBlockFile(scope: !7159, file: !1, discriminator: 2)
!7181 = !DILocation(line: 7052, column: 2, scope: !7180)
!7182 = !DILocation(line: 7058, column: 6, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7058, column: 6)
!7184 = !DILocation(line: 7058, column: 15, scope: !7183)
!7185 = !DILocation(line: 7058, column: 19, scope: !7183)
!7186 = !DILocation(line: 7058, column: 6, scope: !684)
!7187 = !DILocation(line: 7059, column: 14, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7183, file: !1, line: 7058, column: 27)
!7189 = !DILocation(line: 7060, column: 14, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 7060, column: 3)
!7191 = !DILocation(line: 7060, column: 8, scope: !7190)
!7192 = !DILocation(line: 7060, column: 19, scope: !7193)
!7193 = !DILexicalBlockFile(scope: !7194, file: !1, discriminator: 1)
!7194 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 7060, column: 3)
!7195 = !DILocation(line: 7060, column: 27, scope: !7193)
!7196 = !DILocation(line: 7060, column: 36, scope: !7193)
!7197 = !DILocation(line: 7060, column: 43, scope: !7193)
!7198 = !DILocation(line: 7060, column: 25, scope: !7193)
!7199 = !DILocation(line: 7060, column: 3, scope: !7193)
!7200 = !DILocation(line: 7061, column: 33, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7194, file: !1, line: 7060, column: 63)
!7202 = !DILocation(line: 7061, column: 38, scope: !7201)
!7203 = !DILocation(line: 7061, column: 47, scope: !7201)
!7204 = !DILocation(line: 7062, column: 8, scope: !7201)
!7205 = !DILocation(line: 7061, column: 8, scope: !7201)
!7206 = !DILocation(line: 7061, column: 6, scope: !7201)
!7207 = !DILocation(line: 7063, column: 8, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7201, file: !1, line: 7063, column: 8)
!7209 = !DILocation(line: 7063, column: 10, scope: !7208)
!7210 = !DILocation(line: 7063, column: 8, scope: !7201)
!7211 = !DILocation(line: 7064, column: 13, scope: !7208)
!7212 = !DILocation(line: 7064, column: 5, scope: !7208)
!7213 = !DILocation(line: 7065, column: 3, scope: !7201)
!7214 = !DILocation(line: 7060, column: 59, scope: !7215)
!7215 = !DILexicalBlockFile(scope: !7194, file: !1, discriminator: 2)
!7216 = !DILocation(line: 7060, column: 3, scope: !7215)
!7217 = !DILocation(line: 7066, column: 2, scope: !7188)
!7218 = !DILocation(line: 7067, column: 6, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7067, column: 6)
!7220 = !DILocation(line: 7067, column: 15, scope: !7219)
!7221 = !DILocation(line: 7067, column: 19, scope: !7219)
!7222 = !DILocation(line: 7067, column: 30, scope: !7219)
!7223 = !DILocation(line: 7067, column: 33, scope: !7224)
!7224 = !DILexicalBlockFile(scope: !7219, file: !1, discriminator: 1)
!7225 = !DILocation(line: 7067, column: 44, scope: !7224)
!7226 = !DILocation(line: 7067, column: 6, scope: !7224)
!7227 = !DILocation(line: 7074, column: 22, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7219, file: !1, line: 7067, column: 54)
!7229 = !DILocation(line: 7074, column: 25, scope: !7228)
!7230 = !DILocation(line: 7075, column: 47, scope: !7228)
!7231 = !DILocation(line: 7074, column: 3, scope: !7228)
!7232 = !DILocation(line: 7076, column: 3, scope: !7228)
!7233 = !DILocation(line: 7080, column: 30, scope: !684)
!7234 = !DILocation(line: 7080, column: 39, scope: !684)
!7235 = !DILocation(line: 7080, column: 2, scope: !684)
!7236 = !DILocation(line: 7081, column: 6, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !684, file: !1, line: 7081, column: 6)
!7238 = !DILocation(line: 7081, column: 15, scope: !7237)
!7239 = !DILocation(line: 7081, column: 19, scope: !7237)
!7240 = !DILocation(line: 7081, column: 6, scope: !684)
!7241 = !DILocation(line: 7082, column: 31, scope: !7237)
!7242 = !DILocation(line: 7082, column: 40, scope: !7237)
!7243 = !DILocation(line: 7082, column: 3, scope: !7237)
!7244 = !DILocation(line: 7084, column: 2, scope: !684)
!7245 = !DILocation(line: 7085, column: 1, scope: !684)
!7246 = !DILocalVariable(name: "iso9660", arg: 1, scope: !787, file: !1, line: 5359, type: !530)
!7247 = !DILocation(line: 5359, column: 49, scope: !787)
!7248 = !DILocalVariable(name: "location", arg: 2, scope: !787, file: !1, line: 5359, type: !31)
!7249 = !DILocation(line: 5359, column: 62, scope: !787)
!7250 = !DILocalVariable(name: "vdd", arg: 3, scope: !787, file: !1, line: 5360, type: !688)
!7251 = !DILocation(line: 5360, column: 17, scope: !787)
!7252 = !DILocalVariable(name: "np", scope: !787, file: !1, line: 5362, type: !76)
!7253 = !DILocation(line: 5362, column: 17, scope: !787)
!7254 = !DILocalVariable(name: "depth", scope: !787, file: !1, line: 5363, type: !31)
!7255 = !DILocation(line: 5363, column: 6, scope: !787)
!7256 = !DILocation(line: 5365, column: 2, scope: !787)
!7257 = !DILocation(line: 5365, column: 7, scope: !787)
!7258 = !DILocation(line: 5365, column: 23, scope: !787)
!7259 = !DILocation(line: 5366, column: 8, scope: !787)
!7260 = !DILocation(line: 5367, column: 7, scope: !787)
!7261 = !DILocation(line: 5367, column: 12, scope: !787)
!7262 = !DILocation(line: 5367, column: 5, scope: !787)
!7263 = !DILocation(line: 5368, column: 2, scope: !787)
!7264 = !DILocalVariable(name: "block", scope: !7265, file: !1, line: 5369, type: !31)
!7265 = distinct !DILexicalBlock(scope: !787, file: !1, line: 5368, column: 5)
!7266 = !DILocation(line: 5369, column: 7, scope: !7265)
!7267 = !DILocation(line: 5372, column: 7, scope: !7265)
!7268 = !DILocation(line: 5372, column: 16, scope: !7265)
!7269 = !DILocation(line: 5372, column: 21, scope: !7265)
!7270 = !DILocation(line: 5372, column: 25, scope: !7265)
!7271 = !DILocation(line: 5371, column: 19, scope: !7265)
!7272 = !DILocation(line: 5371, column: 3, scope: !7265)
!7273 = !DILocation(line: 5371, column: 7, scope: !7265)
!7274 = !DILocation(line: 5371, column: 17, scope: !7265)
!7275 = !DILocation(line: 5373, column: 27, scope: !7265)
!7276 = !DILocation(line: 5373, column: 31, scope: !7265)
!7277 = !DILocation(line: 5373, column: 3, scope: !7265)
!7278 = !DILocation(line: 5373, column: 8, scope: !7265)
!7279 = !DILocation(line: 5373, column: 24, scope: !7265)
!7280 = !DILocation(line: 5374, column: 22, scope: !7265)
!7281 = !DILocation(line: 5374, column: 3, scope: !7265)
!7282 = !DILocation(line: 5374, column: 7, scope: !7265)
!7283 = !DILocation(line: 5374, column: 20, scope: !7265)
!7284 = !DILocation(line: 5375, column: 15, scope: !7265)
!7285 = !DILocation(line: 5375, column: 19, scope: !7265)
!7286 = !DILocation(line: 5375, column: 12, scope: !7265)
!7287 = !DILocation(line: 5376, column: 32, scope: !7265)
!7288 = !DILocation(line: 5376, column: 36, scope: !7265)
!7289 = !DILocation(line: 5376, column: 11, scope: !7265)
!7290 = !DILocation(line: 5376, column: 9, scope: !7265)
!7291 = !DILocation(line: 5377, column: 27, scope: !7265)
!7292 = !DILocation(line: 5377, column: 3, scope: !7265)
!7293 = !DILocation(line: 5377, column: 8, scope: !7265)
!7294 = !DILocation(line: 5377, column: 24, scope: !7265)
!7295 = !DILocation(line: 5378, column: 15, scope: !7265)
!7296 = !DILocation(line: 5378, column: 12, scope: !7265)
!7297 = !DILocation(line: 5380, column: 7, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7265, file: !1, line: 5380, column: 7)
!7299 = !DILocation(line: 5380, column: 11, scope: !7298)
!7300 = !DILocation(line: 5380, column: 19, scope: !7298)
!7301 = !DILocation(line: 5380, column: 25, scope: !7298)
!7302 = !DILocation(line: 5380, column: 33, scope: !7298)
!7303 = !DILocation(line: 5380, column: 36, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7298, file: !1, discriminator: 1)
!7305 = !DILocation(line: 5380, column: 42, scope: !7304)
!7306 = !DILocation(line: 5380, column: 48, scope: !7304)
!7307 = !DILocation(line: 5380, column: 53, scope: !7304)
!7308 = !DILocation(line: 5380, column: 46, scope: !7304)
!7309 = !DILocation(line: 5380, column: 7, scope: !7304)
!7310 = !DILocation(line: 5382, column: 9, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7298, file: !1, line: 5380, column: 64)
!7312 = !DILocation(line: 5382, column: 13, scope: !7311)
!7313 = !DILocation(line: 5382, column: 21, scope: !7311)
!7314 = !DILocation(line: 5382, column: 7, scope: !7311)
!7315 = !DILocation(line: 5383, column: 9, scope: !7311)
!7316 = !DILocation(line: 5384, column: 4, scope: !7311)
!7317 = !DILocation(line: 5386, column: 3, scope: !7265)
!7318 = !DILocation(line: 5386, column: 10, scope: !7319)
!7319 = !DILexicalBlockFile(scope: !7265, file: !1, discriminator: 1)
!7320 = !DILocation(line: 5386, column: 16, scope: !7319)
!7321 = !DILocation(line: 5386, column: 20, scope: !7319)
!7322 = !DILocation(line: 5386, column: 13, scope: !7319)
!7323 = !DILocation(line: 5386, column: 3, scope: !7319)
!7324 = !DILocation(line: 5387, column: 8, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 5387, column: 8)
!7326 = distinct !DILexicalBlock(scope: !7265, file: !1, line: 5386, column: 28)
!7327 = !DILocation(line: 5387, column: 12, scope: !7325)
!7328 = !DILocation(line: 5387, column: 19, scope: !7325)
!7329 = !DILocation(line: 5387, column: 8, scope: !7326)
!7330 = !DILocation(line: 5389, column: 10, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 5387, column: 28)
!7332 = !DILocation(line: 5389, column: 14, scope: !7331)
!7333 = !DILocation(line: 5389, column: 8, scope: !7331)
!7334 = !DILocation(line: 5390, column: 10, scope: !7331)
!7335 = !DILocation(line: 5391, column: 4, scope: !7331)
!7336 = !DILocation(line: 5392, column: 10, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7325, file: !1, line: 5391, column: 11)
!7338 = !DILocation(line: 5392, column: 14, scope: !7337)
!7339 = !DILocation(line: 5392, column: 8, scope: !7337)
!7340 = !DILocation(line: 5393, column: 5, scope: !7337)
!7341 = !DILocation(line: 5386, column: 3, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !7265, file: !1, discriminator: 2)
!7343 = !DILocation(line: 5396, column: 2, scope: !7265)
!7344 = !DILocation(line: 5396, column: 11, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !787, file: !1, discriminator: 1)
!7346 = !DILocation(line: 5396, column: 17, scope: !7345)
!7347 = !DILocation(line: 5396, column: 21, scope: !7345)
!7348 = !DILocation(line: 5396, column: 14, scope: !7345)
!7349 = !DILocation(line: 5396, column: 2, scope: !7345)
!7350 = !DILocation(line: 5397, column: 1, scope: !787)
!7351 = !DILocalVariable(name: "iso9660", arg: 1, scope: !869, file: !1, line: 5440, type: !530)
!7352 = !DILocation(line: 5440, column: 44, scope: !869)
!7353 = !DILocalVariable(name: "location", arg: 2, scope: !869, file: !1, line: 5440, type: !31)
!7354 = !DILocation(line: 5440, column: 57, scope: !869)
!7355 = !DILocalVariable(name: "isoent", scope: !869, file: !1, line: 5442, type: !76)
!7356 = !DILocation(line: 5442, column: 17, scope: !869)
!7357 = !DILocalVariable(name: "np", scope: !869, file: !1, line: 5443, type: !76)
!7358 = !DILocation(line: 5443, column: 17, scope: !869)
!7359 = !DILocalVariable(name: "file", scope: !869, file: !1, line: 5444, type: !7)
!7360 = !DILocation(line: 5444, column: 18, scope: !869)
!7361 = !DILocalVariable(name: "size", scope: !869, file: !1, line: 5445, type: !23)
!7362 = !DILocation(line: 5445, column: 9, scope: !869)
!7363 = !DILocalVariable(name: "block", scope: !869, file: !1, line: 5446, type: !31)
!7364 = !DILocation(line: 5446, column: 6, scope: !869)
!7365 = !DILocalVariable(name: "depth", scope: !869, file: !1, line: 5447, type: !31)
!7366 = !DILocation(line: 5447, column: 6, scope: !869)
!7367 = !DILocalVariable(name: "joliet", scope: !869, file: !1, line: 5448, type: !31)
!7368 = !DILocation(line: 5448, column: 6, scope: !869)
!7369 = !DILocalVariable(name: "symlocation", scope: !869, file: !1, line: 5449, type: !31)
!7370 = !DILocation(line: 5449, column: 6, scope: !869)
!7371 = !DILocalVariable(name: "total_block", scope: !869, file: !1, line: 5450, type: !31)
!7372 = !DILocation(line: 5450, column: 6, scope: !869)
!7373 = !DILocation(line: 5452, column: 2, scope: !869)
!7374 = !DILocation(line: 5452, column: 11, scope: !869)
!7375 = !DILocation(line: 5452, column: 28, scope: !869)
!7376 = !DILocation(line: 5453, column: 16, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !869, file: !1, line: 5453, column: 6)
!7378 = !DILocation(line: 5453, column: 25, scope: !7377)
!7379 = !DILocation(line: 5453, column: 35, scope: !7377)
!7380 = !DILocation(line: 5453, column: 14, scope: !7377)
!7381 = !DILocation(line: 5453, column: 44, scope: !7377)
!7382 = !DILocation(line: 5453, column: 6, scope: !869)
!7383 = !DILocation(line: 5454, column: 36, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7377, file: !1, line: 5453, column: 53)
!7385 = !DILocation(line: 5454, column: 3, scope: !7384)
!7386 = !DILocation(line: 5454, column: 11, scope: !7384)
!7387 = !DILocation(line: 5454, column: 17, scope: !7384)
!7388 = !DILocation(line: 5454, column: 25, scope: !7384)
!7389 = !DILocation(line: 5454, column: 34, scope: !7384)
!7390 = !DILocation(line: 5455, column: 37, scope: !7384)
!7391 = !DILocation(line: 5455, column: 45, scope: !7384)
!7392 = !DILocation(line: 5455, column: 51, scope: !7384)
!7393 = !DILocation(line: 5455, column: 18, scope: !7384)
!7394 = !DILocation(line: 5455, column: 58, scope: !7384)
!7395 = !DILocation(line: 5456, column: 26, scope: !7384)
!7396 = !DILocation(line: 5456, column: 30, scope: !7384)
!7397 = !DILocation(line: 5455, column: 11, scope: !7384)
!7398 = !DILocation(line: 5455, column: 9, scope: !7384)
!7399 = !DILocation(line: 5457, column: 15, scope: !7384)
!7400 = !DILocation(line: 5457, column: 12, scope: !7384)
!7401 = !DILocation(line: 5458, column: 32, scope: !7384)
!7402 = !DILocation(line: 5458, column: 3, scope: !7384)
!7403 = !DILocation(line: 5458, column: 12, scope: !7384)
!7404 = !DILocation(line: 5458, column: 29, scope: !7384)
!7405 = !DILocation(line: 5459, column: 2, scope: !7384)
!7406 = !DILocation(line: 5460, column: 16, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !869, file: !1, line: 5460, column: 6)
!7408 = !DILocation(line: 5460, column: 25, scope: !7407)
!7409 = !DILocation(line: 5460, column: 35, scope: !7407)
!7410 = !DILocation(line: 5460, column: 14, scope: !7407)
!7411 = !DILocation(line: 5460, column: 41, scope: !7407)
!7412 = !DILocation(line: 5460, column: 6, scope: !869)
!7413 = !DILocation(line: 5461, column: 36, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7407, file: !1, line: 5460, column: 50)
!7415 = !DILocation(line: 5461, column: 3, scope: !7414)
!7416 = !DILocation(line: 5461, column: 11, scope: !7414)
!7417 = !DILocation(line: 5461, column: 17, scope: !7414)
!7418 = !DILocation(line: 5461, column: 25, scope: !7414)
!7419 = !DILocation(line: 5461, column: 34, scope: !7414)
!7420 = !DILocation(line: 5462, column: 29, scope: !7414)
!7421 = !DILocation(line: 5462, column: 38, scope: !7414)
!7422 = !DILocation(line: 5462, column: 48, scope: !7414)
!7423 = !DILocation(line: 5462, column: 10, scope: !7414)
!7424 = !DILocation(line: 5462, column: 8, scope: !7414)
!7425 = !DILocation(line: 5463, column: 7, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7414, file: !1, line: 5463, column: 7)
!7427 = !DILocation(line: 5463, column: 12, scope: !7426)
!7428 = !DILocation(line: 5463, column: 7, scope: !7414)
!7429 = !DILocation(line: 5464, column: 38, scope: !7426)
!7430 = !DILocation(line: 5464, column: 46, scope: !7426)
!7431 = !DILocation(line: 5464, column: 52, scope: !7426)
!7432 = !DILocation(line: 5464, column: 19, scope: !7426)
!7433 = !DILocation(line: 5464, column: 9, scope: !7426)
!7434 = !DILocation(line: 5464, column: 4, scope: !7426)
!7435 = !DILocation(line: 5465, column: 17, scope: !7414)
!7436 = !DILocation(line: 5465, column: 12, scope: !7414)
!7437 = !DILocation(line: 5465, column: 22, scope: !7414)
!7438 = !DILocation(line: 5465, column: 43, scope: !7414)
!7439 = !DILocation(line: 5466, column: 7, scope: !7414)
!7440 = !DILocation(line: 5465, column: 9, scope: !7414)
!7441 = !DILocation(line: 5467, column: 15, scope: !7414)
!7442 = !DILocation(line: 5467, column: 12, scope: !7414)
!7443 = !DILocation(line: 5468, column: 32, scope: !7414)
!7444 = !DILocation(line: 5468, column: 3, scope: !7414)
!7445 = !DILocation(line: 5468, column: 12, scope: !7414)
!7446 = !DILocation(line: 5468, column: 29, scope: !7414)
!7447 = !DILocation(line: 5469, column: 34, scope: !7414)
!7448 = !DILocation(line: 5469, column: 3, scope: !7414)
!7449 = !DILocation(line: 5469, column: 11, scope: !7414)
!7450 = !DILocation(line: 5469, column: 17, scope: !7414)
!7451 = !DILocation(line: 5469, column: 25, scope: !7414)
!7452 = !DILocation(line: 5469, column: 32, scope: !7414)
!7453 = !DILocation(line: 5470, column: 2, scope: !7414)
!7454 = !DILocation(line: 5472, column: 8, scope: !869)
!7455 = !DILocation(line: 5473, column: 14, scope: !869)
!7456 = !DILocation(line: 5474, column: 7, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !869, file: !1, line: 5474, column: 6)
!7458 = !DILocation(line: 5474, column: 16, scope: !7457)
!7459 = !DILocation(line: 5474, column: 20, scope: !7457)
!7460 = !DILocation(line: 5474, column: 23, scope: !7457)
!7461 = !DILocation(line: 5474, column: 26, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !7457, file: !1, discriminator: 1)
!7463 = !DILocation(line: 5474, column: 35, scope: !7462)
!7464 = !DILocation(line: 5474, column: 39, scope: !7462)
!7465 = !DILocation(line: 5474, column: 6, scope: !7462)
!7466 = !DILocation(line: 5475, column: 10, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7457, file: !1, line: 5474, column: 47)
!7468 = !DILocation(line: 5476, column: 8, scope: !7467)
!7469 = !DILocation(line: 5476, column: 17, scope: !7467)
!7470 = !DILocation(line: 5476, column: 24, scope: !7467)
!7471 = !DILocation(line: 5476, column: 6, scope: !7467)
!7472 = !DILocation(line: 5477, column: 2, scope: !7467)
!7473 = !DILocation(line: 5478, column: 10, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7457, file: !1, line: 5477, column: 9)
!7475 = !DILocation(line: 5479, column: 8, scope: !7474)
!7476 = !DILocation(line: 5479, column: 17, scope: !7474)
!7477 = !DILocation(line: 5479, column: 25, scope: !7474)
!7478 = !DILocation(line: 5479, column: 6, scope: !7474)
!7479 = !DILocation(line: 5481, column: 2, scope: !869)
!7480 = !DILocation(line: 5482, column: 25, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !869, file: !1, line: 5481, column: 5)
!7482 = !DILocation(line: 5482, column: 34, scope: !7481)
!7483 = !DILocation(line: 5482, column: 3, scope: !7481)
!7484 = !DILocation(line: 5484, column: 7, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7481, file: !1, line: 5484, column: 7)
!7486 = !DILocation(line: 5484, column: 11, scope: !7485)
!7487 = !DILocation(line: 5484, column: 19, scope: !7485)
!7488 = !DILocation(line: 5484, column: 25, scope: !7485)
!7489 = !DILocation(line: 5484, column: 33, scope: !7485)
!7490 = !DILocation(line: 5485, column: 8, scope: !7485)
!7491 = !DILocation(line: 5485, column: 15, scope: !7485)
!7492 = !DILocation(line: 5486, column: 9, scope: !7485)
!7493 = !DILocation(line: 5486, column: 18, scope: !7485)
!7494 = !DILocation(line: 5486, column: 22, scope: !7485)
!7495 = !DILocation(line: 5486, column: 25, scope: !7485)
!7496 = !DILocation(line: 5486, column: 44, scope: !7485)
!7497 = !DILocation(line: 5487, column: 9, scope: !7485)
!7498 = !DILocation(line: 5487, column: 15, scope: !7485)
!7499 = !DILocation(line: 5487, column: 21, scope: !7485)
!7500 = !DILocation(line: 5487, column: 30, scope: !7485)
!7501 = !DILocation(line: 5487, column: 38, scope: !7485)
!7502 = !DILocation(line: 5487, column: 19, scope: !7485)
!7503 = !DILocation(line: 5487, column: 49, scope: !7485)
!7504 = !DILocation(line: 5488, column: 9, scope: !7485)
!7505 = !DILocation(line: 5488, column: 18, scope: !7485)
!7506 = !DILocation(line: 5488, column: 22, scope: !7485)
!7507 = !DILocation(line: 5488, column: 25, scope: !7485)
!7508 = !DILocation(line: 5489, column: 9, scope: !7485)
!7509 = !DILocation(line: 5489, column: 15, scope: !7485)
!7510 = !DILocation(line: 5489, column: 21, scope: !7485)
!7511 = !DILocation(line: 5489, column: 30, scope: !7485)
!7512 = !DILocation(line: 5489, column: 38, scope: !7485)
!7513 = !DILocation(line: 5489, column: 19, scope: !7485)
!7514 = !DILocation(line: 5484, column: 7, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7481, file: !1, discriminator: 1)
!7516 = !DILocation(line: 5491, column: 9, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7485, file: !1, line: 5489, column: 52)
!7518 = !DILocation(line: 5491, column: 13, scope: !7517)
!7519 = !DILocation(line: 5491, column: 21, scope: !7517)
!7520 = !DILocation(line: 5491, column: 7, scope: !7517)
!7521 = !DILocation(line: 5492, column: 9, scope: !7517)
!7522 = !DILocation(line: 5493, column: 4, scope: !7517)
!7523 = !DILocation(line: 5495, column: 3, scope: !7481)
!7524 = !DILocation(line: 5495, column: 10, scope: !7515)
!7525 = !DILocation(line: 5495, column: 16, scope: !7515)
!7526 = !DILocation(line: 5495, column: 20, scope: !7515)
!7527 = !DILocation(line: 5495, column: 13, scope: !7515)
!7528 = !DILocation(line: 5495, column: 3, scope: !7515)
!7529 = !DILocation(line: 5496, column: 8, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !1, line: 5496, column: 8)
!7531 = distinct !DILexicalBlock(scope: !7481, file: !1, line: 5495, column: 28)
!7532 = !DILocation(line: 5496, column: 12, scope: !7530)
!7533 = !DILocation(line: 5496, column: 19, scope: !7530)
!7534 = !DILocation(line: 5496, column: 8, scope: !7531)
!7535 = !DILocation(line: 5498, column: 10, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 5496, column: 28)
!7537 = !DILocation(line: 5498, column: 14, scope: !7536)
!7538 = !DILocation(line: 5498, column: 8, scope: !7536)
!7539 = !DILocation(line: 5499, column: 10, scope: !7536)
!7540 = !DILocation(line: 5500, column: 4, scope: !7536)
!7541 = !DILocation(line: 5501, column: 10, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 5500, column: 11)
!7543 = !DILocation(line: 5501, column: 14, scope: !7542)
!7544 = !DILocation(line: 5501, column: 8, scope: !7542)
!7545 = !DILocation(line: 5502, column: 5, scope: !7542)
!7546 = !DILocation(line: 5495, column: 3, scope: !7547)
!7547 = !DILexicalBlockFile(scope: !7481, file: !1, discriminator: 2)
!7548 = !DILocation(line: 5505, column: 2, scope: !7481)
!7549 = !DILocation(line: 5505, column: 11, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !869, file: !1, discriminator: 1)
!7551 = !DILocation(line: 5505, column: 17, scope: !7550)
!7552 = !DILocation(line: 5505, column: 21, scope: !7550)
!7553 = !DILocation(line: 5505, column: 14, scope: !7550)
!7554 = !DILocation(line: 5505, column: 2, scope: !7550)
!7555 = !DILocation(line: 5507, column: 14, scope: !869)
!7556 = !DILocation(line: 5508, column: 14, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !869, file: !1, line: 5508, column: 2)
!7558 = !DILocation(line: 5508, column: 23, scope: !7557)
!7559 = !DILocation(line: 5508, column: 38, scope: !7557)
!7560 = !DILocation(line: 5508, column: 12, scope: !7557)
!7561 = !DILocation(line: 5508, column: 7, scope: !7557)
!7562 = !DILocation(line: 5509, column: 6, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7557, file: !1, line: 5508, column: 2)
!7564 = !DILocation(line: 5509, column: 11, scope: !7563)
!7565 = !DILocation(line: 5508, column: 2, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !7557, file: !1, discriminator: 1)
!7567 = !DILocation(line: 5511, column: 8, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !1, line: 5511, column: 7)
!7569 = distinct !DILexicalBlock(scope: !7563, file: !1, line: 5509, column: 43)
!7570 = !DILocation(line: 5511, column: 14, scope: !7568)
!7571 = !DILocation(line: 5511, column: 7, scope: !7569)
!7572 = !DILocation(line: 5512, column: 4, scope: !7568)
!7573 = !DILocation(line: 5514, column: 25, scope: !7569)
!7574 = !DILocation(line: 5514, column: 31, scope: !7569)
!7575 = !DILocation(line: 5514, column: 3, scope: !7569)
!7576 = !DILocation(line: 5514, column: 9, scope: !7569)
!7577 = !DILocation(line: 5514, column: 21, scope: !7569)
!7578 = !DILocation(line: 5515, column: 3, scope: !7569)
!7579 = !DILocation(line: 5516, column: 34, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7569, file: !1, line: 5515, column: 6)
!7581 = !DILocation(line: 5516, column: 4, scope: !7580)
!7582 = !DILocation(line: 5516, column: 10, scope: !7580)
!7583 = !DILocation(line: 5516, column: 23, scope: !7580)
!7584 = !DILocation(line: 5516, column: 32, scope: !7580)
!7585 = !DILocation(line: 5517, column: 16, scope: !7580)
!7586 = !DILocation(line: 5517, column: 22, scope: !7580)
!7587 = !DILocation(line: 5517, column: 35, scope: !7580)
!7588 = !DILocation(line: 5517, column: 13, scope: !7580)
!7589 = !DILocation(line: 5518, column: 19, scope: !7580)
!7590 = !DILocation(line: 5518, column: 25, scope: !7580)
!7591 = !DILocation(line: 5518, column: 38, scope: !7580)
!7592 = !DILocation(line: 5518, column: 16, scope: !7580)
!7593 = !DILocation(line: 5520, column: 24, scope: !7580)
!7594 = !DILocation(line: 5520, column: 30, scope: !7580)
!7595 = !DILocation(line: 5520, column: 43, scope: !7580)
!7596 = !DILocation(line: 5520, column: 4, scope: !7580)
!7597 = !DILocation(line: 5520, column: 10, scope: !7580)
!7598 = !DILocation(line: 5520, column: 22, scope: !7580)
!7599 = !DILocation(line: 5521, column: 3, scope: !7580)
!7600 = !DILocation(line: 5521, column: 12, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7569, file: !1, discriminator: 1)
!7602 = !DILocation(line: 5521, column: 18, scope: !7601)
!7603 = !DILocation(line: 5521, column: 30, scope: !7601)
!7604 = !DILocation(line: 5521, column: 3, scope: !7601)
!7605 = !DILocation(line: 5522, column: 2, scope: !7569)
!7606 = !DILocation(line: 5509, column: 27, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7563, file: !1, discriminator: 1)
!7608 = !DILocation(line: 5509, column: 33, scope: !7607)
!7609 = !DILocation(line: 5509, column: 25, scope: !7607)
!7610 = !DILocation(line: 5508, column: 2, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !7563, file: !1, discriminator: 2)
!7612 = !DILocation(line: 5523, column: 31, scope: !869)
!7613 = !DILocation(line: 5523, column: 2, scope: !869)
!7614 = !DILocation(line: 5523, column: 11, scope: !869)
!7615 = !DILocation(line: 5523, column: 28, scope: !869)
!7616 = !DILocation(line: 5524, column: 1, scope: !869)
!7617 = !DILocalVariable(name: "a", arg: 1, scope: !878, file: !1, line: 7313, type: !367)
!7618 = !DILocation(line: 7313, column: 46, scope: !878)
!7619 = !DILocalVariable(name: "iso9660", scope: !878, file: !1, line: 7315, type: !530)
!7620 = !DILocation(line: 7315, column: 18, scope: !878)
!7621 = !DILocation(line: 7315, column: 28, scope: !878)
!7622 = !DILocation(line: 7315, column: 31, scope: !878)
!7623 = !DILocalVariable(name: "np", scope: !878, file: !1, line: 7316, type: !76)
!7624 = !DILocation(line: 7316, column: 17, scope: !878)
!7625 = !DILocalVariable(name: "size", scope: !878, file: !1, line: 7317, type: !36)
!7626 = !DILocation(line: 7317, column: 10, scope: !878)
!7627 = !DILocalVariable(name: "sum", scope: !878, file: !1, line: 7318, type: !42)
!7628 = !DILocation(line: 7318, column: 11, scope: !878)
!7629 = !DILocalVariable(name: "buff", scope: !878, file: !1, line: 7319, type: !7630)
!7630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 32768, align: 8, elements: !7631)
!7631 = !{!7632}
!7632 = !DISubrange(count: 4096)
!7633 = !DILocation(line: 7319, column: 16, scope: !878)
!7634 = !DILocation(line: 7321, column: 7, scope: !878)
!7635 = !DILocation(line: 7321, column: 16, scope: !878)
!7636 = !DILocation(line: 7321, column: 26, scope: !878)
!7637 = !DILocation(line: 7321, column: 5, scope: !878)
!7638 = !DILocation(line: 7322, column: 8, scope: !878)
!7639 = !DILocation(line: 7322, column: 17, scope: !878)
!7640 = !DILocation(line: 7323, column: 6, scope: !878)
!7641 = !DILocation(line: 7323, column: 10, scope: !878)
!7642 = !DILocation(line: 7323, column: 16, scope: !878)
!7643 = !DILocation(line: 7323, column: 24, scope: !878)
!7644 = !DILocation(line: 7323, column: 39, scope: !878)
!7645 = !DILocation(line: 7322, column: 2, scope: !878)
!7646 = !DILocation(line: 7324, column: 28, scope: !878)
!7647 = !DILocation(line: 7324, column: 32, scope: !878)
!7648 = !DILocation(line: 7324, column: 38, scope: !878)
!7649 = !DILocation(line: 7324, column: 9, scope: !878)
!7650 = !DILocation(line: 7324, column: 45, scope: !878)
!7651 = !DILocation(line: 7324, column: 7, scope: !878)
!7652 = !DILocation(line: 7325, column: 6, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !878, file: !1, line: 7325, column: 6)
!7654 = !DILocation(line: 7325, column: 11, scope: !7653)
!7655 = !DILocation(line: 7325, column: 6, scope: !878)
!7656 = !DILocation(line: 7326, column: 22, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !1, line: 7325, column: 17)
!7658 = !DILocation(line: 7326, column: 25, scope: !7657)
!7659 = !DILocation(line: 7326, column: 34, scope: !7657)
!7660 = !DILocation(line: 7327, column: 48, scope: !7657)
!7661 = !DILocation(line: 7327, column: 53, scope: !7657)
!7662 = !DILocation(line: 7326, column: 3, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !7657, file: !1, discriminator: 1)
!7664 = !DILocation(line: 7328, column: 3, scope: !7657)
!7665 = !DILocation(line: 7330, column: 6, scope: !878)
!7666 = !DILocation(line: 7331, column: 2, scope: !878)
!7667 = !DILocation(line: 7331, column: 9, scope: !7668)
!7668 = !DILexicalBlockFile(scope: !878, file: !1, discriminator: 1)
!7669 = !DILocation(line: 7331, column: 14, scope: !7668)
!7670 = !DILocation(line: 7331, column: 2, scope: !7668)
!7671 = !DILocalVariable(name: "rsize", scope: !7672, file: !1, line: 7332, type: !23)
!7672 = distinct !DILexicalBlock(scope: !878, file: !1, line: 7331, column: 19)
!7673 = !DILocation(line: 7332, column: 10, scope: !7672)
!7674 = !DILocalVariable(name: "i", scope: !7672, file: !1, line: 7333, type: !396)
!7675 = !DILocation(line: 7333, column: 11, scope: !7672)
!7676 = !DILocalVariable(name: "rs", scope: !7672, file: !1, line: 7333, type: !396)
!7677 = !DILocation(line: 7333, column: 14, scope: !7672)
!7678 = !DILocation(line: 7335, column: 7, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7672, file: !1, line: 7335, column: 7)
!7680 = !DILocation(line: 7335, column: 12, scope: !7679)
!7681 = !DILocation(line: 7335, column: 7, scope: !7672)
!7682 = !DILocation(line: 7336, column: 10, scope: !7679)
!7683 = !DILocation(line: 7336, column: 4, scope: !7679)
!7684 = !DILocation(line: 7338, column: 20, scope: !7679)
!7685 = !DILocation(line: 7338, column: 10, scope: !7679)
!7686 = !DILocation(line: 7340, column: 13, scope: !7672)
!7687 = !DILocation(line: 7340, column: 22, scope: !7672)
!7688 = !DILocation(line: 7340, column: 31, scope: !7672)
!7689 = !DILocation(line: 7340, column: 37, scope: !7672)
!7690 = !DILocation(line: 7340, column: 8, scope: !7672)
!7691 = !DILocation(line: 7340, column: 6, scope: !7672)
!7692 = !DILocation(line: 7341, column: 7, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7672, file: !1, line: 7341, column: 7)
!7694 = !DILocation(line: 7341, column: 10, scope: !7693)
!7695 = !DILocation(line: 7341, column: 7, scope: !7672)
!7696 = !DILocation(line: 7342, column: 23, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7693, file: !1, line: 7341, column: 16)
!7698 = !DILocation(line: 7342, column: 26, scope: !7697)
!7699 = !DILocation(line: 7342, column: 35, scope: !7697)
!7700 = !DILocation(line: 7344, column: 18, scope: !7697)
!7701 = !DILocation(line: 7342, column: 4, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7697, file: !1, discriminator: 1)
!7703 = !DILocation(line: 7345, column: 4, scope: !7697)
!7704 = !DILocation(line: 7347, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7672, file: !1, line: 7347, column: 3)
!7706 = !DILocation(line: 7347, column: 8, scope: !7705)
!7707 = !DILocation(line: 7347, column: 15, scope: !7708)
!7708 = !DILexicalBlockFile(scope: !7709, file: !1, discriminator: 1)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !1, line: 7347, column: 3)
!7710 = !DILocation(line: 7347, column: 19, scope: !7708)
!7711 = !DILocation(line: 7347, column: 17, scope: !7708)
!7712 = !DILocation(line: 7347, column: 3, scope: !7708)
!7713 = !DILocation(line: 7348, column: 27, scope: !7709)
!7714 = !DILocation(line: 7348, column: 34, scope: !7709)
!7715 = !DILocation(line: 7348, column: 32, scope: !7709)
!7716 = !DILocation(line: 7348, column: 11, scope: !7709)
!7717 = !DILocation(line: 7348, column: 8, scope: !7709)
!7718 = !DILocation(line: 7348, column: 4, scope: !7709)
!7719 = !DILocation(line: 7347, column: 25, scope: !7720)
!7720 = !DILexicalBlockFile(scope: !7709, file: !1, discriminator: 2)
!7721 = !DILocation(line: 7347, column: 3, scope: !7720)
!7722 = !DILocation(line: 7349, column: 11, scope: !7672)
!7723 = !DILocation(line: 7349, column: 8, scope: !7672)
!7724 = !DILocation(line: 7331, column: 2, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !878, file: !1, discriminator: 2)
!7726 = !DILocation(line: 7352, column: 14, scope: !878)
!7727 = !DILocation(line: 7352, column: 2, scope: !878)
!7728 = !DILocation(line: 7354, column: 14, scope: !878)
!7729 = !DILocation(line: 7354, column: 18, scope: !878)
!7730 = !DILocation(line: 7354, column: 22, scope: !878)
!7731 = !DILocation(line: 7354, column: 26, scope: !878)
!7732 = !DILocation(line: 7354, column: 32, scope: !878)
!7733 = !DILocation(line: 7354, column: 40, scope: !878)
!7734 = !DILocation(line: 7354, column: 2, scope: !878)
!7735 = !DILocation(line: 7356, column: 28, scope: !878)
!7736 = !DILocation(line: 7356, column: 37, scope: !878)
!7737 = !DILocation(line: 7356, column: 47, scope: !878)
!7738 = !DILocation(line: 7356, column: 9, scope: !878)
!7739 = !DILocation(line: 7356, column: 7, scope: !878)
!7740 = !DILocation(line: 7357, column: 6, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !878, file: !1, line: 7357, column: 6)
!7742 = !DILocation(line: 7357, column: 11, scope: !7741)
!7743 = !DILocation(line: 7357, column: 6, scope: !878)
!7744 = !DILocation(line: 7358, column: 29, scope: !7741)
!7745 = !DILocation(line: 7358, column: 33, scope: !7741)
!7746 = !DILocation(line: 7358, column: 39, scope: !7741)
!7747 = !DILocation(line: 7358, column: 10, scope: !7741)
!7748 = !DILocation(line: 7358, column: 8, scope: !7741)
!7749 = !DILocation(line: 7358, column: 3, scope: !7741)
!7750 = !DILocation(line: 7359, column: 14, scope: !878)
!7751 = !DILocation(line: 7359, column: 18, scope: !878)
!7752 = !DILocation(line: 7359, column: 32, scope: !878)
!7753 = !DILocation(line: 7359, column: 22, scope: !878)
!7754 = !DILocation(line: 7359, column: 2, scope: !878)
!7755 = !DILocation(line: 7361, column: 14, scope: !878)
!7756 = !DILocation(line: 7361, column: 18, scope: !878)
!7757 = !DILocation(line: 7361, column: 23, scope: !878)
!7758 = !DILocation(line: 7361, column: 2, scope: !878)
!7759 = !DILocation(line: 7363, column: 9, scope: !878)
!7760 = !DILocation(line: 7363, column: 13, scope: !878)
!7761 = !DILocation(line: 7363, column: 2, scope: !878)
!7762 = !DILocation(line: 7366, column: 8, scope: !878)
!7763 = !DILocation(line: 7366, column: 17, scope: !878)
!7764 = !DILocation(line: 7367, column: 6, scope: !878)
!7765 = !DILocation(line: 7367, column: 10, scope: !878)
!7766 = !DILocation(line: 7367, column: 16, scope: !878)
!7767 = !DILocation(line: 7367, column: 24, scope: !878)
!7768 = !DILocation(line: 7367, column: 39, scope: !878)
!7769 = !DILocation(line: 7366, column: 2, scope: !878)
!7770 = !DILocation(line: 7368, column: 24, scope: !878)
!7771 = !DILocation(line: 7368, column: 27, scope: !878)
!7772 = !DILocation(line: 7368, column: 10, scope: !878)
!7773 = !DILocation(line: 7368, column: 2, scope: !878)
!7774 = !DILocation(line: 7369, column: 1, scope: !878)
!7775 = !DILocalVariable(name: "a", arg: 1, scope: !879, file: !1, line: 3834, type: !367)
!7776 = !DILocation(line: 3834, column: 32, scope: !879)
!7777 = !DILocalVariable(name: "vdd", arg: 2, scope: !879, file: !1, line: 3834, type: !688)
!7778 = !DILocation(line: 3834, column: 47, scope: !879)
!7779 = !DILocalVariable(name: "iso9660", scope: !879, file: !1, line: 3836, type: !530)
!7780 = !DILocation(line: 3836, column: 18, scope: !879)
!7781 = !DILocalVariable(name: "bp", scope: !879, file: !1, line: 3837, type: !544)
!7782 = !DILocation(line: 3837, column: 17, scope: !879)
!7783 = !DILocalVariable(name: "volume_set_size", scope: !879, file: !1, line: 3838, type: !307)
!7784 = !DILocation(line: 3838, column: 11, scope: !879)
!7785 = !DILocalVariable(name: "identifier", scope: !879, file: !1, line: 3839, type: !4056)
!7786 = !DILocation(line: 3839, column: 7, scope: !879)
!7787 = !DILocalVariable(name: "vdt", scope: !879, file: !1, line: 3840, type: !344)
!7788 = !DILocation(line: 3840, column: 15, scope: !879)
!7789 = !DILocalVariable(name: "vdc", scope: !879, file: !1, line: 3841, type: !350)
!7790 = !DILocation(line: 3841, column: 11, scope: !879)
!7791 = !DILocalVariable(name: "vd_ver", scope: !879, file: !1, line: 3842, type: !53)
!7792 = !DILocation(line: 3842, column: 16, scope: !879)
!7793 = !DILocalVariable(name: "fst_ver", scope: !879, file: !1, line: 3842, type: !53)
!7794 = !DILocation(line: 3842, column: 24, scope: !879)
!7795 = !DILocalVariable(name: "r", scope: !879, file: !1, line: 3843, type: !31)
!7796 = !DILocation(line: 3843, column: 6, scope: !879)
!7797 = !DILocation(line: 3845, column: 12, scope: !879)
!7798 = !DILocation(line: 3845, column: 15, scope: !879)
!7799 = !DILocation(line: 3845, column: 10, scope: !879)
!7800 = !DILocation(line: 3846, column: 10, scope: !879)
!7801 = !DILocation(line: 3846, column: 15, scope: !879)
!7802 = !DILocation(line: 3846, column: 2, scope: !879)
!7803 = !DILocation(line: 3848, column: 7, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3846, column: 25)
!7805 = !DILocation(line: 3849, column: 20, scope: !7804)
!7806 = !DILocation(line: 3849, column: 10, scope: !7804)
!7807 = !DILocation(line: 3850, column: 7, scope: !7804)
!7808 = !DILocation(line: 3851, column: 3, scope: !7804)
!7809 = !DILocation(line: 3853, column: 7, scope: !7804)
!7810 = !DILocation(line: 3854, column: 20, scope: !7804)
!7811 = !DILocation(line: 3854, column: 10, scope: !7804)
!7812 = !DILocation(line: 3855, column: 7, scope: !7804)
!7813 = !DILocation(line: 3856, column: 3, scope: !7804)
!7814 = !DILocation(line: 3856, column: 3, scope: !7815)
!7815 = !DILexicalBlockFile(scope: !7804, file: !1, discriminator: 1)
!7816 = !DILocation(line: 3859, column: 7, scope: !7804)
!7817 = !DILocation(line: 3860, column: 20, scope: !7804)
!7818 = !DILocation(line: 3860, column: 10, scope: !7804)
!7819 = !DILocation(line: 3864, column: 7, scope: !7804)
!7820 = !DILocation(line: 3866, column: 3, scope: !7804)
!7821 = !DILocation(line: 3869, column: 18, scope: !879)
!7822 = !DILocation(line: 3869, column: 7, scope: !879)
!7823 = !DILocation(line: 3869, column: 21, scope: !879)
!7824 = !DILocation(line: 3869, column: 5, scope: !879)
!7825 = !DILocation(line: 3871, column: 12, scope: !879)
!7826 = !DILocation(line: 3871, column: 16, scope: !879)
!7827 = !DILocation(line: 3871, column: 21, scope: !879)
!7828 = !DILocation(line: 3871, column: 2, scope: !879)
!7829 = !DILocation(line: 3873, column: 22, scope: !879)
!7830 = !DILocation(line: 3873, column: 2, scope: !879)
!7831 = !DILocation(line: 3875, column: 24, scope: !879)
!7832 = !DILocation(line: 3875, column: 2, scope: !879)
!7833 = !DILocation(line: 3876, column: 30, scope: !879)
!7834 = !DILocation(line: 3876, column: 33, scope: !879)
!7835 = !DILocation(line: 3876, column: 44, scope: !879)
!7836 = !DILocation(line: 3876, column: 56, scope: !879)
!7837 = !DILocation(line: 3876, column: 6, scope: !879)
!7838 = !DILocation(line: 3876, column: 4, scope: !879)
!7839 = !DILocation(line: 3877, column: 6, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3877, column: 6)
!7841 = !DILocation(line: 3877, column: 8, scope: !7840)
!7842 = !DILocation(line: 3877, column: 6, scope: !879)
!7843 = !DILocation(line: 3878, column: 11, scope: !7840)
!7844 = !DILocation(line: 3878, column: 3, scope: !7840)
!7845 = !DILocation(line: 3880, column: 30, scope: !879)
!7846 = !DILocation(line: 3880, column: 33, scope: !879)
!7847 = !DILocation(line: 3881, column: 6, scope: !879)
!7848 = !DILocation(line: 3881, column: 15, scope: !879)
!7849 = !DILocation(line: 3881, column: 33, scope: !879)
!7850 = !DILocation(line: 3881, column: 36, scope: !879)
!7851 = !DILocation(line: 3880, column: 6, scope: !879)
!7852 = !DILocation(line: 3880, column: 4, scope: !879)
!7853 = !DILocation(line: 3882, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3882, column: 6)
!7855 = !DILocation(line: 3882, column: 8, scope: !7854)
!7856 = !DILocation(line: 3882, column: 6, scope: !879)
!7857 = !DILocation(line: 3883, column: 11, scope: !7854)
!7858 = !DILocation(line: 3883, column: 3, scope: !7854)
!7859 = !DILocation(line: 3885, column: 22, scope: !879)
!7860 = !DILocation(line: 3885, column: 2, scope: !879)
!7861 = !DILocation(line: 3887, column: 14, scope: !879)
!7862 = !DILocation(line: 3887, column: 16, scope: !879)
!7863 = !DILocation(line: 3887, column: 21, scope: !879)
!7864 = !DILocation(line: 3887, column: 30, scope: !879)
!7865 = !DILocation(line: 3887, column: 2, scope: !879)
!7866 = !DILocation(line: 3888, column: 6, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3888, column: 6)
!7868 = !DILocation(line: 3888, column: 11, scope: !7867)
!7869 = !DILocation(line: 3888, column: 20, scope: !7867)
!7870 = !DILocation(line: 3888, column: 6, scope: !879)
!7871 = !DILocation(line: 3890, column: 3, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7867, file: !1, line: 3888, column: 35)
!7873 = !DILocation(line: 3890, column: 10, scope: !7872)
!7874 = !DILocation(line: 3891, column: 3, scope: !7872)
!7875 = !DILocation(line: 3891, column: 10, scope: !7872)
!7876 = !DILocation(line: 3892, column: 3, scope: !7872)
!7877 = !DILocation(line: 3892, column: 10, scope: !7872)
!7878 = !DILocation(line: 3893, column: 10, scope: !7872)
!7879 = !DILocation(line: 3893, column: 13, scope: !7872)
!7880 = !DILocation(line: 3893, column: 3, scope: !7872)
!7881 = !DILocation(line: 3894, column: 2, scope: !7872)
!7882 = !DILocation(line: 3896, column: 23, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7867, file: !1, line: 3894, column: 9)
!7884 = !DILocation(line: 3896, column: 3, scope: !7883)
!7885 = !DILocation(line: 3899, column: 14, scope: !879)
!7886 = !DILocation(line: 3899, column: 16, scope: !879)
!7887 = !DILocation(line: 3899, column: 22, scope: !879)
!7888 = !DILocation(line: 3899, column: 2, scope: !879)
!7889 = !DILocation(line: 3901, column: 14, scope: !879)
!7890 = !DILocation(line: 3901, column: 16, scope: !879)
!7891 = !DILocation(line: 3901, column: 22, scope: !879)
!7892 = !DILocation(line: 3901, column: 31, scope: !879)
!7893 = !DILocation(line: 3901, column: 2, scope: !879)
!7894 = !DILocation(line: 3903, column: 14, scope: !879)
!7895 = !DILocation(line: 3903, column: 16, scope: !879)
!7896 = !DILocation(line: 3903, column: 2, scope: !879)
!7897 = !DILocation(line: 3905, column: 14, scope: !879)
!7898 = !DILocation(line: 3905, column: 16, scope: !879)
!7899 = !DILocation(line: 3905, column: 22, scope: !879)
!7900 = !DILocation(line: 3905, column: 27, scope: !879)
!7901 = !DILocation(line: 3905, column: 2, scope: !879)
!7902 = !DILocation(line: 3907, column: 14, scope: !879)
!7903 = !DILocation(line: 3907, column: 16, scope: !879)
!7904 = !DILocation(line: 3907, column: 22, scope: !879)
!7905 = !DILocation(line: 3907, column: 27, scope: !879)
!7906 = !DILocation(line: 3907, column: 2, scope: !879)
!7907 = !DILocation(line: 3909, column: 14, scope: !879)
!7908 = !DILocation(line: 3909, column: 16, scope: !879)
!7909 = !DILocation(line: 3909, column: 2, scope: !879)
!7910 = !DILocation(line: 3911, column: 14, scope: !879)
!7911 = !DILocation(line: 3911, column: 16, scope: !879)
!7912 = !DILocation(line: 3911, column: 22, scope: !879)
!7913 = !DILocation(line: 3911, column: 27, scope: !879)
!7914 = !DILocation(line: 3911, column: 2, scope: !879)
!7915 = !DILocation(line: 3913, column: 14, scope: !879)
!7916 = !DILocation(line: 3913, column: 16, scope: !879)
!7917 = !DILocation(line: 3913, column: 2, scope: !879)
!7918 = !DILocation(line: 3915, column: 23, scope: !879)
!7919 = !DILocation(line: 3915, column: 25, scope: !879)
!7920 = !DILocation(line: 3915, column: 42, scope: !879)
!7921 = !DILocation(line: 3915, column: 47, scope: !879)
!7922 = !DILocation(line: 3916, column: 6, scope: !879)
!7923 = !DILocation(line: 3916, column: 27, scope: !879)
!7924 = !DILocation(line: 3916, column: 32, scope: !879)
!7925 = !DILocation(line: 3915, column: 2, scope: !879)
!7926 = !DILocation(line: 3918, column: 30, scope: !879)
!7927 = !DILocation(line: 3918, column: 33, scope: !879)
!7928 = !DILocation(line: 3918, column: 51, scope: !879)
!7929 = !DILocation(line: 3918, column: 6, scope: !879)
!7930 = !DILocation(line: 3918, column: 4, scope: !879)
!7931 = !DILocation(line: 3919, column: 6, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3919, column: 6)
!7933 = !DILocation(line: 3919, column: 8, scope: !7932)
!7934 = !DILocation(line: 3919, column: 6, scope: !879)
!7935 = !DILocation(line: 3920, column: 11, scope: !7932)
!7936 = !DILocation(line: 3920, column: 3, scope: !7932)
!7937 = !DILocation(line: 3922, column: 26, scope: !879)
!7938 = !DILocation(line: 3922, column: 40, scope: !879)
!7939 = !DILocation(line: 3922, column: 45, scope: !879)
!7940 = !DILocation(line: 3922, column: 48, scope: !879)
!7941 = !DILocation(line: 3923, column: 8, scope: !879)
!7942 = !DILocation(line: 3923, column: 17, scope: !879)
!7943 = !DILocation(line: 3922, column: 6, scope: !879)
!7944 = !DILocation(line: 3922, column: 4, scope: !879)
!7945 = !DILocation(line: 3925, column: 6, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3925, column: 6)
!7947 = !DILocation(line: 3925, column: 8, scope: !7946)
!7948 = !DILocation(line: 3925, column: 6, scope: !879)
!7949 = !DILocation(line: 3926, column: 11, scope: !7946)
!7950 = !DILocation(line: 3926, column: 3, scope: !7946)
!7951 = !DILocation(line: 3928, column: 26, scope: !879)
!7952 = !DILocation(line: 3928, column: 40, scope: !879)
!7953 = !DILocation(line: 3928, column: 45, scope: !879)
!7954 = !DILocation(line: 3928, column: 48, scope: !879)
!7955 = !DILocation(line: 3929, column: 8, scope: !879)
!7956 = !DILocation(line: 3929, column: 17, scope: !879)
!7957 = !DILocation(line: 3928, column: 6, scope: !879)
!7958 = !DILocation(line: 3928, column: 4, scope: !879)
!7959 = !DILocation(line: 3931, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3931, column: 6)
!7961 = !DILocation(line: 3931, column: 8, scope: !7960)
!7962 = !DILocation(line: 3931, column: 6, scope: !879)
!7963 = !DILocation(line: 3932, column: 11, scope: !7960)
!7964 = !DILocation(line: 3932, column: 3, scope: !7960)
!7965 = !DILocation(line: 3934, column: 26, scope: !879)
!7966 = !DILocation(line: 3934, column: 40, scope: !879)
!7967 = !DILocation(line: 3934, column: 45, scope: !879)
!7968 = !DILocation(line: 3934, column: 48, scope: !879)
!7969 = !DILocation(line: 3935, column: 8, scope: !879)
!7970 = !DILocation(line: 3935, column: 17, scope: !879)
!7971 = !DILocation(line: 3934, column: 6, scope: !879)
!7972 = !DILocation(line: 3934, column: 4, scope: !879)
!7973 = !DILocation(line: 3937, column: 6, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3937, column: 6)
!7975 = !DILocation(line: 3937, column: 8, scope: !7974)
!7976 = !DILocation(line: 3937, column: 6, scope: !879)
!7977 = !DILocation(line: 3938, column: 11, scope: !7974)
!7978 = !DILocation(line: 3938, column: 3, scope: !7974)
!7979 = !DILocation(line: 3940, column: 26, scope: !879)
!7980 = !DILocation(line: 3940, column: 40, scope: !879)
!7981 = !DILocation(line: 3940, column: 45, scope: !879)
!7982 = !DILocation(line: 3940, column: 48, scope: !879)
!7983 = !DILocation(line: 3941, column: 8, scope: !879)
!7984 = !DILocation(line: 3941, column: 17, scope: !879)
!7985 = !DILocation(line: 3940, column: 6, scope: !879)
!7986 = !DILocation(line: 3940, column: 4, scope: !879)
!7987 = !DILocation(line: 3943, column: 6, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3943, column: 6)
!7989 = !DILocation(line: 3943, column: 8, scope: !7988)
!7990 = !DILocation(line: 3943, column: 6, scope: !879)
!7991 = !DILocation(line: 3944, column: 11, scope: !7988)
!7992 = !DILocation(line: 3944, column: 3, scope: !7988)
!7993 = !DILocation(line: 3946, column: 26, scope: !879)
!7994 = !DILocation(line: 3946, column: 40, scope: !879)
!7995 = !DILocation(line: 3946, column: 45, scope: !879)
!7996 = !DILocation(line: 3946, column: 48, scope: !879)
!7997 = !DILocation(line: 3947, column: 8, scope: !879)
!7998 = !DILocation(line: 3947, column: 17, scope: !879)
!7999 = !DILocation(line: 3946, column: 6, scope: !879)
!8000 = !DILocation(line: 3946, column: 4, scope: !879)
!8001 = !DILocation(line: 3949, column: 6, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3949, column: 6)
!8003 = !DILocation(line: 3949, column: 8, scope: !8002)
!8004 = !DILocation(line: 3949, column: 6, scope: !879)
!8005 = !DILocation(line: 3950, column: 11, scope: !8002)
!8006 = !DILocation(line: 3950, column: 3, scope: !8002)
!8007 = !DILocation(line: 3952, column: 26, scope: !879)
!8008 = !DILocation(line: 3952, column: 40, scope: !879)
!8009 = !DILocation(line: 3952, column: 45, scope: !879)
!8010 = !DILocation(line: 3952, column: 48, scope: !879)
!8011 = !DILocation(line: 3953, column: 8, scope: !879)
!8012 = !DILocation(line: 3953, column: 17, scope: !879)
!8013 = !DILocation(line: 3952, column: 6, scope: !879)
!8014 = !DILocation(line: 3952, column: 4, scope: !879)
!8015 = !DILocation(line: 3955, column: 6, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !879, file: !1, line: 3955, column: 6)
!8017 = !DILocation(line: 3955, column: 8, scope: !8016)
!8018 = !DILocation(line: 3955, column: 6, scope: !879)
!8019 = !DILocation(line: 3956, column: 11, scope: !8016)
!8020 = !DILocation(line: 3956, column: 3, scope: !8016)
!8021 = !DILocation(line: 3958, column: 16, scope: !879)
!8022 = !DILocation(line: 3958, column: 18, scope: !879)
!8023 = !DILocation(line: 3958, column: 24, scope: !879)
!8024 = !DILocation(line: 3958, column: 33, scope: !879)
!8025 = !DILocation(line: 3958, column: 2, scope: !879)
!8026 = !DILocation(line: 3960, column: 16, scope: !879)
!8027 = !DILocation(line: 3960, column: 18, scope: !879)
!8028 = !DILocation(line: 3960, column: 24, scope: !879)
!8029 = !DILocation(line: 3960, column: 33, scope: !879)
!8030 = !DILocation(line: 3960, column: 2, scope: !879)
!8031 = !DILocation(line: 3962, column: 21, scope: !879)
!8032 = !DILocation(line: 3962, column: 23, scope: !879)
!8033 = !DILocation(line: 3962, column: 2, scope: !879)
!8034 = !DILocation(line: 3964, column: 16, scope: !879)
!8035 = !DILocation(line: 3964, column: 18, scope: !879)
!8036 = !DILocation(line: 3964, column: 24, scope: !879)
!8037 = !DILocation(line: 3964, column: 33, scope: !879)
!8038 = !DILocation(line: 3964, column: 2, scope: !879)
!8039 = !DILocation(line: 3966, column: 12, scope: !879)
!8040 = !DILocation(line: 3966, column: 2, scope: !879)
!8041 = !DILocation(line: 3966, column: 10, scope: !879)
!8042 = !DILocation(line: 3968, column: 2, scope: !879)
!8043 = !DILocation(line: 3968, column: 10, scope: !879)
!8044 = !DILocation(line: 3970, column: 9, scope: !879)
!8045 = !DILocation(line: 3970, column: 12, scope: !879)
!8046 = !DILocation(line: 3970, column: 2, scope: !879)
!8047 = !DILocation(line: 3972, column: 22, scope: !879)
!8048 = !DILocation(line: 3972, column: 2, scope: !879)
!8049 = !DILocation(line: 3974, column: 21, scope: !879)
!8050 = !DILocation(line: 3974, column: 10, scope: !879)
!8051 = !DILocation(line: 3974, column: 2, scope: !879)
!8052 = !DILocation(line: 3975, column: 1, scope: !879)
!8053 = !DILocalVariable(name: "a", arg: 1, scope: !910, file: !1, line: 3981, type: !367)
!8054 = !DILocation(line: 3981, column: 44, scope: !910)
!8055 = !DILocalVariable(name: "iso9660", scope: !910, file: !1, line: 3983, type: !530)
!8056 = !DILocation(line: 3983, column: 18, scope: !910)
!8057 = !DILocalVariable(name: "bp", scope: !910, file: !1, line: 3984, type: !544)
!8058 = !DILocation(line: 3984, column: 17, scope: !910)
!8059 = !DILocation(line: 3986, column: 12, scope: !910)
!8060 = !DILocation(line: 3986, column: 15, scope: !910)
!8061 = !DILocation(line: 3986, column: 10, scope: !910)
!8062 = !DILocation(line: 3987, column: 18, scope: !910)
!8063 = !DILocation(line: 3987, column: 7, scope: !910)
!8064 = !DILocation(line: 3987, column: 21, scope: !910)
!8065 = !DILocation(line: 3987, column: 5, scope: !910)
!8066 = !DILocation(line: 3989, column: 12, scope: !910)
!8067 = !DILocation(line: 3989, column: 2, scope: !910)
!8068 = !DILocation(line: 3991, column: 9, scope: !910)
!8069 = !DILocation(line: 3991, column: 11, scope: !910)
!8070 = !DILocation(line: 3991, column: 2, scope: !910)
!8071 = !DILocation(line: 3992, column: 22, scope: !910)
!8072 = !DILocation(line: 3992, column: 2, scope: !910)
!8073 = !DILocation(line: 3994, column: 22, scope: !910)
!8074 = !DILocation(line: 3994, column: 2, scope: !910)
!8075 = !DILocation(line: 3996, column: 14, scope: !910)
!8076 = !DILocation(line: 3996, column: 16, scope: !910)
!8077 = !DILocation(line: 3997, column: 6, scope: !910)
!8078 = !DILocation(line: 3997, column: 15, scope: !910)
!8079 = !DILocation(line: 3997, column: 25, scope: !910)
!8080 = !DILocation(line: 3997, column: 34, scope: !910)
!8081 = !DILocation(line: 3997, column: 40, scope: !910)
!8082 = !DILocation(line: 3997, column: 48, scope: !910)
!8083 = !DILocation(line: 3996, column: 2, scope: !910)
!8084 = !DILocation(line: 3999, column: 22, scope: !910)
!8085 = !DILocation(line: 3999, column: 2, scope: !910)
!8086 = !DILocation(line: 4001, column: 21, scope: !910)
!8087 = !DILocation(line: 4001, column: 10, scope: !910)
!8088 = !DILocation(line: 4001, column: 2, scope: !910)
!8089 = !DILocalVariable(name: "a", arg: 1, scope: !911, file: !1, line: 3763, type: !367)
!8090 = !DILocation(line: 3763, column: 43, scope: !911)
!8091 = !DILocalVariable(name: "bp", scope: !911, file: !1, line: 3765, type: !544)
!8092 = !DILocation(line: 3765, column: 17, scope: !911)
!8093 = !DILocation(line: 3767, column: 18, scope: !911)
!8094 = !DILocation(line: 3767, column: 7, scope: !911)
!8095 = !DILocation(line: 3767, column: 21, scope: !911)
!8096 = !DILocation(line: 3767, column: 5, scope: !911)
!8097 = !DILocation(line: 3768, column: 12, scope: !911)
!8098 = !DILocation(line: 3768, column: 2, scope: !911)
!8099 = !DILocation(line: 3769, column: 22, scope: !911)
!8100 = !DILocation(line: 3769, column: 2, scope: !911)
!8101 = !DILocation(line: 3771, column: 21, scope: !911)
!8102 = !DILocation(line: 3771, column: 10, scope: !911)
!8103 = !DILocation(line: 3771, column: 2, scope: !911)
!8104 = !DILocalVariable(name: "a", arg: 1, scope: !912, file: !1, line: 4052, type: !367)
!8105 = !DILocation(line: 4052, column: 47, scope: !912)
!8106 = !DILocalVariable(name: "iso9660", scope: !912, file: !1, line: 4054, type: !530)
!8107 = !DILocation(line: 4054, column: 18, scope: !912)
!8108 = !DILocalVariable(name: "buf", scope: !912, file: !1, line: 4055, type: !731)
!8109 = !DILocation(line: 4055, column: 7, scope: !912)
!8110 = !DILocalVariable(name: "v", scope: !912, file: !1, line: 4056, type: !429)
!8111 = !DILocation(line: 4056, column: 14, scope: !912)
!8112 = !DILocalVariable(name: "opt", scope: !912, file: !1, line: 4057, type: !31)
!8113 = !DILocation(line: 4057, column: 6, scope: !912)
!8114 = !DILocalVariable(name: "r", scope: !912, file: !1, line: 4057, type: !31)
!8115 = !DILocation(line: 4057, column: 11, scope: !912)
!8116 = !DILocalVariable(name: "info", scope: !912, file: !1, line: 4058, type: !16)
!8117 = !DILocation(line: 4058, column: 24, scope: !912)
!8118 = !DILocalVariable(name: "info_size", scope: !912, file: !1, line: 4059, type: !23)
!8119 = !DILocation(line: 4059, column: 9, scope: !912)
!8120 = !DILocation(line: 4062, column: 30, scope: !912)
!8121 = !DILocation(line: 4062, column: 33, scope: !912)
!8122 = !DILocation(line: 4062, column: 12, scope: !912)
!8123 = !DILocation(line: 4062, column: 10, scope: !912)
!8124 = !DILocation(line: 4063, column: 6, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4063, column: 6)
!8126 = !DILocation(line: 4063, column: 18, scope: !8125)
!8127 = !DILocation(line: 4063, column: 16, scope: !8125)
!8128 = !DILocation(line: 4063, column: 6, scope: !912)
!8129 = !DILocation(line: 4064, column: 20, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8125, file: !1, line: 4063, column: 35)
!8131 = !DILocation(line: 4064, column: 7, scope: !8130)
!8132 = !DILocation(line: 4064, column: 5, scope: !8130)
!8133 = !DILocation(line: 4065, column: 7, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !1, line: 4065, column: 7)
!8135 = !DILocation(line: 4065, column: 9, scope: !8134)
!8136 = !DILocation(line: 4065, column: 7, scope: !8130)
!8137 = !DILocation(line: 4066, column: 12, scope: !8134)
!8138 = !DILocation(line: 4066, column: 4, scope: !8134)
!8139 = !DILocation(line: 4067, column: 2, scope: !8130)
!8140 = !DILocation(line: 4068, column: 2, scope: !912)
!8141 = !DILocation(line: 4068, column: 2, scope: !8142)
!8142 = !DILexicalBlockFile(scope: !8143, file: !1, discriminator: 1)
!8143 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4068, column: 2)
!8144 = !DILocation(line: 4069, column: 35, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4069, column: 6)
!8146 = !DILocation(line: 4069, column: 6, scope: !8145)
!8147 = !DILocation(line: 4069, column: 46, scope: !8145)
!8148 = !DILocation(line: 4069, column: 6, scope: !912)
!8149 = !DILocation(line: 4070, column: 22, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8145, file: !1, line: 4069, column: 55)
!8151 = !DILocation(line: 4070, column: 25, scope: !8150)
!8152 = !DILocation(line: 4070, column: 3, scope: !8150)
!8153 = !DILocation(line: 4072, column: 3, scope: !8150)
!8154 = !DILocation(line: 4074, column: 14, scope: !912)
!8155 = !DILocation(line: 4074, column: 20, scope: !912)
!8156 = !DILocation(line: 4074, column: 2, scope: !912)
!8157 = !DILocation(line: 4075, column: 6, scope: !912)
!8158 = !DILocation(line: 4082, column: 12, scope: !912)
!8159 = !DILocation(line: 4082, column: 21, scope: !912)
!8160 = !DILocation(line: 4082, column: 34, scope: !912)
!8161 = !DILocation(line: 4082, column: 2, scope: !912)
!8162 = !DILocation(line: 4088, column: 19, scope: !912)
!8163 = !DILocation(line: 4088, column: 24, scope: !912)
!8164 = !DILocation(line: 4087, column: 2, scope: !912)
!8165 = !DILocation(line: 4089, column: 6, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4089, column: 6)
!8167 = !DILocation(line: 4089, column: 15, scope: !8166)
!8168 = !DILocation(line: 4089, column: 19, scope: !8166)
!8169 = !DILocation(line: 4089, column: 33, scope: !8166)
!8170 = !DILocation(line: 4089, column: 6, scope: !912)
!8171 = !DILocation(line: 4091, column: 16, scope: !8166)
!8172 = !DILocation(line: 4091, column: 25, scope: !8166)
!8173 = !DILocation(line: 4091, column: 50, scope: !8166)
!8174 = !DILocation(line: 4090, column: 3, scope: !8166)
!8175 = !DILocation(line: 4092, column: 6, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4092, column: 6)
!8177 = !DILocation(line: 4092, column: 15, scope: !8176)
!8178 = !DILocation(line: 4092, column: 19, scope: !8176)
!8179 = !DILocation(line: 4092, column: 34, scope: !8176)
!8180 = !DILocation(line: 4092, column: 6, scope: !912)
!8181 = !DILocation(line: 4094, column: 16, scope: !8176)
!8182 = !DILocation(line: 4094, column: 25, scope: !8176)
!8183 = !DILocation(line: 4094, column: 48, scope: !8176)
!8184 = !DILocation(line: 4093, column: 3, scope: !8176)
!8185 = !DILocation(line: 4095, column: 6, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4095, column: 6)
!8187 = !DILocation(line: 4095, column: 15, scope: !8186)
!8188 = !DILocation(line: 4095, column: 19, scope: !8186)
!8189 = !DILocation(line: 4095, column: 32, scope: !8186)
!8190 = !DILocation(line: 4095, column: 6, scope: !912)
!8191 = !DILocation(line: 4097, column: 16, scope: !8186)
!8192 = !DILocation(line: 4097, column: 25, scope: !8186)
!8193 = !DILocation(line: 4097, column: 29, scope: !8186)
!8194 = !DILocation(line: 4096, column: 3, scope: !8186)
!8195 = !DILocation(line: 4098, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4098, column: 6)
!8197 = !DILocation(line: 4098, column: 15, scope: !8196)
!8198 = !DILocation(line: 4098, column: 19, scope: !8196)
!8199 = !DILocation(line: 4098, column: 31, scope: !8196)
!8200 = !DILocation(line: 4098, column: 6, scope: !912)
!8201 = !DILocation(line: 4100, column: 16, scope: !8196)
!8202 = !DILocation(line: 4100, column: 25, scope: !8196)
!8203 = !DILocation(line: 4100, column: 55, scope: !8196)
!8204 = !DILocation(line: 4099, column: 3, scope: !8196)
!8205 = !DILocation(line: 4101, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4101, column: 6)
!8207 = !DILocation(line: 4101, column: 15, scope: !8206)
!8208 = !DILocation(line: 4101, column: 19, scope: !8206)
!8209 = !DILocation(line: 4101, column: 24, scope: !8206)
!8210 = !DILocation(line: 4101, column: 6, scope: !912)
!8211 = !DILocation(line: 4103, column: 16, scope: !8206)
!8212 = !DILocation(line: 4103, column: 25, scope: !8206)
!8213 = !DILocation(line: 4103, column: 35, scope: !8206)
!8214 = !DILocation(line: 4103, column: 49, scope: !8206)
!8215 = !DILocation(line: 4102, column: 3, scope: !8206)
!8216 = !DILocation(line: 4104, column: 6, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4104, column: 6)
!8218 = !DILocation(line: 4104, column: 15, scope: !8217)
!8219 = !DILocation(line: 4104, column: 19, scope: !8217)
!8220 = !DILocation(line: 4104, column: 32, scope: !8217)
!8221 = !DILocation(line: 4104, column: 6, scope: !912)
!8222 = !DILocation(line: 4106, column: 16, scope: !8217)
!8223 = !DILocation(line: 4106, column: 25, scope: !8217)
!8224 = !DILocation(line: 4106, column: 35, scope: !8217)
!8225 = !DILocation(line: 4106, column: 52, scope: !8217)
!8226 = !DILocation(line: 4105, column: 3, scope: !8217)
!8227 = !DILocation(line: 4107, column: 6, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4107, column: 6)
!8229 = !DILocation(line: 4107, column: 15, scope: !8228)
!8230 = !DILocation(line: 4107, column: 19, scope: !8228)
!8231 = !DILocation(line: 4107, column: 35, scope: !8228)
!8232 = !DILocation(line: 4107, column: 6, scope: !912)
!8233 = !DILocation(line: 4109, column: 16, scope: !8228)
!8234 = !DILocation(line: 4109, column: 25, scope: !8228)
!8235 = !DILocation(line: 4109, column: 29, scope: !8228)
!8236 = !DILocation(line: 4108, column: 3, scope: !8228)
!8237 = !DILocation(line: 4110, column: 6, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4110, column: 6)
!8239 = !DILocation(line: 4110, column: 15, scope: !8238)
!8240 = !DILocation(line: 4110, column: 19, scope: !8238)
!8241 = !DILocation(line: 4110, column: 33, scope: !8238)
!8242 = !DILocation(line: 4110, column: 6, scope: !912)
!8243 = !DILocation(line: 4112, column: 16, scope: !8238)
!8244 = !DILocation(line: 4112, column: 25, scope: !8238)
!8245 = !DILocation(line: 4112, column: 35, scope: !8238)
!8246 = !DILocation(line: 4111, column: 3, scope: !8238)
!8247 = !DILocation(line: 4113, column: 6, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4113, column: 6)
!8249 = !DILocation(line: 4113, column: 15, scope: !8248)
!8250 = !DILocation(line: 4113, column: 19, scope: !8248)
!8251 = !DILocation(line: 4113, column: 34, scope: !8248)
!8252 = !DILocation(line: 4113, column: 6, scope: !912)
!8253 = !DILocation(line: 4115, column: 16, scope: !8248)
!8254 = !DILocation(line: 4115, column: 25, scope: !8248)
!8255 = !DILocation(line: 4115, column: 35, scope: !8248)
!8256 = !DILocation(line: 4114, column: 3, scope: !8248)
!8257 = !DILocation(line: 4116, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4116, column: 6)
!8259 = !DILocation(line: 4116, column: 15, scope: !8258)
!8260 = !DILocation(line: 4116, column: 19, scope: !8258)
!8261 = !DILocation(line: 4116, column: 29, scope: !8258)
!8262 = !DILocation(line: 4116, column: 6, scope: !912)
!8263 = !DILocation(line: 4117, column: 5, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8258, file: !1, line: 4116, column: 55)
!8265 = !DILocation(line: 4118, column: 7, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8264, file: !1, line: 4118, column: 7)
!8267 = !DILocation(line: 4118, column: 16, scope: !8266)
!8268 = !DILocation(line: 4118, column: 20, scope: !8266)
!8269 = !DILocation(line: 4118, column: 30, scope: !8266)
!8270 = !DILocation(line: 4118, column: 7, scope: !8264)
!8271 = !DILocation(line: 4119, column: 6, scope: !8266)
!8272 = !DILocation(line: 4119, column: 4, scope: !8266)
!8273 = !DILocation(line: 4120, column: 7, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8264, file: !1, line: 4120, column: 7)
!8275 = !DILocation(line: 4120, column: 16, scope: !8274)
!8276 = !DILocation(line: 4120, column: 20, scope: !8274)
!8277 = !DILocation(line: 4120, column: 30, scope: !8274)
!8278 = !DILocation(line: 4120, column: 7, scope: !8264)
!8279 = !DILocation(line: 4121, column: 6, scope: !8274)
!8280 = !DILocation(line: 4121, column: 4, scope: !8274)
!8281 = !DILocation(line: 4123, column: 16, scope: !8264)
!8282 = !DILocation(line: 4122, column: 3, scope: !8264)
!8283 = !DILocation(line: 4124, column: 2, scope: !8264)
!8284 = !DILocation(line: 4126, column: 6, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4126, column: 6)
!8286 = !DILocation(line: 4126, column: 15, scope: !8285)
!8287 = !DILocation(line: 4126, column: 19, scope: !8285)
!8288 = !DILocation(line: 4126, column: 37, scope: !8285)
!8289 = !DILocation(line: 4126, column: 6, scope: !912)
!8290 = !DILocation(line: 4128, column: 16, scope: !8285)
!8291 = !DILocation(line: 4128, column: 25, scope: !8285)
!8292 = !DILocation(line: 4128, column: 32, scope: !8285)
!8293 = !DILocation(line: 4127, column: 3, scope: !8285)
!8294 = !DILocation(line: 4130, column: 6, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4130, column: 6)
!8296 = !DILocation(line: 4130, column: 15, scope: !8295)
!8297 = !DILocation(line: 4130, column: 19, scope: !8295)
!8298 = !DILocation(line: 4130, column: 34, scope: !8295)
!8299 = !DILocation(line: 4130, column: 6, scope: !912)
!8300 = !DILocation(line: 4132, column: 16, scope: !8295)
!8301 = !DILocation(line: 4132, column: 25, scope: !8295)
!8302 = !DILocation(line: 4132, column: 51, scope: !8295)
!8303 = !DILocation(line: 4131, column: 3, scope: !8295)
!8304 = !DILocation(line: 4133, column: 6, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4133, column: 6)
!8306 = !DILocation(line: 4133, column: 15, scope: !8305)
!8307 = !DILocation(line: 4133, column: 19, scope: !8305)
!8308 = !DILocation(line: 4133, column: 29, scope: !8305)
!8309 = !DILocation(line: 4133, column: 6, scope: !912)
!8310 = !DILocation(line: 4135, column: 16, scope: !8305)
!8311 = !DILocation(line: 4135, column: 25, scope: !8305)
!8312 = !DILocation(line: 4135, column: 29, scope: !8305)
!8313 = !DILocation(line: 4134, column: 3, scope: !8305)
!8314 = !DILocation(line: 4136, column: 6, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4136, column: 6)
!8316 = !DILocation(line: 4136, column: 15, scope: !8315)
!8317 = !DILocation(line: 4136, column: 19, scope: !8315)
!8318 = !DILocation(line: 4136, column: 26, scope: !8315)
!8319 = !DILocation(line: 4136, column: 6, scope: !912)
!8320 = !DILocation(line: 4137, column: 7, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !1, line: 4137, column: 7)
!8322 = distinct !DILexicalBlock(scope: !8315, file: !1, line: 4136, column: 49)
!8323 = !DILocation(line: 4137, column: 16, scope: !8321)
!8324 = !DILocation(line: 4137, column: 20, scope: !8321)
!8325 = !DILocation(line: 4137, column: 27, scope: !8321)
!8326 = !DILocation(line: 4137, column: 7, scope: !8322)
!8327 = !DILocation(line: 4138, column: 4, scope: !8321)
!8328 = !DILocation(line: 4142, column: 17, scope: !8321)
!8329 = !DILocation(line: 4142, column: 26, scope: !8321)
!8330 = !DILocation(line: 4142, column: 30, scope: !8321)
!8331 = !DILocation(line: 4141, column: 4, scope: !8321)
!8332 = !DILocation(line: 4143, column: 2, scope: !8322)
!8333 = !DILocation(line: 4144, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4144, column: 6)
!8335 = !DILocation(line: 4144, column: 15, scope: !8334)
!8336 = !DILocation(line: 4144, column: 19, scope: !8334)
!8337 = !DILocation(line: 4144, column: 31, scope: !8334)
!8338 = !DILocation(line: 4144, column: 6, scope: !912)
!8339 = !DILocation(line: 4146, column: 16, scope: !8334)
!8340 = !DILocation(line: 4146, column: 25, scope: !8334)
!8341 = !DILocation(line: 4146, column: 29, scope: !8334)
!8342 = !DILocation(line: 4145, column: 3, scope: !8334)
!8343 = !DILocation(line: 4147, column: 6, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4147, column: 6)
!8345 = !DILocation(line: 4147, column: 15, scope: !8344)
!8346 = !DILocation(line: 4147, column: 19, scope: !8344)
!8347 = !DILocation(line: 4147, column: 30, scope: !8344)
!8348 = !DILocation(line: 4147, column: 6, scope: !912)
!8349 = !DILocation(line: 4149, column: 16, scope: !8344)
!8350 = !DILocation(line: 4149, column: 25, scope: !8344)
!8351 = !DILocation(line: 4149, column: 29, scope: !8344)
!8352 = !DILocation(line: 4148, column: 3, scope: !8344)
!8353 = !DILocation(line: 4150, column: 6, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4150, column: 6)
!8355 = !DILocation(line: 4150, column: 15, scope: !8354)
!8356 = !DILocation(line: 4150, column: 19, scope: !8354)
!8357 = !DILocation(line: 4150, column: 23, scope: !8354)
!8358 = !DILocation(line: 4150, column: 6, scope: !912)
!8359 = !DILocation(line: 4152, column: 16, scope: !8354)
!8360 = !DILocation(line: 4152, column: 25, scope: !8354)
!8361 = !DILocation(line: 4152, column: 29, scope: !8354)
!8362 = !DILocation(line: 4151, column: 3, scope: !8354)
!8363 = !DILocation(line: 4153, column: 6, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4153, column: 6)
!8365 = !DILocation(line: 4153, column: 15, scope: !8364)
!8366 = !DILocation(line: 4153, column: 19, scope: !8364)
!8367 = !DILocation(line: 4153, column: 29, scope: !8364)
!8368 = !DILocation(line: 4153, column: 6, scope: !912)
!8369 = !DILocation(line: 4155, column: 16, scope: !8364)
!8370 = !DILocation(line: 4155, column: 25, scope: !8364)
!8371 = !DILocation(line: 4155, column: 46, scope: !8364)
!8372 = !DILocation(line: 4154, column: 3, scope: !8364)
!8373 = !DILocation(line: 4156, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4156, column: 6)
!8375 = !DILocation(line: 4156, column: 15, scope: !8374)
!8376 = !DILocation(line: 4156, column: 19, scope: !8374)
!8377 = !DILocation(line: 4156, column: 22, scope: !8374)
!8378 = !DILocation(line: 4156, column: 6, scope: !912)
!8379 = !DILocation(line: 4157, column: 7, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !1, line: 4157, column: 7)
!8381 = distinct !DILexicalBlock(scope: !8374, file: !1, line: 4156, column: 41)
!8382 = !DILocation(line: 4157, column: 16, scope: !8380)
!8383 = !DILocation(line: 4157, column: 20, scope: !8380)
!8384 = !DILocation(line: 4157, column: 23, scope: !8380)
!8385 = !DILocation(line: 4157, column: 7, scope: !8381)
!8386 = !DILocation(line: 4159, column: 17, scope: !8380)
!8387 = !DILocation(line: 4159, column: 26, scope: !8380)
!8388 = !DILocation(line: 4159, column: 30, scope: !8380)
!8389 = !DILocation(line: 4158, column: 4, scope: !8380)
!8390 = !DILocation(line: 4160, column: 12, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8380, file: !1, line: 4160, column: 12)
!8392 = !DILocation(line: 4160, column: 21, scope: !8391)
!8393 = !DILocation(line: 4160, column: 25, scope: !8391)
!8394 = !DILocation(line: 4160, column: 28, scope: !8391)
!8395 = !DILocation(line: 4160, column: 12, scope: !8380)
!8396 = !DILocation(line: 4161, column: 4, scope: !8391)
!8397 = !DILocation(line: 4163, column: 12, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8391, file: !1, line: 4163, column: 12)
!8399 = !DILocation(line: 4163, column: 21, scope: !8398)
!8400 = !DILocation(line: 4163, column: 25, scope: !8398)
!8401 = !DILocation(line: 4163, column: 28, scope: !8398)
!8402 = !DILocation(line: 4163, column: 12, scope: !8391)
!8403 = !DILocation(line: 4164, column: 4, scope: !8398)
!8404 = !DILocation(line: 4166, column: 2, scope: !8381)
!8405 = !DILocation(line: 4167, column: 6, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4167, column: 6)
!8407 = !DILocation(line: 4167, column: 15, scope: !8406)
!8408 = !DILocation(line: 4167, column: 19, scope: !8406)
!8409 = !DILocation(line: 4167, column: 29, scope: !8406)
!8410 = !DILocation(line: 4167, column: 6, scope: !912)
!8411 = !DILocation(line: 4169, column: 16, scope: !8406)
!8412 = !DILocation(line: 4169, column: 25, scope: !8406)
!8413 = !DILocation(line: 4169, column: 43, scope: !8406)
!8414 = !DILocation(line: 4168, column: 3, scope: !8406)
!8415 = !DILocation(line: 4170, column: 6, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !912, file: !1, line: 4170, column: 6)
!8417 = !DILocation(line: 4170, column: 15, scope: !8416)
!8418 = !DILocation(line: 4170, column: 19, scope: !8416)
!8419 = !DILocation(line: 4170, column: 26, scope: !8416)
!8420 = !DILocation(line: 4170, column: 6, scope: !912)
!8421 = !DILocation(line: 4172, column: 16, scope: !8416)
!8422 = !DILocation(line: 4172, column: 25, scope: !8416)
!8423 = !DILocation(line: 4172, column: 29, scope: !8416)
!8424 = !DILocation(line: 4171, column: 3, scope: !8416)
!8425 = !DILocation(line: 4174, column: 20, scope: !912)
!8426 = !DILocation(line: 4174, column: 9, scope: !912)
!8427 = !DILocation(line: 4174, column: 29, scope: !912)
!8428 = !DILocation(line: 4174, column: 32, scope: !912)
!8429 = !DILocation(line: 4174, column: 2, scope: !8430)
!8430 = !DILexicalBlockFile(scope: !912, file: !1, discriminator: 1)
!8431 = !DILocation(line: 4175, column: 2, scope: !912)
!8432 = !DILocation(line: 4176, column: 21, scope: !912)
!8433 = !DILocation(line: 4176, column: 24, scope: !912)
!8434 = !DILocation(line: 4176, column: 10, scope: !912)
!8435 = !DILocation(line: 4176, column: 2, scope: !912)
!8436 = !DILocation(line: 4177, column: 1, scope: !912)
!8437 = !DILocalVariable(name: "a", arg: 1, scope: !916, file: !1, line: 4307, type: !367)
!8438 = !DILocation(line: 4307, column: 40, scope: !916)
!8439 = !DILocalVariable(name: "type_m", arg: 2, scope: !916, file: !1, line: 4307, type: !31)
!8440 = !DILocation(line: 4307, column: 47, scope: !916)
!8441 = !DILocalVariable(name: "vdd", arg: 3, scope: !916, file: !1, line: 4307, type: !688)
!8442 = !DILocation(line: 4307, column: 67, scope: !916)
!8443 = !DILocalVariable(name: "depth", scope: !916, file: !1, line: 4309, type: !31)
!8444 = !DILocation(line: 4309, column: 6, scope: !916)
!8445 = !DILocalVariable(name: "r", scope: !916, file: !1, line: 4309, type: !31)
!8446 = !DILocation(line: 4309, column: 13, scope: !916)
!8447 = !DILocalVariable(name: "path_table_size", scope: !916, file: !1, line: 4310, type: !23)
!8448 = !DILocation(line: 4310, column: 9, scope: !916)
!8449 = !DILocation(line: 4312, column: 4, scope: !916)
!8450 = !DILocation(line: 4313, column: 18, scope: !916)
!8451 = !DILocation(line: 4314, column: 13, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !916, file: !1, line: 4314, column: 2)
!8453 = !DILocation(line: 4314, column: 7, scope: !8452)
!8454 = !DILocation(line: 4314, column: 18, scope: !8455)
!8455 = !DILexicalBlockFile(scope: !8456, file: !1, discriminator: 1)
!8456 = distinct !DILexicalBlock(scope: !8452, file: !1, line: 4314, column: 2)
!8457 = !DILocation(line: 4314, column: 26, scope: !8455)
!8458 = !DILocation(line: 4314, column: 31, scope: !8455)
!8459 = !DILocation(line: 4314, column: 24, scope: !8455)
!8460 = !DILocation(line: 4314, column: 2, scope: !8455)
!8461 = !DILocation(line: 4315, column: 25, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8456, file: !1, line: 4314, column: 51)
!8463 = !DILocation(line: 4315, column: 28, scope: !8462)
!8464 = !DILocation(line: 4315, column: 36, scope: !8462)
!8465 = !DILocation(line: 4315, column: 43, scope: !8462)
!8466 = !DILocation(line: 4315, column: 7, scope: !8462)
!8467 = !DILocation(line: 4315, column: 5, scope: !8462)
!8468 = !DILocation(line: 4316, column: 7, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8462, file: !1, line: 4316, column: 7)
!8470 = !DILocation(line: 4316, column: 9, scope: !8469)
!8471 = !DILocation(line: 4316, column: 7, scope: !8462)
!8472 = !DILocation(line: 4317, column: 12, scope: !8469)
!8473 = !DILocation(line: 4317, column: 4, scope: !8469)
!8474 = !DILocation(line: 4318, column: 22, scope: !8462)
!8475 = !DILocation(line: 4318, column: 19, scope: !8462)
!8476 = !DILocation(line: 4319, column: 2, scope: !8462)
!8477 = !DILocation(line: 4314, column: 47, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8456, file: !1, discriminator: 2)
!8479 = !DILocation(line: 4314, column: 2, scope: !8478)
!8480 = !DILocation(line: 4322, column: 20, scope: !916)
!8481 = !DILocation(line: 4322, column: 36, scope: !916)
!8482 = !DILocation(line: 4322, column: 18, scope: !916)
!8483 = !DILocation(line: 4323, column: 6, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !916, file: !1, line: 4323, column: 6)
!8485 = !DILocation(line: 4323, column: 22, scope: !8484)
!8486 = !DILocation(line: 4323, column: 6, scope: !916)
!8487 = !DILocation(line: 4324, column: 18, scope: !8484)
!8488 = !DILocation(line: 4324, column: 45, scope: !8484)
!8489 = !DILocation(line: 4324, column: 43, scope: !8484)
!8490 = !DILocation(line: 4324, column: 7, scope: !8484)
!8491 = !DILocation(line: 4324, column: 5, scope: !8484)
!8492 = !DILocation(line: 4324, column: 3, scope: !8484)
!8493 = !DILocation(line: 4325, column: 10, scope: !916)
!8494 = !DILocation(line: 4325, column: 2, scope: !916)
!8495 = !DILocation(line: 4326, column: 1, scope: !916)
!8496 = !DILocalVariable(name: "a", arg: 1, scope: !924, file: !1, line: 4422, type: !367)
!8497 = !DILocation(line: 4422, column: 51, scope: !924)
!8498 = !DILocalVariable(name: "vdd", arg: 2, scope: !924, file: !1, line: 4422, type: !688)
!8499 = !DILocation(line: 4422, column: 66, scope: !924)
!8500 = !DILocalVariable(name: "np", scope: !924, file: !1, line: 4424, type: !76)
!8501 = !DILocation(line: 4424, column: 17, scope: !924)
!8502 = !DILocalVariable(name: "depth", scope: !924, file: !1, line: 4425, type: !31)
!8503 = !DILocation(line: 4425, column: 6, scope: !924)
!8504 = !DILocalVariable(name: "r", scope: !924, file: !1, line: 4425, type: !31)
!8505 = !DILocation(line: 4425, column: 13, scope: !924)
!8506 = !DILocation(line: 4427, column: 8, scope: !924)
!8507 = !DILocation(line: 4428, column: 7, scope: !924)
!8508 = !DILocation(line: 4428, column: 12, scope: !924)
!8509 = !DILocation(line: 4428, column: 5, scope: !924)
!8510 = !DILocation(line: 4429, column: 2, scope: !924)
!8511 = !DILocalVariable(name: "extr", scope: !8512, file: !1, line: 4430, type: !155)
!8512 = distinct !DILexicalBlock(scope: !924, file: !1, line: 4429, column: 5)
!8513 = !DILocation(line: 4430, column: 20, scope: !8512)
!8514 = !DILocation(line: 4432, column: 36, scope: !8512)
!8515 = !DILocation(line: 4432, column: 39, scope: !8512)
!8516 = !DILocation(line: 4432, column: 44, scope: !8512)
!8517 = !DILocation(line: 4432, column: 48, scope: !8512)
!8518 = !DILocation(line: 4432, column: 7, scope: !8512)
!8519 = !DILocation(line: 4432, column: 5, scope: !8512)
!8520 = !DILocation(line: 4433, column: 7, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8512, file: !1, line: 4433, column: 7)
!8522 = !DILocation(line: 4433, column: 9, scope: !8521)
!8523 = !DILocation(line: 4433, column: 7, scope: !8512)
!8524 = !DILocation(line: 4434, column: 12, scope: !8521)
!8525 = !DILocation(line: 4434, column: 4, scope: !8521)
!8526 = !DILocation(line: 4435, column: 7, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8512, file: !1, line: 4435, column: 7)
!8528 = !DILocation(line: 4435, column: 12, scope: !8527)
!8529 = !DILocation(line: 4435, column: 21, scope: !8527)
!8530 = !DILocation(line: 4435, column: 7, scope: !8512)
!8531 = !DILocation(line: 4440, column: 16, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !1, line: 4440, column: 4)
!8533 = distinct !DILexicalBlock(scope: !8527, file: !1, line: 4435, column: 36)
!8534 = !DILocation(line: 4440, column: 20, scope: !8532)
!8535 = !DILocation(line: 4440, column: 34, scope: !8532)
!8536 = !DILocation(line: 4440, column: 14, scope: !8532)
!8537 = !DILocation(line: 4440, column: 9, scope: !8532)
!8538 = !DILocation(line: 4441, column: 8, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8532, file: !1, line: 4440, column: 4)
!8540 = !DILocation(line: 4441, column: 13, scope: !8539)
!8541 = !DILocation(line: 4440, column: 4, scope: !8542)
!8542 = !DILexicalBlockFile(scope: !8532, file: !1, discriminator: 1)
!8543 = !DILocalVariable(name: "wb", scope: !8544, file: !1, line: 4443, type: !544)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !1, line: 4442, column: 27)
!8545 = !DILocation(line: 4443, column: 20, scope: !8544)
!8546 = !DILocation(line: 4445, column: 21, scope: !8544)
!8547 = !DILocation(line: 4445, column: 10, scope: !8544)
!8548 = !DILocation(line: 4445, column: 8, scope: !8544)
!8549 = !DILocation(line: 4446, column: 12, scope: !8544)
!8550 = !DILocation(line: 4446, column: 16, scope: !8544)
!8551 = !DILocation(line: 4446, column: 22, scope: !8544)
!8552 = !DILocation(line: 4446, column: 5, scope: !8544)
!8553 = !DILocation(line: 4446, column: 27, scope: !8544)
!8554 = !DILocation(line: 4446, column: 33, scope: !8544)
!8555 = !DILocation(line: 4447, column: 12, scope: !8544)
!8556 = !DILocation(line: 4447, column: 17, scope: !8544)
!8557 = !DILocation(line: 4447, column: 23, scope: !8544)
!8558 = !DILocation(line: 4447, column: 15, scope: !8544)
!8559 = !DILocation(line: 4448, column: 30, scope: !8544)
!8560 = !DILocation(line: 4448, column: 36, scope: !8544)
!8561 = !DILocation(line: 4448, column: 28, scope: !8544)
!8562 = !DILocation(line: 4448, column: 9, scope: !8544)
!8563 = !DILocation(line: 4447, column: 5, scope: !8544)
!8564 = !DILocation(line: 4449, column: 20, scope: !8544)
!8565 = !DILocation(line: 4449, column: 9, scope: !8544)
!8566 = !DILocation(line: 4449, column: 7, scope: !8544)
!8567 = !DILocation(line: 4450, column: 9, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8544, file: !1, line: 4450, column: 9)
!8569 = !DILocation(line: 4450, column: 11, scope: !8568)
!8570 = !DILocation(line: 4450, column: 9, scope: !8544)
!8571 = !DILocation(line: 4451, column: 14, scope: !8568)
!8572 = !DILocation(line: 4451, column: 6, scope: !8568)
!8573 = !DILocation(line: 4452, column: 4, scope: !8544)
!8574 = !DILocation(line: 4442, column: 15, scope: !8539)
!8575 = !DILocation(line: 4442, column: 21, scope: !8539)
!8576 = !DILocation(line: 4442, column: 13, scope: !8539)
!8577 = !DILocation(line: 4440, column: 4, scope: !8578)
!8578 = !DILexicalBlockFile(scope: !8539, file: !1, discriminator: 2)
!8579 = !DILocation(line: 4453, column: 3, scope: !8533)
!8580 = !DILocation(line: 4455, column: 7, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8512, file: !1, line: 4455, column: 7)
!8582 = !DILocation(line: 4455, column: 11, scope: !8581)
!8583 = !DILocation(line: 4455, column: 19, scope: !8581)
!8584 = !DILocation(line: 4455, column: 25, scope: !8581)
!8585 = !DILocation(line: 4455, column: 33, scope: !8581)
!8586 = !DILocation(line: 4455, column: 36, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !8581, file: !1, discriminator: 1)
!8588 = !DILocation(line: 4455, column: 42, scope: !8587)
!8589 = !DILocation(line: 4455, column: 48, scope: !8587)
!8590 = !DILocation(line: 4455, column: 53, scope: !8587)
!8591 = !DILocation(line: 4455, column: 46, scope: !8587)
!8592 = !DILocation(line: 4455, column: 7, scope: !8587)
!8593 = !DILocation(line: 4457, column: 9, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 4455, column: 64)
!8595 = !DILocation(line: 4457, column: 13, scope: !8594)
!8596 = !DILocation(line: 4457, column: 21, scope: !8594)
!8597 = !DILocation(line: 4457, column: 7, scope: !8594)
!8598 = !DILocation(line: 4458, column: 9, scope: !8594)
!8599 = !DILocation(line: 4459, column: 4, scope: !8594)
!8600 = !DILocation(line: 4461, column: 3, scope: !8512)
!8601 = !DILocation(line: 4461, column: 10, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !8512, file: !1, discriminator: 1)
!8603 = !DILocation(line: 4461, column: 16, scope: !8602)
!8604 = !DILocation(line: 4461, column: 20, scope: !8602)
!8605 = !DILocation(line: 4461, column: 13, scope: !8602)
!8606 = !DILocation(line: 4461, column: 3, scope: !8602)
!8607 = !DILocation(line: 4462, column: 8, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !1, line: 4462, column: 8)
!8609 = distinct !DILexicalBlock(scope: !8512, file: !1, line: 4461, column: 28)
!8610 = !DILocation(line: 4462, column: 12, scope: !8608)
!8611 = !DILocation(line: 4462, column: 19, scope: !8608)
!8612 = !DILocation(line: 4462, column: 8, scope: !8609)
!8613 = !DILocation(line: 4464, column: 10, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8608, file: !1, line: 4462, column: 28)
!8615 = !DILocation(line: 4464, column: 14, scope: !8614)
!8616 = !DILocation(line: 4464, column: 8, scope: !8614)
!8617 = !DILocation(line: 4465, column: 10, scope: !8614)
!8618 = !DILocation(line: 4466, column: 4, scope: !8614)
!8619 = !DILocation(line: 4467, column: 10, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8608, file: !1, line: 4466, column: 11)
!8621 = !DILocation(line: 4467, column: 14, scope: !8620)
!8622 = !DILocation(line: 4467, column: 8, scope: !8620)
!8623 = !DILocation(line: 4468, column: 5, scope: !8620)
!8624 = !DILocation(line: 4461, column: 3, scope: !8625)
!8625 = !DILexicalBlockFile(scope: !8512, file: !1, discriminator: 2)
!8626 = !DILocation(line: 4471, column: 2, scope: !8512)
!8627 = !DILocation(line: 4471, column: 11, scope: !8628)
!8628 = !DILexicalBlockFile(scope: !924, file: !1, discriminator: 1)
!8629 = !DILocation(line: 4471, column: 17, scope: !8628)
!8630 = !DILocation(line: 4471, column: 21, scope: !8628)
!8631 = !DILocation(line: 4471, column: 14, scope: !8628)
!8632 = !DILocation(line: 4471, column: 2, scope: !8628)
!8633 = !DILocation(line: 4473, column: 2, scope: !924)
!8634 = !DILocation(line: 4474, column: 1, scope: !924)
!8635 = !DILocalVariable(name: "a", arg: 1, scope: !928, file: !1, line: 4180, type: !367)
!8636 = !DILocation(line: 4180, column: 35, scope: !928)
!8637 = !DILocalVariable(name: "p", scope: !928, file: !1, line: 4182, type: !544)
!8638 = !DILocation(line: 4182, column: 17, scope: !928)
!8639 = !DILocation(line: 4184, column: 17, scope: !928)
!8640 = !DILocation(line: 4184, column: 6, scope: !928)
!8641 = !DILocation(line: 4184, column: 4, scope: !928)
!8642 = !DILocation(line: 4186, column: 9, scope: !928)
!8643 = !DILocation(line: 4186, column: 2, scope: !928)
!8644 = !DILocation(line: 4187, column: 2, scope: !928)
!8645 = !DILocation(line: 4187, column: 7, scope: !928)
!8646 = !DILocation(line: 4188, column: 2, scope: !928)
!8647 = !DILocation(line: 4188, column: 7, scope: !928)
!8648 = !DILocation(line: 4189, column: 2, scope: !928)
!8649 = !DILocation(line: 4189, column: 7, scope: !928)
!8650 = !DILocation(line: 4190, column: 2, scope: !928)
!8651 = !DILocation(line: 4190, column: 7, scope: !928)
!8652 = !DILocation(line: 4191, column: 2, scope: !928)
!8653 = !DILocation(line: 4191, column: 7, scope: !928)
!8654 = !DILocation(line: 4192, column: 2, scope: !928)
!8655 = !DILocation(line: 4192, column: 7, scope: !928)
!8656 = !DILocation(line: 4193, column: 2, scope: !928)
!8657 = !DILocation(line: 4193, column: 7, scope: !928)
!8658 = !DILocation(line: 4194, column: 2, scope: !928)
!8659 = !DILocation(line: 4194, column: 7, scope: !928)
!8660 = !DILocation(line: 4195, column: 10, scope: !928)
!8661 = !DILocation(line: 4195, column: 33, scope: !928)
!8662 = !DILocation(line: 4195, column: 2, scope: !928)
!8663 = !DILocation(line: 4196, column: 14, scope: !928)
!8664 = !DILocation(line: 4196, column: 13, scope: !928)
!8665 = !DILocation(line: 4196, column: 10, scope: !928)
!8666 = !DILocation(line: 4196, column: 38, scope: !928)
!8667 = !DILocation(line: 4196, column: 2, scope: !928)
!8668 = !DILocation(line: 4197, column: 14, scope: !928)
!8669 = !DILocation(line: 4197, column: 13, scope: !928)
!8670 = !DILocation(line: 4197, column: 19, scope: !928)
!8671 = !DILocation(line: 4197, column: 18, scope: !928)
!8672 = !DILocation(line: 4197, column: 10, scope: !928)
!8673 = !DILocation(line: 4197, column: 39, scope: !928)
!8674 = !DILocation(line: 4197, column: 2, scope: !928)
!8675 = !DILocation(line: 4199, column: 21, scope: !928)
!8676 = !DILocation(line: 4199, column: 10, scope: !928)
!8677 = !DILocation(line: 4199, column: 2, scope: !928)
!8678 = !DILocalVariable(name: "a", arg: 1, scope: !929, file: !1, line: 4511, type: !367)
!8679 = !DILocation(line: 4511, column: 46, scope: !929)
!8680 = !DILocalVariable(name: "iso9660", scope: !929, file: !1, line: 4513, type: !530)
!8681 = !DILocation(line: 4513, column: 18, scope: !929)
!8682 = !DILocation(line: 4513, column: 28, scope: !929)
!8683 = !DILocation(line: 4513, column: 31, scope: !929)
!8684 = !DILocalVariable(name: "file", scope: !929, file: !1, line: 4514, type: !7)
!8685 = !DILocation(line: 4514, column: 18, scope: !929)
!8686 = !DILocalVariable(name: "blocks", scope: !929, file: !1, line: 4515, type: !36)
!8687 = !DILocation(line: 4515, column: 10, scope: !929)
!8688 = !DILocalVariable(name: "offset", scope: !929, file: !1, line: 4515, type: !36)
!8689 = !DILocation(line: 4515, column: 18, scope: !929)
!8690 = !DILocalVariable(name: "r", scope: !929, file: !1, line: 4516, type: !31)
!8691 = !DILocation(line: 4516, column: 6, scope: !929)
!8692 = !DILocation(line: 4518, column: 9, scope: !929)
!8693 = !DILocation(line: 4519, column: 9, scope: !929)
!8694 = !DILocation(line: 4522, column: 6, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !929, file: !1, line: 4522, column: 6)
!8696 = !DILocation(line: 4522, column: 15, scope: !8695)
!8697 = !DILocation(line: 4522, column: 25, scope: !8695)
!8698 = !DILocation(line: 4522, column: 33, scope: !8695)
!8699 = !DILocation(line: 4522, column: 6, scope: !929)
!8700 = !DILocation(line: 4523, column: 25, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8695, file: !1, line: 4522, column: 42)
!8702 = !DILocation(line: 4523, column: 7, scope: !8701)
!8703 = !DILocation(line: 4523, column: 5, scope: !8701)
!8704 = !DILocation(line: 4524, column: 7, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !1, line: 4524, column: 7)
!8706 = !DILocation(line: 4524, column: 9, scope: !8705)
!8707 = !DILocation(line: 4524, column: 7, scope: !8701)
!8708 = !DILocation(line: 4525, column: 12, scope: !8705)
!8709 = !DILocation(line: 4525, column: 4, scope: !8705)
!8710 = !DILocation(line: 4526, column: 2, scope: !8701)
!8711 = !DILocation(line: 4529, column: 6, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !929, file: !1, line: 4529, column: 6)
!8713 = !DILocation(line: 4529, column: 15, scope: !8712)
!8714 = !DILocation(line: 4529, column: 25, scope: !8712)
!8715 = !DILocation(line: 4529, column: 30, scope: !8712)
!8716 = !DILocation(line: 4529, column: 6, scope: !929)
!8717 = !DILocation(line: 4530, column: 10, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8712, file: !1, line: 4529, column: 39)
!8719 = !DILocation(line: 4530, column: 19, scope: !8718)
!8720 = !DILocation(line: 4530, column: 29, scope: !8718)
!8721 = !DILocation(line: 4530, column: 35, scope: !8718)
!8722 = !DILocation(line: 4530, column: 8, scope: !8718)
!8723 = !DILocation(line: 4531, column: 12, scope: !8718)
!8724 = !DILocation(line: 4531, column: 18, scope: !8718)
!8725 = !DILocation(line: 4531, column: 26, scope: !8718)
!8726 = !DILocation(line: 4531, column: 10, scope: !8718)
!8727 = !DILocation(line: 4532, column: 12, scope: !8718)
!8728 = !DILocation(line: 4532, column: 18, scope: !8718)
!8729 = !DILocation(line: 4532, column: 26, scope: !8718)
!8730 = !DILocation(line: 4532, column: 10, scope: !8718)
!8731 = !DILocation(line: 4533, column: 7, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8718, file: !1, line: 4533, column: 7)
!8733 = !DILocation(line: 4533, column: 14, scope: !8732)
!8734 = !DILocation(line: 4533, column: 7, scope: !8718)
!8735 = !DILocation(line: 4534, column: 28, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !1, line: 4533, column: 20)
!8737 = !DILocation(line: 4534, column: 31, scope: !8736)
!8738 = !DILocation(line: 4535, column: 8, scope: !8736)
!8739 = !DILocation(line: 4535, column: 15, scope: !8736)
!8740 = !DILocation(line: 4534, column: 8, scope: !8736)
!8741 = !DILocation(line: 4534, column: 6, scope: !8736)
!8742 = !DILocation(line: 4536, column: 8, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8736, file: !1, line: 4536, column: 8)
!8744 = !DILocation(line: 4536, column: 10, scope: !8743)
!8745 = !DILocation(line: 4536, column: 8, scope: !8736)
!8746 = !DILocation(line: 4537, column: 13, scope: !8743)
!8747 = !DILocation(line: 4537, column: 5, scope: !8743)
!8748 = !DILocation(line: 4538, column: 11, scope: !8736)
!8749 = !DILocation(line: 4539, column: 11, scope: !8736)
!8750 = !DILocation(line: 4540, column: 3, scope: !8736)
!8751 = !DILocation(line: 4541, column: 2, scope: !8718)
!8752 = !DILocation(line: 4544, column: 14, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !929, file: !1, line: 4544, column: 2)
!8754 = !DILocation(line: 4544, column: 23, scope: !8753)
!8755 = !DILocation(line: 4544, column: 38, scope: !8753)
!8756 = !DILocation(line: 4544, column: 12, scope: !8753)
!8757 = !DILocation(line: 4544, column: 7, scope: !8753)
!8758 = !DILocation(line: 4545, column: 6, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8753, file: !1, line: 4544, column: 2)
!8760 = !DILocation(line: 4545, column: 11, scope: !8759)
!8761 = !DILocation(line: 4544, column: 2, scope: !8762)
!8762 = !DILexicalBlockFile(scope: !8753, file: !1, discriminator: 1)
!8763 = !DILocation(line: 4547, column: 8, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !1, line: 4547, column: 7)
!8765 = distinct !DILexicalBlock(scope: !8759, file: !1, line: 4545, column: 43)
!8766 = !DILocation(line: 4547, column: 14, scope: !8764)
!8767 = !DILocation(line: 4547, column: 7, scope: !8765)
!8768 = !DILocation(line: 4548, column: 4, scope: !8764)
!8769 = !DILocation(line: 4550, column: 8, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8765, file: !1, line: 4550, column: 7)
!8771 = !DILocation(line: 4550, column: 18, scope: !8770)
!8772 = !DILocation(line: 4550, column: 25, scope: !8770)
!8773 = !DILocation(line: 4550, column: 15, scope: !8770)
!8774 = !DILocation(line: 4551, column: 8, scope: !8770)
!8775 = !DILocation(line: 4551, column: 14, scope: !8770)
!8776 = !DILocation(line: 4551, column: 22, scope: !8770)
!8777 = !DILocation(line: 4550, column: 49, scope: !8770)
!8778 = !DILocation(line: 4550, column: 7, scope: !8765)
!8779 = !DILocation(line: 4552, column: 8, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !1, line: 4552, column: 8)
!8781 = distinct !DILexicalBlock(scope: !8770, file: !1, line: 4551, column: 38)
!8782 = !DILocation(line: 4552, column: 15, scope: !8780)
!8783 = !DILocation(line: 4552, column: 8, scope: !8781)
!8784 = !DILocation(line: 4553, column: 29, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8780, file: !1, line: 4552, column: 20)
!8786 = !DILocation(line: 4553, column: 32, scope: !8785)
!8787 = !DILocation(line: 4554, column: 9, scope: !8785)
!8788 = !DILocation(line: 4554, column: 16, scope: !8785)
!8789 = !DILocation(line: 4553, column: 9, scope: !8785)
!8790 = !DILocation(line: 4553, column: 7, scope: !8785)
!8791 = !DILocation(line: 4555, column: 9, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8785, file: !1, line: 4555, column: 9)
!8793 = !DILocation(line: 4555, column: 11, scope: !8792)
!8794 = !DILocation(line: 4555, column: 9, scope: !8785)
!8795 = !DILocation(line: 4556, column: 14, scope: !8792)
!8796 = !DILocation(line: 4556, column: 6, scope: !8792)
!8797 = !DILocation(line: 4557, column: 4, scope: !8785)
!8798 = !DILocation(line: 4558, column: 11, scope: !8781)
!8799 = !DILocation(line: 4559, column: 13, scope: !8781)
!8800 = !DILocation(line: 4559, column: 19, scope: !8781)
!8801 = !DILocation(line: 4559, column: 27, scope: !8781)
!8802 = !DILocation(line: 4559, column: 11, scope: !8781)
!8803 = !DILocation(line: 4560, column: 3, scope: !8781)
!8804 = !DILocation(line: 4562, column: 25, scope: !8765)
!8805 = !DILocation(line: 4562, column: 31, scope: !8765)
!8806 = !DILocation(line: 4562, column: 3, scope: !8765)
!8807 = !DILocation(line: 4562, column: 9, scope: !8765)
!8808 = !DILocation(line: 4562, column: 21, scope: !8765)
!8809 = !DILocation(line: 4563, column: 3, scope: !8765)
!8810 = !DILocation(line: 4564, column: 14, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8765, file: !1, line: 4563, column: 6)
!8812 = !DILocation(line: 4564, column: 20, scope: !8811)
!8813 = !DILocation(line: 4564, column: 33, scope: !8811)
!8814 = !DILocation(line: 4564, column: 11, scope: !8811)
!8815 = !DILocation(line: 4566, column: 24, scope: !8811)
!8816 = !DILocation(line: 4566, column: 30, scope: !8811)
!8817 = !DILocation(line: 4566, column: 43, scope: !8811)
!8818 = !DILocation(line: 4566, column: 4, scope: !8811)
!8819 = !DILocation(line: 4566, column: 10, scope: !8811)
!8820 = !DILocation(line: 4566, column: 22, scope: !8811)
!8821 = !DILocation(line: 4567, column: 3, scope: !8811)
!8822 = !DILocation(line: 4567, column: 12, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !8765, file: !1, discriminator: 1)
!8824 = !DILocation(line: 4567, column: 18, scope: !8823)
!8825 = !DILocation(line: 4567, column: 30, scope: !8823)
!8826 = !DILocation(line: 4567, column: 3, scope: !8823)
!8827 = !DILocation(line: 4568, column: 2, scope: !8765)
!8828 = !DILocation(line: 4545, column: 27, scope: !8829)
!8829 = !DILexicalBlockFile(scope: !8759, file: !1, discriminator: 1)
!8830 = !DILocation(line: 4545, column: 33, scope: !8829)
!8831 = !DILocation(line: 4545, column: 25, scope: !8829)
!8832 = !DILocation(line: 4544, column: 2, scope: !8833)
!8833 = !DILexicalBlockFile(scope: !8759, file: !1, discriminator: 2)
!8834 = !DILocation(line: 4571, column: 6, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !929, file: !1, line: 4571, column: 6)
!8836 = !DILocation(line: 4571, column: 13, scope: !8835)
!8837 = !DILocation(line: 4571, column: 6, scope: !929)
!8838 = !DILocation(line: 4572, column: 27, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 4571, column: 18)
!8840 = !DILocation(line: 4572, column: 30, scope: !8839)
!8841 = !DILocation(line: 4573, column: 7, scope: !8839)
!8842 = !DILocation(line: 4573, column: 14, scope: !8839)
!8843 = !DILocation(line: 4572, column: 7, scope: !8839)
!8844 = !DILocation(line: 4572, column: 5, scope: !8839)
!8845 = !DILocation(line: 4574, column: 7, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8839, file: !1, line: 4574, column: 7)
!8847 = !DILocation(line: 4574, column: 9, scope: !8846)
!8848 = !DILocation(line: 4574, column: 7, scope: !8839)
!8849 = !DILocation(line: 4575, column: 12, scope: !8846)
!8850 = !DILocation(line: 4575, column: 4, scope: !8846)
!8851 = !DILocation(line: 4576, column: 2, scope: !8839)
!8852 = !DILocation(line: 4578, column: 2, scope: !929)
!8853 = !DILocation(line: 4579, column: 1, scope: !929)
!8854 = !DILocalVariable(name: "rootent", arg: 1, scope: !655, file: !1, line: 5747, type: !76)
!8855 = !DILocation(line: 5747, column: 34, scope: !655)
!8856 = !DILocalVariable(name: "fn", arg: 2, scope: !655, file: !1, line: 5747, type: !429)
!8857 = !DILocation(line: 5747, column: 55, scope: !655)
!8858 = !DILocalVariable(name: "name", scope: !655, file: !1, line: 5752, type: !4056)
!8859 = !DILocation(line: 5752, column: 7, scope: !655)
!8860 = !DILocalVariable(name: "isoent", scope: !655, file: !1, line: 5756, type: !76)
!8861 = !DILocation(line: 5756, column: 17, scope: !655)
!8862 = !DILocalVariable(name: "np", scope: !655, file: !1, line: 5756, type: !76)
!8863 = !DILocation(line: 5756, column: 26, scope: !655)
!8864 = !DILocalVariable(name: "l", scope: !655, file: !1, line: 5757, type: !31)
!8865 = !DILocation(line: 5757, column: 6, scope: !655)
!8866 = !DILocation(line: 5759, column: 11, scope: !655)
!8867 = !DILocation(line: 5759, column: 9, scope: !655)
!8868 = !DILocation(line: 5760, column: 5, scope: !655)
!8869 = !DILocation(line: 5761, column: 2, scope: !655)
!8870 = !DILocation(line: 5762, column: 26, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !1, line: 5761, column: 11)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !1, line: 5761, column: 2)
!8873 = distinct !DILexicalBlock(scope: !655, file: !1, line: 5761, column: 2)
!8874 = !DILocation(line: 5762, column: 46, scope: !8871)
!8875 = !DILocation(line: 5762, column: 7, scope: !8871)
!8876 = !DILocation(line: 5762, column: 5, scope: !8871)
!8877 = !DILocation(line: 5763, column: 7, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 5763, column: 7)
!8879 = !DILocation(line: 5763, column: 9, scope: !8878)
!8880 = !DILocation(line: 5763, column: 7, scope: !8871)
!8881 = !DILocation(line: 5764, column: 4, scope: !8878)
!8882 = !DILocation(line: 5765, column: 9, scope: !8871)
!8883 = !DILocation(line: 5765, column: 6, scope: !8871)
!8884 = !DILocation(line: 5766, column: 7, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 5766, column: 7)
!8886 = !DILocation(line: 5766, column: 13, scope: !8885)
!8887 = !DILocation(line: 5766, column: 7, scope: !8871)
!8888 = !DILocation(line: 5767, column: 6, scope: !8885)
!8889 = !DILocation(line: 5767, column: 4, scope: !8885)
!8890 = !DILocation(line: 5769, column: 26, scope: !8871)
!8891 = !DILocation(line: 5769, column: 34, scope: !8871)
!8892 = !DILocation(line: 5769, column: 8, scope: !8871)
!8893 = !DILocation(line: 5769, column: 6, scope: !8871)
!8894 = !DILocation(line: 5770, column: 7, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 5770, column: 7)
!8896 = !DILocation(line: 5770, column: 10, scope: !8895)
!8897 = !DILocation(line: 5770, column: 7, scope: !8871)
!8898 = !DILocation(line: 5771, column: 4, scope: !8895)
!8899 = !DILocation(line: 5772, column: 7, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 5772, column: 7)
!8901 = !DILocation(line: 5772, column: 13, scope: !8900)
!8902 = !DILocation(line: 5772, column: 7, scope: !8871)
!8903 = !DILocation(line: 5773, column: 4, scope: !8900)
!8904 = !DILocation(line: 5776, column: 12, scope: !8871)
!8905 = !DILocation(line: 5776, column: 10, scope: !8871)
!8906 = !DILocation(line: 5777, column: 6, scope: !8871)
!8907 = !DILocation(line: 5778, column: 8, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8871, file: !1, line: 5778, column: 7)
!8909 = !DILocation(line: 5778, column: 16, scope: !8908)
!8910 = !DILocation(line: 5778, column: 7, scope: !8871)
!8911 = !DILocation(line: 5779, column: 4, scope: !8908)
!8912 = !DILocation(line: 5761, column: 2, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !8872, file: !1, discriminator: 1)
!8914 = !DILocation(line: 5782, column: 10, scope: !655)
!8915 = !DILocation(line: 5782, column: 2, scope: !655)
!8916 = !DILocalVariable(name: "a", arg: 1, scope: !657, file: !1, line: 7900, type: !367)
!8917 = !DILocation(line: 7900, column: 38, scope: !657)
!8918 = !DILocalVariable(name: "zisofs", arg: 2, scope: !657, file: !1, line: 7900, type: !660)
!8919 = !DILocation(line: 7900, column: 64, scope: !657)
!8920 = !DILocalVariable(name: "p", arg: 3, scope: !657, file: !1, line: 7901, type: !453)
!8921 = !DILocation(line: 7901, column: 26, scope: !657)
!8922 = !DILocalVariable(name: "bytes", arg: 4, scope: !657, file: !1, line: 7901, type: !23)
!8923 = !DILocation(line: 7901, column: 36, scope: !657)
!8924 = !DILocalVariable(name: "avail", scope: !657, file: !1, line: 7903, type: !23)
!8925 = !DILocation(line: 7903, column: 9, scope: !657)
!8926 = !DILocalVariable(name: "r", scope: !657, file: !1, line: 7904, type: !31)
!8927 = !DILocation(line: 7904, column: 6, scope: !657)
!8928 = !DILocation(line: 7906, column: 7, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !657, file: !1, line: 7906, column: 6)
!8930 = !DILocation(line: 7906, column: 15, scope: !8929)
!8931 = !DILocation(line: 7906, column: 6, scope: !657)
!8932 = !DILocalVariable(name: "rs", scope: !8933, file: !1, line: 7907, type: !396)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !1, line: 7906, column: 28)
!8934 = !DILocation(line: 7907, column: 11, scope: !8933)
!8935 = !DILocation(line: 7907, column: 36, scope: !8933)
!8936 = !DILocation(line: 7907, column: 39, scope: !8933)
!8937 = !DILocation(line: 7907, column: 47, scope: !8933)
!8938 = !DILocation(line: 7907, column: 50, scope: !8933)
!8939 = !DILocation(line: 7907, column: 16, scope: !8933)
!8940 = !DILocation(line: 7908, column: 7, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8933, file: !1, line: 7908, column: 7)
!8942 = !DILocation(line: 7908, column: 10, scope: !8941)
!8943 = !DILocation(line: 7908, column: 7, scope: !8933)
!8944 = !DILocation(line: 7909, column: 12, scope: !8941)
!8945 = !DILocation(line: 7909, column: 4, scope: !8941)
!8946 = !DILocation(line: 7910, column: 8, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8933, file: !1, line: 7910, column: 7)
!8948 = !DILocation(line: 7910, column: 16, scope: !8947)
!8949 = !DILocation(line: 7910, column: 7, scope: !8933)
!8950 = !DILocation(line: 7912, column: 35, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 7910, column: 29)
!8952 = !DILocation(line: 7912, column: 25, scope: !8951)
!8953 = !DILocation(line: 7912, column: 4, scope: !8951)
!8954 = !DILocation(line: 7912, column: 12, scope: !8951)
!8955 = !DILocation(line: 7912, column: 22, scope: !8951)
!8956 = !DILocation(line: 7913, column: 12, scope: !8951)
!8957 = !DILocation(line: 7913, column: 4, scope: !8951)
!8958 = !DILocation(line: 7915, column: 11, scope: !8933)
!8959 = !DILocation(line: 7915, column: 9, scope: !8933)
!8960 = !DILocation(line: 7916, column: 8, scope: !8933)
!8961 = !DILocation(line: 7916, column: 16, scope: !8933)
!8962 = !DILocation(line: 7916, column: 14, scope: !8933)
!8963 = !DILocation(line: 7916, column: 5, scope: !8933)
!8964 = !DILocation(line: 7917, column: 2, scope: !8933)
!8965 = !DILocation(line: 7918, column: 11, scope: !8929)
!8966 = !DILocation(line: 7918, column: 9, scope: !8929)
!8967 = !DILocation(line: 7923, column: 6, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !657, file: !1, line: 7923, column: 6)
!8969 = !DILocation(line: 7923, column: 14, scope: !8968)
!8970 = !DILocation(line: 7923, column: 26, scope: !8968)
!8971 = !DILocation(line: 7923, column: 6, scope: !657)
!8972 = !DILocalVariable(name: "bst", scope: !8973, file: !1, line: 7924, type: !42)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !1, line: 7923, column: 32)
!8974 = !DILocation(line: 7924, column: 12, scope: !8973)
!8975 = !DILocalVariable(name: "bed", scope: !8973, file: !1, line: 7924, type: !42)
!8976 = !DILocation(line: 7924, column: 17, scope: !8973)
!8977 = !DILocation(line: 7926, column: 7, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8973, file: !1, line: 7926, column: 7)
!8979 = !DILocation(line: 7926, column: 15, scope: !8978)
!8980 = !DILocation(line: 7926, column: 25, scope: !8978)
!8981 = !DILocation(line: 7926, column: 32, scope: !8978)
!8982 = !DILocation(line: 7926, column: 40, scope: !8978)
!8983 = !DILocation(line: 7926, column: 29, scope: !8978)
!8984 = !DILocation(line: 7926, column: 7, scope: !8973)
!8985 = !DILocation(line: 7928, column: 23, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8978, file: !1, line: 7926, column: 61)
!8987 = !DILocation(line: 7928, column: 26, scope: !8986)
!8988 = !DILocation(line: 7928, column: 4, scope: !8986)
!8989 = !DILocation(line: 7931, column: 4, scope: !8986)
!8990 = !DILocation(line: 7934, column: 7, scope: !8973)
!8991 = !DILocation(line: 7934, column: 15, scope: !8973)
!8992 = !DILocation(line: 7934, column: 32, scope: !8973)
!8993 = !DILocation(line: 7934, column: 40, scope: !8973)
!8994 = !DILocation(line: 7934, column: 30, scope: !8973)
!8995 = !DILocation(line: 7933, column: 9, scope: !8973)
!8996 = !DILocation(line: 7933, column: 7, scope: !8973)
!8997 = !DILocation(line: 7935, column: 7, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8973, file: !1, line: 7935, column: 7)
!8999 = !DILocation(line: 7935, column: 14, scope: !8998)
!9000 = !DILocation(line: 7935, column: 22, scope: !8998)
!9001 = !DILocation(line: 7935, column: 35, scope: !8998)
!9002 = !DILocation(line: 7935, column: 43, scope: !8998)
!9003 = !DILocation(line: 7935, column: 41, scope: !8998)
!9004 = !DILocation(line: 7935, column: 32, scope: !8998)
!9005 = !DILocation(line: 7935, column: 11, scope: !8998)
!9006 = !DILocation(line: 7935, column: 7, scope: !8973)
!9007 = !DILocation(line: 7936, column: 23, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8998, file: !1, line: 7935, column: 51)
!9009 = !DILocation(line: 7936, column: 26, scope: !9008)
!9010 = !DILocation(line: 7936, column: 4, scope: !9008)
!9011 = !DILocation(line: 7939, column: 4, scope: !9008)
!9012 = !DILocation(line: 7942, column: 7, scope: !8973)
!9013 = !DILocation(line: 7942, column: 15, scope: !8973)
!9014 = !DILocation(line: 7942, column: 32, scope: !8973)
!9015 = !DILocation(line: 7942, column: 40, scope: !8973)
!9016 = !DILocation(line: 7942, column: 30, scope: !8973)
!9017 = !DILocation(line: 7942, column: 50, scope: !8973)
!9018 = !DILocation(line: 7941, column: 9, scope: !8973)
!9019 = !DILocation(line: 7941, column: 7, scope: !8973)
!9020 = !DILocation(line: 7943, column: 7, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8973, file: !1, line: 7943, column: 7)
!9022 = !DILocation(line: 7943, column: 13, scope: !9021)
!9023 = !DILocation(line: 7943, column: 11, scope: !9021)
!9024 = !DILocation(line: 7943, column: 7, scope: !8973)
!9025 = !DILocation(line: 7944, column: 23, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9021, file: !1, line: 7943, column: 18)
!9027 = !DILocation(line: 7944, column: 26, scope: !9026)
!9028 = !DILocation(line: 7944, column: 4, scope: !9026)
!9029 = !DILocation(line: 7947, column: 4, scope: !9026)
!9030 = !DILocation(line: 7949, column: 25, scope: !8973)
!9031 = !DILocation(line: 7949, column: 31, scope: !8973)
!9032 = !DILocation(line: 7949, column: 29, scope: !8973)
!9033 = !DILocation(line: 7949, column: 3, scope: !8973)
!9034 = !DILocation(line: 7949, column: 11, scope: !8973)
!9035 = !DILocation(line: 7949, column: 23, scope: !8973)
!9036 = !DILocation(line: 7950, column: 3, scope: !8973)
!9037 = !DILocation(line: 7950, column: 11, scope: !8973)
!9038 = !DILocation(line: 7950, column: 21, scope: !8973)
!9039 = !DILocation(line: 7953, column: 7, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8973, file: !1, line: 7953, column: 7)
!9041 = !DILocation(line: 7953, column: 15, scope: !9040)
!9042 = !DILocation(line: 7953, column: 7, scope: !8973)
!9043 = !DILocation(line: 7954, column: 22, scope: !9040)
!9044 = !DILocation(line: 7954, column: 30, scope: !9040)
!9045 = !DILocation(line: 7954, column: 8, scope: !9040)
!9046 = !DILocation(line: 7954, column: 6, scope: !9040)
!9047 = !DILocation(line: 7954, column: 4, scope: !9040)
!9048 = !DILocation(line: 7956, column: 8, scope: !9040)
!9049 = !DILocation(line: 7956, column: 6, scope: !9040)
!9050 = !DILocation(line: 7957, column: 7, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !8973, file: !1, line: 7957, column: 7)
!9052 = !DILocation(line: 7957, column: 9, scope: !9051)
!9053 = !DILocation(line: 7957, column: 7, scope: !8973)
!9054 = !DILocation(line: 7958, column: 23, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9051, file: !1, line: 7957, column: 18)
!9056 = !DILocation(line: 7958, column: 26, scope: !9055)
!9057 = !DILocation(line: 7958, column: 4, scope: !9055)
!9058 = !DILocation(line: 7960, column: 4, scope: !9055)
!9059 = !DILocation(line: 7962, column: 3, scope: !8973)
!9060 = !DILocation(line: 7962, column: 11, scope: !8973)
!9061 = !DILocation(line: 7962, column: 24, scope: !8973)
!9062 = !DILocation(line: 7963, column: 3, scope: !8973)
!9063 = !DILocation(line: 7963, column: 11, scope: !8973)
!9064 = !DILocation(line: 7963, column: 18, scope: !8973)
!9065 = !DILocation(line: 7963, column: 27, scope: !8973)
!9066 = !DILocation(line: 7964, column: 3, scope: !8973)
!9067 = !DILocation(line: 7964, column: 11, scope: !8973)
!9068 = !DILocation(line: 7964, column: 18, scope: !8973)
!9069 = !DILocation(line: 7964, column: 28, scope: !8973)
!9070 = !DILocation(line: 7965, column: 2, scope: !8973)
!9071 = !DILocation(line: 7970, column: 6, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !657, file: !1, line: 7970, column: 6)
!9073 = !DILocation(line: 7970, column: 14, scope: !9072)
!9074 = !DILocation(line: 7970, column: 26, scope: !9072)
!9075 = !DILocation(line: 7970, column: 6, scope: !657)
!9076 = !DILocalVariable(name: "wb", scope: !9077, file: !1, line: 7974, type: !544)
!9077 = distinct !DILexicalBlock(scope: !9072, file: !1, line: 7970, column: 32)
!9078 = !DILocation(line: 7974, column: 18, scope: !9077)
!9079 = !DILocalVariable(name: "size", scope: !9077, file: !1, line: 7975, type: !23)
!9080 = !DILocation(line: 7975, column: 10, scope: !9077)
!9081 = !DILocalVariable(name: "wsize", scope: !9077, file: !1, line: 7975, type: !23)
!9082 = !DILocation(line: 7975, column: 16, scope: !9077)
!9083 = !DILocation(line: 7977, column: 10, scope: !9077)
!9084 = !DILocation(line: 7977, column: 18, scope: !9077)
!9085 = !DILocation(line: 7977, column: 8, scope: !9077)
!9086 = !DILocation(line: 7978, column: 3, scope: !9077)
!9087 = !DILocation(line: 7978, column: 10, scope: !9088)
!9088 = !DILexicalBlockFile(scope: !9077, file: !1, discriminator: 1)
!9089 = !DILocation(line: 7978, column: 3, scope: !9088)
!9090 = !DILocation(line: 7979, column: 20, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9077, file: !1, line: 7978, column: 16)
!9092 = !DILocation(line: 7979, column: 9, scope: !9091)
!9093 = !DILocation(line: 7979, column: 7, scope: !9091)
!9094 = !DILocation(line: 7980, column: 8, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9091, file: !1, line: 7980, column: 8)
!9096 = !DILocation(line: 7980, column: 15, scope: !9095)
!9097 = !DILocation(line: 7980, column: 13, scope: !9095)
!9098 = !DILocation(line: 7980, column: 8, scope: !9091)
!9099 = !DILocation(line: 7981, column: 13, scope: !9095)
!9100 = !DILocation(line: 7981, column: 11, scope: !9095)
!9101 = !DILocation(line: 7981, column: 5, scope: !9095)
!9102 = !DILocation(line: 7983, column: 13, scope: !9095)
!9103 = !DILocation(line: 7983, column: 11, scope: !9095)
!9104 = !DILocation(line: 7984, column: 11, scope: !9091)
!9105 = !DILocation(line: 7984, column: 18, scope: !9091)
!9106 = !DILocation(line: 7984, column: 4, scope: !9091)
!9107 = !DILocation(line: 7985, column: 19, scope: !9091)
!9108 = !DILocation(line: 7985, column: 22, scope: !9091)
!9109 = !DILocation(line: 7985, column: 8, scope: !9091)
!9110 = !DILocation(line: 7985, column: 6, scope: !9091)
!9111 = !DILocation(line: 7986, column: 8, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9091, file: !1, line: 7986, column: 8)
!9113 = !DILocation(line: 7986, column: 10, scope: !9112)
!9114 = !DILocation(line: 7986, column: 8, scope: !9091)
!9115 = !DILocation(line: 7987, column: 13, scope: !9112)
!9116 = !DILocation(line: 7987, column: 12, scope: !9112)
!9117 = !DILocation(line: 7987, column: 5, scope: !9112)
!9118 = !DILocation(line: 7988, column: 12, scope: !9091)
!9119 = !DILocation(line: 7988, column: 9, scope: !9091)
!9120 = !DILocation(line: 7978, column: 3, scope: !9121)
!9121 = !DILexicalBlockFile(scope: !9077, file: !1, discriminator: 2)
!9122 = !DILocation(line: 7990, column: 2, scope: !9077)
!9123 = !DILocation(line: 7991, column: 62, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9072, file: !1, line: 7990, column: 9)
!9125 = !DILocation(line: 7991, column: 37, scope: !9124)
!9126 = !DILocation(line: 7991, column: 28, scope: !9124)
!9127 = !DILocation(line: 7991, column: 3, scope: !9124)
!9128 = !DILocation(line: 7991, column: 11, scope: !9124)
!9129 = !DILocation(line: 7991, column: 18, scope: !9124)
!9130 = !DILocation(line: 7991, column: 26, scope: !9124)
!9131 = !DILocation(line: 7992, column: 7, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9124, file: !1, line: 7992, column: 7)
!9133 = !DILocation(line: 7992, column: 15, scope: !9132)
!9134 = !DILocation(line: 7992, column: 23, scope: !9132)
!9135 = !DILocation(line: 7992, column: 13, scope: !9132)
!9136 = !DILocation(line: 7992, column: 7, scope: !9124)
!9137 = !DILocation(line: 7993, column: 30, scope: !9132)
!9138 = !DILocation(line: 7993, column: 38, scope: !9132)
!9139 = !DILocation(line: 7993, column: 4, scope: !9132)
!9140 = !DILocation(line: 7993, column: 12, scope: !9132)
!9141 = !DILocation(line: 7993, column: 19, scope: !9132)
!9142 = !DILocation(line: 7993, column: 28, scope: !9132)
!9143 = !DILocation(line: 7995, column: 36, scope: !9132)
!9144 = !DILocation(line: 7995, column: 30, scope: !9132)
!9145 = !DILocation(line: 7995, column: 4, scope: !9132)
!9146 = !DILocation(line: 7995, column: 12, scope: !9132)
!9147 = !DILocation(line: 7995, column: 19, scope: !9132)
!9148 = !DILocation(line: 7995, column: 28, scope: !9132)
!9149 = !DILocation(line: 7996, column: 40, scope: !9124)
!9150 = !DILocation(line: 7996, column: 29, scope: !9124)
!9151 = !DILocation(line: 7996, column: 3, scope: !9124)
!9152 = !DILocation(line: 7996, column: 11, scope: !9124)
!9153 = !DILocation(line: 7996, column: 18, scope: !9124)
!9154 = !DILocation(line: 7996, column: 27, scope: !9124)
!9155 = !DILocation(line: 7997, column: 36, scope: !9124)
!9156 = !DILocation(line: 7997, column: 30, scope: !9124)
!9157 = !DILocation(line: 7997, column: 3, scope: !9124)
!9158 = !DILocation(line: 7997, column: 11, scope: !9124)
!9159 = !DILocation(line: 7997, column: 18, scope: !9124)
!9160 = !DILocation(line: 7997, column: 28, scope: !9124)
!9161 = !DILocation(line: 7999, column: 16, scope: !9124)
!9162 = !DILocation(line: 7999, column: 24, scope: !9124)
!9163 = !DILocation(line: 7999, column: 7, scope: !9124)
!9164 = !DILocation(line: 7999, column: 5, scope: !9124)
!9165 = !DILocation(line: 8000, column: 11, scope: !9124)
!9166 = !DILocation(line: 8000, column: 3, scope: !9124)
!9167 = !DILocation(line: 8003, column: 4, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9124, file: !1, line: 8000, column: 14)
!9169 = !DILocation(line: 8005, column: 23, scope: !9168)
!9170 = !DILocation(line: 8005, column: 26, scope: !9168)
!9171 = !DILocation(line: 8006, column: 44, scope: !9168)
!9172 = !DILocation(line: 8005, column: 4, scope: !9168)
!9173 = !DILocation(line: 8007, column: 4, scope: !9168)
!9174 = !DILocation(line: 8009, column: 12, scope: !9124)
!9175 = !DILocation(line: 8009, column: 20, scope: !9124)
!9176 = !DILocation(line: 8009, column: 27, scope: !9124)
!9177 = !DILocation(line: 8009, column: 37, scope: !9124)
!9178 = !DILocation(line: 8009, column: 35, scope: !9124)
!9179 = !DILocation(line: 8009, column: 9, scope: !9124)
!9180 = !DILocation(line: 8010, column: 37, scope: !9124)
!9181 = !DILocation(line: 8010, column: 45, scope: !9124)
!9182 = !DILocation(line: 8010, column: 52, scope: !9124)
!9183 = !DILocation(line: 8010, column: 62, scope: !9124)
!9184 = !DILocation(line: 8010, column: 60, scope: !9124)
!9185 = !DILocation(line: 8010, column: 26, scope: !9124)
!9186 = !DILocation(line: 8010, column: 3, scope: !9124)
!9187 = !DILocation(line: 8010, column: 11, scope: !9124)
!9188 = !DILocation(line: 8010, column: 23, scope: !9124)
!9189 = !DILocation(line: 8011, column: 18, scope: !9124)
!9190 = !DILocation(line: 8011, column: 21, scope: !9124)
!9191 = !DILocation(line: 8011, column: 39, scope: !9124)
!9192 = !DILocation(line: 8011, column: 47, scope: !9124)
!9193 = !DILocation(line: 8011, column: 54, scope: !9124)
!9194 = !DILocation(line: 8011, column: 37, scope: !9124)
!9195 = !DILocation(line: 8011, column: 7, scope: !9124)
!9196 = !DILocation(line: 8011, column: 5, scope: !9124)
!9197 = !DILocation(line: 8012, column: 7, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9124, file: !1, line: 8012, column: 7)
!9199 = !DILocation(line: 8012, column: 9, scope: !9198)
!9200 = !DILocation(line: 8012, column: 7, scope: !9124)
!9201 = !DILocation(line: 8013, column: 12, scope: !9198)
!9202 = !DILocation(line: 8013, column: 11, scope: !9198)
!9203 = !DILocation(line: 8013, column: 4, scope: !9198)
!9204 = !DILocation(line: 8015, column: 33, scope: !657)
!9205 = !DILocation(line: 8015, column: 23, scope: !657)
!9206 = !DILocation(line: 8015, column: 2, scope: !657)
!9207 = !DILocation(line: 8015, column: 10, scope: !657)
!9208 = !DILocation(line: 8015, column: 20, scope: !657)
!9209 = !DILocation(line: 8016, column: 10, scope: !657)
!9210 = !DILocation(line: 8016, column: 18, scope: !657)
!9211 = !DILocation(line: 8016, column: 16, scope: !657)
!9212 = !DILocation(line: 8016, column: 2, scope: !657)
!9213 = !DILocation(line: 8017, column: 1, scope: !657)
!9214 = !DILocalVariable(name: "a", arg: 1, scope: !676, file: !1, line: 7819, type: !367)
!9215 = !DILocation(line: 7819, column: 43, scope: !676)
!9216 = !DILocalVariable(name: "zisofs", arg: 2, scope: !676, file: !1, line: 7819, type: !660)
!9217 = !DILocation(line: 7819, column: 69, scope: !676)
!9218 = !DILocalVariable(name: "p", arg: 3, scope: !676, file: !1, line: 7820, type: !453)
!9219 = !DILocation(line: 7820, column: 26, scope: !676)
!9220 = !DILocalVariable(name: "bytes", arg: 4, scope: !676, file: !1, line: 7820, type: !23)
!9221 = !DILocation(line: 7820, column: 36, scope: !676)
!9222 = !DILocalVariable(name: "avail", scope: !676, file: !1, line: 7822, type: !23)
!9223 = !DILocation(line: 7822, column: 9, scope: !676)
!9224 = !DILocation(line: 7822, column: 17, scope: !676)
!9225 = !DILocalVariable(name: "_ceil", scope: !676, file: !1, line: 7823, type: !23)
!9226 = !DILocation(line: 7823, column: 9, scope: !676)
!9227 = !DILocalVariable(name: "xsize", scope: !676, file: !1, line: 7823, type: !23)
!9228 = !DILocation(line: 7823, column: 16, scope: !676)
!9229 = !DILocation(line: 7826, column: 20, scope: !676)
!9230 = !DILocation(line: 7826, column: 28, scope: !676)
!9231 = !DILocation(line: 7827, column: 20, scope: !676)
!9232 = !DILocation(line: 7827, column: 28, scope: !676)
!9233 = !DILocation(line: 7827, column: 17, scope: !676)
!9234 = !DILocation(line: 7826, column: 49, scope: !676)
!9235 = !DILocation(line: 7827, column: 40, scope: !676)
!9236 = !DILocation(line: 7828, column: 6, scope: !676)
!9237 = !DILocation(line: 7828, column: 14, scope: !676)
!9238 = !DILocation(line: 7828, column: 3, scope: !676)
!9239 = !DILocation(line: 7826, column: 8, scope: !676)
!9240 = !DILocation(line: 7829, column: 11, scope: !676)
!9241 = !DILocation(line: 7829, column: 17, scope: !676)
!9242 = !DILocation(line: 7829, column: 22, scope: !676)
!9243 = !DILocation(line: 7829, column: 8, scope: !676)
!9244 = !DILocation(line: 7830, column: 6, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !676, file: !1, line: 7830, column: 6)
!9246 = !DILocation(line: 7830, column: 14, scope: !9245)
!9247 = !DILocation(line: 7830, column: 29, scope: !9245)
!9248 = !DILocation(line: 7830, column: 6, scope: !676)
!9249 = !DILocalVariable(name: "alloc", scope: !9250, file: !1, line: 7831, type: !23)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !1, line: 7830, column: 38)
!9251 = !DILocation(line: 7831, column: 10, scope: !9250)
!9252 = !DILocation(line: 7831, column: 20, scope: !9250)
!9253 = !DILocation(line: 7831, column: 26, scope: !9250)
!9254 = !DILocation(line: 7831, column: 33, scope: !9250)
!9255 = !DILocation(line: 7831, column: 38, scope: !9250)
!9256 = !DILocation(line: 7832, column: 35, scope: !9250)
!9257 = !DILocation(line: 7832, column: 28, scope: !9250)
!9258 = !DILocation(line: 7832, column: 3, scope: !9250)
!9259 = !DILocation(line: 7832, column: 11, scope: !9250)
!9260 = !DILocation(line: 7832, column: 26, scope: !9250)
!9261 = !DILocation(line: 7833, column: 7, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9250, file: !1, line: 7833, column: 7)
!9263 = !DILocation(line: 7833, column: 15, scope: !9262)
!9264 = !DILocation(line: 7833, column: 30, scope: !9262)
!9265 = !DILocation(line: 7833, column: 7, scope: !9250)
!9266 = !DILocation(line: 7834, column: 23, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9262, file: !1, line: 7833, column: 39)
!9268 = !DILocation(line: 7834, column: 26, scope: !9267)
!9269 = !DILocation(line: 7834, column: 4, scope: !9267)
!9270 = !DILocation(line: 7836, column: 4, scope: !9267)
!9271 = !DILocation(line: 7838, column: 2, scope: !9250)
!9272 = !DILocation(line: 7839, column: 32, scope: !676)
!9273 = !DILocation(line: 7839, column: 2, scope: !676)
!9274 = !DILocation(line: 7839, column: 10, scope: !676)
!9275 = !DILocation(line: 7839, column: 30, scope: !676)
!9276 = !DILocation(line: 7842, column: 52, scope: !676)
!9277 = !DILocation(line: 7842, column: 60, scope: !676)
!9278 = !DILocation(line: 7842, column: 49, scope: !676)
!9279 = !DILocation(line: 7842, column: 2, scope: !676)
!9280 = !DILocation(line: 7842, column: 10, scope: !676)
!9281 = !DILocation(line: 7842, column: 35, scope: !676)
!9282 = !DILocation(line: 7847, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !676, file: !1, line: 7847, column: 6)
!9284 = !DILocation(line: 7847, column: 15, scope: !9283)
!9285 = !DILocation(line: 7847, column: 6, scope: !676)
!9286 = !DILocalVariable(name: "err", scope: !9287, file: !1, line: 7848, type: !31)
!9287 = distinct !DILexicalBlock(scope: !9283, file: !1, line: 7847, column: 30)
!9288 = !DILocation(line: 7848, column: 7, scope: !9287)
!9289 = !DILocation(line: 7849, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9287, file: !1, line: 7849, column: 7)
!9291 = !DILocation(line: 7849, column: 13, scope: !9290)
!9292 = !DILocation(line: 7849, column: 7, scope: !9287)
!9293 = !DILocation(line: 7850, column: 23, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9290, file: !1, line: 7849, column: 19)
!9295 = !DILocation(line: 7850, column: 26, scope: !9294)
!9296 = !DILocation(line: 7850, column: 4, scope: !9294)
!9297 = !DILocation(line: 7853, column: 4, scope: !9294)
!9298 = !DILocation(line: 7856, column: 14, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9287, file: !1, line: 7856, column: 7)
!9300 = !DILocation(line: 7856, column: 7, scope: !9299)
!9301 = !DILocation(line: 7856, column: 53, scope: !9299)
!9302 = !DILocation(line: 7856, column: 7, scope: !9287)
!9303 = !DILocation(line: 7857, column: 8, scope: !9299)
!9304 = !DILocation(line: 7857, column: 4, scope: !9299)
!9305 = !DILocation(line: 7858, column: 28, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9299, file: !1, line: 7858, column: 12)
!9307 = !DILocation(line: 7858, column: 30, scope: !9306)
!9308 = !DILocation(line: 7858, column: 12, scope: !9306)
!9309 = !DILocation(line: 7858, column: 38, scope: !9306)
!9310 = !DILocation(line: 7858, column: 46, scope: !9306)
!9311 = !DILocation(line: 7858, column: 35, scope: !9306)
!9312 = !DILocation(line: 7858, column: 12, scope: !9299)
!9313 = !DILocation(line: 7859, column: 8, scope: !9306)
!9314 = !DILocation(line: 7859, column: 4, scope: !9306)
!9315 = !DILocation(line: 7860, column: 12, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9306, file: !1, line: 7860, column: 12)
!9317 = !DILocation(line: 7860, column: 18, scope: !9316)
!9318 = !DILocation(line: 7860, column: 23, scope: !9316)
!9319 = !DILocation(line: 7860, column: 26, scope: !9320)
!9320 = !DILexicalBlockFile(scope: !9316, file: !1, discriminator: 1)
!9321 = !DILocation(line: 7860, column: 35, scope: !9320)
!9322 = !DILocation(line: 7860, column: 43, scope: !9320)
!9323 = !DILocation(line: 7860, column: 32, scope: !9320)
!9324 = !DILocation(line: 7860, column: 12, scope: !9320)
!9325 = !DILocation(line: 7861, column: 8, scope: !9316)
!9326 = !DILocation(line: 7861, column: 4, scope: !9316)
!9327 = !DILocation(line: 7862, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9287, file: !1, line: 7862, column: 7)
!9329 = !DILocation(line: 7862, column: 7, scope: !9287)
!9330 = !DILocation(line: 7863, column: 23, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9328, file: !1, line: 7862, column: 12)
!9332 = !DILocation(line: 7863, column: 26, scope: !9331)
!9333 = !DILocation(line: 7863, column: 4, scope: !9331)
!9334 = !DILocation(line: 7866, column: 4, scope: !9331)
!9335 = !DILocation(line: 7868, column: 9, scope: !9287)
!9336 = !DILocation(line: 7869, column: 5, scope: !9287)
!9337 = !DILocation(line: 7870, column: 3, scope: !9287)
!9338 = !DILocation(line: 7870, column: 11, scope: !9287)
!9339 = !DILocation(line: 7870, column: 25, scope: !9287)
!9340 = !DILocation(line: 7871, column: 2, scope: !9287)
!9341 = !DILocation(line: 7876, column: 6, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !676, file: !1, line: 7876, column: 6)
!9343 = !DILocation(line: 7876, column: 14, scope: !9342)
!9344 = !DILocation(line: 7876, column: 28, scope: !9342)
!9345 = !DILocation(line: 7877, column: 6, scope: !9342)
!9346 = !DILocation(line: 7877, column: 14, scope: !9342)
!9347 = !DILocation(line: 7877, column: 37, scope: !9342)
!9348 = !DILocation(line: 7877, column: 45, scope: !9342)
!9349 = !DILocation(line: 7877, column: 35, scope: !9342)
!9350 = !DILocation(line: 7876, column: 6, scope: !9351)
!9351 = !DILexicalBlockFile(scope: !676, file: !1, discriminator: 1)
!9352 = !DILocation(line: 7878, column: 11, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9342, file: !1, line: 7877, column: 66)
!9354 = !DILocation(line: 7878, column: 19, scope: !9353)
!9355 = !DILocation(line: 7879, column: 9, scope: !9353)
!9356 = !DILocation(line: 7879, column: 17, scope: !9353)
!9357 = !DILocation(line: 7879, column: 7, scope: !9353)
!9358 = !DILocation(line: 7878, column: 9, scope: !9353)
!9359 = !DILocation(line: 7880, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9353, file: !1, line: 7880, column: 7)
!9361 = !DILocation(line: 7880, column: 15, scope: !9360)
!9362 = !DILocation(line: 7880, column: 13, scope: !9360)
!9363 = !DILocation(line: 7880, column: 7, scope: !9353)
!9364 = !DILocation(line: 7881, column: 12, scope: !9360)
!9365 = !DILocation(line: 7881, column: 10, scope: !9360)
!9366 = !DILocation(line: 7881, column: 4, scope: !9360)
!9367 = !DILocation(line: 7882, column: 10, scope: !9353)
!9368 = !DILocation(line: 7882, column: 18, scope: !9353)
!9369 = !DILocation(line: 7883, column: 9, scope: !9353)
!9370 = !DILocation(line: 7883, column: 17, scope: !9353)
!9371 = !DILocation(line: 7883, column: 7, scope: !9353)
!9372 = !DILocation(line: 7883, column: 39, scope: !9353)
!9373 = !DILocation(line: 7883, column: 42, scope: !9353)
!9374 = !DILocation(line: 7882, column: 3, scope: !9353)
!9375 = !DILocation(line: 7884, column: 35, scope: !9353)
!9376 = !DILocation(line: 7884, column: 3, scope: !9353)
!9377 = !DILocation(line: 7884, column: 11, scope: !9353)
!9378 = !DILocation(line: 7884, column: 32, scope: !9353)
!9379 = !DILocation(line: 7885, column: 12, scope: !9353)
!9380 = !DILocation(line: 7885, column: 9, scope: !9353)
!9381 = !DILocation(line: 7886, column: 11, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9353, file: !1, line: 7886, column: 11)
!9383 = !DILocation(line: 7886, column: 19, scope: !9382)
!9384 = !DILocation(line: 7887, column: 10, scope: !9382)
!9385 = !DILocation(line: 7887, column: 18, scope: !9382)
!9386 = !DILocation(line: 7887, column: 7, scope: !9382)
!9387 = !DILocation(line: 7886, column: 11, scope: !9353)
!9388 = !DILocation(line: 7890, column: 4, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9382, file: !1, line: 7887, column: 39)
!9390 = !DILocation(line: 7890, column: 12, scope: !9389)
!9391 = !DILocation(line: 7890, column: 22, scope: !9389)
!9392 = !DILocation(line: 7891, column: 4, scope: !9389)
!9393 = !DILocation(line: 7891, column: 12, scope: !9389)
!9394 = !DILocation(line: 7891, column: 24, scope: !9389)
!9395 = !DILocation(line: 7893, column: 4, scope: !9389)
!9396 = !DILocation(line: 7893, column: 12, scope: !9389)
!9397 = !DILocation(line: 7893, column: 24, scope: !9389)
!9398 = !DILocation(line: 7894, column: 3, scope: !9389)
!9399 = !DILocation(line: 7895, column: 2, scope: !9353)
!9400 = !DILocation(line: 7896, column: 19, scope: !676)
!9401 = !DILocation(line: 7896, column: 2, scope: !676)
!9402 = !DILocation(line: 7897, column: 1, scope: !676)
!9403 = !DILocalVariable(name: "src", arg: 1, scope: !681, file: !1, line: 5134, type: !76)
!9404 = !DILocation(line: 5134, column: 29, scope: !681)
!9405 = !DILocation(line: 5136, column: 21, scope: !681)
!9406 = !DILocation(line: 5136, column: 26, scope: !681)
!9407 = !DILocation(line: 5136, column: 10, scope: !681)
!9408 = !DILocation(line: 5136, column: 2, scope: !681)
!9409 = !DILocalVariable(name: "a", arg: 1, scope: !685, file: !1, line: 6962, type: !367)
!9410 = !DILocation(line: 6962, column: 47, scope: !685)
!9411 = !DILocalVariable(name: "vdd", arg: 2, scope: !685, file: !1, line: 6962, type: !688)
!9412 = !DILocation(line: 6962, column: 62, scope: !685)
!9413 = !DILocalVariable(name: "max_depth", arg: 3, scope: !685, file: !1, line: 6963, type: !31)
!9414 = !DILocation(line: 6963, column: 9, scope: !685)
!9415 = !DILocalVariable(name: "i", scope: !685, file: !1, line: 6965, type: !31)
!9416 = !DILocation(line: 6965, column: 6, scope: !685)
!9417 = !DILocation(line: 6967, column: 19, scope: !685)
!9418 = !DILocation(line: 6967, column: 2, scope: !685)
!9419 = !DILocation(line: 6967, column: 7, scope: !685)
!9420 = !DILocation(line: 6967, column: 17, scope: !685)
!9421 = !DILocation(line: 6968, column: 48, scope: !685)
!9422 = !DILocation(line: 6968, column: 53, scope: !685)
!9423 = !DILocation(line: 6968, column: 46, scope: !685)
!9424 = !DILocation(line: 6968, column: 17, scope: !685)
!9425 = !DILocation(line: 6968, column: 2, scope: !685)
!9426 = !DILocation(line: 6968, column: 7, scope: !685)
!9427 = !DILocation(line: 6968, column: 15, scope: !685)
!9428 = !DILocation(line: 6969, column: 6, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !685, file: !1, line: 6969, column: 6)
!9430 = !DILocation(line: 6969, column: 11, scope: !9429)
!9431 = !DILocation(line: 6969, column: 19, scope: !9429)
!9432 = !DILocation(line: 6969, column: 6, scope: !685)
!9433 = !DILocation(line: 6970, column: 22, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9429, file: !1, line: 6969, column: 28)
!9435 = !DILocation(line: 6970, column: 25, scope: !9434)
!9436 = !DILocation(line: 6970, column: 3, scope: !9434)
!9437 = !DILocation(line: 6972, column: 3, scope: !9434)
!9438 = !DILocation(line: 6974, column: 9, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !685, file: !1, line: 6974, column: 2)
!9440 = !DILocation(line: 6974, column: 7, scope: !9439)
!9441 = !DILocation(line: 6974, column: 14, scope: !9442)
!9442 = !DILexicalBlockFile(scope: !9443, file: !1, discriminator: 1)
!9443 = distinct !DILexicalBlock(scope: !9439, file: !1, line: 6974, column: 2)
!9444 = !DILocation(line: 6974, column: 18, scope: !9442)
!9445 = !DILocation(line: 6974, column: 23, scope: !9442)
!9446 = !DILocation(line: 6974, column: 16, scope: !9442)
!9447 = !DILocation(line: 6974, column: 2, scope: !9442)
!9448 = !DILocation(line: 6975, column: 16, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9443, file: !1, line: 6974, column: 39)
!9450 = !DILocation(line: 6975, column: 3, scope: !9449)
!9451 = !DILocation(line: 6975, column: 8, scope: !9449)
!9452 = !DILocation(line: 6975, column: 19, scope: !9449)
!9453 = !DILocation(line: 6975, column: 25, scope: !9449)
!9454 = !DILocation(line: 6976, column: 41, scope: !9449)
!9455 = !DILocation(line: 6976, column: 28, scope: !9449)
!9456 = !DILocation(line: 6976, column: 33, scope: !9449)
!9457 = !DILocation(line: 6976, column: 44, scope: !9449)
!9458 = !DILocation(line: 6976, column: 16, scope: !9449)
!9459 = !DILocation(line: 6976, column: 3, scope: !9449)
!9460 = !DILocation(line: 6976, column: 8, scope: !9449)
!9461 = !DILocation(line: 6976, column: 19, scope: !9449)
!9462 = !DILocation(line: 6976, column: 24, scope: !9449)
!9463 = !DILocation(line: 6977, column: 16, scope: !9449)
!9464 = !DILocation(line: 6977, column: 3, scope: !9449)
!9465 = !DILocation(line: 6977, column: 8, scope: !9449)
!9466 = !DILocation(line: 6977, column: 19, scope: !9449)
!9467 = !DILocation(line: 6977, column: 26, scope: !9449)
!9468 = !DILocation(line: 6978, column: 16, scope: !9449)
!9469 = !DILocation(line: 6978, column: 3, scope: !9449)
!9470 = !DILocation(line: 6978, column: 8, scope: !9449)
!9471 = !DILocation(line: 6978, column: 19, scope: !9449)
!9472 = !DILocation(line: 6978, column: 23, scope: !9449)
!9473 = !DILocation(line: 6979, column: 2, scope: !9449)
!9474 = !DILocation(line: 6974, column: 35, scope: !9475)
!9475 = !DILexicalBlockFile(scope: !9443, file: !1, discriminator: 2)
!9476 = !DILocation(line: 6974, column: 2, scope: !9475)
!9477 = !DILocation(line: 6980, column: 2, scope: !685)
!9478 = !DILocation(line: 6981, column: 1, scope: !685)
!9479 = !DILocalVariable(name: "vdd", arg: 1, scope: !689, file: !1, line: 6622, type: !688)
!9480 = !DILocation(line: 6622, column: 33, scope: !689)
!9481 = !DILocalVariable(name: "rootent", arg: 2, scope: !689, file: !1, line: 6622, type: !76)
!9482 = !DILocation(line: 6622, column: 53, scope: !689)
!9483 = !DILocalVariable(name: "depth", arg: 3, scope: !689, file: !1, line: 6622, type: !31)
!9484 = !DILocation(line: 6622, column: 66, scope: !689)
!9485 = !DILocalVariable(name: "np", scope: !689, file: !1, line: 6624, type: !76)
!9486 = !DILocation(line: 6624, column: 17, scope: !689)
!9487 = !DILocation(line: 6626, column: 6, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !689, file: !1, line: 6626, column: 6)
!9489 = !DILocation(line: 6626, column: 14, scope: !9488)
!9490 = !DILocation(line: 6626, column: 6, scope: !689)
!9491 = !DILocation(line: 6627, column: 13, scope: !9488)
!9492 = !DILocation(line: 6627, column: 18, scope: !9488)
!9493 = !DILocation(line: 6627, column: 11, scope: !9488)
!9494 = !DILocation(line: 6627, column: 3, scope: !9488)
!9495 = !DILocation(line: 6628, column: 7, scope: !689)
!9496 = !DILocation(line: 6628, column: 5, scope: !689)
!9497 = !DILocation(line: 6629, column: 2, scope: !689)
!9498 = !DILocation(line: 6631, column: 39, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !689, file: !1, line: 6629, column: 5)
!9500 = !DILocation(line: 6631, column: 26, scope: !9499)
!9501 = !DILocation(line: 6631, column: 31, scope: !9499)
!9502 = !DILocation(line: 6631, column: 48, scope: !9499)
!9503 = !DILocation(line: 6631, column: 3, scope: !9499)
!9504 = !DILocation(line: 6633, column: 7, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9499, file: !1, line: 6633, column: 7)
!9506 = !DILocation(line: 6633, column: 11, scope: !9505)
!9507 = !DILocation(line: 6633, column: 19, scope: !9505)
!9508 = !DILocation(line: 6633, column: 25, scope: !9505)
!9509 = !DILocation(line: 6633, column: 33, scope: !9505)
!9510 = !DILocation(line: 6633, column: 36, scope: !9511)
!9511 = !DILexicalBlockFile(scope: !9505, file: !1, discriminator: 1)
!9512 = !DILocation(line: 6633, column: 42, scope: !9511)
!9513 = !DILocation(line: 6633, column: 48, scope: !9511)
!9514 = !DILocation(line: 6633, column: 53, scope: !9511)
!9515 = !DILocation(line: 6633, column: 46, scope: !9511)
!9516 = !DILocation(line: 6633, column: 7, scope: !9511)
!9517 = !DILocation(line: 6635, column: 9, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9505, file: !1, line: 6633, column: 64)
!9519 = !DILocation(line: 6635, column: 13, scope: !9518)
!9520 = !DILocation(line: 6635, column: 21, scope: !9518)
!9521 = !DILocation(line: 6635, column: 7, scope: !9518)
!9522 = !DILocation(line: 6636, column: 9, scope: !9518)
!9523 = !DILocation(line: 6637, column: 4, scope: !9518)
!9524 = !DILocation(line: 6639, column: 3, scope: !9499)
!9525 = !DILocation(line: 6639, column: 10, scope: !9526)
!9526 = !DILexicalBlockFile(scope: !9499, file: !1, discriminator: 1)
!9527 = !DILocation(line: 6639, column: 16, scope: !9526)
!9528 = !DILocation(line: 6639, column: 13, scope: !9526)
!9529 = !DILocation(line: 6639, column: 3, scope: !9526)
!9530 = !DILocation(line: 6640, column: 8, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !1, line: 6640, column: 8)
!9532 = distinct !DILexicalBlock(scope: !9499, file: !1, line: 6639, column: 25)
!9533 = !DILocation(line: 6640, column: 12, scope: !9531)
!9534 = !DILocation(line: 6640, column: 19, scope: !9531)
!9535 = !DILocation(line: 6640, column: 8, scope: !9532)
!9536 = !DILocation(line: 6642, column: 10, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9531, file: !1, line: 6640, column: 28)
!9538 = !DILocation(line: 6642, column: 14, scope: !9537)
!9539 = !DILocation(line: 6642, column: 8, scope: !9537)
!9540 = !DILocation(line: 6643, column: 10, scope: !9537)
!9541 = !DILocation(line: 6644, column: 4, scope: !9537)
!9542 = !DILocation(line: 6645, column: 10, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9531, file: !1, line: 6644, column: 11)
!9544 = !DILocation(line: 6645, column: 14, scope: !9543)
!9545 = !DILocation(line: 6645, column: 8, scope: !9543)
!9546 = !DILocation(line: 6646, column: 5, scope: !9543)
!9547 = !DILocation(line: 6639, column: 3, scope: !9548)
!9548 = !DILexicalBlockFile(scope: !9499, file: !1, discriminator: 2)
!9549 = !DILocation(line: 6649, column: 2, scope: !9499)
!9550 = !DILocation(line: 6649, column: 11, scope: !9551)
!9551 = !DILexicalBlockFile(scope: !689, file: !1, discriminator: 1)
!9552 = !DILocation(line: 6649, column: 17, scope: !9551)
!9553 = !DILocation(line: 6649, column: 14, scope: !9551)
!9554 = !DILocation(line: 6649, column: 2, scope: !9551)
!9555 = !DILocation(line: 6651, column: 2, scope: !689)
!9556 = !DILocalVariable(name: "a", arg: 1, scope: !695, file: !1, line: 6740, type: !367)
!9557 = !DILocation(line: 6740, column: 38, scope: !695)
!9558 = !DILocalVariable(name: "iso9660", scope: !695, file: !1, line: 6742, type: !530)
!9559 = !DILocation(line: 6742, column: 18, scope: !695)
!9560 = !DILocation(line: 6742, column: 28, scope: !695)
!9561 = !DILocation(line: 6742, column: 31, scope: !695)
!9562 = !DILocalVariable(name: "pt", scope: !695, file: !1, line: 6743, type: !199)
!9563 = !DILocation(line: 6743, column: 21, scope: !695)
!9564 = !DILocalVariable(name: "rootent", scope: !695, file: !1, line: 6744, type: !76)
!9565 = !DILocation(line: 6744, column: 17, scope: !695)
!9566 = !DILocalVariable(name: "rr_moved", scope: !695, file: !1, line: 6744, type: !76)
!9567 = !DILocation(line: 6744, column: 27, scope: !695)
!9568 = !DILocalVariable(name: "np", scope: !695, file: !1, line: 6745, type: !76)
!9569 = !DILocation(line: 6745, column: 17, scope: !695)
!9570 = !DILocalVariable(name: "last", scope: !695, file: !1, line: 6745, type: !76)
!9571 = !DILocation(line: 6745, column: 22, scope: !695)
!9572 = !DILocalVariable(name: "r", scope: !695, file: !1, line: 6746, type: !31)
!9573 = !DILocation(line: 6746, column: 6, scope: !695)
!9574 = !DILocation(line: 6748, column: 9, scope: !695)
!9575 = !DILocation(line: 6748, column: 18, scope: !695)
!9576 = !DILocation(line: 6748, column: 26, scope: !695)
!9577 = !DILocation(line: 6748, column: 5, scope: !695)
!9578 = !DILocation(line: 6750, column: 6, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !695, file: !1, line: 6750, column: 6)
!9580 = !DILocation(line: 6750, column: 10, scope: !9579)
!9581 = !DILocation(line: 6750, column: 14, scope: !9579)
!9582 = !DILocation(line: 6750, column: 6, scope: !695)
!9583 = !DILocation(line: 6751, column: 3, scope: !9579)
!9584 = !DILocation(line: 6753, column: 12, scope: !695)
!9585 = !DILocation(line: 6753, column: 21, scope: !695)
!9586 = !DILocation(line: 6753, column: 29, scope: !695)
!9587 = !DILocation(line: 6753, column: 10, scope: !695)
!9588 = !DILocation(line: 6756, column: 31, scope: !695)
!9589 = !DILocation(line: 6756, column: 13, scope: !695)
!9590 = !DILocation(line: 6756, column: 11, scope: !695)
!9591 = !DILocation(line: 6757, column: 6, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !695, file: !1, line: 6757, column: 6)
!9593 = !DILocation(line: 6757, column: 15, scope: !9592)
!9594 = !DILocation(line: 6757, column: 23, scope: !9592)
!9595 = !DILocation(line: 6758, column: 6, scope: !9592)
!9596 = !DILocation(line: 6758, column: 18, scope: !9592)
!9597 = !DILocation(line: 6758, column: 27, scope: !9592)
!9598 = !DILocation(line: 6758, column: 36, scope: !9592)
!9599 = !DILocation(line: 6758, column: 15, scope: !9592)
!9600 = !DILocation(line: 6757, column: 6, scope: !9601)
!9601 = !DILexicalBlockFile(scope: !695, file: !1, discriminator: 1)
!9602 = !DILocation(line: 6764, column: 23, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9592, file: !1, line: 6758, column: 43)
!9604 = !DILocation(line: 6764, column: 32, scope: !9603)
!9605 = !DILocation(line: 6764, column: 3, scope: !9603)
!9606 = !DILocation(line: 6767, column: 25, scope: !9603)
!9607 = !DILocation(line: 6767, column: 34, scope: !9603)
!9608 = !DILocation(line: 6767, column: 3, scope: !9603)
!9609 = !DILocation(line: 6768, column: 2, scope: !9603)
!9610 = !DILocation(line: 6774, column: 7, scope: !695)
!9611 = !DILocation(line: 6774, column: 11, scope: !695)
!9612 = !DILocation(line: 6774, column: 5, scope: !695)
!9613 = !DILocation(line: 6775, column: 2, scope: !695)
!9614 = !DILocation(line: 6775, column: 9, scope: !9601)
!9615 = !DILocation(line: 6775, column: 12, scope: !9601)
!9616 = !DILocation(line: 6775, column: 2, scope: !9601)
!9617 = !DILocation(line: 6776, column: 32, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !695, file: !1, line: 6775, column: 21)
!9619 = !DILocation(line: 6776, column: 10, scope: !9618)
!9620 = !DILocation(line: 6776, column: 8, scope: !9618)
!9621 = !DILocation(line: 6777, column: 3, scope: !9618)
!9622 = !DILocation(line: 6777, column: 10, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !9624, file: !1, discriminator: 1)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !1, line: 6777, column: 3)
!9625 = distinct !DILexicalBlock(scope: !9618, file: !1, line: 6777, column: 3)
!9626 = !DILocation(line: 6777, column: 13, scope: !9623)
!9627 = !DILocation(line: 6777, column: 3, scope: !9623)
!9628 = !DILocalVariable(name: "mvent", scope: !9629, file: !1, line: 6778, type: !76)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !1, line: 6777, column: 39)
!9630 = !DILocation(line: 6778, column: 19, scope: !9629)
!9631 = !DILocalVariable(name: "newent", scope: !9629, file: !1, line: 6779, type: !76)
!9632 = !DILocation(line: 6779, column: 19, scope: !9629)
!9633 = !DILocation(line: 6781, column: 9, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9629, file: !1, line: 6781, column: 8)
!9635 = !DILocation(line: 6781, column: 13, scope: !9634)
!9636 = !DILocation(line: 6781, column: 8, scope: !9629)
!9637 = !DILocation(line: 6782, column: 5, scope: !9634)
!9638 = !DILocation(line: 6783, column: 17, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9629, file: !1, line: 6783, column: 4)
!9640 = !DILocation(line: 6783, column: 21, scope: !9639)
!9641 = !DILocation(line: 6783, column: 29, scope: !9639)
!9642 = !DILocation(line: 6783, column: 15, scope: !9639)
!9643 = !DILocation(line: 6783, column: 9, scope: !9639)
!9644 = !DILocation(line: 6784, column: 8, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9639, file: !1, line: 6783, column: 4)
!9646 = !DILocation(line: 6784, column: 14, scope: !9645)
!9647 = !DILocation(line: 6783, column: 4, scope: !9648)
!9648 = !DILexicalBlockFile(scope: !9639, file: !1, discriminator: 1)
!9649 = !DILocation(line: 6785, column: 28, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9645, file: !1, line: 6784, column: 46)
!9651 = !DILocation(line: 6786, column: 9, scope: !9650)
!9652 = !DILocation(line: 6785, column: 9, scope: !9650)
!9653 = !DILocation(line: 6785, column: 7, scope: !9650)
!9654 = !DILocation(line: 6787, column: 9, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9650, file: !1, line: 6787, column: 9)
!9656 = !DILocation(line: 6787, column: 11, scope: !9655)
!9657 = !DILocation(line: 6787, column: 9, scope: !9650)
!9658 = !DILocation(line: 6788, column: 14, scope: !9655)
!9659 = !DILocation(line: 6788, column: 6, scope: !9655)
!9660 = !DILocation(line: 6789, column: 27, scope: !9650)
!9661 = !DILocation(line: 6789, column: 36, scope: !9650)
!9662 = !DILocation(line: 6790, column: 9, scope: !9650)
!9663 = !DILocation(line: 6789, column: 5, scope: !9650)
!9664 = !DILocation(line: 6791, column: 4, scope: !9650)
!9665 = !DILocation(line: 6784, column: 31, scope: !9666)
!9666 = !DILexicalBlockFile(scope: !9645, file: !1, discriminator: 1)
!9667 = !DILocation(line: 6784, column: 38, scope: !9666)
!9668 = !DILocation(line: 6784, column: 29, scope: !9666)
!9669 = !DILocation(line: 6783, column: 4, scope: !9670)
!9670 = !DILexicalBlockFile(scope: !9645, file: !1, discriminator: 2)
!9671 = !DILocation(line: 6792, column: 3, scope: !9629)
!9672 = !DILocation(line: 6777, column: 27, scope: !9673)
!9673 = !DILexicalBlockFile(scope: !9624, file: !1, discriminator: 2)
!9674 = !DILocation(line: 6777, column: 31, scope: !9673)
!9675 = !DILocation(line: 6777, column: 25, scope: !9673)
!9676 = !DILocation(line: 6777, column: 3, scope: !9673)
!9677 = !DILocation(line: 6796, column: 8, scope: !9618)
!9678 = !DILocation(line: 6796, column: 14, scope: !9618)
!9679 = !DILocation(line: 6796, column: 6, scope: !9618)
!9680 = !DILocation(line: 6775, column: 2, scope: !9681)
!9681 = !DILexicalBlockFile(scope: !695, file: !1, discriminator: 2)
!9682 = !DILocation(line: 6799, column: 2, scope: !695)
!9683 = !DILocation(line: 6800, column: 1, scope: !695)
!9684 = !DILocalVariable(name: "iso9660", arg: 1, scope: !706, file: !1, line: 5043, type: !530)
!9685 = !DILocation(line: 5043, column: 48, scope: !706)
!9686 = !DILocalVariable(name: "n", scope: !706, file: !1, line: 5045, type: !85)
!9687 = !DILocation(line: 5045, column: 26, scope: !706)
!9688 = !DILocalVariable(name: "hl", scope: !706, file: !1, line: 5046, type: !533)
!9689 = !DILocation(line: 5046, column: 19, scope: !706)
!9690 = !DILocalVariable(name: "target", scope: !706, file: !1, line: 5047, type: !7)
!9691 = !DILocation(line: 5047, column: 18, scope: !706)
!9692 = !DILocalVariable(name: "nf", scope: !706, file: !1, line: 5047, type: !7)
!9693 = !DILocation(line: 5047, column: 27, scope: !706)
!9694 = !DILocation(line: 5049, column: 2, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !706, file: !1, line: 5049, column: 2)
!9696 = !DILocation(line: 5049, column: 2, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !9698, file: !1, discriminator: 1)
!9698 = distinct !DILexicalBlock(scope: !9695, file: !1, line: 5049, column: 2)
!9699 = !DILocation(line: 5050, column: 27, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9698, file: !1, line: 5049, column: 58)
!9701 = !DILocation(line: 5050, column: 8, scope: !9700)
!9702 = !DILocation(line: 5050, column: 6, scope: !9700)
!9703 = !DILocation(line: 5053, column: 12, scope: !9700)
!9704 = !DILocation(line: 5053, column: 16, scope: !9700)
!9705 = !DILocation(line: 5053, column: 26, scope: !9700)
!9706 = !DILocation(line: 5053, column: 10, scope: !9700)
!9707 = !DILocation(line: 5054, column: 27, scope: !9700)
!9708 = !DILocation(line: 5054, column: 35, scope: !9700)
!9709 = !DILocation(line: 5054, column: 42, scope: !9700)
!9710 = !DILocation(line: 5054, column: 46, scope: !9700)
!9711 = !DILocation(line: 5054, column: 3, scope: !9700)
!9712 = !DILocation(line: 5056, column: 13, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9700, file: !1, line: 5056, column: 3)
!9714 = !DILocation(line: 5056, column: 21, scope: !9713)
!9715 = !DILocation(line: 5056, column: 11, scope: !9713)
!9716 = !DILocation(line: 5056, column: 8, scope: !9713)
!9717 = !DILocation(line: 5057, column: 7, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9713, file: !1, line: 5056, column: 3)
!9719 = !DILocation(line: 5057, column: 10, scope: !9718)
!9720 = !DILocation(line: 5056, column: 3, scope: !9721)
!9721 = !DILexicalBlockFile(scope: !9713, file: !1, discriminator: 1)
!9722 = !DILocation(line: 5058, column: 26, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9718, file: !1, line: 5057, column: 36)
!9724 = !DILocation(line: 5058, column: 4, scope: !9723)
!9725 = !DILocation(line: 5058, column: 8, scope: !9723)
!9726 = !DILocation(line: 5058, column: 24, scope: !9723)
!9727 = !DILocation(line: 5059, column: 28, scope: !9723)
!9728 = !DILocation(line: 5059, column: 32, scope: !9723)
!9729 = !DILocation(line: 5059, column: 39, scope: !9723)
!9730 = !DILocation(line: 5059, column: 43, scope: !9723)
!9731 = !DILocation(line: 5059, column: 4, scope: !9723)
!9732 = !DILocation(line: 5060, column: 3, scope: !9723)
!9733 = !DILocation(line: 5057, column: 24, scope: !9734)
!9734 = !DILexicalBlockFile(scope: !9718, file: !1, discriminator: 1)
!9735 = !DILocation(line: 5057, column: 28, scope: !9734)
!9736 = !DILocation(line: 5057, column: 22, scope: !9734)
!9737 = !DILocation(line: 5056, column: 3, scope: !9738)
!9738 = !DILexicalBlockFile(scope: !9718, file: !1, discriminator: 2)
!9739 = !DILocation(line: 5061, column: 2, scope: !9700)
!9740 = !DILocation(line: 5049, column: 2, scope: !9741)
!9741 = !DILexicalBlockFile(scope: !9698, file: !1, discriminator: 2)
!9742 = !DILocation(line: 5062, column: 1, scope: !706)
!9743 = !DILocalVariable(name: "a", arg: 1, scope: !709, file: !1, line: 6549, type: !367)
!9744 = !DILocation(line: 6549, column: 44, scope: !709)
!9745 = !DILocalVariable(name: "vdd", arg: 2, scope: !709, file: !1, line: 6549, type: !688)
!9746 = !DILocation(line: 6549, column: 59, scope: !709)
!9747 = !DILocalVariable(name: "iso9660", scope: !709, file: !1, line: 6551, type: !530)
!9748 = !DILocation(line: 6551, column: 18, scope: !709)
!9749 = !DILocation(line: 6551, column: 28, scope: !709)
!9750 = !DILocation(line: 6551, column: 31, scope: !709)
!9751 = !DILocalVariable(name: "np", scope: !709, file: !1, line: 6552, type: !76)
!9752 = !DILocation(line: 6552, column: 17, scope: !709)
!9753 = !DILocalVariable(name: "idr", scope: !709, file: !1, line: 6553, type: !716)
!9754 = !DILocation(line: 6553, column: 13, scope: !709)
!9755 = !DILocalVariable(name: "depth", scope: !709, file: !1, line: 6554, type: !31)
!9756 = !DILocation(line: 6554, column: 6, scope: !709)
!9757 = !DILocalVariable(name: "r", scope: !709, file: !1, line: 6555, type: !31)
!9758 = !DILocation(line: 6555, column: 6, scope: !709)
!9759 = !DILocalVariable(name: "genid", scope: !709, file: !1, line: 6556, type: !9760)
!9760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64, align: 64)
!9761 = !DILocation(line: 6556, column: 8, scope: !709)
!9762 = !DILocation(line: 6558, column: 11, scope: !709)
!9763 = !DILocation(line: 6558, column: 20, scope: !709)
!9764 = !DILocation(line: 6558, column: 2, scope: !709)
!9765 = !DILocation(line: 6559, column: 7, scope: !709)
!9766 = !DILocation(line: 6559, column: 12, scope: !709)
!9767 = !DILocation(line: 6559, column: 5, scope: !709)
!9768 = !DILocation(line: 6560, column: 8, scope: !709)
!9769 = !DILocation(line: 6561, column: 6, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !709, file: !1, line: 6561, column: 6)
!9771 = !DILocation(line: 6561, column: 11, scope: !9770)
!9772 = !DILocation(line: 6561, column: 20, scope: !9770)
!9773 = !DILocation(line: 6561, column: 6, scope: !709)
!9774 = !DILocation(line: 6562, column: 9, scope: !9770)
!9775 = !DILocation(line: 6562, column: 3, scope: !9770)
!9776 = !DILocation(line: 6564, column: 9, scope: !9770)
!9777 = !DILocation(line: 6565, column: 2, scope: !709)
!9778 = !DILocation(line: 6566, column: 7, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !1, line: 6566, column: 7)
!9780 = distinct !DILexicalBlock(scope: !709, file: !1, line: 6565, column: 5)
!9781 = !DILocation(line: 6566, column: 11, scope: !9779)
!9782 = !DILocation(line: 6566, column: 19, scope: !9779)
!9783 = !DILocation(line: 6567, column: 35, scope: !9779)
!9784 = !DILocation(line: 6567, column: 39, scope: !9779)
!9785 = !DILocation(line: 6567, column: 45, scope: !9779)
!9786 = !DILocation(line: 6567, column: 8, scope: !9779)
!9787 = !DILocation(line: 6566, column: 7, scope: !9788)
!9788 = !DILexicalBlockFile(scope: !9780, file: !1, discriminator: 1)
!9789 = !DILocation(line: 6569, column: 28, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9779, file: !1, line: 6567, column: 53)
!9791 = !DILocation(line: 6569, column: 32, scope: !9790)
!9792 = !DILocation(line: 6569, column: 38, scope: !9790)
!9793 = !DILocation(line: 6570, column: 8, scope: !9790)
!9794 = !DILocation(line: 6570, column: 17, scope: !9790)
!9795 = !DILocation(line: 6569, column: 4, scope: !9790)
!9796 = !DILocation(line: 6571, column: 28, scope: !9790)
!9797 = !DILocation(line: 6571, column: 32, scope: !9790)
!9798 = !DILocation(line: 6571, column: 38, scope: !9790)
!9799 = !DILocation(line: 6572, column: 8, scope: !9790)
!9800 = !DILocation(line: 6572, column: 17, scope: !9790)
!9801 = !DILocation(line: 6571, column: 4, scope: !9790)
!9802 = !DILocation(line: 6573, column: 28, scope: !9790)
!9803 = !DILocation(line: 6573, column: 32, scope: !9790)
!9804 = !DILocation(line: 6573, column: 38, scope: !9790)
!9805 = !DILocation(line: 6574, column: 8, scope: !9790)
!9806 = !DILocation(line: 6574, column: 17, scope: !9790)
!9807 = !DILocation(line: 6573, column: 4, scope: !9790)
!9808 = !DILocation(line: 6575, column: 3, scope: !9790)
!9809 = !DILocation(line: 6576, column: 7, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9780, file: !1, line: 6576, column: 7)
!9811 = !DILocation(line: 6576, column: 11, scope: !9810)
!9812 = !DILocation(line: 6576, column: 20, scope: !9810)
!9813 = !DILocation(line: 6576, column: 26, scope: !9810)
!9814 = !DILocation(line: 6576, column: 7, scope: !9780)
!9815 = !DILocation(line: 6577, column: 8, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !1, line: 6577, column: 8)
!9817 = distinct !DILexicalBlock(scope: !9810, file: !1, line: 6576, column: 35)
!9818 = !DILocation(line: 6577, column: 13, scope: !9816)
!9819 = !DILocation(line: 6577, column: 22, scope: !9816)
!9820 = !DILocation(line: 6577, column: 36, scope: !9816)
!9821 = !DILocation(line: 6578, column: 9, scope: !9816)
!9822 = !DILocation(line: 6578, column: 18, scope: !9816)
!9823 = !DILocation(line: 6578, column: 22, scope: !9816)
!9824 = !DILocation(line: 6578, column: 25, scope: !9816)
!9825 = !DILocation(line: 6578, column: 28, scope: !9826)
!9826 = !DILexicalBlockFile(scope: !9816, file: !1, discriminator: 1)
!9827 = !DILocation(line: 6578, column: 34, scope: !9826)
!9828 = !DILocation(line: 6578, column: 41, scope: !9826)
!9829 = !DILocation(line: 6578, column: 46, scope: !9826)
!9830 = !DILocation(line: 6578, column: 38, scope: !9826)
!9831 = !DILocation(line: 6577, column: 8, scope: !9832)
!9832 = !DILexicalBlockFile(scope: !9817, file: !1, discriminator: 1)
!9833 = !DILocation(line: 6579, column: 9, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !1, line: 6579, column: 9)
!9835 = distinct !DILexicalBlock(scope: !9816, file: !1, line: 6578, column: 57)
!9836 = !DILocation(line: 6579, column: 13, scope: !9834)
!9837 = !DILocation(line: 6579, column: 22, scope: !9834)
!9838 = !DILocation(line: 6579, column: 26, scope: !9834)
!9839 = !DILocation(line: 6579, column: 9, scope: !9835)
!9840 = !DILocation(line: 6580, column: 38, scope: !9834)
!9841 = !DILocation(line: 6580, column: 6, scope: !9834)
!9842 = !DILocation(line: 6580, column: 15, scope: !9834)
!9843 = !DILocation(line: 6580, column: 36, scope: !9834)
!9844 = !DILocation(line: 6581, column: 4, scope: !9835)
!9845 = !DILocation(line: 6583, column: 9, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9816, file: !1, line: 6581, column: 11)
!9847 = !DILocation(line: 6583, column: 15, scope: !9846)
!9848 = !DILocation(line: 6583, column: 18, scope: !9846)
!9849 = !DILocation(line: 6583, column: 7, scope: !9846)
!9850 = !DILocation(line: 6584, column: 9, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9846, file: !1, line: 6584, column: 9)
!9852 = !DILocation(line: 6584, column: 11, scope: !9851)
!9853 = !DILocation(line: 6584, column: 9, scope: !9846)
!9854 = !DILocation(line: 6585, column: 6, scope: !9851)
!9855 = !DILocation(line: 6586, column: 34, scope: !9846)
!9856 = !DILocation(line: 6586, column: 37, scope: !9846)
!9857 = !DILocation(line: 6586, column: 9, scope: !9846)
!9858 = !DILocation(line: 6586, column: 7, scope: !9846)
!9859 = !DILocation(line: 6587, column: 9, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9846, file: !1, line: 6587, column: 9)
!9861 = !DILocation(line: 6587, column: 11, scope: !9860)
!9862 = !DILocation(line: 6587, column: 9, scope: !9846)
!9863 = !DILocation(line: 6588, column: 6, scope: !9860)
!9864 = !DILocation(line: 6590, column: 9, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9846, file: !1, line: 6590, column: 9)
!9866 = !DILocation(line: 6590, column: 13, scope: !9865)
!9867 = !DILocation(line: 6590, column: 21, scope: !9865)
!9868 = !DILocation(line: 6590, column: 27, scope: !9865)
!9869 = !DILocation(line: 6590, column: 35, scope: !9865)
!9870 = !DILocation(line: 6591, column: 9, scope: !9865)
!9871 = !DILocation(line: 6591, column: 15, scope: !9865)
!9872 = !DILocation(line: 6591, column: 21, scope: !9865)
!9873 = !DILocation(line: 6591, column: 26, scope: !9865)
!9874 = !DILocation(line: 6591, column: 19, scope: !9865)
!9875 = !DILocation(line: 6590, column: 9, scope: !9876)
!9876 = !DILexicalBlockFile(scope: !9846, file: !1, discriminator: 1)
!9877 = !DILocation(line: 6593, column: 11, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9865, file: !1, line: 6591, column: 37)
!9879 = !DILocation(line: 6593, column: 15, scope: !9878)
!9880 = !DILocation(line: 6593, column: 23, scope: !9878)
!9881 = !DILocation(line: 6593, column: 9, scope: !9878)
!9882 = !DILocation(line: 6594, column: 11, scope: !9878)
!9883 = !DILocation(line: 6595, column: 6, scope: !9878)
!9884 = !DILocation(line: 6598, column: 3, scope: !9817)
!9885 = !DILocation(line: 6599, column: 3, scope: !9780)
!9886 = !DILocation(line: 6599, column: 10, scope: !9788)
!9887 = !DILocation(line: 6599, column: 16, scope: !9788)
!9888 = !DILocation(line: 6599, column: 20, scope: !9788)
!9889 = !DILocation(line: 6599, column: 13, scope: !9788)
!9890 = !DILocation(line: 6599, column: 3, scope: !9788)
!9891 = !DILocation(line: 6600, column: 8, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !1, line: 6600, column: 8)
!9893 = distinct !DILexicalBlock(scope: !9780, file: !1, line: 6599, column: 28)
!9894 = !DILocation(line: 6600, column: 12, scope: !9892)
!9895 = !DILocation(line: 6600, column: 19, scope: !9892)
!9896 = !DILocation(line: 6600, column: 8, scope: !9893)
!9897 = !DILocation(line: 6602, column: 10, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9892, file: !1, line: 6600, column: 28)
!9899 = !DILocation(line: 6602, column: 14, scope: !9898)
!9900 = !DILocation(line: 6602, column: 8, scope: !9898)
!9901 = !DILocation(line: 6603, column: 10, scope: !9898)
!9902 = !DILocation(line: 6604, column: 4, scope: !9898)
!9903 = !DILocation(line: 6605, column: 10, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9892, file: !1, line: 6604, column: 11)
!9905 = !DILocation(line: 6605, column: 14, scope: !9904)
!9906 = !DILocation(line: 6605, column: 8, scope: !9904)
!9907 = !DILocation(line: 6606, column: 5, scope: !9904)
!9908 = !DILocation(line: 6599, column: 3, scope: !9909)
!9909 = !DILexicalBlockFile(scope: !9780, file: !1, discriminator: 2)
!9910 = !DILocation(line: 6609, column: 2, scope: !9780)
!9911 = !DILocation(line: 6609, column: 11, scope: !9912)
!9912 = !DILexicalBlockFile(scope: !709, file: !1, discriminator: 1)
!9913 = !DILocation(line: 6609, column: 17, scope: !9912)
!9914 = !DILocation(line: 6609, column: 21, scope: !9912)
!9915 = !DILocation(line: 6609, column: 14, scope: !9912)
!9916 = !DILocation(line: 6609, column: 2, scope: !9912)
!9917 = !DILocation(line: 6611, column: 4, scope: !709)
!9918 = !DILocation(line: 6611, column: 2, scope: !709)
!9919 = !DILocation(line: 6613, column: 2, scope: !709)
!9920 = !DILocation(line: 6615, column: 10, scope: !709)
!9921 = !DILocation(line: 6615, column: 2, scope: !709)
!9922 = !DILocalVariable(name: "a", arg: 1, scope: !779, file: !1, line: 6910, type: !367)
!9923 = !DILocation(line: 6910, column: 48, scope: !779)
!9924 = !DILocalVariable(name: "vdd", arg: 2, scope: !779, file: !1, line: 6910, type: !688)
!9925 = !DILocation(line: 6910, column: 63, scope: !779)
!9926 = !DILocalVariable(name: "depth", arg: 3, scope: !779, file: !1, line: 6911, type: !31)
!9927 = !DILocation(line: 6911, column: 9, scope: !779)
!9928 = !DILocalVariable(name: "dir_number", arg: 4, scope: !779, file: !1, line: 6911, type: !579)
!9929 = !DILocation(line: 6911, column: 21, scope: !779)
!9930 = !DILocalVariable(name: "np", scope: !779, file: !1, line: 6913, type: !76)
!9931 = !DILocation(line: 6913, column: 17, scope: !779)
!9932 = !DILocalVariable(name: "enttbl", scope: !779, file: !1, line: 6914, type: !97)
!9933 = !DILocation(line: 6914, column: 18, scope: !779)
!9934 = !DILocalVariable(name: "pt", scope: !779, file: !1, line: 6915, type: !199)
!9935 = !DILocation(line: 6915, column: 21, scope: !779)
!9936 = !DILocalVariable(name: "i", scope: !779, file: !1, line: 6916, type: !31)
!9937 = !DILocation(line: 6916, column: 6, scope: !779)
!9938 = !DILocation(line: 6918, column: 21, scope: !779)
!9939 = !DILocation(line: 6918, column: 8, scope: !779)
!9940 = !DILocation(line: 6918, column: 13, scope: !779)
!9941 = !DILocation(line: 6918, column: 5, scope: !779)
!9942 = !DILocation(line: 6919, column: 6, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !779, file: !1, line: 6919, column: 6)
!9944 = !DILocation(line: 6919, column: 10, scope: !9943)
!9945 = !DILocation(line: 6919, column: 14, scope: !9943)
!9946 = !DILocation(line: 6919, column: 6, scope: !779)
!9947 = !DILocation(line: 6920, column: 3, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9943, file: !1, line: 6919, column: 20)
!9949 = !DILocation(line: 6920, column: 7, scope: !9948)
!9950 = !DILocation(line: 6920, column: 14, scope: !9948)
!9951 = !DILocation(line: 6921, column: 3, scope: !9948)
!9952 = !DILocation(line: 6923, column: 18, scope: !779)
!9953 = !DILocation(line: 6923, column: 22, scope: !779)
!9954 = !DILocation(line: 6923, column: 26, scope: !779)
!9955 = !DILocation(line: 6923, column: 11, scope: !779)
!9956 = !DILocation(line: 6923, column: 9, scope: !779)
!9957 = !DILocation(line: 6924, column: 6, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !779, file: !1, line: 6924, column: 6)
!9959 = !DILocation(line: 6924, column: 13, scope: !9958)
!9960 = !DILocation(line: 6924, column: 6, scope: !779)
!9961 = !DILocation(line: 6925, column: 22, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !1, line: 6924, column: 22)
!9963 = !DILocation(line: 6925, column: 25, scope: !9962)
!9964 = !DILocation(line: 6925, column: 3, scope: !9962)
!9965 = !DILocation(line: 6927, column: 3, scope: !9962)
!9966 = !DILocation(line: 6929, column: 15, scope: !779)
!9967 = !DILocation(line: 6929, column: 2, scope: !779)
!9968 = !DILocation(line: 6929, column: 6, scope: !779)
!9969 = !DILocation(line: 6929, column: 13, scope: !779)
!9970 = !DILocation(line: 6930, column: 12, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !779, file: !1, line: 6930, column: 2)
!9972 = !DILocation(line: 6930, column: 16, scope: !9971)
!9973 = !DILocation(line: 6930, column: 10, scope: !9971)
!9974 = !DILocation(line: 6930, column: 7, scope: !9971)
!9975 = !DILocation(line: 6930, column: 23, scope: !9976)
!9976 = !DILexicalBlockFile(scope: !9977, file: !1, discriminator: 1)
!9977 = distinct !DILexicalBlock(scope: !9971, file: !1, line: 6930, column: 2)
!9978 = !DILocation(line: 6930, column: 26, scope: !9976)
!9979 = !DILocation(line: 6930, column: 2, scope: !9976)
!9980 = !DILocation(line: 6931, column: 16, scope: !9977)
!9981 = !DILocation(line: 6931, column: 11, scope: !9977)
!9982 = !DILocation(line: 6931, column: 14, scope: !9977)
!9983 = !DILocation(line: 6931, column: 3, scope: !9977)
!9984 = !DILocation(line: 6930, column: 40, scope: !9985)
!9985 = !DILexicalBlockFile(scope: !9977, file: !1, discriminator: 2)
!9986 = !DILocation(line: 6930, column: 44, scope: !9985)
!9987 = !DILocation(line: 6930, column: 38, scope: !9985)
!9988 = !DILocation(line: 6930, column: 2, scope: !9985)
!9989 = !DILocation(line: 6932, column: 11, scope: !779)
!9990 = !DILocation(line: 6932, column: 15, scope: !779)
!9991 = !DILocation(line: 6932, column: 9, scope: !779)
!9992 = !DILocation(line: 6934, column: 10, scope: !779)
!9993 = !DILocation(line: 6934, column: 15, scope: !779)
!9994 = !DILocation(line: 6934, column: 2, scope: !779)
!9995 = !DILocation(line: 6938, column: 9, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !779, file: !1, line: 6934, column: 25)
!9997 = !DILocation(line: 6938, column: 17, scope: !9996)
!9998 = !DILocation(line: 6938, column: 21, scope: !9996)
!9999 = !DILocation(line: 6938, column: 3, scope: !9996)
!10000 = !DILocation(line: 6944, column: 3, scope: !9996)
!10001 = !DILocation(line: 6947, column: 9, scope: !9996)
!10002 = !DILocation(line: 6947, column: 17, scope: !9996)
!10003 = !DILocation(line: 6947, column: 21, scope: !9996)
!10004 = !DILocation(line: 6947, column: 3, scope: !9996)
!10005 = !DILocation(line: 6953, column: 3, scope: !9996)
!10006 = !DILocation(line: 6955, column: 9, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !779, file: !1, line: 6955, column: 2)
!10008 = !DILocation(line: 6955, column: 7, scope: !10007)
!10009 = !DILocation(line: 6955, column: 14, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !10011, file: !1, discriminator: 1)
!10011 = distinct !DILexicalBlock(scope: !10007, file: !1, line: 6955, column: 2)
!10012 = !DILocation(line: 6955, column: 18, scope: !10010)
!10013 = !DILocation(line: 6955, column: 22, scope: !10010)
!10014 = !DILocation(line: 6955, column: 16, scope: !10010)
!10015 = !DILocation(line: 6955, column: 2, scope: !10010)
!10016 = !DILocation(line: 6956, column: 29, scope: !10011)
!10017 = !DILocation(line: 6956, column: 40, scope: !10011)
!10018 = !DILocation(line: 6956, column: 10, scope: !10011)
!10019 = !DILocation(line: 6956, column: 3, scope: !10011)
!10020 = !DILocation(line: 6956, column: 14, scope: !10011)
!10021 = !DILocation(line: 6956, column: 25, scope: !10011)
!10022 = !DILocation(line: 6955, column: 28, scope: !10023)
!10023 = !DILexicalBlockFile(scope: !10011, file: !1, discriminator: 2)
!10024 = !DILocation(line: 6955, column: 2, scope: !10023)
!10025 = !DILocation(line: 6958, column: 2, scope: !779)
!10026 = !DILocation(line: 6959, column: 1, scope: !779)
!10027 = !DILocalVariable(name: "vdd", arg: 1, scope: !784, file: !1, line: 4203, type: !688)
!10028 = !DILocation(line: 4203, column: 39, scope: !784)
!10029 = !DILocalVariable(name: "depth", scope: !784, file: !1, line: 4205, type: !31)
!10030 = !DILocation(line: 4205, column: 6, scope: !784)
!10031 = !DILocalVariable(name: "size", scope: !784, file: !1, line: 4205, type: !31)
!10032 = !DILocation(line: 4205, column: 13, scope: !784)
!10033 = !DILocalVariable(name: "pt", scope: !784, file: !1, line: 4206, type: !199)
!10034 = !DILocation(line: 4206, column: 21, scope: !784)
!10035 = !DILocation(line: 4208, column: 7, scope: !784)
!10036 = !DILocation(line: 4208, column: 12, scope: !784)
!10037 = !DILocation(line: 4208, column: 5, scope: !784)
!10038 = !DILocation(line: 4209, column: 7, scope: !784)
!10039 = !DILocation(line: 4210, column: 13, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !784, file: !1, line: 4210, column: 2)
!10041 = !DILocation(line: 4210, column: 7, scope: !10040)
!10042 = !DILocation(line: 4210, column: 18, scope: !10043)
!10043 = !DILexicalBlockFile(scope: !10044, file: !1, discriminator: 1)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !1, line: 4210, column: 2)
!10045 = !DILocation(line: 4210, column: 26, scope: !10043)
!10046 = !DILocation(line: 4210, column: 31, scope: !10043)
!10047 = !DILocation(line: 4210, column: 24, scope: !10043)
!10048 = !DILocation(line: 4210, column: 2, scope: !10043)
!10049 = !DILocalVariable(name: "ptbl", scope: !10050, file: !1, line: 4211, type: !97)
!10050 = distinct !DILexicalBlock(scope: !10044, file: !1, line: 4210, column: 51)
!10051 = !DILocation(line: 4211, column: 19, scope: !10050)
!10052 = !DILocalVariable(name: "i", scope: !10050, file: !1, line: 4212, type: !31)
!10053 = !DILocation(line: 4212, column: 7, scope: !10050)
!10054 = !DILocalVariable(name: "cnt", scope: !10050, file: !1, line: 4212, type: !31)
!10055 = !DILocation(line: 4212, column: 10, scope: !10050)
!10056 = !DILocation(line: 4214, column: 17, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10050, file: !1, line: 4214, column: 7)
!10058 = !DILocation(line: 4214, column: 14, scope: !10057)
!10059 = !DILocation(line: 4214, column: 24, scope: !10057)
!10060 = !DILocation(line: 4214, column: 12, scope: !10057)
!10061 = !DILocation(line: 4214, column: 29, scope: !10057)
!10062 = !DILocation(line: 4214, column: 7, scope: !10050)
!10063 = !DILocation(line: 4215, column: 4, scope: !10057)
!10064 = !DILocation(line: 4217, column: 13, scope: !10050)
!10065 = !DILocation(line: 4217, column: 10, scope: !10050)
!10066 = !DILocation(line: 4217, column: 20, scope: !10050)
!10067 = !DILocation(line: 4217, column: 8, scope: !10050)
!10068 = !DILocation(line: 4218, column: 10, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10050, file: !1, line: 4218, column: 3)
!10070 = !DILocation(line: 4218, column: 8, scope: !10069)
!10071 = !DILocation(line: 4218, column: 15, scope: !10072)
!10072 = !DILexicalBlockFile(scope: !10073, file: !1, discriminator: 1)
!10073 = distinct !DILexicalBlock(scope: !10069, file: !1, line: 4218, column: 3)
!10074 = !DILocation(line: 4218, column: 19, scope: !10072)
!10075 = !DILocation(line: 4218, column: 17, scope: !10072)
!10076 = !DILocation(line: 4218, column: 3, scope: !10072)
!10077 = !DILocalVariable(name: "len", scope: !10078, file: !1, line: 4219, type: !31)
!10078 = distinct !DILexicalBlock(scope: !10073, file: !1, line: 4218, column: 29)
!10079 = !DILocation(line: 4219, column: 8, scope: !10078)
!10080 = !DILocation(line: 4221, column: 13, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10078, file: !1, line: 4221, column: 8)
!10082 = !DILocation(line: 4221, column: 8, scope: !10081)
!10083 = !DILocation(line: 4221, column: 17, scope: !10081)
!10084 = !DILocation(line: 4221, column: 28, scope: !10081)
!10085 = !DILocation(line: 4221, column: 8, scope: !10078)
!10086 = !DILocation(line: 4222, column: 9, scope: !10081)
!10087 = !DILocation(line: 4222, column: 5, scope: !10081)
!10088 = !DILocation(line: 4224, column: 16, scope: !10081)
!10089 = !DILocation(line: 4224, column: 11, scope: !10081)
!10090 = !DILocation(line: 4224, column: 20, scope: !10081)
!10091 = !DILocation(line: 4224, column: 9, scope: !10081)
!10092 = !DILocation(line: 4225, column: 8, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10078, file: !1, line: 4225, column: 8)
!10094 = !DILocation(line: 4225, column: 12, scope: !10093)
!10095 = !DILocation(line: 4225, column: 8, scope: !10078)
!10096 = !DILocation(line: 4226, column: 8, scope: !10093)
!10097 = !DILocation(line: 4226, column: 5, scope: !10093)
!10098 = !DILocation(line: 4227, column: 16, scope: !10078)
!10099 = !DILocation(line: 4227, column: 14, scope: !10078)
!10100 = !DILocation(line: 4227, column: 9, scope: !10078)
!10101 = !DILocation(line: 4228, column: 3, scope: !10078)
!10102 = !DILocation(line: 4218, column: 25, scope: !10103)
!10103 = !DILexicalBlockFile(scope: !10073, file: !1, discriminator: 2)
!10104 = !DILocation(line: 4218, column: 3, scope: !10103)
!10105 = !DILocation(line: 4229, column: 2, scope: !10050)
!10106 = !DILocation(line: 4210, column: 47, scope: !10107)
!10107 = !DILexicalBlockFile(scope: !10044, file: !1, discriminator: 2)
!10108 = !DILocation(line: 4210, column: 2, scope: !10107)
!10109 = !DILocation(line: 4230, column: 25, scope: !784)
!10110 = !DILocation(line: 4230, column: 2, scope: !784)
!10111 = !DILocation(line: 4230, column: 7, scope: !784)
!10112 = !DILocation(line: 4230, column: 23, scope: !784)
!10113 = !DILocation(line: 4232, column: 8, scope: !784)
!10114 = !DILocation(line: 4232, column: 13, scope: !784)
!10115 = !DILocation(line: 4232, column: 37, scope: !784)
!10116 = !DILocation(line: 4232, column: 41, scope: !784)
!10117 = !DILocation(line: 4233, column: 29, scope: !784)
!10118 = !DILocation(line: 4231, column: 2, scope: !784)
!10119 = !DILocation(line: 4231, column: 7, scope: !784)
!10120 = !DILocation(line: 4231, column: 24, scope: !784)
!10121 = !DILocation(line: 4235, column: 1, scope: !784)
!10122 = !DILocalVariable(name: "pathtbl", arg: 1, scope: !692, file: !1, line: 6888, type: !199)
!10123 = !DILocation(line: 6888, column: 41, scope: !692)
!10124 = !DILocalVariable(name: "ent", arg: 2, scope: !692, file: !1, line: 6888, type: !76)
!10125 = !DILocation(line: 6888, column: 65, scope: !692)
!10126 = !DILocation(line: 6890, column: 2, scope: !692)
!10127 = !DILocation(line: 6890, column: 7, scope: !692)
!10128 = !DILocation(line: 6890, column: 14, scope: !692)
!10129 = !DILocation(line: 6891, column: 19, scope: !692)
!10130 = !DILocation(line: 6891, column: 3, scope: !692)
!10131 = !DILocation(line: 6891, column: 12, scope: !692)
!10132 = !DILocation(line: 6891, column: 17, scope: !692)
!10133 = !DILocation(line: 6892, column: 20, scope: !692)
!10134 = !DILocation(line: 6892, column: 25, scope: !692)
!10135 = !DILocation(line: 6892, column: 2, scope: !692)
!10136 = !DILocation(line: 6892, column: 11, scope: !692)
!10137 = !DILocation(line: 6892, column: 16, scope: !692)
!10138 = !DILocation(line: 6893, column: 2, scope: !692)
!10139 = !DILocation(line: 6893, column: 11, scope: !692)
!10140 = !DILocation(line: 6893, column: 15, scope: !692)
!10141 = !DILocation(line: 6894, column: 1, scope: !692)
!10142 = !DILocalVariable(name: "parent", arg: 1, scope: !696, file: !1, line: 5288, type: !76)
!10143 = !DILocation(line: 5288, column: 36, scope: !696)
!10144 = !DILocalVariable(name: "child", arg: 2, scope: !696, file: !1, line: 5288, type: !76)
!10145 = !DILocation(line: 5288, column: 59, scope: !696)
!10146 = !DILocalVariable(name: "ent", scope: !696, file: !1, line: 5290, type: !76)
!10147 = !DILocation(line: 5290, column: 17, scope: !696)
!10148 = !DILocation(line: 5293, column: 8, scope: !696)
!10149 = !DILocation(line: 5293, column: 16, scope: !696)
!10150 = !DILocation(line: 5293, column: 25, scope: !696)
!10151 = !DILocation(line: 5293, column: 6, scope: !696)
!10152 = !DILocation(line: 5294, column: 2, scope: !696)
!10153 = !DILocation(line: 5294, column: 9, scope: !10154)
!10154 = !DILexicalBlockFile(scope: !696, file: !1, discriminator: 1)
!10155 = !DILocation(line: 5294, column: 14, scope: !10154)
!10156 = !DILocation(line: 5294, column: 24, scope: !10154)
!10157 = !DILocation(line: 5294, column: 21, scope: !10154)
!10158 = !DILocation(line: 5294, column: 2, scope: !10154)
!10159 = !DILocation(line: 5295, column: 9, scope: !696)
!10160 = !DILocation(line: 5295, column: 14, scope: !696)
!10161 = !DILocation(line: 5295, column: 7, scope: !696)
!10162 = !DILocation(line: 5294, column: 2, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !696, file: !1, discriminator: 2)
!10164 = !DILocation(line: 5296, column: 21, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !696, file: !1, line: 5296, column: 6)
!10166 = !DILocation(line: 5296, column: 26, scope: !10165)
!10167 = !DILocation(line: 5296, column: 34, scope: !10165)
!10168 = !DILocation(line: 5296, column: 7, scope: !10165)
!10169 = !DILocation(line: 5296, column: 12, scope: !10165)
!10170 = !DILocation(line: 5296, column: 19, scope: !10165)
!10171 = !DILocation(line: 5296, column: 42, scope: !10165)
!10172 = !DILocation(line: 5296, column: 6, scope: !696)
!10173 = !DILocation(line: 5297, column: 29, scope: !10165)
!10174 = !DILocation(line: 5297, column: 34, scope: !10165)
!10175 = !DILocation(line: 5297, column: 3, scope: !10165)
!10176 = !DILocation(line: 5297, column: 11, scope: !10165)
!10177 = !DILocation(line: 5297, column: 20, scope: !10165)
!10178 = !DILocation(line: 5297, column: 25, scope: !10165)
!10179 = !DILocation(line: 5298, column: 2, scope: !696)
!10180 = !DILocation(line: 5298, column: 10, scope: !696)
!10181 = !DILocation(line: 5298, column: 19, scope: !696)
!10182 = !DILocation(line: 5298, column: 22, scope: !696)
!10183 = !DILocation(line: 5300, column: 6, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !696, file: !1, line: 5300, column: 6)
!10185 = !DILocation(line: 5300, column: 13, scope: !10184)
!10186 = !DILocation(line: 5300, column: 6, scope: !696)
!10187 = !DILocation(line: 5302, column: 9, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10184, file: !1, line: 5300, column: 18)
!10189 = !DILocation(line: 5302, column: 17, scope: !10188)
!10190 = !DILocation(line: 5302, column: 25, scope: !10188)
!10191 = !DILocation(line: 5302, column: 7, scope: !10188)
!10192 = !DILocation(line: 5303, column: 3, scope: !10188)
!10193 = !DILocation(line: 5303, column: 10, scope: !10194)
!10194 = !DILexicalBlockFile(scope: !10188, file: !1, discriminator: 1)
!10195 = !DILocation(line: 5303, column: 15, scope: !10194)
!10196 = !DILocation(line: 5303, column: 25, scope: !10194)
!10197 = !DILocation(line: 5303, column: 22, scope: !10194)
!10198 = !DILocation(line: 5303, column: 3, scope: !10194)
!10199 = !DILocation(line: 5304, column: 10, scope: !10188)
!10200 = !DILocation(line: 5304, column: 15, scope: !10188)
!10201 = !DILocation(line: 5304, column: 8, scope: !10188)
!10202 = !DILocation(line: 5303, column: 3, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !10188, file: !1, discriminator: 2)
!10204 = !DILocation(line: 5305, column: 22, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10188, file: !1, line: 5305, column: 7)
!10206 = !DILocation(line: 5305, column: 27, scope: !10205)
!10207 = !DILocation(line: 5305, column: 35, scope: !10205)
!10208 = !DILocation(line: 5305, column: 8, scope: !10205)
!10209 = !DILocation(line: 5305, column: 13, scope: !10205)
!10210 = !DILocation(line: 5305, column: 20, scope: !10205)
!10211 = !DILocation(line: 5305, column: 43, scope: !10205)
!10212 = !DILocation(line: 5305, column: 7, scope: !10188)
!10213 = !DILocation(line: 5306, column: 29, scope: !10205)
!10214 = !DILocation(line: 5306, column: 34, scope: !10205)
!10215 = !DILocation(line: 5306, column: 4, scope: !10205)
!10216 = !DILocation(line: 5306, column: 12, scope: !10205)
!10217 = !DILocation(line: 5306, column: 20, scope: !10205)
!10218 = !DILocation(line: 5306, column: 25, scope: !10205)
!10219 = !DILocation(line: 5307, column: 3, scope: !10188)
!10220 = !DILocation(line: 5307, column: 11, scope: !10188)
!10221 = !DILocation(line: 5307, column: 19, scope: !10188)
!10222 = !DILocation(line: 5307, column: 22, scope: !10188)
!10223 = !DILocation(line: 5308, column: 2, scope: !10188)
!10224 = !DILocation(line: 5310, column: 34, scope: !696)
!10225 = !DILocation(line: 5310, column: 42, scope: !696)
!10226 = !DILocation(line: 5311, column: 32, scope: !696)
!10227 = !DILocation(line: 5311, column: 6, scope: !696)
!10228 = !DILocation(line: 5310, column: 2, scope: !696)
!10229 = !DILocation(line: 5312, column: 1, scope: !696)
!10230 = !DILocalVariable(name: "parent", arg: 1, scope: !699, file: !1, line: 5239, type: !76)
!10231 = !DILocation(line: 5239, column: 38, scope: !699)
!10232 = !DILocalVariable(name: "child", arg: 2, scope: !699, file: !1, line: 5239, type: !76)
!10233 = !DILocation(line: 5239, column: 61, scope: !699)
!10234 = !DILocation(line: 5243, column: 8, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !699, file: !1, line: 5242, column: 6)
!10236 = !DILocation(line: 5243, column: 16, scope: !10235)
!10237 = !DILocation(line: 5243, column: 51, scope: !10235)
!10238 = !DILocation(line: 5243, column: 25, scope: !10235)
!10239 = !DILocation(line: 5242, column: 7, scope: !10235)
!10240 = !DILocation(line: 5242, column: 6, scope: !699)
!10241 = !DILocation(line: 5244, column: 3, scope: !10235)
!10242 = !DILocation(line: 5245, column: 23, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !699, file: !1, line: 5245, column: 6)
!10244 = !DILocation(line: 5245, column: 31, scope: !10243)
!10245 = !DILocation(line: 5245, column: 40, scope: !10243)
!10246 = !DILocation(line: 5245, column: 7, scope: !10243)
!10247 = !DILocation(line: 5245, column: 14, scope: !10243)
!10248 = !DILocation(line: 5245, column: 21, scope: !10243)
!10249 = !DILocation(line: 5245, column: 47, scope: !10243)
!10250 = !DILocation(line: 5245, column: 6, scope: !699)
!10251 = !DILocation(line: 5246, column: 29, scope: !10243)
!10252 = !DILocation(line: 5246, column: 36, scope: !10243)
!10253 = !DILocation(line: 5246, column: 3, scope: !10243)
!10254 = !DILocation(line: 5246, column: 11, scope: !10243)
!10255 = !DILocation(line: 5246, column: 20, scope: !10243)
!10256 = !DILocation(line: 5246, column: 25, scope: !10243)
!10257 = !DILocation(line: 5247, column: 27, scope: !699)
!10258 = !DILocation(line: 5247, column: 2, scope: !699)
!10259 = !DILocation(line: 5247, column: 10, scope: !699)
!10260 = !DILocation(line: 5247, column: 19, scope: !699)
!10261 = !DILocation(line: 5247, column: 25, scope: !699)
!10262 = !DILocation(line: 5248, column: 2, scope: !699)
!10263 = !DILocation(line: 5248, column: 10, scope: !699)
!10264 = !DILocation(line: 5248, column: 19, scope: !699)
!10265 = !DILocation(line: 5248, column: 22, scope: !699)
!10266 = !DILocation(line: 5249, column: 18, scope: !699)
!10267 = !DILocation(line: 5249, column: 2, scope: !699)
!10268 = !DILocation(line: 5249, column: 9, scope: !699)
!10269 = !DILocation(line: 5249, column: 16, scope: !699)
!10270 = !DILocation(line: 5252, column: 6, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !699, file: !1, line: 5252, column: 6)
!10272 = !DILocation(line: 5252, column: 13, scope: !10271)
!10273 = !DILocation(line: 5252, column: 6, scope: !699)
!10274 = !DILocation(line: 5253, column: 24, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !1, line: 5253, column: 7)
!10276 = distinct !DILexicalBlock(scope: !10271, file: !1, line: 5252, column: 18)
!10277 = !DILocation(line: 5253, column: 32, scope: !10275)
!10278 = !DILocation(line: 5253, column: 40, scope: !10275)
!10279 = !DILocation(line: 5253, column: 8, scope: !10275)
!10280 = !DILocation(line: 5253, column: 15, scope: !10275)
!10281 = !DILocation(line: 5253, column: 22, scope: !10275)
!10282 = !DILocation(line: 5253, column: 47, scope: !10275)
!10283 = !DILocation(line: 5253, column: 7, scope: !10276)
!10284 = !DILocation(line: 5254, column: 29, scope: !10275)
!10285 = !DILocation(line: 5254, column: 36, scope: !10275)
!10286 = !DILocation(line: 5254, column: 4, scope: !10275)
!10287 = !DILocation(line: 5254, column: 12, scope: !10275)
!10288 = !DILocation(line: 5254, column: 20, scope: !10275)
!10289 = !DILocation(line: 5254, column: 25, scope: !10275)
!10290 = !DILocation(line: 5255, column: 27, scope: !10276)
!10291 = !DILocation(line: 5255, column: 3, scope: !10276)
!10292 = !DILocation(line: 5255, column: 11, scope: !10276)
!10293 = !DILocation(line: 5255, column: 19, scope: !10276)
!10294 = !DILocation(line: 5255, column: 25, scope: !10276)
!10295 = !DILocation(line: 5256, column: 3, scope: !10276)
!10296 = !DILocation(line: 5256, column: 11, scope: !10276)
!10297 = !DILocation(line: 5256, column: 19, scope: !10276)
!10298 = !DILocation(line: 5256, column: 22, scope: !10276)
!10299 = !DILocation(line: 5257, column: 19, scope: !10276)
!10300 = !DILocation(line: 5257, column: 3, scope: !10276)
!10301 = !DILocation(line: 5257, column: 10, scope: !10276)
!10302 = !DILocation(line: 5257, column: 17, scope: !10276)
!10303 = !DILocation(line: 5258, column: 2, scope: !10276)
!10304 = !DILocation(line: 5259, column: 3, scope: !10271)
!10305 = !DILocation(line: 5259, column: 10, scope: !10271)
!10306 = !DILocation(line: 5259, column: 17, scope: !10271)
!10307 = !DILocation(line: 5260, column: 2, scope: !699)
!10308 = !DILocation(line: 5261, column: 1, scope: !699)
!10309 = !DILocalVariable(name: "pathtbl", arg: 1, scope: !700, file: !1, line: 6897, type: !199)
!10310 = !DILocation(line: 6897, column: 42, scope: !700)
!10311 = !DILocation(line: 6899, column: 6, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !700, file: !1, line: 6899, column: 6)
!10313 = !DILocation(line: 6899, column: 15, scope: !10312)
!10314 = !DILocation(line: 6899, column: 21, scope: !10312)
!10315 = !DILocation(line: 6899, column: 6, scope: !700)
!10316 = !DILocation(line: 6900, column: 3, scope: !10312)
!10317 = !DILocation(line: 6902, column: 13, scope: !700)
!10318 = !DILocation(line: 6902, column: 22, scope: !700)
!10319 = !DILocation(line: 6902, column: 4, scope: !700)
!10320 = !DILocation(line: 6902, column: 28, scope: !700)
!10321 = !DILocation(line: 6901, column: 11, scope: !700)
!10322 = !DILocation(line: 6901, column: 2, scope: !700)
!10323 = !DILocation(line: 6903, column: 1, scope: !700)
!10324 = !DILocalVariable(name: "a", arg: 1, scope: !703, file: !1, line: 6659, type: !367)
!10325 = !DILocation(line: 6659, column: 42, scope: !703)
!10326 = !DILocalVariable(name: "rr_moved", arg: 2, scope: !703, file: !1, line: 6659, type: !97)
!10327 = !DILocation(line: 6659, column: 61, scope: !703)
!10328 = !DILocalVariable(name: "curent", arg: 3, scope: !703, file: !1, line: 6660, type: !76)
!10329 = !DILocation(line: 6660, column: 20, scope: !703)
!10330 = !DILocalVariable(name: "newent", arg: 4, scope: !703, file: !1, line: 6660, type: !97)
!10331 = !DILocation(line: 6660, column: 44, scope: !703)
!10332 = !DILocalVariable(name: "iso9660", scope: !703, file: !1, line: 6662, type: !530)
!10333 = !DILocation(line: 6662, column: 18, scope: !703)
!10334 = !DILocation(line: 6662, column: 28, scope: !703)
!10335 = !DILocation(line: 6662, column: 31, scope: !703)
!10336 = !DILocalVariable(name: "rrmoved", scope: !703, file: !1, line: 6663, type: !76)
!10337 = !DILocation(line: 6663, column: 17, scope: !703)
!10338 = !DILocalVariable(name: "mvent", scope: !703, file: !1, line: 6663, type: !76)
!10339 = !DILocation(line: 6663, column: 27, scope: !703)
!10340 = !DILocalVariable(name: "np", scope: !703, file: !1, line: 6663, type: !76)
!10341 = !DILocation(line: 6663, column: 35, scope: !703)
!10342 = !DILocation(line: 6665, column: 18, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !703, file: !1, line: 6665, column: 6)
!10344 = !DILocation(line: 6665, column: 17, scope: !10343)
!10345 = !DILocation(line: 6665, column: 15, scope: !10343)
!10346 = !DILocation(line: 6665, column: 28, scope: !10343)
!10347 = !DILocation(line: 6665, column: 6, scope: !703)
!10348 = !DILocalVariable(name: "rootent", scope: !10349, file: !1, line: 6666, type: !76)
!10349 = distinct !DILexicalBlock(scope: !10343, file: !1, line: 6665, column: 37)
!10350 = !DILocation(line: 6666, column: 18, scope: !10349)
!10351 = !DILocation(line: 6666, column: 28, scope: !10349)
!10352 = !DILocation(line: 6666, column: 37, scope: !10349)
!10353 = !DILocation(line: 6666, column: 45, scope: !10349)
!10354 = !DILocation(line: 6670, column: 39, scope: !10349)
!10355 = !DILocation(line: 6670, column: 42, scope: !10349)
!10356 = !DILocation(line: 6670, column: 13, scope: !10349)
!10357 = !DILocation(line: 6670, column: 11, scope: !10349)
!10358 = !DILocation(line: 6671, column: 7, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10349, file: !1, line: 6671, column: 7)
!10360 = !DILocation(line: 6671, column: 15, scope: !10359)
!10361 = !DILocation(line: 6671, column: 7, scope: !10349)
!10362 = !DILocation(line: 6672, column: 23, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10359, file: !1, line: 6671, column: 24)
!10364 = !DILocation(line: 6672, column: 26, scope: !10363)
!10365 = !DILocation(line: 6672, column: 4, scope: !10363)
!10366 = !DILocation(line: 6674, column: 4, scope: !10363)
!10367 = !DILocation(line: 6677, column: 25, scope: !10349)
!10368 = !DILocation(line: 6677, column: 34, scope: !10349)
!10369 = !DILocation(line: 6677, column: 3, scope: !10349)
!10370 = !DILocation(line: 6678, column: 27, scope: !10349)
!10371 = !DILocation(line: 6678, column: 36, scope: !10349)
!10372 = !DILocation(line: 6678, column: 42, scope: !10349)
!10373 = !DILocation(line: 6679, column: 27, scope: !10349)
!10374 = !DILocation(line: 6679, column: 36, scope: !10349)
!10375 = !DILocation(line: 6679, column: 42, scope: !10349)
!10376 = !DILocation(line: 6679, column: 7, scope: !10349)
!10377 = !DILocation(line: 6679, column: 49, scope: !10349)
!10378 = !DILocation(line: 6678, column: 3, scope: !10349)
!10379 = !DILocation(line: 6681, column: 26, scope: !10349)
!10380 = !DILocation(line: 6681, column: 35, scope: !10349)
!10381 = !DILocation(line: 6681, column: 43, scope: !10349)
!10382 = !DILocation(line: 6681, column: 56, scope: !10349)
!10383 = !DILocation(line: 6681, column: 3, scope: !10349)
!10384 = !DILocation(line: 6683, column: 15, scope: !10349)
!10385 = !DILocation(line: 6683, column: 4, scope: !10349)
!10386 = !DILocation(line: 6683, column: 13, scope: !10349)
!10387 = !DILocation(line: 6684, column: 2, scope: !10349)
!10388 = !DILocation(line: 6689, column: 23, scope: !703)
!10389 = !DILocation(line: 6689, column: 10, scope: !703)
!10390 = !DILocation(line: 6689, column: 8, scope: !703)
!10391 = !DILocation(line: 6690, column: 6, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !703, file: !1, line: 6690, column: 6)
!10393 = !DILocation(line: 6690, column: 12, scope: !10392)
!10394 = !DILocation(line: 6690, column: 6, scope: !703)
!10395 = !DILocation(line: 6691, column: 22, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10392, file: !1, line: 6690, column: 21)
!10397 = !DILocation(line: 6691, column: 25, scope: !10396)
!10398 = !DILocation(line: 6691, column: 3, scope: !10396)
!10399 = !DILocation(line: 6693, column: 3, scope: !10396)
!10400 = !DILocation(line: 6696, column: 21, scope: !703)
!10401 = !DILocation(line: 6696, column: 29, scope: !703)
!10402 = !DILocation(line: 6696, column: 2, scope: !703)
!10403 = !DILocation(line: 6696, column: 9, scope: !703)
!10404 = !DILocation(line: 6696, column: 19, scope: !703)
!10405 = !DILocation(line: 6697, column: 21, scope: !703)
!10406 = !DILocation(line: 6697, column: 2, scope: !703)
!10407 = !DILocation(line: 6697, column: 10, scope: !703)
!10408 = !DILocation(line: 6697, column: 19, scope: !703)
!10409 = !DILocation(line: 6701, column: 6, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !703, file: !1, line: 6701, column: 6)
!10411 = !DILocation(line: 6701, column: 14, scope: !10410)
!10412 = !DILocation(line: 6701, column: 23, scope: !10410)
!10413 = !DILocation(line: 6701, column: 29, scope: !10410)
!10414 = !DILocation(line: 6701, column: 6, scope: !703)
!10415 = !DILocation(line: 6702, column: 27, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10410, file: !1, line: 6701, column: 38)
!10417 = !DILocation(line: 6702, column: 35, scope: !10416)
!10418 = !DILocation(line: 6702, column: 44, scope: !10416)
!10419 = !DILocation(line: 6702, column: 4, scope: !10416)
!10420 = !DILocation(line: 6702, column: 11, scope: !10416)
!10421 = !DILocation(line: 6702, column: 20, scope: !10416)
!10422 = !DILocation(line: 6702, column: 25, scope: !10416)
!10423 = !DILocation(line: 6703, column: 26, scope: !10416)
!10424 = !DILocation(line: 6703, column: 34, scope: !10416)
!10425 = !DILocation(line: 6703, column: 43, scope: !10416)
!10426 = !DILocation(line: 6703, column: 3, scope: !10416)
!10427 = !DILocation(line: 6703, column: 10, scope: !10416)
!10428 = !DILocation(line: 6703, column: 19, scope: !10416)
!10429 = !DILocation(line: 6703, column: 24, scope: !10416)
!10430 = !DILocation(line: 6704, column: 2, scope: !10416)
!10431 = !DILocation(line: 6705, column: 12, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !703, file: !1, line: 6705, column: 2)
!10433 = !DILocation(line: 6705, column: 19, scope: !10432)
!10434 = !DILocation(line: 6705, column: 28, scope: !10432)
!10435 = !DILocation(line: 6705, column: 10, scope: !10432)
!10436 = !DILocation(line: 6705, column: 7, scope: !10432)
!10437 = !DILocation(line: 6705, column: 35, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10439, file: !1, discriminator: 1)
!10439 = distinct !DILexicalBlock(scope: !10432, file: !1, line: 6705, column: 2)
!10440 = !DILocation(line: 6705, column: 38, scope: !10438)
!10441 = !DILocation(line: 6705, column: 2, scope: !10438)
!10442 = !DILocation(line: 6706, column: 16, scope: !10439)
!10443 = !DILocation(line: 6706, column: 3, scope: !10439)
!10444 = !DILocation(line: 6706, column: 7, scope: !10439)
!10445 = !DILocation(line: 6706, column: 14, scope: !10439)
!10446 = !DILocation(line: 6705, column: 52, scope: !10447)
!10447 = !DILexicalBlockFile(scope: !10439, file: !1, discriminator: 2)
!10448 = !DILocation(line: 6705, column: 56, scope: !10447)
!10449 = !DILocation(line: 6705, column: 50, scope: !10447)
!10450 = !DILocation(line: 6705, column: 2, scope: !10447)
!10451 = !DILocation(line: 6707, column: 24, scope: !703)
!10452 = !DILocation(line: 6707, column: 32, scope: !703)
!10453 = !DILocation(line: 6707, column: 41, scope: !703)
!10454 = !DILocation(line: 6707, column: 2, scope: !703)
!10455 = !DILocation(line: 6707, column: 9, scope: !703)
!10456 = !DILocation(line: 6707, column: 18, scope: !703)
!10457 = !DILocation(line: 6707, column: 22, scope: !703)
!10458 = !DILocation(line: 6708, column: 2, scope: !703)
!10459 = !DILocation(line: 6708, column: 10, scope: !703)
!10460 = !DILocation(line: 6708, column: 19, scope: !703)
!10461 = !DILocation(line: 6708, column: 23, scope: !703)
!10462 = !DILocation(line: 6709, column: 2, scope: !703)
!10463 = !DILocation(line: 6709, column: 10, scope: !703)
!10464 = !DILocation(line: 6709, column: 19, scope: !703)
!10465 = !DILocation(line: 6709, column: 25, scope: !703)
!10466 = !DILocation(line: 6710, column: 27, scope: !703)
!10467 = !DILocation(line: 6710, column: 35, scope: !703)
!10468 = !DILocation(line: 6710, column: 44, scope: !703)
!10469 = !DILocation(line: 6710, column: 2, scope: !703)
!10470 = !DILocation(line: 6710, column: 10, scope: !703)
!10471 = !DILocation(line: 6710, column: 19, scope: !703)
!10472 = !DILocation(line: 6710, column: 24, scope: !703)
!10473 = !DILocation(line: 6712, column: 6, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !703, file: !1, line: 6712, column: 6)
!10475 = !DILocation(line: 6712, column: 14, scope: !10474)
!10476 = !DILocation(line: 6712, column: 22, scope: !10474)
!10477 = !DILocation(line: 6712, column: 28, scope: !10474)
!10478 = !DILocation(line: 6712, column: 6, scope: !703)
!10479 = !DILocation(line: 6713, column: 26, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10474, file: !1, line: 6712, column: 37)
!10481 = !DILocation(line: 6713, column: 34, scope: !10480)
!10482 = !DILocation(line: 6713, column: 42, scope: !10480)
!10483 = !DILocation(line: 6713, column: 4, scope: !10480)
!10484 = !DILocation(line: 6713, column: 11, scope: !10480)
!10485 = !DILocation(line: 6713, column: 19, scope: !10480)
!10486 = !DILocation(line: 6713, column: 24, scope: !10480)
!10487 = !DILocation(line: 6714, column: 25, scope: !10480)
!10488 = !DILocation(line: 6714, column: 33, scope: !10480)
!10489 = !DILocation(line: 6714, column: 41, scope: !10480)
!10490 = !DILocation(line: 6714, column: 3, scope: !10480)
!10491 = !DILocation(line: 6714, column: 10, scope: !10480)
!10492 = !DILocation(line: 6714, column: 18, scope: !10480)
!10493 = !DILocation(line: 6714, column: 23, scope: !10480)
!10494 = !DILocation(line: 6715, column: 2, scope: !10480)
!10495 = !DILocation(line: 6716, column: 23, scope: !703)
!10496 = !DILocation(line: 6716, column: 31, scope: !703)
!10497 = !DILocation(line: 6716, column: 39, scope: !703)
!10498 = !DILocation(line: 6716, column: 2, scope: !703)
!10499 = !DILocation(line: 6716, column: 9, scope: !703)
!10500 = !DILocation(line: 6716, column: 17, scope: !703)
!10501 = !DILocation(line: 6716, column: 21, scope: !703)
!10502 = !DILocation(line: 6717, column: 2, scope: !703)
!10503 = !DILocation(line: 6717, column: 10, scope: !703)
!10504 = !DILocation(line: 6717, column: 18, scope: !703)
!10505 = !DILocation(line: 6717, column: 22, scope: !703)
!10506 = !DILocation(line: 6718, column: 2, scope: !703)
!10507 = !DILocation(line: 6718, column: 10, scope: !703)
!10508 = !DILocation(line: 6718, column: 18, scope: !703)
!10509 = !DILocation(line: 6718, column: 24, scope: !703)
!10510 = !DILocation(line: 6719, column: 26, scope: !703)
!10511 = !DILocation(line: 6719, column: 34, scope: !703)
!10512 = !DILocation(line: 6719, column: 42, scope: !703)
!10513 = !DILocation(line: 6719, column: 2, scope: !703)
!10514 = !DILocation(line: 6719, column: 10, scope: !703)
!10515 = !DILocation(line: 6719, column: 18, scope: !703)
!10516 = !DILocation(line: 6719, column: 23, scope: !703)
!10517 = !DILocation(line: 6724, column: 24, scope: !703)
!10518 = !DILocation(line: 6724, column: 33, scope: !703)
!10519 = !DILocation(line: 6724, column: 2, scope: !703)
!10520 = !DILocation(line: 6725, column: 26, scope: !703)
!10521 = !DILocation(line: 6725, column: 35, scope: !703)
!10522 = !DILocation(line: 6725, column: 41, scope: !703)
!10523 = !DILocation(line: 6726, column: 26, scope: !703)
!10524 = !DILocation(line: 6726, column: 35, scope: !703)
!10525 = !DILocation(line: 6726, column: 41, scope: !703)
!10526 = !DILocation(line: 6726, column: 6, scope: !703)
!10527 = !DILocation(line: 6726, column: 48, scope: !703)
!10528 = !DILocation(line: 6725, column: 2, scope: !703)
!10529 = !DILocation(line: 6732, column: 2, scope: !703)
!10530 = !DILocation(line: 6732, column: 10, scope: !703)
!10531 = !DILocation(line: 6732, column: 14, scope: !703)
!10532 = !DILocation(line: 6734, column: 12, scope: !703)
!10533 = !DILocation(line: 6734, column: 3, scope: !703)
!10534 = !DILocation(line: 6734, column: 10, scope: !703)
!10535 = !DILocation(line: 6736, column: 2, scope: !703)
!10536 = !DILocation(line: 6737, column: 1, scope: !703)
!10537 = !DILocalVariable(name: "iso9660", arg: 1, scope: !712, file: !1, line: 5807, type: !530)
!10538 = !DILocation(line: 5807, column: 26, scope: !712)
!10539 = !DILocalVariable(name: "vdd", arg: 2, scope: !712, file: !1, line: 5807, type: !688)
!10540 = !DILocation(line: 5807, column: 47, scope: !712)
!10541 = !DILocalVariable(name: "idr", arg: 3, scope: !712, file: !1, line: 5807, type: !715)
!10542 = !DILocation(line: 5807, column: 64, scope: !712)
!10543 = !DILocation(line: 5810, column: 2, scope: !712)
!10544 = !DILocation(line: 5810, column: 7, scope: !712)
!10545 = !DILocation(line: 5810, column: 19, scope: !712)
!10546 = !DILocation(line: 5811, column: 2, scope: !712)
!10547 = !DILocation(line: 5811, column: 7, scope: !712)
!10548 = !DILocation(line: 5811, column: 17, scope: !712)
!10549 = !DILocation(line: 5812, column: 6, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !712, file: !1, line: 5812, column: 6)
!10551 = !DILocation(line: 5812, column: 11, scope: !10550)
!10552 = !DILocation(line: 5812, column: 20, scope: !10550)
!10553 = !DILocation(line: 5812, column: 6, scope: !712)
!10554 = !DILocation(line: 5813, column: 7, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1, line: 5813, column: 7)
!10556 = distinct !DILexicalBlock(scope: !10550, file: !1, line: 5812, column: 35)
!10557 = !DILocation(line: 5813, column: 16, scope: !10555)
!10558 = !DILocation(line: 5813, column: 20, scope: !10555)
!10559 = !DILocation(line: 5813, column: 30, scope: !10555)
!10560 = !DILocation(line: 5813, column: 7, scope: !10556)
!10561 = !DILocation(line: 5814, column: 11, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10555, file: !1, line: 5813, column: 36)
!10563 = !DILocation(line: 5814, column: 16, scope: !10562)
!10564 = !DILocation(line: 5814, column: 4, scope: !10562)
!10565 = !DILocation(line: 5816, column: 3, scope: !10562)
!10566 = !DILocation(line: 5817, column: 11, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10555, file: !1, line: 5816, column: 10)
!10568 = !DILocation(line: 5817, column: 16, scope: !10567)
!10569 = !DILocation(line: 5817, column: 4, scope: !10567)
!10570 = !DILocation(line: 5819, column: 26, scope: !10567)
!10571 = !DILocation(line: 5819, column: 31, scope: !10567)
!10572 = !DILocation(line: 5819, column: 4, scope: !10567)
!10573 = !DILocation(line: 5821, column: 2, scope: !10556)
!10574 = !DILocation(line: 5822, column: 1, scope: !712)
!10575 = !DILocalVariable(name: "a", arg: 1, scope: !737, file: !1, line: 6224, type: !367)
!10576 = !DILocation(line: 6224, column: 52, scope: !737)
!10577 = !DILocalVariable(name: "isoent", arg: 2, scope: !737, file: !1, line: 6224, type: !76)
!10578 = !DILocation(line: 6224, column: 70, scope: !737)
!10579 = !DILocalVariable(name: "idr", arg: 3, scope: !737, file: !1, line: 6225, type: !715)
!10580 = !DILocation(line: 6225, column: 17, scope: !737)
!10581 = !DILocalVariable(name: "iso9660", scope: !737, file: !1, line: 6227, type: !530)
!10582 = !DILocation(line: 6227, column: 18, scope: !737)
!10583 = !DILocalVariable(name: "np", scope: !737, file: !1, line: 6228, type: !76)
!10584 = !DILocation(line: 6228, column: 17, scope: !737)
!10585 = !DILocalVariable(name: "p", scope: !737, file: !1, line: 6229, type: !544)
!10586 = !DILocation(line: 6229, column: 17, scope: !737)
!10587 = !DILocalVariable(name: "l", scope: !737, file: !1, line: 6230, type: !23)
!10588 = !DILocation(line: 6230, column: 9, scope: !737)
!10589 = !DILocalVariable(name: "r", scope: !737, file: !1, line: 6231, type: !31)
!10590 = !DILocation(line: 6231, column: 6, scope: !737)
!10591 = !DILocalVariable(name: "ffmax", scope: !737, file: !1, line: 6232, type: !23)
!10592 = !DILocation(line: 6232, column: 9, scope: !737)
!10593 = !DILocalVariable(name: "parent_len", scope: !737, file: !1, line: 6232, type: !23)
!10594 = !DILocation(line: 6232, column: 16, scope: !737)
!10595 = !DILocation(line: 6237, column: 6, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !737, file: !1, line: 6237, column: 6)
!10597 = !DILocation(line: 6237, column: 14, scope: !10596)
!10598 = !DILocation(line: 6237, column: 23, scope: !10596)
!10599 = !DILocation(line: 6237, column: 27, scope: !10596)
!10600 = !DILocation(line: 6237, column: 6, scope: !737)
!10601 = !DILocation(line: 6238, column: 3, scope: !10596)
!10602 = !DILocation(line: 6240, column: 12, scope: !737)
!10603 = !DILocation(line: 6240, column: 15, scope: !737)
!10604 = !DILocation(line: 6240, column: 10, scope: !737)
!10605 = !DILocation(line: 6241, column: 6, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !737, file: !1, line: 6241, column: 6)
!10607 = !DILocation(line: 6241, column: 15, scope: !10606)
!10608 = !DILocation(line: 6241, column: 19, scope: !10606)
!10609 = !DILocation(line: 6241, column: 26, scope: !10606)
!10610 = !DILocation(line: 6241, column: 6, scope: !737)
!10611 = !DILocation(line: 6242, column: 9, scope: !10606)
!10612 = !DILocation(line: 6242, column: 3, scope: !10606)
!10613 = !DILocation(line: 6244, column: 9, scope: !10606)
!10614 = !DILocation(line: 6246, column: 16, scope: !737)
!10615 = !DILocation(line: 6246, column: 19, scope: !737)
!10616 = !DILocation(line: 6246, column: 24, scope: !737)
!10617 = !DILocation(line: 6246, column: 32, scope: !737)
!10618 = !DILocation(line: 6246, column: 41, scope: !737)
!10619 = !DILocation(line: 6246, column: 51, scope: !737)
!10620 = !DILocation(line: 6246, column: 46, scope: !737)
!10621 = !DILocation(line: 6246, column: 6, scope: !737)
!10622 = !DILocation(line: 6246, column: 4, scope: !737)
!10623 = !DILocation(line: 6247, column: 6, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !737, file: !1, line: 6247, column: 6)
!10625 = !DILocation(line: 6247, column: 8, scope: !10624)
!10626 = !DILocation(line: 6247, column: 6, scope: !737)
!10627 = !DILocation(line: 6248, column: 11, scope: !10624)
!10628 = !DILocation(line: 6248, column: 3, scope: !10624)
!10629 = !DILocation(line: 6250, column: 13, scope: !737)
!10630 = !DILocation(line: 6251, column: 12, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !737, file: !1, line: 6251, column: 2)
!10632 = !DILocation(line: 6251, column: 10, scope: !10631)
!10633 = !DILocation(line: 6251, column: 7, scope: !10631)
!10634 = !DILocation(line: 6251, column: 20, scope: !10635)
!10635 = !DILexicalBlockFile(scope: !10636, file: !1, discriminator: 1)
!10636 = distinct !DILexicalBlock(scope: !10631, file: !1, line: 6251, column: 2)
!10637 = !DILocation(line: 6251, column: 24, scope: !10635)
!10638 = !DILocation(line: 6251, column: 34, scope: !10635)
!10639 = !DILocation(line: 6251, column: 31, scope: !10635)
!10640 = !DILocation(line: 6251, column: 2, scope: !10635)
!10641 = !DILocation(line: 6252, column: 17, scope: !10636)
!10642 = !DILocation(line: 6252, column: 21, scope: !10636)
!10643 = !DILocation(line: 6252, column: 28, scope: !10636)
!10644 = !DILocation(line: 6252, column: 14, scope: !10636)
!10645 = !DILocation(line: 6252, column: 3, scope: !10636)
!10646 = !DILocation(line: 6251, column: 43, scope: !10647)
!10647 = !DILexicalBlockFile(scope: !10636, file: !1, discriminator: 2)
!10648 = !DILocation(line: 6251, column: 47, scope: !10647)
!10649 = !DILocation(line: 6251, column: 41, scope: !10647)
!10650 = !DILocation(line: 6251, column: 2, scope: !10647)
!10651 = !DILocation(line: 6254, column: 12, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !737, file: !1, line: 6254, column: 2)
!10653 = !DILocation(line: 6254, column: 20, scope: !10652)
!10654 = !DILocation(line: 6254, column: 29, scope: !10652)
!10655 = !DILocation(line: 6254, column: 10, scope: !10652)
!10656 = !DILocation(line: 6254, column: 7, scope: !10652)
!10657 = !DILocation(line: 6254, column: 36, scope: !10658)
!10658 = !DILexicalBlockFile(scope: !10659, file: !1, discriminator: 1)
!10659 = distinct !DILexicalBlock(scope: !10652, file: !1, line: 6254, column: 2)
!10660 = !DILocation(line: 6254, column: 39, scope: !10658)
!10661 = !DILocation(line: 6254, column: 2, scope: !10658)
!10662 = !DILocalVariable(name: "dot", scope: !10663, file: !1, line: 6255, type: !544)
!10663 = distinct !DILexicalBlock(scope: !10659, file: !1, line: 6254, column: 65)
!10664 = !DILocation(line: 6255, column: 18, scope: !10663)
!10665 = !DILocalVariable(name: "ext_off", scope: !10663, file: !1, line: 6256, type: !31)
!10666 = !DILocation(line: 6256, column: 7, scope: !10663)
!10667 = !DILocalVariable(name: "noff", scope: !10663, file: !1, line: 6256, type: !31)
!10668 = !DILocation(line: 6256, column: 16, scope: !10663)
!10669 = !DILocalVariable(name: "weight", scope: !10663, file: !1, line: 6256, type: !31)
!10670 = !DILocation(line: 6256, column: 22, scope: !10663)
!10671 = !DILocalVariable(name: "lt", scope: !10663, file: !1, line: 6257, type: !23)
!10672 = !DILocation(line: 6257, column: 10, scope: !10663)
!10673 = !DILocation(line: 6259, column: 12, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6259, column: 7)
!10675 = !DILocation(line: 6259, column: 16, scope: !10674)
!10676 = !DILocation(line: 6259, column: 22, scope: !10674)
!10677 = !DILocation(line: 6259, column: 37, scope: !10674)
!10678 = !DILocation(line: 6259, column: 10, scope: !10674)
!10679 = !DILocation(line: 6259, column: 47, scope: !10674)
!10680 = !DILocation(line: 6259, column: 45, scope: !10674)
!10681 = !DILocation(line: 6259, column: 7, scope: !10663)
!10682 = !DILocation(line: 6260, column: 8, scope: !10674)
!10683 = !DILocation(line: 6260, column: 6, scope: !10674)
!10684 = !DILocation(line: 6260, column: 4, scope: !10674)
!10685 = !DILocation(line: 6262, column: 15, scope: !10663)
!10686 = !DILocation(line: 6262, column: 16, scope: !10663)
!10687 = !DILocation(line: 6262, column: 19, scope: !10663)
!10688 = !DILocation(line: 6262, column: 7, scope: !10663)
!10689 = !DILocation(line: 6262, column: 5, scope: !10663)
!10690 = !DILocation(line: 6263, column: 7, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6263, column: 7)
!10692 = !DILocation(line: 6263, column: 9, scope: !10691)
!10693 = !DILocation(line: 6263, column: 7, scope: !10663)
!10694 = !DILocation(line: 6264, column: 23, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10691, file: !1, line: 6263, column: 18)
!10696 = !DILocation(line: 6264, column: 26, scope: !10695)
!10697 = !DILocation(line: 6264, column: 4, scope: !10695)
!10698 = !DILocation(line: 6266, column: 4, scope: !10695)
!10699 = !DILocation(line: 6268, column: 10, scope: !10663)
!10700 = !DILocation(line: 6268, column: 13, scope: !10663)
!10701 = !DILocation(line: 6268, column: 17, scope: !10663)
!10702 = !DILocation(line: 6268, column: 23, scope: !10663)
!10703 = !DILocation(line: 6268, column: 38, scope: !10663)
!10704 = !DILocation(line: 6268, column: 41, scope: !10663)
!10705 = !DILocation(line: 6268, column: 3, scope: !10663)
!10706 = !DILocation(line: 6269, column: 5, scope: !10663)
!10707 = !DILocation(line: 6269, column: 3, scope: !10663)
!10708 = !DILocation(line: 6269, column: 8, scope: !10663)
!10709 = !DILocation(line: 6270, column: 5, scope: !10663)
!10710 = !DILocation(line: 6270, column: 6, scope: !10663)
!10711 = !DILocation(line: 6270, column: 3, scope: !10663)
!10712 = !DILocation(line: 6270, column: 10, scope: !10663)
!10713 = !DILocation(line: 6272, column: 28, scope: !10663)
!10714 = !DILocation(line: 6272, column: 3, scope: !10663)
!10715 = !DILocation(line: 6272, column: 7, scope: !10663)
!10716 = !DILocation(line: 6272, column: 18, scope: !10663)
!10717 = !DILocation(line: 6273, column: 8, scope: !10663)
!10718 = !DILocation(line: 6273, column: 6, scope: !10663)
!10719 = !DILocation(line: 6274, column: 9, scope: !10663)
!10720 = !DILocation(line: 6274, column: 13, scope: !10663)
!10721 = !DILocation(line: 6274, column: 11, scope: !10663)
!10722 = !DILocation(line: 6274, column: 7, scope: !10663)
!10723 = !DILocation(line: 6275, column: 10, scope: !10663)
!10724 = !DILocation(line: 6276, column: 3, scope: !10663)
!10725 = !DILocation(line: 6276, column: 10, scope: !10726)
!10726 = !DILexicalBlockFile(scope: !10663, file: !1, discriminator: 1)
!10727 = !DILocation(line: 6276, column: 13, scope: !10726)
!10728 = !DILocation(line: 6276, column: 3, scope: !10726)
!10729 = !DILocation(line: 6277, column: 29, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !1, line: 6277, column: 8)
!10731 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6276, column: 18)
!10732 = !DILocation(line: 6277, column: 35, scope: !10730)
!10733 = !DILocation(line: 6277, column: 9, scope: !10730)
!10734 = !DILocation(line: 6277, column: 8, scope: !10731)
!10735 = !DILocation(line: 6278, column: 21, scope: !10730)
!10736 = !DILocation(line: 6278, column: 5, scope: !10730)
!10737 = !DILocation(line: 6279, column: 13, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10730, file: !1, line: 6279, column: 13)
!10739 = !DILocation(line: 6279, column: 18, scope: !10738)
!10740 = !DILocation(line: 6279, column: 23, scope: !10738)
!10741 = !DILocation(line: 6279, column: 26, scope: !10742)
!10742 = !DILexicalBlockFile(scope: !10738, file: !1, discriminator: 1)
!10743 = !DILocation(line: 6279, column: 31, scope: !10742)
!10744 = !DILocation(line: 6279, column: 13, scope: !10742)
!10745 = !DILocation(line: 6280, column: 11, scope: !10738)
!10746 = !DILocation(line: 6280, column: 9, scope: !10738)
!10747 = !DILocation(line: 6280, column: 5, scope: !10738)
!10748 = !DILocation(line: 6281, column: 6, scope: !10731)
!10749 = !DILocation(line: 6282, column: 7, scope: !10731)
!10750 = !DILocation(line: 6276, column: 3, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !10663, file: !1, discriminator: 2)
!10752 = !DILocation(line: 6284, column: 19, scope: !10663)
!10753 = !DILocation(line: 6284, column: 42, scope: !10663)
!10754 = !DILocation(line: 6284, column: 46, scope: !10663)
!10755 = !DILocation(line: 6284, column: 23, scope: !10663)
!10756 = !DILocation(line: 6284, column: 13, scope: !10663)
!10757 = !DILocation(line: 6284, column: 11, scope: !10663)
!10758 = !DILocation(line: 6285, column: 17, scope: !10663)
!10759 = !DILocation(line: 6285, column: 3, scope: !10663)
!10760 = !DILocation(line: 6285, column: 7, scope: !10663)
!10761 = !DILocation(line: 6285, column: 15, scope: !10663)
!10762 = !DILocation(line: 6286, column: 22, scope: !10663)
!10763 = !DILocation(line: 6286, column: 17, scope: !10663)
!10764 = !DILocation(line: 6286, column: 26, scope: !10663)
!10765 = !DILocation(line: 6286, column: 24, scope: !10663)
!10766 = !DILocation(line: 6286, column: 3, scope: !10663)
!10767 = !DILocation(line: 6286, column: 7, scope: !10663)
!10768 = !DILocation(line: 6286, column: 15, scope: !10663)
!10769 = !DILocation(line: 6287, column: 21, scope: !10663)
!10770 = !DILocation(line: 6287, column: 16, scope: !10663)
!10771 = !DILocation(line: 6287, column: 3, scope: !10663)
!10772 = !DILocation(line: 6287, column: 7, scope: !10663)
!10773 = !DILocation(line: 6287, column: 14, scope: !10663)
!10774 = !DILocation(line: 6292, column: 7, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6292, column: 7)
!10776 = !DILocation(line: 6292, column: 11, scope: !10775)
!10777 = !DILocation(line: 6292, column: 17, scope: !10775)
!10778 = !DILocation(line: 6292, column: 32, scope: !10775)
!10779 = !DILocation(line: 6292, column: 41, scope: !10775)
!10780 = !DILocation(line: 6292, column: 39, scope: !10775)
!10781 = !DILocation(line: 6292, column: 7, scope: !10663)
!10782 = !DILocation(line: 6293, column: 27, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10784, file: !1, line: 6293, column: 8)
!10784 = distinct !DILexicalBlock(scope: !10775, file: !1, line: 6292, column: 48)
!10785 = !DILocation(line: 6293, column: 36, scope: !10783)
!10786 = !DILocation(line: 6294, column: 22, scope: !10783)
!10787 = !DILocation(line: 6294, column: 26, scope: !10783)
!10788 = !DILocation(line: 6294, column: 38, scope: !10783)
!10789 = !DILocation(line: 6295, column: 5, scope: !10783)
!10790 = !DILocation(line: 6295, column: 14, scope: !10783)
!10791 = !DILocation(line: 6293, column: 8, scope: !10783)
!10792 = !DILocation(line: 6295, column: 34, scope: !10783)
!10793 = !DILocation(line: 6295, column: 39, scope: !10783)
!10794 = !DILocation(line: 6296, column: 8, scope: !10783)
!10795 = !DILocation(line: 6296, column: 14, scope: !10783)
!10796 = !DILocation(line: 6293, column: 8, scope: !10797)
!10797 = !DILexicalBlockFile(scope: !10784, file: !1, discriminator: 1)
!10798 = !DILocation(line: 6297, column: 24, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10783, file: !1, line: 6296, column: 25)
!10800 = !DILocation(line: 6297, column: 27, scope: !10799)
!10801 = !DILocation(line: 6297, column: 36, scope: !10799)
!10802 = !DILocation(line: 6297, column: 5, scope: !10803)
!10803 = !DILexicalBlockFile(scope: !10799, file: !1, discriminator: 1)
!10804 = !DILocation(line: 6299, column: 5, scope: !10799)
!10805 = !DILocation(line: 6301, column: 22, scope: !10784)
!10806 = !DILocation(line: 6301, column: 31, scope: !10784)
!10807 = !DILocation(line: 6301, column: 35, scope: !10784)
!10808 = !DILocation(line: 6301, column: 17, scope: !10784)
!10809 = !DILocation(line: 6301, column: 4, scope: !10784)
!10810 = !DILocation(line: 6301, column: 8, scope: !10784)
!10811 = !DILocation(line: 6301, column: 15, scope: !10784)
!10812 = !DILocation(line: 6302, column: 8, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10784, file: !1, line: 6302, column: 8)
!10814 = !DILocation(line: 6302, column: 12, scope: !10813)
!10815 = !DILocation(line: 6302, column: 27, scope: !10813)
!10816 = !DILocation(line: 6302, column: 31, scope: !10813)
!10817 = !DILocation(line: 6302, column: 37, scope: !10813)
!10818 = !DILocation(line: 6302, column: 46, scope: !10813)
!10819 = !DILocation(line: 6302, column: 22, scope: !10813)
!10820 = !DILocation(line: 6302, column: 19, scope: !10813)
!10821 = !DILocation(line: 6302, column: 8, scope: !10784)
!10822 = !DILocation(line: 6303, column: 14, scope: !10813)
!10823 = !DILocation(line: 6303, column: 18, scope: !10813)
!10824 = !DILocation(line: 6303, column: 12, scope: !10813)
!10825 = !DILocation(line: 6303, column: 5, scope: !10813)
!10826 = !DILocation(line: 6304, column: 3, scope: !10784)
!10827 = !DILocation(line: 6305, column: 22, scope: !10775)
!10828 = !DILocation(line: 6305, column: 26, scope: !10775)
!10829 = !DILocation(line: 6305, column: 32, scope: !10775)
!10830 = !DILocation(line: 6305, column: 41, scope: !10775)
!10831 = !DILocation(line: 6305, column: 17, scope: !10775)
!10832 = !DILocation(line: 6305, column: 4, scope: !10775)
!10833 = !DILocation(line: 6305, column: 8, scope: !10775)
!10834 = !DILocation(line: 6305, column: 15, scope: !10775)
!10835 = !DILocation(line: 6309, column: 7, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6309, column: 7)
!10837 = !DILocation(line: 6309, column: 18, scope: !10836)
!10838 = !DILocation(line: 6310, column: 7, scope: !10836)
!10839 = !DILocation(line: 6310, column: 10, scope: !10840)
!10840 = !DILexicalBlockFile(scope: !10836, file: !1, discriminator: 1)
!10841 = !DILocation(line: 6310, column: 14, scope: !10840)
!10842 = !DILocation(line: 6310, column: 21, scope: !10840)
!10843 = !DILocation(line: 6311, column: 7, scope: !10836)
!10844 = !DILocation(line: 6311, column: 10, scope: !10840)
!10845 = !DILocation(line: 6311, column: 23, scope: !10840)
!10846 = !DILocation(line: 6311, column: 27, scope: !10840)
!10847 = !DILocation(line: 6311, column: 21, scope: !10840)
!10848 = !DILocation(line: 6311, column: 34, scope: !10840)
!10849 = !DILocation(line: 6309, column: 7, scope: !10726)
!10850 = !DILocation(line: 6312, column: 23, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10836, file: !1, line: 6311, column: 41)
!10852 = !DILocation(line: 6312, column: 26, scope: !10851)
!10853 = !DILocation(line: 6316, column: 31, scope: !10851)
!10854 = !DILocation(line: 6316, column: 35, scope: !10851)
!10855 = !DILocation(line: 6316, column: 41, scope: !10851)
!10856 = !DILocation(line: 6316, column: 8, scope: !10851)
!10857 = !DILocation(line: 6317, column: 13, scope: !10851)
!10858 = !DILocation(line: 6317, column: 8, scope: !10851)
!10859 = !DILocation(line: 6317, column: 30, scope: !10851)
!10860 = !DILocation(line: 6317, column: 34, scope: !10851)
!10861 = !DILocation(line: 6312, column: 4, scope: !10851)
!10862 = !DILocation(line: 6318, column: 4, scope: !10851)
!10863 = !DILocation(line: 6323, column: 7, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10663, file: !1, line: 6323, column: 7)
!10865 = !DILocation(line: 6323, column: 12, scope: !10864)
!10866 = !DILocation(line: 6323, column: 9, scope: !10864)
!10867 = !DILocation(line: 6323, column: 7, scope: !10663)
!10868 = !DILocation(line: 6324, column: 11, scope: !10864)
!10869 = !DILocation(line: 6324, column: 19, scope: !10864)
!10870 = !DILocation(line: 6324, column: 9, scope: !10864)
!10871 = !DILocation(line: 6324, column: 4, scope: !10864)
!10872 = !DILocation(line: 6325, column: 12, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10864, file: !1, line: 6325, column: 12)
!10874 = !DILocation(line: 6325, column: 17, scope: !10873)
!10875 = !DILocation(line: 6325, column: 22, scope: !10873)
!10876 = !DILocation(line: 6325, column: 14, scope: !10873)
!10877 = !DILocation(line: 6325, column: 12, scope: !10864)
!10878 = !DILocation(line: 6326, column: 11, scope: !10873)
!10879 = !DILocation(line: 6326, column: 19, scope: !10873)
!10880 = !DILocation(line: 6326, column: 9, scope: !10873)
!10881 = !DILocation(line: 6326, column: 4, scope: !10873)
!10882 = !DILocation(line: 6327, column: 12, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10873, file: !1, line: 6327, column: 12)
!10884 = !DILocation(line: 6327, column: 17, scope: !10883)
!10885 = !DILocation(line: 6327, column: 22, scope: !10883)
!10886 = !DILocation(line: 6327, column: 14, scope: !10883)
!10887 = !DILocation(line: 6327, column: 12, scope: !10873)
!10888 = !DILocation(line: 6328, column: 11, scope: !10883)
!10889 = !DILocation(line: 6328, column: 19, scope: !10883)
!10890 = !DILocation(line: 6328, column: 9, scope: !10883)
!10891 = !DILocation(line: 6328, column: 4, scope: !10883)
!10892 = !DILocation(line: 6330, column: 11, scope: !10883)
!10893 = !DILocation(line: 6330, column: 9, scope: !10883)
!10894 = !DILocation(line: 6332, column: 16, scope: !10663)
!10895 = !DILocation(line: 6332, column: 21, scope: !10663)
!10896 = !DILocation(line: 6332, column: 25, scope: !10663)
!10897 = !DILocation(line: 6332, column: 33, scope: !10663)
!10898 = !DILocation(line: 6332, column: 3, scope: !10663)
!10899 = !DILocation(line: 6333, column: 2, scope: !10663)
!10900 = !DILocation(line: 6254, column: 53, scope: !10901)
!10901 = !DILexicalBlockFile(scope: !10659, file: !1, discriminator: 2)
!10902 = !DILocation(line: 6254, column: 57, scope: !10901)
!10903 = !DILocation(line: 6254, column: 51, scope: !10901)
!10904 = !DILocation(line: 6254, column: 2, scope: !10901)
!10905 = !DILocation(line: 6336, column: 14, scope: !737)
!10906 = !DILocation(line: 6336, column: 2, scope: !737)
!10907 = !DILocation(line: 6338, column: 2, scope: !737)
!10908 = !DILocation(line: 6339, column: 1, scope: !737)
!10909 = !DILocalVariable(name: "a", arg: 1, scope: !770, file: !1, line: 5974, type: !367)
!10910 = !DILocation(line: 5974, column: 53, scope: !770)
!10911 = !DILocalVariable(name: "isoent", arg: 2, scope: !770, file: !1, line: 5974, type: !76)
!10912 = !DILocation(line: 5974, column: 71, scope: !770)
!10913 = !DILocalVariable(name: "idr", arg: 3, scope: !770, file: !1, line: 5975, type: !715)
!10914 = !DILocation(line: 5975, column: 17, scope: !770)
!10915 = !DILocalVariable(name: "iso9660", scope: !770, file: !1, line: 5977, type: !530)
!10916 = !DILocation(line: 5977, column: 18, scope: !770)
!10917 = !DILocalVariable(name: "np", scope: !770, file: !1, line: 5978, type: !76)
!10918 = !DILocation(line: 5978, column: 17, scope: !770)
!10919 = !DILocalVariable(name: "p", scope: !770, file: !1, line: 5979, type: !20)
!10920 = !DILocation(line: 5979, column: 8, scope: !770)
!10921 = !DILocalVariable(name: "l", scope: !770, file: !1, line: 5980, type: !31)
!10922 = !DILocation(line: 5980, column: 6, scope: !770)
!10923 = !DILocalVariable(name: "r", scope: !770, file: !1, line: 5980, type: !31)
!10924 = !DILocation(line: 5980, column: 9, scope: !770)
!10925 = !DILocalVariable(name: "char_map", scope: !770, file: !1, line: 5981, type: !429)
!10926 = !DILocation(line: 5981, column: 14, scope: !770)
!10927 = !DILocalVariable(name: "allow_ldots", scope: !770, file: !1, line: 5982, type: !21)
!10928 = !DILocation(line: 5982, column: 7, scope: !770)
!10929 = !DILocalVariable(name: "allow_multidot", scope: !770, file: !1, line: 5982, type: !21)
!10930 = !DILocation(line: 5982, column: 20, scope: !770)
!10931 = !DILocalVariable(name: "allow_period", scope: !770, file: !1, line: 5982, type: !21)
!10932 = !DILocation(line: 5982, column: 36, scope: !770)
!10933 = !DILocalVariable(name: "allow_vernum", scope: !770, file: !1, line: 5982, type: !21)
!10934 = !DILocation(line: 5982, column: 50, scope: !770)
!10935 = !DILocalVariable(name: "fnmax", scope: !770, file: !1, line: 5983, type: !31)
!10936 = !DILocation(line: 5983, column: 6, scope: !770)
!10937 = !DILocalVariable(name: "ffmax", scope: !770, file: !1, line: 5983, type: !31)
!10938 = !DILocation(line: 5983, column: 13, scope: !770)
!10939 = !DILocalVariable(name: "dnmax", scope: !770, file: !1, line: 5983, type: !31)
!10940 = !DILocation(line: 5983, column: 20, scope: !770)
!10941 = !DILocation(line: 5988, column: 6, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !770, file: !1, line: 5988, column: 6)
!10943 = !DILocation(line: 5988, column: 14, scope: !10942)
!10944 = !DILocation(line: 5988, column: 23, scope: !10942)
!10945 = !DILocation(line: 5988, column: 27, scope: !10942)
!10946 = !DILocation(line: 5988, column: 6, scope: !770)
!10947 = !DILocation(line: 5989, column: 3, scope: !10942)
!10948 = !DILocation(line: 5991, column: 12, scope: !770)
!10949 = !DILocation(line: 5991, column: 15, scope: !770)
!10950 = !DILocation(line: 5991, column: 10, scope: !770)
!10951 = !DILocation(line: 5992, column: 13, scope: !770)
!10952 = !DILocation(line: 5992, column: 18, scope: !770)
!10953 = !DILocation(line: 5992, column: 11, scope: !770)
!10954 = !DILocation(line: 5993, column: 6, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !770, file: !1, line: 5993, column: 6)
!10956 = !DILocation(line: 5993, column: 15, scope: !10955)
!10957 = !DILocation(line: 5993, column: 19, scope: !10955)
!10958 = !DILocation(line: 5993, column: 29, scope: !10955)
!10959 = !DILocation(line: 5993, column: 6, scope: !770)
!10960 = !DILocation(line: 5994, column: 15, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10955, file: !1, line: 5993, column: 35)
!10962 = !DILocation(line: 5995, column: 18, scope: !10961)
!10963 = !DILocation(line: 5996, column: 16, scope: !10961)
!10964 = !DILocation(line: 5997, column: 18, scope: !10961)
!10965 = !DILocation(line: 5997, column: 27, scope: !10961)
!10966 = !DILocation(line: 5997, column: 31, scope: !10961)
!10967 = !DILocation(line: 5997, column: 16, scope: !10961)
!10968 = !DILocation(line: 5998, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10961, file: !1, line: 5998, column: 7)
!10970 = !DILocation(line: 5998, column: 16, scope: !10969)
!10971 = !DILocation(line: 5998, column: 20, scope: !10969)
!10972 = !DILocation(line: 5998, column: 30, scope: !10969)
!10973 = !DILocation(line: 5998, column: 7, scope: !10961)
!10974 = !DILocation(line: 5999, column: 10, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10969, file: !1, line: 5998, column: 36)
!10976 = !DILocation(line: 6000, column: 10, scope: !10975)
!10977 = !DILocation(line: 6001, column: 10, scope: !10975)
!10978 = !DILocation(line: 6002, column: 3, scope: !10975)
!10979 = !DILocation(line: 6003, column: 10, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10969, file: !1, line: 6002, column: 10)
!10981 = !DILocation(line: 6004, column: 10, scope: !10980)
!10982 = !DILocation(line: 6005, column: 10, scope: !10980)
!10983 = !DILocation(line: 6007, column: 2, scope: !10961)
!10984 = !DILocation(line: 6008, column: 32, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10955, file: !1, line: 6007, column: 9)
!10986 = !DILocation(line: 6008, column: 15, scope: !10985)
!10987 = !DILocation(line: 6009, column: 31, scope: !10985)
!10988 = !DILocation(line: 6009, column: 16, scope: !10985)
!10989 = !DILocation(line: 6010, column: 7, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10985, file: !1, line: 6010, column: 7)
!10991 = !DILocation(line: 6010, column: 16, scope: !10990)
!10992 = !DILocation(line: 6010, column: 20, scope: !10990)
!10993 = !DILocation(line: 6010, column: 7, scope: !10985)
!10994 = !DILocation(line: 6017, column: 26, scope: !10990)
!10995 = !DILocation(line: 6017, column: 18, scope: !10990)
!10996 = !DILocation(line: 6017, column: 10, scope: !10990)
!10997 = !DILocation(line: 6017, column: 4, scope: !10990)
!10998 = !DILocation(line: 6024, column: 26, scope: !10990)
!10999 = !DILocation(line: 6024, column: 18, scope: !10990)
!11000 = !DILocation(line: 6024, column: 10, scope: !10990)
!11001 = !DILocation(line: 6027, column: 16, scope: !770)
!11002 = !DILocation(line: 6027, column: 19, scope: !770)
!11003 = !DILocation(line: 6027, column: 24, scope: !770)
!11004 = !DILocation(line: 6027, column: 32, scope: !770)
!11005 = !DILocation(line: 6027, column: 41, scope: !770)
!11006 = !DILocation(line: 6027, column: 46, scope: !770)
!11007 = !DILocation(line: 6027, column: 6, scope: !770)
!11008 = !DILocation(line: 6027, column: 4, scope: !770)
!11009 = !DILocation(line: 6028, column: 6, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !770, file: !1, line: 6028, column: 6)
!11011 = !DILocation(line: 6028, column: 8, scope: !11010)
!11012 = !DILocation(line: 6028, column: 6, scope: !770)
!11013 = !DILocation(line: 6029, column: 11, scope: !11010)
!11014 = !DILocation(line: 6029, column: 3, scope: !11010)
!11015 = !DILocation(line: 6031, column: 12, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !770, file: !1, line: 6031, column: 2)
!11017 = !DILocation(line: 6031, column: 20, scope: !11016)
!11018 = !DILocation(line: 6031, column: 29, scope: !11016)
!11019 = !DILocation(line: 6031, column: 10, scope: !11016)
!11020 = !DILocation(line: 6031, column: 7, scope: !11016)
!11021 = !DILocation(line: 6031, column: 36, scope: !11022)
!11022 = !DILexicalBlockFile(scope: !11023, file: !1, discriminator: 1)
!11023 = distinct !DILexicalBlock(scope: !11016, file: !1, line: 6031, column: 2)
!11024 = !DILocation(line: 6031, column: 39, scope: !11022)
!11025 = !DILocation(line: 6031, column: 2, scope: !11022)
!11026 = !DILocalVariable(name: "dot", scope: !11027, file: !1, line: 6032, type: !20)
!11027 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 6031, column: 65)
!11028 = !DILocation(line: 6032, column: 9, scope: !11027)
!11029 = !DILocalVariable(name: "xdot", scope: !11027, file: !1, line: 6032, type: !20)
!11030 = !DILocation(line: 6032, column: 15, scope: !11027)
!11031 = !DILocalVariable(name: "ext_off", scope: !11027, file: !1, line: 6033, type: !31)
!11032 = !DILocation(line: 6033, column: 7, scope: !11027)
!11033 = !DILocalVariable(name: "noff", scope: !11027, file: !1, line: 6033, type: !31)
!11034 = !DILocation(line: 6033, column: 16, scope: !11027)
!11035 = !DILocalVariable(name: "weight", scope: !11027, file: !1, line: 6033, type: !31)
!11036 = !DILocation(line: 6033, column: 22, scope: !11027)
!11037 = !DILocation(line: 6035, column: 12, scope: !11027)
!11038 = !DILocation(line: 6035, column: 16, scope: !11027)
!11039 = !DILocation(line: 6035, column: 22, scope: !11027)
!11040 = !DILocation(line: 6035, column: 31, scope: !11027)
!11041 = !DILocation(line: 6035, column: 7, scope: !11027)
!11042 = !DILocation(line: 6035, column: 5, scope: !11027)
!11043 = !DILocation(line: 6036, column: 14, scope: !11027)
!11044 = !DILocation(line: 6036, column: 15, scope: !11027)
!11045 = !DILocation(line: 6036, column: 18, scope: !11027)
!11046 = !DILocation(line: 6036, column: 20, scope: !11027)
!11047 = !DILocation(line: 6036, column: 7, scope: !11027)
!11048 = !DILocation(line: 6036, column: 5, scope: !11027)
!11049 = !DILocation(line: 6037, column: 7, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11027, file: !1, line: 6037, column: 7)
!11051 = !DILocation(line: 6037, column: 9, scope: !11050)
!11052 = !DILocation(line: 6037, column: 7, scope: !11027)
!11053 = !DILocation(line: 6038, column: 23, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11050, file: !1, line: 6037, column: 18)
!11055 = !DILocation(line: 6038, column: 26, scope: !11054)
!11056 = !DILocation(line: 6038, column: 4, scope: !11054)
!11057 = !DILocation(line: 6040, column: 4, scope: !11054)
!11058 = !DILocation(line: 6042, column: 10, scope: !11027)
!11059 = !DILocation(line: 6042, column: 13, scope: !11027)
!11060 = !DILocation(line: 6042, column: 17, scope: !11027)
!11061 = !DILocation(line: 6042, column: 23, scope: !11027)
!11062 = !DILocation(line: 6042, column: 32, scope: !11027)
!11063 = !DILocation(line: 6042, column: 35, scope: !11027)
!11064 = !DILocation(line: 6042, column: 3, scope: !11027)
!11065 = !DILocation(line: 6043, column: 5, scope: !11027)
!11066 = !DILocation(line: 6043, column: 3, scope: !11027)
!11067 = !DILocation(line: 6043, column: 8, scope: !11027)
!11068 = !DILocation(line: 6044, column: 20, scope: !11027)
!11069 = !DILocation(line: 6044, column: 3, scope: !11027)
!11070 = !DILocation(line: 6044, column: 7, scope: !11027)
!11071 = !DILocation(line: 6044, column: 18, scope: !11027)
!11072 = !DILocation(line: 6046, column: 14, scope: !11027)
!11073 = !DILocation(line: 6046, column: 7, scope: !11027)
!11074 = !DILocation(line: 6047, column: 8, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11027, file: !1, line: 6047, column: 7)
!11076 = !DILocation(line: 6047, column: 7, scope: !11027)
!11077 = !DILocation(line: 6052, column: 9, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !1, line: 6052, column: 8)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !1, line: 6047, column: 21)
!11080 = !DILocation(line: 6052, column: 8, scope: !11078)
!11081 = !DILocation(line: 6052, column: 11, scope: !11078)
!11082 = !DILocation(line: 6052, column: 8, scope: !11079)
!11083 = !DILocation(line: 6053, column: 7, scope: !11078)
!11084 = !DILocation(line: 6053, column: 10, scope: !11078)
!11085 = !DILocation(line: 6053, column: 5, scope: !11078)
!11086 = !DILocation(line: 6054, column: 3, scope: !11079)
!11087 = !DILocation(line: 6055, column: 3, scope: !11027)
!11088 = !DILocation(line: 6055, column: 10, scope: !11089)
!11089 = !DILexicalBlockFile(scope: !11090, file: !1, discriminator: 1)
!11090 = distinct !DILexicalBlock(scope: !11091, file: !1, line: 6055, column: 3)
!11091 = distinct !DILexicalBlock(scope: !11027, file: !1, line: 6055, column: 3)
!11092 = !DILocation(line: 6055, column: 9, scope: !11089)
!11093 = !DILocation(line: 6055, column: 3, scope: !11089)
!11094 = !DILocation(line: 6056, column: 9, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 6056, column: 8)
!11096 = distinct !DILexicalBlock(scope: !11090, file: !1, line: 6055, column: 18)
!11097 = !DILocation(line: 6056, column: 8, scope: !11095)
!11098 = !DILocation(line: 6056, column: 11, scope: !11095)
!11099 = !DILocation(line: 6056, column: 8, scope: !11096)
!11100 = !DILocation(line: 6057, column: 6, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11095, file: !1, line: 6056, column: 19)
!11102 = !DILocation(line: 6057, column: 8, scope: !11101)
!11103 = !DILocation(line: 6058, column: 5, scope: !11101)
!11104 = !DILocation(line: 6060, column: 33, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 6060, column: 8)
!11106 = !DILocation(line: 6060, column: 32, scope: !11105)
!11107 = !DILocation(line: 6060, column: 8, scope: !11105)
!11108 = !DILocation(line: 6060, column: 8, scope: !11096)
!11109 = !DILocation(line: 6063, column: 10, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !1, line: 6063, column: 9)
!11111 = distinct !DILexicalBlock(scope: !11105, file: !1, line: 6060, column: 37)
!11112 = !DILocation(line: 6063, column: 9, scope: !11110)
!11113 = !DILocation(line: 6063, column: 12, scope: !11110)
!11114 = !DILocation(line: 6063, column: 9, scope: !11111)
!11115 = !DILocation(line: 6064, column: 13, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11110, file: !1, line: 6063, column: 20)
!11117 = !DILocation(line: 6064, column: 11, scope: !11116)
!11118 = !DILocation(line: 6065, column: 12, scope: !11116)
!11119 = !DILocation(line: 6065, column: 10, scope: !11116)
!11120 = !DILocation(line: 6066, column: 5, scope: !11116)
!11121 = !DILocation(line: 6067, column: 5, scope: !11111)
!11122 = !DILocation(line: 6069, column: 9, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 6069, column: 8)
!11124 = !DILocation(line: 6069, column: 8, scope: !11123)
!11125 = !DILocation(line: 6069, column: 11, scope: !11123)
!11126 = !DILocation(line: 6069, column: 18, scope: !11123)
!11127 = !DILocation(line: 6069, column: 22, scope: !11128)
!11128 = !DILexicalBlockFile(scope: !11123, file: !1, discriminator: 1)
!11129 = !DILocation(line: 6069, column: 21, scope: !11128)
!11130 = !DILocation(line: 6069, column: 24, scope: !11128)
!11131 = !DILocation(line: 6069, column: 8, scope: !11128)
!11132 = !DILocation(line: 6070, column: 6, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11123, file: !1, line: 6069, column: 32)
!11134 = !DILocation(line: 6070, column: 8, scope: !11133)
!11135 = !DILocation(line: 6071, column: 5, scope: !11133)
!11136 = !DILocation(line: 6073, column: 9, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11096, file: !1, line: 6073, column: 8)
!11138 = !DILocation(line: 6073, column: 8, scope: !11137)
!11139 = !DILocation(line: 6073, column: 11, scope: !11137)
!11140 = !DILocation(line: 6073, column: 8, scope: !11096)
!11141 = !DILocation(line: 6074, column: 12, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !1, line: 6073, column: 19)
!11143 = !DILocation(line: 6074, column: 10, scope: !11142)
!11144 = !DILocation(line: 6075, column: 11, scope: !11142)
!11145 = !DILocation(line: 6075, column: 9, scope: !11142)
!11146 = !DILocation(line: 6076, column: 9, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 6076, column: 9)
!11148 = !DILocation(line: 6076, column: 9, scope: !11142)
!11149 = !DILocation(line: 6077, column: 6, scope: !11147)
!11150 = !DILocation(line: 6078, column: 4, scope: !11142)
!11151 = !DILocation(line: 6079, column: 5, scope: !11096)
!11152 = !DILocation(line: 6079, column: 7, scope: !11096)
!11153 = !DILocation(line: 6080, column: 3, scope: !11096)
!11154 = !DILocation(line: 6055, column: 14, scope: !11155)
!11155 = !DILexicalBlockFile(scope: !11090, file: !1, discriminator: 2)
!11156 = !DILocation(line: 6055, column: 3, scope: !11155)
!11157 = !DILocation(line: 6081, column: 7, scope: !11027)
!11158 = !DILocation(line: 6081, column: 11, scope: !11027)
!11159 = !DILocation(line: 6081, column: 5, scope: !11027)
!11160 = !DILocation(line: 6082, column: 10, scope: !11027)
!11161 = !DILocation(line: 6083, column: 7, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11027, file: !1, line: 6083, column: 7)
!11163 = !DILocation(line: 6083, column: 11, scope: !11162)
!11164 = !DILocation(line: 6083, column: 7, scope: !11027)
!11165 = !DILocalVariable(name: "nammax", scope: !11166, file: !1, line: 6084, type: !31)
!11166 = distinct !DILexicalBlock(scope: !11162, file: !1, line: 6083, column: 20)
!11167 = !DILocation(line: 6084, column: 8, scope: !11166)
!11168 = !DILocation(line: 6086, column: 8, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11166, file: !1, line: 6086, column: 8)
!11170 = !DILocation(line: 6086, column: 12, scope: !11169)
!11171 = !DILocation(line: 6086, column: 8, scope: !11166)
!11172 = !DILocation(line: 6087, column: 14, scope: !11169)
!11173 = !DILocation(line: 6087, column: 12, scope: !11169)
!11174 = !DILocation(line: 6087, column: 5, scope: !11169)
!11175 = !DILocation(line: 6089, column: 14, scope: !11169)
!11176 = !DILocation(line: 6089, column: 12, scope: !11169)
!11177 = !DILocation(line: 6091, column: 8, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11166, file: !1, line: 6091, column: 8)
!11179 = !DILocation(line: 6091, column: 12, scope: !11178)
!11180 = !DILocation(line: 6091, column: 10, scope: !11178)
!11181 = !DILocation(line: 6091, column: 8, scope: !11166)
!11182 = !DILocation(line: 6092, column: 7, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11178, file: !1, line: 6091, column: 20)
!11184 = !DILocation(line: 6092, column: 5, scope: !11183)
!11185 = !DILocation(line: 6092, column: 15, scope: !11183)
!11186 = !DILocation(line: 6093, column: 14, scope: !11183)
!11187 = !DILocation(line: 6093, column: 12, scope: !11183)
!11188 = !DILocation(line: 6094, column: 15, scope: !11183)
!11189 = !DILocation(line: 6094, column: 13, scope: !11183)
!11190 = !DILocation(line: 6095, column: 4, scope: !11183)
!11191 = !DILocation(line: 6096, column: 15, scope: !11178)
!11192 = !DILocation(line: 6096, column: 13, scope: !11178)
!11193 = !DILocation(line: 6097, column: 3, scope: !11166)
!11194 = !DILocation(line: 6098, column: 5, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11162, file: !1, line: 6097, column: 10)
!11196 = !DILocation(line: 6098, column: 9, scope: !11195)
!11197 = !DILocation(line: 6099, column: 20, scope: !11195)
!11198 = !DILocation(line: 6099, column: 26, scope: !11195)
!11199 = !DILocation(line: 6099, column: 24, scope: !11195)
!11200 = !DILocation(line: 6099, column: 14, scope: !11195)
!11201 = !DILocation(line: 6099, column: 12, scope: !11195)
!11202 = !DILocation(line: 6101, column: 8, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11195, file: !1, line: 6101, column: 8)
!11204 = !DILocation(line: 6101, column: 17, scope: !11203)
!11205 = !DILocation(line: 6101, column: 21, scope: !11203)
!11206 = !DILocation(line: 6101, column: 31, scope: !11203)
!11207 = !DILocation(line: 6101, column: 8, scope: !11195)
!11208 = !DILocation(line: 6102, column: 9, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !1, line: 6102, column: 9)
!11210 = distinct !DILexicalBlock(scope: !11203, file: !1, line: 6101, column: 37)
!11211 = !DILocation(line: 6102, column: 15, scope: !11209)
!11212 = !DILocation(line: 6102, column: 13, scope: !11209)
!11213 = !DILocation(line: 6102, column: 17, scope: !11209)
!11214 = !DILocation(line: 6102, column: 9, scope: !11210)
!11215 = !DILocation(line: 6103, column: 17, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !1, line: 6103, column: 10)
!11217 = distinct !DILexicalBlock(scope: !11209, file: !1, line: 6102, column: 23)
!11218 = !DILocation(line: 6103, column: 10, scope: !11216)
!11219 = !DILocation(line: 6103, column: 22, scope: !11216)
!11220 = !DILocation(line: 6103, column: 10, scope: !11217)
!11221 = !DILocation(line: 6106, column: 7, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11216, file: !1, line: 6103, column: 27)
!11223 = !DILocation(line: 6106, column: 14, scope: !11222)
!11224 = !DILocation(line: 6107, column: 14, scope: !11222)
!11225 = !DILocation(line: 6108, column: 6, scope: !11222)
!11226 = !DILocation(line: 6109, column: 5, scope: !11217)
!11227 = !DILocation(line: 6110, column: 13, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11209, file: !1, line: 6109, column: 12)
!11229 = !DILocation(line: 6110, column: 6, scope: !11228)
!11230 = !DILocation(line: 6110, column: 11, scope: !11228)
!11231 = !DILocation(line: 6111, column: 13, scope: !11228)
!11232 = !DILocation(line: 6111, column: 6, scope: !11228)
!11233 = !DILocation(line: 6111, column: 11, scope: !11228)
!11234 = !DILocation(line: 6112, column: 14, scope: !11228)
!11235 = !DILocation(line: 6112, column: 6, scope: !11228)
!11236 = !DILocation(line: 6112, column: 12, scope: !11228)
!11237 = !DILocation(line: 6113, column: 14, scope: !11228)
!11238 = !DILocation(line: 6113, column: 6, scope: !11228)
!11239 = !DILocation(line: 6113, column: 12, scope: !11228)
!11240 = !DILocation(line: 6114, column: 6, scope: !11228)
!11241 = !DILocation(line: 6114, column: 12, scope: !11228)
!11242 = !DILocation(line: 6115, column: 13, scope: !11228)
!11243 = !DILocation(line: 6116, column: 14, scope: !11228)
!11244 = !DILocation(line: 6118, column: 4, scope: !11210)
!11245 = !DILocation(line: 6118, column: 15, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !11247, file: !1, discriminator: 1)
!11247 = distinct !DILexicalBlock(scope: !11203, file: !1, line: 6118, column: 15)
!11248 = !DILocation(line: 6118, column: 19, scope: !11246)
!11249 = !DILocation(line: 6119, column: 9, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !1, line: 6119, column: 9)
!11251 = distinct !DILexicalBlock(scope: !11247, file: !1, line: 6118, column: 24)
!11252 = !DILocation(line: 6119, column: 13, scope: !11250)
!11253 = !DILocation(line: 6119, column: 11, scope: !11250)
!11254 = !DILocation(line: 6119, column: 9, scope: !11251)
!11255 = !DILocation(line: 6120, column: 8, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11250, file: !1, line: 6119, column: 20)
!11257 = !DILocation(line: 6120, column: 6, scope: !11256)
!11258 = !DILocation(line: 6120, column: 15, scope: !11256)
!11259 = !DILocation(line: 6121, column: 15, scope: !11256)
!11260 = !DILocation(line: 6121, column: 13, scope: !11256)
!11261 = !DILocation(line: 6122, column: 10, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11256, file: !1, line: 6122, column: 10)
!11263 = !DILocation(line: 6122, column: 20, scope: !11262)
!11264 = !DILocation(line: 6122, column: 18, scope: !11262)
!11265 = !DILocation(line: 6122, column: 10, scope: !11256)
!11266 = !DILocation(line: 6123, column: 17, scope: !11262)
!11267 = !DILocation(line: 6123, column: 15, scope: !11262)
!11268 = !DILocation(line: 6123, column: 7, scope: !11262)
!11269 = !DILocation(line: 6124, column: 5, scope: !11256)
!11270 = !DILocation(line: 6125, column: 4, scope: !11251)
!11271 = !DILocation(line: 6125, column: 15, scope: !11272)
!11272 = !DILexicalBlockFile(scope: !11273, file: !1, discriminator: 1)
!11273 = distinct !DILexicalBlock(scope: !11247, file: !1, line: 6125, column: 15)
!11274 = !DILocation(line: 6125, column: 19, scope: !11272)
!11275 = !DILocation(line: 6125, column: 17, scope: !11272)
!11276 = !DILocalVariable(name: "extlen", scope: !11277, file: !1, line: 6126, type: !31)
!11277 = distinct !DILexicalBlock(scope: !11273, file: !1, line: 6125, column: 26)
!11278 = !DILocation(line: 6126, column: 9, scope: !11277)
!11279 = !DILocation(line: 6126, column: 30, scope: !11277)
!11280 = !DILocation(line: 6126, column: 23, scope: !11277)
!11281 = !DILocation(line: 6126, column: 18, scope: !11277)
!11282 = !DILocalVariable(name: "xdoff", scope: !11277, file: !1, line: 6127, type: !31)
!11283 = !DILocation(line: 6127, column: 9, scope: !11277)
!11284 = !DILocation(line: 6129, column: 9, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11277, file: !1, line: 6129, column: 9)
!11286 = !DILocation(line: 6129, column: 14, scope: !11285)
!11287 = !DILocation(line: 6129, column: 9, scope: !11277)
!11288 = !DILocation(line: 6130, column: 20, scope: !11285)
!11289 = !DILocation(line: 6130, column: 27, scope: !11285)
!11290 = !DILocation(line: 6130, column: 25, scope: !11285)
!11291 = !DILocation(line: 6130, column: 14, scope: !11285)
!11292 = !DILocation(line: 6130, column: 12, scope: !11285)
!11293 = !DILocation(line: 6130, column: 6, scope: !11285)
!11294 = !DILocation(line: 6132, column: 12, scope: !11285)
!11295 = !DILocation(line: 6134, column: 9, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11277, file: !1, line: 6134, column: 9)
!11297 = !DILocation(line: 6134, column: 16, scope: !11296)
!11298 = !DILocation(line: 6134, column: 20, scope: !11296)
!11299 = !DILocation(line: 6134, column: 23, scope: !11300)
!11300 = !DILexicalBlockFile(scope: !11296, file: !1, discriminator: 1)
!11301 = !DILocation(line: 6134, column: 31, scope: !11300)
!11302 = !DILocation(line: 6134, column: 36, scope: !11300)
!11303 = !DILocation(line: 6134, column: 29, scope: !11300)
!11304 = !DILocation(line: 6134, column: 9, scope: !11300)
!11305 = !DILocalVariable(name: "off", scope: !11306, file: !1, line: 6135, type: !31)
!11306 = distinct !DILexicalBlock(scope: !11296, file: !1, line: 6134, column: 40)
!11307 = !DILocation(line: 6135, column: 10, scope: !11306)
!11308 = !DILocation(line: 6137, column: 10, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11306, file: !1, line: 6137, column: 10)
!11310 = !DILocation(line: 6137, column: 19, scope: !11309)
!11311 = !DILocation(line: 6137, column: 17, scope: !11309)
!11312 = !DILocation(line: 6137, column: 10, scope: !11306)
!11313 = !DILocation(line: 6138, column: 16, scope: !11309)
!11314 = !DILocation(line: 6138, column: 14, scope: !11309)
!11315 = !DILocation(line: 6138, column: 7, scope: !11309)
!11316 = !DILocation(line: 6139, column: 12, scope: !11306)
!11317 = !DILocation(line: 6139, column: 20, scope: !11306)
!11318 = !DILocation(line: 6139, column: 18, scope: !11306)
!11319 = !DILocation(line: 6139, column: 10, scope: !11306)
!11320 = !DILocation(line: 6140, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11306, file: !1, line: 6140, column: 10)
!11322 = !DILocation(line: 6140, column: 14, scope: !11321)
!11323 = !DILocation(line: 6140, column: 10, scope: !11306)
!11324 = !DILocation(line: 6144, column: 11, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11321, file: !1, line: 6140, column: 20)
!11326 = !DILocation(line: 6145, column: 14, scope: !11325)
!11327 = !DILocation(line: 6146, column: 6, scope: !11325)
!11328 = !DILocation(line: 6147, column: 14, scope: !11306)
!11329 = !DILocation(line: 6147, column: 16, scope: !11306)
!11330 = !DILocation(line: 6147, column: 15, scope: !11306)
!11331 = !DILocation(line: 6147, column: 21, scope: !11306)
!11332 = !DILocation(line: 6147, column: 26, scope: !11306)
!11333 = !DILocation(line: 6147, column: 6, scope: !11306)
!11334 = !DILocation(line: 6148, column: 8, scope: !11306)
!11335 = !DILocation(line: 6148, column: 6, scope: !11306)
!11336 = !DILocation(line: 6148, column: 15, scope: !11306)
!11337 = !DILocation(line: 6149, column: 16, scope: !11306)
!11338 = !DILocation(line: 6149, column: 14, scope: !11306)
!11339 = !DILocation(line: 6150, column: 15, scope: !11306)
!11340 = !DILocation(line: 6150, column: 13, scope: !11306)
!11341 = !DILocation(line: 6158, column: 5, scope: !11306)
!11342 = !DILocation(line: 6159, column: 8, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11296, file: !1, line: 6158, column: 12)
!11344 = !DILocation(line: 6159, column: 6, scope: !11343)
!11345 = !DILocation(line: 6159, column: 15, scope: !11343)
!11346 = !DILocation(line: 6160, column: 16, scope: !11343)
!11347 = !DILocation(line: 6160, column: 14, scope: !11343)
!11348 = !DILocation(line: 6161, column: 15, scope: !11343)
!11349 = !DILocation(line: 6161, column: 13, scope: !11343)
!11350 = !DILocation(line: 6163, column: 4, scope: !11277)
!11351 = !DILocation(line: 6166, column: 17, scope: !11027)
!11352 = !DILocation(line: 6166, column: 3, scope: !11027)
!11353 = !DILocation(line: 6166, column: 7, scope: !11027)
!11354 = !DILocation(line: 6166, column: 15, scope: !11027)
!11355 = !DILocation(line: 6167, column: 32, scope: !11027)
!11356 = !DILocation(line: 6167, column: 30, scope: !11027)
!11357 = !DILocation(line: 6167, column: 22, scope: !11027)
!11358 = !DILocation(line: 6167, column: 17, scope: !11027)
!11359 = !DILocation(line: 6167, column: 3, scope: !11027)
!11360 = !DILocation(line: 6167, column: 7, scope: !11027)
!11361 = !DILocation(line: 6167, column: 15, scope: !11027)
!11362 = !DILocation(line: 6168, column: 20, scope: !11027)
!11363 = !DILocation(line: 6168, column: 30, scope: !11027)
!11364 = !DILocation(line: 6168, column: 34, scope: !11027)
!11365 = !DILocation(line: 6168, column: 28, scope: !11027)
!11366 = !DILocation(line: 6168, column: 18, scope: !11027)
!11367 = !DILocation(line: 6168, column: 3, scope: !11027)
!11368 = !DILocation(line: 6168, column: 7, scope: !11027)
!11369 = !DILocation(line: 6168, column: 14, scope: !11027)
!11370 = !DILocation(line: 6172, column: 7, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11027, file: !1, line: 6172, column: 7)
!11372 = !DILocation(line: 6172, column: 16, scope: !11371)
!11373 = !DILocation(line: 6172, column: 20, scope: !11371)
!11374 = !DILocation(line: 6172, column: 30, scope: !11371)
!11375 = !DILocation(line: 6172, column: 7, scope: !11027)
!11376 = !DILocation(line: 6173, column: 8, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !1, line: 6173, column: 8)
!11378 = distinct !DILexicalBlock(scope: !11371, file: !1, line: 6172, column: 36)
!11379 = !DILocation(line: 6173, column: 16, scope: !11377)
!11380 = !DILocation(line: 6173, column: 8, scope: !11378)
!11381 = !DILocation(line: 6174, column: 10, scope: !11377)
!11382 = !DILocation(line: 6174, column: 5, scope: !11377)
!11383 = !DILocation(line: 6176, column: 12, scope: !11377)
!11384 = !DILocation(line: 6176, column: 10, scope: !11377)
!11385 = !DILocation(line: 6177, column: 3, scope: !11378)
!11386 = !DILocation(line: 6178, column: 8, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !1, line: 6178, column: 8)
!11388 = distinct !DILexicalBlock(scope: !11371, file: !1, line: 6177, column: 10)
!11389 = !DILocation(line: 6178, column: 13, scope: !11387)
!11390 = !DILocation(line: 6178, column: 10, scope: !11387)
!11391 = !DILocation(line: 6178, column: 8, scope: !11388)
!11392 = !DILocation(line: 6179, column: 12, scope: !11387)
!11393 = !DILocation(line: 6179, column: 20, scope: !11387)
!11394 = !DILocation(line: 6179, column: 10, scope: !11387)
!11395 = !DILocation(line: 6179, column: 5, scope: !11387)
!11396 = !DILocation(line: 6180, column: 13, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11387, file: !1, line: 6180, column: 13)
!11398 = !DILocation(line: 6180, column: 18, scope: !11397)
!11399 = !DILocation(line: 6180, column: 23, scope: !11397)
!11400 = !DILocation(line: 6180, column: 15, scope: !11397)
!11401 = !DILocation(line: 6180, column: 13, scope: !11387)
!11402 = !DILocation(line: 6181, column: 12, scope: !11397)
!11403 = !DILocation(line: 6181, column: 20, scope: !11397)
!11404 = !DILocation(line: 6181, column: 10, scope: !11397)
!11405 = !DILocation(line: 6181, column: 5, scope: !11397)
!11406 = !DILocation(line: 6182, column: 13, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11397, file: !1, line: 6182, column: 13)
!11408 = !DILocation(line: 6182, column: 18, scope: !11407)
!11409 = !DILocation(line: 6182, column: 23, scope: !11407)
!11410 = !DILocation(line: 6182, column: 15, scope: !11407)
!11411 = !DILocation(line: 6182, column: 13, scope: !11397)
!11412 = !DILocation(line: 6183, column: 12, scope: !11407)
!11413 = !DILocation(line: 6183, column: 20, scope: !11407)
!11414 = !DILocation(line: 6183, column: 10, scope: !11407)
!11415 = !DILocation(line: 6183, column: 5, scope: !11407)
!11416 = !DILocation(line: 6185, column: 12, scope: !11407)
!11417 = !DILocation(line: 6185, column: 10, scope: !11407)
!11418 = !DILocation(line: 6188, column: 16, scope: !11027)
!11419 = !DILocation(line: 6188, column: 21, scope: !11027)
!11420 = !DILocation(line: 6188, column: 25, scope: !11027)
!11421 = !DILocation(line: 6188, column: 33, scope: !11027)
!11422 = !DILocation(line: 6188, column: 3, scope: !11027)
!11423 = !DILocation(line: 6189, column: 2, scope: !11027)
!11424 = !DILocation(line: 6031, column: 53, scope: !11425)
!11425 = !DILexicalBlockFile(scope: !11023, file: !1, discriminator: 2)
!11426 = !DILocation(line: 6031, column: 57, scope: !11425)
!11427 = !DILocation(line: 6031, column: 51, scope: !11425)
!11428 = !DILocation(line: 6031, column: 2, scope: !11425)
!11429 = !DILocation(line: 6192, column: 14, scope: !770)
!11430 = !DILocation(line: 6192, column: 2, scope: !770)
!11431 = !DILocation(line: 6195, column: 12, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !770, file: !1, line: 6195, column: 2)
!11433 = !DILocation(line: 6195, column: 20, scope: !11432)
!11434 = !DILocation(line: 6195, column: 29, scope: !11432)
!11435 = !DILocation(line: 6195, column: 10, scope: !11432)
!11436 = !DILocation(line: 6195, column: 7, scope: !11432)
!11437 = !DILocation(line: 6195, column: 36, scope: !11438)
!11438 = !DILexicalBlockFile(scope: !11439, file: !1, discriminator: 1)
!11439 = distinct !DILexicalBlock(scope: !11432, file: !1, line: 6195, column: 2)
!11440 = !DILocation(line: 6195, column: 39, scope: !11438)
!11441 = !DILocation(line: 6195, column: 2, scope: !11438)
!11442 = !DILocation(line: 6196, column: 8, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11444, file: !1, line: 6196, column: 7)
!11444 = distinct !DILexicalBlock(scope: !11439, file: !1, line: 6195, column: 65)
!11445 = !DILocation(line: 6196, column: 12, scope: !11443)
!11446 = !DILocation(line: 6196, column: 16, scope: !11443)
!11447 = !DILocation(line: 6196, column: 19, scope: !11448)
!11448 = !DILexicalBlockFile(scope: !11443, file: !1, discriminator: 1)
!11449 = !DILocation(line: 6196, column: 23, scope: !11448)
!11450 = !DILocation(line: 6196, column: 32, scope: !11448)
!11451 = !DILocation(line: 6196, column: 7, scope: !11448)
!11452 = !DILocation(line: 6197, column: 8, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11443, file: !1, line: 6196, column: 41)
!11454 = !DILocation(line: 6197, column: 12, scope: !11453)
!11455 = !DILocation(line: 6197, column: 25, scope: !11453)
!11456 = !DILocation(line: 6197, column: 29, scope: !11453)
!11457 = !DILocation(line: 6197, column: 23, scope: !11453)
!11458 = !DILocation(line: 6197, column: 39, scope: !11453)
!11459 = !DILocation(line: 6197, column: 43, scope: !11453)
!11460 = !DILocation(line: 6197, column: 37, scope: !11453)
!11461 = !DILocation(line: 6197, column: 6, scope: !11453)
!11462 = !DILocation(line: 6198, column: 8, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11453, file: !1, line: 6198, column: 8)
!11464 = !DILocation(line: 6198, column: 12, scope: !11463)
!11465 = !DILocation(line: 6198, column: 20, scope: !11463)
!11466 = !DILocation(line: 6198, column: 25, scope: !11463)
!11467 = !DILocation(line: 6198, column: 28, scope: !11468)
!11468 = !DILexicalBlockFile(scope: !11463, file: !1, discriminator: 1)
!11469 = !DILocation(line: 6198, column: 8, scope: !11468)
!11470 = !DILocation(line: 6199, column: 7, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11463, file: !1, line: 6198, column: 42)
!11472 = !DILocation(line: 6199, column: 10, scope: !11471)
!11473 = !DILocation(line: 6200, column: 5, scope: !11471)
!11474 = !DILocation(line: 6200, column: 9, scope: !11471)
!11475 = !DILocation(line: 6200, column: 17, scope: !11471)
!11476 = !DILocation(line: 6201, column: 4, scope: !11471)
!11477 = !DILocation(line: 6202, column: 8, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11453, file: !1, line: 6202, column: 8)
!11479 = !DILocation(line: 6202, column: 12, scope: !11478)
!11480 = !DILocation(line: 6202, column: 20, scope: !11478)
!11481 = !DILocation(line: 6202, column: 25, scope: !11478)
!11482 = !DILocation(line: 6202, column: 29, scope: !11483)
!11483 = !DILexicalBlockFile(scope: !11478, file: !1, discriminator: 1)
!11484 = !DILocation(line: 6202, column: 8, scope: !11483)
!11485 = !DILocation(line: 6203, column: 6, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11478, file: !1, line: 6202, column: 43)
!11487 = !DILocation(line: 6203, column: 10, scope: !11486)
!11488 = !DILocation(line: 6204, column: 5, scope: !11486)
!11489 = !DILocation(line: 6204, column: 9, scope: !11486)
!11490 = !DILocation(line: 6204, column: 17, scope: !11486)
!11491 = !DILocation(line: 6205, column: 4, scope: !11486)
!11492 = !DILocation(line: 6206, column: 17, scope: !11453)
!11493 = !DILocation(line: 6206, column: 21, scope: !11453)
!11494 = !DILocation(line: 6206, column: 31, scope: !11453)
!11495 = !DILocation(line: 6206, column: 35, scope: !11453)
!11496 = !DILocation(line: 6206, column: 29, scope: !11453)
!11497 = !DILocation(line: 6206, column: 4, scope: !11453)
!11498 = !DILocation(line: 6206, column: 8, scope: !11453)
!11499 = !DILocation(line: 6206, column: 15, scope: !11453)
!11500 = !DILocation(line: 6207, column: 8, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11453, file: !1, line: 6207, column: 8)
!11502 = !DILocation(line: 6207, column: 8, scope: !11453)
!11503 = !DILocation(line: 6208, column: 7, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11501, file: !1, line: 6207, column: 22)
!11505 = !DILocation(line: 6208, column: 10, scope: !11504)
!11506 = !DILocation(line: 6209, column: 7, scope: !11504)
!11507 = !DILocation(line: 6209, column: 10, scope: !11504)
!11508 = !DILocation(line: 6210, column: 5, scope: !11504)
!11509 = !DILocation(line: 6210, column: 9, scope: !11504)
!11510 = !DILocation(line: 6210, column: 16, scope: !11504)
!11511 = !DILocation(line: 6211, column: 4, scope: !11504)
!11512 = !DILocation(line: 6212, column: 5, scope: !11453)
!11513 = !DILocation(line: 6212, column: 7, scope: !11453)
!11514 = !DILocation(line: 6213, column: 3, scope: !11453)
!11515 = !DILocation(line: 6214, column: 17, scope: !11443)
!11516 = !DILocation(line: 6214, column: 21, scope: !11443)
!11517 = !DILocation(line: 6214, column: 31, scope: !11443)
!11518 = !DILocation(line: 6214, column: 35, scope: !11443)
!11519 = !DILocation(line: 6214, column: 29, scope: !11443)
!11520 = !DILocation(line: 6214, column: 4, scope: !11443)
!11521 = !DILocation(line: 6214, column: 8, scope: !11443)
!11522 = !DILocation(line: 6214, column: 15, scope: !11443)
!11523 = !DILocation(line: 6215, column: 16, scope: !11444)
!11524 = !DILocation(line: 6215, column: 20, scope: !11444)
!11525 = !DILocation(line: 6215, column: 3, scope: !11444)
!11526 = !DILocation(line: 6215, column: 7, scope: !11444)
!11527 = !DILocation(line: 6215, column: 14, scope: !11444)
!11528 = !DILocation(line: 6216, column: 2, scope: !11444)
!11529 = !DILocation(line: 6195, column: 53, scope: !11530)
!11530 = !DILexicalBlockFile(scope: !11439, file: !1, discriminator: 2)
!11531 = !DILocation(line: 6195, column: 57, scope: !11530)
!11532 = !DILocation(line: 6195, column: 51, scope: !11530)
!11533 = !DILocation(line: 6195, column: 2, scope: !11530)
!11534 = !DILocation(line: 6217, column: 2, scope: !770)
!11535 = !DILocation(line: 6218, column: 1, scope: !770)
!11536 = !DILocalVariable(name: "a", arg: 1, scope: !775, file: !1, line: 6523, type: !367)
!11537 = !DILocation(line: 6523, column: 48, scope: !775)
!11538 = !DILocalVariable(name: "isoent", arg: 2, scope: !775, file: !1, line: 6523, type: !76)
!11539 = !DILocation(line: 6523, column: 66, scope: !775)
!11540 = !DILocalVariable(name: "idr", arg: 3, scope: !775, file: !1, line: 6524, type: !715)
!11541 = !DILocation(line: 6524, column: 17, scope: !775)
!11542 = !DILocalVariable(name: "rn", scope: !775, file: !1, line: 6526, type: !85)
!11543 = !DILocation(line: 6526, column: 26, scope: !775)
!11544 = !DILocalVariable(name: "children", scope: !775, file: !1, line: 6527, type: !97)
!11545 = !DILocation(line: 6527, column: 18, scope: !775)
!11546 = !DILocation(line: 6529, column: 20, scope: !775)
!11547 = !DILocation(line: 6529, column: 28, scope: !775)
!11548 = !DILocation(line: 6529, column: 37, scope: !775)
!11549 = !DILocation(line: 6529, column: 41, scope: !775)
!11550 = !DILocation(line: 6529, column: 13, scope: !775)
!11551 = !DILocation(line: 6529, column: 11, scope: !775)
!11552 = !DILocation(line: 6530, column: 6, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !775, file: !1, line: 6530, column: 6)
!11554 = !DILocation(line: 6530, column: 15, scope: !11553)
!11555 = !DILocation(line: 6530, column: 6, scope: !775)
!11556 = !DILocation(line: 6531, column: 22, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11553, file: !1, line: 6530, column: 24)
!11558 = !DILocation(line: 6531, column: 25, scope: !11557)
!11559 = !DILocation(line: 6531, column: 3, scope: !11557)
!11560 = !DILocation(line: 6533, column: 3, scope: !11557)
!11561 = !DILocation(line: 6535, column: 28, scope: !775)
!11562 = !DILocation(line: 6535, column: 2, scope: !775)
!11563 = !DILocation(line: 6535, column: 10, scope: !775)
!11564 = !DILocation(line: 6535, column: 26, scope: !775)
!11565 = !DILocation(line: 6537, column: 2, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !775, file: !1, line: 6537, column: 2)
!11567 = !DILocation(line: 6537, column: 2, scope: !11568)
!11568 = !DILexicalBlockFile(scope: !11569, file: !1, discriminator: 1)
!11569 = distinct !DILexicalBlock(scope: !11566, file: !1, line: 6537, column: 2)
!11570 = !DILocalVariable(name: "idrent", scope: !11571, file: !1, line: 6538, type: !551)
!11571 = distinct !DILexicalBlock(scope: !11569, file: !1, line: 6537, column: 46)
!11572 = !DILocation(line: 6538, column: 18, scope: !11571)
!11573 = !DILocation(line: 6538, column: 44, scope: !11571)
!11574 = !DILocation(line: 6538, column: 27, scope: !11571)
!11575 = !DILocation(line: 6539, column: 18, scope: !11571)
!11576 = !DILocation(line: 6539, column: 26, scope: !11571)
!11577 = !DILocation(line: 6539, column: 13, scope: !11571)
!11578 = !DILocation(line: 6539, column: 16, scope: !11571)
!11579 = !DILocation(line: 6540, column: 2, scope: !11571)
!11580 = !DILocation(line: 6537, column: 2, scope: !11581)
!11581 = !DILexicalBlockFile(scope: !11569, file: !1, discriminator: 2)
!11582 = !DILocation(line: 6541, column: 2, scope: !775)
!11583 = !DILocation(line: 6542, column: 1, scope: !775)
!11584 = !DILocalVariable(name: "idr", arg: 1, scope: !776, file: !1, line: 5825, type: !715)
!11585 = !DILocation(line: 5825, column: 25, scope: !776)
!11586 = !DILocation(line: 5827, column: 7, scope: !776)
!11587 = !DILocation(line: 5827, column: 12, scope: !776)
!11588 = !DILocation(line: 5827, column: 2, scope: !776)
!11589 = !DILocation(line: 5828, column: 1, scope: !776)
!11590 = !DILocalVariable(name: "map", arg: 1, scope: !734, file: !1, line: 5791, type: !20)
!11591 = !DILocation(line: 5791, column: 29, scope: !734)
!11592 = !DILocalVariable(name: "i", scope: !734, file: !1, line: 5793, type: !31)
!11593 = !DILocation(line: 5793, column: 6, scope: !734)
!11594 = !DILocation(line: 5795, column: 9, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !734, file: !1, line: 5795, column: 2)
!11596 = !DILocation(line: 5795, column: 7, scope: !11595)
!11597 = !DILocation(line: 5795, column: 17, scope: !11598)
!11598 = !DILexicalBlockFile(scope: !11599, file: !1, discriminator: 1)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !1, line: 5795, column: 2)
!11600 = !DILocation(line: 5795, column: 19, scope: !11598)
!11601 = !DILocation(line: 5795, column: 2, scope: !11598)
!11602 = !DILocation(line: 5796, column: 7, scope: !11599)
!11603 = !DILocation(line: 5796, column: 3, scope: !11599)
!11604 = !DILocation(line: 5796, column: 10, scope: !11599)
!11605 = !DILocation(line: 5795, column: 29, scope: !11606)
!11606 = !DILexicalBlockFile(scope: !11599, file: !1, discriminator: 2)
!11607 = !DILocation(line: 5795, column: 2, scope: !11606)
!11608 = !DILocation(line: 5797, column: 9, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !734, file: !1, line: 5797, column: 2)
!11610 = !DILocation(line: 5797, column: 7, scope: !11609)
!11611 = !DILocation(line: 5797, column: 17, scope: !11612)
!11612 = !DILexicalBlockFile(scope: !11613, file: !1, discriminator: 1)
!11613 = distinct !DILexicalBlock(scope: !11609, file: !1, line: 5797, column: 2)
!11614 = !DILocation(line: 5797, column: 19, scope: !11612)
!11615 = !DILocation(line: 5797, column: 2, scope: !11612)
!11616 = !DILocation(line: 5798, column: 7, scope: !11613)
!11617 = !DILocation(line: 5798, column: 3, scope: !11613)
!11618 = !DILocation(line: 5798, column: 10, scope: !11613)
!11619 = !DILocation(line: 5797, column: 29, scope: !11620)
!11620 = !DILexicalBlockFile(scope: !11613, file: !1, discriminator: 2)
!11621 = !DILocation(line: 5797, column: 2, scope: !11620)
!11622 = !DILocation(line: 5799, column: 9, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !734, file: !1, line: 5799, column: 2)
!11624 = !DILocation(line: 5799, column: 7, scope: !11623)
!11625 = !DILocation(line: 5799, column: 17, scope: !11626)
!11626 = !DILexicalBlockFile(scope: !11627, file: !1, discriminator: 1)
!11627 = distinct !DILexicalBlock(scope: !11623, file: !1, line: 5799, column: 2)
!11628 = !DILocation(line: 5799, column: 19, scope: !11626)
!11629 = !DILocation(line: 5799, column: 2, scope: !11626)
!11630 = !DILocation(line: 5800, column: 7, scope: !11627)
!11631 = !DILocation(line: 5800, column: 3, scope: !11627)
!11632 = !DILocation(line: 5800, column: 10, scope: !11627)
!11633 = !DILocation(line: 5799, column: 29, scope: !11634)
!11634 = !DILexicalBlockFile(scope: !11627, file: !1, discriminator: 2)
!11635 = !DILocation(line: 5799, column: 2, scope: !11634)
!11636 = !DILocation(line: 5801, column: 2, scope: !734)
!11637 = !DILocation(line: 5801, column: 12, scope: !734)
!11638 = !DILocation(line: 5802, column: 9, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !734, file: !1, line: 5802, column: 2)
!11640 = !DILocation(line: 5802, column: 7, scope: !11639)
!11641 = !DILocation(line: 5802, column: 17, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !11643, file: !1, discriminator: 1)
!11643 = distinct !DILexicalBlock(scope: !11639, file: !1, line: 5802, column: 2)
!11644 = !DILocation(line: 5802, column: 19, scope: !11642)
!11645 = !DILocation(line: 5802, column: 2, scope: !11642)
!11646 = !DILocation(line: 5803, column: 7, scope: !11643)
!11647 = !DILocation(line: 5803, column: 3, scope: !11643)
!11648 = !DILocation(line: 5803, column: 10, scope: !11643)
!11649 = !DILocation(line: 5802, column: 29, scope: !11650)
!11650 = !DILexicalBlockFile(scope: !11643, file: !1, discriminator: 2)
!11651 = !DILocation(line: 5802, column: 2, scope: !11650)
!11652 = !DILocation(line: 5804, column: 1, scope: !734)
!11653 = !DILocalVariable(name: "n1", arg: 1, scope: !740, file: !1, line: 6504, type: !114)
!11654 = !DILocation(line: 6504, column: 54, scope: !740)
!11655 = !DILocalVariable(name: "n2", arg: 2, scope: !740, file: !1, line: 6505, type: !114)
!11656 = !DILocation(line: 6505, column: 35, scope: !740)
!11657 = !DILocalVariable(name: "e1", scope: !740, file: !1, line: 6507, type: !545)
!11658 = !DILocation(line: 6507, column: 23, scope: !740)
!11659 = !DILocation(line: 6507, column: 51, scope: !740)
!11660 = !DILocation(line: 6507, column: 28, scope: !740)
!11661 = !DILocalVariable(name: "e2", scope: !740, file: !1, line: 6508, type: !545)
!11662 = !DILocation(line: 6508, column: 23, scope: !740)
!11663 = !DILocation(line: 6508, column: 51, scope: !740)
!11664 = !DILocation(line: 6508, column: 28, scope: !740)
!11665 = !DILocation(line: 6510, column: 39, scope: !740)
!11666 = !DILocation(line: 6510, column: 43, scope: !740)
!11667 = !DILocation(line: 6510, column: 51, scope: !740)
!11668 = !DILocation(line: 6510, column: 55, scope: !740)
!11669 = !DILocation(line: 6510, column: 10, scope: !740)
!11670 = !DILocation(line: 6510, column: 2, scope: !740)
!11671 = !DILocalVariable(name: "node", arg: 1, scope: !744, file: !1, line: 6514, type: !114)
!11672 = !DILocation(line: 6514, column: 53, scope: !744)
!11673 = !DILocalVariable(name: "key", arg: 2, scope: !744, file: !1, line: 6514, type: !122)
!11674 = !DILocation(line: 6514, column: 71, scope: !744)
!11675 = !DILocalVariable(name: "isoent", scope: !744, file: !1, line: 6516, type: !531)
!11676 = !DILocation(line: 6516, column: 23, scope: !744)
!11677 = !DILocation(line: 6516, column: 55, scope: !744)
!11678 = !DILocation(line: 6516, column: 32, scope: !744)
!11679 = !DILocalVariable(name: "idrent", scope: !744, file: !1, line: 6517, type: !545)
!11680 = !DILocation(line: 6517, column: 23, scope: !744)
!11681 = !DILocation(line: 6517, column: 55, scope: !744)
!11682 = !DILocation(line: 6517, column: 32, scope: !744)
!11683 = !DILocation(line: 6519, column: 39, scope: !744)
!11684 = !DILocation(line: 6519, column: 47, scope: !744)
!11685 = !DILocation(line: 6519, column: 55, scope: !744)
!11686 = !DILocation(line: 6519, column: 10, scope: !744)
!11687 = !DILocation(line: 6519, column: 2, scope: !744)
!11688 = !DILocalVariable(name: "a", arg: 1, scope: !745, file: !1, line: 5854, type: !367)
!11689 = !DILocation(line: 5854, column: 33, scope: !745)
!11690 = !DILocalVariable(name: "idr", arg: 2, scope: !745, file: !1, line: 5854, type: !715)
!11691 = !DILocation(line: 5854, column: 48, scope: !745)
!11692 = !DILocalVariable(name: "cnt", arg: 3, scope: !745, file: !1, line: 5854, type: !31)
!11693 = !DILocation(line: 5854, column: 57, scope: !745)
!11694 = !DILocalVariable(name: "ffmax", arg: 4, scope: !745, file: !1, line: 5854, type: !31)
!11695 = !DILocation(line: 5854, column: 66, scope: !745)
!11696 = !DILocalVariable(name: "num_size", arg: 5, scope: !745, file: !1, line: 5855, type: !31)
!11697 = !DILocation(line: 5855, column: 9, scope: !745)
!11698 = !DILocalVariable(name: "null_size", arg: 6, scope: !745, file: !1, line: 5855, type: !31)
!11699 = !DILocation(line: 5855, column: 23, scope: !745)
!11700 = !DILocalVariable(name: "rbt_ops", arg: 7, scope: !745, file: !1, line: 5855, type: !104)
!11701 = !DILocation(line: 5855, column: 68, scope: !745)
!11702 = !DILocalVariable(name: "r", scope: !745, file: !1, line: 5857, type: !31)
!11703 = !DILocation(line: 5857, column: 6, scope: !745)
!11704 = !DILocation(line: 5859, column: 8, scope: !745)
!11705 = !DILocation(line: 5861, column: 26, scope: !745)
!11706 = !DILocation(line: 5861, column: 29, scope: !745)
!11707 = !DILocation(line: 5861, column: 34, scope: !745)
!11708 = !DILocation(line: 5861, column: 6, scope: !745)
!11709 = !DILocation(line: 5861, column: 4, scope: !745)
!11710 = !DILocation(line: 5862, column: 6, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !745, file: !1, line: 5862, column: 6)
!11712 = !DILocation(line: 5862, column: 8, scope: !11711)
!11713 = !DILocation(line: 5862, column: 6, scope: !745)
!11714 = !DILocation(line: 5863, column: 11, scope: !11711)
!11715 = !DILocation(line: 5863, column: 3, scope: !11711)
!11716 = !DILocation(line: 5864, column: 27, scope: !745)
!11717 = !DILocation(line: 5864, column: 32, scope: !745)
!11718 = !DILocation(line: 5864, column: 41, scope: !745)
!11719 = !DILocation(line: 5864, column: 2, scope: !745)
!11720 = !DILocation(line: 5865, column: 2, scope: !745)
!11721 = !DILocation(line: 5865, column: 7, scope: !745)
!11722 = !DILocation(line: 5865, column: 17, scope: !745)
!11723 = !DILocation(line: 5865, column: 23, scope: !745)
!11724 = !DILocation(line: 5866, column: 26, scope: !745)
!11725 = !DILocation(line: 5866, column: 31, scope: !745)
!11726 = !DILocation(line: 5866, column: 41, scope: !745)
!11727 = !DILocation(line: 5866, column: 2, scope: !745)
!11728 = !DILocation(line: 5866, column: 7, scope: !745)
!11729 = !DILocation(line: 5866, column: 17, scope: !745)
!11730 = !DILocation(line: 5866, column: 22, scope: !745)
!11731 = !DILocation(line: 5867, column: 2, scope: !745)
!11732 = !DILocation(line: 5867, column: 7, scope: !745)
!11733 = !DILocation(line: 5867, column: 16, scope: !745)
!11734 = !DILocation(line: 5868, column: 18, scope: !745)
!11735 = !DILocation(line: 5868, column: 2, scope: !745)
!11736 = !DILocation(line: 5868, column: 7, scope: !745)
!11737 = !DILocation(line: 5868, column: 16, scope: !745)
!11738 = !DILocation(line: 5869, column: 19, scope: !745)
!11739 = !DILocation(line: 5869, column: 2, scope: !745)
!11740 = !DILocation(line: 5869, column: 7, scope: !745)
!11741 = !DILocation(line: 5869, column: 17, scope: !745)
!11742 = !DILocation(line: 5870, column: 2, scope: !745)
!11743 = !DILocation(line: 5871, column: 1, scope: !745)
!11744 = !DILocalVariable(name: "high", arg: 1, scope: !751, file: !1, line: 2212, type: !53)
!11745 = !DILocation(line: 2212, column: 35, scope: !751)
!11746 = !DILocalVariable(name: "low", arg: 2, scope: !751, file: !1, line: 2212, type: !53)
!11747 = !DILocation(line: 2212, column: 55, scope: !751)
!11748 = !DILocalVariable(name: "utf16", scope: !751, file: !1, line: 2214, type: !31)
!11749 = !DILocation(line: 2214, column: 6, scope: !751)
!11750 = !DILocation(line: 2214, column: 15, scope: !751)
!11751 = !DILocation(line: 2214, column: 20, scope: !751)
!11752 = !DILocation(line: 2214, column: 28, scope: !751)
!11753 = !DILocation(line: 2214, column: 26, scope: !751)
!11754 = !DILocation(line: 2216, column: 6, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !751, file: !1, line: 2216, column: 6)
!11756 = !DILocation(line: 2216, column: 12, scope: !11755)
!11757 = !DILocation(line: 2216, column: 6, scope: !751)
!11758 = !DILocation(line: 2217, column: 3, scope: !11755)
!11759 = !DILocation(line: 2219, column: 10, scope: !751)
!11760 = !DILocation(line: 2219, column: 2, scope: !751)
!11761 = !DILocation(line: 2226, column: 3, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !751, file: !1, line: 2219, column: 17)
!11763 = !DILocation(line: 2228, column: 2, scope: !751)
!11764 = !DILocation(line: 2229, column: 1, scope: !751)
!11765 = !DILocalVariable(name: "pp", arg: 1, scope: !754, file: !628, line: 139, type: !271)
!11766 = !DILocation(line: 139, column: 23, scope: !754)
!11767 = !DILocalVariable(name: "u", arg: 2, scope: !754, file: !628, line: 139, type: !307)
!11768 = !DILocation(line: 139, column: 36, scope: !754)
!11769 = !DILocalVariable(name: "p", scope: !754, file: !628, line: 141, type: !544)
!11770 = !DILocation(line: 141, column: 17, scope: !754)
!11771 = !DILocation(line: 141, column: 38, scope: !754)
!11772 = !DILocation(line: 143, column: 10, scope: !754)
!11773 = !DILocation(line: 143, column: 12, scope: !754)
!11774 = !DILocation(line: 143, column: 18, scope: !754)
!11775 = !DILocation(line: 143, column: 9, scope: !754)
!11776 = !DILocation(line: 143, column: 2, scope: !754)
!11777 = !DILocation(line: 143, column: 7, scope: !754)
!11778 = !DILocation(line: 144, column: 9, scope: !754)
!11779 = !DILocation(line: 144, column: 11, scope: !754)
!11780 = !DILocation(line: 144, column: 2, scope: !754)
!11781 = !DILocation(line: 144, column: 7, scope: !754)
!11782 = !DILocation(line: 145, column: 1, scope: !754)
!11783 = !DILocalVariable(name: "idr", arg: 1, scope: !757, file: !1, line: 5874, type: !715)
!11784 = !DILocation(line: 5874, column: 26, scope: !757)
!11785 = !DILocalVariable(name: "isoent", arg: 2, scope: !757, file: !1, line: 5874, type: !76)
!11786 = !DILocation(line: 5874, column: 46, scope: !757)
!11787 = !DILocalVariable(name: "weight", arg: 3, scope: !757, file: !1, line: 5874, type: !31)
!11788 = !DILocation(line: 5874, column: 58, scope: !757)
!11789 = !DILocalVariable(name: "noff", arg: 4, scope: !757, file: !1, line: 5874, type: !31)
!11790 = !DILocation(line: 5874, column: 70, scope: !757)
!11791 = !DILocalVariable(name: "idrent", scope: !757, file: !1, line: 5876, type: !551)
!11792 = !DILocation(line: 5876, column: 17, scope: !757)
!11793 = !DILocalVariable(name: "n", scope: !757, file: !1, line: 5876, type: !551)
!11794 = !DILocation(line: 5876, column: 26, scope: !757)
!11795 = !DILocation(line: 5878, column: 30, scope: !757)
!11796 = !DILocation(line: 5878, column: 35, scope: !757)
!11797 = !DILocation(line: 5878, column: 43, scope: !757)
!11798 = !DILocation(line: 5878, column: 13, scope: !757)
!11799 = !DILocation(line: 5878, column: 18, scope: !757)
!11800 = !DILocation(line: 5878, column: 9, scope: !757)
!11801 = !DILocation(line: 5879, column: 18, scope: !757)
!11802 = !DILocation(line: 5879, column: 26, scope: !757)
!11803 = !DILocation(line: 5879, column: 32, scope: !757)
!11804 = !DILocation(line: 5879, column: 2, scope: !757)
!11805 = !DILocation(line: 5879, column: 10, scope: !757)
!11806 = !DILocation(line: 5879, column: 16, scope: !757)
!11807 = !DILocation(line: 5880, column: 19, scope: !757)
!11808 = !DILocation(line: 5880, column: 2, scope: !757)
!11809 = !DILocation(line: 5880, column: 10, scope: !757)
!11810 = !DILocation(line: 5880, column: 17, scope: !757)
!11811 = !DILocation(line: 5881, column: 19, scope: !757)
!11812 = !DILocation(line: 5881, column: 2, scope: !757)
!11813 = !DILocation(line: 5881, column: 10, scope: !757)
!11814 = !DILocation(line: 5881, column: 17, scope: !757)
!11815 = !DILocation(line: 5882, column: 17, scope: !757)
!11816 = !DILocation(line: 5882, column: 2, scope: !757)
!11817 = !DILocation(line: 5882, column: 10, scope: !757)
!11818 = !DILocation(line: 5882, column: 15, scope: !757)
!11819 = !DILocation(line: 5883, column: 2, scope: !757)
!11820 = !DILocation(line: 5883, column: 10, scope: !757)
!11821 = !DILocation(line: 5883, column: 21, scope: !757)
!11822 = !DILocation(line: 5885, column: 39, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !757, file: !1, line: 5885, column: 6)
!11824 = !DILocation(line: 5885, column: 44, scope: !11823)
!11825 = !DILocation(line: 5885, column: 55, scope: !11823)
!11826 = !DILocation(line: 5885, column: 63, scope: !11823)
!11827 = !DILocation(line: 5885, column: 7, scope: !11823)
!11828 = !DILocation(line: 5885, column: 6, scope: !757)
!11829 = !DILocation(line: 5887, column: 9, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11823, file: !1, line: 5885, column: 73)
!11831 = !DILocation(line: 5887, column: 14, scope: !11830)
!11832 = !DILocation(line: 5887, column: 23, scope: !11830)
!11833 = !DILocation(line: 5887, column: 31, scope: !11830)
!11834 = !DILocation(line: 5886, column: 24, scope: !11830)
!11835 = !DILocation(line: 5886, column: 7, scope: !11830)
!11836 = !DILocation(line: 5886, column: 5, scope: !11830)
!11837 = !DILocation(line: 5888, column: 7, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11830, file: !1, line: 5888, column: 7)
!11839 = !DILocation(line: 5888, column: 9, scope: !11838)
!11840 = !DILocation(line: 5888, column: 7, scope: !11830)
!11841 = !DILocation(line: 5890, column: 20, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11838, file: !1, line: 5888, column: 18)
!11843 = !DILocation(line: 5890, column: 4, scope: !11842)
!11844 = !DILocation(line: 5890, column: 12, scope: !11842)
!11845 = !DILocation(line: 5890, column: 18, scope: !11842)
!11846 = !DILocation(line: 5891, column: 27, scope: !11842)
!11847 = !DILocation(line: 5891, column: 5, scope: !11842)
!11848 = !DILocation(line: 5891, column: 10, scope: !11842)
!11849 = !DILocation(line: 5891, column: 20, scope: !11842)
!11850 = !DILocation(line: 5891, column: 25, scope: !11842)
!11851 = !DILocation(line: 5892, column: 28, scope: !11842)
!11852 = !DILocation(line: 5892, column: 36, scope: !11842)
!11853 = !DILocation(line: 5892, column: 4, scope: !11842)
!11854 = !DILocation(line: 5892, column: 9, scope: !11842)
!11855 = !DILocation(line: 5892, column: 19, scope: !11842)
!11856 = !DILocation(line: 5892, column: 24, scope: !11842)
!11857 = !DILocation(line: 5893, column: 3, scope: !11842)
!11858 = !DILocation(line: 5894, column: 2, scope: !11830)
!11859 = !DILocation(line: 5895, column: 1, scope: !757)
!11860 = !DILocalVariable(name: "idr", arg: 1, scope: !760, file: !1, line: 5915, type: !715)
!11861 = !DILocation(line: 5915, column: 25, scope: !760)
!11862 = !DILocalVariable(name: "fsetnum", arg: 2, scope: !760, file: !1, line: 5915, type: !763)
!11863 = !DILocation(line: 5915, column: 37, scope: !760)
!11864 = !DILocalVariable(name: "n", scope: !760, file: !1, line: 5917, type: !551)
!11865 = !DILocation(line: 5917, column: 17, scope: !760)
!11866 = !DILocalVariable(name: "p", scope: !760, file: !1, line: 5918, type: !544)
!11867 = !DILocation(line: 5918, column: 17, scope: !760)
!11868 = !DILocation(line: 5920, column: 11, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !760, file: !1, line: 5920, column: 2)
!11870 = !DILocation(line: 5920, column: 16, scope: !11869)
!11871 = !DILocation(line: 5920, column: 26, scope: !11869)
!11872 = !DILocation(line: 5920, column: 9, scope: !11869)
!11873 = !DILocation(line: 5920, column: 7, scope: !11869)
!11874 = !DILocation(line: 5920, column: 33, scope: !11875)
!11875 = !DILexicalBlockFile(scope: !11876, file: !1, discriminator: 1)
!11876 = distinct !DILexicalBlock(scope: !11869, file: !1, line: 5920, column: 2)
!11877 = !DILocation(line: 5920, column: 35, scope: !11875)
!11878 = !DILocation(line: 5920, column: 2, scope: !11875)
!11879 = !DILocation(line: 5921, column: 25, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11876, file: !1, line: 5920, column: 58)
!11881 = !DILocation(line: 5921, column: 28, scope: !11880)
!11882 = !DILocation(line: 5921, column: 33, scope: !11880)
!11883 = !DILocation(line: 5921, column: 43, scope: !11880)
!11884 = !DILocation(line: 5921, column: 48, scope: !11880)
!11885 = !DILocation(line: 5921, column: 3, scope: !11880)
!11886 = !DILocation(line: 5922, column: 24, scope: !11880)
!11887 = !DILocation(line: 5922, column: 27, scope: !11880)
!11888 = !DILocation(line: 5922, column: 35, scope: !11880)
!11889 = !DILocation(line: 5922, column: 48, scope: !11880)
!11890 = !DILocation(line: 5922, column: 51, scope: !11880)
!11891 = !DILocation(line: 5922, column: 46, scope: !11880)
!11892 = !DILocation(line: 5922, column: 5, scope: !11880)
!11893 = !DILocation(line: 5923, column: 3, scope: !11880)
!11894 = !DILocation(line: 5924, column: 4, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11880, file: !1, line: 5923, column: 6)
!11896 = !DILocation(line: 5924, column: 12, scope: !11895)
!11897 = !DILocation(line: 5924, column: 15, scope: !11895)
!11898 = !DILocation(line: 5924, column: 18, scope: !11895)
!11899 = !DILocation(line: 5924, column: 25, scope: !11895)
!11900 = !DILocation(line: 5924, column: 35, scope: !11895)
!11901 = !DILocation(line: 5925, column: 3, scope: !11895)
!11902 = !DILocation(line: 5926, column: 9, scope: !11880)
!11903 = !DILocation(line: 5926, column: 14, scope: !11880)
!11904 = !DILocation(line: 5926, column: 25, scope: !11880)
!11905 = !DILocation(line: 5926, column: 28, scope: !11880)
!11906 = !DILocation(line: 5925, column: 13, scope: !11907)
!11907 = !DILexicalBlockFile(scope: !11880, file: !1, discriminator: 1)
!11908 = !DILocation(line: 5925, column: 12, scope: !11907)
!11909 = !DILocation(line: 5925, column: 3, scope: !11907)
!11910 = !DILocation(line: 5927, column: 2, scope: !11880)
!11911 = !DILocation(line: 5920, column: 48, scope: !11912)
!11912 = !DILexicalBlockFile(scope: !11876, file: !1, discriminator: 2)
!11913 = !DILocation(line: 5920, column: 51, scope: !11912)
!11914 = !DILocation(line: 5920, column: 46, scope: !11912)
!11915 = !DILocation(line: 5920, column: 2, scope: !11912)
!11916 = !DILocation(line: 5928, column: 1, scope: !760)
!11917 = !DILocalVariable(name: "p", arg: 1, scope: !769, file: !1, line: 5949, type: !544)
!11918 = !DILocation(line: 5949, column: 36, scope: !769)
!11919 = !DILocalVariable(name: "num", arg: 2, scope: !769, file: !1, line: 5949, type: !31)
!11920 = !DILocation(line: 5949, column: 43, scope: !769)
!11921 = !DILocation(line: 5962, column: 6, scope: !769)
!11922 = !DILocation(line: 5963, column: 18, scope: !769)
!11923 = !DILocation(line: 5963, column: 27, scope: !769)
!11924 = !DILocation(line: 5963, column: 31, scope: !769)
!11925 = !DILocation(line: 5963, column: 21, scope: !769)
!11926 = !DILocation(line: 5963, column: 2, scope: !769)
!11927 = !DILocation(line: 5964, column: 6, scope: !769)
!11928 = !DILocation(line: 5965, column: 18, scope: !769)
!11929 = !DILocation(line: 5965, column: 19, scope: !769)
!11930 = !DILocation(line: 5965, column: 30, scope: !769)
!11931 = !DILocation(line: 5965, column: 34, scope: !769)
!11932 = !DILocation(line: 5965, column: 23, scope: !769)
!11933 = !DILocation(line: 5965, column: 2, scope: !769)
!11934 = !DILocation(line: 5966, column: 6, scope: !769)
!11935 = !DILocation(line: 5967, column: 18, scope: !769)
!11936 = !DILocation(line: 5967, column: 19, scope: !769)
!11937 = !DILocation(line: 5967, column: 28, scope: !769)
!11938 = !DILocation(line: 5967, column: 23, scope: !769)
!11939 = !DILocation(line: 5967, column: 2, scope: !769)
!11940 = !DILocation(line: 5968, column: 1, scope: !769)
!11941 = !DILocalVariable(name: "p1", arg: 1, scope: !741, file: !1, line: 6436, type: !531)
!11942 = !DILocation(line: 6436, column: 51, scope: !741)
!11943 = !DILocalVariable(name: "p2", arg: 2, scope: !741, file: !1, line: 6436, type: !531)
!11944 = !DILocation(line: 6436, column: 76, scope: !741)
!11945 = !DILocalVariable(name: "s1", scope: !741, file: !1, line: 6438, type: !453)
!11946 = !DILocation(line: 6438, column: 23, scope: !741)
!11947 = !DILocalVariable(name: "s2", scope: !741, file: !1, line: 6438, type: !453)
!11948 = !DILocation(line: 6438, column: 28, scope: !741)
!11949 = !DILocalVariable(name: "cmp", scope: !741, file: !1, line: 6439, type: !31)
!11950 = !DILocation(line: 6439, column: 6, scope: !741)
!11951 = !DILocalVariable(name: "l", scope: !741, file: !1, line: 6440, type: !31)
!11952 = !DILocation(line: 6440, column: 6, scope: !741)
!11953 = !DILocation(line: 6442, column: 30, scope: !741)
!11954 = !DILocation(line: 6442, column: 34, scope: !741)
!11955 = !DILocation(line: 6442, column: 5, scope: !741)
!11956 = !DILocation(line: 6443, column: 30, scope: !741)
!11957 = !DILocation(line: 6443, column: 34, scope: !741)
!11958 = !DILocation(line: 6443, column: 5, scope: !741)
!11959 = !DILocation(line: 6446, column: 6, scope: !741)
!11960 = !DILocation(line: 6446, column: 10, scope: !741)
!11961 = !DILocation(line: 6446, column: 4, scope: !741)
!11962 = !DILocation(line: 6447, column: 6, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6447, column: 6)
!11964 = !DILocation(line: 6447, column: 10, scope: !11963)
!11965 = !DILocation(line: 6447, column: 14, scope: !11963)
!11966 = !DILocation(line: 6447, column: 8, scope: !11963)
!11967 = !DILocation(line: 6447, column: 6, scope: !741)
!11968 = !DILocation(line: 6448, column: 7, scope: !11963)
!11969 = !DILocation(line: 6448, column: 11, scope: !11963)
!11970 = !DILocation(line: 6448, column: 5, scope: !11963)
!11971 = !DILocation(line: 6448, column: 3, scope: !11963)
!11972 = !DILocation(line: 6449, column: 15, scope: !741)
!11973 = !DILocation(line: 6449, column: 19, scope: !741)
!11974 = !DILocation(line: 6449, column: 23, scope: !741)
!11975 = !DILocation(line: 6449, column: 8, scope: !741)
!11976 = !DILocation(line: 6449, column: 6, scope: !741)
!11977 = !DILocation(line: 6450, column: 6, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6450, column: 6)
!11979 = !DILocation(line: 6450, column: 10, scope: !11978)
!11980 = !DILocation(line: 6450, column: 6, scope: !741)
!11981 = !DILocation(line: 6451, column: 11, scope: !11978)
!11982 = !DILocation(line: 6451, column: 3, scope: !11978)
!11983 = !DILocation(line: 6452, column: 6, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6452, column: 6)
!11985 = !DILocation(line: 6452, column: 10, scope: !11984)
!11986 = !DILocation(line: 6452, column: 20, scope: !11984)
!11987 = !DILocation(line: 6452, column: 24, scope: !11984)
!11988 = !DILocation(line: 6452, column: 18, scope: !11984)
!11989 = !DILocation(line: 6452, column: 6, scope: !741)
!11990 = !DILocation(line: 6453, column: 9, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !1, line: 6452, column: 33)
!11992 = !DILocation(line: 6453, column: 6, scope: !11991)
!11993 = !DILocation(line: 6454, column: 7, scope: !11991)
!11994 = !DILocation(line: 6454, column: 11, scope: !11991)
!11995 = !DILocation(line: 6454, column: 21, scope: !11991)
!11996 = !DILocation(line: 6454, column: 25, scope: !11991)
!11997 = !DILocation(line: 6454, column: 19, scope: !11991)
!11998 = !DILocation(line: 6454, column: 5, scope: !11991)
!11999 = !DILocation(line: 6455, column: 3, scope: !11991)
!12000 = !DILocation(line: 6455, column: 11, scope: !12001)
!12001 = !DILexicalBlockFile(scope: !11991, file: !1, discriminator: 1)
!12002 = !DILocation(line: 6455, column: 3, scope: !12001)
!12003 = !DILocation(line: 6456, column: 16, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11991, file: !1, line: 6456, column: 8)
!12005 = !DILocation(line: 6456, column: 13, scope: !12004)
!12006 = !DILocation(line: 6456, column: 10, scope: !12004)
!12007 = !DILocation(line: 6456, column: 8, scope: !11991)
!12008 = !DILocation(line: 6457, column: 40, scope: !12004)
!12009 = !DILocation(line: 6457, column: 43, scope: !12004)
!12010 = !DILocation(line: 6457, column: 15, scope: !12004)
!12011 = !DILocation(line: 6457, column: 13, scope: !12004)
!12012 = !DILocation(line: 6457, column: 5, scope: !12004)
!12013 = !DILocation(line: 6455, column: 3, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !11991, file: !1, discriminator: 2)
!12015 = !DILocation(line: 6458, column: 2, scope: !11991)
!12016 = !DILocation(line: 6458, column: 13, scope: !12017)
!12017 = !DILexicalBlockFile(scope: !12018, file: !1, discriminator: 1)
!12018 = distinct !DILexicalBlock(scope: !11984, file: !1, line: 6458, column: 13)
!12019 = !DILocation(line: 6458, column: 17, scope: !12017)
!12020 = !DILocation(line: 6458, column: 27, scope: !12017)
!12021 = !DILocation(line: 6458, column: 31, scope: !12017)
!12022 = !DILocation(line: 6458, column: 25, scope: !12017)
!12023 = !DILocation(line: 6459, column: 9, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12018, file: !1, line: 6458, column: 40)
!12025 = !DILocation(line: 6459, column: 6, scope: !12024)
!12026 = !DILocation(line: 6460, column: 7, scope: !12024)
!12027 = !DILocation(line: 6460, column: 11, scope: !12024)
!12028 = !DILocation(line: 6460, column: 21, scope: !12024)
!12029 = !DILocation(line: 6460, column: 25, scope: !12024)
!12030 = !DILocation(line: 6460, column: 19, scope: !12024)
!12031 = !DILocation(line: 6460, column: 5, scope: !12024)
!12032 = !DILocation(line: 6461, column: 3, scope: !12024)
!12033 = !DILocation(line: 6461, column: 11, scope: !12034)
!12034 = !DILexicalBlockFile(scope: !12024, file: !1, discriminator: 1)
!12035 = !DILocation(line: 6461, column: 3, scope: !12034)
!12036 = !DILocation(line: 6462, column: 16, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12024, file: !1, line: 6462, column: 8)
!12038 = !DILocation(line: 6462, column: 13, scope: !12037)
!12039 = !DILocation(line: 6462, column: 10, scope: !12037)
!12040 = !DILocation(line: 6462, column: 8, scope: !12024)
!12041 = !DILocation(line: 6463, column: 38, scope: !12037)
!12042 = !DILocation(line: 6463, column: 41, scope: !12037)
!12043 = !DILocation(line: 6463, column: 13, scope: !12037)
!12044 = !DILocation(line: 6463, column: 12, scope: !12037)
!12045 = !DILocation(line: 6463, column: 5, scope: !12037)
!12046 = !DILocation(line: 6461, column: 3, scope: !12047)
!12047 = !DILexicalBlockFile(scope: !12024, file: !1, discriminator: 2)
!12048 = !DILocation(line: 6464, column: 2, scope: !12024)
!12049 = !DILocation(line: 6466, column: 6, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6466, column: 6)
!12051 = !DILocation(line: 6466, column: 10, scope: !12050)
!12052 = !DILocation(line: 6466, column: 18, scope: !12050)
!12053 = !DILocation(line: 6466, column: 23, scope: !12050)
!12054 = !DILocation(line: 6466, column: 26, scope: !12055)
!12055 = !DILexicalBlockFile(scope: !12050, file: !1, discriminator: 1)
!12056 = !DILocation(line: 6466, column: 30, scope: !12055)
!12057 = !DILocation(line: 6466, column: 38, scope: !12055)
!12058 = !DILocation(line: 6466, column: 6, scope: !12055)
!12059 = !DILocation(line: 6467, column: 3, scope: !12050)
!12060 = !DILocation(line: 6468, column: 6, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6468, column: 6)
!12062 = !DILocation(line: 6468, column: 10, scope: !12061)
!12063 = !DILocation(line: 6468, column: 18, scope: !12061)
!12064 = !DILocation(line: 6468, column: 23, scope: !12061)
!12065 = !DILocation(line: 6468, column: 26, scope: !12066)
!12066 = !DILexicalBlockFile(scope: !12061, file: !1, discriminator: 1)
!12067 = !DILocation(line: 6468, column: 30, scope: !12066)
!12068 = !DILocation(line: 6468, column: 38, scope: !12066)
!12069 = !DILocation(line: 6468, column: 6, scope: !12066)
!12070 = !DILocation(line: 6469, column: 3, scope: !12061)
!12071 = !DILocation(line: 6470, column: 6, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6470, column: 6)
!12073 = !DILocation(line: 6470, column: 10, scope: !12072)
!12074 = !DILocation(line: 6470, column: 18, scope: !12072)
!12075 = !DILocation(line: 6470, column: 6, scope: !741)
!12076 = !DILocation(line: 6471, column: 3, scope: !12072)
!12077 = !DILocation(line: 6472, column: 6, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6472, column: 6)
!12079 = !DILocation(line: 6472, column: 10, scope: !12078)
!12080 = !DILocation(line: 6472, column: 18, scope: !12078)
!12081 = !DILocation(line: 6472, column: 6, scope: !741)
!12082 = !DILocation(line: 6473, column: 3, scope: !12078)
!12083 = !DILocation(line: 6474, column: 6, scope: !741)
!12084 = !DILocation(line: 6474, column: 10, scope: !741)
!12085 = !DILocation(line: 6474, column: 4, scope: !741)
!12086 = !DILocation(line: 6475, column: 6, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6475, column: 6)
!12088 = !DILocation(line: 6475, column: 10, scope: !12087)
!12089 = !DILocation(line: 6475, column: 14, scope: !12087)
!12090 = !DILocation(line: 6475, column: 8, scope: !12087)
!12091 = !DILocation(line: 6475, column: 6, scope: !741)
!12092 = !DILocation(line: 6476, column: 7, scope: !12087)
!12093 = !DILocation(line: 6476, column: 11, scope: !12087)
!12094 = !DILocation(line: 6476, column: 5, scope: !12087)
!12095 = !DILocation(line: 6476, column: 3, scope: !12087)
!12096 = !DILocation(line: 6477, column: 25, scope: !741)
!12097 = !DILocation(line: 6477, column: 29, scope: !741)
!12098 = !DILocation(line: 6477, column: 42, scope: !741)
!12099 = !DILocation(line: 6477, column: 46, scope: !741)
!12100 = !DILocation(line: 6477, column: 40, scope: !741)
!12101 = !DILocation(line: 6477, column: 5, scope: !741)
!12102 = !DILocation(line: 6478, column: 25, scope: !741)
!12103 = !DILocation(line: 6478, column: 29, scope: !741)
!12104 = !DILocation(line: 6478, column: 42, scope: !741)
!12105 = !DILocation(line: 6478, column: 46, scope: !741)
!12106 = !DILocation(line: 6478, column: 40, scope: !741)
!12107 = !DILocation(line: 6478, column: 5, scope: !741)
!12108 = !DILocation(line: 6479, column: 6, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6479, column: 6)
!12110 = !DILocation(line: 6479, column: 8, scope: !12109)
!12111 = !DILocation(line: 6479, column: 6, scope: !741)
!12112 = !DILocation(line: 6480, column: 16, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12109, file: !1, line: 6479, column: 13)
!12114 = !DILocation(line: 6480, column: 20, scope: !12113)
!12115 = !DILocation(line: 6480, column: 24, scope: !12113)
!12116 = !DILocation(line: 6480, column: 9, scope: !12113)
!12117 = !DILocation(line: 6480, column: 7, scope: !12113)
!12118 = !DILocation(line: 6481, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12113, file: !1, line: 6481, column: 7)
!12120 = !DILocation(line: 6481, column: 11, scope: !12119)
!12121 = !DILocation(line: 6481, column: 7, scope: !12113)
!12122 = !DILocation(line: 6482, column: 12, scope: !12119)
!12123 = !DILocation(line: 6482, column: 4, scope: !12119)
!12124 = !DILocation(line: 6483, column: 2, scope: !12113)
!12125 = !DILocation(line: 6484, column: 6, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !741, file: !1, line: 6484, column: 6)
!12127 = !DILocation(line: 6484, column: 10, scope: !12126)
!12128 = !DILocation(line: 6484, column: 20, scope: !12126)
!12129 = !DILocation(line: 6484, column: 24, scope: !12126)
!12130 = !DILocation(line: 6484, column: 18, scope: !12126)
!12131 = !DILocation(line: 6484, column: 6, scope: !741)
!12132 = !DILocation(line: 6485, column: 9, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12126, file: !1, line: 6484, column: 33)
!12134 = !DILocation(line: 6485, column: 6, scope: !12133)
!12135 = !DILocation(line: 6486, column: 7, scope: !12133)
!12136 = !DILocation(line: 6486, column: 11, scope: !12133)
!12137 = !DILocation(line: 6486, column: 21, scope: !12133)
!12138 = !DILocation(line: 6486, column: 25, scope: !12133)
!12139 = !DILocation(line: 6486, column: 19, scope: !12133)
!12140 = !DILocation(line: 6486, column: 5, scope: !12133)
!12141 = !DILocation(line: 6487, column: 3, scope: !12133)
!12142 = !DILocation(line: 6487, column: 11, scope: !12143)
!12143 = !DILexicalBlockFile(scope: !12133, file: !1, discriminator: 1)
!12144 = !DILocation(line: 6487, column: 3, scope: !12143)
!12145 = !DILocation(line: 6488, column: 16, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12133, file: !1, line: 6488, column: 8)
!12147 = !DILocation(line: 6488, column: 13, scope: !12146)
!12148 = !DILocation(line: 6488, column: 10, scope: !12146)
!12149 = !DILocation(line: 6488, column: 8, scope: !12133)
!12150 = !DILocation(line: 6489, column: 40, scope: !12146)
!12151 = !DILocation(line: 6489, column: 43, scope: !12146)
!12152 = !DILocation(line: 6489, column: 15, scope: !12146)
!12153 = !DILocation(line: 6489, column: 13, scope: !12146)
!12154 = !DILocation(line: 6489, column: 5, scope: !12146)
!12155 = !DILocation(line: 6487, column: 3, scope: !12156)
!12156 = !DILexicalBlockFile(scope: !12133, file: !1, discriminator: 2)
!12157 = !DILocation(line: 6490, column: 2, scope: !12133)
!12158 = !DILocation(line: 6490, column: 13, scope: !12159)
!12159 = !DILexicalBlockFile(scope: !12160, file: !1, discriminator: 1)
!12160 = distinct !DILexicalBlock(scope: !12126, file: !1, line: 6490, column: 13)
!12161 = !DILocation(line: 6490, column: 17, scope: !12159)
!12162 = !DILocation(line: 6490, column: 27, scope: !12159)
!12163 = !DILocation(line: 6490, column: 31, scope: !12159)
!12164 = !DILocation(line: 6490, column: 25, scope: !12159)
!12165 = !DILocation(line: 6491, column: 9, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12160, file: !1, line: 6490, column: 40)
!12167 = !DILocation(line: 6491, column: 6, scope: !12166)
!12168 = !DILocation(line: 6492, column: 7, scope: !12166)
!12169 = !DILocation(line: 6492, column: 11, scope: !12166)
!12170 = !DILocation(line: 6492, column: 21, scope: !12166)
!12171 = !DILocation(line: 6492, column: 25, scope: !12166)
!12172 = !DILocation(line: 6492, column: 19, scope: !12166)
!12173 = !DILocation(line: 6492, column: 5, scope: !12166)
!12174 = !DILocation(line: 6493, column: 3, scope: !12166)
!12175 = !DILocation(line: 6493, column: 11, scope: !12176)
!12176 = !DILexicalBlockFile(scope: !12166, file: !1, discriminator: 1)
!12177 = !DILocation(line: 6493, column: 3, scope: !12176)
!12178 = !DILocation(line: 6494, column: 16, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12166, file: !1, line: 6494, column: 8)
!12180 = !DILocation(line: 6494, column: 13, scope: !12179)
!12181 = !DILocation(line: 6494, column: 10, scope: !12179)
!12182 = !DILocation(line: 6494, column: 8, scope: !12166)
!12183 = !DILocation(line: 6495, column: 38, scope: !12179)
!12184 = !DILocation(line: 6495, column: 41, scope: !12179)
!12185 = !DILocation(line: 6495, column: 13, scope: !12179)
!12186 = !DILocation(line: 6495, column: 12, scope: !12179)
!12187 = !DILocation(line: 6495, column: 5, scope: !12179)
!12188 = !DILocation(line: 6493, column: 3, scope: !12189)
!12189 = !DILexicalBlockFile(scope: !12166, file: !1, discriminator: 2)
!12190 = !DILocation(line: 6496, column: 2, scope: !12166)
!12191 = !DILocation(line: 6500, column: 10, scope: !741)
!12192 = !DILocation(line: 6500, column: 2, scope: !741)
!12193 = !DILocation(line: 6501, column: 1, scope: !741)
!12194 = !DILocalVariable(name: "a", arg: 1, scope: !748, file: !1, line: 5831, type: !367)
!12195 = !DILocation(line: 5831, column: 43, scope: !748)
!12196 = !DILocalVariable(name: "idr", arg: 2, scope: !748, file: !1, line: 5831, type: !715)
!12197 = !DILocation(line: 5831, column: 58, scope: !748)
!12198 = !DILocalVariable(name: "cnt", arg: 3, scope: !748, file: !1, line: 5832, type: !31)
!12199 = !DILocation(line: 5832, column: 9, scope: !748)
!12200 = !DILocation(line: 5835, column: 6, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !748, file: !1, line: 5835, column: 6)
!12202 = !DILocation(line: 5835, column: 11, scope: !12201)
!12203 = !DILocation(line: 5835, column: 23, scope: !12201)
!12204 = !DILocation(line: 5835, column: 21, scope: !12201)
!12205 = !DILocation(line: 5835, column: 6, scope: !748)
!12206 = !DILocalVariable(name: "p", scope: !12207, file: !1, line: 5836, type: !271)
!12207 = distinct !DILexicalBlock(scope: !12201, file: !1, line: 5835, column: 28)
!12208 = !DILocation(line: 5836, column: 9, scope: !12207)
!12209 = !DILocalVariable(name: "bk", scope: !12207, file: !1, line: 5837, type: !12210)
!12210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!12211 = !DILocation(line: 5837, column: 13, scope: !12207)
!12212 = !DILocalVariable(name: "psize", scope: !12207, file: !1, line: 5838, type: !31)
!12213 = !DILocation(line: 5838, column: 7, scope: !12207)
!12214 = !DILocation(line: 5840, column: 12, scope: !12207)
!12215 = !DILocation(line: 5840, column: 16, scope: !12207)
!12216 = !DILocation(line: 5840, column: 22, scope: !12207)
!12217 = !DILocation(line: 5840, column: 9, scope: !12207)
!12218 = !DILocation(line: 5841, column: 15, scope: !12207)
!12219 = !DILocation(line: 5841, column: 20, scope: !12207)
!12220 = !DILocation(line: 5841, column: 57, scope: !12207)
!12221 = !DILocation(line: 5841, column: 55, scope: !12207)
!12222 = !DILocation(line: 5841, column: 7, scope: !12207)
!12223 = !DILocation(line: 5841, column: 5, scope: !12207)
!12224 = !DILocation(line: 5842, column: 7, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12207, file: !1, line: 5842, column: 7)
!12226 = !DILocation(line: 5842, column: 9, scope: !12225)
!12227 = !DILocation(line: 5842, column: 7, scope: !12207)
!12228 = !DILocation(line: 5843, column: 23, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12225, file: !1, line: 5842, column: 18)
!12230 = !DILocation(line: 5843, column: 26, scope: !12229)
!12231 = !DILocation(line: 5843, column: 4, scope: !12229)
!12232 = !DILocation(line: 5845, column: 4, scope: !12229)
!12233 = !DILocation(line: 5847, column: 39, scope: !12207)
!12234 = !DILocation(line: 5847, column: 22, scope: !12207)
!12235 = !DILocation(line: 5847, column: 3, scope: !12207)
!12236 = !DILocation(line: 5847, column: 8, scope: !12207)
!12237 = !DILocation(line: 5847, column: 20, scope: !12207)
!12238 = !DILocation(line: 5848, column: 20, scope: !12207)
!12239 = !DILocation(line: 5848, column: 3, scope: !12207)
!12240 = !DILocation(line: 5848, column: 8, scope: !12207)
!12241 = !DILocation(line: 5848, column: 18, scope: !12207)
!12242 = !DILocation(line: 5849, column: 2, scope: !12207)
!12243 = !DILocation(line: 5850, column: 2, scope: !748)
!12244 = !DILocation(line: 5851, column: 1, scope: !748)
!12245 = !DILocalVariable(name: "wnp", arg: 1, scope: !766, file: !1, line: 5898, type: !551)
!12246 = !DILocation(line: 5898, column: 38, scope: !766)
!12247 = !DILocalVariable(name: "numsize", arg: 2, scope: !766, file: !1, line: 5898, type: !31)
!12248 = !DILocation(line: 5898, column: 47, scope: !766)
!12249 = !DILocalVariable(name: "nullsize", arg: 3, scope: !766, file: !1, line: 5898, type: !31)
!12250 = !DILocation(line: 5898, column: 60, scope: !766)
!12251 = !DILocalVariable(name: "p", scope: !766, file: !1, line: 5900, type: !544)
!12252 = !DILocation(line: 5900, column: 17, scope: !766)
!12253 = !DILocalVariable(name: "wnp_ext_off", scope: !766, file: !1, line: 5901, type: !31)
!12254 = !DILocation(line: 5901, column: 6, scope: !766)
!12255 = !DILocation(line: 5903, column: 16, scope: !766)
!12256 = !DILocation(line: 5903, column: 21, scope: !766)
!12257 = !DILocation(line: 5903, column: 29, scope: !766)
!12258 = !DILocation(line: 5903, column: 14, scope: !766)
!12259 = !DILocation(line: 5904, column: 6, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !766, file: !1, line: 5904, column: 6)
!12261 = !DILocation(line: 5904, column: 11, scope: !12260)
!12262 = !DILocation(line: 5904, column: 18, scope: !12260)
!12263 = !DILocation(line: 5904, column: 16, scope: !12260)
!12264 = !DILocation(line: 5904, column: 29, scope: !12260)
!12265 = !DILocation(line: 5904, column: 26, scope: !12260)
!12266 = !DILocation(line: 5904, column: 6, scope: !766)
!12267 = !DILocation(line: 5905, column: 24, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12260, file: !1, line: 5904, column: 42)
!12269 = !DILocation(line: 5905, column: 29, scope: !12268)
!12270 = !DILocation(line: 5905, column: 37, scope: !12268)
!12271 = !DILocation(line: 5905, column: 5, scope: !12268)
!12272 = !DILocation(line: 5907, column: 11, scope: !12268)
!12273 = !DILocation(line: 5907, column: 15, scope: !12268)
!12274 = !DILocation(line: 5907, column: 20, scope: !12268)
!12275 = !DILocation(line: 5907, column: 13, scope: !12268)
!12276 = !DILocation(line: 5907, column: 27, scope: !12268)
!12277 = !DILocation(line: 5907, column: 25, scope: !12268)
!12278 = !DILocation(line: 5907, column: 36, scope: !12268)
!12279 = !DILocation(line: 5907, column: 40, scope: !12268)
!12280 = !DILocation(line: 5907, column: 38, scope: !12268)
!12281 = !DILocation(line: 5908, column: 7, scope: !12268)
!12282 = !DILocation(line: 5908, column: 12, scope: !12268)
!12283 = !DILocation(line: 5908, column: 20, scope: !12268)
!12284 = !DILocation(line: 5908, column: 30, scope: !12268)
!12285 = !DILocation(line: 5908, column: 28, scope: !12268)
!12286 = !DILocation(line: 5907, column: 3, scope: !12268)
!12287 = !DILocation(line: 5909, column: 40, scope: !12268)
!12288 = !DILocation(line: 5909, column: 45, scope: !12268)
!12289 = !DILocation(line: 5909, column: 52, scope: !12268)
!12290 = !DILocation(line: 5909, column: 50, scope: !12268)
!12291 = !DILocation(line: 5909, column: 38, scope: !12268)
!12292 = !DILocation(line: 5909, column: 3, scope: !12268)
!12293 = !DILocation(line: 5909, column: 8, scope: !12268)
!12294 = !DILocation(line: 5909, column: 16, scope: !12268)
!12295 = !DILocation(line: 5909, column: 24, scope: !12268)
!12296 = !DILocation(line: 5910, column: 25, scope: !12268)
!12297 = !DILocation(line: 5910, column: 39, scope: !12268)
!12298 = !DILocation(line: 5910, column: 44, scope: !12268)
!12299 = !DILocation(line: 5910, column: 52, scope: !12268)
!12300 = !DILocation(line: 5910, column: 37, scope: !12268)
!12301 = !DILocation(line: 5910, column: 3, scope: !12268)
!12302 = !DILocation(line: 5910, column: 8, scope: !12268)
!12303 = !DILocation(line: 5910, column: 16, scope: !12268)
!12304 = !DILocation(line: 5910, column: 23, scope: !12268)
!12305 = !DILocation(line: 5911, column: 2, scope: !12268)
!12306 = !DILocation(line: 5912, column: 1, scope: !766)
!12307 = !DILocalVariable(name: "n1", arg: 1, scope: !771, file: !1, line: 6417, type: !114)
!12308 = !DILocation(line: 6417, column: 55, scope: !771)
!12309 = !DILocalVariable(name: "n2", arg: 2, scope: !771, file: !1, line: 6418, type: !114)
!12310 = !DILocation(line: 6418, column: 35, scope: !771)
!12311 = !DILocalVariable(name: "e1", scope: !771, file: !1, line: 6420, type: !545)
!12312 = !DILocation(line: 6420, column: 23, scope: !771)
!12313 = !DILocation(line: 6420, column: 51, scope: !771)
!12314 = !DILocation(line: 6420, column: 28, scope: !771)
!12315 = !DILocalVariable(name: "e2", scope: !771, file: !1, line: 6421, type: !545)
!12316 = !DILocation(line: 6421, column: 23, scope: !771)
!12317 = !DILocation(line: 6421, column: 51, scope: !771)
!12318 = !DILocation(line: 6421, column: 28, scope: !771)
!12319 = !DILocation(line: 6423, column: 40, scope: !771)
!12320 = !DILocation(line: 6423, column: 44, scope: !771)
!12321 = !DILocation(line: 6423, column: 52, scope: !771)
!12322 = !DILocation(line: 6423, column: 56, scope: !771)
!12323 = !DILocation(line: 6423, column: 10, scope: !771)
!12324 = !DILocation(line: 6423, column: 2, scope: !771)
!12325 = !DILocalVariable(name: "node", arg: 1, scope: !773, file: !1, line: 6427, type: !114)
!12326 = !DILocation(line: 6427, column: 54, scope: !773)
!12327 = !DILocalVariable(name: "key", arg: 2, scope: !773, file: !1, line: 6427, type: !122)
!12328 = !DILocation(line: 6427, column: 72, scope: !773)
!12329 = !DILocalVariable(name: "isoent", scope: !773, file: !1, line: 6429, type: !531)
!12330 = !DILocation(line: 6429, column: 23, scope: !773)
!12331 = !DILocation(line: 6429, column: 55, scope: !773)
!12332 = !DILocation(line: 6429, column: 32, scope: !773)
!12333 = !DILocalVariable(name: "idrent", scope: !773, file: !1, line: 6430, type: !545)
!12334 = !DILocation(line: 6430, column: 23, scope: !773)
!12335 = !DILocation(line: 6430, column: 55, scope: !773)
!12336 = !DILocation(line: 6430, column: 32, scope: !773)
!12337 = !DILocation(line: 6432, column: 40, scope: !773)
!12338 = !DILocation(line: 6432, column: 48, scope: !773)
!12339 = !DILocation(line: 6432, column: 56, scope: !773)
!12340 = !DILocation(line: 6432, column: 10, scope: !773)
!12341 = !DILocation(line: 6432, column: 2, scope: !773)
!12342 = !DILocalVariable(name: "p", arg: 1, scope: !774, file: !1, line: 5931, type: !544)
!12343 = !DILocation(line: 5931, column: 28, scope: !774)
!12344 = !DILocalVariable(name: "num", arg: 2, scope: !774, file: !1, line: 5931, type: !31)
!12345 = !DILocation(line: 5931, column: 35, scope: !774)
!12346 = !DILocation(line: 5940, column: 6, scope: !774)
!12347 = !DILocation(line: 5941, column: 15, scope: !774)
!12348 = !DILocation(line: 5941, column: 19, scope: !774)
!12349 = !DILocation(line: 5941, column: 9, scope: !774)
!12350 = !DILocation(line: 5941, column: 2, scope: !774)
!12351 = !DILocation(line: 5941, column: 7, scope: !774)
!12352 = !DILocation(line: 5942, column: 6, scope: !774)
!12353 = !DILocation(line: 5943, column: 16, scope: !774)
!12354 = !DILocation(line: 5943, column: 20, scope: !774)
!12355 = !DILocation(line: 5943, column: 9, scope: !774)
!12356 = !DILocation(line: 5943, column: 2, scope: !774)
!12357 = !DILocation(line: 5943, column: 7, scope: !774)
!12358 = !DILocation(line: 5944, column: 6, scope: !774)
!12359 = !DILocation(line: 5945, column: 14, scope: !774)
!12360 = !DILocation(line: 5945, column: 9, scope: !774)
!12361 = !DILocation(line: 5945, column: 2, scope: !774)
!12362 = !DILocation(line: 5945, column: 7, scope: !774)
!12363 = !DILocation(line: 5946, column: 1, scope: !774)
!12364 = !DILocalVariable(name: "p1", arg: 1, scope: !772, file: !1, line: 6345, type: !531)
!12365 = !DILocation(line: 6345, column: 52, scope: !772)
!12366 = !DILocalVariable(name: "p2", arg: 2, scope: !772, file: !1, line: 6345, type: !531)
!12367 = !DILocation(line: 6345, column: 77, scope: !772)
!12368 = !DILocalVariable(name: "s1", scope: !772, file: !1, line: 6347, type: !429)
!12369 = !DILocation(line: 6347, column: 14, scope: !772)
!12370 = !DILocalVariable(name: "s2", scope: !772, file: !1, line: 6347, type: !429)
!12371 = !DILocation(line: 6347, column: 19, scope: !772)
!12372 = !DILocalVariable(name: "cmp", scope: !772, file: !1, line: 6348, type: !31)
!12373 = !DILocation(line: 6348, column: 6, scope: !772)
!12374 = !DILocalVariable(name: "l", scope: !772, file: !1, line: 6349, type: !31)
!12375 = !DILocation(line: 6349, column: 6, scope: !772)
!12376 = !DILocation(line: 6351, column: 7, scope: !772)
!12377 = !DILocation(line: 6351, column: 11, scope: !772)
!12378 = !DILocation(line: 6351, column: 5, scope: !772)
!12379 = !DILocation(line: 6352, column: 7, scope: !772)
!12380 = !DILocation(line: 6352, column: 11, scope: !772)
!12381 = !DILocation(line: 6352, column: 5, scope: !772)
!12382 = !DILocation(line: 6355, column: 6, scope: !772)
!12383 = !DILocation(line: 6355, column: 10, scope: !772)
!12384 = !DILocation(line: 6355, column: 4, scope: !772)
!12385 = !DILocation(line: 6356, column: 6, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6356, column: 6)
!12387 = !DILocation(line: 6356, column: 10, scope: !12386)
!12388 = !DILocation(line: 6356, column: 14, scope: !12386)
!12389 = !DILocation(line: 6356, column: 8, scope: !12386)
!12390 = !DILocation(line: 6356, column: 6, scope: !772)
!12391 = !DILocation(line: 6357, column: 7, scope: !12386)
!12392 = !DILocation(line: 6357, column: 11, scope: !12386)
!12393 = !DILocation(line: 6357, column: 5, scope: !12386)
!12394 = !DILocation(line: 6357, column: 3, scope: !12386)
!12395 = !DILocation(line: 6358, column: 15, scope: !772)
!12396 = !DILocation(line: 6358, column: 19, scope: !772)
!12397 = !DILocation(line: 6358, column: 23, scope: !772)
!12398 = !DILocation(line: 6358, column: 8, scope: !772)
!12399 = !DILocation(line: 6358, column: 6, scope: !772)
!12400 = !DILocation(line: 6359, column: 6, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6359, column: 6)
!12402 = !DILocation(line: 6359, column: 10, scope: !12401)
!12403 = !DILocation(line: 6359, column: 6, scope: !772)
!12404 = !DILocation(line: 6360, column: 11, scope: !12401)
!12405 = !DILocation(line: 6360, column: 3, scope: !12401)
!12406 = !DILocation(line: 6361, column: 6, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6361, column: 6)
!12408 = !DILocation(line: 6361, column: 10, scope: !12407)
!12409 = !DILocation(line: 6361, column: 20, scope: !12407)
!12410 = !DILocation(line: 6361, column: 24, scope: !12407)
!12411 = !DILocation(line: 6361, column: 18, scope: !12407)
!12412 = !DILocation(line: 6361, column: 6, scope: !772)
!12413 = !DILocation(line: 6362, column: 9, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12407, file: !1, line: 6361, column: 33)
!12415 = !DILocation(line: 6362, column: 6, scope: !12414)
!12416 = !DILocation(line: 6363, column: 7, scope: !12414)
!12417 = !DILocation(line: 6363, column: 11, scope: !12414)
!12418 = !DILocation(line: 6363, column: 21, scope: !12414)
!12419 = !DILocation(line: 6363, column: 25, scope: !12414)
!12420 = !DILocation(line: 6363, column: 19, scope: !12414)
!12421 = !DILocation(line: 6363, column: 5, scope: !12414)
!12422 = !DILocation(line: 6364, column: 3, scope: !12414)
!12423 = !DILocation(line: 6364, column: 11, scope: !12424)
!12424 = !DILexicalBlockFile(scope: !12414, file: !1, discriminator: 1)
!12425 = !DILocation(line: 6364, column: 3, scope: !12424)
!12426 = !DILocation(line: 6365, column: 19, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12414, file: !1, line: 6365, column: 8)
!12428 = !DILocation(line: 6365, column: 16, scope: !12427)
!12429 = !DILocation(line: 6365, column: 13, scope: !12427)
!12430 = !DILocation(line: 6365, column: 8, scope: !12414)
!12431 = !DILocation(line: 6367, column: 36, scope: !12427)
!12432 = !DILocation(line: 6367, column: 39, scope: !12427)
!12433 = !DILocation(line: 6367, column: 11, scope: !12427)
!12434 = !DILocation(line: 6367, column: 9, scope: !12427)
!12435 = !DILocation(line: 6366, column: 5, scope: !12427)
!12436 = !DILocation(line: 6364, column: 3, scope: !12437)
!12437 = !DILexicalBlockFile(scope: !12414, file: !1, discriminator: 2)
!12438 = !DILocation(line: 6368, column: 2, scope: !12414)
!12439 = !DILocation(line: 6368, column: 13, scope: !12440)
!12440 = !DILexicalBlockFile(scope: !12441, file: !1, discriminator: 1)
!12441 = distinct !DILexicalBlock(scope: !12407, file: !1, line: 6368, column: 13)
!12442 = !DILocation(line: 6368, column: 17, scope: !12440)
!12443 = !DILocation(line: 6368, column: 27, scope: !12440)
!12444 = !DILocation(line: 6368, column: 31, scope: !12440)
!12445 = !DILocation(line: 6368, column: 25, scope: !12440)
!12446 = !DILocation(line: 6369, column: 9, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12441, file: !1, line: 6368, column: 40)
!12448 = !DILocation(line: 6369, column: 6, scope: !12447)
!12449 = !DILocation(line: 6370, column: 7, scope: !12447)
!12450 = !DILocation(line: 6370, column: 11, scope: !12447)
!12451 = !DILocation(line: 6370, column: 21, scope: !12447)
!12452 = !DILocation(line: 6370, column: 25, scope: !12447)
!12453 = !DILocation(line: 6370, column: 19, scope: !12447)
!12454 = !DILocation(line: 6370, column: 5, scope: !12447)
!12455 = !DILocation(line: 6371, column: 3, scope: !12447)
!12456 = !DILocation(line: 6371, column: 11, scope: !12457)
!12457 = !DILexicalBlockFile(scope: !12447, file: !1, discriminator: 1)
!12458 = !DILocation(line: 6371, column: 3, scope: !12457)
!12459 = !DILocation(line: 6372, column: 19, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12447, file: !1, line: 6372, column: 8)
!12461 = !DILocation(line: 6372, column: 16, scope: !12460)
!12462 = !DILocation(line: 6372, column: 13, scope: !12460)
!12463 = !DILocation(line: 6372, column: 8, scope: !12447)
!12464 = !DILocation(line: 6373, column: 38, scope: !12460)
!12465 = !DILocation(line: 6373, column: 41, scope: !12460)
!12466 = !DILocation(line: 6373, column: 13, scope: !12460)
!12467 = !DILocation(line: 6374, column: 9, scope: !12460)
!12468 = !DILocation(line: 6373, column: 5, scope: !12460)
!12469 = !DILocation(line: 6371, column: 3, scope: !12470)
!12470 = !DILexicalBlockFile(scope: !12447, file: !1, discriminator: 2)
!12471 = !DILocation(line: 6375, column: 2, scope: !12447)
!12472 = !DILocation(line: 6377, column: 6, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6377, column: 6)
!12474 = !DILocation(line: 6377, column: 10, scope: !12473)
!12475 = !DILocation(line: 6377, column: 18, scope: !12473)
!12476 = !DILocation(line: 6377, column: 23, scope: !12473)
!12477 = !DILocation(line: 6377, column: 26, scope: !12478)
!12478 = !DILexicalBlockFile(scope: !12473, file: !1, discriminator: 1)
!12479 = !DILocation(line: 6377, column: 30, scope: !12478)
!12480 = !DILocation(line: 6377, column: 38, scope: !12478)
!12481 = !DILocation(line: 6377, column: 6, scope: !12478)
!12482 = !DILocation(line: 6378, column: 3, scope: !12473)
!12483 = !DILocation(line: 6379, column: 6, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6379, column: 6)
!12485 = !DILocation(line: 6379, column: 10, scope: !12484)
!12486 = !DILocation(line: 6379, column: 18, scope: !12484)
!12487 = !DILocation(line: 6379, column: 23, scope: !12484)
!12488 = !DILocation(line: 6379, column: 26, scope: !12489)
!12489 = !DILexicalBlockFile(scope: !12484, file: !1, discriminator: 1)
!12490 = !DILocation(line: 6379, column: 30, scope: !12489)
!12491 = !DILocation(line: 6379, column: 38, scope: !12489)
!12492 = !DILocation(line: 6379, column: 6, scope: !12489)
!12493 = !DILocation(line: 6380, column: 3, scope: !12484)
!12494 = !DILocation(line: 6381, column: 6, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6381, column: 6)
!12496 = !DILocation(line: 6381, column: 10, scope: !12495)
!12497 = !DILocation(line: 6381, column: 18, scope: !12495)
!12498 = !DILocation(line: 6381, column: 6, scope: !772)
!12499 = !DILocation(line: 6382, column: 3, scope: !12495)
!12500 = !DILocation(line: 6383, column: 6, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6383, column: 6)
!12502 = !DILocation(line: 6383, column: 10, scope: !12501)
!12503 = !DILocation(line: 6383, column: 18, scope: !12501)
!12504 = !DILocation(line: 6383, column: 6, scope: !772)
!12505 = !DILocation(line: 6384, column: 3, scope: !12501)
!12506 = !DILocation(line: 6385, column: 6, scope: !772)
!12507 = !DILocation(line: 6385, column: 10, scope: !772)
!12508 = !DILocation(line: 6385, column: 4, scope: !772)
!12509 = !DILocation(line: 6386, column: 6, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6386, column: 6)
!12511 = !DILocation(line: 6386, column: 10, scope: !12510)
!12512 = !DILocation(line: 6386, column: 14, scope: !12510)
!12513 = !DILocation(line: 6386, column: 8, scope: !12510)
!12514 = !DILocation(line: 6386, column: 6, scope: !772)
!12515 = !DILocation(line: 6387, column: 7, scope: !12510)
!12516 = !DILocation(line: 6387, column: 11, scope: !12510)
!12517 = !DILocation(line: 6387, column: 5, scope: !12510)
!12518 = !DILocation(line: 6387, column: 3, scope: !12510)
!12519 = !DILocation(line: 6388, column: 7, scope: !772)
!12520 = !DILocation(line: 6388, column: 11, scope: !772)
!12521 = !DILocation(line: 6388, column: 24, scope: !772)
!12522 = !DILocation(line: 6388, column: 28, scope: !772)
!12523 = !DILocation(line: 6388, column: 22, scope: !772)
!12524 = !DILocation(line: 6388, column: 5, scope: !772)
!12525 = !DILocation(line: 6389, column: 7, scope: !772)
!12526 = !DILocation(line: 6389, column: 11, scope: !772)
!12527 = !DILocation(line: 6389, column: 24, scope: !772)
!12528 = !DILocation(line: 6389, column: 28, scope: !772)
!12529 = !DILocation(line: 6389, column: 22, scope: !772)
!12530 = !DILocation(line: 6389, column: 5, scope: !772)
!12531 = !DILocation(line: 6390, column: 6, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6390, column: 6)
!12533 = !DILocation(line: 6390, column: 8, scope: !12532)
!12534 = !DILocation(line: 6390, column: 6, scope: !772)
!12535 = !DILocation(line: 6391, column: 16, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12532, file: !1, line: 6390, column: 13)
!12537 = !DILocation(line: 6391, column: 20, scope: !12536)
!12538 = !DILocation(line: 6391, column: 24, scope: !12536)
!12539 = !DILocation(line: 6391, column: 9, scope: !12536)
!12540 = !DILocation(line: 6391, column: 7, scope: !12536)
!12541 = !DILocation(line: 6392, column: 7, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12536, file: !1, line: 6392, column: 7)
!12543 = !DILocation(line: 6392, column: 11, scope: !12542)
!12544 = !DILocation(line: 6392, column: 7, scope: !12536)
!12545 = !DILocation(line: 6393, column: 12, scope: !12542)
!12546 = !DILocation(line: 6393, column: 4, scope: !12542)
!12547 = !DILocation(line: 6394, column: 2, scope: !12536)
!12548 = !DILocation(line: 6395, column: 6, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !772, file: !1, line: 6395, column: 6)
!12550 = !DILocation(line: 6395, column: 10, scope: !12549)
!12551 = !DILocation(line: 6395, column: 20, scope: !12549)
!12552 = !DILocation(line: 6395, column: 24, scope: !12549)
!12553 = !DILocation(line: 6395, column: 18, scope: !12549)
!12554 = !DILocation(line: 6395, column: 6, scope: !772)
!12555 = !DILocation(line: 6396, column: 9, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12549, file: !1, line: 6395, column: 33)
!12557 = !DILocation(line: 6396, column: 6, scope: !12556)
!12558 = !DILocation(line: 6397, column: 7, scope: !12556)
!12559 = !DILocation(line: 6397, column: 11, scope: !12556)
!12560 = !DILocation(line: 6397, column: 21, scope: !12556)
!12561 = !DILocation(line: 6397, column: 25, scope: !12556)
!12562 = !DILocation(line: 6397, column: 19, scope: !12556)
!12563 = !DILocation(line: 6397, column: 5, scope: !12556)
!12564 = !DILocation(line: 6398, column: 3, scope: !12556)
!12565 = !DILocation(line: 6398, column: 11, scope: !12566)
!12566 = !DILexicalBlockFile(scope: !12556, file: !1, discriminator: 1)
!12567 = !DILocation(line: 6398, column: 3, scope: !12566)
!12568 = !DILocation(line: 6399, column: 19, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12556, file: !1, line: 6399, column: 8)
!12570 = !DILocation(line: 6399, column: 16, scope: !12569)
!12571 = !DILocation(line: 6399, column: 13, scope: !12569)
!12572 = !DILocation(line: 6399, column: 8, scope: !12556)
!12573 = !DILocation(line: 6401, column: 36, scope: !12569)
!12574 = !DILocation(line: 6401, column: 39, scope: !12569)
!12575 = !DILocation(line: 6401, column: 11, scope: !12569)
!12576 = !DILocation(line: 6401, column: 9, scope: !12569)
!12577 = !DILocation(line: 6400, column: 5, scope: !12569)
!12578 = !DILocation(line: 6398, column: 3, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !12556, file: !1, discriminator: 2)
!12580 = !DILocation(line: 6402, column: 2, scope: !12556)
!12581 = !DILocation(line: 6402, column: 13, scope: !12582)
!12582 = !DILexicalBlockFile(scope: !12583, file: !1, discriminator: 1)
!12583 = distinct !DILexicalBlock(scope: !12549, file: !1, line: 6402, column: 13)
!12584 = !DILocation(line: 6402, column: 17, scope: !12582)
!12585 = !DILocation(line: 6402, column: 27, scope: !12582)
!12586 = !DILocation(line: 6402, column: 31, scope: !12582)
!12587 = !DILocation(line: 6402, column: 25, scope: !12582)
!12588 = !DILocation(line: 6403, column: 9, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12583, file: !1, line: 6402, column: 40)
!12590 = !DILocation(line: 6403, column: 6, scope: !12589)
!12591 = !DILocation(line: 6404, column: 7, scope: !12589)
!12592 = !DILocation(line: 6404, column: 11, scope: !12589)
!12593 = !DILocation(line: 6404, column: 21, scope: !12589)
!12594 = !DILocation(line: 6404, column: 25, scope: !12589)
!12595 = !DILocation(line: 6404, column: 19, scope: !12589)
!12596 = !DILocation(line: 6404, column: 5, scope: !12589)
!12597 = !DILocation(line: 6405, column: 3, scope: !12589)
!12598 = !DILocation(line: 6405, column: 11, scope: !12599)
!12599 = !DILexicalBlockFile(scope: !12589, file: !1, discriminator: 1)
!12600 = !DILocation(line: 6405, column: 3, scope: !12599)
!12601 = !DILocation(line: 6406, column: 19, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12589, file: !1, line: 6406, column: 8)
!12603 = !DILocation(line: 6406, column: 16, scope: !12602)
!12604 = !DILocation(line: 6406, column: 13, scope: !12602)
!12605 = !DILocation(line: 6406, column: 8, scope: !12589)
!12606 = !DILocation(line: 6407, column: 38, scope: !12602)
!12607 = !DILocation(line: 6407, column: 41, scope: !12602)
!12608 = !DILocation(line: 6407, column: 13, scope: !12602)
!12609 = !DILocation(line: 6408, column: 9, scope: !12602)
!12610 = !DILocation(line: 6407, column: 5, scope: !12602)
!12611 = !DILocation(line: 6405, column: 3, scope: !12612)
!12612 = !DILexicalBlockFile(scope: !12589, file: !1, discriminator: 2)
!12613 = !DILocation(line: 6409, column: 2, scope: !12589)
!12614 = !DILocation(line: 6413, column: 10, scope: !772)
!12615 = !DILocation(line: 6413, column: 2, scope: !772)
!12616 = !DILocation(line: 6414, column: 1, scope: !772)
!12617 = !DILocalVariable(name: "v1", arg: 1, scope: !782, file: !1, line: 6806, type: !122)
!12618 = !DILocation(line: 6806, column: 33, scope: !782)
!12619 = !DILocalVariable(name: "v2", arg: 2, scope: !782, file: !1, line: 6806, type: !122)
!12620 = !DILocation(line: 6806, column: 49, scope: !782)
!12621 = !DILocalVariable(name: "p1", scope: !782, file: !1, line: 6808, type: !531)
!12622 = !DILocation(line: 6808, column: 23, scope: !782)
!12623 = !DILocalVariable(name: "p2", scope: !782, file: !1, line: 6808, type: !531)
!12624 = !DILocation(line: 6808, column: 28, scope: !782)
!12625 = !DILocalVariable(name: "s1", scope: !782, file: !1, line: 6809, type: !429)
!12626 = !DILocation(line: 6809, column: 14, scope: !782)
!12627 = !DILocalVariable(name: "s2", scope: !782, file: !1, line: 6809, type: !429)
!12628 = !DILocation(line: 6809, column: 19, scope: !782)
!12629 = !DILocalVariable(name: "cmp", scope: !782, file: !1, line: 6810, type: !31)
!12630 = !DILocation(line: 6810, column: 6, scope: !782)
!12631 = !DILocalVariable(name: "l", scope: !782, file: !1, line: 6810, type: !31)
!12632 = !DILocation(line: 6810, column: 11, scope: !782)
!12633 = !DILocation(line: 6812, column: 44, scope: !782)
!12634 = !DILocation(line: 6812, column: 33, scope: !782)
!12635 = !DILocation(line: 6812, column: 9, scope: !782)
!12636 = !DILocation(line: 6812, column: 7, scope: !782)
!12637 = !DILocation(line: 6812, column: 5, scope: !782)
!12638 = !DILocation(line: 6813, column: 44, scope: !782)
!12639 = !DILocation(line: 6813, column: 33, scope: !782)
!12640 = !DILocation(line: 6813, column: 9, scope: !782)
!12641 = !DILocation(line: 6813, column: 7, scope: !782)
!12642 = !DILocation(line: 6813, column: 5, scope: !782)
!12643 = !DILocation(line: 6816, column: 8, scope: !782)
!12644 = !DILocation(line: 6816, column: 12, scope: !782)
!12645 = !DILocation(line: 6816, column: 20, scope: !782)
!12646 = !DILocation(line: 6816, column: 33, scope: !782)
!12647 = !DILocation(line: 6816, column: 37, scope: !782)
!12648 = !DILocation(line: 6816, column: 45, scope: !782)
!12649 = !DILocation(line: 6816, column: 31, scope: !782)
!12650 = !DILocation(line: 6816, column: 6, scope: !782)
!12651 = !DILocation(line: 6817, column: 6, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !782, file: !1, line: 6817, column: 6)
!12653 = !DILocation(line: 6817, column: 10, scope: !12652)
!12654 = !DILocation(line: 6817, column: 6, scope: !782)
!12655 = !DILocation(line: 6818, column: 11, scope: !12652)
!12656 = !DILocation(line: 6818, column: 3, scope: !12652)
!12657 = !DILocation(line: 6821, column: 7, scope: !782)
!12658 = !DILocation(line: 6821, column: 11, scope: !782)
!12659 = !DILocation(line: 6821, column: 5, scope: !782)
!12660 = !DILocation(line: 6822, column: 7, scope: !782)
!12661 = !DILocation(line: 6822, column: 11, scope: !782)
!12662 = !DILocation(line: 6822, column: 5, scope: !782)
!12663 = !DILocation(line: 6823, column: 6, scope: !782)
!12664 = !DILocation(line: 6823, column: 10, scope: !782)
!12665 = !DILocation(line: 6823, column: 4, scope: !782)
!12666 = !DILocation(line: 6824, column: 6, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !782, file: !1, line: 6824, column: 6)
!12668 = !DILocation(line: 6824, column: 10, scope: !12667)
!12669 = !DILocation(line: 6824, column: 14, scope: !12667)
!12670 = !DILocation(line: 6824, column: 8, scope: !12667)
!12671 = !DILocation(line: 6824, column: 6, scope: !782)
!12672 = !DILocation(line: 6825, column: 7, scope: !12667)
!12673 = !DILocation(line: 6825, column: 11, scope: !12667)
!12674 = !DILocation(line: 6825, column: 5, scope: !12667)
!12675 = !DILocation(line: 6825, column: 3, scope: !12667)
!12676 = !DILocation(line: 6826, column: 16, scope: !782)
!12677 = !DILocation(line: 6826, column: 20, scope: !782)
!12678 = !DILocation(line: 6826, column: 24, scope: !782)
!12679 = !DILocation(line: 6826, column: 8, scope: !782)
!12680 = !DILocation(line: 6826, column: 6, scope: !782)
!12681 = !DILocation(line: 6827, column: 6, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !782, file: !1, line: 6827, column: 6)
!12683 = !DILocation(line: 6827, column: 10, scope: !12682)
!12684 = !DILocation(line: 6827, column: 6, scope: !782)
!12685 = !DILocation(line: 6828, column: 11, scope: !12682)
!12686 = !DILocation(line: 6828, column: 3, scope: !12682)
!12687 = !DILocation(line: 6829, column: 6, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !782, file: !1, line: 6829, column: 6)
!12689 = !DILocation(line: 6829, column: 10, scope: !12688)
!12690 = !DILocation(line: 6829, column: 20, scope: !12688)
!12691 = !DILocation(line: 6829, column: 24, scope: !12688)
!12692 = !DILocation(line: 6829, column: 18, scope: !12688)
!12693 = !DILocation(line: 6829, column: 6, scope: !782)
!12694 = !DILocation(line: 6830, column: 9, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12688, file: !1, line: 6829, column: 33)
!12696 = !DILocation(line: 6830, column: 6, scope: !12695)
!12697 = !DILocation(line: 6831, column: 7, scope: !12695)
!12698 = !DILocation(line: 6831, column: 11, scope: !12695)
!12699 = !DILocation(line: 6831, column: 21, scope: !12695)
!12700 = !DILocation(line: 6831, column: 25, scope: !12695)
!12701 = !DILocation(line: 6831, column: 19, scope: !12695)
!12702 = !DILocation(line: 6831, column: 5, scope: !12695)
!12703 = !DILocation(line: 6832, column: 3, scope: !12695)
!12704 = !DILocation(line: 6832, column: 11, scope: !12705)
!12705 = !DILexicalBlockFile(scope: !12695, file: !1, discriminator: 1)
!12706 = !DILocation(line: 6832, column: 3, scope: !12705)
!12707 = !DILocation(line: 6833, column: 19, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12695, file: !1, line: 6833, column: 8)
!12709 = !DILocation(line: 6833, column: 16, scope: !12708)
!12710 = !DILocation(line: 6833, column: 13, scope: !12708)
!12711 = !DILocation(line: 6833, column: 8, scope: !12695)
!12712 = !DILocation(line: 6835, column: 36, scope: !12708)
!12713 = !DILocation(line: 6835, column: 39, scope: !12708)
!12714 = !DILocation(line: 6835, column: 11, scope: !12708)
!12715 = !DILocation(line: 6835, column: 9, scope: !12708)
!12716 = !DILocation(line: 6834, column: 5, scope: !12708)
!12717 = !DILocation(line: 6832, column: 3, scope: !12718)
!12718 = !DILexicalBlockFile(scope: !12695, file: !1, discriminator: 2)
!12719 = !DILocation(line: 6836, column: 2, scope: !12695)
!12720 = !DILocation(line: 6836, column: 13, scope: !12721)
!12721 = !DILexicalBlockFile(scope: !12722, file: !1, discriminator: 1)
!12722 = distinct !DILexicalBlock(scope: !12688, file: !1, line: 6836, column: 13)
!12723 = !DILocation(line: 6836, column: 17, scope: !12721)
!12724 = !DILocation(line: 6836, column: 27, scope: !12721)
!12725 = !DILocation(line: 6836, column: 31, scope: !12721)
!12726 = !DILocation(line: 6836, column: 25, scope: !12721)
!12727 = !DILocation(line: 6837, column: 9, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12722, file: !1, line: 6836, column: 40)
!12729 = !DILocation(line: 6837, column: 6, scope: !12728)
!12730 = !DILocation(line: 6838, column: 7, scope: !12728)
!12731 = !DILocation(line: 6838, column: 11, scope: !12728)
!12732 = !DILocation(line: 6838, column: 21, scope: !12728)
!12733 = !DILocation(line: 6838, column: 25, scope: !12728)
!12734 = !DILocation(line: 6838, column: 19, scope: !12728)
!12735 = !DILocation(line: 6838, column: 5, scope: !12728)
!12736 = !DILocation(line: 6839, column: 3, scope: !12728)
!12737 = !DILocation(line: 6839, column: 11, scope: !12738)
!12738 = !DILexicalBlockFile(scope: !12728, file: !1, discriminator: 1)
!12739 = !DILocation(line: 6839, column: 3, scope: !12738)
!12740 = !DILocation(line: 6840, column: 19, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12728, file: !1, line: 6840, column: 8)
!12742 = !DILocation(line: 6840, column: 16, scope: !12741)
!12743 = !DILocation(line: 6840, column: 13, scope: !12741)
!12744 = !DILocation(line: 6840, column: 8, scope: !12728)
!12745 = !DILocation(line: 6841, column: 38, scope: !12741)
!12746 = !DILocation(line: 6841, column: 41, scope: !12741)
!12747 = !DILocation(line: 6841, column: 13, scope: !12741)
!12748 = !DILocation(line: 6842, column: 9, scope: !12741)
!12749 = !DILocation(line: 6841, column: 5, scope: !12741)
!12750 = !DILocation(line: 6839, column: 3, scope: !12751)
!12751 = !DILexicalBlockFile(scope: !12728, file: !1, discriminator: 2)
!12752 = !DILocation(line: 6843, column: 2, scope: !12728)
!12753 = !DILocation(line: 6844, column: 2, scope: !782)
!12754 = !DILocation(line: 6845, column: 1, scope: !782)
!12755 = !DILocalVariable(name: "v1", arg: 1, scope: !783, file: !1, line: 6848, type: !122)
!12756 = !DILocation(line: 6848, column: 40, scope: !783)
!12757 = !DILocalVariable(name: "v2", arg: 2, scope: !783, file: !1, line: 6848, type: !122)
!12758 = !DILocation(line: 6848, column: 56, scope: !783)
!12759 = !DILocalVariable(name: "p1", scope: !783, file: !1, line: 6850, type: !531)
!12760 = !DILocation(line: 6850, column: 23, scope: !783)
!12761 = !DILocalVariable(name: "p2", scope: !783, file: !1, line: 6850, type: !531)
!12762 = !DILocation(line: 6850, column: 28, scope: !783)
!12763 = !DILocalVariable(name: "s1", scope: !783, file: !1, line: 6851, type: !453)
!12764 = !DILocation(line: 6851, column: 23, scope: !783)
!12765 = !DILocalVariable(name: "s2", scope: !783, file: !1, line: 6851, type: !453)
!12766 = !DILocation(line: 6851, column: 28, scope: !783)
!12767 = !DILocalVariable(name: "cmp", scope: !783, file: !1, line: 6852, type: !31)
!12768 = !DILocation(line: 6852, column: 6, scope: !783)
!12769 = !DILocalVariable(name: "l", scope: !783, file: !1, line: 6852, type: !31)
!12770 = !DILocation(line: 6852, column: 11, scope: !783)
!12771 = !DILocation(line: 6854, column: 44, scope: !783)
!12772 = !DILocation(line: 6854, column: 33, scope: !783)
!12773 = !DILocation(line: 6854, column: 9, scope: !783)
!12774 = !DILocation(line: 6854, column: 7, scope: !783)
!12775 = !DILocation(line: 6854, column: 5, scope: !783)
!12776 = !DILocation(line: 6855, column: 44, scope: !783)
!12777 = !DILocation(line: 6855, column: 33, scope: !783)
!12778 = !DILocation(line: 6855, column: 9, scope: !783)
!12779 = !DILocation(line: 6855, column: 7, scope: !783)
!12780 = !DILocation(line: 6855, column: 5, scope: !783)
!12781 = !DILocation(line: 6858, column: 8, scope: !783)
!12782 = !DILocation(line: 6858, column: 12, scope: !783)
!12783 = !DILocation(line: 6858, column: 20, scope: !783)
!12784 = !DILocation(line: 6858, column: 33, scope: !783)
!12785 = !DILocation(line: 6858, column: 37, scope: !783)
!12786 = !DILocation(line: 6858, column: 45, scope: !783)
!12787 = !DILocation(line: 6858, column: 31, scope: !783)
!12788 = !DILocation(line: 6858, column: 6, scope: !783)
!12789 = !DILocation(line: 6859, column: 6, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !783, file: !1, line: 6859, column: 6)
!12791 = !DILocation(line: 6859, column: 10, scope: !12790)
!12792 = !DILocation(line: 6859, column: 6, scope: !783)
!12793 = !DILocation(line: 6860, column: 11, scope: !12790)
!12794 = !DILocation(line: 6860, column: 3, scope: !12790)
!12795 = !DILocation(line: 6863, column: 30, scope: !783)
!12796 = !DILocation(line: 6863, column: 34, scope: !783)
!12797 = !DILocation(line: 6863, column: 5, scope: !783)
!12798 = !DILocation(line: 6864, column: 30, scope: !783)
!12799 = !DILocation(line: 6864, column: 34, scope: !783)
!12800 = !DILocation(line: 6864, column: 5, scope: !783)
!12801 = !DILocation(line: 6865, column: 6, scope: !783)
!12802 = !DILocation(line: 6865, column: 10, scope: !783)
!12803 = !DILocation(line: 6865, column: 4, scope: !783)
!12804 = !DILocation(line: 6866, column: 6, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !783, file: !1, line: 6866, column: 6)
!12806 = !DILocation(line: 6866, column: 10, scope: !12805)
!12807 = !DILocation(line: 6866, column: 14, scope: !12805)
!12808 = !DILocation(line: 6866, column: 8, scope: !12805)
!12809 = !DILocation(line: 6866, column: 6, scope: !783)
!12810 = !DILocation(line: 6867, column: 7, scope: !12805)
!12811 = !DILocation(line: 6867, column: 11, scope: !12805)
!12812 = !DILocation(line: 6867, column: 5, scope: !12805)
!12813 = !DILocation(line: 6867, column: 3, scope: !12805)
!12814 = !DILocation(line: 6868, column: 15, scope: !783)
!12815 = !DILocation(line: 6868, column: 19, scope: !783)
!12816 = !DILocation(line: 6868, column: 23, scope: !783)
!12817 = !DILocation(line: 6868, column: 8, scope: !783)
!12818 = !DILocation(line: 6868, column: 6, scope: !783)
!12819 = !DILocation(line: 6869, column: 6, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !783, file: !1, line: 6869, column: 6)
!12821 = !DILocation(line: 6869, column: 10, scope: !12820)
!12822 = !DILocation(line: 6869, column: 6, scope: !783)
!12823 = !DILocation(line: 6870, column: 11, scope: !12820)
!12824 = !DILocation(line: 6870, column: 3, scope: !12820)
!12825 = !DILocation(line: 6871, column: 6, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !783, file: !1, line: 6871, column: 6)
!12827 = !DILocation(line: 6871, column: 10, scope: !12826)
!12828 = !DILocation(line: 6871, column: 20, scope: !12826)
!12829 = !DILocation(line: 6871, column: 24, scope: !12826)
!12830 = !DILocation(line: 6871, column: 18, scope: !12826)
!12831 = !DILocation(line: 6871, column: 6, scope: !783)
!12832 = !DILocation(line: 6872, column: 9, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12826, file: !1, line: 6871, column: 33)
!12834 = !DILocation(line: 6872, column: 6, scope: !12833)
!12835 = !DILocation(line: 6873, column: 7, scope: !12833)
!12836 = !DILocation(line: 6873, column: 11, scope: !12833)
!12837 = !DILocation(line: 6873, column: 21, scope: !12833)
!12838 = !DILocation(line: 6873, column: 25, scope: !12833)
!12839 = !DILocation(line: 6873, column: 19, scope: !12833)
!12840 = !DILocation(line: 6873, column: 5, scope: !12833)
!12841 = !DILocation(line: 6874, column: 3, scope: !12833)
!12842 = !DILocation(line: 6874, column: 11, scope: !12843)
!12843 = !DILexicalBlockFile(scope: !12833, file: !1, discriminator: 1)
!12844 = !DILocation(line: 6874, column: 3, scope: !12843)
!12845 = !DILocation(line: 6875, column: 16, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12833, file: !1, line: 6875, column: 8)
!12847 = !DILocation(line: 6875, column: 13, scope: !12846)
!12848 = !DILocation(line: 6875, column: 10, scope: !12846)
!12849 = !DILocation(line: 6875, column: 8, scope: !12833)
!12850 = !DILocation(line: 6876, column: 40, scope: !12846)
!12851 = !DILocation(line: 6876, column: 43, scope: !12846)
!12852 = !DILocation(line: 6876, column: 15, scope: !12846)
!12853 = !DILocation(line: 6876, column: 13, scope: !12846)
!12854 = !DILocation(line: 6876, column: 5, scope: !12846)
!12855 = !DILocation(line: 6874, column: 3, scope: !12856)
!12856 = !DILexicalBlockFile(scope: !12833, file: !1, discriminator: 2)
!12857 = !DILocation(line: 6877, column: 2, scope: !12833)
!12858 = !DILocation(line: 6877, column: 13, scope: !12859)
!12859 = !DILexicalBlockFile(scope: !12860, file: !1, discriminator: 1)
!12860 = distinct !DILexicalBlock(scope: !12826, file: !1, line: 6877, column: 13)
!12861 = !DILocation(line: 6877, column: 17, scope: !12859)
!12862 = !DILocation(line: 6877, column: 27, scope: !12859)
!12863 = !DILocation(line: 6877, column: 31, scope: !12859)
!12864 = !DILocation(line: 6877, column: 25, scope: !12859)
!12865 = !DILocation(line: 6878, column: 9, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12860, file: !1, line: 6877, column: 40)
!12867 = !DILocation(line: 6878, column: 6, scope: !12866)
!12868 = !DILocation(line: 6879, column: 7, scope: !12866)
!12869 = !DILocation(line: 6879, column: 11, scope: !12866)
!12870 = !DILocation(line: 6879, column: 21, scope: !12866)
!12871 = !DILocation(line: 6879, column: 25, scope: !12866)
!12872 = !DILocation(line: 6879, column: 19, scope: !12866)
!12873 = !DILocation(line: 6879, column: 5, scope: !12866)
!12874 = !DILocation(line: 6880, column: 3, scope: !12866)
!12875 = !DILocation(line: 6880, column: 11, scope: !12876)
!12876 = !DILexicalBlockFile(scope: !12866, file: !1, discriminator: 1)
!12877 = !DILocation(line: 6880, column: 3, scope: !12876)
!12878 = !DILocation(line: 6881, column: 16, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12866, file: !1, line: 6881, column: 8)
!12880 = !DILocation(line: 6881, column: 13, scope: !12879)
!12881 = !DILocation(line: 6881, column: 10, scope: !12879)
!12882 = !DILocation(line: 6881, column: 8, scope: !12866)
!12883 = !DILocation(line: 6882, column: 38, scope: !12879)
!12884 = !DILocation(line: 6882, column: 41, scope: !12879)
!12885 = !DILocation(line: 6882, column: 13, scope: !12879)
!12886 = !DILocation(line: 6882, column: 12, scope: !12879)
!12887 = !DILocation(line: 6882, column: 5, scope: !12879)
!12888 = !DILocation(line: 6880, column: 3, scope: !12889)
!12889 = !DILexicalBlockFile(scope: !12866, file: !1, discriminator: 2)
!12890 = !DILocation(line: 6883, column: 2, scope: !12866)
!12891 = !DILocation(line: 6884, column: 2, scope: !783)
!12892 = !DILocation(line: 6885, column: 1, scope: !783)
!12893 = !DILocalVariable(name: "iso9660", arg: 1, scope: !790, file: !1, line: 4329, type: !530)
!12894 = !DILocation(line: 4329, column: 49, scope: !790)
!12895 = !DILocalVariable(name: "vdd", arg: 2, scope: !790, file: !1, line: 4329, type: !688)
!12896 = !DILocation(line: 4329, column: 70, scope: !790)
!12897 = !DILocalVariable(name: "isoent", arg: 3, scope: !790, file: !1, line: 4330, type: !76)
!12898 = !DILocation(line: 4330, column: 20, scope: !790)
!12899 = !DILocalVariable(name: "depth", arg: 4, scope: !790, file: !1, line: 4330, type: !31)
!12900 = !DILocation(line: 4330, column: 32, scope: !790)
!12901 = !DILocalVariable(name: "enttbl", scope: !790, file: !1, line: 4332, type: !97)
!12902 = !DILocation(line: 4332, column: 18, scope: !790)
!12903 = !DILocalVariable(name: "bs", scope: !790, file: !1, line: 4333, type: !31)
!12904 = !DILocation(line: 4333, column: 6, scope: !790)
!12905 = !DILocalVariable(name: "block", scope: !790, file: !1, line: 4333, type: !31)
!12906 = !DILocation(line: 4333, column: 10, scope: !790)
!12907 = !DILocalVariable(name: "i", scope: !790, file: !1, line: 4333, type: !31)
!12908 = !DILocation(line: 4333, column: 17, scope: !790)
!12909 = !DILocation(line: 4335, column: 8, scope: !790)
!12910 = !DILocation(line: 4336, column: 24, scope: !790)
!12911 = !DILocation(line: 4336, column: 33, scope: !790)
!12912 = !DILocation(line: 4336, column: 55, scope: !790)
!12913 = !DILocation(line: 4336, column: 60, scope: !790)
!12914 = !DILocation(line: 4336, column: 7, scope: !790)
!12915 = !DILocation(line: 4336, column: 5, scope: !790)
!12916 = !DILocation(line: 4337, column: 25, scope: !790)
!12917 = !DILocation(line: 4337, column: 34, scope: !790)
!12918 = !DILocation(line: 4337, column: 58, scope: !790)
!12919 = !DILocation(line: 4337, column: 63, scope: !790)
!12920 = !DILocation(line: 4337, column: 8, scope: !790)
!12921 = !DILocation(line: 4337, column: 5, scope: !790)
!12922 = !DILocation(line: 4339, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !790, file: !1, line: 4339, column: 6)
!12924 = !DILocation(line: 4339, column: 14, scope: !12923)
!12925 = !DILocation(line: 4339, column: 23, scope: !12923)
!12926 = !DILocation(line: 4339, column: 27, scope: !12923)
!12927 = !DILocation(line: 4339, column: 32, scope: !12923)
!12928 = !DILocation(line: 4339, column: 36, scope: !12929)
!12929 = !DILexicalBlockFile(scope: !12923, file: !1, discriminator: 1)
!12930 = !DILocation(line: 4339, column: 41, scope: !12929)
!12931 = !DILocation(line: 4339, column: 50, scope: !12929)
!12932 = !DILocation(line: 4339, column: 64, scope: !12929)
!12933 = !DILocation(line: 4340, column: 7, scope: !12923)
!12934 = !DILocation(line: 4340, column: 16, scope: !12923)
!12935 = !DILocation(line: 4340, column: 20, scope: !12923)
!12936 = !DILocation(line: 4340, column: 23, scope: !12923)
!12937 = !DILocation(line: 4340, column: 26, scope: !12929)
!12938 = !DILocation(line: 4340, column: 32, scope: !12929)
!12939 = !DILocation(line: 4340, column: 39, scope: !12929)
!12940 = !DILocation(line: 4340, column: 44, scope: !12929)
!12941 = !DILocation(line: 4340, column: 36, scope: !12929)
!12942 = !DILocation(line: 4339, column: 6, scope: !12943)
!12943 = !DILexicalBlockFile(scope: !790, file: !1, discriminator: 2)
!12944 = !DILocation(line: 4341, column: 11, scope: !12923)
!12945 = !DILocation(line: 4341, column: 3, scope: !12923)
!12946 = !DILocation(line: 4343, column: 11, scope: !790)
!12947 = !DILocation(line: 4343, column: 19, scope: !790)
!12948 = !DILocation(line: 4343, column: 9, scope: !790)
!12949 = !DILocation(line: 4344, column: 9, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !790, file: !1, line: 4344, column: 2)
!12951 = !DILocation(line: 4344, column: 7, scope: !12950)
!12952 = !DILocation(line: 4344, column: 14, scope: !12953)
!12953 = !DILexicalBlockFile(scope: !12954, file: !1, discriminator: 1)
!12954 = distinct !DILexicalBlock(scope: !12950, file: !1, line: 4344, column: 2)
!12955 = !DILocation(line: 4344, column: 18, scope: !12953)
!12956 = !DILocation(line: 4344, column: 26, scope: !12953)
!12957 = !DILocation(line: 4344, column: 35, scope: !12953)
!12958 = !DILocation(line: 4344, column: 16, scope: !12953)
!12959 = !DILocation(line: 4344, column: 2, scope: !12953)
!12960 = !DILocalVariable(name: "np", scope: !12961, file: !1, line: 4345, type: !76)
!12961 = distinct !DILexicalBlock(scope: !12954, file: !1, line: 4344, column: 45)
!12962 = !DILocation(line: 4345, column: 18, scope: !12961)
!12963 = !DILocation(line: 4345, column: 30, scope: !12961)
!12964 = !DILocation(line: 4345, column: 23, scope: !12961)
!12965 = !DILocalVariable(name: "file", scope: !12961, file: !1, line: 4346, type: !7)
!12966 = !DILocation(line: 4346, column: 19, scope: !12961)
!12967 = !DILocation(line: 4348, column: 10, scope: !12961)
!12968 = !DILocation(line: 4348, column: 14, scope: !12961)
!12969 = !DILocation(line: 4348, column: 8, scope: !12961)
!12970 = !DILocation(line: 4349, column: 7, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12961, file: !1, line: 4349, column: 7)
!12972 = !DILocation(line: 4349, column: 13, scope: !12971)
!12973 = !DILocation(line: 4349, column: 29, scope: !12971)
!12974 = !DILocation(line: 4349, column: 7, scope: !12961)
!12975 = !DILocation(line: 4350, column: 11, scope: !12971)
!12976 = !DILocation(line: 4350, column: 17, scope: !12971)
!12977 = !DILocation(line: 4350, column: 9, scope: !12971)
!12978 = !DILocation(line: 4350, column: 4, scope: !12971)
!12979 = !DILocation(line: 4351, column: 25, scope: !12961)
!12980 = !DILocation(line: 4351, column: 31, scope: !12961)
!12981 = !DILocation(line: 4351, column: 3, scope: !12961)
!12982 = !DILocation(line: 4351, column: 9, scope: !12961)
!12983 = !DILocation(line: 4351, column: 21, scope: !12961)
!12984 = !DILocation(line: 4352, column: 3, scope: !12961)
!12985 = !DILocalVariable(name: "dr_l", scope: !12986, file: !1, line: 4353, type: !31)
!12986 = distinct !DILexicalBlock(scope: !12961, file: !1, line: 4352, column: 6)
!12987 = !DILocation(line: 4353, column: 8, scope: !12986)
!12988 = !DILocation(line: 4355, column: 28, scope: !12986)
!12989 = !DILocation(line: 4355, column: 37, scope: !12986)
!12990 = !DILocation(line: 4356, column: 8, scope: !12986)
!12991 = !DILocation(line: 4356, column: 13, scope: !12986)
!12992 = !DILocation(line: 4355, column: 11, scope: !12986)
!12993 = !DILocation(line: 4355, column: 9, scope: !12986)
!12994 = !DILocation(line: 4357, column: 9, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12986, file: !1, line: 4357, column: 8)
!12996 = !DILocation(line: 4357, column: 14, scope: !12995)
!12997 = !DILocation(line: 4357, column: 12, scope: !12995)
!12998 = !DILocation(line: 4357, column: 20, scope: !12995)
!12999 = !DILocation(line: 4357, column: 8, scope: !12986)
!13000 = !DILocation(line: 4358, column: 11, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12995, file: !1, line: 4357, column: 42)
!13002 = !DILocation(line: 4359, column: 10, scope: !13001)
!13003 = !DILocation(line: 4359, column: 8, scope: !13001)
!13004 = !DILocation(line: 4360, column: 4, scope: !13001)
!13005 = !DILocation(line: 4361, column: 11, scope: !12995)
!13006 = !DILocation(line: 4361, column: 8, scope: !12995)
!13007 = !DILocation(line: 4362, column: 24, scope: !12986)
!13008 = !DILocation(line: 4362, column: 30, scope: !12986)
!13009 = !DILocation(line: 4362, column: 43, scope: !12986)
!13010 = !DILocation(line: 4362, column: 4, scope: !12986)
!13011 = !DILocation(line: 4362, column: 10, scope: !12986)
!13012 = !DILocation(line: 4362, column: 22, scope: !12986)
!13013 = !DILocation(line: 4363, column: 3, scope: !12986)
!13014 = !DILocation(line: 4363, column: 12, scope: !13015)
!13015 = !DILexicalBlockFile(scope: !12961, file: !1, discriminator: 1)
!13016 = !DILocation(line: 4363, column: 18, scope: !13015)
!13017 = !DILocation(line: 4363, column: 30, scope: !13015)
!13018 = !DILocation(line: 4363, column: 3, scope: !13015)
!13019 = !DILocation(line: 4364, column: 2, scope: !12961)
!13020 = !DILocation(line: 4344, column: 41, scope: !13021)
!13021 = !DILexicalBlockFile(scope: !12954, file: !1, discriminator: 2)
!13022 = !DILocation(line: 4344, column: 2, scope: !13021)
!13023 = !DILocation(line: 4365, column: 10, scope: !790)
!13024 = !DILocation(line: 4365, column: 2, scope: !790)
!13025 = !DILocation(line: 4366, column: 1, scope: !790)
!13026 = !DILocalVariable(name: "isoent", arg: 1, scope: !866, file: !1, line: 2765, type: !76)
!13027 = !DILocation(line: 2765, column: 37, scope: !866)
!13028 = !DILocalVariable(name: "location", arg: 2, scope: !866, file: !1, line: 2765, type: !31)
!13029 = !DILocation(line: 2765, column: 49, scope: !866)
!13030 = !DILocalVariable(name: "rec", scope: !866, file: !1, line: 2767, type: !155)
!13031 = !DILocation(line: 2767, column: 19, scope: !866)
!13032 = !DILocalVariable(name: "cnt", scope: !866, file: !1, line: 2768, type: !31)
!13033 = !DILocation(line: 2768, column: 6, scope: !866)
!13034 = !DILocation(line: 2770, column: 6, scope: !866)
!13035 = !DILocation(line: 2771, column: 8, scope: !866)
!13036 = !DILocation(line: 2771, column: 16, scope: !866)
!13037 = !DILocation(line: 2771, column: 30, scope: !866)
!13038 = !DILocation(line: 2771, column: 6, scope: !866)
!13039 = !DILocation(line: 2772, column: 34, scope: !866)
!13040 = !DILocation(line: 2772, column: 2, scope: !866)
!13041 = !DILocation(line: 2772, column: 10, scope: !866)
!13042 = !DILocation(line: 2772, column: 24, scope: !866)
!13043 = !DILocation(line: 2772, column: 32, scope: !866)
!13044 = !DILocation(line: 2773, column: 2, scope: !866)
!13045 = !DILocation(line: 2773, column: 9, scope: !13046)
!13046 = !DILexicalBlockFile(scope: !866, file: !1, discriminator: 1)
!13047 = !DILocation(line: 2773, column: 2, scope: !13046)
!13048 = !DILocation(line: 2774, column: 6, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !866, file: !1, line: 2773, column: 14)
!13050 = !DILocation(line: 2775, column: 27, scope: !13049)
!13051 = !DILocation(line: 2775, column: 3, scope: !13049)
!13052 = !DILocation(line: 2775, column: 8, scope: !13049)
!13053 = !DILocation(line: 2775, column: 17, scope: !13049)
!13054 = !DILocation(line: 2776, column: 3, scope: !13049)
!13055 = !DILocation(line: 2776, column: 8, scope: !13049)
!13056 = !DILocation(line: 2776, column: 15, scope: !13049)
!13057 = !DILocation(line: 2777, column: 9, scope: !13049)
!13058 = !DILocation(line: 2777, column: 14, scope: !13049)
!13059 = !DILocation(line: 2777, column: 7, scope: !13049)
!13060 = !DILocation(line: 2773, column: 2, scope: !13061)
!13061 = !DILexicalBlockFile(scope: !866, file: !1, discriminator: 2)
!13062 = !DILocation(line: 2779, column: 10, scope: !866)
!13063 = !DILocation(line: 2779, column: 2, scope: !866)
!13064 = !DILocalVariable(name: "iso9660", arg: 1, scope: !793, file: !1, line: 3597, type: !530)
!13065 = !DILocation(line: 3597, column: 34, scope: !793)
!13066 = !DILocalVariable(name: "isoent", arg: 2, scope: !793, file: !1, line: 3597, type: !76)
!13067 = !DILocation(line: 3597, column: 58, scope: !793)
!13068 = !DILocalVariable(name: "t", arg: 3, scope: !793, file: !1, line: 3598, type: !338)
!13069 = !DILocation(line: 3598, column: 23, scope: !793)
!13070 = !DILocalVariable(name: "vdd_type", arg: 4, scope: !793, file: !1, line: 3598, type: !60)
!13071 = !DILocation(line: 3598, column: 40, scope: !793)
!13072 = !DILocation(line: 3602, column: 6, scope: !793)
!13073 = !DILocation(line: 3602, column: 14, scope: !793)
!13074 = !DILocation(line: 3602, column: 23, scope: !793)
!13075 = !DILocation(line: 3602, column: 26, scope: !793)
!13076 = !DILocation(line: 3601, column: 10, scope: !793)
!13077 = !DILocation(line: 3601, column: 2, scope: !793)
!13078 = !DILocalVariable(name: "p", arg: 1, scope: !796, file: !1, line: 3437, type: !544)
!13079 = !DILocation(line: 3437, column: 37, scope: !796)
!13080 = !DILocalVariable(name: "n", arg: 2, scope: !796, file: !1, line: 3437, type: !23)
!13081 = !DILocation(line: 3437, column: 47, scope: !796)
!13082 = !DILocalVariable(name: "isoent", arg: 3, scope: !796, file: !1, line: 3437, type: !76)
!13083 = !DILocation(line: 3437, column: 65, scope: !796)
!13084 = !DILocalVariable(name: "iso9660", arg: 4, scope: !796, file: !1, line: 3438, type: !530)
!13085 = !DILocation(line: 3438, column: 21, scope: !796)
!13086 = !DILocalVariable(name: "t", arg: 5, scope: !796, file: !1, line: 3438, type: !338)
!13087 = !DILocation(line: 3438, column: 48, scope: !796)
!13088 = !DILocalVariable(name: "vdd_type", arg: 6, scope: !796, file: !1, line: 3439, type: !60)
!13089 = !DILocation(line: 3439, column: 19, scope: !796)
!13090 = !DILocalVariable(name: "bp", scope: !796, file: !1, line: 3441, type: !544)
!13091 = !DILocation(line: 3441, column: 17, scope: !796)
!13092 = !DILocalVariable(name: "dr_len", scope: !796, file: !1, line: 3442, type: !23)
!13093 = !DILocation(line: 3442, column: 9, scope: !796)
!13094 = !DILocalVariable(name: "fi_len", scope: !796, file: !1, line: 3443, type: !23)
!13095 = !DILocation(line: 3443, column: 9, scope: !796)
!13096 = !DILocation(line: 3445, column: 6, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3445, column: 6)
!13098 = !DILocation(line: 3445, column: 8, scope: !13097)
!13099 = !DILocation(line: 3445, column: 6, scope: !796)
!13100 = !DILocation(line: 3451, column: 11, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13097, file: !1, line: 3445, column: 17)
!13102 = !DILocation(line: 3451, column: 3, scope: !13101)
!13103 = !DILocation(line: 3453, column: 13, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13101, file: !1, line: 3451, column: 14)
!13105 = !DILocation(line: 3453, column: 21, scope: !13104)
!13106 = !DILocation(line: 3453, column: 28, scope: !13104)
!13107 = !DILocation(line: 3453, column: 11, scope: !13104)
!13108 = !DILocation(line: 3453, column: 32, scope: !13104)
!13109 = !DILocation(line: 3455, column: 13, scope: !13104)
!13110 = !DILocation(line: 3455, column: 21, scope: !13104)
!13111 = !DILocation(line: 3455, column: 28, scope: !13104)
!13112 = !DILocation(line: 3455, column: 11, scope: !13104)
!13113 = !DILocation(line: 3455, column: 34, scope: !13104)
!13114 = !DILocation(line: 3457, column: 13, scope: !13104)
!13115 = !DILocation(line: 3457, column: 21, scope: !13104)
!13116 = !DILocation(line: 3457, column: 28, scope: !13104)
!13117 = !DILocation(line: 3457, column: 11, scope: !13104)
!13118 = !DILocation(line: 3457, column: 36, scope: !13104)
!13119 = !DILocation(line: 3457, column: 36, scope: !13120)
!13120 = !DILexicalBlockFile(scope: !13104, file: !1, discriminator: 1)
!13121 = !DILocation(line: 3460, column: 13, scope: !13104)
!13122 = !DILocation(line: 3460, column: 21, scope: !13104)
!13123 = !DILocation(line: 3460, column: 28, scope: !13104)
!13124 = !DILocation(line: 3460, column: 11, scope: !13104)
!13125 = !DILocation(line: 3460, column: 36, scope: !13104)
!13126 = !DILocation(line: 3462, column: 7, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13101, file: !1, line: 3462, column: 7)
!13128 = !DILocation(line: 3462, column: 16, scope: !13127)
!13129 = !DILocation(line: 3462, column: 14, scope: !13127)
!13130 = !DILocation(line: 3462, column: 7, scope: !13101)
!13131 = !DILocation(line: 3463, column: 4, scope: !13127)
!13132 = !DILocation(line: 3464, column: 2, scope: !13101)
!13133 = !DILocation(line: 3466, column: 6, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3466, column: 6)
!13135 = !DILocation(line: 3466, column: 8, scope: !13134)
!13136 = !DILocation(line: 3466, column: 26, scope: !13134)
!13137 = !DILocation(line: 3466, column: 29, scope: !13138)
!13138 = !DILexicalBlockFile(scope: !13134, file: !1, discriminator: 1)
!13139 = !DILocation(line: 3466, column: 37, scope: !13138)
!13140 = !DILocation(line: 3466, column: 48, scope: !13138)
!13141 = !DILocation(line: 3466, column: 6, scope: !13138)
!13142 = !DILocation(line: 3467, column: 12, scope: !13134)
!13143 = !DILocation(line: 3467, column: 20, scope: !13134)
!13144 = !DILocation(line: 3467, column: 10, scope: !13134)
!13145 = !DILocation(line: 3467, column: 3, scope: !13134)
!13146 = !DILocation(line: 3469, column: 10, scope: !13134)
!13147 = !DILocation(line: 3471, column: 6, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3471, column: 6)
!13149 = !DILocation(line: 3471, column: 8, scope: !13148)
!13150 = !DILocation(line: 3471, column: 6, scope: !796)
!13151 = !DILocalVariable(name: "xisoent", scope: !13152, file: !1, line: 3472, type: !76)
!13152 = distinct !DILexicalBlock(scope: !13148, file: !1, line: 3471, column: 17)
!13153 = !DILocation(line: 3472, column: 18, scope: !13152)
!13154 = !DILocalVariable(name: "file", scope: !13152, file: !1, line: 3473, type: !7)
!13155 = !DILocation(line: 3473, column: 19, scope: !13152)
!13156 = !DILocalVariable(name: "flag", scope: !13152, file: !1, line: 3474, type: !53)
!13157 = !DILocation(line: 3474, column: 17, scope: !13152)
!13158 = !DILocation(line: 3476, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3476, column: 7)
!13160 = !DILocation(line: 3476, column: 9, scope: !13159)
!13161 = !DILocation(line: 3476, column: 7, scope: !13152)
!13162 = !DILocation(line: 3477, column: 14, scope: !13159)
!13163 = !DILocation(line: 3477, column: 22, scope: !13159)
!13164 = !DILocation(line: 3477, column: 12, scope: !13159)
!13165 = !DILocation(line: 3477, column: 4, scope: !13159)
!13166 = !DILocation(line: 3479, column: 14, scope: !13159)
!13167 = !DILocation(line: 3479, column: 12, scope: !13159)
!13168 = !DILocation(line: 3480, column: 10, scope: !13152)
!13169 = !DILocation(line: 3480, column: 18, scope: !13152)
!13170 = !DILocation(line: 3480, column: 8, scope: !13152)
!13171 = !DILocation(line: 3481, column: 7, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3481, column: 7)
!13173 = !DILocation(line: 3481, column: 13, scope: !13172)
!13174 = !DILocation(line: 3481, column: 29, scope: !13172)
!13175 = !DILocation(line: 3481, column: 7, scope: !13152)
!13176 = !DILocation(line: 3482, column: 11, scope: !13172)
!13177 = !DILocation(line: 3482, column: 17, scope: !13172)
!13178 = !DILocation(line: 3482, column: 9, scope: !13172)
!13179 = !DILocation(line: 3482, column: 4, scope: !13172)
!13180 = !DILocation(line: 3484, column: 7, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3484, column: 7)
!13182 = !DILocation(line: 3484, column: 16, scope: !13181)
!13183 = !DILocation(line: 3484, column: 7, scope: !13152)
!13184 = !DILocation(line: 3485, column: 9, scope: !13181)
!13185 = !DILocation(line: 3485, column: 4, scope: !13181)
!13186 = !DILocation(line: 3487, column: 8, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13188, file: !1, line: 3487, column: 8)
!13188 = distinct !DILexicalBlock(scope: !13181, file: !1, line: 3486, column: 8)
!13189 = !DILocation(line: 3487, column: 14, scope: !13187)
!13190 = !DILocation(line: 3487, column: 27, scope: !13187)
!13191 = !DILocation(line: 3487, column: 32, scope: !13187)
!13192 = !DILocation(line: 3487, column: 8, scope: !13188)
!13193 = !DILocation(line: 3488, column: 10, scope: !13187)
!13194 = !DILocation(line: 3488, column: 5, scope: !13187)
!13195 = !DILocation(line: 3490, column: 10, scope: !13187)
!13196 = !DILocation(line: 3493, column: 8, scope: !13152)
!13197 = !DILocation(line: 3493, column: 10, scope: !13152)
!13198 = !DILocation(line: 3493, column: 6, scope: !13152)
!13199 = !DILocation(line: 3495, column: 15, scope: !13152)
!13200 = !DILocation(line: 3495, column: 17, scope: !13152)
!13201 = !DILocation(line: 3495, column: 3, scope: !13152)
!13202 = !DILocation(line: 3497, column: 7, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3497, column: 7)
!13204 = !DILocation(line: 3497, column: 16, scope: !13203)
!13205 = !DILocation(line: 3497, column: 7, scope: !13152)
!13206 = !DILocation(line: 3498, column: 16, scope: !13203)
!13207 = !DILocation(line: 3498, column: 18, scope: !13203)
!13208 = !DILocation(line: 3498, column: 22, scope: !13203)
!13209 = !DILocation(line: 3498, column: 31, scope: !13203)
!13210 = !DILocation(line: 3498, column: 4, scope: !13203)
!13211 = !DILocation(line: 3500, column: 16, scope: !13203)
!13212 = !DILocation(line: 3500, column: 18, scope: !13203)
!13213 = !DILocation(line: 3500, column: 22, scope: !13203)
!13214 = !DILocation(line: 3500, column: 28, scope: !13203)
!13215 = !DILocation(line: 3500, column: 41, scope: !13203)
!13216 = !DILocation(line: 3500, column: 4, scope: !13203)
!13217 = !DILocation(line: 3502, column: 7, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3502, column: 7)
!13219 = !DILocation(line: 3502, column: 16, scope: !13218)
!13220 = !DILocation(line: 3502, column: 7, scope: !13152)
!13221 = !DILocation(line: 3503, column: 16, scope: !13218)
!13222 = !DILocation(line: 3503, column: 18, scope: !13218)
!13223 = !DILocation(line: 3504, column: 8, scope: !13218)
!13224 = !DILocation(line: 3504, column: 17, scope: !13218)
!13225 = !DILocation(line: 3504, column: 27, scope: !13218)
!13226 = !DILocation(line: 3503, column: 4, scope: !13218)
!13227 = !DILocation(line: 3506, column: 16, scope: !13218)
!13228 = !DILocation(line: 3506, column: 18, scope: !13218)
!13229 = !DILocation(line: 3506, column: 33, scope: !13218)
!13230 = !DILocation(line: 3506, column: 39, scope: !13218)
!13231 = !DILocation(line: 3506, column: 52, scope: !13218)
!13232 = !DILocation(line: 3506, column: 23, scope: !13218)
!13233 = !DILocation(line: 3506, column: 4, scope: !13218)
!13234 = !DILocation(line: 3514, column: 16, scope: !13152)
!13235 = !DILocation(line: 3514, column: 18, scope: !13152)
!13236 = !DILocation(line: 3515, column: 27, scope: !13152)
!13237 = !DILocation(line: 3515, column: 36, scope: !13152)
!13238 = !DILocation(line: 3515, column: 42, scope: !13152)
!13239 = !DILocation(line: 3515, column: 7, scope: !13152)
!13240 = !DILocation(line: 3514, column: 3, scope: !13152)
!13241 = !DILocation(line: 3517, column: 12, scope: !13152)
!13242 = !DILocation(line: 3517, column: 3, scope: !13152)
!13243 = !DILocation(line: 3517, column: 10, scope: !13152)
!13244 = !DILocation(line: 3519, column: 15, scope: !13152)
!13245 = !DILocation(line: 3519, column: 17, scope: !13152)
!13246 = !DILocation(line: 3519, column: 3, scope: !13152)
!13247 = !DILocation(line: 3521, column: 15, scope: !13152)
!13248 = !DILocation(line: 3521, column: 17, scope: !13152)
!13249 = !DILocation(line: 3521, column: 3, scope: !13152)
!13250 = !DILocation(line: 3523, column: 15, scope: !13152)
!13251 = !DILocation(line: 3523, column: 17, scope: !13152)
!13252 = !DILocation(line: 3523, column: 22, scope: !13152)
!13253 = !DILocation(line: 3523, column: 31, scope: !13152)
!13254 = !DILocation(line: 3523, column: 3, scope: !13152)
!13255 = !DILocation(line: 3525, column: 15, scope: !13152)
!13256 = !DILocation(line: 3525, column: 17, scope: !13152)
!13257 = !DILocation(line: 3525, column: 37, scope: !13152)
!13258 = !DILocation(line: 3525, column: 22, scope: !13152)
!13259 = !DILocation(line: 3525, column: 3, scope: !13152)
!13260 = !DILocation(line: 3527, column: 11, scope: !13152)
!13261 = !DILocation(line: 3527, column: 3, scope: !13152)
!13262 = !DILocation(line: 3530, column: 16, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13152, file: !1, line: 3527, column: 14)
!13264 = !DILocation(line: 3530, column: 18, scope: !13263)
!13265 = !DILocation(line: 3530, column: 4, scope: !13263)
!13266 = !DILocation(line: 3531, column: 4, scope: !13263)
!13267 = !DILocation(line: 3533, column: 16, scope: !13263)
!13268 = !DILocation(line: 3533, column: 18, scope: !13263)
!13269 = !DILocation(line: 3533, column: 4, scope: !13263)
!13270 = !DILocation(line: 3534, column: 4, scope: !13263)
!13271 = !DILocation(line: 3536, column: 8, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13263, file: !1, line: 3536, column: 8)
!13273 = !DILocation(line: 3536, column: 16, scope: !13272)
!13274 = !DILocation(line: 3536, column: 27, scope: !13272)
!13275 = !DILocation(line: 3536, column: 8, scope: !13263)
!13276 = !DILocation(line: 3537, column: 12, scope: !13272)
!13277 = !DILocation(line: 3537, column: 14, scope: !13272)
!13278 = !DILocation(line: 3537, column: 19, scope: !13272)
!13279 = !DILocation(line: 3537, column: 27, scope: !13272)
!13280 = !DILocation(line: 3537, column: 39, scope: !13272)
!13281 = !DILocation(line: 3537, column: 5, scope: !13272)
!13282 = !DILocation(line: 3539, column: 17, scope: !13272)
!13283 = !DILocation(line: 3539, column: 19, scope: !13272)
!13284 = !DILocation(line: 3539, column: 5, scope: !13272)
!13285 = !DILocation(line: 3540, column: 4, scope: !13263)
!13286 = !DILocation(line: 3542, column: 2, scope: !13152)
!13287 = !DILocation(line: 3543, column: 6, scope: !13148)
!13288 = !DILocation(line: 3544, column: 16, scope: !796)
!13289 = !DILocation(line: 3544, column: 14, scope: !796)
!13290 = !DILocation(line: 3544, column: 9, scope: !796)
!13291 = !DILocation(line: 3546, column: 6, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3546, column: 6)
!13293 = !DILocation(line: 3546, column: 13, scope: !13292)
!13294 = !DILocation(line: 3546, column: 6, scope: !796)
!13295 = !DILocation(line: 3547, column: 10, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13292, file: !1, line: 3546, column: 21)
!13297 = !DILocation(line: 3548, column: 7, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13296, file: !1, line: 3548, column: 7)
!13299 = !DILocation(line: 3548, column: 9, scope: !13298)
!13300 = !DILocation(line: 3548, column: 7, scope: !13296)
!13301 = !DILocation(line: 3549, column: 7, scope: !13298)
!13302 = !DILocation(line: 3549, column: 4, scope: !13298)
!13303 = !DILocation(line: 3549, column: 15, scope: !13298)
!13304 = !DILocation(line: 3550, column: 2, scope: !13296)
!13305 = !DILocation(line: 3553, column: 6, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3553, column: 6)
!13307 = !DILocation(line: 3553, column: 8, scope: !13306)
!13308 = !DILocation(line: 3553, column: 6, scope: !796)
!13309 = !DILocation(line: 3554, column: 7, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !1, line: 3554, column: 7)
!13311 = distinct !DILexicalBlock(scope: !13306, file: !1, line: 3553, column: 23)
!13312 = !DILocation(line: 3554, column: 9, scope: !13310)
!13313 = !DILocation(line: 3554, column: 7, scope: !13311)
!13314 = !DILocation(line: 3556, column: 16, scope: !13310)
!13315 = !DILocation(line: 3556, column: 34, scope: !13310)
!13316 = !DILocation(line: 3556, column: 19, scope: !13310)
!13317 = !DILocation(line: 3556, column: 4, scope: !13310)
!13318 = !DILocation(line: 3558, column: 29, scope: !13310)
!13319 = !DILocation(line: 3558, column: 24, scope: !13310)
!13320 = !DILocation(line: 3558, column: 4, scope: !13310)
!13321 = !DILocation(line: 3558, column: 12, scope: !13310)
!13322 = !DILocation(line: 3558, column: 19, scope: !13310)
!13323 = !DILocation(line: 3558, column: 22, scope: !13310)
!13324 = !DILocation(line: 3559, column: 16, scope: !13311)
!13325 = !DILocation(line: 3559, column: 11, scope: !13311)
!13326 = !DILocation(line: 3559, column: 3, scope: !13311)
!13327 = !DILocation(line: 3563, column: 6, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3563, column: 6)
!13329 = !DILocation(line: 3563, column: 15, scope: !13328)
!13330 = !DILocation(line: 3563, column: 19, scope: !13328)
!13331 = !DILocation(line: 3563, column: 22, scope: !13328)
!13332 = !DILocation(line: 3563, column: 25, scope: !13333)
!13333 = !DILexicalBlockFile(scope: !13328, file: !1, discriminator: 1)
!13334 = !DILocation(line: 3563, column: 34, scope: !13333)
!13335 = !DILocation(line: 3563, column: 6, scope: !13333)
!13336 = !DILocation(line: 3564, column: 36, scope: !13328)
!13337 = !DILocation(line: 3564, column: 45, scope: !13328)
!13338 = !DILocation(line: 3564, column: 40, scope: !13328)
!13339 = !DILocation(line: 3565, column: 7, scope: !13328)
!13340 = !DILocation(line: 3565, column: 15, scope: !13328)
!13341 = !DILocation(line: 3565, column: 24, scope: !13328)
!13342 = !DILocation(line: 3564, column: 12, scope: !13328)
!13343 = !DILocation(line: 3564, column: 10, scope: !13328)
!13344 = !DILocation(line: 3564, column: 3, scope: !13328)
!13345 = !DILocation(line: 3567, column: 6, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !796, file: !1, line: 3567, column: 6)
!13347 = !DILocation(line: 3567, column: 8, scope: !13346)
!13348 = !DILocation(line: 3567, column: 6, scope: !796)
!13349 = !DILocation(line: 3569, column: 15, scope: !13346)
!13350 = !DILocation(line: 3569, column: 33, scope: !13346)
!13351 = !DILocation(line: 3569, column: 18, scope: !13346)
!13352 = !DILocation(line: 3569, column: 3, scope: !13346)
!13353 = !DILocation(line: 3575, column: 11, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13346, file: !1, line: 3570, column: 7)
!13355 = !DILocation(line: 3575, column: 3, scope: !13354)
!13356 = !DILocation(line: 3580, column: 4, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13354, file: !1, line: 3575, column: 14)
!13358 = !DILocation(line: 3582, column: 31, scope: !13357)
!13359 = !DILocation(line: 3582, column: 26, scope: !13357)
!13360 = !DILocation(line: 3582, column: 4, scope: !13357)
!13361 = !DILocation(line: 3582, column: 12, scope: !13357)
!13362 = !DILocation(line: 3582, column: 19, scope: !13357)
!13363 = !DILocation(line: 3582, column: 24, scope: !13357)
!13364 = !DILocation(line: 3582, column: 39, scope: !13357)
!13365 = !DILocation(line: 3584, column: 33, scope: !13357)
!13366 = !DILocation(line: 3584, column: 28, scope: !13357)
!13367 = !DILocation(line: 3584, column: 4, scope: !13357)
!13368 = !DILocation(line: 3584, column: 12, scope: !13357)
!13369 = !DILocation(line: 3584, column: 19, scope: !13357)
!13370 = !DILocation(line: 3584, column: 26, scope: !13357)
!13371 = !DILocation(line: 3584, column: 41, scope: !13357)
!13372 = !DILocation(line: 3586, column: 33, scope: !13357)
!13373 = !DILocation(line: 3586, column: 28, scope: !13357)
!13374 = !DILocation(line: 3586, column: 4, scope: !13357)
!13375 = !DILocation(line: 3586, column: 12, scope: !13357)
!13376 = !DILocation(line: 3586, column: 19, scope: !13357)
!13377 = !DILocation(line: 3586, column: 26, scope: !13357)
!13378 = !DILocation(line: 3586, column: 41, scope: !13357)
!13379 = !DILocation(line: 3590, column: 15, scope: !796)
!13380 = !DILocation(line: 3590, column: 10, scope: !796)
!13381 = !DILocation(line: 3590, column: 2, scope: !796)
!13382 = !DILocation(line: 3591, column: 1, scope: !796)
!13383 = !DILocalVariable(name: "p", arg: 1, scope: !799, file: !1, line: 2409, type: !544)
!13384 = !DILocation(line: 2409, column: 28, scope: !799)
!13385 = !DILocalVariable(name: "value", arg: 2, scope: !799, file: !1, line: 2409, type: !53)
!13386 = !DILocation(line: 2409, column: 45, scope: !799)
!13387 = !DILocation(line: 2411, column: 7, scope: !799)
!13388 = !DILocation(line: 2411, column: 3, scope: !799)
!13389 = !DILocation(line: 2411, column: 5, scope: !799)
!13390 = !DILocation(line: 2412, column: 1, scope: !799)
!13391 = !DILocalVariable(name: "p", arg: 1, scope: !802, file: !1, line: 2480, type: !544)
!13392 = !DILocation(line: 2480, column: 28, scope: !802)
!13393 = !DILocalVariable(name: "value", arg: 2, scope: !802, file: !1, line: 2480, type: !42)
!13394 = !DILocation(line: 2480, column: 40, scope: !802)
!13395 = !DILocation(line: 2482, column: 18, scope: !802)
!13396 = !DILocation(line: 2482, column: 21, scope: !802)
!13397 = !DILocation(line: 2482, column: 2, scope: !802)
!13398 = !DILocation(line: 2483, column: 18, scope: !802)
!13399 = !DILocation(line: 2483, column: 19, scope: !802)
!13400 = !DILocation(line: 2483, column: 23, scope: !802)
!13401 = !DILocation(line: 2483, column: 2, scope: !802)
!13402 = !DILocation(line: 2484, column: 1, scope: !802)
!13403 = !DILocalVariable(name: "p", arg: 1, scope: !804, file: !1, line: 2562, type: !544)
!13404 = !DILocation(line: 2562, column: 29, scope: !804)
!13405 = !DILocalVariable(name: "t", arg: 2, scope: !804, file: !1, line: 2562, type: !69)
!13406 = !DILocation(line: 2562, column: 39, scope: !804)
!13407 = !DILocalVariable(name: "tm", scope: !804, file: !1, line: 2564, type: !811)
!13408 = !DILocation(line: 2564, column: 12, scope: !804)
!13409 = !DILocation(line: 2566, column: 2, scope: !804)
!13410 = !DILocation(line: 2567, column: 14, scope: !804)
!13411 = !DILocation(line: 2567, column: 15, scope: !804)
!13412 = !DILocation(line: 2567, column: 22, scope: !804)
!13413 = !DILocation(line: 2567, column: 19, scope: !804)
!13414 = !DILocation(line: 2567, column: 2, scope: !804)
!13415 = !DILocation(line: 2568, column: 14, scope: !804)
!13416 = !DILocation(line: 2568, column: 15, scope: !804)
!13417 = !DILocation(line: 2568, column: 22, scope: !804)
!13418 = !DILocation(line: 2568, column: 28, scope: !804)
!13419 = !DILocation(line: 2568, column: 19, scope: !804)
!13420 = !DILocation(line: 2568, column: 2, scope: !804)
!13421 = !DILocation(line: 2569, column: 14, scope: !804)
!13422 = !DILocation(line: 2569, column: 15, scope: !804)
!13423 = !DILocation(line: 2569, column: 22, scope: !804)
!13424 = !DILocation(line: 2569, column: 19, scope: !804)
!13425 = !DILocation(line: 2569, column: 2, scope: !804)
!13426 = !DILocation(line: 2570, column: 14, scope: !804)
!13427 = !DILocation(line: 2570, column: 15, scope: !804)
!13428 = !DILocation(line: 2570, column: 22, scope: !804)
!13429 = !DILocation(line: 2570, column: 19, scope: !804)
!13430 = !DILocation(line: 2570, column: 2, scope: !804)
!13431 = !DILocation(line: 2571, column: 14, scope: !804)
!13432 = !DILocation(line: 2571, column: 15, scope: !804)
!13433 = !DILocation(line: 2571, column: 22, scope: !804)
!13434 = !DILocation(line: 2571, column: 19, scope: !804)
!13435 = !DILocation(line: 2571, column: 2, scope: !804)
!13436 = !DILocation(line: 2572, column: 14, scope: !804)
!13437 = !DILocation(line: 2572, column: 15, scope: !804)
!13438 = !DILocation(line: 2572, column: 22, scope: !804)
!13439 = !DILocation(line: 2572, column: 19, scope: !804)
!13440 = !DILocation(line: 2572, column: 2, scope: !804)
!13441 = !DILocation(line: 2573, column: 14, scope: !804)
!13442 = !DILocation(line: 2573, column: 15, scope: !804)
!13443 = !DILocation(line: 2573, column: 26, scope: !804)
!13444 = !DILocation(line: 2573, column: 43, scope: !804)
!13445 = !DILocation(line: 2573, column: 19, scope: !804)
!13446 = !DILocation(line: 2573, column: 2, scope: !804)
!13447 = !DILocation(line: 2574, column: 1, scope: !804)
!13448 = !DILocalVariable(name: "p", arg: 1, scope: !828, file: !1, line: 2449, type: !544)
!13449 = !DILocation(line: 2449, column: 28, scope: !828)
!13450 = !DILocalVariable(name: "value", arg: 2, scope: !828, file: !1, line: 2449, type: !307)
!13451 = !DILocation(line: 2449, column: 40, scope: !828)
!13452 = !DILocation(line: 2451, column: 18, scope: !828)
!13453 = !DILocation(line: 2451, column: 21, scope: !828)
!13454 = !DILocation(line: 2451, column: 2, scope: !828)
!13455 = !DILocation(line: 2452, column: 18, scope: !828)
!13456 = !DILocation(line: 2452, column: 19, scope: !828)
!13457 = !DILocation(line: 2452, column: 23, scope: !828)
!13458 = !DILocation(line: 2452, column: 2, scope: !828)
!13459 = !DILocation(line: 2453, column: 1, scope: !828)
!13460 = !DILocalVariable(name: "bp", arg: 1, scope: !832, file: !1, line: 2786, type: !544)
!13461 = !DILocation(line: 2786, column: 40, scope: !832)
!13462 = !DILocalVariable(name: "dr_len", arg: 2, scope: !832, file: !1, line: 2786, type: !31)
!13463 = !DILocation(line: 2786, column: 48, scope: !832)
!13464 = !DILocalVariable(name: "isoent", arg: 3, scope: !832, file: !1, line: 2787, type: !76)
!13465 = !DILocation(line: 2787, column: 20, scope: !832)
!13466 = !DILocalVariable(name: "iso9660", arg: 4, scope: !832, file: !1, line: 2787, type: !530)
!13467 = !DILocation(line: 2787, column: 44, scope: !832)
!13468 = !DILocalVariable(name: "t", arg: 5, scope: !832, file: !1, line: 2787, type: !338)
!13469 = !DILocation(line: 2787, column: 71, scope: !832)
!13470 = !DILocalVariable(name: "rr_flag", scope: !832, file: !1, line: 2790, type: !53)
!13471 = !DILocation(line: 2790, column: 16, scope: !832)
!13472 = !DILocalVariable(name: "length", scope: !832, file: !1, line: 2799, type: !31)
!13473 = !DILocation(line: 2799, column: 6, scope: !832)
!13474 = !DILocalVariable(name: "ctl", scope: !832, file: !1, line: 2800, type: !839)
!13475 = !DILocation(line: 2800, column: 22, scope: !832)
!13476 = !DILocalVariable(name: "rr_parent", scope: !832, file: !1, line: 2801, type: !76)
!13477 = !DILocation(line: 2801, column: 17, scope: !832)
!13478 = !DILocalVariable(name: "pxent", scope: !832, file: !1, line: 2801, type: !76)
!13479 = !DILocation(line: 2801, column: 29, scope: !832)
!13480 = !DILocalVariable(name: "file", scope: !832, file: !1, line: 2802, type: !7)
!13481 = !DILocation(line: 2802, column: 18, scope: !832)
!13482 = !DILocation(line: 2804, column: 25, scope: !832)
!13483 = !DILocation(line: 2804, column: 29, scope: !832)
!13484 = !DILocation(line: 2804, column: 37, scope: !832)
!13485 = !DILocation(line: 2804, column: 7, scope: !832)
!13486 = !DILocation(line: 2804, column: 5, scope: !832)
!13487 = !DILocation(line: 2806, column: 6, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2806, column: 6)
!13489 = !DILocation(line: 2806, column: 8, scope: !13488)
!13490 = !DILocation(line: 2806, column: 6, scope: !832)
!13491 = !DILocation(line: 2807, column: 15, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13488, file: !1, line: 2806, column: 27)
!13493 = !DILocation(line: 2807, column: 23, scope: !13492)
!13494 = !DILocation(line: 2807, column: 13, scope: !13492)
!13495 = !DILocation(line: 2808, column: 11, scope: !13492)
!13496 = !DILocation(line: 2808, column: 19, scope: !13492)
!13497 = !DILocation(line: 2808, column: 9, scope: !13492)
!13498 = !DILocation(line: 2809, column: 7, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13492, file: !1, line: 2809, column: 7)
!13500 = !DILocation(line: 2809, column: 17, scope: !13499)
!13501 = !DILocation(line: 2809, column: 7, scope: !13492)
!13502 = !DILocation(line: 2810, column: 13, scope: !13499)
!13503 = !DILocation(line: 2810, column: 11, scope: !13499)
!13504 = !DILocation(line: 2810, column: 4, scope: !13499)
!13505 = !DILocation(line: 2812, column: 13, scope: !13499)
!13506 = !DILocation(line: 2812, column: 21, scope: !13499)
!13507 = !DILocation(line: 2812, column: 11, scope: !13499)
!13508 = !DILocation(line: 2813, column: 2, scope: !13492)
!13509 = !DILocation(line: 2814, column: 13, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13488, file: !1, line: 2813, column: 9)
!13511 = !DILocation(line: 2815, column: 11, scope: !13510)
!13512 = !DILocation(line: 2815, column: 9, scope: !13510)
!13513 = !DILocation(line: 2817, column: 9, scope: !832)
!13514 = !DILocation(line: 2817, column: 17, scope: !832)
!13515 = !DILocation(line: 2817, column: 7, scope: !832)
!13516 = !DILocation(line: 2819, column: 6, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2819, column: 6)
!13518 = !DILocation(line: 2819, column: 8, scope: !13517)
!13519 = !DILocation(line: 2819, column: 6, scope: !832)
!13520 = !DILocation(line: 2820, column: 11, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13517, file: !1, line: 2819, column: 27)
!13522 = !DILocation(line: 2821, column: 7, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13521, file: !1, line: 2821, column: 7)
!13524 = !DILocation(line: 2821, column: 17, scope: !13523)
!13525 = !DILocation(line: 2821, column: 7, scope: !13521)
!13526 = !DILocation(line: 2822, column: 12, scope: !13523)
!13527 = !DILocation(line: 2822, column: 4, scope: !13523)
!13528 = !DILocation(line: 2823, column: 2, scope: !13521)
!13529 = !DILocation(line: 2824, column: 11, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13517, file: !1, line: 2823, column: 9)
!13531 = !DILocation(line: 2825, column: 30, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13530, file: !1, line: 2825, column: 7)
!13533 = !DILocation(line: 2825, column: 36, scope: !13532)
!13534 = !DILocation(line: 2825, column: 7, scope: !13532)
!13535 = !DILocation(line: 2825, column: 43, scope: !13532)
!13536 = !DILocation(line: 2825, column: 7, scope: !13530)
!13537 = !DILocation(line: 2826, column: 12, scope: !13532)
!13538 = !DILocation(line: 2826, column: 4, scope: !13532)
!13539 = !DILocation(line: 2827, column: 7, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13530, file: !1, line: 2827, column: 7)
!13541 = !DILocation(line: 2827, column: 15, scope: !13540)
!13542 = !DILocation(line: 2827, column: 25, scope: !13540)
!13543 = !DILocation(line: 2827, column: 7, scope: !13530)
!13544 = !DILocation(line: 2828, column: 12, scope: !13540)
!13545 = !DILocation(line: 2828, column: 4, scope: !13540)
!13546 = !DILocation(line: 2829, column: 7, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13530, file: !1, line: 2829, column: 7)
!13548 = !DILocation(line: 2829, column: 15, scope: !13547)
!13549 = !DILocation(line: 2829, column: 24, scope: !13547)
!13550 = !DILocation(line: 2829, column: 7, scope: !13530)
!13551 = !DILocation(line: 2830, column: 12, scope: !13547)
!13552 = !DILocation(line: 2830, column: 4, scope: !13547)
!13553 = !DILocation(line: 2831, column: 30, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13530, file: !1, line: 2831, column: 7)
!13555 = !DILocation(line: 2831, column: 36, scope: !13554)
!13556 = !DILocation(line: 2831, column: 7, scope: !13554)
!13557 = !DILocation(line: 2831, column: 43, scope: !13554)
!13558 = !DILocation(line: 2831, column: 55, scope: !13554)
!13559 = !DILocation(line: 2832, column: 30, scope: !13554)
!13560 = !DILocation(line: 2832, column: 36, scope: !13554)
!13561 = !DILocation(line: 2832, column: 7, scope: !13554)
!13562 = !DILocation(line: 2832, column: 43, scope: !13554)
!13563 = !DILocation(line: 2831, column: 7, scope: !13564)
!13564 = !DILexicalBlockFile(scope: !13530, file: !1, discriminator: 1)
!13565 = !DILocation(line: 2833, column: 12, scope: !13554)
!13566 = !DILocation(line: 2833, column: 4, scope: !13554)
!13567 = !DILocation(line: 2848, column: 6, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2848, column: 6)
!13569 = !DILocation(line: 2848, column: 8, scope: !13568)
!13570 = !DILocation(line: 2848, column: 24, scope: !13568)
!13571 = !DILocation(line: 2848, column: 27, scope: !13572)
!13572 = !DILexicalBlockFile(scope: !13568, file: !1, discriminator: 1)
!13573 = !DILocation(line: 2848, column: 37, scope: !13572)
!13574 = !DILocation(line: 2848, column: 45, scope: !13572)
!13575 = !DILocation(line: 2848, column: 34, scope: !13572)
!13576 = !DILocation(line: 2848, column: 6, scope: !13572)
!13577 = !DILocation(line: 2849, column: 10, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13568, file: !1, line: 2848, column: 53)
!13579 = !DILocation(line: 2850, column: 7, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13578, file: !1, line: 2850, column: 7)
!13581 = !DILocation(line: 2850, column: 10, scope: !13580)
!13582 = !DILocation(line: 2850, column: 7, scope: !13578)
!13583 = !DILocation(line: 2851, column: 4, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13580, file: !1, line: 2850, column: 19)
!13585 = !DILocation(line: 2851, column: 10, scope: !13584)
!13586 = !DILocation(line: 2852, column: 4, scope: !13584)
!13587 = !DILocation(line: 2852, column: 10, scope: !13584)
!13588 = !DILocation(line: 2853, column: 12, scope: !13584)
!13589 = !DILocation(line: 2853, column: 4, scope: !13584)
!13590 = !DILocation(line: 2853, column: 10, scope: !13584)
!13591 = !DILocation(line: 2854, column: 4, scope: !13584)
!13592 = !DILocation(line: 2854, column: 10, scope: !13584)
!13593 = !DILocation(line: 2855, column: 4, scope: !13584)
!13594 = !DILocation(line: 2855, column: 10, scope: !13584)
!13595 = !DILocation(line: 2856, column: 4, scope: !13584)
!13596 = !DILocation(line: 2856, column: 10, scope: !13584)
!13597 = !DILocation(line: 2857, column: 4, scope: !13584)
!13598 = !DILocation(line: 2857, column: 10, scope: !13584)
!13599 = !DILocation(line: 2858, column: 10, scope: !13584)
!13600 = !DILocation(line: 2858, column: 7, scope: !13584)
!13601 = !DILocation(line: 2859, column: 3, scope: !13584)
!13602 = !DILocation(line: 2860, column: 30, scope: !13578)
!13603 = !DILocation(line: 2860, column: 3, scope: !13578)
!13604 = !DILocation(line: 2861, column: 2, scope: !13578)
!13605 = !DILocation(line: 2864, column: 9, scope: !832)
!13606 = !DILocation(line: 2865, column: 6, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2865, column: 6)
!13608 = !DILocation(line: 2865, column: 26, scope: !13607)
!13609 = !DILocation(line: 2865, column: 24, scope: !13607)
!13610 = !DILocation(line: 2865, column: 6, scope: !832)
!13611 = !DILocation(line: 2866, column: 32, scope: !13607)
!13612 = !DILocation(line: 2866, column: 8, scope: !13607)
!13613 = !DILocation(line: 2866, column: 6, scope: !13607)
!13614 = !DILocation(line: 2866, column: 3, scope: !13607)
!13615 = !DILocation(line: 2867, column: 6, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2867, column: 6)
!13617 = !DILocation(line: 2867, column: 9, scope: !13616)
!13618 = !DILocation(line: 2867, column: 6, scope: !832)
!13619 = !DILocation(line: 2868, column: 3, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13616, file: !1, line: 2867, column: 18)
!13621 = !DILocation(line: 2868, column: 9, scope: !13620)
!13622 = !DILocation(line: 2869, column: 3, scope: !13620)
!13623 = !DILocation(line: 2869, column: 9, scope: !13620)
!13624 = !DILocation(line: 2870, column: 11, scope: !13620)
!13625 = !DILocation(line: 2870, column: 3, scope: !13620)
!13626 = !DILocation(line: 2870, column: 9, scope: !13620)
!13627 = !DILocation(line: 2871, column: 3, scope: !13620)
!13628 = !DILocation(line: 2871, column: 9, scope: !13620)
!13629 = !DILocation(line: 2872, column: 11, scope: !13620)
!13630 = !DILocation(line: 2872, column: 3, scope: !13620)
!13631 = !DILocation(line: 2872, column: 9, scope: !13620)
!13632 = !DILocation(line: 2873, column: 9, scope: !13620)
!13633 = !DILocation(line: 2873, column: 6, scope: !13620)
!13634 = !DILocation(line: 2874, column: 2, scope: !13620)
!13635 = !DILocation(line: 2875, column: 29, scope: !832)
!13636 = !DILocation(line: 2875, column: 2, scope: !832)
!13637 = !DILocation(line: 2878, column: 6, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2878, column: 6)
!13639 = !DILocation(line: 2878, column: 14, scope: !13638)
!13640 = !DILocation(line: 2878, column: 6, scope: !832)
!13641 = !DILocalVariable(name: "nmlen", scope: !13642, file: !1, line: 2888, type: !23)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !1, line: 2878, column: 27)
!13643 = !DILocation(line: 2888, column: 10, scope: !13642)
!13644 = !DILocation(line: 2888, column: 18, scope: !13642)
!13645 = !DILocation(line: 2888, column: 24, scope: !13642)
!13646 = !DILocation(line: 2888, column: 33, scope: !13642)
!13647 = !DILocalVariable(name: "nm", scope: !13642, file: !1, line: 2889, type: !429)
!13648 = !DILocation(line: 2889, column: 15, scope: !13642)
!13649 = !DILocation(line: 2889, column: 20, scope: !13642)
!13650 = !DILocation(line: 2889, column: 26, scope: !13642)
!13651 = !DILocation(line: 2889, column: 35, scope: !13642)
!13652 = !DILocalVariable(name: "nmmax", scope: !13642, file: !1, line: 2890, type: !23)
!13653 = !DILocation(line: 2890, column: 10, scope: !13642)
!13654 = !DILocation(line: 2892, column: 7, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13642, file: !1, line: 2892, column: 7)
!13656 = !DILocation(line: 2892, column: 25, scope: !13655)
!13657 = !DILocation(line: 2892, column: 7, scope: !13642)
!13658 = !DILocation(line: 2893, column: 9, scope: !13655)
!13659 = !DILocation(line: 2893, column: 7, scope: !13655)
!13660 = !DILocation(line: 2893, column: 4, scope: !13655)
!13661 = !DILocation(line: 2894, column: 7, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13642, file: !1, line: 2894, column: 7)
!13663 = !DILocation(line: 2894, column: 10, scope: !13662)
!13664 = !DILocation(line: 2894, column: 7, scope: !13642)
!13665 = !DILocation(line: 2895, column: 4, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13662, file: !1, line: 2894, column: 19)
!13667 = !DILocation(line: 2895, column: 10, scope: !13666)
!13668 = !DILocation(line: 2896, column: 4, scope: !13666)
!13669 = !DILocation(line: 2896, column: 10, scope: !13666)
!13670 = !DILocation(line: 2897, column: 4, scope: !13666)
!13671 = !DILocation(line: 2897, column: 10, scope: !13666)
!13672 = !DILocation(line: 2898, column: 3, scope: !13666)
!13673 = !DILocation(line: 2899, column: 11, scope: !13642)
!13674 = !DILocation(line: 2899, column: 9, scope: !13642)
!13675 = !DILocation(line: 2900, column: 7, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13642, file: !1, line: 2900, column: 7)
!13677 = !DILocation(line: 2900, column: 13, scope: !13676)
!13678 = !DILocation(line: 2900, column: 7, scope: !13642)
!13679 = !DILocation(line: 2901, column: 10, scope: !13676)
!13680 = !DILocation(line: 2901, column: 4, scope: !13676)
!13681 = !DILocation(line: 2902, column: 3, scope: !13642)
!13682 = !DILocation(line: 2902, column: 10, scope: !13683)
!13683 = !DILexicalBlockFile(scope: !13642, file: !1, discriminator: 1)
!13684 = !DILocation(line: 2902, column: 16, scope: !13683)
!13685 = !DILocation(line: 2902, column: 22, scope: !13683)
!13686 = !DILocation(line: 2902, column: 20, scope: !13683)
!13687 = !DILocation(line: 2902, column: 3, scope: !13683)
!13688 = !DILocation(line: 2903, column: 18, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13642, file: !1, line: 2902, column: 29)
!13690 = !DILocation(line: 2903, column: 13, scope: !13689)
!13691 = !DILocation(line: 2903, column: 11, scope: !13689)
!13692 = !DILocation(line: 2904, column: 8, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13689, file: !1, line: 2904, column: 8)
!13694 = !DILocation(line: 2904, column: 11, scope: !13693)
!13695 = !DILocation(line: 2904, column: 8, scope: !13689)
!13696 = !DILocation(line: 2905, column: 13, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13693, file: !1, line: 2904, column: 20)
!13698 = !DILocation(line: 2905, column: 5, scope: !13697)
!13699 = !DILocation(line: 2905, column: 11, scope: !13697)
!13700 = !DILocation(line: 2906, column: 5, scope: !13697)
!13701 = !DILocation(line: 2906, column: 11, scope: !13697)
!13702 = !DILocation(line: 2908, column: 12, scope: !13697)
!13703 = !DILocation(line: 2908, column: 14, scope: !13697)
!13704 = !DILocation(line: 2908, column: 18, scope: !13697)
!13705 = !DILocation(line: 2908, column: 22, scope: !13697)
!13706 = !DILocation(line: 2908, column: 29, scope: !13697)
!13707 = !DILocation(line: 2908, column: 5, scope: !13697)
!13708 = !DILocation(line: 2909, column: 11, scope: !13697)
!13709 = !DILocation(line: 2909, column: 8, scope: !13697)
!13710 = !DILocation(line: 2910, column: 4, scope: !13697)
!13711 = !DILocation(line: 2911, column: 13, scope: !13689)
!13712 = !DILocation(line: 2911, column: 20, scope: !13689)
!13713 = !DILocation(line: 2911, column: 10, scope: !13689)
!13714 = !DILocation(line: 2912, column: 10, scope: !13689)
!13715 = !DILocation(line: 2912, column: 17, scope: !13689)
!13716 = !DILocation(line: 2912, column: 7, scope: !13689)
!13717 = !DILocation(line: 2913, column: 31, scope: !13689)
!13718 = !DILocation(line: 2913, column: 4, scope: !13689)
!13719 = !DILocation(line: 2914, column: 8, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13689, file: !1, line: 2914, column: 8)
!13721 = !DILocation(line: 2914, column: 26, scope: !13720)
!13722 = !DILocation(line: 2914, column: 8, scope: !13689)
!13723 = !DILocation(line: 2915, column: 10, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13720, file: !1, line: 2914, column: 31)
!13725 = !DILocation(line: 2915, column: 8, scope: !13724)
!13726 = !DILocation(line: 2916, column: 13, scope: !13724)
!13727 = !DILocation(line: 2916, column: 11, scope: !13724)
!13728 = !DILocation(line: 2917, column: 9, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13724, file: !1, line: 2917, column: 9)
!13730 = !DILocation(line: 2917, column: 15, scope: !13729)
!13731 = !DILocation(line: 2917, column: 9, scope: !13724)
!13732 = !DILocation(line: 2918, column: 12, scope: !13729)
!13733 = !DILocation(line: 2918, column: 6, scope: !13729)
!13734 = !DILocation(line: 2919, column: 4, scope: !13724)
!13735 = !DILocation(line: 2920, column: 8, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13689, file: !1, line: 2920, column: 8)
!13737 = !DILocation(line: 2920, column: 11, scope: !13736)
!13738 = !DILocation(line: 2920, column: 8, scope: !13689)
!13739 = !DILocation(line: 2921, column: 5, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13736, file: !1, line: 2920, column: 20)
!13741 = !DILocation(line: 2921, column: 11, scope: !13740)
!13742 = !DILocation(line: 2922, column: 5, scope: !13740)
!13743 = !DILocation(line: 2922, column: 11, scope: !13740)
!13744 = !DILocation(line: 2923, column: 5, scope: !13740)
!13745 = !DILocation(line: 2923, column: 11, scope: !13740)
!13746 = !DILocation(line: 2924, column: 4, scope: !13740)
!13747 = !DILocation(line: 2902, column: 3, scope: !13748)
!13748 = !DILexicalBlockFile(scope: !13642, file: !1, discriminator: 2)
!13749 = !DILocation(line: 2926, column: 21, scope: !13642)
!13750 = !DILocation(line: 2926, column: 16, scope: !13642)
!13751 = !DILocation(line: 2926, column: 14, scope: !13642)
!13752 = !DILocation(line: 2926, column: 10, scope: !13642)
!13753 = !DILocation(line: 2927, column: 7, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13642, file: !1, line: 2927, column: 7)
!13755 = !DILocation(line: 2927, column: 10, scope: !13754)
!13756 = !DILocation(line: 2927, column: 7, scope: !13642)
!13757 = !DILocation(line: 2928, column: 12, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13754, file: !1, line: 2927, column: 19)
!13759 = !DILocation(line: 2928, column: 4, scope: !13758)
!13760 = !DILocation(line: 2928, column: 10, scope: !13758)
!13761 = !DILocation(line: 2929, column: 4, scope: !13758)
!13762 = !DILocation(line: 2929, column: 10, scope: !13758)
!13763 = !DILocation(line: 2930, column: 11, scope: !13758)
!13764 = !DILocation(line: 2930, column: 13, scope: !13758)
!13765 = !DILocation(line: 2930, column: 17, scope: !13758)
!13766 = !DILocation(line: 2930, column: 21, scope: !13758)
!13767 = !DILocation(line: 2930, column: 4, scope: !13758)
!13768 = !DILocation(line: 2931, column: 10, scope: !13758)
!13769 = !DILocation(line: 2931, column: 7, scope: !13758)
!13770 = !DILocation(line: 2932, column: 3, scope: !13758)
!13771 = !DILocation(line: 2933, column: 30, scope: !13642)
!13772 = !DILocation(line: 2933, column: 3, scope: !13642)
!13773 = !DILocation(line: 2934, column: 2, scope: !13642)
!13774 = !DILocation(line: 2937, column: 6, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !832, file: !1, line: 2937, column: 6)
!13776 = !DILocation(line: 2937, column: 14, scope: !13775)
!13777 = !DILocation(line: 2937, column: 6, scope: !832)
!13778 = !DILocation(line: 2950, column: 10, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13775, file: !1, line: 2937, column: 27)
!13780 = !DILocation(line: 2951, column: 7, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13779, file: !1, line: 2951, column: 7)
!13782 = !DILocation(line: 2951, column: 27, scope: !13781)
!13783 = !DILocation(line: 2951, column: 25, scope: !13781)
!13784 = !DILocation(line: 2951, column: 7, scope: !13779)
!13785 = !DILocation(line: 2952, column: 33, scope: !13781)
!13786 = !DILocation(line: 2952, column: 9, scope: !13781)
!13787 = !DILocation(line: 2952, column: 7, scope: !13781)
!13788 = !DILocation(line: 2952, column: 4, scope: !13781)
!13789 = !DILocation(line: 2953, column: 7, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13779, file: !1, line: 2953, column: 7)
!13791 = !DILocation(line: 2953, column: 10, scope: !13790)
!13792 = !DILocation(line: 2953, column: 7, scope: !13779)
!13793 = !DILocalVariable(name: "mode", scope: !13794, file: !1, line: 2954, type: !528)
!13794 = distinct !DILexicalBlock(scope: !13790, file: !1, line: 2953, column: 19)
!13795 = !DILocation(line: 2954, column: 11, scope: !13794)
!13796 = !DILocalVariable(name: "uid", scope: !13794, file: !1, line: 2955, type: !36)
!13797 = !DILocation(line: 2955, column: 12, scope: !13794)
!13798 = !DILocalVariable(name: "gid", scope: !13794, file: !1, line: 2956, type: !36)
!13799 = !DILocation(line: 2956, column: 12, scope: !13794)
!13800 = !DILocation(line: 2958, column: 30, scope: !13794)
!13801 = !DILocation(line: 2958, column: 36, scope: !13794)
!13802 = !DILocation(line: 2958, column: 11, scope: !13794)
!13803 = !DILocation(line: 2958, column: 9, scope: !13794)
!13804 = !DILocation(line: 2959, column: 28, scope: !13794)
!13805 = !DILocation(line: 2959, column: 34, scope: !13794)
!13806 = !DILocation(line: 2959, column: 10, scope: !13794)
!13807 = !DILocation(line: 2959, column: 8, scope: !13794)
!13808 = !DILocation(line: 2960, column: 28, scope: !13794)
!13809 = !DILocation(line: 2960, column: 34, scope: !13794)
!13810 = !DILocation(line: 2960, column: 10, scope: !13794)
!13811 = !DILocation(line: 2960, column: 8, scope: !13794)
!13812 = !DILocation(line: 2961, column: 8, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13794, file: !1, line: 2961, column: 8)
!13814 = !DILocation(line: 2961, column: 17, scope: !13813)
!13815 = !DILocation(line: 2961, column: 21, scope: !13813)
!13816 = !DILocation(line: 2961, column: 24, scope: !13813)
!13817 = !DILocation(line: 2961, column: 8, scope: !13794)
!13818 = !DILocation(line: 2968, column: 10, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13813, file: !1, line: 2961, column: 42)
!13820 = !DILocation(line: 2970, column: 9, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13819, file: !1, line: 2970, column: 9)
!13822 = !DILocation(line: 2970, column: 14, scope: !13821)
!13823 = !DILocation(line: 2970, column: 9, scope: !13819)
!13824 = !DILocation(line: 2973, column: 11, scope: !13821)
!13825 = !DILocation(line: 2973, column: 6, scope: !13821)
!13826 = !DILocation(line: 2975, column: 10, scope: !13819)
!13827 = !DILocation(line: 2977, column: 10, scope: !13819)
!13828 = !DILocation(line: 2978, column: 4, scope: !13819)
!13829 = !DILocation(line: 2980, column: 4, scope: !13794)
!13830 = !DILocation(line: 2980, column: 10, scope: !13794)
!13831 = !DILocation(line: 2981, column: 4, scope: !13794)
!13832 = !DILocation(line: 2981, column: 10, scope: !13794)
!13833 = !DILocation(line: 2982, column: 12, scope: !13794)
!13834 = !DILocation(line: 2982, column: 4, scope: !13794)
!13835 = !DILocation(line: 2982, column: 10, scope: !13794)
!13836 = !DILocation(line: 2983, column: 4, scope: !13794)
!13837 = !DILocation(line: 2983, column: 10, scope: !13794)
!13838 = !DILocation(line: 2985, column: 16, scope: !13794)
!13839 = !DILocation(line: 2985, column: 18, scope: !13794)
!13840 = !DILocation(line: 2985, column: 22, scope: !13794)
!13841 = !DILocation(line: 2985, column: 4, scope: !13794)
!13842 = !DILocation(line: 2987, column: 16, scope: !13794)
!13843 = !DILocation(line: 2987, column: 18, scope: !13794)
!13844 = !DILocation(line: 2988, column: 28, scope: !13794)
!13845 = !DILocation(line: 2988, column: 34, scope: !13794)
!13846 = !DILocation(line: 2988, column: 8, scope: !13794)
!13847 = !DILocation(line: 2987, column: 4, scope: !13794)
!13848 = !DILocation(line: 2989, column: 16, scope: !13794)
!13849 = !DILocation(line: 2989, column: 18, scope: !13794)
!13850 = !DILocation(line: 2989, column: 33, scope: !13794)
!13851 = !DILocation(line: 2989, column: 23, scope: !13794)
!13852 = !DILocation(line: 2989, column: 4, scope: !13794)
!13853 = !DILocation(line: 2990, column: 16, scope: !13794)
!13854 = !DILocation(line: 2990, column: 18, scope: !13794)
!13855 = !DILocation(line: 2990, column: 33, scope: !13794)
!13856 = !DILocation(line: 2990, column: 23, scope: !13794)
!13857 = !DILocation(line: 2990, column: 4, scope: !13794)
!13858 = !DILocation(line: 2992, column: 8, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13794, file: !1, line: 2992, column: 8)
!13860 = !DILocation(line: 2992, column: 15, scope: !13859)
!13861 = !DILocation(line: 2992, column: 8, scope: !13794)
!13862 = !DILocation(line: 2993, column: 17, scope: !13859)
!13863 = !DILocation(line: 2993, column: 19, scope: !13859)
!13864 = !DILocation(line: 2993, column: 24, scope: !13859)
!13865 = !DILocation(line: 2993, column: 31, scope: !13859)
!13866 = !DILocation(line: 2993, column: 5, scope: !13859)
!13867 = !DILocation(line: 2994, column: 13, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13859, file: !1, line: 2994, column: 13)
!13869 = !DILocation(line: 2994, column: 19, scope: !13868)
!13870 = !DILocation(line: 2994, column: 35, scope: !13868)
!13871 = !DILocation(line: 2994, column: 13, scope: !13859)
!13872 = !DILocation(line: 2995, column: 17, scope: !13868)
!13873 = !DILocation(line: 2995, column: 19, scope: !13868)
!13874 = !DILocation(line: 2996, column: 9, scope: !13868)
!13875 = !DILocation(line: 2996, column: 15, scope: !13868)
!13876 = !DILocation(line: 2996, column: 32, scope: !13868)
!13877 = !DILocation(line: 2996, column: 45, scope: !13868)
!13878 = !DILocation(line: 2995, column: 5, scope: !13868)
!13879 = !DILocation(line: 2998, column: 17, scope: !13868)
!13880 = !DILocation(line: 2998, column: 19, scope: !13868)
!13881 = !DILocation(line: 2999, column: 9, scope: !13868)
!13882 = !DILocation(line: 2999, column: 15, scope: !13868)
!13883 = !DILocation(line: 2999, column: 28, scope: !13868)
!13884 = !DILocation(line: 2998, column: 5, scope: !13868)
!13885 = !DILocation(line: 3000, column: 10, scope: !13794)
!13886 = !DILocation(line: 3000, column: 7, scope: !13794)
!13887 = !DILocation(line: 3001, column: 3, scope: !13794)
!13888 = !DILocation(line: 3002, column: 30, scope: !13779)
!13889 = !DILocation(line: 3002, column: 3, scope: !13779)
!13890 = !DILocation(line: 3003, column: 2, scope: !13779)
!13891 = !DILocation(line: 3006, column: 6, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3006, column: 6)
!13893 = !DILocation(line: 3006, column: 14, scope: !13892)
!13894 = !DILocation(line: 3006, column: 6, scope: !832)
!13895 = !DILocalVariable(name: "sl", scope: !13896, file: !1, line: 3031, type: !429)
!13896 = distinct !DILexicalBlock(scope: !13892, file: !1, line: 3006, column: 27)
!13897 = !DILocation(line: 3031, column: 15, scope: !13896)
!13898 = !DILocalVariable(name: "sl_last", scope: !13896, file: !1, line: 3032, type: !21)
!13899 = !DILocation(line: 3032, column: 8, scope: !13896)
!13900 = !DILocation(line: 3034, column: 7, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13896, file: !1, line: 3034, column: 7)
!13902 = !DILocation(line: 3034, column: 25, scope: !13901)
!13903 = !DILocation(line: 3034, column: 7, scope: !13896)
!13904 = !DILocation(line: 3035, column: 9, scope: !13901)
!13905 = !DILocation(line: 3035, column: 7, scope: !13901)
!13906 = !DILocation(line: 3035, column: 4, scope: !13901)
!13907 = !DILocation(line: 3036, column: 8, scope: !13896)
!13908 = !DILocation(line: 3036, column: 14, scope: !13896)
!13909 = !DILocation(line: 3036, column: 22, scope: !13896)
!13910 = !DILocation(line: 3036, column: 6, scope: !13896)
!13911 = !DILocation(line: 3037, column: 11, scope: !13896)
!13912 = !DILocation(line: 3038, column: 7, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13896, file: !1, line: 3038, column: 7)
!13914 = !DILocation(line: 3038, column: 10, scope: !13913)
!13915 = !DILocation(line: 3038, column: 7, scope: !13896)
!13916 = !DILocation(line: 3039, column: 4, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13913, file: !1, line: 3038, column: 19)
!13918 = !DILocation(line: 3039, column: 10, scope: !13917)
!13919 = !DILocation(line: 3040, column: 4, scope: !13917)
!13920 = !DILocation(line: 3040, column: 10, scope: !13917)
!13921 = !DILocation(line: 3041, column: 4, scope: !13917)
!13922 = !DILocation(line: 3041, column: 10, scope: !13917)
!13923 = !DILocation(line: 3042, column: 3, scope: !13917)
!13924 = !DILocation(line: 3043, column: 3, scope: !13896)
!13925 = !DILocalVariable(name: "nc", scope: !13926, file: !1, line: 3044, type: !544)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !1, line: 3043, column: 12)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !1, line: 3043, column: 3)
!13928 = distinct !DILexicalBlock(scope: !13896, file: !1, line: 3043, column: 3)
!13929 = !DILocation(line: 3044, column: 19, scope: !13926)
!13930 = !DILocalVariable(name: "cf", scope: !13926, file: !1, line: 3044, type: !544)
!13931 = !DILocation(line: 3044, column: 24, scope: !13926)
!13932 = !DILocalVariable(name: "cl", scope: !13926, file: !1, line: 3044, type: !544)
!13933 = !DILocation(line: 3044, column: 30, scope: !13926)
!13934 = !DILocalVariable(name: "cldmy", scope: !13926, file: !1, line: 3044, type: !53)
!13935 = !DILocation(line: 3044, column: 34, scope: !13926)
!13936 = !DILocalVariable(name: "sllen", scope: !13926, file: !1, line: 3045, type: !31)
!13937 = !DILocation(line: 3045, column: 8, scope: !13926)
!13938 = !DILocalVariable(name: "slmax", scope: !13926, file: !1, line: 3045, type: !31)
!13939 = !DILocation(line: 3045, column: 15, scope: !13926)
!13940 = !DILocation(line: 3047, column: 12, scope: !13926)
!13941 = !DILocation(line: 3047, column: 10, scope: !13926)
!13942 = !DILocation(line: 3048, column: 8, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13926, file: !1, line: 3048, column: 8)
!13944 = !DILocation(line: 3048, column: 14, scope: !13943)
!13945 = !DILocation(line: 3048, column: 8, scope: !13926)
!13946 = !DILocation(line: 3049, column: 11, scope: !13943)
!13947 = !DILocation(line: 3049, column: 5, scope: !13943)
!13948 = !DILocation(line: 3050, column: 8, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13926, file: !1, line: 3050, column: 8)
!13950 = !DILocation(line: 3050, column: 11, scope: !13949)
!13951 = !DILocation(line: 3050, column: 8, scope: !13926)
!13952 = !DILocation(line: 3051, column: 11, scope: !13949)
!13953 = !DILocation(line: 3051, column: 8, scope: !13949)
!13954 = !DILocation(line: 3051, column: 5, scope: !13949)
!13955 = !DILocation(line: 3053, column: 8, scope: !13949)
!13956 = !DILocation(line: 3054, column: 12, scope: !13926)
!13957 = !DILocation(line: 3054, column: 7, scope: !13926)
!13958 = !DILocation(line: 3055, column: 10, scope: !13926)
!13959 = !DILocation(line: 3056, column: 4, scope: !13926)
!13960 = !DILocation(line: 3056, column: 12, scope: !13961)
!13961 = !DILexicalBlockFile(scope: !13926, file: !1, discriminator: 1)
!13962 = !DILocation(line: 3056, column: 11, scope: !13961)
!13963 = !DILocation(line: 3056, column: 15, scope: !13961)
!13964 = !DILocation(line: 3056, column: 18, scope: !13965)
!13965 = !DILexicalBlockFile(scope: !13926, file: !1, discriminator: 2)
!13966 = !DILocation(line: 3056, column: 24, scope: !13965)
!13967 = !DILocation(line: 3056, column: 31, scope: !13965)
!13968 = !DILocation(line: 3056, column: 29, scope: !13965)
!13969 = !DILocation(line: 3056, column: 4, scope: !13970)
!13970 = !DILexicalBlockFile(scope: !13926, file: !1, discriminator: 3)
!13971 = !DILocation(line: 3057, column: 9, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !1, line: 3057, column: 9)
!13973 = distinct !DILexicalBlock(scope: !13926, file: !1, line: 3056, column: 38)
!13974 = !DILocation(line: 3057, column: 17, scope: !13972)
!13975 = !DILocation(line: 3057, column: 25, scope: !13972)
!13976 = !DILocation(line: 3057, column: 28, scope: !13977)
!13977 = !DILexicalBlockFile(scope: !13972, file: !1, discriminator: 1)
!13978 = !DILocation(line: 3057, column: 34, scope: !13977)
!13979 = !DILocation(line: 3057, column: 9, scope: !13977)
!13980 = !DILocation(line: 3067, column: 10, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13982, file: !1, line: 3067, column: 10)
!13982 = distinct !DILexicalBlock(scope: !13972, file: !1, line: 3057, column: 42)
!13983 = !DILocation(line: 3067, column: 13, scope: !13981)
!13984 = !DILocation(line: 3067, column: 10, scope: !13982)
!13985 = !DILocation(line: 3068, column: 14, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13981, file: !1, line: 3067, column: 22)
!13987 = !DILocation(line: 3068, column: 10, scope: !13986)
!13988 = !DILocation(line: 3069, column: 8, scope: !13986)
!13989 = !DILocation(line: 3069, column: 11, scope: !13986)
!13990 = !DILocation(line: 3070, column: 10, scope: !13986)
!13991 = !DILocation(line: 3070, column: 13, scope: !13986)
!13992 = !DILocation(line: 3071, column: 6, scope: !13986)
!13993 = !DILocation(line: 3072, column: 12, scope: !13982)
!13994 = !DILocation(line: 3073, column: 8, scope: !13982)
!13995 = !DILocation(line: 3074, column: 14, scope: !13982)
!13996 = !DILocation(line: 3075, column: 9, scope: !13982)
!13997 = !DILocation(line: 3076, column: 6, scope: !13982)
!13998 = !DILocation(line: 3078, column: 11, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !13973, file: !1, line: 3078, column: 9)
!14000 = !DILocation(line: 3078, column: 19, scope: !13999)
!14001 = !DILocation(line: 3078, column: 27, scope: !13999)
!14002 = !DILocation(line: 3078, column: 30, scope: !14003)
!14003 = !DILexicalBlockFile(scope: !13999, file: !1, discriminator: 1)
!14004 = !DILocation(line: 3078, column: 38, scope: !14003)
!14005 = !DILocation(line: 3078, column: 46, scope: !14003)
!14006 = !DILocation(line: 3079, column: 11, scope: !13999)
!14007 = !DILocation(line: 3079, column: 17, scope: !13999)
!14008 = !DILocation(line: 3079, column: 24, scope: !13999)
!14009 = !DILocation(line: 3079, column: 27, scope: !14003)
!14010 = !DILocation(line: 3079, column: 33, scope: !14003)
!14011 = !DILocation(line: 3079, column: 40, scope: !14003)
!14012 = !DILocation(line: 3080, column: 11, scope: !13999)
!14013 = !DILocation(line: 3080, column: 17, scope: !13999)
!14014 = !DILocation(line: 3080, column: 24, scope: !13999)
!14015 = !DILocation(line: 3080, column: 27, scope: !14003)
!14016 = !DILocation(line: 3080, column: 33, scope: !14003)
!14017 = !DILocation(line: 3080, column: 43, scope: !14003)
!14018 = !DILocation(line: 3081, column: 10, scope: !13999)
!14019 = !DILocation(line: 3081, column: 16, scope: !13999)
!14020 = !DILocation(line: 3081, column: 23, scope: !13999)
!14021 = !DILocation(line: 3082, column: 11, scope: !13999)
!14022 = !DILocation(line: 3082, column: 17, scope: !13999)
!14023 = !DILocation(line: 3082, column: 24, scope: !13999)
!14024 = !DILocation(line: 3082, column: 27, scope: !14003)
!14025 = !DILocation(line: 3082, column: 33, scope: !14003)
!14026 = !DILocation(line: 3082, column: 40, scope: !14003)
!14027 = !DILocation(line: 3083, column: 11, scope: !13999)
!14028 = !DILocation(line: 3083, column: 17, scope: !13999)
!14029 = !DILocation(line: 3083, column: 24, scope: !13999)
!14030 = !DILocation(line: 3083, column: 27, scope: !14003)
!14031 = !DILocation(line: 3083, column: 33, scope: !14003)
!14032 = !DILocation(line: 3078, column: 9, scope: !14033)
!14033 = !DILexicalBlockFile(scope: !13973, file: !1, discriminator: 2)
!14034 = !DILocation(line: 3090, column: 10, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !1, line: 3090, column: 10)
!14036 = distinct !DILexicalBlock(scope: !13999, file: !1, line: 3083, column: 44)
!14037 = !DILocation(line: 3090, column: 13, scope: !14035)
!14038 = !DILocation(line: 3090, column: 10, scope: !14036)
!14039 = !DILocation(line: 3091, column: 14, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14035, file: !1, line: 3090, column: 22)
!14041 = !DILocation(line: 3091, column: 10, scope: !14040)
!14042 = !DILocation(line: 3092, column: 8, scope: !14040)
!14043 = !DILocation(line: 3092, column: 11, scope: !14040)
!14044 = !DILocation(line: 3093, column: 10, scope: !14040)
!14045 = !DILocation(line: 3093, column: 13, scope: !14040)
!14046 = !DILocation(line: 3094, column: 6, scope: !14040)
!14047 = !DILocation(line: 3095, column: 12, scope: !14036)
!14048 = !DILocation(line: 3096, column: 10, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14036, file: !1, line: 3096, column: 10)
!14050 = !DILocation(line: 3096, column: 16, scope: !14049)
!14051 = !DILocation(line: 3096, column: 10, scope: !14036)
!14052 = !DILocation(line: 3097, column: 10, scope: !14049)
!14053 = !DILocation(line: 3097, column: 7, scope: !14049)
!14054 = !DILocation(line: 3099, column: 10, scope: !14049)
!14055 = !DILocation(line: 3100, column: 14, scope: !14036)
!14056 = !DILocation(line: 3101, column: 9, scope: !14036)
!14057 = !DILocation(line: 3102, column: 6, scope: !14036)
!14058 = !DILocation(line: 3104, column: 11, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !13973, file: !1, line: 3104, column: 9)
!14060 = !DILocation(line: 3104, column: 19, scope: !14059)
!14061 = !DILocation(line: 3104, column: 27, scope: !14059)
!14062 = !DILocation(line: 3104, column: 30, scope: !14063)
!14063 = !DILexicalBlockFile(scope: !14059, file: !1, discriminator: 1)
!14064 = !DILocation(line: 3104, column: 38, scope: !14063)
!14065 = !DILocation(line: 3104, column: 46, scope: !14063)
!14066 = !DILocation(line: 3105, column: 11, scope: !14059)
!14067 = !DILocation(line: 3105, column: 17, scope: !14059)
!14068 = !DILocation(line: 3105, column: 24, scope: !14059)
!14069 = !DILocation(line: 3106, column: 11, scope: !14059)
!14070 = !DILocation(line: 3106, column: 17, scope: !14059)
!14071 = !DILocation(line: 3106, column: 24, scope: !14059)
!14072 = !DILocation(line: 3106, column: 27, scope: !14063)
!14073 = !DILocation(line: 3106, column: 33, scope: !14063)
!14074 = !DILocation(line: 3106, column: 43, scope: !14063)
!14075 = !DILocation(line: 3107, column: 10, scope: !14059)
!14076 = !DILocation(line: 3107, column: 16, scope: !14059)
!14077 = !DILocation(line: 3107, column: 23, scope: !14059)
!14078 = !DILocation(line: 3107, column: 26, scope: !14063)
!14079 = !DILocation(line: 3107, column: 32, scope: !14063)
!14080 = !DILocation(line: 3107, column: 39, scope: !14063)
!14081 = !DILocation(line: 3108, column: 11, scope: !14059)
!14082 = !DILocation(line: 3108, column: 17, scope: !14059)
!14083 = !DILocation(line: 3108, column: 24, scope: !14059)
!14084 = !DILocation(line: 3108, column: 27, scope: !14063)
!14085 = !DILocation(line: 3108, column: 33, scope: !14063)
!14086 = !DILocation(line: 3104, column: 9, scope: !14033)
!14087 = !DILocation(line: 3115, column: 10, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14089, file: !1, line: 3115, column: 10)
!14089 = distinct !DILexicalBlock(scope: !14059, file: !1, line: 3108, column: 44)
!14090 = !DILocation(line: 3115, column: 13, scope: !14088)
!14091 = !DILocation(line: 3115, column: 10, scope: !14089)
!14092 = !DILocation(line: 3116, column: 14, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14088, file: !1, line: 3115, column: 22)
!14094 = !DILocation(line: 3116, column: 10, scope: !14093)
!14095 = !DILocation(line: 3117, column: 8, scope: !14093)
!14096 = !DILocation(line: 3117, column: 11, scope: !14093)
!14097 = !DILocation(line: 3118, column: 10, scope: !14093)
!14098 = !DILocation(line: 3118, column: 13, scope: !14093)
!14099 = !DILocation(line: 3119, column: 6, scope: !14093)
!14100 = !DILocation(line: 3120, column: 12, scope: !14089)
!14101 = !DILocation(line: 3121, column: 10, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14089, file: !1, line: 3121, column: 10)
!14103 = !DILocation(line: 3121, column: 16, scope: !14102)
!14104 = !DILocation(line: 3121, column: 10, scope: !14089)
!14105 = !DILocation(line: 3122, column: 10, scope: !14102)
!14106 = !DILocation(line: 3122, column: 7, scope: !14102)
!14107 = !DILocation(line: 3124, column: 10, scope: !14102)
!14108 = !DILocation(line: 3125, column: 14, scope: !14089)
!14109 = !DILocation(line: 3126, column: 9, scope: !14089)
!14110 = !DILocation(line: 3127, column: 6, scope: !14089)
!14111 = !DILocation(line: 3129, column: 9, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !13973, file: !1, line: 3129, column: 9)
!14113 = !DILocation(line: 3129, column: 15, scope: !14112)
!14114 = !DILocation(line: 3129, column: 22, scope: !14112)
!14115 = !DILocation(line: 3129, column: 25, scope: !14116)
!14116 = !DILexicalBlockFile(scope: !14112, file: !1, discriminator: 1)
!14117 = !DILocation(line: 3129, column: 28, scope: !14116)
!14118 = !DILocation(line: 3129, column: 9, scope: !14116)
!14119 = !DILocation(line: 3130, column: 10, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !1, line: 3130, column: 10)
!14121 = distinct !DILexicalBlock(scope: !14112, file: !1, line: 3129, column: 37)
!14122 = !DILocation(line: 3130, column: 13, scope: !14120)
!14123 = !DILocation(line: 3130, column: 10, scope: !14121)
!14124 = !DILocation(line: 3131, column: 14, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14120, file: !1, line: 3130, column: 22)
!14126 = !DILocation(line: 3131, column: 10, scope: !14125)
!14127 = !DILocation(line: 3132, column: 8, scope: !14125)
!14128 = !DILocation(line: 3132, column: 11, scope: !14125)
!14129 = !DILocation(line: 3133, column: 14, scope: !14125)
!14130 = !DILocation(line: 3133, column: 10, scope: !14125)
!14131 = !DILocation(line: 3134, column: 8, scope: !14125)
!14132 = !DILocation(line: 3134, column: 11, scope: !14125)
!14133 = !DILocation(line: 3135, column: 6, scope: !14125)
!14134 = !DILocation(line: 3136, column: 10, scope: !14120)
!14135 = !DILocation(line: 3137, column: 12, scope: !14121)
!14136 = !DILocation(line: 3138, column: 10, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14121, file: !1, line: 3138, column: 10)
!14138 = !DILocation(line: 3138, column: 16, scope: !14137)
!14139 = !DILocation(line: 3138, column: 10, scope: !14121)
!14140 = !DILocation(line: 3139, column: 20, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14137, file: !1, line: 3138, column: 24)
!14142 = !DILocation(line: 3139, column: 17, scope: !14141)
!14143 = !DILocation(line: 3139, column: 15, scope: !14141)
!14144 = !DILocation(line: 3140, column: 7, scope: !14141)
!14145 = !DILocation(line: 3142, column: 5, scope: !14121)
!14146 = !DILocation(line: 3143, column: 18, scope: !13973)
!14147 = !DILocation(line: 3143, column: 15, scope: !13973)
!14148 = !DILocation(line: 3143, column: 13, scope: !13973)
!14149 = !DILocation(line: 3144, column: 9, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !13973, file: !1, line: 3144, column: 9)
!14151 = !DILocation(line: 3144, column: 12, scope: !14150)
!14152 = !DILocation(line: 3144, column: 9, scope: !13973)
!14153 = !DILocation(line: 3145, column: 14, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14150, file: !1, line: 3144, column: 21)
!14155 = !DILocation(line: 3145, column: 9, scope: !14154)
!14156 = !DILocation(line: 3145, column: 12, scope: !14154)
!14157 = !DILocation(line: 3146, column: 8, scope: !14154)
!14158 = !DILocation(line: 3146, column: 12, scope: !14154)
!14159 = !DILocation(line: 3147, column: 5, scope: !14154)
!14160 = !DILocation(line: 3148, column: 10, scope: !13973)
!14161 = !DILocation(line: 3056, column: 4, scope: !14162)
!14162 = !DILexicalBlockFile(scope: !13926, file: !1, discriminator: 4)
!14163 = !DILocation(line: 3150, column: 9, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !13926, file: !1, line: 3150, column: 8)
!14165 = !DILocation(line: 3150, column: 8, scope: !14164)
!14166 = !DILocation(line: 3150, column: 8, scope: !13926)
!14167 = !DILocation(line: 3151, column: 18, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14164, file: !1, line: 3150, column: 13)
!14169 = !DILocation(line: 3151, column: 16, scope: !14168)
!14170 = !DILocation(line: 3151, column: 12, scope: !14168)
!14171 = !DILocation(line: 3152, column: 9, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14168, file: !1, line: 3152, column: 9)
!14173 = !DILocation(line: 3152, column: 12, scope: !14172)
!14174 = !DILocation(line: 3152, column: 9, scope: !14168)
!14175 = !DILocation(line: 3156, column: 7, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14172, file: !1, line: 3152, column: 21)
!14177 = !DILocation(line: 3156, column: 10, scope: !14176)
!14178 = !DILocation(line: 3165, column: 14, scope: !14176)
!14179 = !DILocation(line: 3165, column: 6, scope: !14176)
!14180 = !DILocation(line: 3165, column: 12, scope: !14176)
!14181 = !DILocation(line: 3166, column: 6, scope: !14176)
!14182 = !DILocation(line: 3166, column: 12, scope: !14176)
!14183 = !DILocation(line: 3169, column: 12, scope: !14176)
!14184 = !DILocation(line: 3169, column: 9, scope: !14176)
!14185 = !DILocation(line: 3170, column: 5, scope: !14176)
!14186 = !DILocation(line: 3171, column: 32, scope: !14168)
!14187 = !DILocation(line: 3171, column: 5, scope: !14168)
!14188 = !DILocation(line: 3172, column: 9, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14168, file: !1, line: 3172, column: 9)
!14190 = !DILocation(line: 3172, column: 27, scope: !14189)
!14191 = !DILocation(line: 3172, column: 9, scope: !14168)
!14192 = !DILocation(line: 3173, column: 11, scope: !14189)
!14193 = !DILocation(line: 3173, column: 9, scope: !14189)
!14194 = !DILocation(line: 3173, column: 6, scope: !14189)
!14195 = !DILocation(line: 3174, column: 9, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14168, file: !1, line: 3174, column: 9)
!14197 = !DILocation(line: 3174, column: 12, scope: !14196)
!14198 = !DILocation(line: 3174, column: 9, scope: !14168)
!14199 = !DILocation(line: 3176, column: 6, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14196, file: !1, line: 3174, column: 21)
!14201 = !DILocation(line: 3176, column: 12, scope: !14200)
!14202 = !DILocation(line: 3177, column: 6, scope: !14200)
!14203 = !DILocation(line: 3177, column: 12, scope: !14200)
!14204 = !DILocation(line: 3178, column: 6, scope: !14200)
!14205 = !DILocation(line: 3178, column: 12, scope: !14200)
!14206 = !DILocation(line: 3179, column: 5, scope: !14200)
!14207 = !DILocation(line: 3180, column: 4, scope: !14168)
!14208 = !DILocation(line: 3181, column: 18, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14164, file: !1, line: 3180, column: 11)
!14210 = !DILocation(line: 3181, column: 16, scope: !14209)
!14211 = !DILocation(line: 3181, column: 12, scope: !14209)
!14212 = !DILocation(line: 3182, column: 9, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14209, file: !1, line: 3182, column: 9)
!14214 = !DILocation(line: 3182, column: 12, scope: !14213)
!14215 = !DILocation(line: 3182, column: 9, scope: !14209)
!14216 = !DILocation(line: 3183, column: 14, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14213, file: !1, line: 3182, column: 21)
!14218 = !DILocation(line: 3183, column: 6, scope: !14217)
!14219 = !DILocation(line: 3183, column: 12, scope: !14217)
!14220 = !DILocation(line: 3184, column: 6, scope: !14217)
!14221 = !DILocation(line: 3184, column: 12, scope: !14217)
!14222 = !DILocation(line: 3185, column: 12, scope: !14217)
!14223 = !DILocation(line: 3185, column: 9, scope: !14217)
!14224 = !DILocation(line: 3186, column: 5, scope: !14217)
!14225 = !DILocation(line: 3187, column: 32, scope: !14209)
!14226 = !DILocation(line: 3187, column: 5, scope: !14209)
!14227 = !DILocation(line: 3188, column: 5, scope: !14209)
!14228 = !DILocation(line: 3043, column: 3, scope: !14229)
!14229 = !DILexicalBlockFile(scope: !13927, file: !1, discriminator: 1)
!14230 = !DILocation(line: 3191, column: 2, scope: !13896)
!14231 = !DILocation(line: 3194, column: 6, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3194, column: 6)
!14233 = !DILocation(line: 3194, column: 14, scope: !14232)
!14234 = !DILocation(line: 3194, column: 6, scope: !832)
!14235 = !DILocalVariable(name: "tf_flags", scope: !14236, file: !1, line: 3214, type: !53)
!14236 = distinct !DILexicalBlock(scope: !14232, file: !1, line: 3194, column: 27)
!14237 = !DILocation(line: 3214, column: 17, scope: !14236)
!14238 = !DILocation(line: 3216, column: 10, scope: !14236)
!14239 = !DILocation(line: 3217, column: 12, scope: !14236)
!14240 = !DILocation(line: 3219, column: 38, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3219, column: 7)
!14242 = !DILocation(line: 3219, column: 44, scope: !14241)
!14243 = !DILocation(line: 3219, column: 7, scope: !14241)
!14244 = !DILocation(line: 3219, column: 51, scope: !14241)
!14245 = !DILocation(line: 3220, column: 31, scope: !14241)
!14246 = !DILocation(line: 3220, column: 37, scope: !14241)
!14247 = !DILocation(line: 3220, column: 7, scope: !14241)
!14248 = !DILocation(line: 3221, column: 27, scope: !14241)
!14249 = !DILocation(line: 3221, column: 33, scope: !14241)
!14250 = !DILocation(line: 3221, column: 7, scope: !14241)
!14251 = !DILocation(line: 3220, column: 44, scope: !14241)
!14252 = !DILocation(line: 3219, column: 7, scope: !14253)
!14253 = !DILexicalBlockFile(scope: !14236, file: !1, discriminator: 1)
!14254 = !DILocation(line: 3222, column: 11, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14241, file: !1, line: 3221, column: 41)
!14256 = !DILocation(line: 3223, column: 13, scope: !14255)
!14257 = !DILocation(line: 3224, column: 3, scope: !14255)
!14258 = !DILocation(line: 3226, column: 34, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3226, column: 7)
!14260 = !DILocation(line: 3226, column: 40, scope: !14259)
!14261 = !DILocation(line: 3226, column: 7, scope: !14259)
!14262 = !DILocation(line: 3226, column: 7, scope: !14236)
!14263 = !DILocation(line: 3227, column: 11, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14259, file: !1, line: 3226, column: 48)
!14265 = !DILocation(line: 3228, column: 13, scope: !14264)
!14266 = !DILocation(line: 3229, column: 3, scope: !14264)
!14267 = !DILocation(line: 3230, column: 34, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3230, column: 7)
!14269 = !DILocation(line: 3230, column: 40, scope: !14268)
!14270 = !DILocation(line: 3230, column: 7, scope: !14268)
!14271 = !DILocation(line: 3230, column: 7, scope: !14236)
!14272 = !DILocation(line: 3231, column: 11, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14268, file: !1, line: 3230, column: 48)
!14274 = !DILocation(line: 3232, column: 13, scope: !14273)
!14275 = !DILocation(line: 3233, column: 3, scope: !14273)
!14276 = !DILocation(line: 3234, column: 34, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3234, column: 7)
!14278 = !DILocation(line: 3234, column: 40, scope: !14277)
!14279 = !DILocation(line: 3234, column: 7, scope: !14277)
!14280 = !DILocation(line: 3234, column: 7, scope: !14236)
!14281 = !DILocation(line: 3235, column: 11, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14277, file: !1, line: 3234, column: 48)
!14283 = !DILocation(line: 3236, column: 13, scope: !14282)
!14284 = !DILocation(line: 3237, column: 3, scope: !14282)
!14285 = !DILocation(line: 3238, column: 7, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3238, column: 7)
!14287 = !DILocation(line: 3238, column: 27, scope: !14286)
!14288 = !DILocation(line: 3238, column: 25, scope: !14286)
!14289 = !DILocation(line: 3238, column: 7, scope: !14236)
!14290 = !DILocation(line: 3239, column: 33, scope: !14286)
!14291 = !DILocation(line: 3239, column: 9, scope: !14286)
!14292 = !DILocation(line: 3239, column: 7, scope: !14286)
!14293 = !DILocation(line: 3239, column: 4, scope: !14286)
!14294 = !DILocation(line: 3240, column: 7, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14236, file: !1, line: 3240, column: 7)
!14296 = !DILocation(line: 3240, column: 10, scope: !14295)
!14297 = !DILocation(line: 3240, column: 7, scope: !14236)
!14298 = !DILocation(line: 3241, column: 4, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14295, file: !1, line: 3240, column: 19)
!14300 = !DILocation(line: 3241, column: 10, scope: !14299)
!14301 = !DILocation(line: 3242, column: 4, scope: !14299)
!14302 = !DILocation(line: 3242, column: 10, scope: !14299)
!14303 = !DILocation(line: 3243, column: 12, scope: !14299)
!14304 = !DILocation(line: 3243, column: 4, scope: !14299)
!14305 = !DILocation(line: 3243, column: 10, scope: !14299)
!14306 = !DILocation(line: 3244, column: 4, scope: !14299)
!14307 = !DILocation(line: 3244, column: 10, scope: !14299)
!14308 = !DILocation(line: 3245, column: 12, scope: !14299)
!14309 = !DILocation(line: 3245, column: 4, scope: !14299)
!14310 = !DILocation(line: 3245, column: 10, scope: !14299)
!14311 = !DILocation(line: 3246, column: 7, scope: !14299)
!14312 = !DILocation(line: 3248, column: 8, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14299, file: !1, line: 3248, column: 8)
!14314 = !DILocation(line: 3248, column: 17, scope: !14313)
!14315 = !DILocation(line: 3248, column: 8, scope: !14299)
!14316 = !DILocation(line: 3249, column: 18, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14313, file: !1, line: 3248, column: 32)
!14318 = !DILocation(line: 3249, column: 20, scope: !14317)
!14319 = !DILocation(line: 3250, column: 33, scope: !14317)
!14320 = !DILocation(line: 3250, column: 39, scope: !14317)
!14321 = !DILocation(line: 3250, column: 9, scope: !14317)
!14322 = !DILocation(line: 3249, column: 5, scope: !14317)
!14323 = !DILocation(line: 3251, column: 8, scope: !14317)
!14324 = !DILocation(line: 3252, column: 4, scope: !14317)
!14325 = !DILocation(line: 3254, column: 8, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14299, file: !1, line: 3254, column: 8)
!14327 = !DILocation(line: 3254, column: 17, scope: !14326)
!14328 = !DILocation(line: 3254, column: 8, scope: !14299)
!14329 = !DILocation(line: 3255, column: 18, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14326, file: !1, line: 3254, column: 30)
!14331 = !DILocation(line: 3255, column: 20, scope: !14330)
!14332 = !DILocation(line: 3256, column: 29, scope: !14330)
!14333 = !DILocation(line: 3256, column: 35, scope: !14330)
!14334 = !DILocation(line: 3256, column: 9, scope: !14330)
!14335 = !DILocation(line: 3255, column: 5, scope: !14330)
!14336 = !DILocation(line: 3257, column: 8, scope: !14330)
!14337 = !DILocation(line: 3258, column: 4, scope: !14330)
!14338 = !DILocation(line: 3260, column: 8, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14299, file: !1, line: 3260, column: 8)
!14340 = !DILocation(line: 3260, column: 17, scope: !14339)
!14341 = !DILocation(line: 3260, column: 8, scope: !14299)
!14342 = !DILocation(line: 3261, column: 18, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14339, file: !1, line: 3260, column: 30)
!14344 = !DILocation(line: 3261, column: 20, scope: !14343)
!14345 = !DILocation(line: 3262, column: 29, scope: !14343)
!14346 = !DILocation(line: 3262, column: 35, scope: !14343)
!14347 = !DILocation(line: 3262, column: 9, scope: !14343)
!14348 = !DILocation(line: 3261, column: 5, scope: !14343)
!14349 = !DILocation(line: 3263, column: 8, scope: !14343)
!14350 = !DILocation(line: 3264, column: 4, scope: !14343)
!14351 = !DILocation(line: 3266, column: 8, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14299, file: !1, line: 3266, column: 8)
!14353 = !DILocation(line: 3266, column: 17, scope: !14352)
!14354 = !DILocation(line: 3266, column: 8, scope: !14299)
!14355 = !DILocation(line: 3267, column: 18, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14352, file: !1, line: 3266, column: 34)
!14357 = !DILocation(line: 3267, column: 20, scope: !14356)
!14358 = !DILocation(line: 3268, column: 29, scope: !14356)
!14359 = !DILocation(line: 3268, column: 35, scope: !14356)
!14360 = !DILocation(line: 3268, column: 9, scope: !14356)
!14361 = !DILocation(line: 3267, column: 5, scope: !14356)
!14362 = !DILocation(line: 3269, column: 8, scope: !14356)
!14363 = !DILocation(line: 3270, column: 4, scope: !14356)
!14364 = !DILocation(line: 3271, column: 3, scope: !14299)
!14365 = !DILocation(line: 3272, column: 30, scope: !14236)
!14366 = !DILocation(line: 3272, column: 3, scope: !14236)
!14367 = !DILocation(line: 3273, column: 2, scope: !14236)
!14368 = !DILocation(line: 3276, column: 6, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3276, column: 6)
!14370 = !DILocation(line: 3276, column: 14, scope: !14369)
!14371 = !DILocation(line: 3276, column: 6, scope: !832)
!14372 = !DILocation(line: 3285, column: 10, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14369, file: !1, line: 3276, column: 27)
!14374 = !DILocation(line: 3286, column: 7, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14373, file: !1, line: 3286, column: 7)
!14376 = !DILocation(line: 3286, column: 27, scope: !14375)
!14377 = !DILocation(line: 3286, column: 25, scope: !14375)
!14378 = !DILocation(line: 3286, column: 7, scope: !14373)
!14379 = !DILocation(line: 3287, column: 33, scope: !14375)
!14380 = !DILocation(line: 3287, column: 9, scope: !14375)
!14381 = !DILocation(line: 3287, column: 7, scope: !14375)
!14382 = !DILocation(line: 3287, column: 4, scope: !14375)
!14383 = !DILocation(line: 3288, column: 7, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14373, file: !1, line: 3288, column: 7)
!14385 = !DILocation(line: 3288, column: 10, scope: !14384)
!14386 = !DILocation(line: 3288, column: 7, scope: !14373)
!14387 = !DILocation(line: 3289, column: 4, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14384, file: !1, line: 3288, column: 19)
!14389 = !DILocation(line: 3289, column: 10, scope: !14388)
!14390 = !DILocation(line: 3290, column: 4, scope: !14388)
!14391 = !DILocation(line: 3290, column: 10, scope: !14388)
!14392 = !DILocation(line: 3291, column: 12, scope: !14388)
!14393 = !DILocation(line: 3291, column: 4, scope: !14388)
!14394 = !DILocation(line: 3291, column: 10, scope: !14388)
!14395 = !DILocation(line: 3292, column: 4, scope: !14388)
!14396 = !DILocation(line: 3292, column: 10, scope: !14388)
!14397 = !DILocation(line: 3293, column: 10, scope: !14388)
!14398 = !DILocation(line: 3293, column: 7, scope: !14388)
!14399 = !DILocation(line: 3294, column: 3, scope: !14388)
!14400 = !DILocation(line: 3295, column: 30, scope: !14373)
!14401 = !DILocation(line: 3295, column: 3, scope: !14373)
!14402 = !DILocation(line: 3296, column: 2, scope: !14373)
!14403 = !DILocation(line: 3299, column: 6, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3299, column: 6)
!14405 = !DILocation(line: 3299, column: 14, scope: !14404)
!14406 = !DILocation(line: 3299, column: 6, scope: !832)
!14407 = !DILocation(line: 3309, column: 10, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14404, file: !1, line: 3299, column: 27)
!14409 = !DILocation(line: 3310, column: 7, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14408, file: !1, line: 3310, column: 7)
!14411 = !DILocation(line: 3310, column: 27, scope: !14410)
!14412 = !DILocation(line: 3310, column: 25, scope: !14410)
!14413 = !DILocation(line: 3310, column: 7, scope: !14408)
!14414 = !DILocation(line: 3311, column: 33, scope: !14410)
!14415 = !DILocation(line: 3311, column: 9, scope: !14410)
!14416 = !DILocation(line: 3311, column: 7, scope: !14410)
!14417 = !DILocation(line: 3311, column: 4, scope: !14410)
!14418 = !DILocation(line: 3312, column: 7, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14408, file: !1, line: 3312, column: 7)
!14420 = !DILocation(line: 3312, column: 10, scope: !14419)
!14421 = !DILocation(line: 3312, column: 7, scope: !14408)
!14422 = !DILocation(line: 3313, column: 4, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14419, file: !1, line: 3312, column: 19)
!14424 = !DILocation(line: 3313, column: 10, scope: !14423)
!14425 = !DILocation(line: 3314, column: 4, scope: !14423)
!14426 = !DILocation(line: 3314, column: 10, scope: !14423)
!14427 = !DILocation(line: 3315, column: 12, scope: !14423)
!14428 = !DILocation(line: 3315, column: 4, scope: !14423)
!14429 = !DILocation(line: 3315, column: 10, scope: !14423)
!14430 = !DILocation(line: 3316, column: 4, scope: !14423)
!14431 = !DILocation(line: 3316, column: 10, scope: !14423)
!14432 = !DILocation(line: 3317, column: 16, scope: !14423)
!14433 = !DILocation(line: 3317, column: 19, scope: !14423)
!14434 = !DILocation(line: 3318, column: 8, scope: !14423)
!14435 = !DILocation(line: 3318, column: 19, scope: !14423)
!14436 = !DILocation(line: 3317, column: 4, scope: !14423)
!14437 = !DILocation(line: 3319, column: 10, scope: !14423)
!14438 = !DILocation(line: 3319, column: 7, scope: !14423)
!14439 = !DILocation(line: 3320, column: 3, scope: !14423)
!14440 = !DILocation(line: 3321, column: 30, scope: !14408)
!14441 = !DILocation(line: 3321, column: 3, scope: !14408)
!14442 = !DILocation(line: 3322, column: 2, scope: !14408)
!14443 = !DILocation(line: 3325, column: 6, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3325, column: 6)
!14445 = !DILocation(line: 3325, column: 14, scope: !14444)
!14446 = !DILocation(line: 3325, column: 6, scope: !832)
!14447 = !DILocation(line: 3335, column: 10, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14444, file: !1, line: 3325, column: 27)
!14449 = !DILocation(line: 3336, column: 7, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14448, file: !1, line: 3336, column: 7)
!14451 = !DILocation(line: 3336, column: 27, scope: !14450)
!14452 = !DILocation(line: 3336, column: 25, scope: !14450)
!14453 = !DILocation(line: 3336, column: 7, scope: !14448)
!14454 = !DILocation(line: 3337, column: 33, scope: !14450)
!14455 = !DILocation(line: 3337, column: 9, scope: !14450)
!14456 = !DILocation(line: 3337, column: 7, scope: !14450)
!14457 = !DILocation(line: 3337, column: 4, scope: !14450)
!14458 = !DILocation(line: 3338, column: 7, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14448, file: !1, line: 3338, column: 7)
!14460 = !DILocation(line: 3338, column: 10, scope: !14459)
!14461 = !DILocation(line: 3338, column: 7, scope: !14448)
!14462 = !DILocation(line: 3339, column: 4, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14459, file: !1, line: 3338, column: 19)
!14464 = !DILocation(line: 3339, column: 10, scope: !14463)
!14465 = !DILocation(line: 3340, column: 4, scope: !14463)
!14466 = !DILocation(line: 3340, column: 10, scope: !14463)
!14467 = !DILocation(line: 3341, column: 12, scope: !14463)
!14468 = !DILocation(line: 3341, column: 4, scope: !14463)
!14469 = !DILocation(line: 3341, column: 10, scope: !14463)
!14470 = !DILocation(line: 3342, column: 4, scope: !14463)
!14471 = !DILocation(line: 3342, column: 10, scope: !14463)
!14472 = !DILocation(line: 3343, column: 16, scope: !14463)
!14473 = !DILocation(line: 3343, column: 19, scope: !14463)
!14474 = !DILocation(line: 3344, column: 8, scope: !14463)
!14475 = !DILocation(line: 3344, column: 16, scope: !14463)
!14476 = !DILocation(line: 3344, column: 26, scope: !14463)
!14477 = !DILocation(line: 3343, column: 4, scope: !14463)
!14478 = !DILocation(line: 3345, column: 10, scope: !14463)
!14479 = !DILocation(line: 3345, column: 7, scope: !14463)
!14480 = !DILocation(line: 3346, column: 3, scope: !14463)
!14481 = !DILocation(line: 3347, column: 30, scope: !14448)
!14482 = !DILocation(line: 3347, column: 3, scope: !14448)
!14483 = !DILocation(line: 3348, column: 2, scope: !14448)
!14484 = !DILocation(line: 3351, column: 6, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3351, column: 6)
!14486 = !DILocation(line: 3351, column: 14, scope: !14485)
!14487 = !DILocation(line: 3351, column: 6, scope: !832)
!14488 = !DILocation(line: 3360, column: 10, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14485, file: !1, line: 3351, column: 27)
!14490 = !DILocation(line: 3361, column: 7, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14489, file: !1, line: 3361, column: 7)
!14492 = !DILocation(line: 3361, column: 27, scope: !14491)
!14493 = !DILocation(line: 3361, column: 25, scope: !14491)
!14494 = !DILocation(line: 3361, column: 7, scope: !14489)
!14495 = !DILocation(line: 3362, column: 33, scope: !14491)
!14496 = !DILocation(line: 3362, column: 9, scope: !14491)
!14497 = !DILocation(line: 3362, column: 7, scope: !14491)
!14498 = !DILocation(line: 3362, column: 4, scope: !14491)
!14499 = !DILocation(line: 3363, column: 7, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14489, file: !1, line: 3363, column: 7)
!14501 = !DILocation(line: 3363, column: 10, scope: !14500)
!14502 = !DILocation(line: 3363, column: 7, scope: !14489)
!14503 = !DILocalVariable(name: "dev", scope: !14504, file: !1, line: 3364, type: !172)
!14504 = distinct !DILexicalBlock(scope: !14500, file: !1, line: 3363, column: 19)
!14505 = !DILocation(line: 3364, column: 13, scope: !14504)
!14506 = !DILocation(line: 3366, column: 4, scope: !14504)
!14507 = !DILocation(line: 3366, column: 10, scope: !14504)
!14508 = !DILocation(line: 3367, column: 4, scope: !14504)
!14509 = !DILocation(line: 3367, column: 10, scope: !14504)
!14510 = !DILocation(line: 3368, column: 12, scope: !14504)
!14511 = !DILocation(line: 3368, column: 4, scope: !14504)
!14512 = !DILocation(line: 3368, column: 10, scope: !14504)
!14513 = !DILocation(line: 3369, column: 4, scope: !14504)
!14514 = !DILocation(line: 3369, column: 10, scope: !14504)
!14515 = !DILocation(line: 3370, column: 39, scope: !14504)
!14516 = !DILocation(line: 3370, column: 45, scope: !14504)
!14517 = !DILocation(line: 3370, column: 20, scope: !14504)
!14518 = !DILocation(line: 3370, column: 8, scope: !14504)
!14519 = !DILocation(line: 3371, column: 16, scope: !14504)
!14520 = !DILocation(line: 3371, column: 19, scope: !14504)
!14521 = !DILocation(line: 3371, column: 35, scope: !14504)
!14522 = !DILocation(line: 3371, column: 39, scope: !14504)
!14523 = !DILocation(line: 3371, column: 24, scope: !14504)
!14524 = !DILocation(line: 3371, column: 4, scope: !14504)
!14525 = !DILocation(line: 3372, column: 16, scope: !14504)
!14526 = !DILocation(line: 3372, column: 19, scope: !14504)
!14527 = !DILocation(line: 3372, column: 36, scope: !14504)
!14528 = !DILocation(line: 3372, column: 40, scope: !14504)
!14529 = !DILocation(line: 3372, column: 25, scope: !14504)
!14530 = !DILocation(line: 3372, column: 4, scope: !14504)
!14531 = !DILocation(line: 3373, column: 10, scope: !14504)
!14532 = !DILocation(line: 3373, column: 7, scope: !14504)
!14533 = !DILocation(line: 3374, column: 3, scope: !14504)
!14534 = !DILocation(line: 3375, column: 30, scope: !14489)
!14535 = !DILocation(line: 3375, column: 3, scope: !14489)
!14536 = !DILocation(line: 3376, column: 2, scope: !14489)
!14537 = !DILocation(line: 3379, column: 6, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3379, column: 6)
!14539 = !DILocation(line: 3379, column: 12, scope: !14538)
!14540 = !DILocation(line: 3379, column: 19, scope: !14538)
!14541 = !DILocation(line: 3379, column: 6, scope: !832)
!14542 = !DILocation(line: 3392, column: 10, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14538, file: !1, line: 3379, column: 32)
!14544 = !DILocation(line: 3393, column: 7, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14543, file: !1, line: 3393, column: 7)
!14546 = !DILocation(line: 3393, column: 27, scope: !14545)
!14547 = !DILocation(line: 3393, column: 25, scope: !14545)
!14548 = !DILocation(line: 3393, column: 7, scope: !14543)
!14549 = !DILocation(line: 3394, column: 33, scope: !14545)
!14550 = !DILocation(line: 3394, column: 9, scope: !14545)
!14551 = !DILocation(line: 3394, column: 7, scope: !14545)
!14552 = !DILocation(line: 3394, column: 4, scope: !14545)
!14553 = !DILocation(line: 3395, column: 7, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14543, file: !1, line: 3395, column: 7)
!14555 = !DILocation(line: 3395, column: 10, scope: !14554)
!14556 = !DILocation(line: 3395, column: 7, scope: !14543)
!14557 = !DILocation(line: 3396, column: 4, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !1, line: 3395, column: 19)
!14559 = !DILocation(line: 3396, column: 10, scope: !14558)
!14560 = !DILocation(line: 3397, column: 4, scope: !14558)
!14561 = !DILocation(line: 3397, column: 10, scope: !14558)
!14562 = !DILocation(line: 3398, column: 12, scope: !14558)
!14563 = !DILocation(line: 3398, column: 4, scope: !14558)
!14564 = !DILocation(line: 3398, column: 10, scope: !14558)
!14565 = !DILocation(line: 3399, column: 4, scope: !14558)
!14566 = !DILocation(line: 3399, column: 10, scope: !14558)
!14567 = !DILocation(line: 3400, column: 4, scope: !14558)
!14568 = !DILocation(line: 3400, column: 10, scope: !14558)
!14569 = !DILocation(line: 3401, column: 4, scope: !14558)
!14570 = !DILocation(line: 3401, column: 10, scope: !14558)
!14571 = !DILocation(line: 3402, column: 12, scope: !14558)
!14572 = !DILocation(line: 3402, column: 18, scope: !14558)
!14573 = !DILocation(line: 3402, column: 25, scope: !14558)
!14574 = !DILocation(line: 3402, column: 4, scope: !14558)
!14575 = !DILocation(line: 3402, column: 10, scope: !14558)
!14576 = !DILocation(line: 3403, column: 12, scope: !14558)
!14577 = !DILocation(line: 3403, column: 18, scope: !14558)
!14578 = !DILocation(line: 3403, column: 25, scope: !14558)
!14579 = !DILocation(line: 3403, column: 4, scope: !14558)
!14580 = !DILocation(line: 3403, column: 10, scope: !14558)
!14581 = !DILocation(line: 3404, column: 16, scope: !14558)
!14582 = !DILocation(line: 3404, column: 19, scope: !14558)
!14583 = !DILocation(line: 3404, column: 24, scope: !14558)
!14584 = !DILocation(line: 3404, column: 30, scope: !14558)
!14585 = !DILocation(line: 3404, column: 37, scope: !14558)
!14586 = !DILocation(line: 3404, column: 4, scope: !14558)
!14587 = !DILocation(line: 3405, column: 10, scope: !14558)
!14588 = !DILocation(line: 3405, column: 7, scope: !14558)
!14589 = !DILocation(line: 3406, column: 3, scope: !14558)
!14590 = !DILocation(line: 3407, column: 30, scope: !14543)
!14591 = !DILocation(line: 3407, column: 3, scope: !14543)
!14592 = !DILocation(line: 3408, column: 2, scope: !14543)
!14593 = !DILocation(line: 3411, column: 6, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !832, file: !1, line: 3411, column: 6)
!14595 = !DILocation(line: 3411, column: 8, scope: !14594)
!14596 = !DILocation(line: 3411, column: 24, scope: !14594)
!14597 = !DILocation(line: 3411, column: 27, scope: !14598)
!14598 = !DILexicalBlockFile(scope: !14594, file: !1, discriminator: 1)
!14599 = !DILocation(line: 3411, column: 37, scope: !14598)
!14600 = !DILocation(line: 3411, column: 45, scope: !14598)
!14601 = !DILocation(line: 3411, column: 34, scope: !14598)
!14602 = !DILocation(line: 3411, column: 6, scope: !14598)
!14603 = !DILocation(line: 3412, column: 10, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14594, file: !1, line: 3411, column: 53)
!14605 = !DILocation(line: 3413, column: 7, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14604, file: !1, line: 3413, column: 7)
!14607 = !DILocation(line: 3413, column: 10, scope: !14606)
!14608 = !DILocation(line: 3413, column: 7, scope: !14604)
!14609 = !DILocation(line: 3414, column: 16, scope: !14606)
!14610 = !DILocation(line: 3414, column: 18, scope: !14606)
!14611 = !DILocation(line: 3414, column: 22, scope: !14606)
!14612 = !DILocation(line: 3414, column: 31, scope: !14606)
!14613 = !DILocation(line: 3414, column: 4, scope: !14606)
!14614 = !DILocation(line: 3416, column: 30, scope: !14604)
!14615 = !DILocation(line: 3416, column: 3, scope: !14604)
!14616 = !DILocation(line: 3417, column: 2, scope: !14604)
!14617 = !DILocation(line: 3419, column: 2, scope: !832)
!14618 = !DILocation(line: 3421, column: 14, scope: !832)
!14619 = !DILocation(line: 3421, column: 2, scope: !832)
!14620 = !DILocalVariable(name: "pp", arg: 1, scope: !803, file: !628, line: 148, type: !271)
!14621 = !DILocation(line: 148, column: 23, scope: !803)
!14622 = !DILocalVariable(name: "u", arg: 2, scope: !803, file: !628, line: 148, type: !42)
!14623 = !DILocation(line: 148, column: 36, scope: !803)
!14624 = !DILocalVariable(name: "p", scope: !803, file: !628, line: 150, type: !544)
!14625 = !DILocation(line: 150, column: 17, scope: !803)
!14626 = !DILocation(line: 150, column: 38, scope: !803)
!14627 = !DILocation(line: 152, column: 10, scope: !803)
!14628 = !DILocation(line: 152, column: 12, scope: !803)
!14629 = !DILocation(line: 152, column: 19, scope: !803)
!14630 = !DILocation(line: 152, column: 9, scope: !803)
!14631 = !DILocation(line: 152, column: 2, scope: !803)
!14632 = !DILocation(line: 152, column: 7, scope: !803)
!14633 = !DILocation(line: 153, column: 10, scope: !803)
!14634 = !DILocation(line: 153, column: 12, scope: !803)
!14635 = !DILocation(line: 153, column: 19, scope: !803)
!14636 = !DILocation(line: 153, column: 9, scope: !803)
!14637 = !DILocation(line: 153, column: 2, scope: !803)
!14638 = !DILocation(line: 153, column: 7, scope: !803)
!14639 = !DILocation(line: 154, column: 10, scope: !803)
!14640 = !DILocation(line: 154, column: 12, scope: !803)
!14641 = !DILocation(line: 154, column: 18, scope: !803)
!14642 = !DILocation(line: 154, column: 9, scope: !803)
!14643 = !DILocation(line: 154, column: 2, scope: !803)
!14644 = !DILocation(line: 154, column: 7, scope: !803)
!14645 = !DILocation(line: 155, column: 9, scope: !803)
!14646 = !DILocation(line: 155, column: 11, scope: !803)
!14647 = !DILocation(line: 155, column: 2, scope: !803)
!14648 = !DILocation(line: 155, column: 7, scope: !803)
!14649 = !DILocation(line: 156, column: 1, scope: !803)
!14650 = !DILocalVariable(name: "tm", arg: 1, scope: !807, file: !1, line: 2521, type: !810)
!14651 = !DILocation(line: 2521, column: 27, scope: !807)
!14652 = !DILocalVariable(name: "t", arg: 2, scope: !807, file: !1, line: 2521, type: !824)
!14653 = !DILocation(line: 2521, column: 39, scope: !807)
!14654 = !DILocation(line: 2524, column: 2, scope: !807)
!14655 = !DILocation(line: 2525, column: 14, scope: !807)
!14656 = !DILocation(line: 2525, column: 17, scope: !807)
!14657 = !DILocation(line: 2525, column: 2, scope: !807)
!14658 = !DILocation(line: 2532, column: 1, scope: !807)
!14659 = !DILocalVariable(name: "p", arg: 1, scope: !825, file: !1, line: 2419, type: !544)
!14660 = !DILocation(line: 2419, column: 28, scope: !825)
!14661 = !DILocalVariable(name: "value", arg: 2, scope: !825, file: !1, line: 2419, type: !21)
!14662 = !DILocation(line: 2419, column: 36, scope: !825)
!14663 = !DILocation(line: 2421, column: 17, scope: !825)
!14664 = !DILocation(line: 2421, column: 12, scope: !825)
!14665 = !DILocation(line: 2421, column: 15, scope: !825)
!14666 = !DILocation(line: 2422, column: 1, scope: !825)
!14667 = !DILocalVariable(name: "pp", arg: 1, scope: !831, file: !628, line: 168, type: !271)
!14668 = !DILocation(line: 168, column: 23, scope: !831)
!14669 = !DILocalVariable(name: "u", arg: 2, scope: !831, file: !628, line: 168, type: !307)
!14670 = !DILocation(line: 168, column: 36, scope: !831)
!14671 = !DILocalVariable(name: "p", scope: !831, file: !628, line: 170, type: !544)
!14672 = !DILocation(line: 170, column: 17, scope: !831)
!14673 = !DILocation(line: 170, column: 38, scope: !831)
!14674 = !DILocation(line: 172, column: 9, scope: !831)
!14675 = !DILocation(line: 172, column: 11, scope: !831)
!14676 = !DILocation(line: 172, column: 2, scope: !831)
!14677 = !DILocation(line: 172, column: 7, scope: !831)
!14678 = !DILocation(line: 173, column: 10, scope: !831)
!14679 = !DILocation(line: 173, column: 12, scope: !831)
!14680 = !DILocation(line: 173, column: 18, scope: !831)
!14681 = !DILocation(line: 173, column: 9, scope: !831)
!14682 = !DILocation(line: 173, column: 2, scope: !831)
!14683 = !DILocation(line: 173, column: 7, scope: !831)
!14684 = !DILocation(line: 174, column: 1, scope: !831)
!14685 = !DILocalVariable(name: "bp", arg: 1, scope: !835, file: !1, line: 2618, type: !544)
!14686 = !DILocation(line: 2618, column: 34, scope: !835)
!14687 = !DILocalVariable(name: "dr_len", arg: 2, scope: !835, file: !1, line: 2618, type: !31)
!14688 = !DILocation(line: 2618, column: 42, scope: !835)
!14689 = !DILocalVariable(name: "isoent", arg: 3, scope: !835, file: !1, line: 2618, type: !76)
!14690 = !DILocation(line: 2618, column: 65, scope: !835)
!14691 = !DILocalVariable(name: "ctl", arg: 4, scope: !835, file: !1, line: 2619, type: !838)
!14692 = !DILocation(line: 2619, column: 26, scope: !835)
!14693 = !DILocation(line: 2621, column: 12, scope: !835)
!14694 = !DILocation(line: 2621, column: 2, scope: !835)
!14695 = !DILocation(line: 2621, column: 7, scope: !835)
!14696 = !DILocation(line: 2621, column: 10, scope: !835)
!14697 = !DILocation(line: 2622, column: 6, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !835, file: !1, line: 2622, column: 6)
!14699 = !DILocation(line: 2622, column: 9, scope: !14698)
!14700 = !DILocation(line: 2622, column: 6, scope: !835)
!14701 = !DILocation(line: 2623, column: 9, scope: !14698)
!14702 = !DILocation(line: 2623, column: 6, scope: !14698)
!14703 = !DILocation(line: 2623, column: 3, scope: !14698)
!14704 = !DILocation(line: 2624, column: 2, scope: !835)
!14705 = !DILocation(line: 2624, column: 7, scope: !835)
!14706 = !DILocation(line: 2624, column: 16, scope: !835)
!14707 = !DILocation(line: 2625, column: 16, scope: !835)
!14708 = !DILocation(line: 2625, column: 2, scope: !835)
!14709 = !DILocation(line: 2625, column: 7, scope: !835)
!14710 = !DILocation(line: 2625, column: 14, scope: !835)
!14711 = !DILocation(line: 2626, column: 2, scope: !835)
!14712 = !DILocation(line: 2626, column: 7, scope: !835)
!14713 = !DILocation(line: 2626, column: 14, scope: !835)
!14714 = !DILocation(line: 2627, column: 31, scope: !835)
!14715 = !DILocation(line: 2627, column: 17, scope: !835)
!14716 = !DILocation(line: 2627, column: 22, scope: !835)
!14717 = !DILocation(line: 2627, column: 29, scope: !835)
!14718 = !DILocation(line: 2627, column: 2, scope: !835)
!14719 = !DILocation(line: 2627, column: 7, scope: !835)
!14720 = !DILocation(line: 2627, column: 15, scope: !835)
!14721 = !DILocation(line: 2628, column: 2, scope: !835)
!14722 = !DILocation(line: 2628, column: 7, scope: !835)
!14723 = !DILocation(line: 2628, column: 13, scope: !835)
!14724 = !DILocation(line: 2630, column: 10, scope: !835)
!14725 = !DILocation(line: 2630, column: 2, scope: !835)
!14726 = !DILocalVariable(name: "ctl", arg: 1, scope: !850, file: !1, line: 2750, type: !838)
!14727 = !DILocation(line: 2750, column: 43, scope: !850)
!14728 = !DILocalVariable(name: "size", arg: 2, scope: !850, file: !1, line: 2750, type: !31)
!14729 = !DILocation(line: 2750, column: 52, scope: !850)
!14730 = !DILocalVariable(name: "isoent", scope: !850, file: !1, line: 2752, type: !76)
!14731 = !DILocation(line: 2752, column: 17, scope: !850)
!14732 = !DILocalVariable(name: "rec", scope: !850, file: !1, line: 2753, type: !155)
!14733 = !DILocation(line: 2753, column: 19, scope: !850)
!14734 = !DILocation(line: 2755, column: 6, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !850, file: !1, line: 2755, column: 6)
!14736 = !DILocation(line: 2755, column: 11, scope: !14735)
!14737 = !DILocation(line: 2755, column: 6, scope: !850)
!14738 = !DILocation(line: 2756, column: 12, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14735, file: !1, line: 2755, column: 21)
!14740 = !DILocation(line: 2756, column: 17, scope: !14739)
!14741 = !DILocation(line: 2756, column: 25, scope: !14739)
!14742 = !DILocation(line: 2756, column: 10, scope: !14739)
!14743 = !DILocation(line: 2757, column: 9, scope: !14739)
!14744 = !DILocation(line: 2757, column: 17, scope: !14739)
!14745 = !DILocation(line: 2757, column: 31, scope: !14739)
!14746 = !DILocation(line: 2757, column: 7, scope: !14739)
!14747 = !DILocation(line: 2758, column: 7, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14739, file: !1, line: 2758, column: 7)
!14749 = !DILocation(line: 2758, column: 11, scope: !14748)
!14750 = !DILocation(line: 2758, column: 7, scope: !14739)
!14751 = !DILocation(line: 2759, column: 19, scope: !14748)
!14752 = !DILocation(line: 2759, column: 4, scope: !14748)
!14753 = !DILocation(line: 2759, column: 9, scope: !14748)
!14754 = !DILocation(line: 2759, column: 16, scope: !14748)
!14755 = !DILocation(line: 2760, column: 2, scope: !14739)
!14756 = !DILocation(line: 2761, column: 18, scope: !850)
!14757 = !DILocation(line: 2761, column: 2, scope: !850)
!14758 = !DILocation(line: 2761, column: 7, scope: !850)
!14759 = !DILocation(line: 2761, column: 15, scope: !850)
!14760 = !DILocation(line: 2762, column: 1, scope: !850)
!14761 = !DILocalVariable(name: "ctl", arg: 1, scope: !853, file: !1, line: 2658, type: !838)
!14762 = !DILocation(line: 2658, column: 40, scope: !853)
!14763 = !DILocalVariable(name: "length", arg: 2, scope: !853, file: !1, line: 2658, type: !31)
!14764 = !DILocation(line: 2658, column: 49, scope: !853)
!14765 = !DILocalVariable(name: "cur_len", scope: !853, file: !1, line: 2660, type: !31)
!14766 = !DILocation(line: 2660, column: 6, scope: !853)
!14767 = !DILocation(line: 2660, column: 16, scope: !853)
!14768 = !DILocation(line: 2660, column: 21, scope: !853)
!14769 = !DILocation(line: 2663, column: 21, scope: !853)
!14770 = !DILocation(line: 2663, column: 2, scope: !853)
!14771 = !DILocation(line: 2666, column: 2, scope: !853)
!14772 = !DILocation(line: 2666, column: 7, scope: !853)
!14773 = !DILocation(line: 2666, column: 16, scope: !853)
!14774 = !DILocation(line: 2667, column: 6, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !853, file: !1, line: 2667, column: 6)
!14776 = !DILocation(line: 2667, column: 11, scope: !14775)
!14777 = !DILocation(line: 2667, column: 14, scope: !14775)
!14778 = !DILocation(line: 2667, column: 6, scope: !853)
!14779 = !DILocalVariable(name: "p", scope: !14780, file: !1, line: 2669, type: !544)
!14780 = distinct !DILexicalBlock(scope: !14775, file: !1, line: 2667, column: 23)
!14781 = !DILocation(line: 2669, column: 18, scope: !14780)
!14782 = !DILocation(line: 2673, column: 26, scope: !14780)
!14783 = !DILocation(line: 2673, column: 33, scope: !14780)
!14784 = !DILocation(line: 2673, column: 18, scope: !14780)
!14785 = !DILocation(line: 2673, column: 23, scope: !14780)
!14786 = !DILocation(line: 2673, column: 3, scope: !14780)
!14787 = !DILocation(line: 2673, column: 8, scope: !14780)
!14788 = !DILocation(line: 2673, column: 15, scope: !14780)
!14789 = !DILocation(line: 2674, column: 24, scope: !14780)
!14790 = !DILocation(line: 2674, column: 29, scope: !14780)
!14791 = !DILocation(line: 2675, column: 8, scope: !14780)
!14792 = !DILocation(line: 2675, column: 13, scope: !14780)
!14793 = !DILocation(line: 2675, column: 21, scope: !14780)
!14794 = !DILocation(line: 2675, column: 26, scope: !14780)
!14795 = !DILocation(line: 2675, column: 37, scope: !14780)
!14796 = !DILocation(line: 2675, column: 42, scope: !14780)
!14797 = !DILocation(line: 2674, column: 7, scope: !14780)
!14798 = !DILocation(line: 2674, column: 5, scope: !14780)
!14799 = !DILocation(line: 2676, column: 13, scope: !14780)
!14800 = !DILocation(line: 2676, column: 15, scope: !14780)
!14801 = !DILocation(line: 2676, column: 3, scope: !14780)
!14802 = !DILocation(line: 2676, column: 8, scope: !14780)
!14803 = !DILocation(line: 2676, column: 11, scope: !14780)
!14804 = !DILocation(line: 2677, column: 2, scope: !14780)
!14805 = !DILocation(line: 2679, column: 26, scope: !14775)
!14806 = !DILocation(line: 2679, column: 31, scope: !14775)
!14807 = !DILocation(line: 2680, column: 8, scope: !14775)
!14808 = !DILocation(line: 2680, column: 13, scope: !14775)
!14809 = !DILocation(line: 2679, column: 9, scope: !14775)
!14810 = !DILocation(line: 2681, column: 2, scope: !853)
!14811 = !DILocation(line: 2681, column: 7, scope: !853)
!14812 = !DILocation(line: 2681, column: 15, scope: !853)
!14813 = !DILocation(line: 2684, column: 6, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !853, file: !1, line: 2684, column: 6)
!14815 = !DILocation(line: 2684, column: 25, scope: !14814)
!14816 = !DILocation(line: 2684, column: 23, scope: !14814)
!14817 = !DILocation(line: 2684, column: 6, scope: !853)
!14818 = !DILocation(line: 2685, column: 27, scope: !14814)
!14819 = !DILocation(line: 2685, column: 32, scope: !14814)
!14820 = !DILocation(line: 2685, column: 9, scope: !14814)
!14821 = !DILocation(line: 2685, column: 3, scope: !14814)
!14822 = !DILocation(line: 2687, column: 10, scope: !853)
!14823 = !DILocation(line: 2687, column: 15, scope: !853)
!14824 = !DILocation(line: 2687, column: 2, scope: !853)
!14825 = !DILocalVariable(name: "p", arg: 1, scope: !862, file: !1, line: 2581, type: !544)
!14826 = !DILocation(line: 2581, column: 28, scope: !862)
!14827 = !DILocalVariable(name: "location", arg: 2, scope: !862, file: !1, line: 2581, type: !31)
!14828 = !DILocation(line: 2581, column: 35, scope: !862)
!14829 = !DILocalVariable(name: "offset", arg: 3, scope: !862, file: !1, line: 2581, type: !31)
!14830 = !DILocation(line: 2581, column: 49, scope: !862)
!14831 = !DILocalVariable(name: "size", arg: 4, scope: !862, file: !1, line: 2581, type: !31)
!14832 = !DILocation(line: 2581, column: 61, scope: !862)
!14833 = !DILocalVariable(name: "bp", scope: !862, file: !1, line: 2583, type: !544)
!14834 = !DILocation(line: 2583, column: 17, scope: !862)
!14835 = !DILocation(line: 2583, column: 22, scope: !862)
!14836 = !DILocation(line: 2583, column: 24, scope: !862)
!14837 = !DILocation(line: 2600, column: 2, scope: !862)
!14838 = !DILocation(line: 2600, column: 8, scope: !862)
!14839 = !DILocation(line: 2601, column: 2, scope: !862)
!14840 = !DILocation(line: 2601, column: 8, scope: !862)
!14841 = !DILocation(line: 2602, column: 2, scope: !862)
!14842 = !DILocation(line: 2602, column: 8, scope: !862)
!14843 = !DILocation(line: 2603, column: 2, scope: !862)
!14844 = !DILocation(line: 2603, column: 8, scope: !862)
!14845 = !DILocation(line: 2604, column: 14, scope: !862)
!14846 = !DILocation(line: 2604, column: 16, scope: !862)
!14847 = !DILocation(line: 2604, column: 20, scope: !862)
!14848 = !DILocation(line: 2604, column: 2, scope: !862)
!14849 = !DILocation(line: 2605, column: 14, scope: !862)
!14850 = !DILocation(line: 2605, column: 16, scope: !862)
!14851 = !DILocation(line: 2605, column: 21, scope: !862)
!14852 = !DILocation(line: 2605, column: 2, scope: !862)
!14853 = !DILocation(line: 2606, column: 14, scope: !862)
!14854 = !DILocation(line: 2606, column: 16, scope: !862)
!14855 = !DILocation(line: 2606, column: 21, scope: !862)
!14856 = !DILocation(line: 2606, column: 2, scope: !862)
!14857 = !DILocation(line: 2607, column: 2, scope: !862)
!14858 = !DILocalVariable(name: "ctl", arg: 1, scope: !865, file: !1, line: 2634, type: !838)
!14859 = !DILocation(line: 2634, column: 41, scope: !865)
!14860 = !DILocalVariable(name: "ce_size", arg: 2, scope: !865, file: !1, line: 2634, type: !31)
!14861 = !DILocation(line: 2634, column: 50, scope: !865)
!14862 = !DILocalVariable(name: "padding", scope: !865, file: !1, line: 2636, type: !31)
!14863 = !DILocation(line: 2636, column: 6, scope: !865)
!14864 = !DILocation(line: 2638, column: 6, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !865, file: !1, line: 2638, column: 6)
!14866 = !DILocation(line: 2638, column: 14, scope: !14865)
!14867 = !DILocation(line: 2638, column: 6, scope: !865)
!14868 = !DILocation(line: 2639, column: 24, scope: !14865)
!14869 = !DILocation(line: 2639, column: 29, scope: !14865)
!14870 = !DILocation(line: 2639, column: 3, scope: !14865)
!14871 = !DILocation(line: 2641, column: 6, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !865, file: !1, line: 2641, column: 6)
!14873 = !DILocation(line: 2641, column: 11, scope: !14872)
!14874 = !DILocation(line: 2641, column: 19, scope: !14872)
!14875 = !DILocation(line: 2641, column: 6, scope: !865)
!14876 = !DILocation(line: 2642, column: 3, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14872, file: !1, line: 2641, column: 27)
!14878 = !DILocation(line: 2642, column: 8, scope: !14877)
!14879 = !DILocation(line: 2642, column: 15, scope: !14877)
!14880 = !DILocation(line: 2643, column: 7, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14877, file: !1, line: 2643, column: 7)
!14882 = !DILocation(line: 2643, column: 12, scope: !14881)
!14883 = !DILocation(line: 2643, column: 15, scope: !14881)
!14884 = !DILocation(line: 2643, column: 7, scope: !14877)
!14885 = !DILocation(line: 2644, column: 12, scope: !14881)
!14886 = !DILocation(line: 2644, column: 17, scope: !14881)
!14887 = !DILocation(line: 2644, column: 4, scope: !14881)
!14888 = !DILocation(line: 2644, column: 9, scope: !14881)
!14889 = !DILocation(line: 2644, column: 26, scope: !14881)
!14890 = !DILocation(line: 2645, column: 11, scope: !14877)
!14891 = !DILocation(line: 2646, column: 2, scope: !14877)
!14892 = !DILocation(line: 2647, column: 6, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !865, file: !1, line: 2647, column: 6)
!14894 = !DILocation(line: 2647, column: 11, scope: !14893)
!14895 = !DILocation(line: 2647, column: 6, scope: !865)
!14896 = !DILocation(line: 2648, column: 7, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14898, file: !1, line: 2648, column: 7)
!14898 = distinct !DILexicalBlock(scope: !14893, file: !1, line: 2647, column: 21)
!14899 = !DILocation(line: 2648, column: 12, scope: !14897)
!14900 = !DILocation(line: 2648, column: 19, scope: !14897)
!14901 = !DILocation(line: 2648, column: 7, scope: !14898)
!14902 = !DILocation(line: 2649, column: 16, scope: !14897)
!14903 = !DILocation(line: 2649, column: 21, scope: !14897)
!14904 = !DILocation(line: 2649, column: 29, scope: !14897)
!14905 = !DILocation(line: 2649, column: 34, scope: !14897)
!14906 = !DILocation(line: 2650, column: 8, scope: !14897)
!14907 = !DILocation(line: 2650, column: 13, scope: !14897)
!14908 = !DILocation(line: 2650, column: 23, scope: !14897)
!14909 = !DILocation(line: 2650, column: 28, scope: !14897)
!14910 = !DILocation(line: 2650, column: 38, scope: !14897)
!14911 = !DILocation(line: 2650, column: 36, scope: !14897)
!14912 = !DILocation(line: 2649, column: 4, scope: !14897)
!14913 = !DILocation(line: 2651, column: 2, scope: !14898)
!14914 = !DILocation(line: 2652, column: 17, scope: !14893)
!14915 = !DILocation(line: 2652, column: 22, scope: !14893)
!14916 = !DILocation(line: 2652, column: 3, scope: !14893)
!14917 = !DILocation(line: 2652, column: 8, scope: !14893)
!14918 = !DILocation(line: 2652, column: 15, scope: !14893)
!14919 = !DILocation(line: 2653, column: 1, scope: !865)
!14920 = !DILocalVariable(name: "isoent", arg: 1, scope: !856, file: !1, line: 2701, type: !76)
!14921 = !DILocation(line: 2701, column: 33, scope: !856)
!14922 = !DILocalVariable(name: "space", arg: 2, scope: !856, file: !1, line: 2701, type: !579)
!14923 = !DILocation(line: 2701, column: 46, scope: !856)
!14924 = !DILocalVariable(name: "off", arg: 3, scope: !856, file: !1, line: 2701, type: !579)
!14925 = !DILocation(line: 2701, column: 58, scope: !856)
!14926 = !DILocalVariable(name: "loc", arg: 4, scope: !856, file: !1, line: 2701, type: !579)
!14927 = !DILocation(line: 2701, column: 68, scope: !856)
!14928 = !DILocalVariable(name: "rec", scope: !856, file: !1, line: 2703, type: !155)
!14929 = !DILocation(line: 2703, column: 19, scope: !856)
!14930 = !DILocation(line: 2705, column: 11, scope: !856)
!14931 = !DILocation(line: 2705, column: 19, scope: !856)
!14932 = !DILocation(line: 2705, column: 9, scope: !856)
!14933 = !DILocation(line: 2706, column: 6, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !856, file: !1, line: 2706, column: 6)
!14935 = !DILocation(line: 2706, column: 10, scope: !14934)
!14936 = !DILocation(line: 2706, column: 6, scope: !856)
!14937 = !DILocation(line: 2708, column: 9, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14934, file: !1, line: 2706, column: 19)
!14939 = !DILocation(line: 2708, column: 17, scope: !14938)
!14940 = !DILocation(line: 2708, column: 31, scope: !14938)
!14941 = !DILocation(line: 2708, column: 7, scope: !14938)
!14942 = !DILocation(line: 2709, column: 40, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14938, file: !1, line: 2709, column: 7)
!14944 = !DILocation(line: 2709, column: 45, scope: !14943)
!14945 = !DILocation(line: 2709, column: 38, scope: !14943)
!14946 = !DILocation(line: 2709, column: 17, scope: !14943)
!14947 = !DILocation(line: 2709, column: 7, scope: !14938)
!14948 = !DILocation(line: 2710, column: 10, scope: !14943)
!14949 = !DILocation(line: 2710, column: 15, scope: !14943)
!14950 = !DILocation(line: 2710, column: 8, scope: !14943)
!14951 = !DILocation(line: 2710, column: 4, scope: !14943)
!14952 = !DILocation(line: 2711, column: 2, scope: !14938)
!14953 = !DILocation(line: 2713, column: 27, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14934, file: !1, line: 2711, column: 9)
!14955 = !DILocation(line: 2713, column: 9, scope: !14954)
!14956 = !DILocation(line: 2713, column: 7, scope: !14954)
!14957 = !DILocation(line: 2714, column: 7, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14954, file: !1, line: 2714, column: 7)
!14959 = !DILocation(line: 2714, column: 11, scope: !14958)
!14960 = !DILocation(line: 2714, column: 19, scope: !14958)
!14961 = !DILocation(line: 2715, column: 40, scope: !14958)
!14962 = !DILocation(line: 2715, column: 45, scope: !14958)
!14963 = !DILocation(line: 2715, column: 38, scope: !14958)
!14964 = !DILocation(line: 2715, column: 17, scope: !14958)
!14965 = !DILocation(line: 2714, column: 7, scope: !14966)
!14966 = !DILexicalBlockFile(scope: !14954, file: !1, discriminator: 1)
!14967 = !DILocation(line: 2716, column: 10, scope: !14968)
!14968 = distinct !DILexicalBlock(scope: !14958, file: !1, line: 2715, column: 53)
!14969 = !DILocation(line: 2716, column: 8, scope: !14968)
!14970 = !DILocation(line: 2717, column: 8, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14968, file: !1, line: 2717, column: 8)
!14972 = !DILocation(line: 2717, column: 12, scope: !14971)
!14973 = !DILocation(line: 2717, column: 8, scope: !14968)
!14974 = !DILocation(line: 2718, column: 5, scope: !14971)
!14975 = !DILocation(line: 2719, column: 4, scope: !14968)
!14976 = !DILocation(line: 2719, column: 9, scope: !14968)
!14977 = !DILocation(line: 2719, column: 18, scope: !14968)
!14978 = !DILocation(line: 2720, column: 4, scope: !14968)
!14979 = !DILocation(line: 2720, column: 9, scope: !14968)
!14980 = !DILocation(line: 2720, column: 16, scope: !14968)
!14981 = !DILocation(line: 2722, column: 4, scope: !14968)
!14982 = !DILocation(line: 2722, column: 9, scope: !14968)
!14983 = !DILocation(line: 2722, column: 14, scope: !14968)
!14984 = !DILocation(line: 2730, column: 8, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14968, file: !1, line: 2730, column: 8)
!14986 = !DILocation(line: 2730, column: 16, scope: !14985)
!14987 = !DILocation(line: 2730, column: 30, scope: !14985)
!14988 = !DILocation(line: 2730, column: 35, scope: !14985)
!14989 = !DILocation(line: 2730, column: 8, scope: !14968)
!14990 = !DILocation(line: 2732, column: 8, scope: !14985)
!14991 = !DILocation(line: 2732, column: 16, scope: !14985)
!14992 = !DILocation(line: 2732, column: 30, scope: !14985)
!14993 = !DILocation(line: 2731, column: 5, scope: !14985)
!14994 = !DILocation(line: 2731, column: 13, scope: !14985)
!14995 = !DILocation(line: 2731, column: 27, scope: !14985)
!14996 = !DILocation(line: 2731, column: 32, scope: !14985)
!14997 = !DILocation(line: 2733, column: 34, scope: !14968)
!14998 = !DILocation(line: 2733, column: 5, scope: !14968)
!14999 = !DILocation(line: 2733, column: 13, scope: !14968)
!15000 = !DILocation(line: 2733, column: 27, scope: !14968)
!15001 = !DILocation(line: 2733, column: 32, scope: !14968)
!15002 = !DILocation(line: 2734, column: 35, scope: !14968)
!15003 = !DILocation(line: 2734, column: 40, scope: !14968)
!15004 = !DILocation(line: 2734, column: 4, scope: !14968)
!15005 = !DILocation(line: 2734, column: 12, scope: !14968)
!15006 = !DILocation(line: 2734, column: 26, scope: !14968)
!15007 = !DILocation(line: 2734, column: 31, scope: !14968)
!15008 = !DILocation(line: 2735, column: 3, scope: !14968)
!15009 = !DILocation(line: 2737, column: 32, scope: !856)
!15010 = !DILocation(line: 2737, column: 37, scope: !856)
!15011 = !DILocation(line: 2737, column: 30, scope: !856)
!15012 = !DILocation(line: 2737, column: 44, scope: !856)
!15013 = !DILocation(line: 2737, column: 3, scope: !856)
!15014 = !DILocation(line: 2737, column: 9, scope: !856)
!15015 = !DILocation(line: 2738, column: 7, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !856, file: !1, line: 2738, column: 6)
!15017 = !DILocation(line: 2738, column: 6, scope: !15016)
!15018 = !DILocation(line: 2738, column: 13, scope: !15016)
!15019 = !DILocation(line: 2738, column: 6, scope: !856)
!15020 = !DILocation(line: 2739, column: 4, scope: !15016)
!15021 = !DILocation(line: 2739, column: 10, scope: !15016)
!15022 = !DILocation(line: 2739, column: 3, scope: !15016)
!15023 = !DILocation(line: 2740, column: 6, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !856, file: !1, line: 2740, column: 6)
!15025 = !DILocation(line: 2740, column: 10, scope: !15024)
!15026 = !DILocation(line: 2740, column: 6, scope: !856)
!15027 = !DILocation(line: 2741, column: 10, scope: !15024)
!15028 = !DILocation(line: 2741, column: 15, scope: !15024)
!15029 = !DILocation(line: 2741, column: 4, scope: !15024)
!15030 = !DILocation(line: 2741, column: 8, scope: !15024)
!15031 = !DILocation(line: 2741, column: 3, scope: !15024)
!15032 = !DILocation(line: 2742, column: 6, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !856, file: !1, line: 2742, column: 6)
!15034 = !DILocation(line: 2742, column: 10, scope: !15033)
!15035 = !DILocation(line: 2742, column: 6, scope: !856)
!15036 = !DILocation(line: 2743, column: 10, scope: !15033)
!15037 = !DILocation(line: 2743, column: 15, scope: !15033)
!15038 = !DILocation(line: 2743, column: 4, scope: !15033)
!15039 = !DILocation(line: 2743, column: 8, scope: !15033)
!15040 = !DILocation(line: 2743, column: 3, scope: !15033)
!15041 = !DILocation(line: 2744, column: 34, scope: !856)
!15042 = !DILocation(line: 2744, column: 2, scope: !856)
!15043 = !DILocation(line: 2744, column: 10, scope: !856)
!15044 = !DILocation(line: 2744, column: 24, scope: !856)
!15045 = !DILocation(line: 2744, column: 32, scope: !856)
!15046 = !DILocation(line: 2746, column: 20, scope: !856)
!15047 = !DILocation(line: 2746, column: 25, scope: !856)
!15048 = !DILocation(line: 2746, column: 11, scope: !856)
!15049 = !DILocation(line: 2746, column: 16, scope: !856)
!15050 = !DILocation(line: 2746, column: 2, scope: !856)
!15051 = !DILocation(line: 2747, column: 1, scope: !856)
!15052 = !DILocalVariable(name: "isoent", arg: 1, scope: !859, file: !1, line: 2691, type: !76)
!15053 = !DILocation(line: 2691, column: 34, scope: !859)
!15054 = !DILocation(line: 2693, column: 6, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !859, file: !1, line: 2693, column: 6)
!15056 = !DILocation(line: 2693, column: 14, scope: !15055)
!15057 = !DILocation(line: 2693, column: 28, scope: !15055)
!15058 = !DILocation(line: 2693, column: 34, scope: !15055)
!15059 = !DILocation(line: 2693, column: 6, scope: !859)
!15060 = !DILocation(line: 2694, column: 3, scope: !15055)
!15061 = !DILocation(line: 2696, column: 13, scope: !859)
!15062 = !DILocation(line: 2696, column: 21, scope: !859)
!15063 = !DILocation(line: 2696, column: 35, scope: !859)
!15064 = !DILocation(line: 2696, column: 4, scope: !859)
!15065 = !DILocation(line: 2697, column: 7, scope: !859)
!15066 = !DILocation(line: 2695, column: 10, scope: !859)
!15067 = !DILocation(line: 2695, column: 2, scope: !859)
!15068 = !DILocation(line: 2698, column: 1, scope: !859)
!15069 = !DILocalVariable(name: "media_type", arg: 1, scope: !872, file: !1, line: 7228, type: !31)
!15070 = !DILocation(line: 7228, column: 24, scope: !872)
!15071 = !DILocation(line: 7230, column: 10, scope: !872)
!15072 = !DILocation(line: 7230, column: 2, scope: !872)
!15073 = !DILocation(line: 7232, column: 3, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !872, file: !1, line: 7230, column: 22)
!15075 = !DILocation(line: 7234, column: 3, scope: !15074)
!15076 = !DILocation(line: 7236, column: 3, scope: !15074)
!15077 = !DILocation(line: 7238, column: 3, scope: !15074)
!15078 = !DILocation(line: 7240, column: 1, scope: !872)
!15079 = !DILocalVariable(name: "iso9660", arg: 1, scope: !875, file: !1, line: 5400, type: !530)
!15080 = !DILocation(line: 5400, column: 39, scope: !875)
!15081 = !DILocalVariable(name: "isoent", arg: 2, scope: !875, file: !1, line: 5400, type: !76)
!15082 = !DILocation(line: 5400, column: 63, scope: !875)
!15083 = !DILocalVariable(name: "symlocation", arg: 3, scope: !875, file: !1, line: 5401, type: !579)
!15084 = !DILocation(line: 5401, column: 10, scope: !875)
!15085 = !DILocalVariable(name: "children", scope: !875, file: !1, line: 5403, type: !97)
!15086 = !DILocation(line: 5403, column: 18, scope: !875)
!15087 = !DILocalVariable(name: "n", scope: !875, file: !1, line: 5404, type: !31)
!15088 = !DILocation(line: 5404, column: 6, scope: !875)
!15089 = !DILocation(line: 5406, column: 6, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !875, file: !1, line: 5406, column: 6)
!15091 = !DILocation(line: 5406, column: 14, scope: !15090)
!15092 = !DILocation(line: 5406, column: 23, scope: !15090)
!15093 = !DILocation(line: 5406, column: 27, scope: !15090)
!15094 = !DILocation(line: 5406, column: 6, scope: !875)
!15095 = !DILocation(line: 5407, column: 3, scope: !15090)
!15096 = !DILocation(line: 5409, column: 13, scope: !875)
!15097 = !DILocation(line: 5409, column: 21, scope: !875)
!15098 = !DILocation(line: 5409, column: 11, scope: !875)
!15099 = !DILocation(line: 5410, column: 9, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !875, file: !1, line: 5410, column: 2)
!15101 = !DILocation(line: 5410, column: 7, scope: !15100)
!15102 = !DILocation(line: 5410, column: 14, scope: !15103)
!15103 = !DILexicalBlockFile(scope: !15104, file: !1, discriminator: 1)
!15104 = distinct !DILexicalBlock(scope: !15100, file: !1, line: 5410, column: 2)
!15105 = !DILocation(line: 5410, column: 18, scope: !15103)
!15106 = !DILocation(line: 5410, column: 26, scope: !15103)
!15107 = !DILocation(line: 5410, column: 35, scope: !15103)
!15108 = !DILocation(line: 5410, column: 16, scope: !15103)
!15109 = !DILocation(line: 5410, column: 2, scope: !15103)
!15110 = !DILocalVariable(name: "np", scope: !15111, file: !1, line: 5411, type: !76)
!15111 = distinct !DILexicalBlock(scope: !15104, file: !1, line: 5410, column: 45)
!15112 = !DILocation(line: 5411, column: 18, scope: !15111)
!15113 = !DILocalVariable(name: "file", scope: !15111, file: !1, line: 5412, type: !7)
!15114 = !DILocation(line: 5412, column: 19, scope: !15111)
!15115 = !DILocation(line: 5414, column: 17, scope: !15111)
!15116 = !DILocation(line: 5414, column: 8, scope: !15111)
!15117 = !DILocation(line: 5414, column: 6, scope: !15111)
!15118 = !DILocation(line: 5415, column: 7, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15111, file: !1, line: 5415, column: 7)
!15120 = !DILocation(line: 5415, column: 11, scope: !15119)
!15121 = !DILocation(line: 5415, column: 7, scope: !15111)
!15122 = !DILocation(line: 5416, column: 4, scope: !15119)
!15123 = !DILocation(line: 5417, column: 7, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15111, file: !1, line: 5417, column: 7)
!15125 = !DILocation(line: 5417, column: 13, scope: !15124)
!15126 = !DILocation(line: 5417, column: 22, scope: !15124)
!15127 = !DILocation(line: 5417, column: 32, scope: !15124)
!15128 = !DILocation(line: 5417, column: 10, scope: !15124)
!15129 = !DILocation(line: 5417, column: 7, scope: !15111)
!15130 = !DILocation(line: 5418, column: 4, scope: !15124)
!15131 = !DILocation(line: 5419, column: 10, scope: !15111)
!15132 = !DILocation(line: 5419, column: 14, scope: !15111)
!15133 = !DILocation(line: 5419, column: 8, scope: !15111)
!15134 = !DILocation(line: 5420, column: 7, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15111, file: !1, line: 5420, column: 7)
!15136 = !DILocation(line: 5420, column: 13, scope: !15135)
!15137 = !DILocation(line: 5420, column: 18, scope: !15135)
!15138 = !DILocation(line: 5420, column: 21, scope: !15139)
!15139 = !DILexicalBlockFile(scope: !15135, file: !1, discriminator: 1)
!15140 = !DILocation(line: 5420, column: 27, scope: !15139)
!15141 = !DILocation(line: 5420, column: 43, scope: !15139)
!15142 = !DILocation(line: 5420, column: 7, scope: !15139)
!15143 = !DILocation(line: 5421, column: 4, scope: !15135)
!15144 = !DILocation(line: 5422, column: 30, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15111, file: !1, line: 5422, column: 7)
!15146 = !DILocation(line: 5422, column: 36, scope: !15145)
!15147 = !DILocation(line: 5422, column: 7, scope: !15145)
!15148 = !DILocation(line: 5422, column: 43, scope: !15145)
!15149 = !DILocation(line: 5422, column: 55, scope: !15145)
!15150 = !DILocation(line: 5423, column: 7, scope: !15145)
!15151 = !DILocation(line: 5423, column: 13, scope: !15145)
!15152 = !DILocation(line: 5423, column: 21, scope: !15145)
!15153 = !DILocation(line: 5423, column: 26, scope: !15145)
!15154 = !DILocation(line: 5422, column: 7, scope: !15155)
!15155 = !DILexicalBlockFile(scope: !15111, file: !1, discriminator: 1)
!15156 = !DILocation(line: 5428, column: 31, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15145, file: !1, line: 5423, column: 32)
!15158 = !DILocation(line: 5428, column: 43, scope: !15157)
!15159 = !DILocation(line: 5428, column: 4, scope: !15157)
!15160 = !DILocation(line: 5428, column: 10, scope: !15157)
!15161 = !DILocation(line: 5428, column: 18, scope: !15157)
!15162 = !DILocation(line: 5428, column: 27, scope: !15157)
!15163 = !DILocation(line: 5429, column: 4, scope: !15157)
!15164 = !DILocation(line: 5432, column: 3, scope: !15111)
!15165 = !DILocation(line: 5432, column: 9, scope: !15111)
!15166 = !DILocation(line: 5432, column: 23, scope: !15111)
!15167 = !DILocation(line: 5433, column: 2, scope: !15111)
!15168 = !DILocation(line: 5410, column: 41, scope: !15169)
!15169 = !DILexicalBlockFile(scope: !15104, file: !1, discriminator: 2)
!15170 = !DILocation(line: 5410, column: 2, scope: !15169)
!15171 = !DILocation(line: 5434, column: 1, scope: !875)
!15172 = !DILocalVariable(name: "bp", arg: 1, scope: !880, file: !1, line: 2387, type: !544)
!15173 = !DILocation(line: 2387, column: 26, scope: !880)
!15174 = !DILocalVariable(name: "type", arg: 2, scope: !880, file: !1, line: 2387, type: !344)
!15175 = !DILocation(line: 2387, column: 43, scope: !880)
!15176 = !DILocalVariable(name: "ver", arg: 3, scope: !880, file: !1, line: 2387, type: !53)
!15177 = !DILocation(line: 2387, column: 63, scope: !880)
!15178 = !DILocation(line: 2391, column: 25, scope: !880)
!15179 = !DILocation(line: 2391, column: 10, scope: !880)
!15180 = !DILocation(line: 2391, column: 2, scope: !880)
!15181 = !DILocation(line: 2391, column: 8, scope: !880)
!15182 = !DILocation(line: 2393, column: 9, scope: !880)
!15183 = !DILocation(line: 2393, column: 12, scope: !880)
!15184 = !DILocation(line: 2393, column: 2, scope: !880)
!15185 = !DILocation(line: 2395, column: 10, scope: !880)
!15186 = !DILocation(line: 2395, column: 2, scope: !880)
!15187 = !DILocation(line: 2395, column: 8, scope: !880)
!15188 = !DILocation(line: 2396, column: 1, scope: !880)
!15189 = !DILocalVariable(name: "bp", arg: 1, scope: !883, file: !1, line: 2399, type: !544)
!15190 = !DILocation(line: 2399, column: 36, scope: !883)
!15191 = !DILocalVariable(name: "from", arg: 2, scope: !883, file: !1, line: 2399, type: !31)
!15192 = !DILocation(line: 2399, column: 44, scope: !883)
!15193 = !DILocalVariable(name: "to", arg: 3, scope: !883, file: !1, line: 2399, type: !31)
!15194 = !DILocation(line: 2399, column: 54, scope: !883)
!15195 = !DILocation(line: 2401, column: 9, scope: !883)
!15196 = !DILocation(line: 2401, column: 14, scope: !883)
!15197 = !DILocation(line: 2401, column: 12, scope: !883)
!15198 = !DILocation(line: 2401, column: 23, scope: !883)
!15199 = !DILocation(line: 2401, column: 28, scope: !883)
!15200 = !DILocation(line: 2401, column: 26, scope: !883)
!15201 = !DILocation(line: 2401, column: 33, scope: !883)
!15202 = !DILocation(line: 2401, column: 2, scope: !883)
!15203 = !DILocation(line: 2402, column: 1, scope: !883)
!15204 = !DILocalVariable(name: "system_id", arg: 1, scope: !886, file: !1, line: 2169, type: !20)
!15205 = !DILocation(line: 2169, column: 29, scope: !886)
!15206 = !DILocalVariable(name: "size", arg: 2, scope: !886, file: !1, line: 2169, type: !23)
!15207 = !DILocation(line: 2169, column: 47, scope: !886)
!15208 = !DILocalVariable(name: "u", scope: !886, file: !1, line: 2172, type: !15209)
!15209 = !DICompositeType(tag: DW_TAG_structure_type, name: "utsname", file: !15210, line: 48, size: 3120, align: 8, elements: !15211)
!15210 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/utsname.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!15211 = !{!15212, !15216, !15217, !15218, !15219, !15220}
!15212 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !15209, file: !15210, line: 51, baseType: !15213, size: 520, align: 8)
!15213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 520, align: 8, elements: !15214)
!15214 = !{!15215}
!15215 = !DISubrange(count: 65)
!15216 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !15209, file: !15210, line: 54, baseType: !15213, size: 520, align: 8, offset: 520)
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !15209, file: !15210, line: 57, baseType: !15213, size: 520, align: 8, offset: 1040)
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !15209, file: !15210, line: 59, baseType: !15213, size: 520, align: 8, offset: 1560)
!15219 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !15209, file: !15210, line: 62, baseType: !15213, size: 520, align: 8, offset: 2080)
!15220 = !DIDerivedType(tag: DW_TAG_member, name: "domainname", scope: !15209, file: !15210, line: 67, baseType: !15213, size: 520, align: 8, offset: 2600)
!15221 = !DILocation(line: 2172, column: 17, scope: !886)
!15222 = !DILocation(line: 2174, column: 2, scope: !886)
!15223 = !DILocation(line: 2175, column: 10, scope: !886)
!15224 = !DILocation(line: 2175, column: 23, scope: !886)
!15225 = !DILocation(line: 2175, column: 21, scope: !886)
!15226 = !DILocation(line: 2175, column: 32, scope: !886)
!15227 = !DILocation(line: 2175, column: 36, scope: !886)
!15228 = !DILocation(line: 2175, column: 2, scope: !886)
!15229 = !DILocation(line: 2176, column: 12, scope: !886)
!15230 = !DILocation(line: 2176, column: 16, scope: !886)
!15231 = !DILocation(line: 2176, column: 2, scope: !886)
!15232 = !DILocation(line: 2176, column: 20, scope: !886)
!15233 = !DILocation(line: 2183, column: 1, scope: !886)
!15234 = !DILocalVariable(name: "a", arg: 1, scope: !889, file: !1, line: 2331, type: !367)
!15235 = !DILocation(line: 2331, column: 47, scope: !889)
!15236 = !DILocalVariable(name: "bp", arg: 2, scope: !889, file: !1, line: 2331, type: !544)
!15237 = !DILocation(line: 2331, column: 65, scope: !889)
!15238 = !DILocalVariable(name: "from", arg: 3, scope: !889, file: !1, line: 2332, type: !31)
!15239 = !DILocation(line: 2332, column: 9, scope: !889)
!15240 = !DILocalVariable(name: "to", arg: 4, scope: !889, file: !1, line: 2332, type: !31)
!15241 = !DILocation(line: 2332, column: 19, scope: !889)
!15242 = !DILocalVariable(name: "s", arg: 5, scope: !889, file: !1, line: 2332, type: !429)
!15243 = !DILocation(line: 2332, column: 35, scope: !889)
!15244 = !DILocalVariable(name: "vdc", arg: 6, scope: !889, file: !1, line: 2332, type: !350)
!15245 = !DILocation(line: 2332, column: 47, scope: !889)
!15246 = !DILocalVariable(name: "r", scope: !889, file: !1, line: 2334, type: !31)
!15247 = !DILocation(line: 2334, column: 6, scope: !889)
!15248 = !DILocation(line: 2336, column: 10, scope: !889)
!15249 = !DILocation(line: 2336, column: 2, scope: !889)
!15250 = !DILocation(line: 2338, column: 11, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !889, file: !1, line: 2336, column: 15)
!15252 = !DILocation(line: 2338, column: 14, scope: !15251)
!15253 = !DILocation(line: 2338, column: 13, scope: !15251)
!15254 = !DILocation(line: 2338, column: 20, scope: !15251)
!15255 = !DILocation(line: 2338, column: 23, scope: !15251)
!15256 = !DILocation(line: 2338, column: 28, scope: !15251)
!15257 = !DILocation(line: 2338, column: 26, scope: !15251)
!15258 = !DILocation(line: 2338, column: 33, scope: !15251)
!15259 = !DILocation(line: 2338, column: 3, scope: !15251)
!15260 = !DILocation(line: 2340, column: 5, scope: !15251)
!15261 = !DILocation(line: 2341, column: 3, scope: !15251)
!15262 = !DILocation(line: 2343, column: 11, scope: !15251)
!15263 = !DILocation(line: 2343, column: 14, scope: !15251)
!15264 = !DILocation(line: 2343, column: 13, scope: !15251)
!15265 = !DILocation(line: 2343, column: 20, scope: !15251)
!15266 = !DILocation(line: 2343, column: 23, scope: !15251)
!15267 = !DILocation(line: 2343, column: 28, scope: !15251)
!15268 = !DILocation(line: 2343, column: 26, scope: !15251)
!15269 = !DILocation(line: 2343, column: 33, scope: !15251)
!15270 = !DILocation(line: 2343, column: 3, scope: !15251)
!15271 = !DILocation(line: 2345, column: 5, scope: !15251)
!15272 = !DILocation(line: 2346, column: 3, scope: !15251)
!15273 = !DILocation(line: 2349, column: 23, scope: !15251)
!15274 = !DILocation(line: 2349, column: 26, scope: !15251)
!15275 = !DILocation(line: 2349, column: 29, scope: !15251)
!15276 = !DILocation(line: 2349, column: 28, scope: !15251)
!15277 = !DILocation(line: 2349, column: 35, scope: !15251)
!15278 = !DILocation(line: 2349, column: 38, scope: !15251)
!15279 = !DILocation(line: 2349, column: 43, scope: !15251)
!15280 = !DILocation(line: 2349, column: 41, scope: !15251)
!15281 = !DILocation(line: 2349, column: 48, scope: !15251)
!15282 = !DILocation(line: 2350, column: 15, scope: !15251)
!15283 = !DILocation(line: 2349, column: 7, scope: !15251)
!15284 = !DILocation(line: 2349, column: 5, scope: !15251)
!15285 = !DILocation(line: 2351, column: 3, scope: !15251)
!15286 = !DILocation(line: 2353, column: 5, scope: !15251)
!15287 = !DILocation(line: 2354, column: 2, scope: !15251)
!15288 = !DILocation(line: 2355, column: 10, scope: !889)
!15289 = !DILocation(line: 2355, column: 2, scope: !889)
!15290 = !DILocalVariable(name: "a", arg: 1, scope: !898, file: !1, line: 2359, type: !367)
!15291 = !DILocation(line: 2359, column: 47, scope: !898)
!15292 = !DILocalVariable(name: "bp", arg: 2, scope: !898, file: !1, line: 2359, type: !544)
!15293 = !DILocation(line: 2359, column: 65, scope: !898)
!15294 = !DILocalVariable(name: "from", arg: 3, scope: !898, file: !1, line: 2360, type: !31)
!15295 = !DILocation(line: 2360, column: 9, scope: !898)
!15296 = !DILocalVariable(name: "to", arg: 4, scope: !898, file: !1, line: 2360, type: !31)
!15297 = !DILocation(line: 2360, column: 19, scope: !898)
!15298 = !DILocalVariable(name: "s", arg: 5, scope: !898, file: !1, line: 2360, type: !429)
!15299 = !DILocation(line: 2360, column: 35, scope: !898)
!15300 = !DILocalVariable(name: "vdc", arg: 6, scope: !898, file: !1, line: 2360, type: !350)
!15301 = !DILocation(line: 2360, column: 48, scope: !898)
!15302 = !DILocalVariable(name: "r", scope: !898, file: !1, line: 2362, type: !31)
!15303 = !DILocation(line: 2362, column: 6, scope: !898)
!15304 = !DILocation(line: 2364, column: 10, scope: !898)
!15305 = !DILocation(line: 2364, column: 2, scope: !898)
!15306 = !DILocation(line: 2366, column: 11, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !898, file: !1, line: 2364, column: 15)
!15308 = !DILocation(line: 2366, column: 14, scope: !15307)
!15309 = !DILocation(line: 2366, column: 13, scope: !15307)
!15310 = !DILocation(line: 2366, column: 20, scope: !15307)
!15311 = !DILocation(line: 2366, column: 23, scope: !15307)
!15312 = !DILocation(line: 2366, column: 28, scope: !15307)
!15313 = !DILocation(line: 2366, column: 26, scope: !15307)
!15314 = !DILocation(line: 2366, column: 33, scope: !15307)
!15315 = !DILocation(line: 2366, column: 3, scope: !15307)
!15316 = !DILocation(line: 2368, column: 5, scope: !15307)
!15317 = !DILocation(line: 2369, column: 3, scope: !15307)
!15318 = !DILocation(line: 2371, column: 11, scope: !15307)
!15319 = !DILocation(line: 2371, column: 14, scope: !15307)
!15320 = !DILocation(line: 2371, column: 13, scope: !15307)
!15321 = !DILocation(line: 2371, column: 20, scope: !15307)
!15322 = !DILocation(line: 2371, column: 23, scope: !15307)
!15323 = !DILocation(line: 2371, column: 28, scope: !15307)
!15324 = !DILocation(line: 2371, column: 26, scope: !15307)
!15325 = !DILocation(line: 2371, column: 33, scope: !15307)
!15326 = !DILocation(line: 2371, column: 3, scope: !15307)
!15327 = !DILocation(line: 2373, column: 5, scope: !15307)
!15328 = !DILocation(line: 2374, column: 3, scope: !15307)
!15329 = !DILocation(line: 2377, column: 23, scope: !15307)
!15330 = !DILocation(line: 2377, column: 26, scope: !15307)
!15331 = !DILocation(line: 2377, column: 29, scope: !15307)
!15332 = !DILocation(line: 2377, column: 28, scope: !15307)
!15333 = !DILocation(line: 2377, column: 35, scope: !15307)
!15334 = !DILocation(line: 2377, column: 38, scope: !15307)
!15335 = !DILocation(line: 2377, column: 43, scope: !15307)
!15336 = !DILocation(line: 2377, column: 41, scope: !15307)
!15337 = !DILocation(line: 2377, column: 48, scope: !15307)
!15338 = !DILocation(line: 2378, column: 15, scope: !15307)
!15339 = !DILocation(line: 2377, column: 7, scope: !15307)
!15340 = !DILocation(line: 2377, column: 5, scope: !15307)
!15341 = !DILocation(line: 2379, column: 3, scope: !15307)
!15342 = !DILocation(line: 2381, column: 5, scope: !15307)
!15343 = !DILocation(line: 2382, column: 2, scope: !15307)
!15344 = !DILocation(line: 2383, column: 10, scope: !898)
!15345 = !DILocation(line: 2383, column: 2, scope: !898)
!15346 = !DILocalVariable(name: "p", arg: 1, scope: !899, file: !1, line: 2470, type: !544)
!15347 = !DILocation(line: 2470, column: 28, scope: !899)
!15348 = !DILocalVariable(name: "value", arg: 2, scope: !899, file: !1, line: 2470, type: !42)
!15349 = !DILocation(line: 2470, column: 40, scope: !899)
!15350 = !DILocation(line: 2472, column: 18, scope: !899)
!15351 = !DILocation(line: 2472, column: 21, scope: !899)
!15352 = !DILocation(line: 2472, column: 2, scope: !899)
!15353 = !DILocation(line: 2473, column: 1, scope: !899)
!15354 = !DILocalVariable(name: "bp", arg: 1, scope: !900, file: !1, line: 3775, type: !544)
!15355 = !DILocation(line: 3775, column: 36, scope: !900)
!15356 = !DILocalVariable(name: "from", arg: 2, scope: !900, file: !1, line: 3775, type: !31)
!15357 = !DILocation(line: 3775, column: 44, scope: !900)
!15358 = !DILocalVariable(name: "to", arg: 3, scope: !900, file: !1, line: 3775, type: !31)
!15359 = !DILocation(line: 3775, column: 54, scope: !900)
!15360 = !DILocalVariable(name: "vdc", arg: 4, scope: !900, file: !1, line: 3775, type: !350)
!15361 = !DILocation(line: 3775, column: 67, scope: !900)
!15362 = !DILocalVariable(name: "a", arg: 5, scope: !900, file: !1, line: 3776, type: !367)
!15363 = !DILocation(line: 3776, column: 27, scope: !900)
!15364 = !DILocalVariable(name: "vdd", arg: 6, scope: !900, file: !1, line: 3776, type: !688)
!15365 = !DILocation(line: 3776, column: 42, scope: !900)
!15366 = !DILocalVariable(name: "id", arg: 7, scope: !900, file: !1, line: 3776, type: !575)
!15367 = !DILocation(line: 3776, column: 70, scope: !900)
!15368 = !DILocalVariable(name: "label", arg: 8, scope: !900, file: !1, line: 3777, type: !429)
!15369 = !DILocation(line: 3777, column: 17, scope: !900)
!15370 = !DILocalVariable(name: "leading_under", arg: 9, scope: !900, file: !1, line: 3777, type: !31)
!15371 = !DILocation(line: 3777, column: 28, scope: !900)
!15372 = !DILocalVariable(name: "char_type", arg: 10, scope: !900, file: !1, line: 3777, type: !356)
!15373 = !DILocation(line: 3777, column: 58, scope: !900)
!15374 = !DILocalVariable(name: "identifier", scope: !900, file: !1, line: 3779, type: !4056)
!15375 = !DILocation(line: 3779, column: 7, scope: !900)
!15376 = !DILocalVariable(name: "isoent", scope: !900, file: !1, line: 3780, type: !76)
!15377 = !DILocation(line: 3780, column: 17, scope: !900)
!15378 = !DILocalVariable(name: "ids", scope: !900, file: !1, line: 3781, type: !429)
!15379 = !DILocation(line: 3781, column: 14, scope: !900)
!15380 = !DILocalVariable(name: "len", scope: !900, file: !1, line: 3782, type: !23)
!15381 = !DILocation(line: 3782, column: 9, scope: !900)
!15382 = !DILocalVariable(name: "r", scope: !900, file: !1, line: 3783, type: !31)
!15383 = !DILocation(line: 3783, column: 6, scope: !900)
!15384 = !DILocation(line: 3785, column: 6, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !900, file: !1, line: 3785, column: 6)
!15386 = !DILocation(line: 3785, column: 10, scope: !15385)
!15387 = !DILocation(line: 3785, column: 17, scope: !15385)
!15388 = !DILocation(line: 3785, column: 21, scope: !15385)
!15389 = !DILocation(line: 3785, column: 24, scope: !15390)
!15390 = !DILexicalBlockFile(scope: !15385, file: !1, discriminator: 1)
!15391 = !DILocation(line: 3785, column: 38, scope: !15390)
!15392 = !DILocation(line: 3785, column: 41, scope: !15393)
!15393 = !DILexicalBlockFile(scope: !15385, file: !1, discriminator: 2)
!15394 = !DILocation(line: 3785, column: 45, scope: !15393)
!15395 = !DILocation(line: 3785, column: 50, scope: !15393)
!15396 = !DILocation(line: 3785, column: 6, scope: !15393)
!15397 = !DILocation(line: 3786, column: 7, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !1, line: 3786, column: 7)
!15399 = distinct !DILexicalBlock(scope: !15385, file: !1, line: 3785, column: 58)
!15400 = !DILocation(line: 3786, column: 17, scope: !15398)
!15401 = !DILocation(line: 3786, column: 7, scope: !15399)
!15402 = !DILocation(line: 3787, column: 32, scope: !15398)
!15403 = !DILocation(line: 3787, column: 35, scope: !15398)
!15404 = !DILocation(line: 3787, column: 39, scope: !15398)
!15405 = !DILocation(line: 3787, column: 45, scope: !15398)
!15406 = !DILocation(line: 3787, column: 49, scope: !15398)
!15407 = !DILocation(line: 3787, column: 53, scope: !15398)
!15408 = !DILocation(line: 3787, column: 56, scope: !15398)
!15409 = !DILocation(line: 3787, column: 8, scope: !15398)
!15410 = !DILocation(line: 3787, column: 6, scope: !15398)
!15411 = !DILocation(line: 3787, column: 4, scope: !15398)
!15412 = !DILocation(line: 3789, column: 32, scope: !15398)
!15413 = !DILocation(line: 3789, column: 35, scope: !15398)
!15414 = !DILocation(line: 3789, column: 39, scope: !15398)
!15415 = !DILocation(line: 3789, column: 45, scope: !15398)
!15416 = !DILocation(line: 3789, column: 49, scope: !15398)
!15417 = !DILocation(line: 3789, column: 53, scope: !15398)
!15418 = !DILocation(line: 3789, column: 56, scope: !15398)
!15419 = !DILocation(line: 3789, column: 8, scope: !15398)
!15420 = !DILocation(line: 3789, column: 6, scope: !15398)
!15421 = !DILocation(line: 3790, column: 2, scope: !15399)
!15422 = !DILocation(line: 3790, column: 13, scope: !15423)
!15423 = !DILexicalBlockFile(scope: !15424, file: !1, discriminator: 1)
!15424 = distinct !DILexicalBlock(scope: !15385, file: !1, line: 3790, column: 13)
!15425 = !DILocation(line: 3790, column: 17, scope: !15423)
!15426 = !DILocation(line: 3790, column: 24, scope: !15423)
!15427 = !DILocation(line: 3791, column: 9, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15424, file: !1, line: 3790, column: 29)
!15429 = !DILocation(line: 3791, column: 13, scope: !15428)
!15430 = !DILocation(line: 3791, column: 7, scope: !15428)
!15431 = !DILocation(line: 3792, column: 7, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15428, file: !1, line: 3792, column: 7)
!15433 = !DILocation(line: 3792, column: 7, scope: !15428)
!15434 = !DILocation(line: 3793, column: 7, scope: !15432)
!15435 = !DILocation(line: 3793, column: 4, scope: !15432)
!15436 = !DILocation(line: 3794, column: 30, scope: !15428)
!15437 = !DILocation(line: 3794, column: 35, scope: !15428)
!15438 = !DILocation(line: 3794, column: 44, scope: !15428)
!15439 = !DILocation(line: 3794, column: 12, scope: !15428)
!15440 = !DILocation(line: 3794, column: 10, scope: !15428)
!15441 = !DILocation(line: 3795, column: 7, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15428, file: !1, line: 3795, column: 7)
!15443 = !DILocation(line: 3795, column: 14, scope: !15442)
!15444 = !DILocation(line: 3795, column: 7, scope: !15428)
!15445 = !DILocation(line: 3796, column: 23, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15442, file: !1, line: 3795, column: 23)
!15447 = !DILocation(line: 3796, column: 26, scope: !15446)
!15448 = !DILocation(line: 3798, column: 8, scope: !15446)
!15449 = !DILocation(line: 3798, column: 15, scope: !15446)
!15450 = !DILocation(line: 3796, column: 4, scope: !15446)
!15451 = !DILocation(line: 3799, column: 4, scope: !15446)
!15452 = !DILocation(line: 3801, column: 9, scope: !15428)
!15453 = !DILocation(line: 3801, column: 17, scope: !15428)
!15454 = !DILocation(line: 3801, column: 27, scope: !15428)
!15455 = !DILocation(line: 3801, column: 35, scope: !15428)
!15456 = !DILocation(line: 3801, column: 25, scope: !15428)
!15457 = !DILocation(line: 3801, column: 7, scope: !15428)
!15458 = !DILocation(line: 3802, column: 7, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15428, file: !1, line: 3802, column: 7)
!15460 = !DILocation(line: 3802, column: 12, scope: !15459)
!15461 = !DILocation(line: 3802, column: 21, scope: !15459)
!15462 = !DILocation(line: 3802, column: 7, scope: !15428)
!15463 = !DILocation(line: 3803, column: 8, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !1, line: 3803, column: 8)
!15465 = distinct !DILexicalBlock(scope: !15459, file: !1, line: 3802, column: 36)
!15466 = !DILocation(line: 3803, column: 12, scope: !15464)
!15467 = !DILocation(line: 3803, column: 8, scope: !15465)
!15468 = !DILocation(line: 3804, column: 9, scope: !15464)
!15469 = !DILocation(line: 3804, column: 5, scope: !15464)
!15470 = !DILocation(line: 3805, column: 3, scope: !15465)
!15471 = !DILocation(line: 3806, column: 8, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !1, line: 3806, column: 8)
!15473 = distinct !DILexicalBlock(scope: !15459, file: !1, line: 3805, column: 10)
!15474 = !DILocation(line: 3806, column: 12, scope: !15472)
!15475 = !DILocation(line: 3806, column: 8, scope: !15473)
!15476 = !DILocation(line: 3807, column: 9, scope: !15472)
!15477 = !DILocation(line: 3807, column: 5, scope: !15472)
!15478 = !DILocation(line: 3809, column: 3, scope: !15428)
!15479 = !DILocation(line: 3809, column: 22, scope: !15428)
!15480 = !DILocation(line: 3809, column: 30, scope: !15428)
!15481 = !DILocation(line: 3809, column: 42, scope: !15428)
!15482 = !DILocation(line: 3810, column: 14, scope: !15428)
!15483 = !DILocation(line: 3810, column: 3, scope: !15428)
!15484 = !DILocation(line: 3810, column: 19, scope: !15428)
!15485 = !DILocation(line: 3811, column: 7, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15428, file: !1, line: 3811, column: 7)
!15487 = !DILocation(line: 3811, column: 12, scope: !15486)
!15488 = !DILocation(line: 3811, column: 21, scope: !15486)
!15489 = !DILocation(line: 3811, column: 7, scope: !15428)
!15490 = !DILocation(line: 3812, column: 15, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15486, file: !1, line: 3811, column: 36)
!15492 = !DILocation(line: 3812, column: 18, scope: !15491)
!15493 = !DILocation(line: 3812, column: 4, scope: !15491)
!15494 = !DILocation(line: 3812, column: 22, scope: !15491)
!15495 = !DILocation(line: 3813, column: 8, scope: !15491)
!15496 = !DILocation(line: 3814, column: 3, scope: !15491)
!15497 = !DILocation(line: 3815, column: 7, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15428, file: !1, line: 3815, column: 7)
!15499 = !DILocation(line: 3815, column: 17, scope: !15498)
!15500 = !DILocation(line: 3815, column: 7, scope: !15428)
!15501 = !DILocation(line: 3816, column: 32, scope: !15498)
!15502 = !DILocation(line: 3816, column: 35, scope: !15498)
!15503 = !DILocation(line: 3816, column: 39, scope: !15498)
!15504 = !DILocation(line: 3816, column: 45, scope: !15498)
!15505 = !DILocation(line: 3817, column: 8, scope: !15498)
!15506 = !DILocation(line: 3817, column: 20, scope: !15498)
!15507 = !DILocation(line: 3816, column: 8, scope: !15498)
!15508 = !DILocation(line: 3816, column: 6, scope: !15498)
!15509 = !DILocation(line: 3816, column: 4, scope: !15498)
!15510 = !DILocation(line: 3819, column: 32, scope: !15498)
!15511 = !DILocation(line: 3819, column: 35, scope: !15498)
!15512 = !DILocation(line: 3819, column: 39, scope: !15498)
!15513 = !DILocation(line: 3819, column: 45, scope: !15498)
!15514 = !DILocation(line: 3820, column: 8, scope: !15498)
!15515 = !DILocation(line: 3820, column: 20, scope: !15498)
!15516 = !DILocation(line: 3819, column: 8, scope: !15498)
!15517 = !DILocation(line: 3819, column: 6, scope: !15498)
!15518 = !DILocation(line: 3821, column: 2, scope: !15428)
!15519 = !DILocation(line: 3822, column: 7, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15521, file: !1, line: 3822, column: 7)
!15521 = distinct !DILexicalBlock(scope: !15424, file: !1, line: 3821, column: 9)
!15522 = !DILocation(line: 3822, column: 17, scope: !15520)
!15523 = !DILocation(line: 3822, column: 7, scope: !15521)
!15524 = !DILocation(line: 3823, column: 32, scope: !15520)
!15525 = !DILocation(line: 3823, column: 35, scope: !15520)
!15526 = !DILocation(line: 3823, column: 39, scope: !15520)
!15527 = !DILocation(line: 3823, column: 45, scope: !15520)
!15528 = !DILocation(line: 3823, column: 55, scope: !15520)
!15529 = !DILocation(line: 3823, column: 8, scope: !15520)
!15530 = !DILocation(line: 3823, column: 6, scope: !15520)
!15531 = !DILocation(line: 3823, column: 4, scope: !15520)
!15532 = !DILocation(line: 3825, column: 32, scope: !15520)
!15533 = !DILocation(line: 3825, column: 35, scope: !15520)
!15534 = !DILocation(line: 3825, column: 39, scope: !15520)
!15535 = !DILocation(line: 3825, column: 45, scope: !15520)
!15536 = !DILocation(line: 3825, column: 55, scope: !15520)
!15537 = !DILocation(line: 3825, column: 8, scope: !15520)
!15538 = !DILocation(line: 3825, column: 6, scope: !15520)
!15539 = !DILocation(line: 3827, column: 10, scope: !900)
!15540 = !DILocation(line: 3827, column: 2, scope: !900)
!15541 = !DILocation(line: 3828, column: 1, scope: !900)
!15542 = !DILocalVariable(name: "p", arg: 1, scope: !903, file: !1, line: 2539, type: !544)
!15543 = !DILocation(line: 2539, column: 30, scope: !903)
!15544 = !DILocalVariable(name: "t", arg: 2, scope: !903, file: !1, line: 2539, type: !69)
!15545 = !DILocation(line: 2539, column: 40, scope: !903)
!15546 = !DILocalVariable(name: "tm", scope: !903, file: !1, line: 2541, type: !811)
!15547 = !DILocation(line: 2541, column: 12, scope: !903)
!15548 = !DILocation(line: 2543, column: 2, scope: !903)
!15549 = !DILocation(line: 2544, column: 12, scope: !903)
!15550 = !DILocation(line: 2544, column: 21, scope: !903)
!15551 = !DILocation(line: 2544, column: 29, scope: !903)
!15552 = !DILocation(line: 2544, column: 2, scope: !903)
!15553 = !DILocation(line: 2545, column: 12, scope: !903)
!15554 = !DILocation(line: 2545, column: 13, scope: !903)
!15555 = !DILocation(line: 2545, column: 23, scope: !903)
!15556 = !DILocation(line: 2545, column: 30, scope: !903)
!15557 = !DILocation(line: 2545, column: 2, scope: !903)
!15558 = !DILocation(line: 2546, column: 12, scope: !903)
!15559 = !DILocation(line: 2546, column: 13, scope: !903)
!15560 = !DILocation(line: 2546, column: 23, scope: !903)
!15561 = !DILocation(line: 2546, column: 2, scope: !903)
!15562 = !DILocation(line: 2547, column: 12, scope: !903)
!15563 = !DILocation(line: 2547, column: 13, scope: !903)
!15564 = !DILocation(line: 2547, column: 23, scope: !903)
!15565 = !DILocation(line: 2547, column: 2, scope: !903)
!15566 = !DILocation(line: 2548, column: 12, scope: !903)
!15567 = !DILocation(line: 2548, column: 13, scope: !903)
!15568 = !DILocation(line: 2548, column: 24, scope: !903)
!15569 = !DILocation(line: 2548, column: 2, scope: !903)
!15570 = !DILocation(line: 2549, column: 12, scope: !903)
!15571 = !DILocation(line: 2549, column: 13, scope: !903)
!15572 = !DILocation(line: 2549, column: 24, scope: !903)
!15573 = !DILocation(line: 2549, column: 2, scope: !903)
!15574 = !DILocation(line: 2550, column: 12, scope: !903)
!15575 = !DILocation(line: 2550, column: 13, scope: !903)
!15576 = !DILocation(line: 2550, column: 2, scope: !903)
!15577 = !DILocation(line: 2551, column: 14, scope: !903)
!15578 = !DILocation(line: 2551, column: 15, scope: !903)
!15579 = !DILocation(line: 2551, column: 27, scope: !903)
!15580 = !DILocation(line: 2551, column: 44, scope: !903)
!15581 = !DILocation(line: 2551, column: 20, scope: !903)
!15582 = !DILocation(line: 2551, column: 2, scope: !903)
!15583 = !DILocation(line: 2552, column: 1, scope: !903)
!15584 = !DILocalVariable(name: "p", arg: 1, scope: !907, file: !1, line: 2555, type: !544)
!15585 = !DILocation(line: 2555, column: 35, scope: !907)
!15586 = !DILocation(line: 2557, column: 9, scope: !907)
!15587 = !DILocation(line: 2557, column: 2, scope: !907)
!15588 = !DILocation(line: 2558, column: 2, scope: !907)
!15589 = !DILocation(line: 2558, column: 8, scope: !907)
!15590 = !DILocation(line: 2559, column: 1, scope: !907)
!15591 = !DILocalVariable(name: "p", arg: 1, scope: !892, file: !1, line: 2186, type: !544)
!15592 = !DILocation(line: 2186, column: 24, scope: !892)
!15593 = !DILocalVariable(name: "s", arg: 2, scope: !892, file: !1, line: 2186, type: !429)
!15594 = !DILocation(line: 2186, column: 39, scope: !892)
!15595 = !DILocalVariable(name: "l", arg: 3, scope: !892, file: !1, line: 2186, type: !23)
!15596 = !DILocation(line: 2186, column: 49, scope: !892)
!15597 = !DILocalVariable(name: "f", arg: 4, scope: !892, file: !1, line: 2186, type: !21)
!15598 = !DILocation(line: 2186, column: 57, scope: !892)
!15599 = !DILocalVariable(name: "map", arg: 5, scope: !892, file: !1, line: 2186, type: !429)
!15600 = !DILocation(line: 2186, column: 72, scope: !892)
!15601 = !DILocalVariable(name: "c", scope: !892, file: !1, line: 2188, type: !53)
!15602 = !DILocation(line: 2188, column: 16, scope: !892)
!15603 = !DILocation(line: 2190, column: 6, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !892, file: !1, line: 2190, column: 6)
!15605 = !DILocation(line: 2190, column: 8, scope: !15604)
!15606 = !DILocation(line: 2190, column: 6, scope: !892)
!15607 = !DILocation(line: 2191, column: 5, scope: !15604)
!15608 = !DILocation(line: 2191, column: 3, scope: !15604)
!15609 = !DILocation(line: 2192, column: 2, scope: !892)
!15610 = !DILocation(line: 2192, column: 16, scope: !15611)
!15611 = !DILexicalBlockFile(scope: !892, file: !1, discriminator: 1)
!15612 = !DILocation(line: 2192, column: 14, scope: !15611)
!15613 = !DILocation(line: 2192, column: 12, scope: !15611)
!15614 = !DILocation(line: 2192, column: 9, scope: !15611)
!15615 = !DILocation(line: 2192, column: 20, scope: !15611)
!15616 = !DILocation(line: 2192, column: 25, scope: !15611)
!15617 = !DILocation(line: 2192, column: 28, scope: !15618)
!15618 = !DILexicalBlockFile(scope: !892, file: !1, discriminator: 2)
!15619 = !DILocation(line: 2192, column: 30, scope: !15618)
!15620 = !DILocation(line: 2192, column: 2, scope: !15621)
!15621 = !DILexicalBlockFile(scope: !892, file: !1, discriminator: 3)
!15622 = !DILocation(line: 2193, column: 7, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15624, file: !1, line: 2193, column: 7)
!15624 = distinct !DILexicalBlock(scope: !892, file: !1, line: 2192, column: 35)
!15625 = !DILocation(line: 2193, column: 9, scope: !15623)
!15626 = !DILocation(line: 2193, column: 17, scope: !15623)
!15627 = !DILocation(line: 2193, column: 24, scope: !15628)
!15628 = !DILexicalBlockFile(scope: !15623, file: !1, discriminator: 1)
!15629 = !DILocation(line: 2193, column: 20, scope: !15628)
!15630 = !DILocation(line: 2193, column: 27, scope: !15628)
!15631 = !DILocation(line: 2193, column: 7, scope: !15628)
!15632 = !DILocation(line: 2196, column: 8, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15634, file: !1, line: 2196, column: 8)
!15634 = distinct !DILexicalBlock(scope: !15623, file: !1, line: 2194, column: 4)
!15635 = !DILocation(line: 2196, column: 10, scope: !15633)
!15636 = !DILocation(line: 2196, column: 17, scope: !15633)
!15637 = !DILocation(line: 2196, column: 20, scope: !15638)
!15638 = !DILexicalBlockFile(scope: !15633, file: !1, discriminator: 1)
!15639 = !DILocation(line: 2196, column: 22, scope: !15638)
!15640 = !DILocation(line: 2196, column: 8, scope: !15638)
!15641 = !DILocation(line: 2198, column: 7, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15633, file: !1, line: 2196, column: 30)
!15643 = !DILocation(line: 2199, column: 4, scope: !15642)
!15644 = !DILocation(line: 2200, column: 7, scope: !15633)
!15645 = !DILocation(line: 2201, column: 3, scope: !15634)
!15646 = !DILocation(line: 2202, column: 10, scope: !15624)
!15647 = !DILocation(line: 2202, column: 5, scope: !15624)
!15648 = !DILocation(line: 2202, column: 8, scope: !15624)
!15649 = !DILocation(line: 2203, column: 4, scope: !15624)
!15650 = !DILocation(line: 2192, column: 2, scope: !15651)
!15651 = !DILexicalBlockFile(scope: !892, file: !1, discriminator: 4)
!15652 = !DILocation(line: 2207, column: 6, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !892, file: !1, line: 2207, column: 6)
!15654 = !DILocation(line: 2207, column: 8, scope: !15653)
!15655 = !DILocation(line: 2207, column: 6, scope: !892)
!15656 = !DILocation(line: 2208, column: 10, scope: !15653)
!15657 = !DILocation(line: 2208, column: 14, scope: !15653)
!15658 = !DILocation(line: 2208, column: 3, scope: !15653)
!15659 = !DILocation(line: 2208, column: 17, scope: !15653)
!15660 = !DILocation(line: 2209, column: 1, scope: !892)
!15661 = !DILocalVariable(name: "a", arg: 1, scope: !895, file: !1, line: 2232, type: !367)
!15662 = !DILocation(line: 2232, column: 39, scope: !895)
!15663 = !DILocalVariable(name: "p", arg: 2, scope: !895, file: !1, line: 2232, type: !544)
!15664 = !DILocation(line: 2232, column: 57, scope: !895)
!15665 = !DILocalVariable(name: "s", arg: 3, scope: !895, file: !1, line: 2232, type: !429)
!15666 = !DILocation(line: 2232, column: 72, scope: !895)
!15667 = !DILocalVariable(name: "l", arg: 4, scope: !895, file: !1, line: 2233, type: !23)
!15668 = !DILocation(line: 2233, column: 12, scope: !895)
!15669 = !DILocalVariable(name: "uf", arg: 5, scope: !895, file: !1, line: 2233, type: !307)
!15670 = !DILocation(line: 2233, column: 24, scope: !895)
!15671 = !DILocalVariable(name: "vdc", arg: 6, scope: !895, file: !1, line: 2233, type: !350)
!15672 = !DILocation(line: 2233, column: 37, scope: !895)
!15673 = !DILocalVariable(name: "size", scope: !895, file: !1, line: 2235, type: !23)
!15674 = !DILocation(line: 2235, column: 9, scope: !895)
!15675 = !DILocalVariable(name: "i", scope: !895, file: !1, line: 2235, type: !23)
!15676 = !DILocation(line: 2235, column: 15, scope: !895)
!15677 = !DILocalVariable(name: "onepad", scope: !895, file: !1, line: 2236, type: !31)
!15678 = !DILocation(line: 2236, column: 6, scope: !895)
!15679 = !DILocation(line: 2238, column: 6, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2238, column: 6)
!15681 = !DILocation(line: 2238, column: 8, scope: !15680)
!15682 = !DILocation(line: 2238, column: 6, scope: !895)
!15683 = !DILocation(line: 2239, column: 5, scope: !15680)
!15684 = !DILocation(line: 2239, column: 3, scope: !15680)
!15685 = !DILocation(line: 2240, column: 6, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2240, column: 6)
!15687 = !DILocation(line: 2240, column: 8, scope: !15686)
!15688 = !DILocation(line: 2240, column: 6, scope: !895)
!15689 = !DILocation(line: 2241, column: 10, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15686, file: !1, line: 2240, column: 16)
!15691 = !DILocation(line: 2242, column: 5, scope: !15690)
!15692 = !DILocation(line: 2243, column: 2, scope: !15690)
!15693 = !DILocation(line: 2244, column: 10, scope: !15686)
!15694 = !DILocation(line: 2245, column: 6, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2245, column: 6)
!15696 = !DILocation(line: 2245, column: 10, scope: !15695)
!15697 = !DILocation(line: 2245, column: 6, scope: !895)
!15698 = !DILocalVariable(name: "iso9660", scope: !15699, file: !1, line: 2246, type: !530)
!15699 = distinct !DILexicalBlock(scope: !15695, file: !1, line: 2245, column: 23)
!15700 = !DILocation(line: 2246, column: 19, scope: !15699)
!15701 = !DILocation(line: 2246, column: 29, scope: !15699)
!15702 = !DILocation(line: 2246, column: 32, scope: !15699)
!15703 = !DILocation(line: 2247, column: 26, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15699, file: !1, line: 2247, column: 7)
!15705 = !DILocation(line: 2247, column: 35, scope: !15704)
!15706 = !DILocation(line: 2247, column: 44, scope: !15704)
!15707 = !DILocation(line: 2247, column: 54, scope: !15704)
!15708 = !DILocation(line: 2247, column: 47, scope: !15704)
!15709 = !DILocation(line: 2248, column: 7, scope: !15704)
!15710 = !DILocation(line: 2248, column: 16, scope: !15704)
!15711 = !DILocation(line: 2247, column: 7, scope: !15712)
!15712 = !DILexicalBlockFile(scope: !15704, file: !1, discriminator: 2)
!15713 = !DILocation(line: 2248, column: 34, scope: !15704)
!15714 = !DILocation(line: 2248, column: 39, scope: !15704)
!15715 = !DILocation(line: 2248, column: 42, scope: !15716)
!15716 = !DILexicalBlockFile(scope: !15704, file: !1, discriminator: 1)
!15717 = !DILocation(line: 2248, column: 48, scope: !15716)
!15718 = !DILocation(line: 2247, column: 7, scope: !15719)
!15719 = !DILexicalBlockFile(scope: !15699, file: !1, discriminator: 1)
!15720 = !DILocation(line: 2249, column: 23, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15704, file: !1, line: 2248, column: 59)
!15722 = !DILocation(line: 2249, column: 26, scope: !15721)
!15723 = !DILocation(line: 2249, column: 4, scope: !15721)
!15724 = !DILocation(line: 2251, column: 4, scope: !15721)
!15725 = !DILocation(line: 2253, column: 10, scope: !15699)
!15726 = !DILocation(line: 2253, column: 19, scope: !15699)
!15727 = !DILocation(line: 2253, column: 27, scope: !15699)
!15728 = !DILocation(line: 2253, column: 8, scope: !15699)
!15729 = !DILocation(line: 2254, column: 7, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15699, file: !1, line: 2254, column: 7)
!15731 = !DILocation(line: 2254, column: 14, scope: !15730)
!15732 = !DILocation(line: 2254, column: 12, scope: !15730)
!15733 = !DILocation(line: 2254, column: 7, scope: !15699)
!15734 = !DILocation(line: 2255, column: 11, scope: !15730)
!15735 = !DILocation(line: 2255, column: 9, scope: !15730)
!15736 = !DILocation(line: 2255, column: 4, scope: !15730)
!15737 = !DILocation(line: 2256, column: 10, scope: !15699)
!15738 = !DILocation(line: 2256, column: 13, scope: !15699)
!15739 = !DILocation(line: 2256, column: 22, scope: !15699)
!15740 = !DILocation(line: 2256, column: 30, scope: !15699)
!15741 = !DILocation(line: 2256, column: 33, scope: !15699)
!15742 = !DILocation(line: 2256, column: 3, scope: !15699)
!15743 = !DILocation(line: 2257, column: 2, scope: !15699)
!15744 = !DILocalVariable(name: "u16", scope: !15745, file: !1, line: 2258, type: !563)
!15745 = distinct !DILexicalBlock(scope: !15695, file: !1, line: 2257, column: 9)
!15746 = !DILocation(line: 2258, column: 19, scope: !15745)
!15747 = !DILocation(line: 2258, column: 43, scope: !15745)
!15748 = !DILocation(line: 2258, column: 25, scope: !15745)
!15749 = !DILocation(line: 2260, column: 8, scope: !15745)
!15750 = !DILocation(line: 2261, column: 3, scope: !15745)
!15751 = !DILocation(line: 2261, column: 14, scope: !15752)
!15752 = !DILexicalBlockFile(scope: !15745, file: !1, discriminator: 1)
!15753 = !DILocation(line: 2261, column: 10, scope: !15752)
!15754 = !DILocation(line: 2261, column: 3, scope: !15752)
!15755 = !DILocation(line: 2262, column: 9, scope: !15745)
!15756 = !DILocation(line: 2261, column: 3, scope: !15757)
!15757 = !DILexicalBlockFile(scope: !15745, file: !1, discriminator: 2)
!15758 = !DILocation(line: 2263, column: 7, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15745, file: !1, line: 2263, column: 7)
!15760 = !DILocation(line: 2263, column: 14, scope: !15759)
!15761 = !DILocation(line: 2263, column: 12, scope: !15759)
!15762 = !DILocation(line: 2263, column: 7, scope: !15745)
!15763 = !DILocation(line: 2264, column: 11, scope: !15759)
!15764 = !DILocation(line: 2264, column: 9, scope: !15759)
!15765 = !DILocation(line: 2264, column: 4, scope: !15759)
!15766 = !DILocation(line: 2265, column: 10, scope: !15745)
!15767 = !DILocation(line: 2265, column: 13, scope: !15745)
!15768 = !DILocation(line: 2265, column: 16, scope: !15745)
!15769 = !DILocation(line: 2265, column: 3, scope: !15745)
!15770 = !DILocation(line: 2267, column: 9, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2267, column: 2)
!15772 = !DILocation(line: 2267, column: 7, scope: !15771)
!15773 = !DILocation(line: 2267, column: 14, scope: !15774)
!15774 = !DILexicalBlockFile(scope: !15775, file: !1, discriminator: 1)
!15775 = distinct !DILexicalBlock(scope: !15771, file: !1, line: 2267, column: 2)
!15776 = !DILocation(line: 2267, column: 18, scope: !15774)
!15777 = !DILocation(line: 2267, column: 16, scope: !15774)
!15778 = !DILocation(line: 2267, column: 2, scope: !15774)
!15779 = !DILocation(line: 2268, column: 28, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !1, line: 2268, column: 7)
!15781 = distinct !DILexicalBlock(scope: !15775, file: !1, line: 2267, column: 40)
!15782 = !DILocation(line: 2268, column: 34, scope: !15780)
!15783 = !DILocation(line: 2268, column: 8, scope: !15780)
!15784 = !DILocation(line: 2268, column: 7, scope: !15781)
!15785 = !DILocation(line: 2269, column: 20, scope: !15780)
!15786 = !DILocation(line: 2269, column: 4, scope: !15780)
!15787 = !DILocation(line: 2270, column: 2, scope: !15781)
!15788 = !DILocation(line: 2267, column: 26, scope: !15789)
!15789 = !DILexicalBlockFile(scope: !15775, file: !1, discriminator: 2)
!15790 = !DILocation(line: 2267, column: 34, scope: !15789)
!15791 = !DILocation(line: 2267, column: 2, scope: !15789)
!15792 = !DILocation(line: 2271, column: 7, scope: !895)
!15793 = !DILocation(line: 2271, column: 4, scope: !895)
!15794 = !DILocation(line: 2272, column: 2, scope: !895)
!15795 = !DILocation(line: 2272, column: 9, scope: !15796)
!15796 = !DILexicalBlockFile(scope: !895, file: !1, discriminator: 1)
!15797 = !DILocation(line: 2272, column: 11, scope: !15796)
!15798 = !DILocation(line: 2272, column: 2, scope: !15796)
!15799 = !DILocation(line: 2273, column: 19, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2272, column: 16)
!15801 = !DILocation(line: 2273, column: 22, scope: !15800)
!15802 = !DILocation(line: 2273, column: 3, scope: !15800)
!15803 = !DILocation(line: 2274, column: 5, scope: !15800)
!15804 = !DILocation(line: 2275, column: 5, scope: !15800)
!15805 = !DILocation(line: 2272, column: 2, scope: !15806)
!15806 = !DILexicalBlockFile(scope: !895, file: !1, discriminator: 2)
!15807 = !DILocation(line: 2277, column: 6, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !895, file: !1, line: 2277, column: 6)
!15809 = !DILocation(line: 2277, column: 6, scope: !895)
!15810 = !DILocation(line: 2278, column: 4, scope: !15808)
!15811 = !DILocation(line: 2278, column: 6, scope: !15808)
!15812 = !DILocation(line: 2278, column: 3, scope: !15808)
!15813 = !DILocation(line: 2279, column: 2, scope: !895)
!15814 = !DILocation(line: 2280, column: 1, scope: !895)
!15815 = !DILocalVariable(name: "p", arg: 1, scope: !904, file: !1, line: 2487, type: !544)
!15816 = !DILocation(line: 2487, column: 26, scope: !904)
!15817 = !DILocalVariable(name: "s", arg: 2, scope: !904, file: !1, line: 2487, type: !23)
!15818 = !DILocation(line: 2487, column: 36, scope: !904)
!15819 = !DILocalVariable(name: "value", arg: 3, scope: !904, file: !1, line: 2487, type: !31)
!15820 = !DILocation(line: 2487, column: 43, scope: !904)
!15821 = !DILocation(line: 2490, column: 2, scope: !904)
!15822 = !DILocation(line: 2490, column: 10, scope: !15823)
!15823 = !DILexicalBlockFile(scope: !904, file: !1, discriminator: 1)
!15824 = !DILocation(line: 2490, column: 2, scope: !15823)
!15825 = !DILocation(line: 2491, column: 17, scope: !15826)
!15826 = distinct !DILexicalBlock(scope: !904, file: !1, line: 2490, column: 14)
!15827 = !DILocation(line: 2491, column: 23, scope: !15826)
!15828 = !DILocation(line: 2491, column: 14, scope: !15826)
!15829 = !DILocation(line: 2491, column: 10, scope: !15826)
!15830 = !DILocation(line: 2491, column: 5, scope: !15826)
!15831 = !DILocation(line: 2491, column: 3, scope: !15826)
!15832 = !DILocation(line: 2491, column: 8, scope: !15826)
!15833 = !DILocation(line: 2492, column: 9, scope: !15826)
!15834 = !DILocation(line: 2490, column: 2, scope: !15835)
!15835 = !DILexicalBlockFile(scope: !904, file: !1, discriminator: 2)
!15836 = !DILocation(line: 2494, column: 1, scope: !904)
!15837 = !DILocalVariable(name: "info", arg: 1, scope: !913, file: !1, line: 4011, type: !575)
!15838 = !DILocation(line: 4011, column: 40, scope: !913)
!15839 = !DILocalVariable(name: "opt", arg: 2, scope: !913, file: !1, line: 4011, type: !579)
!15840 = !DILocation(line: 4011, column: 51, scope: !913)
!15841 = !DILocalVariable(name: "key", arg: 3, scope: !913, file: !1, line: 4011, type: !429)
!15842 = !DILocation(line: 4011, column: 68, scope: !913)
!15843 = !DILocalVariable(name: "type", arg: 4, scope: !913, file: !1, line: 4012, type: !360)
!15844 = !DILocation(line: 4012, column: 18, scope: !913)
!15845 = !DILocalVariable(name: "ap", scope: !913, file: !1, line: 4014, type: !15846)
!15846 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !15847, line: 79, baseType: !15848)
!15847 = !DIFile(filename: "/usr/include/stdio.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!15848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !15849, line: 50, baseType: !15850)
!15849 = !DIFile(filename: "/opt/llvm-build/bin/../lib/clang/3.8.0/include/stdarg.h", directory: "/data/download/cmake/cmake-master/Utilities/cmlibarchive/libarchive")
!15850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 4014, baseType: !15851)
!15851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15852, size: 192, align: 64, elements: !15858)
!15852 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 4014, size: 192, align: 64, elements: !15853)
!15853 = !{!15854, !15855, !15856, !15857}
!15854 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !15852, file: !1, line: 4014, baseType: !43, size: 32, align: 32)
!15855 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !15852, file: !1, line: 4014, baseType: !43, size: 32, align: 32, offset: 32)
!15856 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !15852, file: !1, line: 4014, baseType: !271, size: 64, align: 64, offset: 64)
!15857 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !15852, file: !1, line: 4014, baseType: !271, size: 64, align: 64, offset: 128)
!15858 = !{!15859}
!15859 = !DISubrange(count: 1)
!15860 = !DILocation(line: 4014, column: 10, scope: !913)
!15861 = !DILocalVariable(name: "prefix", scope: !913, file: !1, line: 4015, type: !21)
!15862 = !DILocation(line: 4015, column: 7, scope: !913)
!15863 = !DILocalVariable(name: "s", scope: !913, file: !1, line: 4016, type: !429)
!15864 = !DILocation(line: 4016, column: 14, scope: !913)
!15865 = !DILocalVariable(name: "d", scope: !913, file: !1, line: 4017, type: !31)
!15866 = !DILocation(line: 4017, column: 6, scope: !913)
!15867 = !DILocation(line: 4019, column: 13, scope: !913)
!15868 = !DILocation(line: 4019, column: 12, scope: !913)
!15869 = !DILocation(line: 4019, column: 16, scope: !913)
!15870 = !DILocation(line: 4019, column: 11, scope: !913)
!15871 = !DILocation(line: 4019, column: 9, scope: !913)
!15872 = !DILocation(line: 4020, column: 2, scope: !913)
!15873 = !DILocation(line: 4021, column: 10, scope: !913)
!15874 = !DILocation(line: 4021, column: 2, scope: !913)
!15875 = !DILocation(line: 4023, column: 7, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !913, file: !1, line: 4021, column: 16)
!15877 = !DILocation(line: 4023, column: 7, scope: !15878)
!15878 = !DILexicalBlockFile(scope: !15876, file: !1, discriminator: 1)
!15879 = !DILocation(line: 4023, column: 7, scope: !15880)
!15880 = !DILexicalBlockFile(scope: !15876, file: !1, discriminator: 2)
!15881 = !DILocation(line: 4023, column: 7, scope: !15882)
!15882 = !DILexicalBlockFile(scope: !15876, file: !1, discriminator: 3)
!15883 = !DILocation(line: 4023, column: 5, scope: !15882)
!15884 = !DILocation(line: 4024, column: 26, scope: !15876)
!15885 = !DILocation(line: 4025, column: 7, scope: !15876)
!15886 = !DILocation(line: 4025, column: 16, scope: !15876)
!15887 = !DILocation(line: 4025, column: 18, scope: !15876)
!15888 = !DILocation(line: 4025, column: 15, scope: !15876)
!15889 = !DILocation(line: 4025, column: 32, scope: !15876)
!15890 = !DILocation(line: 4024, column: 3, scope: !15876)
!15891 = !DILocation(line: 4026, column: 3, scope: !15876)
!15892 = !DILocation(line: 4028, column: 7, scope: !15876)
!15893 = !DILocation(line: 4028, column: 7, scope: !15878)
!15894 = !DILocation(line: 4028, column: 7, scope: !15880)
!15895 = !DILocation(line: 4028, column: 7, scope: !15882)
!15896 = !DILocation(line: 4028, column: 5, scope: !15882)
!15897 = !DILocation(line: 4029, column: 26, scope: !15876)
!15898 = !DILocation(line: 4030, column: 7, scope: !15876)
!15899 = !DILocation(line: 4030, column: 15, scope: !15876)
!15900 = !DILocation(line: 4030, column: 20, scope: !15876)
!15901 = !DILocation(line: 4029, column: 3, scope: !15876)
!15902 = !DILocation(line: 4031, column: 3, scope: !15876)
!15903 = !DILocation(line: 4033, column: 7, scope: !15876)
!15904 = !DILocation(line: 4033, column: 7, scope: !15878)
!15905 = !DILocation(line: 4033, column: 7, scope: !15880)
!15906 = !DILocation(line: 4033, column: 7, scope: !15882)
!15907 = !DILocation(line: 4033, column: 5, scope: !15882)
!15908 = !DILocation(line: 4034, column: 26, scope: !15876)
!15909 = !DILocation(line: 4035, column: 7, scope: !15876)
!15910 = !DILocation(line: 4035, column: 15, scope: !15876)
!15911 = !DILocation(line: 4035, column: 20, scope: !15876)
!15912 = !DILocation(line: 4034, column: 3, scope: !15876)
!15913 = !DILocation(line: 4036, column: 3, scope: !15876)
!15914 = !DILocation(line: 4038, column: 7, scope: !15876)
!15915 = !DILocation(line: 4038, column: 7, scope: !15878)
!15916 = !DILocation(line: 4038, column: 7, scope: !15880)
!15917 = !DILocation(line: 4038, column: 7, scope: !15882)
!15918 = !DILocation(line: 4038, column: 5, scope: !15882)
!15919 = !DILocation(line: 4039, column: 26, scope: !15876)
!15920 = !DILocation(line: 4040, column: 7, scope: !15876)
!15921 = !DILocation(line: 4040, column: 15, scope: !15876)
!15922 = !DILocation(line: 4040, column: 20, scope: !15876)
!15923 = !DILocation(line: 4039, column: 3, scope: !15876)
!15924 = !DILocation(line: 4041, column: 3, scope: !15876)
!15925 = !DILocation(line: 4043, column: 2, scope: !913)
!15926 = !DILocation(line: 4045, column: 3, scope: !913)
!15927 = !DILocation(line: 4045, column: 7, scope: !913)
!15928 = !DILocation(line: 4046, column: 1, scope: !913)
!15929 = !DILocalVariable(name: "a", arg: 1, scope: !919, file: !1, line: 4238, type: !367)
!15930 = !DILocation(line: 4238, column: 41, scope: !919)
!15931 = !DILocalVariable(name: "type_m", arg: 2, scope: !919, file: !1, line: 4238, type: !31)
!15932 = !DILocation(line: 4238, column: 48, scope: !919)
!15933 = !DILocalVariable(name: "depth", arg: 3, scope: !919, file: !1, line: 4238, type: !31)
!15934 = !DILocation(line: 4238, column: 60, scope: !919)
!15935 = !DILocalVariable(name: "vdd", arg: 4, scope: !919, file: !1, line: 4239, type: !688)
!15936 = !DILocation(line: 4239, column: 17, scope: !919)
!15937 = !DILocalVariable(name: "bp", scope: !919, file: !1, line: 4241, type: !544)
!15938 = !DILocation(line: 4241, column: 17, scope: !919)
!15939 = !DILocalVariable(name: "wb", scope: !919, file: !1, line: 4241, type: !544)
!15940 = !DILocation(line: 4241, column: 22, scope: !919)
!15941 = !DILocalVariable(name: "ptbl", scope: !919, file: !1, line: 4242, type: !97)
!15942 = !DILocation(line: 4242, column: 18, scope: !919)
!15943 = !DILocalVariable(name: "wbremaining", scope: !919, file: !1, line: 4243, type: !23)
!15944 = !DILocation(line: 4243, column: 9, scope: !919)
!15945 = !DILocalVariable(name: "i", scope: !919, file: !1, line: 4244, type: !31)
!15946 = !DILocation(line: 4244, column: 6, scope: !919)
!15947 = !DILocalVariable(name: "r", scope: !919, file: !1, line: 4244, type: !31)
!15948 = !DILocation(line: 4244, column: 9, scope: !919)
!15949 = !DILocalVariable(name: "wsize", scope: !919, file: !1, line: 4244, type: !31)
!15950 = !DILocation(line: 4244, column: 12, scope: !919)
!15951 = !DILocation(line: 4246, column: 19, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !919, file: !1, line: 4246, column: 6)
!15953 = !DILocation(line: 4246, column: 6, scope: !15952)
!15954 = !DILocation(line: 4246, column: 11, scope: !15952)
!15955 = !DILocation(line: 4246, column: 26, scope: !15952)
!15956 = !DILocation(line: 4246, column: 30, scope: !15952)
!15957 = !DILocation(line: 4246, column: 6, scope: !919)
!15958 = !DILocation(line: 4247, column: 3, scope: !15952)
!15959 = !DILocation(line: 4249, column: 8, scope: !919)
!15960 = !DILocation(line: 4250, column: 18, scope: !919)
!15961 = !DILocation(line: 4250, column: 7, scope: !919)
!15962 = !DILocation(line: 4250, column: 5, scope: !919)
!15963 = !DILocation(line: 4251, column: 16, scope: !919)
!15964 = !DILocation(line: 4251, column: 14, scope: !919)
!15965 = !DILocation(line: 4252, column: 7, scope: !919)
!15966 = !DILocation(line: 4252, column: 10, scope: !919)
!15967 = !DILocation(line: 4252, column: 5, scope: !919)
!15968 = !DILocation(line: 4253, column: 22, scope: !919)
!15969 = !DILocation(line: 4253, column: 9, scope: !919)
!15970 = !DILocation(line: 4253, column: 14, scope: !919)
!15971 = !DILocation(line: 4253, column: 29, scope: !919)
!15972 = !DILocation(line: 4253, column: 7, scope: !919)
!15973 = !DILocation(line: 4254, column: 9, scope: !15974)
!15974 = distinct !DILexicalBlock(scope: !919, file: !1, line: 4254, column: 2)
!15975 = !DILocation(line: 4254, column: 7, scope: !15974)
!15976 = !DILocation(line: 4254, column: 14, scope: !15977)
!15977 = !DILexicalBlockFile(scope: !15978, file: !1, discriminator: 1)
!15978 = distinct !DILexicalBlock(scope: !15974, file: !1, line: 4254, column: 2)
!15979 = !DILocation(line: 4254, column: 31, scope: !15977)
!15980 = !DILocation(line: 4254, column: 18, scope: !15977)
!15981 = !DILocation(line: 4254, column: 23, scope: !15977)
!15982 = !DILocation(line: 4254, column: 38, scope: !15977)
!15983 = !DILocation(line: 4254, column: 16, scope: !15977)
!15984 = !DILocation(line: 4254, column: 2, scope: !15977)
!15985 = !DILocalVariable(name: "np", scope: !15986, file: !1, line: 4255, type: !76)
!15986 = distinct !DILexicalBlock(scope: !15978, file: !1, line: 4254, column: 48)
!15987 = !DILocation(line: 4255, column: 18, scope: !15986)
!15988 = !DILocalVariable(name: "len", scope: !15986, file: !1, line: 4256, type: !23)
!15989 = !DILocation(line: 4256, column: 10, scope: !15986)
!15990 = !DILocation(line: 4258, column: 13, scope: !15986)
!15991 = !DILocation(line: 4258, column: 8, scope: !15986)
!15992 = !DILocation(line: 4258, column: 6, scope: !15986)
!15993 = !DILocation(line: 4259, column: 7, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4259, column: 7)
!15995 = !DILocation(line: 4259, column: 11, scope: !15994)
!15996 = !DILocation(line: 4259, column: 22, scope: !15994)
!15997 = !DILocation(line: 4259, column: 7, scope: !15986)
!15998 = !DILocation(line: 4260, column: 8, scope: !15994)
!15999 = !DILocation(line: 4260, column: 4, scope: !15994)
!16000 = !DILocation(line: 4262, column: 10, scope: !15994)
!16001 = !DILocation(line: 4262, column: 14, scope: !15994)
!16002 = !DILocation(line: 4262, column: 8, scope: !15994)
!16003 = !DILocation(line: 4263, column: 7, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4263, column: 7)
!16005 = !DILocation(line: 4263, column: 23, scope: !16004)
!16006 = !DILocation(line: 4263, column: 25, scope: !16004)
!16007 = !DILocation(line: 4263, column: 31, scope: !16004)
!16008 = !DILocation(line: 4263, column: 29, scope: !16004)
!16009 = !DILocation(line: 4263, column: 19, scope: !16004)
!16010 = !DILocation(line: 4263, column: 38, scope: !16004)
!16011 = !DILocation(line: 4263, column: 42, scope: !16004)
!16012 = !DILocation(line: 4263, column: 46, scope: !16004)
!16013 = !DILocation(line: 4263, column: 35, scope: !16004)
!16014 = !DILocation(line: 4263, column: 7, scope: !15986)
!16015 = !DILocation(line: 4264, column: 19, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16004, file: !1, line: 4263, column: 52)
!16017 = !DILocation(line: 4264, column: 23, scope: !16016)
!16018 = !DILocation(line: 4264, column: 25, scope: !16016)
!16019 = !DILocation(line: 4264, column: 31, scope: !16016)
!16020 = !DILocation(line: 4264, column: 29, scope: !16016)
!16021 = !DILocation(line: 4264, column: 8, scope: !16016)
!16022 = !DILocation(line: 4264, column: 6, scope: !16016)
!16023 = !DILocation(line: 4265, column: 8, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16016, file: !1, line: 4265, column: 8)
!16025 = !DILocation(line: 4265, column: 10, scope: !16024)
!16026 = !DILocation(line: 4265, column: 8, scope: !16016)
!16027 = !DILocation(line: 4266, column: 13, scope: !16024)
!16028 = !DILocation(line: 4266, column: 5, scope: !16024)
!16029 = !DILocation(line: 4267, column: 20, scope: !16016)
!16030 = !DILocation(line: 4267, column: 9, scope: !16016)
!16031 = !DILocation(line: 4267, column: 7, scope: !16016)
!16032 = !DILocation(line: 4268, column: 18, scope: !16016)
!16033 = !DILocation(line: 4268, column: 16, scope: !16016)
!16034 = !DILocation(line: 4269, column: 9, scope: !16016)
!16035 = !DILocation(line: 4269, column: 12, scope: !16016)
!16036 = !DILocation(line: 4269, column: 7, scope: !16016)
!16037 = !DILocation(line: 4270, column: 3, scope: !16016)
!16038 = !DILocation(line: 4272, column: 15, scope: !15986)
!16039 = !DILocation(line: 4272, column: 17, scope: !15986)
!16040 = !DILocation(line: 4272, column: 36, scope: !15986)
!16041 = !DILocation(line: 4272, column: 21, scope: !15986)
!16042 = !DILocation(line: 4272, column: 3, scope: !15986)
!16043 = !DILocation(line: 4274, column: 15, scope: !15986)
!16044 = !DILocation(line: 4274, column: 17, scope: !15986)
!16045 = !DILocation(line: 4274, column: 3, scope: !15986)
!16046 = !DILocation(line: 4276, column: 7, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4276, column: 7)
!16048 = !DILocation(line: 4276, column: 7, scope: !15986)
!16049 = !DILocation(line: 4277, column: 16, scope: !16047)
!16050 = !DILocation(line: 4277, column: 18, scope: !16047)
!16051 = !DILocation(line: 4277, column: 22, scope: !16047)
!16052 = !DILocation(line: 4277, column: 26, scope: !16047)
!16053 = !DILocation(line: 4277, column: 4, scope: !16047)
!16054 = !DILocation(line: 4279, column: 16, scope: !16047)
!16055 = !DILocation(line: 4279, column: 18, scope: !16047)
!16056 = !DILocation(line: 4279, column: 22, scope: !16047)
!16057 = !DILocation(line: 4279, column: 26, scope: !16047)
!16058 = !DILocation(line: 4279, column: 4, scope: !16047)
!16059 = !DILocation(line: 4281, column: 7, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4281, column: 7)
!16061 = !DILocation(line: 4281, column: 7, scope: !15986)
!16062 = !DILocation(line: 4282, column: 16, scope: !16060)
!16063 = !DILocation(line: 4282, column: 18, scope: !16060)
!16064 = !DILocation(line: 4282, column: 22, scope: !16060)
!16065 = !DILocation(line: 4282, column: 26, scope: !16060)
!16066 = !DILocation(line: 4282, column: 34, scope: !16060)
!16067 = !DILocation(line: 4282, column: 4, scope: !16060)
!16068 = !DILocation(line: 4284, column: 16, scope: !16060)
!16069 = !DILocation(line: 4284, column: 18, scope: !16060)
!16070 = !DILocation(line: 4284, column: 22, scope: !16060)
!16071 = !DILocation(line: 4284, column: 26, scope: !16060)
!16072 = !DILocation(line: 4284, column: 34, scope: !16060)
!16073 = !DILocation(line: 4284, column: 4, scope: !16060)
!16074 = !DILocation(line: 4286, column: 7, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4286, column: 7)
!16076 = !DILocation(line: 4286, column: 11, scope: !16075)
!16077 = !DILocation(line: 4286, column: 22, scope: !16075)
!16078 = !DILocation(line: 4286, column: 7, scope: !15986)
!16079 = !DILocation(line: 4287, column: 4, scope: !16075)
!16080 = !DILocation(line: 4287, column: 10, scope: !16075)
!16081 = !DILocation(line: 4289, column: 12, scope: !16075)
!16082 = !DILocation(line: 4289, column: 19, scope: !16075)
!16083 = !DILocation(line: 4289, column: 23, scope: !16075)
!16084 = !DILocation(line: 4289, column: 35, scope: !16075)
!16085 = !DILocation(line: 4289, column: 4, scope: !16075)
!16086 = !DILocation(line: 4290, column: 7, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !15986, file: !1, line: 4290, column: 7)
!16088 = !DILocation(line: 4290, column: 11, scope: !16087)
!16089 = !DILocation(line: 4290, column: 7, scope: !15986)
!16090 = !DILocation(line: 4292, column: 9, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16087, file: !1, line: 4290, column: 19)
!16092 = !DILocation(line: 4292, column: 8, scope: !16091)
!16093 = !DILocation(line: 4292, column: 4, scope: !16091)
!16094 = !DILocation(line: 4292, column: 14, scope: !16091)
!16095 = !DILocation(line: 4293, column: 7, scope: !16091)
!16096 = !DILocation(line: 4294, column: 3, scope: !16091)
!16097 = !DILocation(line: 4295, column: 21, scope: !15986)
!16098 = !DILocation(line: 4295, column: 16, scope: !15986)
!16099 = !DILocation(line: 4295, column: 14, scope: !15986)
!16100 = !DILocation(line: 4295, column: 9, scope: !15986)
!16101 = !DILocation(line: 4296, column: 13, scope: !15986)
!16102 = !DILocation(line: 4296, column: 11, scope: !15986)
!16103 = !DILocation(line: 4296, column: 6, scope: !15986)
!16104 = !DILocation(line: 4297, column: 2, scope: !15986)
!16105 = !DILocation(line: 4254, column: 44, scope: !16106)
!16106 = !DILexicalBlockFile(scope: !15978, file: !1, discriminator: 2)
!16107 = !DILocation(line: 4254, column: 2, scope: !16106)
!16108 = !DILocation(line: 4298, column: 7, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !919, file: !1, line: 4298, column: 6)
!16110 = !DILocation(line: 4298, column: 10, scope: !16109)
!16111 = !DILocation(line: 4298, column: 17, scope: !16109)
!16112 = !DILocation(line: 4298, column: 15, scope: !16109)
!16113 = !DILocation(line: 4298, column: 6, scope: !919)
!16114 = !DILocation(line: 4299, column: 18, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16109, file: !1, line: 4298, column: 21)
!16116 = !DILocation(line: 4299, column: 22, scope: !16115)
!16117 = !DILocation(line: 4299, column: 24, scope: !16115)
!16118 = !DILocation(line: 4299, column: 28, scope: !16115)
!16119 = !DILocation(line: 4299, column: 27, scope: !16115)
!16120 = !DILocation(line: 4299, column: 7, scope: !16115)
!16121 = !DILocation(line: 4299, column: 5, scope: !16115)
!16122 = !DILocation(line: 4300, column: 7, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16115, file: !1, line: 4300, column: 7)
!16124 = !DILocation(line: 4300, column: 9, scope: !16123)
!16125 = !DILocation(line: 4300, column: 7, scope: !16115)
!16126 = !DILocation(line: 4301, column: 12, scope: !16123)
!16127 = !DILocation(line: 4301, column: 4, scope: !16123)
!16128 = !DILocation(line: 4302, column: 2, scope: !16115)
!16129 = !DILocation(line: 4303, column: 10, scope: !919)
!16130 = !DILocation(line: 4303, column: 2, scope: !919)
!16131 = !DILocation(line: 4304, column: 1, scope: !919)
!16132 = !DILocalVariable(name: "p", arg: 1, scope: !922, file: !1, line: 2439, type: !544)
!16133 = !DILocation(line: 2439, column: 28, scope: !922)
!16134 = !DILocalVariable(name: "value", arg: 2, scope: !922, file: !1, line: 2439, type: !307)
!16135 = !DILocation(line: 2439, column: 40, scope: !922)
!16136 = !DILocation(line: 2441, column: 18, scope: !922)
!16137 = !DILocation(line: 2441, column: 21, scope: !922)
!16138 = !DILocation(line: 2441, column: 2, scope: !922)
!16139 = !DILocation(line: 2442, column: 1, scope: !922)
!16140 = !DILocalVariable(name: "p", arg: 1, scope: !923, file: !1, line: 2429, type: !544)
!16141 = !DILocation(line: 2429, column: 28, scope: !923)
!16142 = !DILocalVariable(name: "value", arg: 2, scope: !923, file: !1, line: 2429, type: !307)
!16143 = !DILocation(line: 2429, column: 40, scope: !923)
!16144 = !DILocation(line: 2431, column: 18, scope: !923)
!16145 = !DILocation(line: 2431, column: 21, scope: !923)
!16146 = !DILocation(line: 2431, column: 2, scope: !923)
!16147 = !DILocation(line: 2432, column: 1, scope: !923)
!16148 = !DILocalVariable(name: "a", arg: 1, scope: !925, file: !1, line: 4369, type: !367)
!16149 = !DILocation(line: 4369, column: 52, scope: !925)
!16150 = !DILocalVariable(name: "vdd", arg: 2, scope: !925, file: !1, line: 4369, type: !688)
!16151 = !DILocation(line: 4369, column: 67, scope: !925)
!16152 = !DILocalVariable(name: "isoent", arg: 3, scope: !925, file: !1, line: 4370, type: !76)
!16153 = !DILocation(line: 4370, column: 20, scope: !925)
!16154 = !DILocalVariable(name: "depth", arg: 4, scope: !925, file: !1, line: 4370, type: !31)
!16155 = !DILocation(line: 4370, column: 32, scope: !925)
!16156 = !DILocalVariable(name: "iso9660", scope: !925, file: !1, line: 4372, type: !530)
!16157 = !DILocation(line: 4372, column: 18, scope: !925)
!16158 = !DILocation(line: 4372, column: 28, scope: !925)
!16159 = !DILocation(line: 4372, column: 31, scope: !925)
!16160 = !DILocalVariable(name: "enttbl", scope: !925, file: !1, line: 4373, type: !97)
!16161 = !DILocation(line: 4373, column: 18, scope: !925)
!16162 = !DILocalVariable(name: "p", scope: !925, file: !1, line: 4374, type: !544)
!16163 = !DILocation(line: 4374, column: 17, scope: !925)
!16164 = !DILocalVariable(name: "wb", scope: !925, file: !1, line: 4374, type: !544)
!16165 = !DILocation(line: 4374, column: 21, scope: !925)
!16166 = !DILocalVariable(name: "i", scope: !925, file: !1, line: 4375, type: !31)
!16167 = !DILocation(line: 4375, column: 6, scope: !925)
!16168 = !DILocalVariable(name: "r", scope: !925, file: !1, line: 4375, type: !31)
!16169 = !DILocation(line: 4375, column: 9, scope: !925)
!16170 = !DILocalVariable(name: "dr_l", scope: !925, file: !1, line: 4376, type: !31)
!16171 = !DILocation(line: 4376, column: 6, scope: !925)
!16172 = !DILocation(line: 4378, column: 22, scope: !925)
!16173 = !DILocation(line: 4378, column: 11, scope: !925)
!16174 = !DILocation(line: 4378, column: 9, scope: !925)
!16175 = !DILocation(line: 4378, column: 4, scope: !925)
!16176 = !DILocation(line: 4380, column: 28, scope: !925)
!16177 = !DILocation(line: 4380, column: 31, scope: !925)
!16178 = !DILocation(line: 4380, column: 45, scope: !925)
!16179 = !DILocation(line: 4381, column: 6, scope: !925)
!16180 = !DILocation(line: 4381, column: 29, scope: !925)
!16181 = !DILocation(line: 4381, column: 34, scope: !925)
!16182 = !DILocation(line: 4380, column: 7, scope: !925)
!16183 = !DILocation(line: 4380, column: 4, scope: !925)
!16184 = !DILocation(line: 4382, column: 28, scope: !925)
!16185 = !DILocation(line: 4382, column: 31, scope: !925)
!16186 = !DILocation(line: 4382, column: 45, scope: !925)
!16187 = !DILocation(line: 4383, column: 6, scope: !925)
!16188 = !DILocation(line: 4383, column: 31, scope: !925)
!16189 = !DILocation(line: 4383, column: 36, scope: !925)
!16190 = !DILocation(line: 4382, column: 7, scope: !925)
!16191 = !DILocation(line: 4382, column: 4, scope: !925)
!16192 = !DILocation(line: 4385, column: 6, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !925, file: !1, line: 4385, column: 6)
!16194 = !DILocation(line: 4385, column: 14, scope: !16193)
!16195 = !DILocation(line: 4385, column: 23, scope: !16193)
!16196 = !DILocation(line: 4385, column: 27, scope: !16193)
!16197 = !DILocation(line: 4385, column: 32, scope: !16193)
!16198 = !DILocation(line: 4385, column: 36, scope: !16199)
!16199 = !DILexicalBlockFile(scope: !16193, file: !1, discriminator: 1)
!16200 = !DILocation(line: 4385, column: 41, scope: !16199)
!16201 = !DILocation(line: 4385, column: 50, scope: !16199)
!16202 = !DILocation(line: 4385, column: 64, scope: !16199)
!16203 = !DILocation(line: 4386, column: 7, scope: !16193)
!16204 = !DILocation(line: 4386, column: 16, scope: !16193)
!16205 = !DILocation(line: 4386, column: 20, scope: !16193)
!16206 = !DILocation(line: 4386, column: 23, scope: !16193)
!16207 = !DILocation(line: 4386, column: 26, scope: !16199)
!16208 = !DILocation(line: 4386, column: 32, scope: !16199)
!16209 = !DILocation(line: 4386, column: 39, scope: !16199)
!16210 = !DILocation(line: 4386, column: 44, scope: !16199)
!16211 = !DILocation(line: 4386, column: 36, scope: !16199)
!16212 = !DILocation(line: 4385, column: 6, scope: !16213)
!16213 = !DILexicalBlockFile(scope: !925, file: !1, discriminator: 2)
!16214 = !DILocation(line: 4387, column: 10, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16193, file: !1, line: 4386, column: 56)
!16216 = !DILocation(line: 4387, column: 16, scope: !16215)
!16217 = !DILocation(line: 4387, column: 3, scope: !16215)
!16218 = !DILocation(line: 4388, column: 22, scope: !16215)
!16219 = !DILocation(line: 4388, column: 11, scope: !16215)
!16220 = !DILocation(line: 4388, column: 3, scope: !16215)
!16221 = !DILocation(line: 4391, column: 11, scope: !925)
!16222 = !DILocation(line: 4391, column: 19, scope: !925)
!16223 = !DILocation(line: 4391, column: 9, scope: !925)
!16224 = !DILocation(line: 4392, column: 9, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !925, file: !1, line: 4392, column: 2)
!16226 = !DILocation(line: 4392, column: 7, scope: !16225)
!16227 = !DILocation(line: 4392, column: 14, scope: !16228)
!16228 = !DILexicalBlockFile(scope: !16229, file: !1, discriminator: 1)
!16229 = distinct !DILexicalBlock(scope: !16225, file: !1, line: 4392, column: 2)
!16230 = !DILocation(line: 4392, column: 18, scope: !16228)
!16231 = !DILocation(line: 4392, column: 26, scope: !16228)
!16232 = !DILocation(line: 4392, column: 35, scope: !16228)
!16233 = !DILocation(line: 4392, column: 16, scope: !16228)
!16234 = !DILocation(line: 4392, column: 2, scope: !16228)
!16235 = !DILocalVariable(name: "np", scope: !16236, file: !1, line: 4393, type: !76)
!16236 = distinct !DILexicalBlock(scope: !16229, file: !1, line: 4392, column: 45)
!16237 = !DILocation(line: 4393, column: 18, scope: !16236)
!16238 = !DILocation(line: 4393, column: 30, scope: !16236)
!16239 = !DILocation(line: 4393, column: 23, scope: !16236)
!16240 = !DILocalVariable(name: "file", scope: !16236, file: !1, line: 4394, type: !7)
!16241 = !DILocation(line: 4394, column: 19, scope: !16236)
!16242 = !DILocation(line: 4394, column: 26, scope: !16236)
!16243 = !DILocation(line: 4394, column: 30, scope: !16236)
!16244 = !DILocation(line: 4396, column: 7, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16236, file: !1, line: 4396, column: 7)
!16246 = !DILocation(line: 4396, column: 13, scope: !16245)
!16247 = !DILocation(line: 4396, column: 29, scope: !16245)
!16248 = !DILocation(line: 4396, column: 7, scope: !16236)
!16249 = !DILocation(line: 4397, column: 11, scope: !16245)
!16250 = !DILocation(line: 4397, column: 17, scope: !16245)
!16251 = !DILocation(line: 4397, column: 9, scope: !16245)
!16252 = !DILocation(line: 4397, column: 4, scope: !16245)
!16253 = !DILocation(line: 4398, column: 25, scope: !16236)
!16254 = !DILocation(line: 4398, column: 31, scope: !16236)
!16255 = !DILocation(line: 4398, column: 3, scope: !16236)
!16256 = !DILocation(line: 4398, column: 9, scope: !16236)
!16257 = !DILocation(line: 4398, column: 21, scope: !16236)
!16258 = !DILocation(line: 4399, column: 3, scope: !16236)
!16259 = !DILocation(line: 4400, column: 32, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16236, file: !1, line: 4399, column: 6)
!16261 = !DILocation(line: 4400, column: 35, scope: !16260)
!16262 = !DILocation(line: 4401, column: 8, scope: !16260)
!16263 = !DILocation(line: 4401, column: 12, scope: !16260)
!16264 = !DILocation(line: 4402, column: 8, scope: !16260)
!16265 = !DILocation(line: 4402, column: 13, scope: !16260)
!16266 = !DILocation(line: 4400, column: 11, scope: !16260)
!16267 = !DILocation(line: 4400, column: 9, scope: !16260)
!16268 = !DILocation(line: 4403, column: 8, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16260, file: !1, line: 4403, column: 8)
!16270 = !DILocation(line: 4403, column: 13, scope: !16269)
!16271 = !DILocation(line: 4403, column: 8, scope: !16260)
!16272 = !DILocation(line: 4404, column: 12, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16269, file: !1, line: 4403, column: 19)
!16274 = !DILocation(line: 4404, column: 18, scope: !16273)
!16275 = !DILocation(line: 4404, column: 5, scope: !16273)
!16276 = !DILocation(line: 4405, column: 20, scope: !16273)
!16277 = !DILocation(line: 4405, column: 9, scope: !16273)
!16278 = !DILocation(line: 4405, column: 7, scope: !16273)
!16279 = !DILocation(line: 4406, column: 9, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16273, file: !1, line: 4406, column: 9)
!16281 = !DILocation(line: 4406, column: 11, scope: !16280)
!16282 = !DILocation(line: 4406, column: 9, scope: !16273)
!16283 = !DILocation(line: 4407, column: 14, scope: !16280)
!16284 = !DILocation(line: 4407, column: 6, scope: !16280)
!16285 = !DILocation(line: 4408, column: 25, scope: !16273)
!16286 = !DILocation(line: 4408, column: 14, scope: !16273)
!16287 = !DILocation(line: 4408, column: 12, scope: !16273)
!16288 = !DILocation(line: 4408, column: 7, scope: !16273)
!16289 = !DILocation(line: 4409, column: 33, scope: !16273)
!16290 = !DILocation(line: 4410, column: 9, scope: !16273)
!16291 = !DILocation(line: 4410, column: 23, scope: !16273)
!16292 = !DILocation(line: 4410, column: 27, scope: !16273)
!16293 = !DILocation(line: 4411, column: 25, scope: !16273)
!16294 = !DILocation(line: 4411, column: 30, scope: !16273)
!16295 = !DILocation(line: 4409, column: 12, scope: !16273)
!16296 = !DILocation(line: 4409, column: 10, scope: !16273)
!16297 = !DILocation(line: 4412, column: 4, scope: !16273)
!16298 = !DILocation(line: 4413, column: 9, scope: !16260)
!16299 = !DILocation(line: 4413, column: 6, scope: !16260)
!16300 = !DILocation(line: 4414, column: 24, scope: !16260)
!16301 = !DILocation(line: 4414, column: 30, scope: !16260)
!16302 = !DILocation(line: 4414, column: 43, scope: !16260)
!16303 = !DILocation(line: 4414, column: 4, scope: !16260)
!16304 = !DILocation(line: 4414, column: 10, scope: !16260)
!16305 = !DILocation(line: 4414, column: 22, scope: !16260)
!16306 = !DILocation(line: 4415, column: 3, scope: !16260)
!16307 = !DILocation(line: 4415, column: 12, scope: !16308)
!16308 = !DILexicalBlockFile(scope: !16236, file: !1, discriminator: 1)
!16309 = !DILocation(line: 4415, column: 18, scope: !16308)
!16310 = !DILocation(line: 4415, column: 30, scope: !16308)
!16311 = !DILocation(line: 4415, column: 3, scope: !16308)
!16312 = !DILocation(line: 4416, column: 2, scope: !16236)
!16313 = !DILocation(line: 4392, column: 41, scope: !16314)
!16314 = !DILexicalBlockFile(scope: !16229, file: !1, discriminator: 2)
!16315 = !DILocation(line: 4392, column: 2, scope: !16314)
!16316 = !DILocation(line: 4417, column: 9, scope: !925)
!16317 = !DILocation(line: 4417, column: 15, scope: !925)
!16318 = !DILocation(line: 4417, column: 2, scope: !925)
!16319 = !DILocation(line: 4418, column: 21, scope: !925)
!16320 = !DILocation(line: 4418, column: 10, scope: !925)
!16321 = !DILocation(line: 4418, column: 2, scope: !925)
!16322 = !DILocation(line: 4419, column: 1, scope: !925)
!16323 = !DILocalVariable(name: "a", arg: 1, scope: !930, file: !1, line: 7246, type: !367)
!16324 = !DILocation(line: 7246, column: 41, scope: !930)
!16325 = !DILocalVariable(name: "iso9660", scope: !930, file: !1, line: 7248, type: !530)
!16326 = !DILocation(line: 7248, column: 18, scope: !930)
!16327 = !DILocation(line: 7248, column: 28, scope: !930)
!16328 = !DILocation(line: 7248, column: 31, scope: !930)
!16329 = !DILocalVariable(name: "block", scope: !930, file: !1, line: 7249, type: !544)
!16330 = !DILocation(line: 7249, column: 17, scope: !930)
!16331 = !DILocalVariable(name: "p", scope: !930, file: !1, line: 7250, type: !544)
!16332 = !DILocation(line: 7250, column: 17, scope: !930)
!16333 = !DILocalVariable(name: "sum", scope: !930, file: !1, line: 7251, type: !307)
!16334 = !DILocation(line: 7251, column: 11, scope: !930)
!16335 = !DILocalVariable(name: "wp", scope: !930, file: !1, line: 7251, type: !565)
!16336 = !DILocation(line: 7251, column: 17, scope: !930)
!16337 = !DILocation(line: 7253, column: 21, scope: !930)
!16338 = !DILocation(line: 7253, column: 10, scope: !930)
!16339 = !DILocation(line: 7253, column: 8, scope: !930)
!16340 = !DILocation(line: 7254, column: 9, scope: !930)
!16341 = !DILocation(line: 7254, column: 2, scope: !930)
!16342 = !DILocation(line: 7255, column: 6, scope: !930)
!16343 = !DILocation(line: 7255, column: 4, scope: !930)
!16344 = !DILocation(line: 7260, column: 2, scope: !930)
!16345 = !DILocation(line: 7260, column: 7, scope: !930)
!16346 = !DILocation(line: 7262, column: 9, scope: !930)
!16347 = !DILocation(line: 7262, column: 18, scope: !930)
!16348 = !DILocation(line: 7262, column: 28, scope: !930)
!16349 = !DILocation(line: 7262, column: 2, scope: !930)
!16350 = !DILocation(line: 7262, column: 7, scope: !930)
!16351 = !DILocation(line: 7264, column: 9, scope: !930)
!16352 = !DILocation(line: 7264, column: 14, scope: !930)
!16353 = !DILocation(line: 7264, column: 2, scope: !930)
!16354 = !DILocation(line: 7264, column: 7, scope: !930)
!16355 = !DILocation(line: 7266, column: 6, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !930, file: !1, line: 7266, column: 6)
!16357 = !DILocation(line: 7266, column: 47, scope: !16356)
!16358 = !DILocation(line: 7266, column: 6, scope: !930)
!16359 = !DILocation(line: 7267, column: 19, scope: !16356)
!16360 = !DILocation(line: 7267, column: 20, scope: !16356)
!16361 = !DILocation(line: 7267, column: 24, scope: !16356)
!16362 = !DILocation(line: 7267, column: 33, scope: !16356)
!16363 = !DILocation(line: 7267, column: 43, scope: !16356)
!16364 = !DILocation(line: 7267, column: 46, scope: !16356)
!16365 = !DILocation(line: 7267, column: 3, scope: !16356)
!16366 = !DILocation(line: 7268, column: 2, scope: !930)
!16367 = !DILocation(line: 7268, column: 8, scope: !930)
!16368 = !DILocation(line: 7270, column: 10, scope: !930)
!16369 = !DILocation(line: 7270, column: 16, scope: !930)
!16370 = !DILocation(line: 7270, column: 2, scope: !930)
!16371 = !DILocation(line: 7270, column: 8, scope: !930)
!16372 = !DILocation(line: 7272, column: 2, scope: !930)
!16373 = !DILocation(line: 7272, column: 8, scope: !930)
!16374 = !DILocation(line: 7273, column: 2, scope: !930)
!16375 = !DILocation(line: 7273, column: 8, scope: !930)
!16376 = !DILocation(line: 7275, column: 6, scope: !930)
!16377 = !DILocation(line: 7276, column: 19, scope: !930)
!16378 = !DILocation(line: 7276, column: 7, scope: !930)
!16379 = !DILocation(line: 7276, column: 5, scope: !930)
!16380 = !DILocation(line: 7277, column: 2, scope: !930)
!16381 = !DILocation(line: 7277, column: 9, scope: !16382)
!16382 = !DILexicalBlockFile(scope: !930, file: !1, discriminator: 1)
!16383 = !DILocation(line: 7277, column: 27, scope: !16382)
!16384 = !DILocation(line: 7277, column: 14, scope: !16382)
!16385 = !DILocation(line: 7277, column: 12, scope: !16382)
!16386 = !DILocation(line: 7277, column: 2, scope: !16382)
!16387 = !DILocation(line: 7278, column: 28, scope: !930)
!16388 = !DILocation(line: 7278, column: 26, scope: !930)
!16389 = !DILocation(line: 7278, column: 10, scope: !930)
!16390 = !DILocation(line: 7278, column: 7, scope: !930)
!16391 = !DILocation(line: 7277, column: 2, scope: !16392)
!16392 = !DILexicalBlockFile(scope: !930, file: !1, discriminator: 2)
!16393 = !DILocation(line: 7279, column: 15, scope: !930)
!16394 = !DILocation(line: 7279, column: 28, scope: !930)
!16395 = !DILocation(line: 7279, column: 27, scope: !930)
!16396 = !DILocation(line: 7279, column: 33, scope: !930)
!16397 = !DILocation(line: 7279, column: 26, scope: !930)
!16398 = !DILocation(line: 7279, column: 2, scope: !930)
!16399 = !DILocation(line: 7284, column: 7, scope: !930)
!16400 = !DILocation(line: 7284, column: 4, scope: !930)
!16401 = !DILocation(line: 7286, column: 2, scope: !930)
!16402 = !DILocation(line: 7286, column: 7, scope: !930)
!16403 = !DILocation(line: 7288, column: 9, scope: !930)
!16404 = !DILocation(line: 7288, column: 18, scope: !930)
!16405 = !DILocation(line: 7288, column: 28, scope: !930)
!16406 = !DILocation(line: 7288, column: 2, scope: !930)
!16407 = !DILocation(line: 7288, column: 7, scope: !930)
!16408 = !DILocation(line: 7290, column: 6, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !930, file: !1, line: 7290, column: 6)
!16410 = !DILocation(line: 7290, column: 15, scope: !16409)
!16411 = !DILocation(line: 7290, column: 25, scope: !16409)
!16412 = !DILocation(line: 7290, column: 36, scope: !16409)
!16413 = !DILocation(line: 7290, column: 6, scope: !930)
!16414 = !DILocation(line: 7291, column: 16, scope: !16409)
!16415 = !DILocation(line: 7291, column: 22, scope: !16409)
!16416 = !DILocation(line: 7291, column: 31, scope: !16409)
!16417 = !DILocation(line: 7291, column: 41, scope: !16409)
!16418 = !DILocation(line: 7291, column: 3, scope: !16409)
!16419 = !DILocation(line: 7293, column: 16, scope: !16409)
!16420 = !DILocation(line: 7293, column: 3, scope: !16409)
!16421 = !DILocation(line: 7295, column: 9, scope: !930)
!16422 = !DILocation(line: 7295, column: 18, scope: !930)
!16423 = !DILocation(line: 7295, column: 28, scope: !930)
!16424 = !DILocation(line: 7295, column: 2, scope: !930)
!16425 = !DILocation(line: 7295, column: 7, scope: !930)
!16426 = !DILocation(line: 7297, column: 2, scope: !930)
!16427 = !DILocation(line: 7297, column: 7, scope: !930)
!16428 = !DILocation(line: 7299, column: 6, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !930, file: !1, line: 7299, column: 6)
!16430 = !DILocation(line: 7299, column: 15, scope: !16429)
!16431 = !DILocation(line: 7299, column: 25, scope: !16429)
!16432 = !DILocation(line: 7299, column: 36, scope: !16429)
!16433 = !DILocation(line: 7299, column: 6, scope: !930)
!16434 = !DILocation(line: 7300, column: 16, scope: !16429)
!16435 = !DILocation(line: 7300, column: 22, scope: !16429)
!16436 = !DILocation(line: 7300, column: 31, scope: !16429)
!16437 = !DILocation(line: 7300, column: 41, scope: !16429)
!16438 = !DILocation(line: 7300, column: 3, scope: !16429)
!16439 = !DILocation(line: 7302, column: 16, scope: !16429)
!16440 = !DILocation(line: 7302, column: 3, scope: !16429)
!16441 = !DILocation(line: 7304, column: 15, scope: !930)
!16442 = !DILocation(line: 7305, column: 6, scope: !930)
!16443 = !DILocation(line: 7305, column: 15, scope: !930)
!16444 = !DILocation(line: 7305, column: 25, scope: !930)
!16445 = !DILocation(line: 7305, column: 31, scope: !930)
!16446 = !DILocation(line: 7305, column: 37, scope: !930)
!16447 = !DILocation(line: 7305, column: 45, scope: !930)
!16448 = !DILocation(line: 7304, column: 2, scope: !930)
!16449 = !DILocation(line: 7307, column: 10, scope: !930)
!16450 = !DILocation(line: 7307, column: 2, scope: !930)
!16451 = !DILocation(line: 7309, column: 21, scope: !930)
!16452 = !DILocation(line: 7309, column: 10, scope: !930)
!16453 = !DILocation(line: 7309, column: 2, scope: !930)
!16454 = !DILocalVariable(name: "a", arg: 1, scope: !934, file: !1, line: 4480, type: !367)
!16455 = !DILocation(line: 4480, column: 43, scope: !934)
!16456 = !DILocalVariable(name: "offset", arg: 2, scope: !934, file: !1, line: 4480, type: !36)
!16457 = !DILocation(line: 4480, column: 54, scope: !934)
!16458 = !DILocalVariable(name: "size", arg: 3, scope: !934, file: !1, line: 4480, type: !36)
!16459 = !DILocation(line: 4480, column: 70, scope: !934)
!16460 = !DILocalVariable(name: "iso9660", scope: !934, file: !1, line: 4482, type: !530)
!16461 = !DILocation(line: 4482, column: 18, scope: !934)
!16462 = !DILocation(line: 4482, column: 28, scope: !934)
!16463 = !DILocation(line: 4482, column: 31, scope: !934)
!16464 = !DILocalVariable(name: "r", scope: !934, file: !1, line: 4483, type: !31)
!16465 = !DILocation(line: 4483, column: 6, scope: !934)
!16466 = !DILocation(line: 4485, column: 8, scope: !934)
!16467 = !DILocation(line: 4485, column: 17, scope: !934)
!16468 = !DILocation(line: 4485, column: 26, scope: !934)
!16469 = !DILocation(line: 4485, column: 2, scope: !934)
!16470 = !DILocation(line: 4487, column: 2, scope: !934)
!16471 = !DILocation(line: 4487, column: 9, scope: !16472)
!16472 = !DILexicalBlockFile(scope: !934, file: !1, discriminator: 1)
!16473 = !DILocation(line: 4487, column: 2, scope: !16472)
!16474 = !DILocalVariable(name: "rsize", scope: !16475, file: !1, line: 4488, type: !23)
!16475 = distinct !DILexicalBlock(scope: !934, file: !1, line: 4487, column: 15)
!16476 = !DILocation(line: 4488, column: 10, scope: !16475)
!16477 = !DILocalVariable(name: "rs", scope: !16475, file: !1, line: 4489, type: !396)
!16478 = !DILocation(line: 4489, column: 11, scope: !16475)
!16479 = !DILocalVariable(name: "wb", scope: !16475, file: !1, line: 4490, type: !544)
!16480 = !DILocation(line: 4490, column: 18, scope: !16475)
!16481 = !DILocation(line: 4492, column: 19, scope: !16475)
!16482 = !DILocation(line: 4492, column: 8, scope: !16475)
!16483 = !DILocation(line: 4492, column: 6, scope: !16475)
!16484 = !DILocation(line: 4493, column: 11, scope: !16475)
!16485 = !DILocation(line: 4493, column: 9, scope: !16475)
!16486 = !DILocation(line: 4494, column: 7, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16475, file: !1, line: 4494, column: 7)
!16488 = !DILocation(line: 4494, column: 23, scope: !16487)
!16489 = !DILocation(line: 4494, column: 13, scope: !16487)
!16490 = !DILocation(line: 4494, column: 7, scope: !16475)
!16491 = !DILocation(line: 4495, column: 20, scope: !16487)
!16492 = !DILocation(line: 4495, column: 10, scope: !16487)
!16493 = !DILocation(line: 4495, column: 4, scope: !16487)
!16494 = !DILocation(line: 4496, column: 13, scope: !16475)
!16495 = !DILocation(line: 4496, column: 22, scope: !16475)
!16496 = !DILocation(line: 4496, column: 31, scope: !16475)
!16497 = !DILocation(line: 4496, column: 35, scope: !16475)
!16498 = !DILocation(line: 4496, column: 8, scope: !16475)
!16499 = !DILocation(line: 4496, column: 6, scope: !16475)
!16500 = !DILocation(line: 4497, column: 7, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16475, file: !1, line: 4497, column: 7)
!16502 = !DILocation(line: 4497, column: 10, scope: !16501)
!16503 = !DILocation(line: 4497, column: 7, scope: !16475)
!16504 = !DILocation(line: 4498, column: 23, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16501, file: !1, line: 4497, column: 16)
!16506 = !DILocation(line: 4498, column: 26, scope: !16505)
!16507 = !DILocation(line: 4498, column: 35, scope: !16505)
!16508 = !DILocation(line: 4499, column: 52, scope: !16505)
!16509 = !DILocation(line: 4498, column: 4, scope: !16510)
!16510 = !DILexicalBlockFile(scope: !16505, file: !1, discriminator: 1)
!16511 = !DILocation(line: 4500, column: 4, scope: !16505)
!16512 = !DILocation(line: 4502, column: 11, scope: !16475)
!16513 = !DILocation(line: 4502, column: 8, scope: !16475)
!16514 = !DILocation(line: 4503, column: 18, scope: !16475)
!16515 = !DILocation(line: 4503, column: 21, scope: !16475)
!16516 = !DILocation(line: 4503, column: 7, scope: !16475)
!16517 = !DILocation(line: 4503, column: 5, scope: !16475)
!16518 = !DILocation(line: 4504, column: 7, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16475, file: !1, line: 4504, column: 7)
!16520 = !DILocation(line: 4504, column: 9, scope: !16519)
!16521 = !DILocation(line: 4504, column: 7, scope: !16475)
!16522 = !DILocation(line: 4505, column: 12, scope: !16519)
!16523 = !DILocation(line: 4505, column: 4, scope: !16519)
!16524 = !DILocation(line: 4487, column: 2, scope: !16525)
!16525 = !DILexicalBlockFile(scope: !934, file: !1, discriminator: 2)
!16526 = !DILocation(line: 4507, column: 2, scope: !934)
!16527 = !DILocation(line: 4508, column: 1, scope: !934)
!16528 = !DILocalVariable(name: "pp", arg: 1, scope: !931, file: !628, line: 101, type: !122)
!16529 = !DILocation(line: 101, column: 29, scope: !931)
!16530 = !DILocalVariable(name: "p", scope: !931, file: !628, line: 103, type: !453)
!16531 = !DILocation(line: 103, column: 23, scope: !931)
!16532 = !DILocation(line: 103, column: 50, scope: !931)
!16533 = !DILocalVariable(name: "p1", scope: !931, file: !628, line: 108, type: !43)
!16534 = !DILocation(line: 108, column: 15, scope: !931)
!16535 = !DILocation(line: 108, column: 20, scope: !931)
!16536 = !DILocalVariable(name: "p0", scope: !931, file: !628, line: 109, type: !43)
!16537 = !DILocation(line: 109, column: 15, scope: !931)
!16538 = !DILocation(line: 109, column: 20, scope: !931)
!16539 = !DILocation(line: 111, column: 11, scope: !931)
!16540 = !DILocation(line: 111, column: 14, scope: !931)
!16541 = !DILocation(line: 111, column: 22, scope: !931)
!16542 = !DILocation(line: 111, column: 20, scope: !931)
!16543 = !DILocation(line: 111, column: 9, scope: !931)
!16544 = !DILocation(line: 111, column: 2, scope: !931)
!16545 = !DILocalVariable(name: "a", arg: 1, scope: !938, file: !1, line: 7782, type: !367)
!16546 = !DILocation(line: 7782, column: 35, scope: !938)
!16547 = !DILocalVariable(name: "iso9660", scope: !938, file: !1, line: 7784, type: !530)
!16548 = !DILocation(line: 7784, column: 18, scope: !938)
!16549 = !DILocation(line: 7784, column: 28, scope: !938)
!16550 = !DILocation(line: 7784, column: 31, scope: !938)
!16551 = !DILocalVariable(name: "ret", scope: !938, file: !1, line: 7785, type: !31)
!16552 = !DILocation(line: 7785, column: 6, scope: !938)
!16553 = !DILocation(line: 7787, column: 7, scope: !938)
!16554 = !DILocation(line: 7787, column: 16, scope: !938)
!16555 = !DILocation(line: 7787, column: 23, scope: !938)
!16556 = !DILocation(line: 7787, column: 2, scope: !938)
!16557 = !DILocation(line: 7788, column: 6, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !938, file: !1, line: 7788, column: 6)
!16559 = !DILocation(line: 7788, column: 15, scope: !16558)
!16560 = !DILocation(line: 7788, column: 22, scope: !16558)
!16561 = !DILocation(line: 7788, column: 35, scope: !16558)
!16562 = !DILocation(line: 7789, column: 19, scope: !16558)
!16563 = !DILocation(line: 7789, column: 28, scope: !16558)
!16564 = !DILocation(line: 7789, column: 35, scope: !16558)
!16565 = !DILocation(line: 7789, column: 6, scope: !16558)
!16566 = !DILocation(line: 7789, column: 44, scope: !16558)
!16567 = !DILocation(line: 7788, column: 6, scope: !16568)
!16568 = !DILexicalBlockFile(scope: !938, file: !1, discriminator: 1)
!16569 = !DILocation(line: 7790, column: 22, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16558, file: !1, line: 7789, column: 53)
!16571 = !DILocation(line: 7790, column: 25, scope: !16570)
!16572 = !DILocation(line: 7790, column: 3, scope: !16570)
!16573 = !DILocation(line: 7792, column: 7, scope: !16570)
!16574 = !DILocation(line: 7793, column: 2, scope: !16570)
!16575 = !DILocation(line: 7794, column: 2, scope: !938)
!16576 = !DILocation(line: 7794, column: 11, scope: !938)
!16577 = !DILocation(line: 7794, column: 18, scope: !938)
!16578 = !DILocation(line: 7794, column: 33, scope: !938)
!16579 = !DILocation(line: 7795, column: 2, scope: !938)
!16580 = !DILocation(line: 7795, column: 11, scope: !938)
!16581 = !DILocation(line: 7795, column: 18, scope: !938)
!16582 = !DILocation(line: 7795, column: 31, scope: !938)
!16583 = !DILocation(line: 7796, column: 10, scope: !938)
!16584 = !DILocation(line: 7796, column: 2, scope: !938)
!16585 = !DILocalVariable(name: "isoent", arg: 1, scope: !939, file: !1, line: 5156, type: !76)
!16586 = !DILocation(line: 5156, column: 32, scope: !939)
!16587 = !DILocalVariable(name: "np", scope: !939, file: !1, line: 5158, type: !76)
!16588 = !DILocation(line: 5158, column: 17, scope: !939)
!16589 = !DILocalVariable(name: "np_temp", scope: !939, file: !1, line: 5158, type: !76)
!16590 = !DILocation(line: 5158, column: 22, scope: !939)
!16591 = !DILocation(line: 5160, column: 6, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !939, file: !1, line: 5160, column: 6)
!16593 = !DILocation(line: 5160, column: 13, scope: !16592)
!16594 = !DILocation(line: 5160, column: 6, scope: !939)
!16595 = !DILocation(line: 5161, column: 3, scope: !16592)
!16596 = !DILocation(line: 5162, column: 7, scope: !939)
!16597 = !DILocation(line: 5162, column: 5, scope: !939)
!16598 = !DILocation(line: 5163, column: 2, scope: !939)
!16599 = !DILocation(line: 5164, column: 7, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16601, file: !1, line: 5164, column: 7)
!16601 = distinct !DILexicalBlock(scope: !16602, file: !1, line: 5163, column: 11)
!16602 = distinct !DILexicalBlock(scope: !16603, file: !1, line: 5163, column: 2)
!16603 = distinct !DILexicalBlock(scope: !939, file: !1, line: 5163, column: 2)
!16604 = !DILocation(line: 5164, column: 11, scope: !16600)
!16605 = !DILocation(line: 5164, column: 7, scope: !16601)
!16606 = !DILocation(line: 5165, column: 8, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16608, file: !1, line: 5165, column: 8)
!16608 = distinct !DILexicalBlock(scope: !16600, file: !1, line: 5164, column: 16)
!16609 = !DILocation(line: 5165, column: 12, scope: !16607)
!16610 = !DILocation(line: 5165, column: 21, scope: !16607)
!16611 = !DILocation(line: 5165, column: 27, scope: !16607)
!16612 = !DILocation(line: 5165, column: 8, scope: !16608)
!16613 = !DILocation(line: 5167, column: 10, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16607, file: !1, line: 5165, column: 36)
!16615 = !DILocation(line: 5167, column: 14, scope: !16614)
!16616 = !DILocation(line: 5167, column: 23, scope: !16614)
!16617 = !DILocation(line: 5167, column: 8, scope: !16614)
!16618 = !DILocation(line: 5168, column: 5, scope: !16614)
!16619 = !DILocation(line: 5170, column: 3, scope: !16608)
!16620 = !DILocation(line: 5171, column: 3, scope: !16601)
!16621 = !DILocation(line: 5172, column: 14, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16623, file: !1, line: 5171, column: 12)
!16623 = distinct !DILexicalBlock(scope: !16624, file: !1, line: 5171, column: 3)
!16624 = distinct !DILexicalBlock(scope: !16601, file: !1, line: 5171, column: 3)
!16625 = !DILocation(line: 5172, column: 12, scope: !16622)
!16626 = !DILocation(line: 5173, column: 8, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16622, file: !1, line: 5173, column: 8)
!16628 = !DILocation(line: 5173, column: 12, scope: !16627)
!16629 = !DILocation(line: 5173, column: 19, scope: !16627)
!16630 = !DILocation(line: 5173, column: 8, scope: !16622)
!16631 = !DILocation(line: 5175, column: 10, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16627, file: !1, line: 5173, column: 28)
!16633 = !DILocation(line: 5175, column: 14, scope: !16632)
!16634 = !DILocation(line: 5175, column: 8, scope: !16632)
!16635 = !DILocation(line: 5176, column: 18, scope: !16632)
!16636 = !DILocation(line: 5176, column: 5, scope: !16632)
!16637 = !DILocation(line: 5177, column: 9, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16632, file: !1, line: 5177, column: 9)
!16639 = !DILocation(line: 5177, column: 15, scope: !16638)
!16640 = !DILocation(line: 5177, column: 12, scope: !16638)
!16641 = !DILocation(line: 5177, column: 9, scope: !16632)
!16642 = !DILocation(line: 5178, column: 6, scope: !16638)
!16643 = !DILocation(line: 5179, column: 4, scope: !16632)
!16644 = !DILocation(line: 5180, column: 10, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16627, file: !1, line: 5179, column: 11)
!16646 = !DILocation(line: 5180, column: 14, scope: !16645)
!16647 = !DILocation(line: 5180, column: 8, scope: !16645)
!16648 = !DILocation(line: 5181, column: 18, scope: !16645)
!16649 = !DILocation(line: 5181, column: 5, scope: !16645)
!16650 = !DILocation(line: 5182, column: 5, scope: !16645)
!16651 = !DILocation(line: 5171, column: 3, scope: !16652)
!16652 = !DILexicalBlockFile(scope: !16623, file: !1, discriminator: 1)
!16653 = !DILocation(line: 5163, column: 2, scope: !16654)
!16654 = !DILexicalBlockFile(scope: !16602, file: !1, discriminator: 1)
!16655 = !DILocation(line: 5186, column: 1, scope: !939)
!16656 = !DILocalVariable(name: "iso9660", arg: 1, scope: !940, file: !1, line: 4597, type: !530)
!16657 = !DILocation(line: 4597, column: 42, scope: !940)
!16658 = !DILocalVariable(name: "file", scope: !940, file: !1, line: 4599, type: !7)
!16659 = !DILocation(line: 4599, column: 18, scope: !940)
!16660 = !DILocalVariable(name: "file_next", scope: !940, file: !1, line: 4599, type: !7)
!16661 = !DILocation(line: 4599, column: 25, scope: !940)
!16662 = !DILocation(line: 4601, column: 9, scope: !940)
!16663 = !DILocation(line: 4601, column: 18, scope: !940)
!16664 = !DILocation(line: 4601, column: 32, scope: !940)
!16665 = !DILocation(line: 4601, column: 7, scope: !940)
!16666 = !DILocation(line: 4602, column: 2, scope: !940)
!16667 = !DILocation(line: 4602, column: 9, scope: !16668)
!16668 = !DILexicalBlockFile(scope: !940, file: !1, discriminator: 1)
!16669 = !DILocation(line: 4602, column: 14, scope: !16668)
!16670 = !DILocation(line: 4602, column: 2, scope: !16668)
!16671 = !DILocation(line: 4603, column: 15, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !940, file: !1, line: 4602, column: 23)
!16673 = !DILocation(line: 4603, column: 21, scope: !16672)
!16674 = !DILocation(line: 4603, column: 13, scope: !16672)
!16675 = !DILocation(line: 4604, column: 16, scope: !16672)
!16676 = !DILocation(line: 4604, column: 3, scope: !16672)
!16677 = !DILocation(line: 4605, column: 10, scope: !16672)
!16678 = !DILocation(line: 4605, column: 8, scope: !16672)
!16679 = !DILocation(line: 4602, column: 2, scope: !16680)
!16680 = !DILexicalBlockFile(scope: !940, file: !1, discriminator: 2)
!16681 = !DILocation(line: 4607, column: 1, scope: !940)
!16682 = !DILocalVariable(name: "iso9660", arg: 1, scope: !941, file: !1, line: 5095, type: !530)
!16683 = !DILocation(line: 5095, column: 40, scope: !941)
!16684 = !DILocalVariable(name: "n", scope: !941, file: !1, line: 5097, type: !85)
!16685 = !DILocation(line: 5097, column: 26, scope: !941)
!16686 = !DILocalVariable(name: "next", scope: !941, file: !1, line: 5097, type: !85)
!16687 = !DILocation(line: 5097, column: 30, scope: !941)
!16688 = !DILocation(line: 5099, column: 11, scope: !16689)
!16689 = distinct !DILexicalBlock(scope: !941, file: !1, line: 5099, column: 2)
!16690 = !DILocation(line: 5099, column: 9, scope: !16689)
!16691 = !DILocation(line: 5099, column: 7, scope: !16689)
!16692 = !DILocation(line: 5099, column: 61, scope: !16693)
!16693 = !DILexicalBlockFile(scope: !16694, file: !1, discriminator: 1)
!16694 = distinct !DILexicalBlock(scope: !16689, file: !1, line: 5099, column: 2)
!16695 = !DILocation(line: 5099, column: 2, scope: !16693)
!16696 = !DILocation(line: 5100, column: 38, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16694, file: !1, line: 5099, column: 65)
!16698 = !DILocation(line: 5100, column: 47, scope: !16697)
!16699 = !DILocation(line: 5101, column: 7, scope: !16697)
!16700 = !DILocation(line: 5100, column: 10, scope: !16697)
!16701 = !DILocation(line: 5100, column: 8, scope: !16697)
!16702 = !DILocation(line: 5102, column: 8, scope: !16697)
!16703 = !DILocation(line: 5102, column: 3, scope: !16697)
!16704 = !DILocation(line: 5103, column: 7, scope: !16697)
!16705 = !DILocation(line: 5103, column: 5, scope: !16697)
!16706 = !DILocation(line: 5099, column: 2, scope: !16707)
!16707 = !DILexicalBlockFile(scope: !16694, file: !1, discriminator: 2)
!16708 = !DILocation(line: 5105, column: 1, scope: !941)
!16709 = !DILocalVariable(name: "n1", arg: 1, scope: !945, file: !1, line: 5065, type: !114)
!16710 = !DILocation(line: 5065, column: 51, scope: !945)
!16711 = !DILocalVariable(name: "n2", arg: 2, scope: !945, file: !1, line: 5066, type: !114)
!16712 = !DILocation(line: 5066, column: 35, scope: !945)
!16713 = !DILocalVariable(name: "h1", scope: !945, file: !1, line: 5068, type: !566)
!16714 = !DILocation(line: 5068, column: 25, scope: !945)
!16715 = !DILocation(line: 5068, column: 55, scope: !945)
!16716 = !DILocation(line: 5068, column: 30, scope: !945)
!16717 = !DILocalVariable(name: "h2", scope: !945, file: !1, line: 5069, type: !566)
!16718 = !DILocation(line: 5069, column: 25, scope: !945)
!16719 = !DILocation(line: 5069, column: 55, scope: !945)
!16720 = !DILocation(line: 5069, column: 30, scope: !945)
!16721 = !DILocation(line: 5071, column: 40, scope: !945)
!16722 = !DILocation(line: 5071, column: 44, scope: !945)
!16723 = !DILocation(line: 5071, column: 54, scope: !945)
!16724 = !DILocation(line: 5071, column: 61, scope: !945)
!16725 = !DILocation(line: 5071, column: 17, scope: !945)
!16726 = !DILocation(line: 5072, column: 33, scope: !945)
!16727 = !DILocation(line: 5072, column: 37, scope: !945)
!16728 = !DILocation(line: 5072, column: 47, scope: !945)
!16729 = !DILocation(line: 5072, column: 54, scope: !945)
!16730 = !DILocation(line: 5072, column: 10, scope: !945)
!16731 = !DILocation(line: 5071, column: 10, scope: !945)
!16732 = !DILocation(line: 5071, column: 2, scope: !945)
!16733 = !DILocalVariable(name: "n", arg: 1, scope: !946, file: !1, line: 5076, type: !114)
!16734 = !DILocation(line: 5076, column: 50, scope: !946)
!16735 = !DILocalVariable(name: "key", arg: 2, scope: !946, file: !1, line: 5076, type: !122)
!16736 = !DILocation(line: 5076, column: 65, scope: !946)
!16737 = !DILocalVariable(name: "h", scope: !946, file: !1, line: 5078, type: !566)
!16738 = !DILocation(line: 5078, column: 25, scope: !946)
!16739 = !DILocation(line: 5078, column: 54, scope: !946)
!16740 = !DILocation(line: 5078, column: 29, scope: !946)
!16741 = !DILocation(line: 5080, column: 40, scope: !946)
!16742 = !DILocation(line: 5080, column: 43, scope: !946)
!16743 = !DILocation(line: 5080, column: 53, scope: !946)
!16744 = !DILocation(line: 5080, column: 60, scope: !946)
!16745 = !DILocation(line: 5080, column: 17, scope: !946)
!16746 = !DILocation(line: 5081, column: 24, scope: !946)
!16747 = !DILocation(line: 5080, column: 10, scope: !16748)
!16748 = !DILexicalBlockFile(scope: !946, file: !1, discriminator: 1)
!16749 = !DILocation(line: 5080, column: 2, scope: !946)
